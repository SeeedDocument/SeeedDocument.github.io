{
    "docs": [
        {
            "location": "/", 
            "text": "Platform\n\n\n\n\n\n\n\n\nArduino\n\n\nBeaglebone\n\n\nRaspberry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWio\n\n\nmbed\n\n\nRePhone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinkIt\n\n\nReSpeaker\n\n\nShield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEssentials\n\n\nWireless\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove\n\n\n\n\n\n\n\n\nSensor\n\n\nActuator\n\n\nDisplay\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication\n\n\nOthers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIOT\n\n\n\n\n\n\n\n\nIOT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaker Pro\n\n\n\n\n\n\n\n\nMaker Pro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTutorial\n\n\n\n\n\n\n\n\nTutorial\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u534f\u8bae\n\n\nCopyright \n 2018-2017 Seeed Inc. (\nhttps://www.seeedstudio.com\n)\n\n\n\u6587\u6863\u53ca\u56fe\u7247\n\n\n\n\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece \nCreative Commons Attribution-ShareAlike 4.0 International License\n. \n \n\n\u7684\u534f\u8bae\n\n\n\u8054\u7cfb\u6211\u4eec\n\n\n\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "Seeed\u6587\u6863\u4e2d\u6587\u7ad9\u70b9\u4ecb\u7ecd"
        }, 
        {
            "location": "/#platform", 
            "text": "Arduino  Beaglebone  Raspberry               Wio  mbed  RePhone               LinkIt  ReSpeaker  Shield               Essentials  Wireless", 
            "title": "Platform"
        }, 
        {
            "location": "/#grove", 
            "text": "Sensor  Actuator  Display               Communication  Others", 
            "title": "Grove"
        }, 
        {
            "location": "/#iot", 
            "text": "IOT", 
            "title": "IOT"
        }, 
        {
            "location": "/#maker-pro", 
            "text": "Maker Pro", 
            "title": "Maker Pro"
        }, 
        {
            "location": "/#tutorial", 
            "text": "Tutorial", 
            "title": "Tutorial"
        }, 
        {
            "location": "/#_1", 
            "text": "Copyright   2018-2017 Seeed Inc. ( https://www.seeedstudio.com )", 
            "title": "\u534f\u8bae"
        }, 
        {
            "location": "/#_2", 
            "text": "\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece  Creative Commons Attribution-ShareAlike 4.0 International License .    \n\u7684\u534f\u8bae", 
            "title": "\u6587\u6863\u53ca\u56fe\u7247"
        }, 
        {
            "location": "/#_3", 
            "text": "\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "\u8054\u7cfb\u6211\u4eec"
        }, 
        {
            "location": "/Arduino/", 
            "text": "Arduino\u662f\u57fa\u4e8e\u6613\u4e8e\u4f7f\u7528\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u7684\u5f00\u6e90\u539f\u578b\u5e73\u53f0\u3002\u56e0\u4e3a\u5b83\u662f\u5982\u6b64\u7075\u6d3b\u548c\u5f00\u6e90\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u6709\u5174\u8da3\u521b\u5efa\u4ea4\u4e92\u5f0f\u5bf9\u8c61\u6216\u73af\u5883\uff0c\u65e0\u8bba\u60a8\u662f\u827a\u672f\u5bb6\uff0c\u8bbe\u8ba1\u5e08\u8fd8\u662f\u4e1a\u4f59\u7231\u597d\u8005\uff0cArduino\u90fd\u662f\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u3002\n\n\nSeeed Studio\u7684\u5ea7\u53f3\u94ed\u4e4b\u4e00\u662f\u201c\u589e\u957f\u5dee\u5f02\u201d\uff0c\u73b0\u5728\u5df2\u6210\u4e3a\u516c\u53f8\u6587\u5316\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e0d\u4ec5\u4f53\u73b0\u5728\u6211\u4eec\u5728\u666e\u53ca\u5f00\u6e90\u6587\u5316\u65b9\u9762\u6240\u505a\u7684\u5de5\u4f5c\uff0c\u4e5f\u53cd\u6620\u5728\u6211\u4eec\u7684\u4ea7\u54c1\u4e2d\u3002\u81ea\u516c\u53f8\u6210\u7acb\u4ee5\u6765\uff0c\u6211\u4eec\u4e0d\u65ad\u521b\u5efa\u81ea\u5df1\u7684\u5f00\u653e\u5e73\u53f0\uff0c\u4e0e\u73b0\u6709\u7684\u5e73\u53f0\u4e0d\u540c\u3002\n\n\n\u5728Seeed\uff0c\u60a8\u4e0d\u4ec5\u53ef\u4ee5\u53d1\u73b0Arduino\u677f\uff0c\u5982Arduino Nano\u548cArduino Mega\uff0c\u8fd8\u6709\u8bb8\u591a\u677f\u5757\uff0c\u5982Seeed Studio\u548cArduino\u7684\u8054\u5408\u52aa\u529b\uff0c\u5982Seeeduino\u3002 Seeeduino\u4e0eArduino\u517c\u5bb9\uff0c\u5177\u6709\u66f4\u5f3a\u5927\u7684\u529f\u80fd\u548c\u66f4\u4f4e\u7684\u4ef7\u683c\u3002\u9996\u5148\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u5bf9\u5e94\u4e8eArduino Mega\u7684\u6700\u65b0\u7248\u672cSeeeduino V4.2\u6216Seeeduino Mega\u3002\n\n\n\u5668\u6750\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Seeeduino\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nSeeeduino_Cloud\n\n\nSeeeduino_LoRAWAN", 
            "title": "Arduino"
        }, 
        {
            "location": "/Arduino/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Seeeduino\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Seeeduino_Cloud  Seeeduino_LoRAWAN", 
            "title": "\u5668\u6750\u6e05\u5355"
        }, 
        {
            "location": "/Seeeduino_Cloud/", 
            "text": "Seeeduino Cloud\u662f\u57fa\u4e8e\nDragino WiFi IoT\u6a21\u5757HE\n\u548cATmega32u4 \u7684\u5fae\u63a7\u5236\u5668\u677f\u3002HE\u662f\u4e00\u79cd\u9ad8\u6027\u80fd\uff0c\u4f4e\u6210\u672c\u7684150M\uff0c2.4G WiFi\u6a21\u5757\uff0c\u8fd9\u610f\u5473\u7740\u4e2d\u6587\u7684\u201c\u6838\u5fc3\u201d\u548c\u5185\u90e8\u7684\u5f00\u6e90OpenWrt\u7cfb\u7edf\u3002Seeeduino Cloud\u4e5f\u662fArduino\u517c\u5bb9\u677f\uff0c\u4e0eGrove\uff0cShield\u548cIDE\uff08Arduino IDE 1.5.3\u53ca\u66f4\u9ad8\u7248\u672c\uff09100%\u517c\u5bb9\u3002\u9664\u4e86Arduino\u7684\u6b63\u5e38\u63a5\u53e3\uff0cSeeeduino Cloud\u5185\u7f6e\u4e86\u4ee5\u592a\u7f51\u548cWiFi\u652f\u6301\uff0c\u4e00\u4e2aUSB-A\u7aef\u53e3\uff0c\u975e\u5e38\u9002\u5408\u90a3\u4e9b\u9700\u8981\u7f51\u7edc\u8fde\u63a5\u548c\u5927\u5bb9\u91cf\u5b58\u50a8\u7684\u539f\u578b\u8bbe\u8ba1\u3002\u4f7fSeeeduino Cloud\u6210\u4e3a\u4e00\u4e2aIoT\u7f51\u5173\u4e5f\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7269\u8054\u7f51  \n\n\n\u667a\u80fd\u5bb6\u5c45\n\n\n\u5b66\u4e60\n\n\n\n\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\u3002\n\n\n\n\n\n\n\n\n\u7b80\u5355\u7684Wi-Fi Messager\n\n\n\u5c06\u6570\u636e\u53d1\u9001\u5230Google\u6587\u6863\n\n\n\u592a\u9633\u80fd\u7535\u6c60\u677f\u76d1\u63a7\u7cfb\u7edf\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u505a\u4e00\u4e2a\n\n\n\u9a6c\u4e0a\u505a\u4e00\u4e2a\n\n\n\u9a6c\u4e0a\u505a\u4e00\u4e2a\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u4e0eArduino Yun\u517c\u5bb9\n\n\n\u57fa\u4e8eDragino WiFi IoT\u6a21\u5757HE\n\n\n\u5185\u7f6e\u5f00\u6e90OpenWrt\u7cfb\u7edf\n\n\n\u652f\u6301 2.4Ghz WiFi, 802.11 b/g/n\n\n\n\u652f\u6301\u4ee5\u592a\u7f51\n\n\n\u652f\u6301 USB 2.0\n\n\n\u677f\u8f7dGrove\u8fde\u63a5\u5668\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\u56e0\u4e3aSeeeduino Cloud\u6709\u4e24\u4e2a\u5904\u7406\u5668\uff0c\u6240\u4ee5\u8fd9\u4e00\u8282\u663e\u793a\u4e86\u4e24\u4e2a\u5355\u72ec\u8868\u683c\u4e2d\u6bcf\u4e2a\u5904\u7406\u5668\u7684\u7279\u5f81\u3002\n\n\nDragino HE\u6a21\u5757\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nATHEROS AR9331\n\n\n\n\n\n\nClock Speed\n\n\n400MHz\n\n\n\n\n\n\nRAM\n\n\n64MB\n\n\n\n\n\n\nFlash\n\n\n16MB\n\n\n\n\n\n\nOS\n\n\nOpenWrt\n\n\n\n\n\n\nInterfaces\n\n\n2 x RJ45, 1 x USB Host, 1 x UART, 14 multiplex GPIOs\n\n\n\n\n\n\nPower\n\n\n3.3V Power Input\n\n\n\n\n\n\nWiFi\n\n\nSupport 150M 2.4Ghz WiFi, 802.11 b/g/n\n\n\n\n\n\n\n\n\nAVR Arduino\u5fae\u63a7\u5236\u5668\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nMicrocontroller\n\n\nATmega32u4\n\n\n\n\n\n\nFlash Memory\n\n\n32KB\n\n\n\n\n\n\nSRAM\n\n\n2.5kB\n\n\n\n\n\n\nEEPROM\n\n\n1kB\n\n\n\n\n\n\nClock Speed\n\n\n16MHz\n\n\n\n\n\n\nOperating Voltage\n\n\n5V\n\n\n\n\n\n\nDigital I/O Pins\n\n\n20\n\n\n\n\n\n\nPWM Channels\n\n\n7\n\n\n\n\n\n\nAnalog Input Channels\n\n\n12\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\u4e0b\u56fe\u663e\u793a\u4e86Seeeduino Cloud\u786c\u4ef6\u529f\u80fd\u7684\u6982\u8ff0\u3002\u5f15\u811a\u56fe\u4e2d\u663e\u793a\u4e86Seeeduino Cloud\u5404\u79cd\u5f15\u811a\u7684\u529f\u80fd\u3002\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u5feb\u901f\u53c2\u8003\u3002\n\n\n\n\n\n\nRJ45\u4ee5\u592a\u7f51\u7aef\u53e3\n\nLAN\u7aef\u53e3\u8fde\u63a5\u5230ATHEROS AR9331\uff0c\u5e76\u5177\u6709\u81ea\u5df1\u7684IP\u5730\u5740\uff0c\u53ef\u7528\u4e8eInternet\u8fde\u63a5\u548c\u8bbe\u5907\u7ba1\u7406\u3002\n\n\nUSB \u8f93\u5165\n\nUSB\u7aef\u53e3\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230PC\u8fdb\u884c\u7f16\u7a0b\u548c\u4e0a\u7535\u3002Micro USB\u662f\u5927\u591a\u6570Android\u624b\u673a\u548c\u5176\u4ed6\u8bbe\u5907\u4e2d\u666e\u904d\u5b58\u5728\u7684USB\u7248\u672c\u3002\u4f60\u5bb6\u91cc\u53ef\u80fd\u6709\u51e0\u5341\u6839\u8fd9\u4e9b\u6570\u636e\u7ebf\u3002\n\n\nUSB HOST\n\nSeeeduino Cloud\u63d0\u4f9bUSB HOST\u529f\u80fd\uff0c\u4f7f\u5176\u80fd\u591f\u8fde\u63a5\u5230\u5404\u79cdUSB\u8bbe\u5907\uff0c\u5982\u7f51\u7edc\u6444\u50cf\u5934\uff0cUSB\u9a71\u52a8\u5668\uff0c\u952e\u76d8\uff0c\u64cd\u7eb5\u6746\u7b49\u3002\n\n\n32U4 RST\n\n\u630932U4 Reset \u6309\u94ae\u5bf9ATmega32U4 MCU\u8fdb\u884c\u590d\u4f4d. \u901a\u5e38\uff0c\u5b83\u7528\u4e8e\u7a0b\u5e8f\u590d\u4f4d.\n\n\nSYS RST\n\n\u6309\u4e0b\u7cfb\u7edf\u590d\u4f4d\u6309\u94ae\u5c06\u91cd\u65b0\u542f\u52a8Linux\u7cfb\u7edf\u3002\n\n\nWi-Fi RST\n\nWi-Fi\u91cd\u7f6e\u6309\u94ae\u4ec5\u652f\u6301\u957f\u6309\u30025\u79d2\u949f\u540e\u6309\u4e0b\u5e76\u91ca\u653e\uff0c\u5c06\u91cd\u7f6eWiFi\u8bbe\u7f6e\u3002\u5176\u4ed6\u8bbe\u7f6e\u5c06\u88ab\u4fdd\u7559\u3002\u5982\u679c\u572830\u79d2\u540e\u6309\u4e0b\u5e76\u91ca\u653e\u6309\u94ae\uff0c\u5219\u4f1a\u5c06\u6240\u6709\u8bbe\u7f6e\u91cd\u7f6e\u4e3a\u51fa\u5382\u9ed8\u8ba4\u503c\u3002\n\n\nGrove Connectors\n\nSeeedStudio\u5177\u6709\u652f\u6301I2C\u6216UART\u8fde\u63a5\u7684\u5404\u79cd\u4f20\u611f\u5668/\u8bbe\u5907\u3002\u53e6\u5916\uff0c\u6211\u4eec\u9500\u552e\u72ec\u7acb\u7684Grove\u8fde\u63a5\u5668\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5236\u4f5c\u81ea\u5df1\u7684\u4f20\u611f\u5668\u8fde\u63a5\u3002\u5982\u679c\u8981\u4f7f\u7528\u8fd9\u4e9b\u5f15\u811a\uff0cI2C Grove\u8fde\u63a5\u5668\u4e5f\u5206\u522b\u8fde\u63a5\u5230SDA\u548cSCL\u7684\u6a21\u62df\u5f15\u811aA4\u548cA5\u3002UART Grove\u8fde\u63a5\u5668\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a0\u548c1\uff0c\u7528\u4e8eRX\u548cTX\u3002\n\n\nICSP\n\n\u8fd9\u662fATmega32U4\u7684ICSP\u63a5\u53e3\uff0c\u5b83\u4f4d\u4e8eArduino Uno\uff0cDue\uff0cMega\u548cLeonardo\u517c\u5bb9\u786c\u4ef6\uff08\u4f8b\u5982\u5c4f\u853d\uff09\u7684\u6807\u51c6ICSP / SPI\u4f4d\u7f6e\u3002\u8be5\u7aef\u53e3\u4e2d\u7684SPI\u5f15\u811a\uff1aMISO\uff0cSCK\u548cMOSI\u4e5f\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a12,13\u548c11\uff0c\u5c31\u50cfArduino Uno\u90a3\u6837\u3002\n\n\nI-PEX Connector\n\n\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5916\u90e8\u5929\u7ebf\u7684I-PEX\u8fde\u63a5\u5668\u3002\n\n\n\n\nPins\n\n\u56e0\u4e3aAtheros AR9331\u6240\u6709I / O\u7ebf\u90fd\u8fde\u63a5\u5230ATmega32U4\uff0c\u6240\u4ee5\u4e0d\u80fd\u8bbf\u95eeAtheros AR9331\u7684I / O\u5f15\u811a\u300232U4\u4e0a\u768420\u4e2a\u6570\u5b57\u5f15\u811a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u7528\u4f5c\u8f93\u5165\u6216\u8f93\u51fa\uff0c\u4f7f\u7528pinMode\uff08\uff09\uff0cdigitalWrite\uff08\uff09\u548cdigitalRead\uff08\uff09\u51fd\u6570\u3002\u5b83\u4eec\u5de5\u4f5c\u57285\u4f0f\u3002\u6bcf\u4e2a\u5f15\u811a\u53ef\u63d0\u4f9b\u6216\u63a5\u6536\u6700\u592740 mA\uff0c\u5e76\u5177\u670920-50 kOhms\u7684\u5185\u90e8\u4e0a\u62c9\u7535\u963b\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u65ad\u5f00\uff09\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u9488\u811a\u5177\u6709\u4e13\u95e8\u7684\u529f\u80fd\uff1a\n\n\n\n\nSerial: 0 (RX) and 1 (TX).\u7528\u4e8eATmega32U4\u786c\u4ef6\u4e32\u884c\u63a5\u6536\uff08RX\uff09\u548c\u53d1\u9001\uff08TX\uff09TTL\u6570\u636e\u3002\u8bf7\u6ce8\u610f\uff0c\u5728Seeeduino Cloud\u4e2d\uff0cSerial\u7c7b\u662f\u6307USB\uff08CDC\uff09\u901a\u4fe1; \u5bf9\u4e8e\u5f15\u811a0\u548c1\u4e0a\u7684TTL\u4e32\u884c\uff0c\u4f7f\u7528Serial1\u7c7b\u3002Seeeduino Cloud\u4e0a\u7684ATmega32U4\u548cAR9331\u7684\u786c\u4ef6\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7528\u4e8e\u5728\u4e24\u4e2a\u5904\u7406\u5668\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u5982\u5728Linux\u7cfb\u7edf\u4e2d\u5e38\u89c1\u7684\u90a3\u6837\uff0c\u5728AR9331\u7684\u4e32\u884c\u7aef\u53e3\u4e0a\u7ed9\u63a7\u5236\u53f0\u4ee5\u8bbf\u95ee\u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u8bbf\u95eeLinux\u63d0\u4f9b\u7684\u7a0b\u5e8f\u548c\u5de5\u5177\u3002\n\n\nTWI: 2 (SDA) and 3 (SCL). \u652f\u6301\u7528Wire\u5e93\u6587\u4ef6\u8fdb\u884cTWI\u901a\u8baf\u3002\n\n\nExternal Interrupts: 3 (interrupt 0), 2 (interrupt 1), 0 (interrupt 2), 1 (interrupt 3) and 7 (interrupt 4). \u8fd9\u4e9b\u5f15\u811a\u53ef\u4ee5\u914d\u7f6e\u5728\u4f4e\u7535\u5e73\u503c\u89e6\u53d1\uff0c\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\u89e6\u53d1\uff0c\u6216\u503c\u7684\u53d8\u5316\u7684\u65f6\u5019\u89e6\u53d1\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605attachInterrupt\uff08\uff09\u51fd\u6570\u3002\u4e0d\u5efa\u8bae\u4f7f\u7528\u5f15\u811a0\u548c1\u4f5c\u4e3a\u4e2d\u65ad\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e5f\u662f\u7528\u4e8e\u4e0eLinux\u5904\u7406\u5668\u901a\u4fe1\u7684\u786c\u4ef6\u4e32\u884c\u7aef\u53e3\u3002\u5f15\u811a7\u8fde\u63a5\u5230AR9331\u5904\u7406\u5668\uff0c\u5c06\u6765\u53ef\u80fd\u88ab\u7528\u4f5c\u63e1\u624b\u4fe1\u53f7\u3002\u5982\u679c\u6253\u7b97\u5c06\u5176\u7528\u4f5c\u4e2d\u65ad\uff0c\u5c0f\u5fc3\u53ef\u80fd\u4f1a\u6709\u51b2\u7a81\u3002\n\n\nPWM: 3, 5, 6, 9, 10, 11, \u548c 13. \u7528analogWrite\uff08\uff09\u51fd\u6570\u63d0\u4f9b8\u4f4dPWM\u8f93\u51fa\u3002\n\n\nSPI: ICSP header. \u8fd9\u4e9b\u5f15\u811a\u652f\u6301\u4f7f\u7528SPI\u5e93\u7684SPI\u901a\u4fe1\u3002\u8bf7\u6ce8\u610f\uff0cSPI\u5f15\u811a\u6ca1\u6709\u8fde\u63a5\u5230\u4efb\u4f55\u6570\u5b57I / O\u5f15\u811a\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f4d\u4e8eUno\u4e0a\uff0c\u5b83\u4eec\u4ec5\u5728ICSP\u8fde\u63a5\u5668\u4e0a\u53ef\u7528\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u6709\u4f7f\u7528SPI\u7684shield\uff0c\u4f46\u6ca1\u67096\u9488ICSP\u8fde\u63a5\u5668\u8fde\u63a5\u5230Seeeduino Cloud\u76846\u5f15\u811aICSP\u63a5\u5934\uff0c\u5219shield\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002SPI\u5f15\u811a\u4e5f\u8fde\u63a5\u5230AR9331 gpio\u5f15\u811a\uff0c\u5b83\u5df2\u7ecf\u5728SPI\u63a5\u53e3\u7684\u8f6f\u4ef6\u4e2d\u5b9e\u73b0\u3002\u8fd9\u610f\u5473\u7740ATMega32u4\u548cAR9331\u4e5f\u53ef\u4ee5\u4f7f\u7528SPI\u534f\u8bae\u8fdb\u884c\u901a\u4fe1\u3002\n\n\nAnalog Inputs: Seeeduino Cloud\u670912\u4e2a\u6a21\u62df\u8f93\u5165\uff0c\u6807\u8bb0\u4e3aA0\u81f3A11\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u4f5c\u6570\u5b57I / O\u3002\u5f15\u811aA0-A5\u51fa\u73b0\u5728\u4e0eUno\u76f8\u540c\u7684\u4f4d\u7f6e; \u8f93\u5165A6-A11\u5206\u522b\u4f4d\u4e8e\u6570\u5b57I / O\u5f15\u811a4,6,8,9,10\u548c12\u4e0a\u3002\u6bcf\u4e2a\u6a21\u62df\u8f93\u5165\u63d0\u4f9b10\u4f4d\u5206\u8fa8\u7387\uff08\u53731024\u4e2a\u4e0d\u540c\u7684\u503c\uff09\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6a21\u62df\u8f93\u5165\u4ece0\u52305\u4f0f\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u4f7f\u7528AREF\u5f15\u811a\u548canalogReference\uff08\uff09\u529f\u80fd\u6765\u66f4\u6539\u5176\u8303\u56f4\u7684\u4e0a\u9650\u3002\n\n\nAREF. \u6a21\u62df\u8f93\u5165\u7684\u53c2\u8003\u7535\u538b\u3002\u4e0eanalogReference()\u4e00\u8d77\u4f7f\u7528.\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\nSeeeduino Cloud \u67092\u4e2a\u5904\u7406\u5668\u3002 \u5176\u4e2d\u4e00\u4e2a\u662f\u7c7b\u4f3cLeonardo\u7684ATmega32U4. \u53e6\u5916\u4e00\u4e2a\u662fAtheros 9331, \u8fd0\u884cLinux\u548cOpenWRT wireless stack, \u4f7f\u677f\u53ef\u4ee5\u8fde\u63a5\u5230WiFi\u548c\u4ee5\u592a\u7f51\u3002 \u4f7f\u7528 \nYun Bridge Library\n, \u53ef\u4ee5\u901a\u8fc7Arduino\u5728Linux\u7cfb\u7edf\u4e0a\u8c03\u7528\u7a0b\u5e8f\u6216\u81ea\u5b9a\u4e49\u811a\u672c\u6765\u8fde\u63a5\u5404\u79cd\u4e92\u8054\u7f51\u670d\u52a1\u3002\n\n\nATmega32U4 \u7a0b\u5e8f\n\n\nATmega32U4\u4f7f\u7528\nArduino\u8f6f\u4ef6\uff08IDE\uff09\n\u7f16\u7a0b\uff0c\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5\uff0c\u8bf7\u70b9\u51fb\n\u6b64\u5904\n\u8fdb\u884c\u5b89\u88c5\u8bf4\u660e\u3002\n\n\n\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\uff1a\n\n\n\n\n\u83b7\u53d6Micro-USB\u7535\u7f06\n\n\n\u60a8\u9996\u5148\u9700\u8981Micro-USB\u7535\u7f06; Android\u624b\u673a\u7684\u6570\u636e\u7ebf\u4e5f\u53ef\u4ee5\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n\u4e70\u4e00\u4e2a\u3002\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\u5c0f\u5fc3\u8fde\u63a5 micro USB \u63a5\u53e3, \u5426\u5219\u53ef\u80fd\u4f1a\u4f7f\u63d2\u5ea7\u8131\u843d\u3002\n\n\n\n\n\n\n\u8fde\u63a5\u786c\u4ef6\n\n\n\u5c06USB\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u6216\u5916\u90e8\u7535\u6e90\u7ed9Seeeduino Cloud\u4f9b\u7535\u3002\u4f7f\u7528USB\u7535\u7f06\u5c06Arduino\u677f\u8fde\u63a5\u5230\u7535\u8111\u3002\u7eff\u8272\u7535\u6e90LED\uff08\u6807\u6709PWR\uff09\u5e94\u8be5\u70b9\u4eae\u3002\n\n\n\n\n\n\n\n\nFor Windows\n\n\nWindows\u7248\u672c\u7684Arduino Software\uff08IDE\uff09\u5df2\u7ecf\u5305\u542b\u9a71\u52a8\u7a0b\u5e8f\u3002\u5b89\u88c5\u5b83\u65f6\uff0c\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5b89\u88c5\u5b83\u4eec\u3002\u8fde\u63a5\u60a8\u7684Seeeduino Yun\u7684\u65f6\u5019\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5c06\u81ea\u52a8\u5b89\u88c5\u3002\n\n\nFor MAC\n\n\n\u7b2c\u4e00\u6b21\u5c06Seeeduino Cloud\u63d2\u5165Mac\uff0c\u201cKeyboard Setup Assistant\u201d\u5c06\u4f1a\u8df3\u51fa\u3002\u6ca1\u6709\u4efb\u4f55\u914d\u7f6e\u4e0eSeeeduino Yun\u76f8\u5173; \u60a8\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb\u7a97\u53e3\u5de6\u4e0a\u65b9\u7684\u7ea2\u8272\u6309\u94ae\u6765\u5173\u95ed\u6b64\u5bf9\u8bdd\u6846\u3002\n\n\nFor Linux\n\n\n\u65e0\u9700\u4e3aUbuntu 10.0.4\u53ca\u66f4\u9ad8\u7248\u672c\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f46\u8bf7\u786e\u4fdd\u7aef\u53e35353\u672a\u88ab\u9632\u706b\u5899\u963b\u6b62\u3002\n\n\n\u5f00\u59cb\u4f60\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\n\n\n\u6253\u5f00 LED blink \u7a0b\u5e8f: File \n Examples \n01.Basics \n Blink.\n\n\n\n\n\u9009\u62e9\u4f60\u7684board type and port\n\n\n\u4f60\u9700\u8981\u901a\u8fc7 Tools \n Board menu \u6765\u9009\u62e9\u76f8\u5e94\u7684 Arduino or Genuino board.\n\n\n\n\n\u901a\u8fc7 Tools -\n Serial Port \u83dc\u5355\u6765\u9009\u62e9\u7aef\u53e3. \u7c7b\u4f3c COM3 \u6216\u8005\u66f4\u9ad8(COM1 \u548c COM2 \u901a\u5e38\u4f5c\u4e3a\u786c\u4ef6\u4e32\u53e3\u9884\u7559). \u8981\u4e86\u89e3\u5177\u4f53\u54ea\u4e2a\u7aef\u53e3\uff0c\u60a8\u53ef\u4ee5\u65ad\u5f00\u7535\u8def\u677f\u5e76\u91cd\u65b0\u6253\u5f00; \u6d88\u5931\u7684\u5c31\u662fArduino\u6216Genuino. \u91cd\u65b0\u8fde\u63a5\u7535\u8def\u677f\u5e76\u9009\u62e9\u8be5\u4e32\u884c\u7aef\u53e3\u3002\u5f53\u60a8\u7684\u7535\u8def\u677f\u5728WiFi\u4e0a\u6b63\u786e\u914d\u7f6e\u65f6\uff0c\u60a8\u5c06\u5728\u201c\u7aef\u53e3\u201d\u5217\u8868\u4e2d\u627e\u5230\u5b83\uff0c\u5982\u5c4f\u5e55\u622a\u56fe\u6240\u793a\u3002\n\n\n\n\n\u4e0a\u4f20\u7a0b\u5e8f\n\n\n\u73b0\u5728\uff0c\u53ea\u9700\u70b9\u51fbIDE\u4e2d\u7684\u201cUpload\u201d\u6309\u94ae\u5373\u53ef\u3002\u7b49\u5f85\u51e0\u79d2\u949f - \u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u7684RX\u548cTX LED\u95ea\u70c1\u3002\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u5219\u4f1a\u5728\u72b6\u6001\u680f\u4e2d\u663e\u793a\u201cDone uploading\u201d\u6d88\u606f\u3002\n\n\n\n\n\u4e0a\u4f20\u5b8c\u6210\u540e\u7684\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u7535\u8def\u677f\u4e0a\u7684LED\uff08D13\uff09\u5f00\u59cb\u95ea\u70c1\uff08\u7eff\u8272\uff09\u3002\u5982\u679c\u662f\uff0c\u606d\u559c\uff01\u4f60\u5df2\u7ecf\u5f97\u5230\u4e86Arduino\u7684\u8fd0\u884c\u3002\u5982\u679c\u60a8\u6709\u95ee\u9898\uff0c\u8bf7\u53c2\u9605\u6545\u969c\u6392\u9664\u5efa\u8bae\u3002\n\n\n\u5728ATHEROS AR9331\u4e0a\u7f16\u7a0b\n\n\n\u7f51\u7edc\u914d\u7f6e\n\n\nSeeeduino Cloud\u5177\u6709WiFi\u63a5\u53e3\u548cLAN\u7aef\u53e3\u3002\u4ed6\u4eec\u90fd\u6709IP\u5730\u5740\uff0c\u53ef\u4ee5\u7528\u4e8e\u4e92\u8054\u7f51\u8fde\u63a5\u548c\u8bbe\u5907\u7ba1\u7406\u3002\n\n\n1. Wi-Fi AP Mode\n\n\n\u5f53\u60a8\u7b2c\u4e00\u6b21\u6253\u5f00Seeeduino Cloud\u65f6\uff0c\u5c06\u4f1a\u663e\u793aWi-Fi\u8fde\u63a5\u4e2d\u663e\u793a\u7684\u4e0d\u5b89\u5168WiFi\u7f51\u7edcSeeeduinoCloud-AXXXX\u3002\u60a8\u53ef\u4ee5\u5c06\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\uff0c\u5982\u4e0b\u6240\u793a\u3002\u60a8\u7684\u8ba1\u7b97\u673a\u5c06\u83b7\u5f97\u6b64\u7f51\u7edc\u7684IP\u5730\u5740 \n192.168.240.xxx\n\u3002Seeeduino Cloud\u7684\u9ed8\u8ba4IP\u5730\u5740\u4e3a \n192.168.240.1\n\u3002\n\n\n2. Wi-Fi STA Mode\n\n\n\u8fde\u63a5SeeeduinoCloud-AXXXX\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u641c\u7d22\u6846\u4e2d\u8f93\u5165172.31.255.254\u6216192.168.240.1\uff0c\u60a8\u5c06\u4f7f\u7528Web UI\u8fde\u63a5\u5230Seeeduino Cloud\u3002\u9ed8\u8ba4\u5bc6\u7801\u4e3a\u201cseeeduino\u201d\uff0c\u7136\u540e\u5355\u51fbLOG IN\u3002\n\n\n\n\n\u70b9\u51fb \"SYSTEM\", \u9009\u62e9\u60a8\u7684Wi-Fi\u7f51\u7edc\uff0c\u8f93\u5165\u5bc6\u7801\uff0c\u7136\u540e\u70b9\u51fb \"CONFIGURE \n RESTART\".\n\n\n\n\n3. Onboard Ethernet\n\n\n\u5f53\u60a8\u4f7f\u7528\u4ee5\u592a\u7f51\u7535\u7f06\u5c06Seeeduino Cloud\u8fde\u63a5\u5230\u6709\u7ebf\u7f51\u7edc\u65f6\uff0c\u5c06\u5c1d\u8bd5\u901a\u8fc7DHCP\u81ea\u52a8\u8fde\u63a5\u3002\u8be5\u677f\u5c06\u663e\u793a\u5728\u7f51\u7edc\u5217\u8868\u4e0a\uff0c\u5c31\u50cf\u901a\u8fc7WiFi\u4e00\u6837\u3002\n\n\nTerminal\n\n\n\u60a8\u53ef\u4ee5\u901a\u8fc7SSH\u8bbf\u95eeSeeeduino Cloud\u7684\u7ec8\u7aef\uff0c\u4ee5\u7f16\u7a0b\u6216\u914d\u7f6eATHEROS AR9331\u3002\n\n\n\n\n\u4e0b\u8f7d SSH client \u4f8b\u5982 \nputty\n\n\n\u4f7f\u7528Seeeduino Cloud\u7684IP\u5730\u5740\u5e76\u8fd0\u884cSSH client\u3002\n\n\n\n\nusername: root\npassword: seeeduino\n\n\n\n\n\n\nYun Bridge Library\n\n\nThe Bridge Library \u7b80\u5316\u4e86Arduino Board\u548cDragino HE\u4e4b\u95f4\u7684\u901a\u8baf\u3002 \u6765\u81eaAVR\u7684Bridge commands\u7531HE\u4e0a\u7684Python\u6765\u89e3\u6790.\n\n\n\u4ed6\u7684\u4f5c\u7528\u5982\u4e0b\uff1a\n\n\n\n\n\u5728Arduino\u8981\u6c42\u7684\u65f6\u5019\u5728GNU / Linux\u7aef\u6267\u884c\u7a0b\u5e8f\n\n\n\u63d0\u4f9b\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4\uff0c\u7528\u4e8e\u5171\u4eab\u6570\u636e\uff0c\u5982Arduino\u548cInternet\u4e4b\u95f4\u7684\u4f20\u611f\u5668\u8bfb\u6570;\n\n\n\u63a5\u6536\u6765\u81eaInternet\u7684\u547d\u4ee4\uff0c\u5e76\u5c06\u5176\u76f4\u63a5\u4f20\u9012\u5230Arduino\u3002\n\n\n\n\nArduino Official Website\n\u6709\u8be6\u7ec6\u7684\u89e3\u91ca\u548c\u5f88\u591a\u4f8b\u5b50\u6765\u5c55\u793a\u5982\u4f55\u4f7f\u7528Bridge. \u4ee5\u4e0b\u662f\u4f7f\u7528Bridge Library\u7684\u4e00\u4e9b\u793a\u4f8b.\n\n\nExample 1: \u8ddfLinux\u6253\u62db\u547c\n\n\nThis example is a hello test between the Arduino and Seeeduino Cloud. The example can be found on the Arduino IDE\n File \n Examples \n Bridge \n ConsoleRead. A tutorial of this example can be found \nhere\n. You can see the code below with some additional details to understand it with the Seeeduino Cloud:\n\u8fd9\u4e2a\u4f8b\u5b50\u662fArduino\u548cSeeeduino Cloud\u4e4b\u95f4\u7684\u4e00\u4e2ahello\u6d4b\u8bd5\u3002\u8be5\u793a\u4f8b\u53ef\u4ee5\u5728Arduino IDE-\n File - \n Examples - \n Bridge - \n ConsoleRead\u4e2d\u627e\u5230\u3002\u8fd9\u4e2a\u4f8b\u5b50\u7684\u6559\u7a0b\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n\u627e\u5230\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u67e5\u770b\u4e00\u4e9b\u5176\u4ed6\u8be6\u7ec6\u4fe1\u606f:\n\n\n#include \nConsole.h\n\n\nString name;\n\nvoid setup() {\n    // Initialize Console and wait for port to open:\n    Bridge.begin();\n    Console.begin();\n\n    // Wait for Console port to connect\n    while (!Console);\n\n    Console.println(\nHi, what\ns your name?\n);\n}\n\nvoid loop() {\n    if (Console.available() \n 0) {\n        char c = Console.read(); // read the next char received\n        // look for the newline character, this is the last character in the string\n        if (c == \n\\n\n) {\n            //print text with the name received\n            Console.print(\nHi \n);\n            Console.print(name);\n            Console.println(\n! Nice to meet you!\n);\n            Console.println();\n            // Ask again for name and clear the old name\n            Console.println(\nHi, what\ns your name?\n);\n            name = \n;  // clear the name string\n        }\n        else {       // if the buffer is empty Cosole.read() returns -1\n            name += c; // append the read char from Console to the name string\n        }\n    }\n}\n\n\n\n\n\u4f8b\u7a0b 2: \u4e0a\u4f20\u6570\u636e\u5230\u7269\u8054\u7f51\u670d\u52a1\u5668\n\n\n\u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u5c06\u6570\u636e\u8bb0\u5f55\u5230\u516c\u5171IoT\u670d\u52a1\u5668\u201cXively\u201d\u3002\u793a\u4f8b\u662f\u4eceArduino IDE-\n File - \n Examples - \n Bridge - \n XivelyClient. \u8fd9\u4e2a\u4f8b\u5b50\u7684\u6559\u7a0b\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n\u8fd9\u91cc\u53c2\u8003\u3002\u4e0a\u4f20\u7a0b\u5e8f\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\uff1a\n\n\n\n\nSeeeduino Cloud \u63a5\u5165\u4e92\u8054\u7f51\u3002\n\n\n\u6839\u636e\u6559\u7a0b\u8f93\u5165\u60a8\u7684FEED ID\u548cAPI KEY\u3002\u6ce8\u610f\uff0cFEED ID\u5e94\u5728\u53cc\u5f15\u53f7\u201c\u201d\u5185\u3002\n\n\n\n\n/*\n  Xively sensor client with Strings\n\n This sketch connects an analog sensor to Xively,\n using an Arduino Y\u00fan.\n\n created 15 March 2010\n updated 27 May 2013\n by Tom Igoe\n\n http://arduino.cc/en/Tutorial/YunXivelyClient\n\n */\n#include \nProcess.h\n\n#include \npasswords.h\n      // contains my passwords, see below\n\n/*\n  NOTE: passwords.h is not included with this repo because it contains my passwords.\n You need to create it for your own version of this application.  To do so, make\n a new tab in Arduino, call it passwords.h, and include the following variables and constants:\n\n #define APIKEY        \nfoo\n                  // replace your pachube api key here\n #define FEEDID        0000                   // replace your feed ID\n #define USERAGENT     \nmy-project\n           // user agent is the project name\n */\n\n// set up net client info:\nconst unsigned long postingInterval = 60000;  //delay between updates to xively.com\nunsigned long lastRequest = 0;      // when you last made a request\nString dataString = \n;\n\nvoid setup() {\n    // start serial port:\n    Bridge.begin();\n    Serial.begin(9600);\n\n    while (!Serial);   // wait for Network Serial to open\n    Serial.println(\nXively client\n);\n\n    // Do a first update immediately\n    updateData();\n    sendData();\n    lastRequest = millis();\n}\n\nvoid loop() {\n    // get a timestamp so you can calculate reading and sending intervals:\n    long now = millis();\n\n    // if the sending interval has passed since your\n    // last connection, then connect again and send data:\n    if (now - lastRequest \n= postingInterval) {\n        updateData();\n        sendData();\n        lastRequest = now;\n    }\n}\n\nvoid updateData() {\n    // convert the readings to a String to send it:\n    dataString = \nTemperature,\n;\n    dataString += random(10) + 20;\n    // add pressure:\n    dataString += \n\\nPressure,\n;\n    dataString += random(5) + 100;\n}\n\n// this method makes a HTTP connection to the server:\nvoid sendData() {\n    // form the string for the API header parameter:\n    String apiString = \nX-ApiKey: \n;\n    apiString += APIKEY;\n\n    // form the string for the URL parameter:\n    String url = \nhttps://api.xively.com/v2/feeds/\n;\n    url += FEEDID;\n    url += \n.csv\n;\n\n    // Send the HTTP PUT request\n\n    // Is better to declare the Process here, so when the\n    // sendData function finishes the resources are immediately\n    // released. Declaring it global works too, BTW.\n    Process xively;\n    Serial.print(\n\\n\\nSending data... \n);\n    xively.begin(\ncurl\n);\n    xively.addParameter(\n-k\n);\n    xively.addParameter(\n--request\n);\n    xively.addParameter(\nPUT\n);\n    xively.addParameter(\n--data\n);\n    xively.addParameter(dataString);\n    xively.addParameter(\n--header\n);\n    xively.addParameter(apiString);\n    xively.addParameter(url);\n    xively.run();\n    Serial.println(\ndone!\n);\n\n    // If there\ns incoming data from the net connection,\n    // send it out the Serial:\n    while (xively.available() \n 0) {\n        char c = xively.read();\n        Serial.write(c);\n    }\n}\n\n\n\n\n\n\n\u4f8b\u7a0b 3: \u5c06\u6570\u636e\u8bb0\u5f55\u5728USB\u95ea\u5b58\u4e2d\n\n\n\u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u5c06\u6570\u636e\u8bb0\u5f55\u5230USB\u95ea\u5b58\u3002\u672c\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u7a0b\u5e8f\u4e0e\n\u6b64\u5904\n\u76f8\u540c\u3002\u5e76\u4e14\u53ef\u4ee5\u5728\u90a3\u91cc\u627e\u5230\u6e90\u4ee3\u7801\u3002Seeeduino Cloud\u5c06\u81ea\u52a8\u5c06USB\u95ea\u5b58\u6620\u5c04\u5230\u76ee\u5f55/ mnt /sda1\u3002\u800c\u7a0b\u5e8f\u4f1a\u5c06\u4f20\u611f\u5668\u6570\u636e\u9644\u52a0\u5230\u6587\u4ef6/mnt/sda1/data/datalog.csv\u3002\u56e0\u6b64\uff0c\u5728\u8fd0\u884c\u7a0b\u5e8f\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5728USB\u95ea\u5b58\u4e2d\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u3002\n\n\n#include \nFileIO.h\n     //FileIO class allow user to operate Linux file system\n#include \nConsole.h\n    //Console class provide the interactive between IDE and Yun Shield\nvoid setup() {\n    // Initialize the Console\n    Bridge.begin();\n    Console.begin();\n    FileSystem.begin();\n    while(!Console);   // wait for Serial port to connect.\n    Console.println(\nFilesystem datalogger\\n\n);\n}\nvoid loop () {\n    // make a string that start with a timestamp for assembling the data to log:\n    String dataString;\n    dataString += getTimeStamp();\n    dataString += \n , \n;\n    // read three sensors and append to the string:\n    for (int analogPin = 0; analogPin \n 3; analogPin++) {\n        int sensor = analogRead(analogPin);\n        dataString += String(sensor);\n        if (analogPin \n 2) {\n            dataString += \n,\n;    // separate the values with a comma\n        }\n    }\n    // open the file. note that only one file can be open at a time,\n    // so you have to close this one before opening another.\n    // The USB flash card is mounted at \n/mnt/sda1\n by default\n    File dataFile = FileSystem.open(\n/mnt/sda1/data/datalog.csv\n, FILE_APPEND);\n    // if the file is available, write to it:\n    if (dataFile) {\n        dataFile.println(dataString);\n        dataFile.close();\n        // print to the serial port too:\n        Console.println(dataString);\n    }\n    // if the file isn\nt open, pop up an error:\n    else {\n        Console.println(\nerror opening datalog.csv\n);\n    }\n    delay(15000);  //Write every 15 seconds\n}\n// getTimeStamp function return a string with the time stamp\n// Yun Shield will call the Linux \ndate\n command and get the time stamp\nString getTimeStamp() {\n    String result;\n    Process time;\n    // date is a command line utility to get the date and the time\n    // in different formats depending on the additional parameter\n    time.begin(\ndate\n);\n    time.addParameter(\n+%D-%T\n);   // parameters: D for the complete date mm/dd/yy\n    //              T for the time hh:mm:ss\n    time.run();   // run the command\n    // read the output of the command\n    while(time.available()\n0) {\n        char c = time.read();\n        if(c != \n\\n\n)\n        result += c;\n    }\n    return result;\n}\n\n\n\n\n\n\n\u7269\u8054\u7f51\u670d\u52a1\u5668\u914d\u7f6e\n\n\nIoT Server\u9875\u9762\u5141\u8bb8\u60a8\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u8bf8\u5982Xively\u4e4b\u7c7b\u7684IoT\u7f51\u7ad9\uff0c\u800c\u60a8\u53ea\u9700\u8981\u5c06\u4f20\u611f\u5668\u6570\u636e\u5199\u5165\u4e32\u53e3\u3002\n\n\n\n\n\u7a0b\u5e8f\u5982\u4e0b\uff1a\n\n\n/*\n  Simulate UART TX Data\n\n This sketch simulate Temperature and Humidity data to UART.\n\n To test the pass through feature for different IoT service\n\n created 25 Apr 2014\n by Dragino Technology Co., Limited\n\n Reference:\n http://wiki.dragino.com/index.php?title=Xively#Upload_data_to_Xively_use_Pass_Through_Mode\n\n */\nString dataString = \n;\n\nvoid setup() {\n    Serial1.begin(115200);\n}\n\nvoid loop() {\n    dataString = \ntemp:\n;\n    dataString += random(10) + 20;\n    Serial1.println(dataString);  // upload Temperature data\n    delay(20000);\n    dataString = \nhumidity:\n;\n    dataString += random(5) + 70;  // upload humidity data\n    Serial1.println(dataString);\n    delay(20000);\n}\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\u539f\u7406\u56fe\n\n\n\n\nSeeeduino Cloud Eagle file\n\n\nSeeeduino Cloud PDF file\n\n\n\n\n\n\n\n\n\u56fa\u4ef6\n\n\n\n\nSeeeduino Cloud Firmware\n\n\n\n\n\n\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\nGetting Started with Arduino\n\n\nArduino Language Reference\n\n\nDownload the Arduino Software(IDE)\n\n\nArduino FAQ\n\n\nArduino Introduction\n\n\nWikipedia page for Arduino\n\n\nArduino Yun Wiki\n\n\nGetting started with Arduino Yun\n\n\nYun Bridge Library\n\n\n\n\n\n\n\n\nFAQ\n\n\n\n\n\u4ec0\u4e48\u662f Yun Bridge Library?\n\n\n\n\nYun Bridge Library \u7528\u4e8eMPU\u548cMCU\u4e4b\u95f4\u901a\u4fe1\u7684\u673a\u5236\u3002 Seeeduino Cloud \u4f7f\u7528 Yun Bridge Library\uff0c \u8ba9Arduino\u7528\u6237\u8f7b\u677e\u6784\u5efa\u5176\u7269\u8054\u7f51\u9879\u76ee\u3002", 
            "title": "Seeeduino_Cloud"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_1", 
            "text": "\u7269\u8054\u7f51    \u667a\u80fd\u5bb6\u5c45  \u5b66\u4e60   \u8fd9\u91cc\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\u3002     \u7b80\u5355\u7684Wi-Fi Messager  \u5c06\u6570\u636e\u53d1\u9001\u5230Google\u6587\u6863  \u592a\u9633\u80fd\u7535\u6c60\u677f\u76d1\u63a7\u7cfb\u7edf           \u9a6c\u4e0a\u505a\u4e00\u4e2a  \u9a6c\u4e0a\u505a\u4e00\u4e2a  \u9a6c\u4e0a\u505a\u4e00\u4e2a", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_2", 
            "text": "\u4e0eArduino Yun\u517c\u5bb9  \u57fa\u4e8eDragino WiFi IoT\u6a21\u5757HE  \u5185\u7f6e\u5f00\u6e90OpenWrt\u7cfb\u7edf  \u652f\u6301 2.4Ghz WiFi, 802.11 b/g/n  \u652f\u6301\u4ee5\u592a\u7f51  \u652f\u6301 USB 2.0  \u677f\u8f7dGrove\u8fde\u63a5\u5668", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_3", 
            "text": "\u56e0\u4e3aSeeeduino Cloud\u6709\u4e24\u4e2a\u5904\u7406\u5668\uff0c\u6240\u4ee5\u8fd9\u4e00\u8282\u663e\u793a\u4e86\u4e24\u4e2a\u5355\u72ec\u8868\u683c\u4e2d\u6bcf\u4e2a\u5904\u7406\u5668\u7684\u7279\u5f81\u3002  Dragino HE\u6a21\u5757     \u53c2\u6570  \u503c      CPU  ATHEROS AR9331    Clock Speed  400MHz    RAM  64MB    Flash  16MB    OS  OpenWrt    Interfaces  2 x RJ45, 1 x USB Host, 1 x UART, 14 multiplex GPIOs    Power  3.3V Power Input    WiFi  Support 150M 2.4Ghz WiFi, 802.11 b/g/n     AVR Arduino\u5fae\u63a7\u5236\u5668     \u53c2\u6570  \u503c      Microcontroller  ATmega32u4    Flash Memory  32KB    SRAM  2.5kB    EEPROM  1kB    Clock Speed  16MHz    Operating Voltage  5V    Digital I/O Pins  20    PWM Channels  7    Analog Input Channels  12", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_4", 
            "text": "\u4e0b\u56fe\u663e\u793a\u4e86Seeeduino Cloud\u786c\u4ef6\u529f\u80fd\u7684\u6982\u8ff0\u3002\u5f15\u811a\u56fe\u4e2d\u663e\u793a\u4e86Seeeduino Cloud\u5404\u79cd\u5f15\u811a\u7684\u529f\u80fd\u3002\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u5feb\u901f\u53c2\u8003\u3002    RJ45\u4ee5\u592a\u7f51\u7aef\u53e3 \nLAN\u7aef\u53e3\u8fde\u63a5\u5230ATHEROS AR9331\uff0c\u5e76\u5177\u6709\u81ea\u5df1\u7684IP\u5730\u5740\uff0c\u53ef\u7528\u4e8eInternet\u8fde\u63a5\u548c\u8bbe\u5907\u7ba1\u7406\u3002  USB \u8f93\u5165 \nUSB\u7aef\u53e3\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230PC\u8fdb\u884c\u7f16\u7a0b\u548c\u4e0a\u7535\u3002Micro USB\u662f\u5927\u591a\u6570Android\u624b\u673a\u548c\u5176\u4ed6\u8bbe\u5907\u4e2d\u666e\u904d\u5b58\u5728\u7684USB\u7248\u672c\u3002\u4f60\u5bb6\u91cc\u53ef\u80fd\u6709\u51e0\u5341\u6839\u8fd9\u4e9b\u6570\u636e\u7ebf\u3002  USB HOST \nSeeeduino Cloud\u63d0\u4f9bUSB HOST\u529f\u80fd\uff0c\u4f7f\u5176\u80fd\u591f\u8fde\u63a5\u5230\u5404\u79cdUSB\u8bbe\u5907\uff0c\u5982\u7f51\u7edc\u6444\u50cf\u5934\uff0cUSB\u9a71\u52a8\u5668\uff0c\u952e\u76d8\uff0c\u64cd\u7eb5\u6746\u7b49\u3002  32U4 RST \n\u630932U4 Reset \u6309\u94ae\u5bf9ATmega32U4 MCU\u8fdb\u884c\u590d\u4f4d. \u901a\u5e38\uff0c\u5b83\u7528\u4e8e\u7a0b\u5e8f\u590d\u4f4d.  SYS RST \n\u6309\u4e0b\u7cfb\u7edf\u590d\u4f4d\u6309\u94ae\u5c06\u91cd\u65b0\u542f\u52a8Linux\u7cfb\u7edf\u3002  Wi-Fi RST \nWi-Fi\u91cd\u7f6e\u6309\u94ae\u4ec5\u652f\u6301\u957f\u6309\u30025\u79d2\u949f\u540e\u6309\u4e0b\u5e76\u91ca\u653e\uff0c\u5c06\u91cd\u7f6eWiFi\u8bbe\u7f6e\u3002\u5176\u4ed6\u8bbe\u7f6e\u5c06\u88ab\u4fdd\u7559\u3002\u5982\u679c\u572830\u79d2\u540e\u6309\u4e0b\u5e76\u91ca\u653e\u6309\u94ae\uff0c\u5219\u4f1a\u5c06\u6240\u6709\u8bbe\u7f6e\u91cd\u7f6e\u4e3a\u51fa\u5382\u9ed8\u8ba4\u503c\u3002  Grove Connectors \nSeeedStudio\u5177\u6709\u652f\u6301I2C\u6216UART\u8fde\u63a5\u7684\u5404\u79cd\u4f20\u611f\u5668/\u8bbe\u5907\u3002\u53e6\u5916\uff0c\u6211\u4eec\u9500\u552e\u72ec\u7acb\u7684Grove\u8fde\u63a5\u5668\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5236\u4f5c\u81ea\u5df1\u7684\u4f20\u611f\u5668\u8fde\u63a5\u3002\u5982\u679c\u8981\u4f7f\u7528\u8fd9\u4e9b\u5f15\u811a\uff0cI2C Grove\u8fde\u63a5\u5668\u4e5f\u5206\u522b\u8fde\u63a5\u5230SDA\u548cSCL\u7684\u6a21\u62df\u5f15\u811aA4\u548cA5\u3002UART Grove\u8fde\u63a5\u5668\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a0\u548c1\uff0c\u7528\u4e8eRX\u548cTX\u3002  ICSP \n\u8fd9\u662fATmega32U4\u7684ICSP\u63a5\u53e3\uff0c\u5b83\u4f4d\u4e8eArduino Uno\uff0cDue\uff0cMega\u548cLeonardo\u517c\u5bb9\u786c\u4ef6\uff08\u4f8b\u5982\u5c4f\u853d\uff09\u7684\u6807\u51c6ICSP / SPI\u4f4d\u7f6e\u3002\u8be5\u7aef\u53e3\u4e2d\u7684SPI\u5f15\u811a\uff1aMISO\uff0cSCK\u548cMOSI\u4e5f\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a12,13\u548c11\uff0c\u5c31\u50cfArduino Uno\u90a3\u6837\u3002  I-PEX Connector \n\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5916\u90e8\u5929\u7ebf\u7684I-PEX\u8fde\u63a5\u5668\u3002   Pins \n\u56e0\u4e3aAtheros AR9331\u6240\u6709I / O\u7ebf\u90fd\u8fde\u63a5\u5230ATmega32U4\uff0c\u6240\u4ee5\u4e0d\u80fd\u8bbf\u95eeAtheros AR9331\u7684I / O\u5f15\u811a\u300232U4\u4e0a\u768420\u4e2a\u6570\u5b57\u5f15\u811a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u7528\u4f5c\u8f93\u5165\u6216\u8f93\u51fa\uff0c\u4f7f\u7528pinMode\uff08\uff09\uff0cdigitalWrite\uff08\uff09\u548cdigitalRead\uff08\uff09\u51fd\u6570\u3002\u5b83\u4eec\u5de5\u4f5c\u57285\u4f0f\u3002\u6bcf\u4e2a\u5f15\u811a\u53ef\u63d0\u4f9b\u6216\u63a5\u6536\u6700\u592740 mA\uff0c\u5e76\u5177\u670920-50 kOhms\u7684\u5185\u90e8\u4e0a\u62c9\u7535\u963b\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u65ad\u5f00\uff09\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u9488\u811a\u5177\u6709\u4e13\u95e8\u7684\u529f\u80fd\uff1a   Serial: 0 (RX) and 1 (TX).\u7528\u4e8eATmega32U4\u786c\u4ef6\u4e32\u884c\u63a5\u6536\uff08RX\uff09\u548c\u53d1\u9001\uff08TX\uff09TTL\u6570\u636e\u3002\u8bf7\u6ce8\u610f\uff0c\u5728Seeeduino Cloud\u4e2d\uff0cSerial\u7c7b\u662f\u6307USB\uff08CDC\uff09\u901a\u4fe1; \u5bf9\u4e8e\u5f15\u811a0\u548c1\u4e0a\u7684TTL\u4e32\u884c\uff0c\u4f7f\u7528Serial1\u7c7b\u3002Seeeduino Cloud\u4e0a\u7684ATmega32U4\u548cAR9331\u7684\u786c\u4ef6\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7528\u4e8e\u5728\u4e24\u4e2a\u5904\u7406\u5668\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u5982\u5728Linux\u7cfb\u7edf\u4e2d\u5e38\u89c1\u7684\u90a3\u6837\uff0c\u5728AR9331\u7684\u4e32\u884c\u7aef\u53e3\u4e0a\u7ed9\u63a7\u5236\u53f0\u4ee5\u8bbf\u95ee\u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u8bbf\u95eeLinux\u63d0\u4f9b\u7684\u7a0b\u5e8f\u548c\u5de5\u5177\u3002  TWI: 2 (SDA) and 3 (SCL). \u652f\u6301\u7528Wire\u5e93\u6587\u4ef6\u8fdb\u884cTWI\u901a\u8baf\u3002  External Interrupts: 3 (interrupt 0), 2 (interrupt 1), 0 (interrupt 2), 1 (interrupt 3) and 7 (interrupt 4). \u8fd9\u4e9b\u5f15\u811a\u53ef\u4ee5\u914d\u7f6e\u5728\u4f4e\u7535\u5e73\u503c\u89e6\u53d1\uff0c\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\u89e6\u53d1\uff0c\u6216\u503c\u7684\u53d8\u5316\u7684\u65f6\u5019\u89e6\u53d1\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605attachInterrupt\uff08\uff09\u51fd\u6570\u3002\u4e0d\u5efa\u8bae\u4f7f\u7528\u5f15\u811a0\u548c1\u4f5c\u4e3a\u4e2d\u65ad\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e5f\u662f\u7528\u4e8e\u4e0eLinux\u5904\u7406\u5668\u901a\u4fe1\u7684\u786c\u4ef6\u4e32\u884c\u7aef\u53e3\u3002\u5f15\u811a7\u8fde\u63a5\u5230AR9331\u5904\u7406\u5668\uff0c\u5c06\u6765\u53ef\u80fd\u88ab\u7528\u4f5c\u63e1\u624b\u4fe1\u53f7\u3002\u5982\u679c\u6253\u7b97\u5c06\u5176\u7528\u4f5c\u4e2d\u65ad\uff0c\u5c0f\u5fc3\u53ef\u80fd\u4f1a\u6709\u51b2\u7a81\u3002  PWM: 3, 5, 6, 9, 10, 11, \u548c 13. \u7528analogWrite\uff08\uff09\u51fd\u6570\u63d0\u4f9b8\u4f4dPWM\u8f93\u51fa\u3002  SPI: ICSP header. \u8fd9\u4e9b\u5f15\u811a\u652f\u6301\u4f7f\u7528SPI\u5e93\u7684SPI\u901a\u4fe1\u3002\u8bf7\u6ce8\u610f\uff0cSPI\u5f15\u811a\u6ca1\u6709\u8fde\u63a5\u5230\u4efb\u4f55\u6570\u5b57I / O\u5f15\u811a\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f4d\u4e8eUno\u4e0a\uff0c\u5b83\u4eec\u4ec5\u5728ICSP\u8fde\u63a5\u5668\u4e0a\u53ef\u7528\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u6709\u4f7f\u7528SPI\u7684shield\uff0c\u4f46\u6ca1\u67096\u9488ICSP\u8fde\u63a5\u5668\u8fde\u63a5\u5230Seeeduino Cloud\u76846\u5f15\u811aICSP\u63a5\u5934\uff0c\u5219shield\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002SPI\u5f15\u811a\u4e5f\u8fde\u63a5\u5230AR9331 gpio\u5f15\u811a\uff0c\u5b83\u5df2\u7ecf\u5728SPI\u63a5\u53e3\u7684\u8f6f\u4ef6\u4e2d\u5b9e\u73b0\u3002\u8fd9\u610f\u5473\u7740ATMega32u4\u548cAR9331\u4e5f\u53ef\u4ee5\u4f7f\u7528SPI\u534f\u8bae\u8fdb\u884c\u901a\u4fe1\u3002  Analog Inputs: Seeeduino Cloud\u670912\u4e2a\u6a21\u62df\u8f93\u5165\uff0c\u6807\u8bb0\u4e3aA0\u81f3A11\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u4f5c\u6570\u5b57I / O\u3002\u5f15\u811aA0-A5\u51fa\u73b0\u5728\u4e0eUno\u76f8\u540c\u7684\u4f4d\u7f6e; \u8f93\u5165A6-A11\u5206\u522b\u4f4d\u4e8e\u6570\u5b57I / O\u5f15\u811a4,6,8,9,10\u548c12\u4e0a\u3002\u6bcf\u4e2a\u6a21\u62df\u8f93\u5165\u63d0\u4f9b10\u4f4d\u5206\u8fa8\u7387\uff08\u53731024\u4e2a\u4e0d\u540c\u7684\u503c\uff09\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6a21\u62df\u8f93\u5165\u4ece0\u52305\u4f0f\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u4f7f\u7528AREF\u5f15\u811a\u548canalogReference\uff08\uff09\u529f\u80fd\u6765\u66f4\u6539\u5176\u8303\u56f4\u7684\u4e0a\u9650\u3002  AREF. \u6a21\u62df\u8f93\u5165\u7684\u53c2\u8003\u7535\u538b\u3002\u4e0eanalogReference()\u4e00\u8d77\u4f7f\u7528.", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_5", 
            "text": "Seeeduino Cloud \u67092\u4e2a\u5904\u7406\u5668\u3002 \u5176\u4e2d\u4e00\u4e2a\u662f\u7c7b\u4f3cLeonardo\u7684ATmega32U4. \u53e6\u5916\u4e00\u4e2a\u662fAtheros 9331, \u8fd0\u884cLinux\u548cOpenWRT wireless stack, \u4f7f\u677f\u53ef\u4ee5\u8fde\u63a5\u5230WiFi\u548c\u4ee5\u592a\u7f51\u3002 \u4f7f\u7528  Yun Bridge Library , \u53ef\u4ee5\u901a\u8fc7Arduino\u5728Linux\u7cfb\u7edf\u4e0a\u8c03\u7528\u7a0b\u5e8f\u6216\u81ea\u5b9a\u4e49\u811a\u672c\u6765\u8fde\u63a5\u5404\u79cd\u4e92\u8054\u7f51\u670d\u52a1\u3002  ATmega32U4 \u7a0b\u5e8f  ATmega32U4\u4f7f\u7528 Arduino\u8f6f\u4ef6\uff08IDE\uff09 \u7f16\u7a0b\uff0c\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5\uff0c\u8bf7\u70b9\u51fb \u6b64\u5904 \u8fdb\u884c\u5b89\u88c5\u8bf4\u660e\u3002  \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f  \u9996\u5148\uff0c\u4f60\u9700\u8981\uff1a   \u83b7\u53d6Micro-USB\u7535\u7f06  \u60a8\u9996\u5148\u9700\u8981Micro-USB\u7535\u7f06; Android\u624b\u673a\u7684\u6570\u636e\u7ebf\u4e5f\u53ef\u4ee5\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e70\u4e00\u4e2a\u3002      Warning  \u5c0f\u5fc3\u8fde\u63a5 micro USB \u63a5\u53e3, \u5426\u5219\u53ef\u80fd\u4f1a\u4f7f\u63d2\u5ea7\u8131\u843d\u3002    \u8fde\u63a5\u786c\u4ef6  \u5c06USB\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u6216\u5916\u90e8\u7535\u6e90\u7ed9Seeeduino Cloud\u4f9b\u7535\u3002\u4f7f\u7528USB\u7535\u7f06\u5c06Arduino\u677f\u8fde\u63a5\u5230\u7535\u8111\u3002\u7eff\u8272\u7535\u6e90LED\uff08\u6807\u6709PWR\uff09\u5e94\u8be5\u70b9\u4eae\u3002     For Windows  Windows\u7248\u672c\u7684Arduino Software\uff08IDE\uff09\u5df2\u7ecf\u5305\u542b\u9a71\u52a8\u7a0b\u5e8f\u3002\u5b89\u88c5\u5b83\u65f6\uff0c\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5b89\u88c5\u5b83\u4eec\u3002\u8fde\u63a5\u60a8\u7684Seeeduino Yun\u7684\u65f6\u5019\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5c06\u81ea\u52a8\u5b89\u88c5\u3002  For MAC  \u7b2c\u4e00\u6b21\u5c06Seeeduino Cloud\u63d2\u5165Mac\uff0c\u201cKeyboard Setup Assistant\u201d\u5c06\u4f1a\u8df3\u51fa\u3002\u6ca1\u6709\u4efb\u4f55\u914d\u7f6e\u4e0eSeeeduino Yun\u76f8\u5173; \u60a8\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb\u7a97\u53e3\u5de6\u4e0a\u65b9\u7684\u7ea2\u8272\u6309\u94ae\u6765\u5173\u95ed\u6b64\u5bf9\u8bdd\u6846\u3002  For Linux  \u65e0\u9700\u4e3aUbuntu 10.0.4\u53ca\u66f4\u9ad8\u7248\u672c\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f46\u8bf7\u786e\u4fdd\u7aef\u53e35353\u672a\u88ab\u9632\u706b\u5899\u963b\u6b62\u3002  \u5f00\u59cb\u4f60\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f  \u6253\u5f00 LED blink \u7a0b\u5e8f: File   Examples  01.Basics   Blink.   \u9009\u62e9\u4f60\u7684board type and port  \u4f60\u9700\u8981\u901a\u8fc7 Tools   Board menu \u6765\u9009\u62e9\u76f8\u5e94\u7684 Arduino or Genuino board.   \u901a\u8fc7 Tools -  Serial Port \u83dc\u5355\u6765\u9009\u62e9\u7aef\u53e3. \u7c7b\u4f3c COM3 \u6216\u8005\u66f4\u9ad8(COM1 \u548c COM2 \u901a\u5e38\u4f5c\u4e3a\u786c\u4ef6\u4e32\u53e3\u9884\u7559). \u8981\u4e86\u89e3\u5177\u4f53\u54ea\u4e2a\u7aef\u53e3\uff0c\u60a8\u53ef\u4ee5\u65ad\u5f00\u7535\u8def\u677f\u5e76\u91cd\u65b0\u6253\u5f00; \u6d88\u5931\u7684\u5c31\u662fArduino\u6216Genuino. \u91cd\u65b0\u8fde\u63a5\u7535\u8def\u677f\u5e76\u9009\u62e9\u8be5\u4e32\u884c\u7aef\u53e3\u3002\u5f53\u60a8\u7684\u7535\u8def\u677f\u5728WiFi\u4e0a\u6b63\u786e\u914d\u7f6e\u65f6\uff0c\u60a8\u5c06\u5728\u201c\u7aef\u53e3\u201d\u5217\u8868\u4e2d\u627e\u5230\u5b83\uff0c\u5982\u5c4f\u5e55\u622a\u56fe\u6240\u793a\u3002   \u4e0a\u4f20\u7a0b\u5e8f  \u73b0\u5728\uff0c\u53ea\u9700\u70b9\u51fbIDE\u4e2d\u7684\u201cUpload\u201d\u6309\u94ae\u5373\u53ef\u3002\u7b49\u5f85\u51e0\u79d2\u949f - \u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u7684RX\u548cTX LED\u95ea\u70c1\u3002\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u5219\u4f1a\u5728\u72b6\u6001\u680f\u4e2d\u663e\u793a\u201cDone uploading\u201d\u6d88\u606f\u3002   \u4e0a\u4f20\u5b8c\u6210\u540e\u7684\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u7535\u8def\u677f\u4e0a\u7684LED\uff08D13\uff09\u5f00\u59cb\u95ea\u70c1\uff08\u7eff\u8272\uff09\u3002\u5982\u679c\u662f\uff0c\u606d\u559c\uff01\u4f60\u5df2\u7ecf\u5f97\u5230\u4e86Arduino\u7684\u8fd0\u884c\u3002\u5982\u679c\u60a8\u6709\u95ee\u9898\uff0c\u8bf7\u53c2\u9605\u6545\u969c\u6392\u9664\u5efa\u8bae\u3002  \u5728ATHEROS AR9331\u4e0a\u7f16\u7a0b  \u7f51\u7edc\u914d\u7f6e  Seeeduino Cloud\u5177\u6709WiFi\u63a5\u53e3\u548cLAN\u7aef\u53e3\u3002\u4ed6\u4eec\u90fd\u6709IP\u5730\u5740\uff0c\u53ef\u4ee5\u7528\u4e8e\u4e92\u8054\u7f51\u8fde\u63a5\u548c\u8bbe\u5907\u7ba1\u7406\u3002  1. Wi-Fi AP Mode  \u5f53\u60a8\u7b2c\u4e00\u6b21\u6253\u5f00Seeeduino Cloud\u65f6\uff0c\u5c06\u4f1a\u663e\u793aWi-Fi\u8fde\u63a5\u4e2d\u663e\u793a\u7684\u4e0d\u5b89\u5168WiFi\u7f51\u7edcSeeeduinoCloud-AXXXX\u3002\u60a8\u53ef\u4ee5\u5c06\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\uff0c\u5982\u4e0b\u6240\u793a\u3002\u60a8\u7684\u8ba1\u7b97\u673a\u5c06\u83b7\u5f97\u6b64\u7f51\u7edc\u7684IP\u5730\u5740  192.168.240.xxx \u3002Seeeduino Cloud\u7684\u9ed8\u8ba4IP\u5730\u5740\u4e3a  192.168.240.1 \u3002  2. Wi-Fi STA Mode  \u8fde\u63a5SeeeduinoCloud-AXXXX\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u641c\u7d22\u6846\u4e2d\u8f93\u5165172.31.255.254\u6216192.168.240.1\uff0c\u60a8\u5c06\u4f7f\u7528Web UI\u8fde\u63a5\u5230Seeeduino Cloud\u3002\u9ed8\u8ba4\u5bc6\u7801\u4e3a\u201cseeeduino\u201d\uff0c\u7136\u540e\u5355\u51fbLOG IN\u3002   \u70b9\u51fb \"SYSTEM\", \u9009\u62e9\u60a8\u7684Wi-Fi\u7f51\u7edc\uff0c\u8f93\u5165\u5bc6\u7801\uff0c\u7136\u540e\u70b9\u51fb \"CONFIGURE   RESTART\".   3. Onboard Ethernet  \u5f53\u60a8\u4f7f\u7528\u4ee5\u592a\u7f51\u7535\u7f06\u5c06Seeeduino Cloud\u8fde\u63a5\u5230\u6709\u7ebf\u7f51\u7edc\u65f6\uff0c\u5c06\u5c1d\u8bd5\u901a\u8fc7DHCP\u81ea\u52a8\u8fde\u63a5\u3002\u8be5\u677f\u5c06\u663e\u793a\u5728\u7f51\u7edc\u5217\u8868\u4e0a\uff0c\u5c31\u50cf\u901a\u8fc7WiFi\u4e00\u6837\u3002  Terminal  \u60a8\u53ef\u4ee5\u901a\u8fc7SSH\u8bbf\u95eeSeeeduino Cloud\u7684\u7ec8\u7aef\uff0c\u4ee5\u7f16\u7a0b\u6216\u914d\u7f6eATHEROS AR9331\u3002   \u4e0b\u8f7d SSH client \u4f8b\u5982  putty  \u4f7f\u7528Seeeduino Cloud\u7684IP\u5730\u5740\u5e76\u8fd0\u884cSSH client\u3002   username: root\npassword: seeeduino   Yun Bridge Library  The Bridge Library \u7b80\u5316\u4e86Arduino Board\u548cDragino HE\u4e4b\u95f4\u7684\u901a\u8baf\u3002 \u6765\u81eaAVR\u7684Bridge commands\u7531HE\u4e0a\u7684Python\u6765\u89e3\u6790.  \u4ed6\u7684\u4f5c\u7528\u5982\u4e0b\uff1a   \u5728Arduino\u8981\u6c42\u7684\u65f6\u5019\u5728GNU / Linux\u7aef\u6267\u884c\u7a0b\u5e8f  \u63d0\u4f9b\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4\uff0c\u7528\u4e8e\u5171\u4eab\u6570\u636e\uff0c\u5982Arduino\u548cInternet\u4e4b\u95f4\u7684\u4f20\u611f\u5668\u8bfb\u6570;  \u63a5\u6536\u6765\u81eaInternet\u7684\u547d\u4ee4\uff0c\u5e76\u5c06\u5176\u76f4\u63a5\u4f20\u9012\u5230Arduino\u3002   Arduino Official Website \u6709\u8be6\u7ec6\u7684\u89e3\u91ca\u548c\u5f88\u591a\u4f8b\u5b50\u6765\u5c55\u793a\u5982\u4f55\u4f7f\u7528Bridge. \u4ee5\u4e0b\u662f\u4f7f\u7528Bridge Library\u7684\u4e00\u4e9b\u793a\u4f8b.  Example 1: \u8ddfLinux\u6253\u62db\u547c  This example is a hello test between the Arduino and Seeeduino Cloud. The example can be found on the Arduino IDE  File   Examples   Bridge   ConsoleRead. A tutorial of this example can be found  here . You can see the code below with some additional details to understand it with the Seeeduino Cloud:\n\u8fd9\u4e2a\u4f8b\u5b50\u662fArduino\u548cSeeeduino Cloud\u4e4b\u95f4\u7684\u4e00\u4e2ahello\u6d4b\u8bd5\u3002\u8be5\u793a\u4f8b\u53ef\u4ee5\u5728Arduino IDE-  File -   Examples -   Bridge -   ConsoleRead\u4e2d\u627e\u5230\u3002\u8fd9\u4e2a\u4f8b\u5b50\u7684\u6559\u7a0b\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u67e5\u770b\u4e00\u4e9b\u5176\u4ed6\u8be6\u7ec6\u4fe1\u606f:  #include  Console.h \n\nString name;\n\nvoid setup() {\n    // Initialize Console and wait for port to open:\n    Bridge.begin();\n    Console.begin();\n\n    // Wait for Console port to connect\n    while (!Console);\n\n    Console.println( Hi, what s your name? );\n}\n\nvoid loop() {\n    if (Console.available()   0) {\n        char c = Console.read(); // read the next char received\n        // look for the newline character, this is the last character in the string\n        if (c ==  \\n ) {\n            //print text with the name received\n            Console.print( Hi  );\n            Console.print(name);\n            Console.println( ! Nice to meet you! );\n            Console.println();\n            // Ask again for name and clear the old name\n            Console.println( Hi, what s your name? );\n            name =  ;  // clear the name string\n        }\n        else {       // if the buffer is empty Cosole.read() returns -1\n            name += c; // append the read char from Console to the name string\n        }\n    }\n}  \u4f8b\u7a0b 2: \u4e0a\u4f20\u6570\u636e\u5230\u7269\u8054\u7f51\u670d\u52a1\u5668  \u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u5c06\u6570\u636e\u8bb0\u5f55\u5230\u516c\u5171IoT\u670d\u52a1\u5668\u201cXively\u201d\u3002\u793a\u4f8b\u662f\u4eceArduino IDE-  File -   Examples -   Bridge -   XivelyClient. \u8fd9\u4e2a\u4f8b\u5b50\u7684\u6559\u7a0b\u53ef\u4ee5\u5728 \u8fd9\u91cc \u8fd9\u91cc\u53c2\u8003\u3002\u4e0a\u4f20\u7a0b\u5e8f\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\uff1a   Seeeduino Cloud \u63a5\u5165\u4e92\u8054\u7f51\u3002  \u6839\u636e\u6559\u7a0b\u8f93\u5165\u60a8\u7684FEED ID\u548cAPI KEY\u3002\u6ce8\u610f\uff0cFEED ID\u5e94\u5728\u53cc\u5f15\u53f7\u201c\u201d\u5185\u3002   /*\n  Xively sensor client with Strings\n\n This sketch connects an analog sensor to Xively,\n using an Arduino Y\u00fan.\n\n created 15 March 2010\n updated 27 May 2013\n by Tom Igoe\n\n http://arduino.cc/en/Tutorial/YunXivelyClient\n\n */\n#include  Process.h \n#include  passwords.h       // contains my passwords, see below\n\n/*\n  NOTE: passwords.h is not included with this repo because it contains my passwords.\n You need to create it for your own version of this application.  To do so, make\n a new tab in Arduino, call it passwords.h, and include the following variables and constants:\n\n #define APIKEY         foo                   // replace your pachube api key here\n #define FEEDID        0000                   // replace your feed ID\n #define USERAGENT      my-project            // user agent is the project name\n */\n\n// set up net client info:\nconst unsigned long postingInterval = 60000;  //delay between updates to xively.com\nunsigned long lastRequest = 0;      // when you last made a request\nString dataString =  ;\n\nvoid setup() {\n    // start serial port:\n    Bridge.begin();\n    Serial.begin(9600);\n\n    while (!Serial);   // wait for Network Serial to open\n    Serial.println( Xively client );\n\n    // Do a first update immediately\n    updateData();\n    sendData();\n    lastRequest = millis();\n}\n\nvoid loop() {\n    // get a timestamp so you can calculate reading and sending intervals:\n    long now = millis();\n\n    // if the sending interval has passed since your\n    // last connection, then connect again and send data:\n    if (now - lastRequest  = postingInterval) {\n        updateData();\n        sendData();\n        lastRequest = now;\n    }\n}\n\nvoid updateData() {\n    // convert the readings to a String to send it:\n    dataString =  Temperature, ;\n    dataString += random(10) + 20;\n    // add pressure:\n    dataString +=  \\nPressure, ;\n    dataString += random(5) + 100;\n}\n\n// this method makes a HTTP connection to the server:\nvoid sendData() {\n    // form the string for the API header parameter:\n    String apiString =  X-ApiKey:  ;\n    apiString += APIKEY;\n\n    // form the string for the URL parameter:\n    String url =  https://api.xively.com/v2/feeds/ ;\n    url += FEEDID;\n    url +=  .csv ;\n\n    // Send the HTTP PUT request\n\n    // Is better to declare the Process here, so when the\n    // sendData function finishes the resources are immediately\n    // released. Declaring it global works too, BTW.\n    Process xively;\n    Serial.print( \\n\\nSending data...  );\n    xively.begin( curl );\n    xively.addParameter( -k );\n    xively.addParameter( --request );\n    xively.addParameter( PUT );\n    xively.addParameter( --data );\n    xively.addParameter(dataString);\n    xively.addParameter( --header );\n    xively.addParameter(apiString);\n    xively.addParameter(url);\n    xively.run();\n    Serial.println( done! );\n\n    // If there s incoming data from the net connection,\n    // send it out the Serial:\n    while (xively.available()   0) {\n        char c = xively.read();\n        Serial.write(c);\n    }\n}   \u4f8b\u7a0b 3: \u5c06\u6570\u636e\u8bb0\u5f55\u5728USB\u95ea\u5b58\u4e2d  \u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u5c06\u6570\u636e\u8bb0\u5f55\u5230USB\u95ea\u5b58\u3002\u672c\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u7a0b\u5e8f\u4e0e \u6b64\u5904 \u76f8\u540c\u3002\u5e76\u4e14\u53ef\u4ee5\u5728\u90a3\u91cc\u627e\u5230\u6e90\u4ee3\u7801\u3002Seeeduino Cloud\u5c06\u81ea\u52a8\u5c06USB\u95ea\u5b58\u6620\u5c04\u5230\u76ee\u5f55/ mnt /sda1\u3002\u800c\u7a0b\u5e8f\u4f1a\u5c06\u4f20\u611f\u5668\u6570\u636e\u9644\u52a0\u5230\u6587\u4ef6/mnt/sda1/data/datalog.csv\u3002\u56e0\u6b64\uff0c\u5728\u8fd0\u884c\u7a0b\u5e8f\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5728USB\u95ea\u5b58\u4e2d\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u3002  #include  FileIO.h      //FileIO class allow user to operate Linux file system\n#include  Console.h     //Console class provide the interactive between IDE and Yun Shield\nvoid setup() {\n    // Initialize the Console\n    Bridge.begin();\n    Console.begin();\n    FileSystem.begin();\n    while(!Console);   // wait for Serial port to connect.\n    Console.println( Filesystem datalogger\\n );\n}\nvoid loop () {\n    // make a string that start with a timestamp for assembling the data to log:\n    String dataString;\n    dataString += getTimeStamp();\n    dataString +=   ,  ;\n    // read three sensors and append to the string:\n    for (int analogPin = 0; analogPin   3; analogPin++) {\n        int sensor = analogRead(analogPin);\n        dataString += String(sensor);\n        if (analogPin   2) {\n            dataString +=  , ;    // separate the values with a comma\n        }\n    }\n    // open the file. note that only one file can be open at a time,\n    // so you have to close this one before opening another.\n    // The USB flash card is mounted at  /mnt/sda1  by default\n    File dataFile = FileSystem.open( /mnt/sda1/data/datalog.csv , FILE_APPEND);\n    // if the file is available, write to it:\n    if (dataFile) {\n        dataFile.println(dataString);\n        dataFile.close();\n        // print to the serial port too:\n        Console.println(dataString);\n    }\n    // if the file isn t open, pop up an error:\n    else {\n        Console.println( error opening datalog.csv );\n    }\n    delay(15000);  //Write every 15 seconds\n}\n// getTimeStamp function return a string with the time stamp\n// Yun Shield will call the Linux  date  command and get the time stamp\nString getTimeStamp() {\n    String result;\n    Process time;\n    // date is a command line utility to get the date and the time\n    // in different formats depending on the additional parameter\n    time.begin( date );\n    time.addParameter( +%D-%T );   // parameters: D for the complete date mm/dd/yy\n    //              T for the time hh:mm:ss\n    time.run();   // run the command\n    // read the output of the command\n    while(time.available() 0) {\n        char c = time.read();\n        if(c !=  \\n )\n        result += c;\n    }\n    return result;\n}   \u7269\u8054\u7f51\u670d\u52a1\u5668\u914d\u7f6e  IoT Server\u9875\u9762\u5141\u8bb8\u60a8\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u8bf8\u5982Xively\u4e4b\u7c7b\u7684IoT\u7f51\u7ad9\uff0c\u800c\u60a8\u53ea\u9700\u8981\u5c06\u4f20\u611f\u5668\u6570\u636e\u5199\u5165\u4e32\u53e3\u3002   \u7a0b\u5e8f\u5982\u4e0b\uff1a  /*\n  Simulate UART TX Data\n\n This sketch simulate Temperature and Humidity data to UART.\n\n To test the pass through feature for different IoT service\n\n created 25 Apr 2014\n by Dragino Technology Co., Limited\n\n Reference:\n http://wiki.dragino.com/index.php?title=Xively#Upload_data_to_Xively_use_Pass_Through_Mode\n\n */\nString dataString =  ;\n\nvoid setup() {\n    Serial1.begin(115200);\n}\n\nvoid loop() {\n    dataString =  temp: ;\n    dataString += random(10) + 20;\n    Serial1.println(dataString);  // upload Temperature data\n    delay(20000);\n    dataString =  humidity: ;\n    dataString += random(5) + 70;  // upload humidity data\n    Serial1.println(dataString);\n    delay(20000);\n}", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_6", 
            "text": "\u539f\u7406\u56fe   Seeeduino Cloud Eagle file  Seeeduino Cloud PDF file     \u56fa\u4ef6   Seeeduino Cloud Firmware     \u53c2\u8003\u8d44\u6599   Getting Started with Arduino  Arduino Language Reference  Download the Arduino Software(IDE)  Arduino FAQ  Arduino Introduction  Wikipedia page for Arduino  Arduino Yun Wiki  Getting started with Arduino Yun  Yun Bridge Library", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Seeeduino_Cloud/#faq", 
            "text": "\u4ec0\u4e48\u662f Yun Bridge Library?   Yun Bridge Library \u7528\u4e8eMPU\u548cMCU\u4e4b\u95f4\u901a\u4fe1\u7684\u673a\u5236\u3002 Seeeduino Cloud \u4f7f\u7528 Yun Bridge Library\uff0c \u8ba9Arduino\u7528\u6237\u8f7b\u677e\u6784\u5efa\u5176\u7269\u8054\u7f51\u9879\u76ee\u3002", 
            "title": "FAQ"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/", 
            "text": "Seeeduino LoRaWAN W / GPS\u662f\u5d4c\u5165\u4e86LoRaWan\u534f\u8bae\u548cGPS\u529f\u80fd\u7684Arduino\u5f00\u53d1\u677f\uff0c\u901a\u8fc7\u8fd9\u6b3e\u5f00\u53d1\u677f\u60a8\u53ef\u4ee5\u5feb\u901f\u4e0a\u624b\u5e76\u4e14\u4f53\u9a8c\u5230LoRa\u5728\u7269\u8054\u7f51\u9886\u57df\u7684\u4f18\u52bf\u3002\u57fa\u4e8e\u901a\u4fe1\u6a21\u5757RHF76-052AM\uff0cSeeeduino LoRaWAN\u4e0eLoRaWAN A / C\u7c7b\u517c\u5bb9\uff0c\u652f\u6301\u591a\u79cd\u901a\u4fe1\u9891\u7387\u3002\n\n\n4\u4e2a\u677f\u8f7d\u6807\u51c6Grove\u8fde\u63a5\u5668\u4f7fSeeeduino LoRaWan\u80fd\u591f\u65b9\u4fbf\u5730\u4e0eSeeedstudio\u7684\u6570\u767e\u4e2aGrove\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\u8fde\u63a5\uff0c\u4ece\u800c\u4f7f\u7528\u6237\u80fd\u591f\u66f4\u52a0\u4e13\u6ce8\u4e8e\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u4e0d\u540c\u6a21\u5757\u4e4b\u95f4\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002\u6b64\u5916\uff0c\u8be5\u677f\u8fd8\u5d4c\u5165\u4e86\u96c6\u6210\u7684\u9502\u7535\u6c60\u7ba1\u7406\u82af\u7247\uff0c\u53ef\u4ee5\u901a\u8fc7USB\u63a5\u53e3\u5bf9\u7535\u8def\u677f\u8fdb\u884c\u5145\u7535\u3002\u5728\u4f4e\u529f\u8017\u6a21\u5f0f\u4e0b\uff0c\u5145\u6ee1\u7535\u7684\u9502\u7535\u6c60\u53ef\u4ee5\u4e3a\u7535\u6c60\u4f9b\u7535\u6570\u6708\u3002\n\n\n\u5982\u679c\u60a8\u60f3\u5feb\u901f\u5efa\u7acb\u4e00\u4e2a\u7269\u8054\u7f51\u5e94\u7528\u7a0b\u5e8f\uff0cSeeeduino LoRaWAN\u5c06\u662f\u60a8\u7684\u6700\u4f73\u9009\u62e9\u3002\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7248\u672c\n\n\n\u7248\u672c\u65e5\u671f\n\n\n\u8d2d\u4e70\u65b9\u5f0f\n\n\n\n\n\n\n\n\n\n\nSeeeduino LoRaWAN\n\n\nDec 20, 2016\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\nSeeeduino LoRaWAN W/GPS\n\n\nDec 20, 2016\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\u8bf7\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u66f4\u65b0\u56fa\u4ef6\u3002\n\n\n\n\n\n\nTip\n\n\nSeeeduino LoRaWAN W / GPS\u7531GPS\u6a21\u5757\u548cLoRaWAN\u6a21\u5757\u7ec4\u6210\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u6700\u5c0f\u7535\u6d41 (3.7V \u9502\u7535\u6c60) - 2mA\n\n\n\u6700\u5c0f\u7535\u6d41 (3.7V \u9502\u7535\u6c60 \n \u53bb\u6389 PWR LED) - 80 uA\n\n\n\n\nArduino/Processor\uff08\u5904\u7406\u5668\uff09\n\n\n\n\nATSAMD21G18 @ 48MHz with 3.3V logic/power\n\n\nArduino compatible (based on Arduino Zero bootloader)\n\n\nEmbedded with lithium battery management chip and status indicator led\n\n\n20 GPIOs\n\n\n4 on-board Grove connectors\n\n\n18 x PWM pins\n\n\n6 x analog inputs\n\n\n1 x analog output (A0)\n\n\n3.3V regulator with 200mA output\n\n\nReset button\n\n\n\n\nLoRaWAN/RHF76-052\n\n\n\n\n1.45uA sleep current in WOR mode (Spec of the modules, not the board)\n\n\nHigh link budget of 160dB. -140dBm sensitivity and 19dBm Output power.\n\n\nDual band, 434/470MHz and 868/915MHz\n\n\n19dBm@434MHz/470MHz\n\n\n14dBm@868MHz/915MHz\n\n\n\n\n\n\nSupport LoRaWAN protocol, Class A/C\n\n\nUltra long range communication\n\n\nUltra low power consumption\n\n\nFirmware upgrade\n\n\nSmall size: 23mm X 28mm with 33 pin SMT package\n\n\n\n\n\n\nWarning\n\n\n\u4e0e\u5927\u591a\u6570Arduino\u548cGenuino\u677f\u4e0d\u540c\uff0cZore\u8fd0\u884c\u57283.3V\u3002I / O\u5f15\u811a\u53ef\u627f\u53d7\u7684\u6700\u5927\u7535\u538b\u4e3a3.3V\u3002\u5c06\u9ad8\u4e8e3.3V\u7684\u7535\u538b\u65bd\u52a0\u5230\u4efb\u4f55I / O\u5f15\u811a\u53ef\u80fd\u4f1a\u635f\u574f\u7535\u8def\u677f\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6570\u503c\n\n\n\n\n\n\n\n\n\n\n\u5fae\u5904\u7406\u5668\n\n\nATSAMD21G18, 32-Bit ARM Cortex M0+\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3.3V\n\n\n\n\n\n\nDigital I/O Pins\n\n\n20\n\n\n\n\n\n\nPWM Pins\n\n\nAll but pins 2 and 7\n\n\n\n\n\n\nUART\n\n\n2 (Native and Programming)\n\n\n\n\n\n\nAnalog Input Pins\n\n\n6, 12-bit ADC channels\n\n\n\n\n\n\nAnalog Output Pins\n\n\n1, 10-bit DAC\n\n\n\n\n\n\n\u5916\u90e8\u4e2d\u65ad\n\n\nAll pins except pin 4\n\n\n\n\n\n\n\u76f4\u6d41\u7535\u6d41 I/O Pin\n\n\n7 mA\n\n\n\n\n\n\nFlash Memory\n\n\n256 KB\n\n\n\n\n\n\nSRAM\n\n\n32 KB\n\n\n\n\n\n\nEEPROM\n\n\nNone\n\n\n\n\n\n\nClock Speed\n\n\n48 MHz\n\n\n\n\n\n\n\u957f\n\n\n68 mm\n\n\n\n\n\n\n\u5bbd\n\n\n53 mm\n\n\n\n\n\n\n\u51c0\u91cd\n\n\n19.6g(without GPS), 19.9(with GPS)\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7269\u8054\u7f51\n\n\n\u5b89\u4fdd\n\n\n\u667a\u80fd\u5bb6\u5c45\n\n\n\u667a\u80fd\u7535\u7f51\n\n\n\u667a\u80fd\u519c\u573a\n\n\n\u667a\u80fd\u516c\u56ed\n\n\n\n\n\n\nTip\n\n\n\n\n\u4f7f\u7528Grove\u6a21\u5757\u6269\u5c55\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\n\n\n\n\n\n\n\u677f\u4e0a\u67094\u4e2aGrove\u8fde\u63a5\u5668\u3002\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u542c\u8bf4Grove\uff0c\u8bf7\u70b9\u51fb \nGrove System\n \u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u7b80\u800c\u8a00\u4e4b\uff0cGroves\u7cfb\u7edf\u662f\u7531\u6570\u767e\u79cd\u6807\u51c6\u7edf\u4e00\u7684\u4f20\u611f\u5668\uff0c\u6267\u884c\u5668\uff0c\u663e\u793a\u5668\u4ee5\u53ca\u901a\u8baf\u6a21\u5757\u7ec4\u6210\u7684\u6807\u51c6\u5316\u7cfb\u7edf\u3002\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n1.\n Micro USB - Programming and supply power to the board\n\n\n2.\n Grove connectors\n\n\n3.\n JST2.0 Lipo battery input (3.7V) and charge status led\n\n\n4.\n DFU Button - Firmware mode button\n\n\n5.\n Reset Button\n\n\n6.\n Arduino Pinout\n\n\n7.\n ICSP pins\n\n\n8.\n Firmware mode led\n\n\n9.\n Wire antenna\n\n\nA.\n uFL antenna\n\n\nB.\n RF module - RHF76-052AM\n\n\nC.\n ARM Cortex M0 processor - ATSAMD21G18\n\n\nD.\n LEDs\n\n\nRX/TX\n - \u5f53\u6709UART\u6570\u636e\u4f20\u8f93\u65f6\u4f1a\u95ea\u70c1(from/to USB)\n\n\nL\n - an led connect to D13\n\n\nPWR\n - power\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\u5982\u679c\u8981\u4f7f\u75284\u677f\u8f7dGrove\u8fde\u63a5\u5668\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4digitalWrite\uff0838\uff0cHIGH\uff09\u6253\u5f00VCC\u3002\u5426\u5219\u60a8\u65e0\u6cd5\u4e3aGrove\u6a21\u5757\u63d0\u4f9b\u7535\u6e90\u3002\n\n\n\n\n\n\n\u7ba1\u811a\u56fe\n\n\n\n\n\n\n\n\nPin \u540d\u79f0\n\n\nGPIO \u7f16\u53f7\n\n\n\u5916\u90e8\u4e2d\u65ad\n\n\nPWM\n\n\nAnalog In\n\n\nAnalog Out\n\n\n\u529f\u80fd\n\n\n\n\n\n\n\n\n\n\n0\n\n\n#0\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nRX(Serial)\n\n\n\n\n\n\n1\n\n\n#1\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nTX(Serial)\n\n\n\n\n\n\n2\n\n\n#2\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n#3\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n#4\n\n\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n#5\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n#6\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n7\n\n\n#7\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n\n#8\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n9\n\n\n#9\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n10\n\n\n#10\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n11\n\n\n#11\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nSPI_MOSI\n\n\n\n\n\n\n12\n\n\n#12\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nSPI_MISO\n\n\n\n\n\n\n13\n\n\n#13\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nSPI_SCK\n\n\n\n\n\n\nSDA\n\n\n#20\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\nSCL\n\n\n#21\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\nA0\n\n\n#A0\n\n\nYES\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\nA1\n\n\n#A1\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nA2\n\n\n#A2\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nA3\n\n\n#A3\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nA4\n\n\n#A4\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\nVoltage of Battery\n\n\n\n\n\n\nA5\n\n\n#A5\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\nCharge Status\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u6240\u6709\u7684\u5f15\u811a\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6570\u5b57\u4fe1\u53f7\u7684\u8f93\u5165/\u8f93\u51fa\u3002\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5357 - Arduino IDE\n\n\n\n\nNote\n\n\n\n\n\u8fd9\u4e2a\u6307\u5357\u662f\u57fa\u4e8eWin10 \u548c Arduino IDE v1.6.0\n\n\n\n\n\n\n\u9996\u5148\u60a8\u9700\u8981\u5b89\u88c5\u6700\u65b0\u7684 Arduino IDE, \u7136\u540e\u70b9\u51fb\u8fd9\u91cc\u5c06 \nSeeeduino LoRa\n \u6dfb\u52a0\u5230\u60a8\u7684 Arduino IDE\u3002\n\n\n\u5b89\u88c5\u9a71\u52a8 (For Windows)\n\n\n\u5f53\u7b2c\u4e00\u6b21\u63d2\u5165\u7535\u8def\u677f\u65f6\uff0c\u60a8\u5e94\u8be5\u4f1a\u5f97\u5230\u540d\u4e3aSeeeduino LoRaWAN\u7684USB COM\u8bbe\u5907\u3002\u70b9\u51fb\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u4e0b\u8f7d\u5f00\u53d1\u677f\u7684\u9a71\u52a8\u3002\n\n\n\n\n\u4e3a\u4e86\u786e\u4fdd\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u6210\u529f\uff0c\u8bf7\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u4ee5\u67e5\u770b \nSeeeduino LoRaWAN\n \u662f\u5426\u5b58\u5728\u3002\n\n\n\n\n\u95ea\u70c1\n\n\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4e0a\u4f20\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u793a\u4f8b - \u201c\u95ea\u70c1\u201d\u5230Seeeduino LoRaWAN\u3002\n\n\n\u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u7136\u540e\u5355\u51fb \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n 01.Basics \n Blink\n \u6765\u6253\u5f00\u4f8b\u7a0b\u6216\u8005\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n\n// the setup function runs once when you press reset or power the board\n\n\nvoid\n \nsetup\n()\n \n{\n\n  \n// initialize digital pin 13 as an output.\n\n  \npinMode\n(\n13\n,\n \nOUTPUT\n);\n\n\n}\n\n\n\n// the loop function runs over and over again forever\n\n\nvoid\n \nloop\n()\n \n{\n\n  \ndigitalWrite\n(\n13\n,\n \nHIGH\n);\n   \n// turn the LED on (HIGH is the voltage level)\n\n  \ndelay\n(\n1000\n);\n              \n// wait for a second\n\n  \ndigitalWrite\n(\n13\n,\n \nLOW\n);\n    \n// turn the LED off by making the voltage LOW\n\n  \ndelay\n(\n1000\n);\n              \n// wait for a second\n\n\n}\n\n\n\n\n\n\u7136\u540e,\n\n\n\u70b9\u51fb\u5de5\u5177\n\u677f\n Seeeduino LoRaWAN\n\n\n\u5355\u51fb\u5de5\u5177\n\u7aef\u53e3\u4ee5\u9009\u62e9\u6b63\u786e\u7684\u7aef\u53e3\u53f7\u3002\uff08\u4e0d\u8981\u9009\u62e9COM1\uff09\n\n\n\n\n\u7136\u540e\u70b9\u51fbArduino IDE\u5de6\u4e0a\u89d2\u7684\u4e0a\u4f20\u6309\u94ae\uff0c\u51e0\u79d2\u949f\u540e\u4f8b\u7a0b\u4e0a\u4f20\u6210\u529f\u3002\n\n\n\n\n\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u60a8\u5c06\u770b\u5230\u4e0b\u56fe\u6240\u793a\u7684\u7ea2\u8272\u4fe1\u606f\uff0c\u8fd9\u65f6\u89c2\u5bdf\u60a8\u7684\u677f\u8f7dLED\uff0c\u770b\uff0c\u5b83\u5728\u95ea\u70c1\uff01\n\n\n\n\n\u7535\u6c60\n\n\n\u60a8\u53ef\u4ee5\u901a\u8fc73.7V \u9502\u7535\u6c60\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u3002\u4ea7\u54c1\u5957\u4ef6\u4e2d\u6709\u4e00\u4e2aJST2.0\u7535\u7f06\uff0c\u5982\u679c\u60a8\u4e0d\u80fd\u627e\u5230\u5e26\u6709JST2.0\u8fde\u63a5\u5668\u7684\u7535\u6c60\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6839\u7ebf\u7f06\u3002\n\n\n\n\nWarning\n\n\n\n\n\u786e\u4fdd\u7535\u6c60\u7684\u6b63\u6781\u548c\u8d1f\u6781\u8fde\u63a5\u6b63\u786e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u635f\u574f\u7535\u8def\u677f\u3002.\n\n\n\n\n\n\n\u7535\u6c60\u7684\u5145\u7535\u72b6\u6001\u5f15\u811a\u548c\u6b63\u6781\u5f15\u811a\u5206\u522b\u8fde\u63a5\u5230A4\u548cA5\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u68c0\u6d4b\u7535\u6c60\u7684\u5145\u7535\u72b6\u6001\u548c\u6d4b\u91cf\u7535\u6c60\u7535\u538b\u3002\n\n\n\u590d\u5236\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u68c0\u6d4b\u7535\u6c60\u72b6\u6001\u3002\n\n\n\n\nNote\n\n\n\n\n\u5145\u7535\u65f6\uff0c\u72b6\u6001\u503c\u8fd4\u56de0\uff1b\u5145\u7535\u5b8c\u6210\u6216\u65e0\u7535\u6c60\u63d2\u5165\uff0c\u72b6\u6001\u503c\u8fd4\u56de1\u3002\n\n\n\n\n\n\n\u53d1\u9001\u548c\u63a5\u6536\u793a\u4f8b\n\n\nLoRaWAN\u6a21\u5757\u62e5\u6709\u4e00\u4e2a\u5f88\u597d\u7528\u7684\u5e93\uff0c\u5bf9\u4e8e\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u5f88\u591a\u5173\u4e8eLoRa\u7684\u534f\u8bae\uff08\u534f\u8bae\u662f\u5f88\u590d\u6742\u548c\u96be\u4ee5\u9605\u8bfb\u7684\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u60f3\u8981\u9ad8\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u4e00\u4e9b\u5173\u4e8eLoRa\u534f\u8bae\u7684\u77e5\u8bc6\u3002\u60a8\u4e0d\u9700\u8981\u4e0b\u8f7d\u5e93\uff0c\u5b83\u5df2\u7ecf\u5305\u542b\u5728\u5305\u4e2d\u3002\u60a8\u53ef\u4ee5\u5728 \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n LoRaWAN\n \u4e2d\u627e\u5230\u793a\u4f8b\u7a0b\u5e8f\u3002\n\n\n\u60a8\u9700\u89812\u5757Seeeduino LoRaWAN\u6765\u5b8c\u6210\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u7528\u4e8e\u53d1\u9001\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u63a5\u6536\u3002\n\n\n\u53d1\u9001\n\n\n\u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u7136\u540e\u5355\u51fb \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n LoRaWAN \n p2p_tx\n \u6765\u6253\u5f00\u4f8b\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u590d\u5236\u4e0b\u9762\u7684\u7684\u4ee3\u7801\u3002\n\u8be5\u4f8b\u7a0b\u5c06\u4f1a\u6bcf\u96943000 ms\u5e7f\u64ad\u4e00\u6b21 \"Hello World!\"\n\n\n// Seduino LoRaWAN - TX example\n#include \nLoRaWan.h\n\n\nvoid setup(void)\n{\n    SerialUSB.begin(115200);\n    lora.init();\n    lora.initP2PMode(433, SF12, BW125, 8, 8, 20);\n}\n\nvoid loop(void)\n{\n    lora.transferPacketP2PMode(\nHello World!\n);\n    SerialUSB.println(\nSend string.\n);\n    delay(3000);\n}\n\n\n\n\n\u63a5\u6536\n\n\n\u6253\u5f00\u60a8\u7684 Arduino IDE \u70b9\u51fb \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n LoRaWAN \n p2p_rx\n \u6765\u6253\u5f00\u4f8b\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u590d\u5236\u4e0b\u9762\u7684\u7684\u4ee3\u7801\uff1a\n\n\n// Seduino LoRaWAN - RX example\n#include \nLoRaWan.h\n\n\nunsigned char buffer[128] = {0, };\n\nvoid setup(void)\n{\n    SerialUSB.begin(115200);\n    lora.init();\n    lora.initP2PMode(433, SF12, BW125, 8, 8, 20);\n}\n\nvoid loop(void)\n{\n    short length = 0;\n    short rssi = 0;\n\n    memset(buffer, 0, 128);\n    length = lora.receivePacketP2PMode(buffer, 128,  \nrssi, 1);\n\n    if(length)\n    {\n        SerialUSB.print(\nLength is: \n);\n        SerialUSB.println(length);\n        SerialUSB.print(\nRSSI is: \n);\n        SerialUSB.println(rssi);\n        SerialUSB.print(\nData is: \n);\n        for(unsigned char i = 0; i \n length; i ++)\n        {\n            SerialUSB.print(\n0x\n);\n            SerialUSB.print(buffer[i], HEX);\n            SerialUSB.print(\n \n);\n        }\n        SerialUSB.println();\n    }\n}\n\n\n\n\n\u5728\u4e24\u4e2a\u4f8b\u7a0b\u90fd\u4e0a\u4f20\u5b8c\u6bd5\u540e\uff0c\u6253\u5f00\u63a5\u6536\u677f\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u83b7\u53d6\u4e00\u4e9b\u6570\u636e\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n\n\nNote\n\n\n\u6211\u4eec\u5c06\u5f88\u5feb\u4e3aLoRa\u63d0\u4f9b\u7f51\u5173\u5957\u4ef6\uff0c\u6211\u4eec\u5c06\u5728\u5957\u4ef6\u7684\u7ef4\u57fa\u4e0a\u6dfb\u52a0\u5173\u4e8eAPB\u548cOTAA\u6a21\u5f0f\u7684\u5165\u95e8\u3002\n\n\n\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n\nW\u6211\u4eec\u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u4f8b\u5b50\u3002\u60a8\u53ef\u4ee5\u6253\u5f00 \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n LoRaWan\n \u6765\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4f8b\u7a0b\u5305\u62ec\uff1a\n\n\n\n\nABP\n\n\nOTAA\n\n\np2p-rx\n\n\np2p-tx\n\n\n\n\nGPS\u6570\u636e\n\n\n\n\nNote\n\n\n\u672c\u7ae0\u4ec5\u9002\u7528\u4e8eSeeeduino LoRaWAN W / GPS\u3002\n\n\n\n\n\u590d\u5236\u4e0b\u9762\u7684\u4ee3\u7801\u4f60Seeeduino LoRaWAN W / GPS\u3002\n\nvoid setup()\n{\n    Serial.begin(9600);\n    SerialUSB.begin(115200);\n}\n\nvoid loop()\n{\n    while(Serial.available())\n    {\n        SerialUSB.write(Serial.read());\n    }\n    while(SerialUSB.available())\n    {\n        Serial.write(SerialUSB.read());\n    }\n}\n\n\n\n\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u7136\u540e\u60a8\u5c06\u4eceGPS\u83b7\u53d6\u6570\u636e\u3002\n\n\n\n\u4f4e\u529f\u8017\u3001\u5c0f\u7535\u6d41\n\n\n\u6211\u4eec\u6d4b\u8bd5\u7684\u6700\u5c0f\u7535\u6d41\u4e3a80uA\uff08\u5bf9\u4e8eSeeeduino LoRaWAN\uff09\u3002\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\u3002\n\n\n1\u3001\u53d6\u4e0bPWR LED\uff08\u5982\u679c\u4e0d\u53d6\u4e0b\u6b64LED\uff0c\u7535\u6d41\u5c06\n 2mA\uff09\n2\u3001\u53d6\u4e0bCHG LED\n3\u3001\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002\n\n\n\n\n\n#include \nLoRaWan.h\n\n#include \nEnergySaving.h\n\n\nEnergySaving nrgSave;\n\nvoid blink()\n{\n    for(unsigned char i = 0; i \n 5; i ++)\n    {\n        digitalWrite(13,HIGH);\n        delay(500);\n        digitalWrite(13,LOW);\n        delay(500);\n    }\n}\n\nvoid setup()\n{\n    for(unsigned char i = 0; i \n 26; i ++)      // important, set all pins to HIGH to save power\n    {\n        pinMode(i, OUTPUT);\n        digitalWrite(i, HIGH);\n    }\n\n    lora.init();\n    blink();    \n    lora.setDeviceLowPower();\n    blink();    \n    nrgSave.begin(WAKE_EXT_INTERRUPT, 7, dummy);    // buton on D7 to wake up the board\n    nrgSave.standby();\n}\n\nvoid loop()\n{\n    blink();\n    nrgSave.standby();\n}\n\nvoid dummy(void)\n{\n    // do something\n}\n\n// END File\n\n\n\n\n\u66f4\u65b0\u56fa\u4ef6\n\n\n\u56fa\u4ef6\u7248\u672c\u4e3a2.0.10\uff0c\u5982\u679c\u60a8\u60f3\u68c0\u67e5\u60a8\u7684\u7248\u672c\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002\n\nvoid setup()\n{\n    Serial1.begin(9600);\n    SerialUSB.begin(115200);\n}\n\nvoid loop()\n{\n    while(Serial1.available())\n    {\n        SerialUSB.write(Serial1.read());\n    }\n    while(SerialUSB.available())\n    {\n        Serial1.write(SerialUSB.read());\n    }\n}\n\n\n\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u7136\u540e\u8f93\u5165\uff1a\n\nAT+VER\n\n\n\u7136\u540e\u60a8\u5c06\u770b\u5230\u60a8\u7684\u5f00\u53d1\u677f\u5f53\u524d\u7684\u7248\u672c\u3002\n\n\n\n\n\u5982\u679c\u8981\u66f4\u65b0\u56fa\u4ef6\uff0c\u5219\u9700\u8981\u9075\u5faa\u51e0\u4e2a\u6b65\u9aa4\u3002\n\n\n\u6b65\u9aa41\n\n\n\u5c06\u4e0b\u5217\u4ee3\u7801\u590d\u5236\u5e76\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002\n\n\n// Update firmware to RHF76-052AM\n\n\n#include\n \nArduino.h\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nSerialDBG\n.\nbegin\n(\n115200\n);\n\n    \nSerialUSB\n.\nbegin\n(\n115200\n);\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nwhile\n(\nSerialDBG\n.\navailable\n())\n\n    \n{\n\n        \nSerialUSB\n.\nwrite\n(\nSerialDBG\n.\nread\n());\n\n    \n}\n\n    \nwhile\n(\nSerialUSB\n.\navailable\n())\n\n    \n{\n\n        \nSerialDBG\n.\nwrite\n(\nSerialUSB\n.\nread\n());\n\n    \n}\n\n\n}\n\n\n\n\n\n\u6b65\u9aa42\n\n\n\u5c06\u677f\u5361\u7684USB\u63a5\u5934\u53d6\u4e0b\uff0c\u7136\u540e\u63d2\u4e0a\uff0c\u91cd\u65b0\u8fde\u63a5\u7535\u8111\uff0c\u7136\u540e\u70b9\u51fbDFU\u6309\u94ae\uff0c\u7b49\u5230\u56fa\u4ef6\u6a21\u5f0fLED\u5f00\u59cb\u95ea\u70c1\u60a8\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002\n\n\n\u6b65\u9aa43\n\n\n\u70b9\u51fb\u4e0b\u8f7d\u6700\u65b0\u7684\u56fa\u4ef6 .bin file.\n\n\n\n\n\u6b65\u9aa44\n\n\n\u6253\u5f00PuTTy\u5e76\u8fde\u63a5\u5230\u7535\u8def\u677f\n\n\n\n\n\n\nTip\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6700\u65b0\u7684PuTTy\uff1a.php \nhttp://www.extraputty.com/download.php\n\n\n\n\n\n\n\u6b65\u9aa45\n\n\n\u5c06\u60a8\u7684\u5f00\u53d1\u677f\u548cPutty\u76f8\u8fde\uff0c\u60a8\u5c06\u770b\u5230\u5b57\u6bcd\u201cC\u201d\u4e0d\u65ad\u5730\u6253\u5370\u5728\u5c4f\u5e55\u4e0a\u3002\u70b9\u51fb**Files Transfer\uff08\u6587\u4ef6\u4f20\u8f93\uff09 \n Ymodem \n Send**, \u7136\u540e\u9009\u62e9\u6b65\u9aa44\u4e2d\u4e0b\u8f7d\u7684.bin file\u3002\n\n\n\u7136\u540e\u5347\u7ea7\u5c31\u5f00\u59cb\u4e86\u3002\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[eagle\u539f\u7406\u56fe]\n \nSchematics in Eagle\n\n\n[sketchup\u6587\u4ef6]\n \nSketchup file(3D)\n\n\n[RHF76-052 \u7535\u6c14\u56fe]\n  \nCE certification of RHF 76-052\n\n\n[RHF76-052\u56fa\u4ef6]\n \nRHF76-052 Firmware V2.0.10\n\n\n[\u6570\u636e\u624b\u518cRHF76-052AM]\n \nDatasheet of RHF76-052AM", 
            "title": "Seeeduino_LoRAWAN"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_1", 
            "text": "\u6700\u5c0f\u7535\u6d41 (3.7V \u9502\u7535\u6c60) - 2mA  \u6700\u5c0f\u7535\u6d41 (3.7V \u9502\u7535\u6c60   \u53bb\u6389 PWR LED) - 80 uA", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#arduinoprocessor", 
            "text": "ATSAMD21G18 @ 48MHz with 3.3V logic/power  Arduino compatible (based on Arduino Zero bootloader)  Embedded with lithium battery management chip and status indicator led  20 GPIOs  4 on-board Grove connectors  18 x PWM pins  6 x analog inputs  1 x analog output (A0)  3.3V regulator with 200mA output  Reset button", 
            "title": "Arduino/Processor\uff08\u5904\u7406\u5668\uff09"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#lorawanrhf76-052", 
            "text": "1.45uA sleep current in WOR mode (Spec of the modules, not the board)  High link budget of 160dB. -140dBm sensitivity and 19dBm Output power.  Dual band, 434/470MHz and 868/915MHz  19dBm@434MHz/470MHz  14dBm@868MHz/915MHz    Support LoRaWAN protocol, Class A/C  Ultra long range communication  Ultra low power consumption  Firmware upgrade  Small size: 23mm X 28mm with 33 pin SMT package    Warning  \u4e0e\u5927\u591a\u6570Arduino\u548cGenuino\u677f\u4e0d\u540c\uff0cZore\u8fd0\u884c\u57283.3V\u3002I / O\u5f15\u811a\u53ef\u627f\u53d7\u7684\u6700\u5927\u7535\u538b\u4e3a3.3V\u3002\u5c06\u9ad8\u4e8e3.3V\u7684\u7535\u538b\u65bd\u52a0\u5230\u4efb\u4f55I / O\u5f15\u811a\u53ef\u80fd\u4f1a\u635f\u574f\u7535\u8def\u677f\u3002", 
            "title": "LoRaWAN/RHF76-052"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_2", 
            "text": "\u9879\u76ee  \u6570\u503c      \u5fae\u5904\u7406\u5668  ATSAMD21G18, 32-Bit ARM Cortex M0+    \u5de5\u4f5c\u7535\u538b  3.3V    Digital I/O Pins  20    PWM Pins  All but pins 2 and 7    UART  2 (Native and Programming)    Analog Input Pins  6, 12-bit ADC channels    Analog Output Pins  1, 10-bit DAC    \u5916\u90e8\u4e2d\u65ad  All pins except pin 4    \u76f4\u6d41\u7535\u6d41 I/O Pin  7 mA    Flash Memory  256 KB    SRAM  32 KB    EEPROM  None    Clock Speed  48 MHz    \u957f  68 mm    \u5bbd  53 mm    \u51c0\u91cd  19.6g(without GPS), 19.9(with GPS)", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_3", 
            "text": "\u7269\u8054\u7f51  \u5b89\u4fdd  \u667a\u80fd\u5bb6\u5c45  \u667a\u80fd\u7535\u7f51  \u667a\u80fd\u519c\u573a  \u667a\u80fd\u516c\u56ed    Tip   \u4f7f\u7528Grove\u6a21\u5757\u6269\u5c55\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f    \u677f\u4e0a\u67094\u4e2aGrove\u8fde\u63a5\u5668\u3002\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u542c\u8bf4Grove\uff0c\u8bf7\u70b9\u51fb  Grove System  \u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u7b80\u800c\u8a00\u4e4b\uff0cGroves\u7cfb\u7edf\u662f\u7531\u6570\u767e\u79cd\u6807\u51c6\u7edf\u4e00\u7684\u4f20\u611f\u5668\uff0c\u6267\u884c\u5668\uff0c\u663e\u793a\u5668\u4ee5\u53ca\u901a\u8baf\u6a21\u5757\u7ec4\u6210\u7684\u6807\u51c6\u5316\u7cfb\u7edf\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_4", 
            "text": "1.  Micro USB - Programming and supply power to the board  2.  Grove connectors  3.  JST2.0 Lipo battery input (3.7V) and charge status led  4.  DFU Button - Firmware mode button  5.  Reset Button  6.  Arduino Pinout  7.  ICSP pins  8.  Firmware mode led  9.  Wire antenna  A.  uFL antenna  B.  RF module - RHF76-052AM  C.  ARM Cortex M0 processor - ATSAMD21G18  D.  LEDs  RX/TX  - \u5f53\u6709UART\u6570\u636e\u4f20\u8f93\u65f6\u4f1a\u95ea\u70c1(from/to USB)  L  - an led connect to D13  PWR  - power      Tip   \u5982\u679c\u8981\u4f7f\u75284\u677f\u8f7dGrove\u8fde\u63a5\u5668\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4digitalWrite\uff0838\uff0cHIGH\uff09\u6253\u5f00VCC\u3002\u5426\u5219\u60a8\u65e0\u6cd5\u4e3aGrove\u6a21\u5757\u63d0\u4f9b\u7535\u6e90\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_5", 
            "text": "Pin \u540d\u79f0  GPIO \u7f16\u53f7  \u5916\u90e8\u4e2d\u65ad  PWM  Analog In  Analog Out  \u529f\u80fd      0  #0  YES  YES    RX(Serial)    1  #1  YES  YES    TX(Serial)    2  #2  YES        3  #3  YES  YES       4  #4   YES       5  #5  YES  YES       6  #6  YES  YES       7  #7  YES        8  #8  YES  YES       9  #9  YES  YES       10  #10  YES  YES       11  #11  YES  YES    SPI_MOSI    12  #12  YES  YES    SPI_MISO    13  #13  YES  YES    SPI_SCK    SDA  #20  YES  YES       SCL  #21  YES  YES       A0  #A0  YES  YES  YES  YES     A1  #A1  YES  YES  YES      A2  #A2  YES  YES  YES      A3  #A3  YES  YES  YES      A4  #A4  YES  YES  YES   Voltage of Battery    A5  #A5  YES  YES  YES   Charge Status      Note   \u6240\u6709\u7684\u5f15\u811a\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6570\u5b57\u4fe1\u53f7\u7684\u8f93\u5165/\u8f93\u51fa\u3002", 
            "title": "\u7ba1\u811a\u56fe"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#-arduino-ide", 
            "text": "Note   \u8fd9\u4e2a\u6307\u5357\u662f\u57fa\u4e8eWin10 \u548c Arduino IDE v1.6.0    \u9996\u5148\u60a8\u9700\u8981\u5b89\u88c5\u6700\u65b0\u7684 Arduino IDE, \u7136\u540e\u70b9\u51fb\u8fd9\u91cc\u5c06  Seeeduino LoRa  \u6dfb\u52a0\u5230\u60a8\u7684 Arduino IDE\u3002", 
            "title": "\u5165\u95e8\u6307\u5357 - Arduino IDE"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#for-windows", 
            "text": "\u5f53\u7b2c\u4e00\u6b21\u63d2\u5165\u7535\u8def\u677f\u65f6\uff0c\u60a8\u5e94\u8be5\u4f1a\u5f97\u5230\u540d\u4e3aSeeeduino LoRaWAN\u7684USB COM\u8bbe\u5907\u3002\u70b9\u51fb\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u4e0b\u8f7d\u5f00\u53d1\u677f\u7684\u9a71\u52a8\u3002   \u4e3a\u4e86\u786e\u4fdd\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u6210\u529f\uff0c\u8bf7\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u4ee5\u67e5\u770b  Seeeduino LoRaWAN  \u662f\u5426\u5b58\u5728\u3002", 
            "title": "\u5b89\u88c5\u9a71\u52a8 (For Windows)"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_6", 
            "text": "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4e0a\u4f20\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u793a\u4f8b - \u201c\u95ea\u70c1\u201d\u5230Seeeduino LoRaWAN\u3002  \u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u7136\u540e\u5355\u51fb  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   01.Basics   Blink  \u6765\u6253\u5f00\u4f8b\u7a0b\u6216\u8005\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff1a  // the setup function runs once when you press reset or power the board  void   setup ()   { \n   // initialize digital pin 13 as an output. \n   pinMode ( 13 ,   OUTPUT );  }  // the loop function runs over and over again forever  void   loop ()   { \n   digitalWrite ( 13 ,   HIGH );     // turn the LED on (HIGH is the voltage level) \n   delay ( 1000 );                // wait for a second \n   digitalWrite ( 13 ,   LOW );      // turn the LED off by making the voltage LOW \n   delay ( 1000 );                // wait for a second  }   \u7136\u540e,  \u70b9\u51fb\u5de5\u5177 \u677f  Seeeduino LoRaWAN  \u5355\u51fb\u5de5\u5177 \u7aef\u53e3\u4ee5\u9009\u62e9\u6b63\u786e\u7684\u7aef\u53e3\u53f7\u3002\uff08\u4e0d\u8981\u9009\u62e9COM1\uff09   \u7136\u540e\u70b9\u51fbArduino IDE\u5de6\u4e0a\u89d2\u7684\u4e0a\u4f20\u6309\u94ae\uff0c\u51e0\u79d2\u949f\u540e\u4f8b\u7a0b\u4e0a\u4f20\u6210\u529f\u3002   \u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u60a8\u5c06\u770b\u5230\u4e0b\u56fe\u6240\u793a\u7684\u7ea2\u8272\u4fe1\u606f\uff0c\u8fd9\u65f6\u89c2\u5bdf\u60a8\u7684\u677f\u8f7dLED\uff0c\u770b\uff0c\u5b83\u5728\u95ea\u70c1\uff01", 
            "title": "\u95ea\u70c1"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_7", 
            "text": "\u60a8\u53ef\u4ee5\u901a\u8fc73.7V \u9502\u7535\u6c60\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u3002\u4ea7\u54c1\u5957\u4ef6\u4e2d\u6709\u4e00\u4e2aJST2.0\u7535\u7f06\uff0c\u5982\u679c\u60a8\u4e0d\u80fd\u627e\u5230\u5e26\u6709JST2.0\u8fde\u63a5\u5668\u7684\u7535\u6c60\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6839\u7ebf\u7f06\u3002   Warning   \u786e\u4fdd\u7535\u6c60\u7684\u6b63\u6781\u548c\u8d1f\u6781\u8fde\u63a5\u6b63\u786e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u635f\u574f\u7535\u8def\u677f\u3002.    \u7535\u6c60\u7684\u5145\u7535\u72b6\u6001\u5f15\u811a\u548c\u6b63\u6781\u5f15\u811a\u5206\u522b\u8fde\u63a5\u5230A4\u548cA5\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u68c0\u6d4b\u7535\u6c60\u7684\u5145\u7535\u72b6\u6001\u548c\u6d4b\u91cf\u7535\u6c60\u7535\u538b\u3002  \u590d\u5236\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u68c0\u6d4b\u7535\u6c60\u72b6\u6001\u3002   Note   \u5145\u7535\u65f6\uff0c\u72b6\u6001\u503c\u8fd4\u56de0\uff1b\u5145\u7535\u5b8c\u6210\u6216\u65e0\u7535\u6c60\u63d2\u5165\uff0c\u72b6\u6001\u503c\u8fd4\u56de1\u3002", 
            "title": "\u7535\u6c60"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_8", 
            "text": "LoRaWAN\u6a21\u5757\u62e5\u6709\u4e00\u4e2a\u5f88\u597d\u7528\u7684\u5e93\uff0c\u5bf9\u4e8e\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u5f88\u591a\u5173\u4e8eLoRa\u7684\u534f\u8bae\uff08\u534f\u8bae\u662f\u5f88\u590d\u6742\u548c\u96be\u4ee5\u9605\u8bfb\u7684\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u60f3\u8981\u9ad8\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u4e00\u4e9b\u5173\u4e8eLoRa\u534f\u8bae\u7684\u77e5\u8bc6\u3002\u60a8\u4e0d\u9700\u8981\u4e0b\u8f7d\u5e93\uff0c\u5b83\u5df2\u7ecf\u5305\u542b\u5728\u5305\u4e2d\u3002\u60a8\u53ef\u4ee5\u5728  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   LoRaWAN  \u4e2d\u627e\u5230\u793a\u4f8b\u7a0b\u5e8f\u3002  \u60a8\u9700\u89812\u5757Seeeduino LoRaWAN\u6765\u5b8c\u6210\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u7528\u4e8e\u53d1\u9001\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u63a5\u6536\u3002", 
            "title": "\u53d1\u9001\u548c\u63a5\u6536\u793a\u4f8b"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_9", 
            "text": "\u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u7136\u540e\u5355\u51fb  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   LoRaWAN   p2p_tx  \u6765\u6253\u5f00\u4f8b\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u590d\u5236\u4e0b\u9762\u7684\u7684\u4ee3\u7801\u3002\n\u8be5\u4f8b\u7a0b\u5c06\u4f1a\u6bcf\u96943000 ms\u5e7f\u64ad\u4e00\u6b21 \"Hello World!\"  // Seduino LoRaWAN - TX example\n#include  LoRaWan.h \n\nvoid setup(void)\n{\n    SerialUSB.begin(115200);\n    lora.init();\n    lora.initP2PMode(433, SF12, BW125, 8, 8, 20);\n}\n\nvoid loop(void)\n{\n    lora.transferPacketP2PMode( Hello World! );\n    SerialUSB.println( Send string. );\n    delay(3000);\n}", 
            "title": "\u53d1\u9001"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_10", 
            "text": "\u6253\u5f00\u60a8\u7684 Arduino IDE \u70b9\u51fb  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   LoRaWAN   p2p_rx  \u6765\u6253\u5f00\u4f8b\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u590d\u5236\u4e0b\u9762\u7684\u7684\u4ee3\u7801\uff1a  // Seduino LoRaWAN - RX example\n#include  LoRaWan.h \n\nunsigned char buffer[128] = {0, };\n\nvoid setup(void)\n{\n    SerialUSB.begin(115200);\n    lora.init();\n    lora.initP2PMode(433, SF12, BW125, 8, 8, 20);\n}\n\nvoid loop(void)\n{\n    short length = 0;\n    short rssi = 0;\n\n    memset(buffer, 0, 128);\n    length = lora.receivePacketP2PMode(buffer, 128,   rssi, 1);\n\n    if(length)\n    {\n        SerialUSB.print( Length is:  );\n        SerialUSB.println(length);\n        SerialUSB.print( RSSI is:  );\n        SerialUSB.println(rssi);\n        SerialUSB.print( Data is:  );\n        for(unsigned char i = 0; i   length; i ++)\n        {\n            SerialUSB.print( 0x );\n            SerialUSB.print(buffer[i], HEX);\n            SerialUSB.print(   );\n        }\n        SerialUSB.println();\n    }\n}  \u5728\u4e24\u4e2a\u4f8b\u7a0b\u90fd\u4e0a\u4f20\u5b8c\u6bd5\u540e\uff0c\u6253\u5f00\u63a5\u6536\u677f\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u83b7\u53d6\u4e00\u4e9b\u6570\u636e\u5982\u4e0b\u6240\u793a\uff1a    Note  \u6211\u4eec\u5c06\u5f88\u5feb\u4e3aLoRa\u63d0\u4f9b\u7f51\u5173\u5957\u4ef6\uff0c\u6211\u4eec\u5c06\u5728\u5957\u4ef6\u7684\u7ef4\u57fa\u4e0a\u6dfb\u52a0\u5173\u4e8eAPB\u548cOTAA\u6a21\u5f0f\u7684\u5165\u95e8\u3002", 
            "title": "\u63a5\u6536"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_11", 
            "text": "W\u6211\u4eec\u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u4f8b\u5b50\u3002\u60a8\u53ef\u4ee5\u6253\u5f00  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   LoRaWan  \u6765\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4f8b\u7a0b\u5305\u62ec\uff1a   ABP  OTAA  p2p-rx  p2p-tx", 
            "title": "\u4e3e\u4e2a\u4f8b\u5b50"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#gps", 
            "text": "Note  \u672c\u7ae0\u4ec5\u9002\u7528\u4e8eSeeeduino LoRaWAN W / GPS\u3002   \u590d\u5236\u4e0b\u9762\u7684\u4ee3\u7801\u4f60Seeeduino LoRaWAN W / GPS\u3002 void setup()\n{\n    Serial.begin(9600);\n    SerialUSB.begin(115200);\n}\n\nvoid loop()\n{\n    while(Serial.available())\n    {\n        SerialUSB.write(Serial.read());\n    }\n    while(SerialUSB.available())\n    {\n        Serial.write(SerialUSB.read());\n    }\n}  \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u7136\u540e\u60a8\u5c06\u4eceGPS\u83b7\u53d6\u6570\u636e\u3002", 
            "title": "GPS\u6570\u636e"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_12", 
            "text": "\u6211\u4eec\u6d4b\u8bd5\u7684\u6700\u5c0f\u7535\u6d41\u4e3a80uA\uff08\u5bf9\u4e8eSeeeduino LoRaWAN\uff09\u3002\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\u3002  1\u3001\u53d6\u4e0bPWR LED\uff08\u5982\u679c\u4e0d\u53d6\u4e0b\u6b64LED\uff0c\u7535\u6d41\u5c06  2mA\uff09\n2\u3001\u53d6\u4e0bCHG LED\n3\u3001\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002  #include  LoRaWan.h \n#include  EnergySaving.h \n\nEnergySaving nrgSave;\n\nvoid blink()\n{\n    for(unsigned char i = 0; i   5; i ++)\n    {\n        digitalWrite(13,HIGH);\n        delay(500);\n        digitalWrite(13,LOW);\n        delay(500);\n    }\n}\n\nvoid setup()\n{\n    for(unsigned char i = 0; i   26; i ++)      // important, set all pins to HIGH to save power\n    {\n        pinMode(i, OUTPUT);\n        digitalWrite(i, HIGH);\n    }\n\n    lora.init();\n    blink();    \n    lora.setDeviceLowPower();\n    blink();    \n    nrgSave.begin(WAKE_EXT_INTERRUPT, 7, dummy);    // buton on D7 to wake up the board\n    nrgSave.standby();\n}\n\nvoid loop()\n{\n    blink();\n    nrgSave.standby();\n}\n\nvoid dummy(void)\n{\n    // do something\n}\n\n// END File", 
            "title": "\u4f4e\u529f\u8017\u3001\u5c0f\u7535\u6d41"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_13", 
            "text": "\u56fa\u4ef6\u7248\u672c\u4e3a2.0.10\uff0c\u5982\u679c\u60a8\u60f3\u68c0\u67e5\u60a8\u7684\u7248\u672c\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002 void setup()\n{\n    Serial1.begin(9600);\n    SerialUSB.begin(115200);\n}\n\nvoid loop()\n{\n    while(Serial1.available())\n    {\n        SerialUSB.write(Serial1.read());\n    }\n    while(SerialUSB.available())\n    {\n        Serial1.write(SerialUSB.read());\n    }\n} \n\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u7136\u540e\u8f93\u5165\uff1a AT+VER \n\u7136\u540e\u60a8\u5c06\u770b\u5230\u60a8\u7684\u5f00\u53d1\u677f\u5f53\u524d\u7684\u7248\u672c\u3002   \u5982\u679c\u8981\u66f4\u65b0\u56fa\u4ef6\uff0c\u5219\u9700\u8981\u9075\u5faa\u51e0\u4e2a\u6b65\u9aa4\u3002  \u6b65\u9aa41  \u5c06\u4e0b\u5217\u4ee3\u7801\u590d\u5236\u5e76\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002  // Update firmware to RHF76-052AM  #include   Arduino.h  void   setup ()  { \n     SerialDBG . begin ( 115200 ); \n     SerialUSB . begin ( 115200 );  }  void   loop ()  { \n     while ( SerialDBG . available ()) \n     { \n         SerialUSB . write ( SerialDBG . read ()); \n     } \n     while ( SerialUSB . available ()) \n     { \n         SerialDBG . write ( SerialUSB . read ()); \n     }  }   \u6b65\u9aa42  \u5c06\u677f\u5361\u7684USB\u63a5\u5934\u53d6\u4e0b\uff0c\u7136\u540e\u63d2\u4e0a\uff0c\u91cd\u65b0\u8fde\u63a5\u7535\u8111\uff0c\u7136\u540e\u70b9\u51fbDFU\u6309\u94ae\uff0c\u7b49\u5230\u56fa\u4ef6\u6a21\u5f0fLED\u5f00\u59cb\u95ea\u70c1\u60a8\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002  \u6b65\u9aa43  \u70b9\u51fb\u4e0b\u8f7d\u6700\u65b0\u7684\u56fa\u4ef6 .bin file.   \u6b65\u9aa44  \u6253\u5f00PuTTy\u5e76\u8fde\u63a5\u5230\u7535\u8def\u677f    Tip   \u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6700\u65b0\u7684PuTTy\uff1a.php  http://www.extraputty.com/download.php    \u6b65\u9aa45  \u5c06\u60a8\u7684\u5f00\u53d1\u677f\u548cPutty\u76f8\u8fde\uff0c\u60a8\u5c06\u770b\u5230\u5b57\u6bcd\u201cC\u201d\u4e0d\u65ad\u5730\u6253\u5370\u5728\u5c4f\u5e55\u4e0a\u3002\u70b9\u51fb**Files Transfer\uff08\u6587\u4ef6\u4f20\u8f93\uff09   Ymodem   Send**, \u7136\u540e\u9009\u62e9\u6b65\u9aa44\u4e2d\u4e0b\u8f7d\u7684.bin file\u3002  \u7136\u540e\u5347\u7ea7\u5c31\u5f00\u59cb\u4e86\u3002", 
            "title": "\u66f4\u65b0\u56fa\u4ef6"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_14", 
            "text": "[eagle\u539f\u7406\u56fe]   Schematics in Eagle  [sketchup\u6587\u4ef6]   Sketchup file(3D)  [RHF76-052 \u7535\u6c14\u56fe]    CE certification of RHF 76-052  [RHF76-052\u56fa\u4ef6]   RHF76-052 Firmware V2.0.10  [\u6570\u636e\u624b\u518cRHF76-052AM]   Datasheet of RHF76-052AM", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/BeagleBone/", 
            "text": "BeagleBones\u5728\u5fae\u63a7\u5236\u5668\u4e16\u754c\u4e2d\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u665a\uff0c\u4f46\u662f\u9ad8\u6027\u80fd\u548c\u4f4e\u529f\u8017\u4f7f\u5176\u6210\u4e3a\u5f00\u653e\u786c\u4ef6\u9886\u57df\u7684\u4e09\u5927\u6d41\u884c\u5e73\u53f0\u4e4b\u4e00\u3002 Beagles\u610f\u5473\u7740\u5c0f\u5305\u88c5\u4e2d\u7684\u5927\u529f\u80fd\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5c0f\u578bPC\u53ef\u4ee5\u7528\u4e8e\u60a8\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5904\u7406\u4e0e\u684c\u9762PC\u76f8\u540c\u7684\u8bb8\u591a\u76f8\u540c\u4efb\u52a1\u3002\u7c7b\u4f3c\u4e8eArduino\u548cRaspberry Pi\uff0cBeaglebone\u677f\u88ab\u827a\u672f\u5bb6\uff0c\u8bbe\u8ba1\u5e08\u548c\u7231\u597d\u8005\u7528\u6765\u5b9e\u73b0\u4ed6\u4eec\u7684\u9879\u76ee\u3002\n\n\nBeagleBone\u677f\u662f\u7f8e\u5999\u7684\u677f\uff0c\u4f46Seeed\u661f\u7403\u4e0a\u7684\u4eba\u5bf9\u76ee\u524d\u7684Beaglebone\u5e76\u4e0d\u6ee1\u610f\uff0c\u60f3\u8981\u505a\u51fa\u4e00\u4e9b\u6539\u5584\u3002\u5c31\u50cf\u6211\u4eec\u5728Seeeduino\u505a\u7684\u4e00\u6837\uff0c\u6211\u4eec\u4e0eBeaglebone.org\u8c08\u8bba\u4e86\u6211\u4eec\u7684\u60f3\u6cd5\uff0c\u7ec8\u4e8e\u6709\u673a\u4f1a\u4e0e\u4ed6\u4eec\u4e00\u8d77\u521b\u5efa\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u677f\u5b50\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u521b\u5efa\u4e86Seeed Studio\u81ea\u5df1\u7684Beaglebone\uff0cBeaglebone Green\uff08\u7b80\u79f0BBG\uff09 \uff09\u3002\n\n\nBeagleBone Green\u7531Beaglebone Black\uff08\u7b80\u79f0BBB\uff09\u6539\u8fdb\uff0c\u5982\u679c\u60a8\u4e86\u89e3BBB\uff0c\u60a8\u5c06\u4f1a\u77e5\u9053BBB\u5c31\u50cf\u662fbeagleboard\u7cfb\u5217\u4e2d\u7684\u660e\u661f\u677f\uff0c\u5b83\u7ee7\u627f\u4e86Beaglebone\u7684\u5c0f\u5c3a\u5bf8\uff0c\u5e76\u589e\u52a0\u4e86\u8bb8\u591a\u597d\u7684\u529f\u80fd\uff0c\u540c\u65f6\u4ef7\u683c\u4f4e\u5f97\u591a\u5f53\u6211\u4eec\u8bbe\u8ba1BBG\u65f6\uff0c\u6211\u4eec\u51b3\u5b9a\u4fdd\u7559\u51e0\u4e4e\u6240\u6709BBB\u7684\u4f18\u70b9\uff0c\u5982\u5fae\u5c0f\u7684\u5c3a\u5bf8\uff0c\u4e30\u5bcc\u7684\u754c\u9762\u548c\u5f3a\u5927\u7684\u6269\u5c55\u6027\uff0c\u540c\u65f6\u75282 Seeed Grove\u8fde\u63a5\u5668\u66ff\u4ee3HDMI\u63a5\u53e3\uff0c\u4f7f\u5176\u4e0eGrove\u517c\u5bb9\u3002\n\n\n\u6211\u4eec\u53d1\u5e03\u4e86\u53e6\u4e00\u4e2aBeagleBone\uff0c\u540d\u4e3aBeagleBone Green Wireless\uff08\u7b80\u79f0BBGW\uff09\uff0c\u9664\u4e86\u8fde\u63a5\u5668\uff0cBBGW\u8fd8\u5305\u62ec\u9ad8\u6027\u80fd\u7075\u6d3b\u7684WiFi /\u84dd\u7259\u63a5\u53e3\uff0c\u4f7f\u5176\u6210\u4e3aBeagleBone\u7684\u9996\u4e2aWiFi /\u84dd\u7259\u677f\u5bb6\u5ead\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684BeagleBone\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "BeagleBone"
        }, 
        {
            "location": "/BeagleBone/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684BeagleBone\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Raspberry/", 
            "text": "Raspberry Pi\u6700\u521d\u662f\u7531\u82f1\u56fd\u7684\u4e00\u4e2a\u975e\u8425\u5229\u7ec4\u7ec7\u8bbe\u8ba1\u548c\u521b\u5efa\u7684\uff0c\u65e8\u5728\u521b\u5efa\u8fd9\u4e2a\u5355\u677f\uff0c\u4ee5\u4fc3\u8fdb\u5b66\u6821\u548c\u53d1\u5c55\u4e2d\u56fd\u5bb6\u57fa\u7840\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6559\u5b66\u3002\u5b83\u662f\u4e00\u79cd\u4fe1\u7528\u5361\u5927\u5c0f\u7684\u8ba1\u7b97\u673a\uff0c\u53ef\u4ee5\u9884\u5b89\u88c5Linux\uff0c\u5c3d\u7ba1\u4f53\u79ef\u5c0f\u5de7\uff0c\u4f46\u5b83\u53ef\u4ee5\u5904\u7406\u4e0e\u684c\u9762PC\u5927\u90e8\u5206\u76f8\u540c\u7684\u4efb\u52a1\u3002\n\n\n\u6811\u8393\u6d3e\u8ddf\u65b0\u4e86\u51e0\u4ee3\u3002\u7b2c\u4e00\u4ee3\uff08Pi 1\uff09\u4e8e2012\u5e742\u6708\u53d1\u5e03\uff0c\u57fa\u672c\u578b\u53f7A\u548c\u66f4\u9ad8\u89c4\u683c\u7684\u578b\u53f7B.A +\u548cB +\u578b\u53f7\u4e00\u5e74\u540e\u53d1\u5e03\u3002 Raspberry Pi 2\u578b\u53f7B\u4e8e2015\u5e742\u6708\u53d1\u5e03\uff0c2016\u5e742\u6708\u53d1\u5e03\u4e86Raspberry Pi 3\u578b\u53f7B\u3002\n\n\n\u5728Seeed Studio\uff0c\u6211\u4eec\u4e0d\u4ec5\u63d0\u4f9b\u4e0a\u8ff0\u4e0d\u540c\u7684raspberry pi\u677f\uff0c\u8fd8\u63d0\u4f9b\u4e0d\u540c\u7684\u914d\u4ef6\u548c\u5165\u95e8\u5de5\u5177\u5305\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u521b\u5efaraspberry pi\u9879\u76ee\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5df2\u7ecf\u5728Seeed\u7684\u6811\u8393\u6d3e\u793e\u533a\u4e2d\u521b\u5efa\u4e86\u8bb8\u591a\u6559\u7a0b\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u6784\u5efa\u81ea\u5df1\u7684\u521b\u610f\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Raspberry Pi\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "Raspberry"
        }, 
        {
            "location": "/Raspberry/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Raspberry Pi\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Wio/", 
            "text": "Wio\u5e73\u53f0\u57282015\u5e74\u5e95\u9996\u6b21\u5f15\u5165\u4e16\u754c\uff0c\u5f53\u65f6Wio Link\u5728Kickstarter\u4e0a\u6210\u7acb\u3002\u4f5c\u4e3a\u6211\u4eec\u5728Kickstarter\u63a8\u51fa\u7684\u7b2c\u4e8c\u6b3e\u4ea7\u54c1\uff0cWio Link\u7684\u7ed3\u679c\u8d85\u51fa\u4e86\u6211\u4eec\u7684\u9884\u671f\u3002\u6240\u4ee5\u4e0d\u4e45\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u5e03\u4e86Wio\u94fe\u63a5\u7684\u5144\u5f1f\u4ea7\u54c1--Wio Node\u3002\u4e24\u8005\u5177\u6709\u51e0\u4e4e\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4f46\u5c3a\u5bf8\u548c\u8fde\u63a5\u5668\u6570\u91cf\u4e0d\u540c\uff0c\u9002\u5e94\u4e0d\u540c\u7684\u60c5\u51b5\u3002\n\n\n\u5173\u4e8eWio\u6700\u6709\u5438\u5f15\u529b\u7684\u4e00\u4ef6\u4e8b\u662f\u4f7f\u7528\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7684RESTful API\u7684\u865a\u62df\u5316\u5373\u63d2\u5373\u7528\u6a21\u5757\uff0c\u901a\u8fc7\u4f7f\u7528\u54ea\u4e9b\u4eba\u771f\u6b63\u53ef\u4ee5\u6446\u8131\u710a\u63a5\uff0c\u8df3\u7ebf\u548c\u77e5\u8bc6\uff0c\u5982\u7535\u5b50\u5de5\u7a0b\uff0c\u5fae\u63a7\u5236\u5668\u7f16\u7a0b\uff0c\u7f51\u7edc\u7f16\u7a0b\uff0cIoT\u534f\u8bae\u5904\u7406\u3002\u6211\u4e0d\u662f\u8bf4\u8fd9\u4e9b\u5143\u7d20\u4e0d\u597d\uff0c\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u521d\u5b66\u8005\uff0c\u8fd9\u4e9b\u6b65\u9aa4\u548c\u77e5\u8bc6\u672c\u8d28\u4e0a\u662f\u7ec3\u4e60\uff0c\u4f46\u6709\u65f6\u5019\u6211\u4eec\u53ea\u662f\u60f3\u8981\u5feb\u901f\u7684\u539f\u578b\u548c\u5feb\u901f\u53cd\u5e94\uff0c\u8fd9\u5c31\u662fWio\u8bde\u751f\u7684\uff0c\u7b80\u5316\u4e86\u6240\u6709\u7684\u6b65\u9aa4\uff0c\u4f7f\u539f\u578b\u8bbe\u8ba1\u53d8\u5f97\u5bb9\u6613\uff0c\u5373\u4f7f\u60a8\u5bf9\u7535\u5b50\u4ea7\u54c1\u4e00\u65e0\u6240\u77e5\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u7ea65\u5206\u949f\u5185\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684IoT\u9879\u76ee\u662f\u4e0d\u5938\u5f20\u7684\u3002\n\n\n\u6211\u4eec\u5b89\u6392\u4e86\u8bb8\u591a\u6709\u8da3\u7684\u9879\u76ee\u6559\u7a0b\uff0c\u8ba9\u60a8\u5f00\u59cb\u4f7f\u7528Wio\uff0c\u60a8\u53ef\u4ee5\u8fdc\u7a0b\u4f9b\u6c34\u60a8\u7684\u690d\u7269\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e0d\u5728\u5bb6\u65f6\u5582\u72d7\uff0c\u60f3\u8981\u6316\u6398Wio\u53ef\u4ee5\u5236\u4f5c\u4ec0\u4e48\u5176\u4ed6\u7684\u4e1c\u897f\uff1f\u5f88\u5feb\u67e5\u770bWio\u94fe\u63a5\u548cWio\u8282\u70b9\u7684\u6587\u6863\uff0c\u73a9\u5f97\u5f00\u5fc3\uff01\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Wio\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "Wio"
        }, 
        {
            "location": "/Wio/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Wio\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/LinkIt/", 
            "text": "\u60a8\u9700\u8981\u4e86\u89e3\u7684LinkIt\u7cfb\u5217\u7684\u7b2c\u4e00\u4e2a\u4ea7\u54c1\u662fLi\u200b\u200bnkIt One\uff0c\u56e0\u4e3a\u5b83\u5f88\u597d\u5730\u5b9a\u4e49\u4e86LinkIt\u5e73\u53f0\u6b63\u5728\u505a\u4ec0\u4e48\u3002 LinkIt\u5b83\u5fc5\u987b\u662f\u5730\u7403\u4e0a\u529f\u80fd\u6700\u4e30\u5bcc\u7684\u7535\u8def\u677f\u4e4b\u4e00\u3002\u5b83\u5728\u5355\u4e2a\u5f00\u53d1\u677f\u4e0a\u5305\u62ecARM7 EJ-S\u2122\uff0cGSM\uff0cGPRS\uff0cWi-Fi\uff0c\u84dd\u7259BR / EDR / BLE\uff0cGPS\uff0c\u97f3\u9891\u7f16\u89e3\u7801\u5668\u548cSD\u5361\u8fde\u63a5\u5668\u3002\u73b0\u5728\u4f60\u53ef\u80fd\u4f1a\u660e\u767d\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3aLinkIt One\u3002\u9664\u4e86\u6240\u6709\u8fd9\u4e9b\u529f\u80fd\uff0c\u5b83\u8fd8\u662f\u4e00\u4e2a\u5177\u6709\u4e30\u5bcc\u517c\u5bb9\u6027\u548c\u5f3a\u5927\u53ef\u6269\u5c55\u6027\u7684\u677f\uff0c\u901a\u8fc7\u4f7f\u7528LinkIt ONE\u4e0eMediaTek LinkIt SDK\uff08\u5bf9\u4e8eArduino\uff09\uff0c\u60a8\u5c06\u80fd\u591f\u8f7b\u677e\u5730\u5c06\u60a8\u7684\u60f3\u6cd5\u8f6c\u5316\u4e3a\u5b9e\u9645\u539f\u578b\uff0c\u5e76\u4f7f\u5176\u6210\u4e3a\u73b0\u5b9eSeeed\u4ea7\u54c1\u5316\u548c\u654f\u6377\u5236\u9020\u670d\u52a1\u3002\n\n\n\u5728LinkIt ONE\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u5e03\u4e86LinkIt Smart 7688\u548cLinkIt Smart 7688 Duo\uff0c\u5b83\u4eec\u90fd\u4e13\u4e3a\u667a\u80fd\u5bb6\u5c45\u548c\u529e\u516c\u5ba4\u7684Rich Application IoT\u8bbe\u5907\u7684\u539f\u578b\u8bbe\u8ba1\u800c\u8bbe\u8ba1\u3002\u4e3a\u4e86\u4f7f\u539f\u578b\u66f4\u52a0\u65b9\u4fbf\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u6211\u4eec\u8fd8\u53d1\u5e03\u4e86LinkIt Smart 7688\u548cLinkIt Smart 7688 Duo\u7684breakout\u677f\u5b50\uff0c\u4f8b\u5982LinkIt Smart 7688 Duo\u7684Arduino breakout board\u548cLinkIt Smart 7688 V2.0\u7684breakout board\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u677f\u5361\u52a0\u5165\u5230LinkIt\u7cfb\u5217\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728New Seeed Wiki\u4e2d\u627e\u5230\u6709\u5173\u5982\u4f55\u5f00\u59cb\u4f7f\u7528\u8fd9\u4e9b\u4e3b\u677f\u7684\u6240\u6709\u6559\u7a0b\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684LinkIt Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nLinkIt_Smart_7688", 
            "title": "LinkIt"
        }, 
        {
            "location": "/LinkIt/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684LinkIt Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   LinkIt_Smart_7688", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/mbed/", 
            "text": "\u4ec0\u4e48\u662fmbed\uff1f mbed\u662f\u4e13\u4e3aARM\u8bbe\u8ba1\u7684\u539f\u578b\u5f00\u53d1\u5e73\u53f0\uff0c\u5b83\u51e0\u4e4e\u53ef\u4ee5\u63d0\u4f9b\u6240\u9700\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4f8b\u5982\u514d\u8d39\u7684SDK\uff0cHDK\u548c\u57fa\u4e8eWeb\u7684IDE\u6765\u5f00\u53d1IoT\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u662f\u7f16\u7801\u548c\u786c\u4ef6\u7684\u521d\u5b66\u8005\uff0cmbed\u53ef\u4ee5\u52a0\u5feb\u60a8\u7684\u5b66\u4e60\u548c\u539f\u578b\u8bbe\u8ba1\u3002\u5982\u679c\u60a8\u6b63\u5904\u4e8e\u786c\u4ef6\u539f\u578b\u8bbe\u8ba1\u7684\u4e2d\u95f4\u4f4d\u7f6e\uff0c\u5e76\u4e14\u5f88\u96be\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u677f\u5361\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u60a8\u7684\u5de5\u4f5c\u66f4\u8f7b\u677e\u3002\n\n\n\u4e16\u754c\u4e0a\u5df2\u7ecf\u6709\u8bb8\u591a\u5f00\u6e90\u5e73\u53f0\u677f\uff0c\u6bcf\u4e2a\u677f\u90fd\u58f0\u79f0\u5b83\u4eec\u529f\u80fd\u5f3a\u5927\uff0c\u6613\u4e8e\u4f7f\u7528\uff0c\u4e0e\u5176\u4ed6\u5e73\u53f0\u533a\u522b\u5f00\u6765\u7684\u72ec\u7279\u529f\u80fd\u662f\u4ec0\u4e48\uff1f\u9996\u5148\uff0cmbed\u4f7f\u7528CMSIS\uff08Cortex\u5fae\u63a7\u5236\u5668\u8f6f\u4ef6\u63a5\u53e3\u6807\u51c6\uff09\u6765\u6807\u51c6\u5316\u4e0d\u540c\u82af\u7247\u5236\u9020\u5546\u4e4b\u95f4\u7684\u63a5\u53e3\u5dee\u5f02\u3002\u5176\u6b21\uff0c\u57fa\u4e8eWeb\u7684IDE\u7b80\u5316\u4e86\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u65e0\u8bba\u60a8\u4f7f\u7528\u4ec0\u4e48\u7cfb\u7edf\uff0c\u60a8\u90fd\u4e0d\u9700\u8981\u5b89\u88c5\u989d\u5916\u7684IDE\uff0c\u60a8\u53ea\u9700\u6253\u5f00Web\u6d4f\u89c8\u5668\u5e76\u5f00\u59cb\u7f16\u7801\u3002\n\n\nSeeed Studio\u662f\u751f\u4ea7mbed\u677f\u7684\u6210\u5458\u4e4b\u4e00\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u53ef\u4ee5\u4eceSeeed\u83b7\u5f97\u8d85\u8fc710\u4e2ambed\uff0c\u5982Arch Max\uff0cArch Link\u548cArch BLE\u3002\u5b83\u4eec\u5927\u591a\u96c6\u6210\u4e86Arduino\u548cmbed\u677f\u7684\u4f18\u52bf\uff0c\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86Grove\u8fde\u63a5\u5668\uff0c\u4f7f\u5176\u4e0eGrove\u7cfb\u5217\u4f20\u611f\u5668\u517c\u5bb9\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684mbed\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "mbed"
        }, 
        {
            "location": "/mbed/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684mbed\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Rephone/", 
            "text": "RePhone Kit\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u6a21\u5757\u5316\u624b\u673a\u5957\u4ef6\uff0c\u53ef\u4ee5\u6539\u53d8\u6211\u4eec\u5c06\u624b\u673a\u6295\u5165\u4f7f\u7528\u7684\u65b9\u5f0f\u3002 \u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u7684\u624b\u673a\u5b9a\u5236\u5f62\u5f0f\uff0c\u4e5f\u662f\u53ef\u7a7f\u6234/ IoT\u5f00\u53d1\u7684\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\n\u4f7f\u7528Rephone\uff0c\u60a8\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u4f7f\u7528slim MODULES\uff0c\u53ef\u8bbf\u95ee\u7684\u8f6f\u4ef6\u548c\u53ef\u81ea\u5b9a\u4e49\u7684\u6a21\u5757\u521b\u5efa\u81ea\u5df1\u7684\u624b\u673a\u3002 \u60a8\u8fd8\u53ef\u4ee5\u52ab\u6301\u60a8\u5468\u56f4\u7684\u4e8b\u7269\uff0c\u4f7f\u65e0\u751f\u547d\u7269\u4f53\u6210\u4e3a\u8702\u7a9d\u901a\u4fe1\u7684\u5f3a\u5927\u529f\u80fd\uff0c\u901a\u8fc7\u8702\u7a9d\u8fde\u63a5\u4e0e\u5ba0\u7269\uff0c\u690d\u7269\uff0c\u73a9\u5177\uff0c\u6469\u6258\u8f66\u5934\u76d4\uff0c\u673a\u5668\u4eba\u6216\u65e0\u4eba\u673a\u5bf9\u8bdd\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Rephone Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "Rephone"
        }, 
        {
            "location": "/Rephone/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Rephone Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Respeaker/", 
            "text": "ReSpeaker\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u6a21\u5757\u5316\u8bed\u97f3\u754c\u9762\uff0c\u7528\u4e8e\u8fde\u63a5\u4f60\u5468\u56f4\u7684\u4e8b\u7269\u3002 \u8ba9\u60a8\u4e0e\u60a8\u7684\u5bb6\u7528\u7535\u5668\uff0c\u60a8\u7684\u5de5\u5382\uff0c\u529e\u516c\u5ba4\uff0c\u4e92\u8054\u7f51\u8bbe\u5907\u6216\u60a8\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u5176\u4ed6\u4efb\u4f55\u4e8b\u60c5\u8fdb\u884c\u4e92\u52a8\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Respeaker Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nRespeaker_Core\n\n\nRespeaker_Mic_Array", 
            "title": "Respeaker"
        }, 
        {
            "location": "/Respeaker/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Respeaker Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Respeaker_Core  Respeaker_Mic_Array", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Respeaker_Mic_Array/", 
            "text": "\u4ea7\u54c1\u7b80\u4ecb\n\n\nReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u8fdc\u573a\u8bed\u97f3\u6355\u83b7\n\n\n\u58f0\u6e90\u5b9a\u4f4d\n\n\n\u6ce2\u675f\u6210\u5f62\n\n\n\u566a\u58f0\u6291\u5236\n\n\n\u6d88\u6df7\u54cd\n\n\n\u56de\u97f3\u6d88\u9664\n\n\n\n\n\u6280\u672f\u89c4\u683c\n\n\n\n\n\n\nXVSM-2000\u5185\u7f6e16\u4e2a\u5185\u6838:\n\n\n\u57282\u4e2axCore titles\u4e0a\u768416\u4e2a\u5b9e\u65f6\u903b\u8f91\u5185\u6838\n\n\n\u6838\u5728dual issue mode\u4e0b\u5171\u4eab2000 MIPS\n\n\n\u5185\u90e8single cycle 512KB SRAM\u548c2MB\u5185\u7f6e\u95ea\u5b58\n\n\n16KB\u5185\u90e8OTP\uff08\u6700\u59278KB\u6bcftile\uff09\n\n\nUSB PHY\uff0c\u5b8c\u5168\u7b26\u5408USB 2.0\u89c4\u8303\n\n\n\u53ef\u7f16\u7a0b I/O.\n\n\n\u63d0\u4f9bDFU\u6a21\u5f0f.\n\n\n\n\n\n\n7 \u6570\u5b57\u9ea6\u514b\u98ce:\n\n\n\u7528\u4e8e\u8fdc\u573a\u8bed\u97f3\u8bc6\u522b\u6216\u58f0\u97f3\u5b9a\u4f4d.\n\n\nST MP34DT01-M.\n\n\n-26 dBFS \u7075\u654f\u5ea6.\n\n\n120 dBSPL \u58f0\u5b66\u8fc7\u8f7d\u70b9.\n\n\n61 dB \u4fe1\u566a\u6bd4.\n\n\n\u5168\u5411\u7075\u654f\u5ea6.\n\n\nPDM \u8f93\u51fa.\n\n\n\n\n\n\n12 RGB LEDs:\n\n\n256\u7ea7\u4eae\u5ea6.\n\n\n800kHz\u7ebf\u6570\u636e\u4f20\u8f93.\n\n\n\n\n\n\n\u97f3\u9891\u8f93\u51fa:\n\n\n\u677f\u8f7d3.5mmAUX\u8f93\u51fa.\n\n\nWOLFSON WM8960.\n\n\n24 or 16bit 16kHz\u7acb\u4f53\u58f0\u8f93\u51fa.\n\n\n40 mW \u8f93\u51fa\u529f\u7387 16 \u2126 @ 3.3 V.\n\n\n\n\n\n\n\u65f6\u949f\u540c\u6b65\uff1a\n\n\n\u677f\u8f7d PLL.\n\n\n\u7528\u4e8e DAC,MIC\u7684\u53ef\u7f16\u7a0b\u91c7\u6837\u65f6\u949f.\n(\u5982\u679c\u5728XVSM-2000\u4e2d\u4f7f\u7528DSP\uff0c\u5219\u7981\u7528).\n\n\n\n\n\n\n\u7535\u6e90:\n\n\nMicro USB\u6216\u6269\u5c55\u63a5\u5934\u63d0\u4f9b5V\u7535\u6e90.\n\n\n\n\n\n\n\u5c3a\u5bf8:\n\n\n\u76f4\u5f84 70mm.\n\n\n\n\n\n\n\u91cd\u91cf:\n\n\n15.25g\n\n\n\n\n\n\n\n\nReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\u9a71\u52a8\n\n\n\n\n\u5bf9\u4e8eWindows\u7528\u6237, \u8bf7\u5355\u51fb \n\u6b64\u5904\n \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\u5bf9\u4e8eLinux\u6216Mac\u7528\u6237\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\n\n\u7528ReSpeaker Core\u63d0\u53d6\u58f0\u97f3\n\n\n\u5f53\u9ea6\u514b\u98ce\u9635\u5217\u5806\u53e0\u5728ReSpeaker Core\u4e0a\u65f6\uff0c\u5c06\u81ea\u52a8\u68c0\u6d4b\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7aplay -l\u6765\u624b\u52a8\u68c0\u6d4b\uff09\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u53ef\u4ee5\u4f7f\u7528\nrespeaker_python_library\n\u6765\u5f00\u53d1\u8bed\u97f3\u4ea4\u4e92\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u60a8\u4e0d\u9700\u8981\u5173\u5fc3Mic Array\u662f\u5426\u6253\u5f00\u3002\u6211\u4eec\u7684\u5e93\u6587\u4ef6\u4f1a\u68c0\u67e5\u5e76\u9009\u62e9\u9ea6\u514b\u98ce\u9635\u5217\u3002\n\n\n\u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c\u57fa\u4e8ePyaudio\u7684\u9ea6\u514b\u98ce\u7c7b\u5177\u6709\u540d\u4e3alisten\u7684\u65b9\u6cd5\u6765\u63d0\u53d6\u8bed\u97f3\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u793a\u4f8b\u4ee3\u7801\u4ee5\u4f9b\u4f7f\u7528\u3002\n\n\n\u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c \nclass Microphone\n, \u57fa\u4e8e \nPyaudio\n, \u7528 \nlisten\n, \u6765\u63d0\u53d6\u58f0\u97f3. \u8bf7\u67e5\u9605 \nexample code\n \u5173\u4e8e\u5982\u4f55\u4f7f\u7528.\n\n\n\u5728PC\u6216Mac\u6216Linux\u6216Raspberry Pi\u4e0a\u63d0\u53d6\u8bed\u97f3\n\n\n\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8ePyaudio\u7684\u4f8b\u5b50\uff1a\n\n\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u6765\u83b7\u53d6Mic Array\u7684\u8bbe\u5907\u7d22\u5f15\u53f7\uff1a\n\n\nimport\n \npyaudio\n\n\n\np\n \n=\n \npyaudio\n.\nPyAudio\n()\n\n\ninfo\n \n=\n \np\n.\nget_host_api_info_by_index\n(\n0\n)\n\n\nnumdevices\n \n=\n \ninfo\n.\nget\n(\ndeviceCount\n)\n\n\n\nfor\n \ni\n \nin\n \nrange\n(\n0\n,\n \nnumdevices\n):\n\n        \nif\n \n(\np\n.\nget_device_info_by_host_api_device_index\n(\n0\n,\n \ni\n)\n.\nget\n(\nmaxInputChannels\n))\n \n \n0\n:\n\n            \nprint\n \nInput Device id \n,\n \ni\n,\n \n - \n,\n \np\n.\nget_device_info_by_host_api_device_index\n(\n0\n,\n \ni\n)\n.\nget\n(\nname\n)\n\n\n\n\n\n\u7136\u540e\uff0c\u66f4\u6539RESPEAKER_INDEX = 1\u4e3a\u60a8\u7684\u7d22\u5f15\u53f7\u3002\u8fd0\u884c\u811a\u672c\u6765\u5f55\u5236\u8bed\u97f3\u3002\n\n\nimport\n \npyaudio\n\n\nimport\n \nwave\n\n\n\nRESPEAKER_RATE\n \n=\n \n16000\n\n\nRESPEAKER_CHANNELS\n \n=\n \n2\n\n\nRESPEAKER_WIDTH\n \n=\n \n2\n\n\n# run getDeviceInfo.py to get index\n\n\nRESPEAKER_INDEX\n \n=\n \n1\n\n\nCHUNK\n \n=\n \n1024\n\n\nRECORD_SECONDS\n \n=\n \n5\n\n\nWAVE_OUTPUT_FILENAME\n \n=\n \noutput.wav\n\n\n\np\n \n=\n \npyaudio\n.\nPyAudio\n()\n\n\n\nstream\n \n=\n \np\n.\nopen\n(\n\n            \nrate\n=\nRESPEAKER_RATE\n,\n\n            \nformat\n=\np\n.\nget_format_from_width\n(\nRESPEAKER_WIDTH\n),\n\n            \nchannels\n=\nRESPEAKER_CHANNELS\n,\n\n            \ninput\n=\nTrue\n,\n\n            \ninput_device_index\n=\nRESPEAKER_INDEX\n,)\n\n\n\nprint\n(\n* recording\n)\n\n\n\nframes\n \n=\n \n[]\n\n\n\nfor\n \ni\n \nin\n \nrange\n(\n0\n,\n \nint\n(\nRESPEAKER_RATE\n \n/\n \nCHUNK\n \n*\n \nRECORD_SECONDS\n)):\n\n    \ndata\n \n=\n \nstream\n.\nread\n(\nCHUNK\n)\n\n    \nframes\n.\nappend\n(\ndata\n)\n\n\n\nprint\n(\n* done recording\n)\n\n\n\nstream\n.\nstop_stream\n()\n\n\nstream\n.\nclose\n()\n\n\np\n.\nterminate\n()\n\n\n\nwf\n \n=\n \nwave\n.\nopen\n(\nWAVE_OUTPUT_FILENAME\n,\n \nwb\n)\n\n\nwf\n.\nsetnchannels\n(\nRESPEAKER_CHANNELS\n)\n\n\nwf\n.\nsetsampwidth\n(\np\n.\nget_sample_size\n(\np\n.\nget_format_from_width\n(\nRESPEAKER_WIDTH\n)))\n\n\nwf\n.\nsetframerate\n(\nRESPEAKER_RATE\n)\n\n\nwf\n.\nwriteframes\n(\nb\n.\njoin\n(\nframes\n))\n\n\nwf\n.\nclose\n()\n\n\n\n\n\nReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6\n\n\nYou could download ReSpeaker Mic array firmwares for DFU \nhere\n. We have provided two versions:\n\n\n\n\nxvsm version\n : initial version, outputs 2 channels data with dsp support.\n\n\nraw version\n : outputs 8 channels mic raw data, this firmware is without xvsm dsp support, so it does not support some functions such as DOA, AEC and so on.\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n\u4e0b\u8f7d\u9002\u7528\u4e8eDFU\u7684ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7248\u672c\uff1a\n\n\n\n\nxvsm\u7248\u672c\n\uff1a\u521d\u59cb\u7248\u672c\uff0c\u652f\u6301dsp\u8f93\u51fa2\u901a\u9053\u6570\u636e\u3002\n\n\n\u539f\u59cb\u7248\u672c\n\uff1a\u8f93\u51fa8\u8def\u9ea6\u514b\u98ce\u539f\u59cb\u6570\u636e\uff0c\u6b64\u56fa\u4ef6\u4e0d\u652f\u6301xvsm dsp\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u67d0\u4e9b\u529f\u80fd\uff0c\u5982DOA\uff0cAEC\u7b49\u3002\n\n\n\n\n\u5173\u4e8e\u8bf7\u67e5\u9605\u5982\u4f55\u5728Mac\u6216Linux\u4e0a\u66f4\u65b0\u56fa\u4ef6\uff0c \u8bf7\u67e5\u9605 \n\u8fd9\u91cc\n \u3002\n\n\n\u7528\u4e8e\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684HID\n\n\n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7USB HID\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\n\u901a\u4fe1\u534f\u8bae\n.\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u4f7f\u7528 \n\u6700\u65b0\u7684\u539f\u59cb\u7248\u672c\n\uff0c\u5219\u53ea\u80fd\u63a7\u5236LED\u3002\n\n\n\u8fd9\u91cc\u662f\u4e00\u4e2apython\u4f8b\u5b50\uff1a\n\n\n#!/usr/bin/env python\n\n\n\nimport\n \nrespeaker.usb_hid\n \nas\n \nusb_hid\n\n\n\nclass\n \nMicArray\n:\n\n    \ndef\n \n__init__\n(\nself\n):\n\n        \nself\n.\nhid\n \n=\n \nusb_hid\n.\nget\n()\n\n\n    \ndef\n \nwrite\n(\nself\n,\n \naddress\n,\n \ndata\n):\n\n        \ndata\n \n=\n \nself\n.\nto_bytearray\n(\ndata\n)\n\n        \nlength\n \n=\n \nlen\n(\ndata\n)\n\n        \nif\n \nself\n.\nhid\n:\n\n            \npacket\n \n=\n \nbytearray\n([\naddress\n \n \n0xFF\n,\n \n(\naddress\n \n \n8\n)\n \n \n0x7F\n,\n \nlength\n \n \n0xFF\n,\n \n(\nlength\n \n \n8\n)\n \n \n0xFF\n])\n \n+\n \ndata\n\n            \npacket\n \n=\n \nlist\n(\npacket\n)\n\n            \nself\n.\nhid\n.\nwrite\n(\npacket\n)\n\n\n    \ndef\n \nread\n(\nself\n,\n \naddress\n,\n \nlength\n):\n\n        \nself\n.\nhid\n.\nwrite\n(\nlist\n(\nbytearray\n([\naddress\n \n \n0xFF\n,\n \n(\naddress\n \n \n8\n)\n \n \n0xFF\n \n|\n \n0x80\n,\n \nlength\n \n \n0xFF\n,\n \n(\nlength\n \n \n8\n)\n \n \n0xFF\n])))\n\n        \nfor\n \n_\n \nin\n \nrange\n(\n6\n):\n\n            \ndata\n \n=\n \nself\n.\nhid\n.\nread\n()\n\n            \n# print [int(x) for x in data]\n\n            \n# skip VAD data\n\n            \nif\n \nint\n(\ndata\n[\n0\n])\n \n!=\n \n0xFF\n \nand\n \nint\n(\ndata\n[\n1\n])\n \n!=\n \n0xFF\n:\n\n                \nreturn\n \ndata\n[\n4\n:(\n4\n \n+\n \nlength\n)]\n\n\n    \n@staticmethod\n\n    \ndef\n \nto_bytearray\n(\ndata\n):\n\n        \nif\n \ntype\n(\ndata\n)\n \nis\n \nint\n:\n\n            \narray\n \n=\n \nbytearray\n([\ndata\n \n \n0xFF\n])\n\n        \nelif\n \ntype\n(\ndata\n)\n \nis\n \nbytearray\n:\n\n            \narray\n \n=\n \ndata\n\n        \nelif\n \ntype\n(\ndata\n)\n \nis\n \nstr\n:\n\n            \narray\n \n=\n \nbytearray\n(\ndata\n)\n\n        \nelif\n \ntype\n(\ndata\n)\n \nis\n \nlist\n:\n\n            \narray\n \n=\n \nbytearray\n(\ndata\n)\n\n        \nelse\n:\n\n            \nraise\n \nTypeError\n(\n%s\n is not supported\n \n%\n \ntype\n(\ndata\n))\n\n        \nreturn\n \narray\n\n\n\ndef\n \nmain\n():\n\n    \nimport\n \nsys\n\n    \nimport\n \nstruct\n\n\n    \nmic\n \n=\n \nMicArray\n()\n\n\n    \nprint\n(\nUsing: \n%s\n \n%\n \nusb_hid\n.\nusb_backend\n)\n\n\n    \nif\n \nlen\n(\nsys\n.\nargv\n)\n \n \n3\n:\n\n        \nprint\n(\nUsage: python {} w 0x0 0x000003\n.\nformat\n(\nsys\n.\nargv\n[\n0\n]))\n\n        \nsys\n.\nexit\n(\n1\n)\n\n\n    \ntry\n:\n\n        \nif\n \nsys\n.\nargv\n[\n2\n]\n.\nstartswith\n(\n0x\n):\n\n            \naddress\n \n=\n \nint\n(\nsys\n.\nargv\n[\n2\n],\n \n16\n)\n\n        \nelse\n:\n\n            \naddress\n \n=\n \nint\n(\nsys\n.\nargv\n[\n2\n])\n\n\n        \nif\n \nsys\n.\nargv\n[\n1\n]\n \n==\n \nw\n:\n\n            \nif\n \nsys\n.\nargv\n[\n3\n]\n.\nstartswith\n(\n0x\n):\n\n                \ndata\n \n=\n \nint\n(\nsys\n.\nargv\n[\n3\n],\n \n16\n)\n\n            \nelse\n:\n\n                \ndata\n \n=\n \nint\n(\nsys\n.\nargv\n[\n3\n])\n\n\n            \nif\n \ndata\n \n \n0xFFFF\n:\n\n                \ndata\n \n=\n \nstruct\n.\npack\n(\nI\n,\n \ndata\n)\n\n            \nelif\n \ndata\n \n \n0xFF\n:\n\n                \ndata\n \n=\n \nstruct\n.\npack\n(\nH\n,\n \ndata\n)\n\n\n            \nmic\n.\nwrite\n(\naddress\n,\n \ndata\n)\n\n        \nelse\n:\n\n            \nprint\n \n[\nint\n(\nx\n)\n \nfor\n \nx\n \nin\n \nmic\n.\nread\n(\naddress\n,\n \n4\n)]\n\n    \nexcept\n \nException\n \nas\n \ne\n:\n\n        \nprint\n(\ne\n.\nmessage\n)\n\n\n\nif\n \n__name__\n \n==\n \n__main__\n:\n\n    \nmain\n()\n\n\n\n\n\nFAQ\n\n\n\n\n\n\nQ1\uff1a\u5982\u4f55\u4f7f\u7528 \nxvsm\u7248\u672c\u56fa\u4ef6\n \u4eceMic Array\u83b7\u53d6\u97f3\u9891\u6e90\u65b9\u5411\uff1f\n\n\n\n\n\u4f7f\u7528Windows\u65f6, \u8bf7\u9075\u5faa\n\u6307\u5357\n \u6216\u8005\u4f7f\u7528 \nHID tool\n.\n\n\nPython \n C hidapi \u793a\u4f8b\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle]\nReSpeaker Microphone Array SCH\n\n\n[Eagle]\nReSpeaker Microphone Array BRD\n\n\n[PDF]\n \nReSpeaker Microphone Array SCH\n\n\n[PDF]\n \nReSpeaker Microphone Array PCB", 
            "title": "Respeaker_Mic_Array"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_1", 
            "text": "ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\u3002", 
            "title": "\u4ea7\u54c1\u7b80\u4ecb"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_2", 
            "text": "\u8fdc\u573a\u8bed\u97f3\u6355\u83b7  \u58f0\u6e90\u5b9a\u4f4d  \u6ce2\u675f\u6210\u5f62  \u566a\u58f0\u6291\u5236  \u6d88\u6df7\u54cd  \u56de\u97f3\u6d88\u9664", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_3", 
            "text": "XVSM-2000\u5185\u7f6e16\u4e2a\u5185\u6838:  \u57282\u4e2axCore titles\u4e0a\u768416\u4e2a\u5b9e\u65f6\u903b\u8f91\u5185\u6838  \u6838\u5728dual issue mode\u4e0b\u5171\u4eab2000 MIPS  \u5185\u90e8single cycle 512KB SRAM\u548c2MB\u5185\u7f6e\u95ea\u5b58  16KB\u5185\u90e8OTP\uff08\u6700\u59278KB\u6bcftile\uff09  USB PHY\uff0c\u5b8c\u5168\u7b26\u5408USB 2.0\u89c4\u8303  \u53ef\u7f16\u7a0b I/O.  \u63d0\u4f9bDFU\u6a21\u5f0f.    7 \u6570\u5b57\u9ea6\u514b\u98ce:  \u7528\u4e8e\u8fdc\u573a\u8bed\u97f3\u8bc6\u522b\u6216\u58f0\u97f3\u5b9a\u4f4d.  ST MP34DT01-M.  -26 dBFS \u7075\u654f\u5ea6.  120 dBSPL \u58f0\u5b66\u8fc7\u8f7d\u70b9.  61 dB \u4fe1\u566a\u6bd4.  \u5168\u5411\u7075\u654f\u5ea6.  PDM \u8f93\u51fa.    12 RGB LEDs:  256\u7ea7\u4eae\u5ea6.  800kHz\u7ebf\u6570\u636e\u4f20\u8f93.    \u97f3\u9891\u8f93\u51fa:  \u677f\u8f7d3.5mmAUX\u8f93\u51fa.  WOLFSON WM8960.  24 or 16bit 16kHz\u7acb\u4f53\u58f0\u8f93\u51fa.  40 mW \u8f93\u51fa\u529f\u7387 16 \u2126 @ 3.3 V.    \u65f6\u949f\u540c\u6b65\uff1a  \u677f\u8f7d PLL.  \u7528\u4e8e DAC,MIC\u7684\u53ef\u7f16\u7a0b\u91c7\u6837\u65f6\u949f.\n(\u5982\u679c\u5728XVSM-2000\u4e2d\u4f7f\u7528DSP\uff0c\u5219\u7981\u7528).    \u7535\u6e90:  Micro USB\u6216\u6269\u5c55\u63a5\u5934\u63d0\u4f9b5V\u7535\u6e90.    \u5c3a\u5bf8:  \u76f4\u5f84 70mm.    \u91cd\u91cf:  15.25g", 
            "title": "\u6280\u672f\u89c4\u683c"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeaker", 
            "text": "\u5bf9\u4e8eWindows\u7528\u6237, \u8bf7\u5355\u51fb  \u6b64\u5904  \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f  \u5bf9\u4e8eLinux\u6216Mac\u7528\u6237\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f", 
            "title": "ReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\u9a71\u52a8"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeaker-core", 
            "text": "\u5f53\u9ea6\u514b\u98ce\u9635\u5217\u5806\u53e0\u5728ReSpeaker Core\u4e0a\u65f6\uff0c\u5c06\u81ea\u52a8\u68c0\u6d4b\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7aplay -l\u6765\u624b\u52a8\u68c0\u6d4b\uff09\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u53ef\u4ee5\u4f7f\u7528 respeaker_python_library \u6765\u5f00\u53d1\u8bed\u97f3\u4ea4\u4e92\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u60a8\u4e0d\u9700\u8981\u5173\u5fc3Mic Array\u662f\u5426\u6253\u5f00\u3002\u6211\u4eec\u7684\u5e93\u6587\u4ef6\u4f1a\u68c0\u67e5\u5e76\u9009\u62e9\u9ea6\u514b\u98ce\u9635\u5217\u3002  \u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c\u57fa\u4e8ePyaudio\u7684\u9ea6\u514b\u98ce\u7c7b\u5177\u6709\u540d\u4e3alisten\u7684\u65b9\u6cd5\u6765\u63d0\u53d6\u8bed\u97f3\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u793a\u4f8b\u4ee3\u7801\u4ee5\u4f9b\u4f7f\u7528\u3002  \u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c  class Microphone , \u57fa\u4e8e  Pyaudio , \u7528  listen , \u6765\u63d0\u53d6\u58f0\u97f3. \u8bf7\u67e5\u9605  example code  \u5173\u4e8e\u5982\u4f55\u4f7f\u7528.", 
            "title": "\u7528ReSpeaker Core\u63d0\u53d6\u58f0\u97f3"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#pcmaclinuxraspberry-pi", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8ePyaudio\u7684\u4f8b\u5b50\uff1a  \u9996\u5148\uff0c\u60a8\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u6765\u83b7\u53d6Mic Array\u7684\u8bbe\u5907\u7d22\u5f15\u53f7\uff1a  import   pyaudio  p   =   pyaudio . PyAudio ()  info   =   p . get_host_api_info_by_index ( 0 )  numdevices   =   info . get ( deviceCount )  for   i   in   range ( 0 ,   numdevices ): \n         if   ( p . get_device_info_by_host_api_device_index ( 0 ,   i ) . get ( maxInputChannels ))     0 : \n             print   Input Device id  ,   i ,    -  ,   p . get_device_info_by_host_api_device_index ( 0 ,   i ) . get ( name )   \u7136\u540e\uff0c\u66f4\u6539RESPEAKER_INDEX = 1\u4e3a\u60a8\u7684\u7d22\u5f15\u53f7\u3002\u8fd0\u884c\u811a\u672c\u6765\u5f55\u5236\u8bed\u97f3\u3002  import   pyaudio  import   wave  RESPEAKER_RATE   =   16000  RESPEAKER_CHANNELS   =   2  RESPEAKER_WIDTH   =   2  # run getDeviceInfo.py to get index  RESPEAKER_INDEX   =   1  CHUNK   =   1024  RECORD_SECONDS   =   5  WAVE_OUTPUT_FILENAME   =   output.wav  p   =   pyaudio . PyAudio ()  stream   =   p . open ( \n             rate = RESPEAKER_RATE , \n             format = p . get_format_from_width ( RESPEAKER_WIDTH ), \n             channels = RESPEAKER_CHANNELS , \n             input = True , \n             input_device_index = RESPEAKER_INDEX ,)  print ( * recording )  frames   =   []  for   i   in   range ( 0 ,   int ( RESPEAKER_RATE   /   CHUNK   *   RECORD_SECONDS )): \n     data   =   stream . read ( CHUNK ) \n     frames . append ( data )  print ( * done recording )  stream . stop_stream ()  stream . close ()  p . terminate ()  wf   =   wave . open ( WAVE_OUTPUT_FILENAME ,   wb )  wf . setnchannels ( RESPEAKER_CHANNELS )  wf . setsampwidth ( p . get_sample_size ( p . get_format_from_width ( RESPEAKER_WIDTH )))  wf . setframerate ( RESPEAKER_RATE )  wf . writeframes ( b . join ( frames ))  wf . close ()", 
            "title": "\u5728PC\u6216Mac\u6216Linux\u6216Raspberry Pi\u4e0a\u63d0\u53d6\u8bed\u97f3"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeaker_1", 
            "text": "You could download ReSpeaker Mic array firmwares for DFU  here . We have provided two versions:   xvsm version  : initial version, outputs 2 channels data with dsp support.  raw version  : outputs 8 channels mic raw data, this firmware is without xvsm dsp support, so it does not support some functions such as DOA, AEC and so on.   \u60a8\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u9002\u7528\u4e8eDFU\u7684ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7248\u672c\uff1a   xvsm\u7248\u672c \uff1a\u521d\u59cb\u7248\u672c\uff0c\u652f\u6301dsp\u8f93\u51fa2\u901a\u9053\u6570\u636e\u3002  \u539f\u59cb\u7248\u672c \uff1a\u8f93\u51fa8\u8def\u9ea6\u514b\u98ce\u539f\u59cb\u6570\u636e\uff0c\u6b64\u56fa\u4ef6\u4e0d\u652f\u6301xvsm dsp\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u67d0\u4e9b\u529f\u80fd\uff0c\u5982DOA\uff0cAEC\u7b49\u3002   \u5173\u4e8e\u8bf7\u67e5\u9605\u5982\u4f55\u5728Mac\u6216Linux\u4e0a\u66f4\u65b0\u56fa\u4ef6\uff0c \u8bf7\u67e5\u9605  \u8fd9\u91cc  \u3002", 
            "title": "ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeakerhid", 
            "text": "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7USB HID\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684 \u901a\u4fe1\u534f\u8bae .  \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u4f7f\u7528  \u6700\u65b0\u7684\u539f\u59cb\u7248\u672c \uff0c\u5219\u53ea\u80fd\u63a7\u5236LED\u3002  \u8fd9\u91cc\u662f\u4e00\u4e2apython\u4f8b\u5b50\uff1a  #!/usr/bin/env python  import   respeaker.usb_hid   as   usb_hid  class   MicArray : \n     def   __init__ ( self ): \n         self . hid   =   usb_hid . get () \n\n     def   write ( self ,   address ,   data ): \n         data   =   self . to_bytearray ( data ) \n         length   =   len ( data ) \n         if   self . hid : \n             packet   =   bytearray ([ address     0xFF ,   ( address     8 )     0x7F ,   length     0xFF ,   ( length     8 )     0xFF ])   +   data \n             packet   =   list ( packet ) \n             self . hid . write ( packet ) \n\n     def   read ( self ,   address ,   length ): \n         self . hid . write ( list ( bytearray ([ address     0xFF ,   ( address     8 )     0xFF   |   0x80 ,   length     0xFF ,   ( length     8 )     0xFF ]))) \n         for   _   in   range ( 6 ): \n             data   =   self . hid . read () \n             # print [int(x) for x in data] \n             # skip VAD data \n             if   int ( data [ 0 ])   !=   0xFF   and   int ( data [ 1 ])   !=   0xFF : \n                 return   data [ 4 :( 4   +   length )] \n\n     @staticmethod \n     def   to_bytearray ( data ): \n         if   type ( data )   is   int : \n             array   =   bytearray ([ data     0xFF ]) \n         elif   type ( data )   is   bytearray : \n             array   =   data \n         elif   type ( data )   is   str : \n             array   =   bytearray ( data ) \n         elif   type ( data )   is   list : \n             array   =   bytearray ( data ) \n         else : \n             raise   TypeError ( %s  is not supported   %   type ( data )) \n         return   array  def   main (): \n     import   sys \n     import   struct \n\n     mic   =   MicArray () \n\n     print ( Using:  %s   %   usb_hid . usb_backend ) \n\n     if   len ( sys . argv )     3 : \n         print ( Usage: python {} w 0x0 0x000003 . format ( sys . argv [ 0 ])) \n         sys . exit ( 1 ) \n\n     try : \n         if   sys . argv [ 2 ] . startswith ( 0x ): \n             address   =   int ( sys . argv [ 2 ],   16 ) \n         else : \n             address   =   int ( sys . argv [ 2 ]) \n\n         if   sys . argv [ 1 ]   ==   w : \n             if   sys . argv [ 3 ] . startswith ( 0x ): \n                 data   =   int ( sys . argv [ 3 ],   16 ) \n             else : \n                 data   =   int ( sys . argv [ 3 ]) \n\n             if   data     0xFFFF : \n                 data   =   struct . pack ( I ,   data ) \n             elif   data     0xFF : \n                 data   =   struct . pack ( H ,   data ) \n\n             mic . write ( address ,   data ) \n         else : \n             print   [ int ( x )   for   x   in   mic . read ( address ,   4 )] \n     except   Exception   as   e : \n         print ( e . message )  if   __name__   ==   __main__ : \n     main ()", 
            "title": "\u7528\u4e8e\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684HID"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#faq", 
            "text": "Q1\uff1a\u5982\u4f55\u4f7f\u7528  xvsm\u7248\u672c\u56fa\u4ef6  \u4eceMic Array\u83b7\u53d6\u97f3\u9891\u6e90\u65b9\u5411\uff1f   \u4f7f\u7528Windows\u65f6, \u8bf7\u9075\u5faa \u6307\u5357  \u6216\u8005\u4f7f\u7528  HID tool .  Python   C hidapi \u793a\u4f8b", 
            "title": "FAQ"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_4", 
            "text": "[Eagle] ReSpeaker Microphone Array SCH  [Eagle] ReSpeaker Microphone Array BRD  [PDF]   ReSpeaker Microphone Array SCH  [PDF]   ReSpeaker Microphone Array PCB", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Respeaker_Core/", 
            "text": "ReSpeaker\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u6a21\u5757\u5316\u8bed\u97f3\u63a5\u53e3\uff0c\u7528\u4e8e\u63a5\u5165\u60a8\u5468\u56f4\u7684\u5404\u79cd\u4e8b\u7269\u3002\u8ba9\u60a8\u901a\u8fc7\u8bed\u97f3\u4e0e\u60a8\u7684\u5bb6\u7528\u7535\u5668\uff0c\u60a8\u7684\u5de5\u5382\uff0c\u529e\u516c\u5ba4\uff0c\u4e92\u8054\u7f51\u8bbe\u5907\u6216\u60a8\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u5176\u4ed6\u4efb\u4f55\u4e8b\u7269\u8fdb\u884c\u4e92\u52a8\u3002\n\n\n\n\n\u5b83\u662f\u60a8\u5468\u56f4\u7269\u4ef6\u7684\u8bed\u97f3\u6269\u5c55\n\n\n\n\nReSpeaker\u652f\u6301\u5728\u7ebf\u8bed\u4e49\u8bc6\u522b\u670d\u52a1\u5e76\u4e14\u62e5\u6709\u79bb\u7ebf\u8f7b\u91cf\u7ea7\u8bed\u97f3\u8bc6\u522b\u5f15\u64ce\u3002\u60a8\u53ef\u4ee5\u5c06ReSpeaker\u6dfb\u52a0\u5230\u60a8\u5468\u56f4\u7684\u4e8b\u7269\u4e2d\uff0c\u4f7f\u5176\u53d8\u5f97\u667a\u80fd\u6216\u66f4\u52a0\u667a\u80fd\u3002\n\n\n\n\n\u5b83\u662f\u4e00\u4e2a\u97f3\u9891\u6d41\u8bbe\u5907\n\n\n\n\n\u8bed\u97f3\u4ea4\u4e92\u4ece\u672a\u4e0e\u97f3\u4e50\u5a31\u4e50\u533a\u5206\u5f00\uff0cReSpeaker\u4e5f\u662f\u5982\u6b64\u3002ReSpeaker\u652f\u6301Airplay / DLNA\u65e0\u7ebf\u97f3\u4e50\u6d41\u3002\u53ea\u9700\u4f7f\u7528AUX\u7535\u7f06\u5c06ReSpeaker\u8fde\u63a5\u5230\u4efb\u4f55\u666e\u901a\u7684\u626c\u58f0\u5668\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5f00\u59cb\u4eab\u53d7\u60a8\u6240\u7231\u7684\u97f3\u4e50\uff0c\u800c\u65e0\u9700\u6309\u4efb\u4f55\u4e00\u4e2a\u6309\u94ae\u3002\n\n\n\n\n\u5b83\u662f\u5b69\u5b50\u4eec\u5b66\u4e60\u7684\u5de5\u5177\n\n\n\n\nReSpeaker\u63a7\u5236\u6a21\u5757\u662f\u57fa\u4e8eATmega32u4\u82af\u7247\uff0c\u8be5\u82af\u7247\u5b8c\u5168\u517c\u5bb9Arduino\u9a71\u52a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ReSpeaker\u4f5c\u4e3a\u5f3a\u5927\u7684Arduino\u5b66\u4e60\u677f\uff0c\u5e76\u505a\u4e86\u8bb8\u591a\u201cArduino\u201d\u5f00\u53d1\u677f\u80fd\u505a\u7684\u4e8b\u60c5\u3002\u8fd9\u662f\u4e3a\u4e86\u5b66\u4e60\uff0c\u8fd9\u662f\u4e3a\u4e86\u7ec3\u4e60\uff0c\u8fd9\u662f\u4e50\u8da3\uff01\uff01\uff01\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u89e3\u653e\u60a8\u7684\u53cc\u624b\uff1a\u79bb\u7ebf\u6216\u5728\u7ebf\u6a21\u5f0f\u4e0b\u7684\u8bed\u97f3\u8bc6\u522b\n\n\n\u65e0\u7ebf\u97f3\u9891\u6d41\u4f20\u8f93\uff1a \u901a\u8fc7Airplay/DLNA\u4f20\u8f93\u97f3\u9891\u6d41\n\n\n\u6613\u4e8e\u4f7f\u7528\u7684SDK\uff1a\u9002\u7528\u4e8ePython\u548cC / C ++\u5f00\u53d1\u4eba\u5458\n\n\n\u65e5\u76ca\u589e\u957f\u7684\u529f\u80fd\uff1a\u4e0b\u8f7d\u548c\u63d2\u4ef6\u4e0d\u65ad\u4e30\u5bcc\u5176\u529f\u80fd\u4e0e\u5e94\u7528\n\n\n\u5373\u63d2\u5373\u7528\u63d2\u4ef6\uff1a\u53ef\u6269\u5c55\u4f7f\u7528\u9ea6\u514b\u98ce\u9635\u5217\uff0cGrove\u6269\u5c55\u677f\uff0cGrove\u6a21\u5757\n\n\n\u514d\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff1a\u53ef\u57fa\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u6240\u6709\u529f\u80fd\u3001\u53c2\u6570\uff08\u6682\u65f6\u4e0d\u53ef\u7528\uff09\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u6280\u672f\u89c4\u683c\n\n\n\n\n\n\nAI7688 Wi-Fi \u6a21\u5757:\n\n\n\n\n\u64cd\u4f5c\u7cfb\u7edf: \u57fa\u4e8eGNU/Linux \u7684 OpenWrt\n\n\nwifi\u652f\u6301: \u652f\u6301802.11b/g and HT 802.11n \u6a21\u5f0f\n\n\n\u6269\u5c55\u6027:\u4e24\u6392\u6269\u5c55\u63a5\u53e3\uff0c\u62e5\u6709 I2C, GPIO \u548c USB 2.0\n\n\n\u63a5\u53e3: 3.5mm AUX \u97f3\u9891\u63a5\u53e3, Micro USB \u548c SD card \u5361\u69fd\n\n\n\n\n\n\n\n\nATMega32U4 \u5904\u7406\u5668:\n\n\n\n\nLinnux\u5e73\u53f0\u4e0b\u7684 USB CDC \u8f6f\u4e32\u53e3\n\n\n12\u4e2a\u53ef\u7f16\u7a0bLED \u6307\u793a\u706f\n\n\n8 \u4e2a\u7247\u4e0a\u89e6\u70b9\u63a5\u53e3\n\n\n\n\n\n\n\n\nCodec WM8960:\n\n\n\n\nDAC SNR 98dB (\u2018A\u2019 weighted), THD -84dB at 48kHz, 3.3V  \n\n\nADC SNR 94dB (\u2018A\u2019 weighted), THD -82dB at 48kHz, 3.3V  \n\n\nStereo Class D Speaker Driver with 87% efficiency (1W output)  \n\n\nOn-chip Headphone Driver  \n\n\n40mW output power into 16\u03a9 at 3.3V  \n\n\nTHD -75dB at 20mW, SNR 90dB with 16\u03a9 load  \n\n\nOn-chip PLL provides flexible clocking scheme  \n\n\nSample rates: 8, 11.025, 12, 16, 22.05, 24, 32, 44.1, 48 kHz\n\n\n\n\n\n\n\n\n\u4f9b\u7535\u7535\u538b: 5V DC  \n\n\n\n\n\n\n\u5c3a\u5bf8: \u76f4\u5f84 70mm   \n\n\n\n\n\n\n\u91cd\u91cf: 17g\n\n\n\n\n\n\n\u7ba1\u811a\u56fe\n\n\n\n\n\n\nGPIO0 / I2S_ADC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cADC\u4fe1\u53f7\n\n\nGPIO1 / I2S_DAC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cDAC\u4fe1\u53f7\n\n\nGPIO2 / I2S_LRCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u5de6/\u53f3\u901a\u9053\u91c7\u6837\u65f6\u949f\n\n\nGPIO3 / I2S_BCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u4f4d\u65f6\u949f\n\n\nMCLK_OUT\uff1a\u5916\u90e8\u8bbe\u5907\u7684\u4e3b\u65f6\u949f\n\n\nHP_SEL\uff1a\u8033\u673a\u9891\u9053\u9009\u62e9\u3002\u5982\u679c\u4f7f\u7528ReSpeaker Mic Array\u8f93\u51fa\u97f3\u9891\uff0c\u8bf7\u5c06HP_SEL\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\n\n\nHP_L\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u5de6\u58f0\u9053\n\n\nHP_R\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u53f3\u58f0\u9053\n\n\nAGND\uff1a\u97f3\u9891\u6a21\u62df\u5730\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u7b2c\u4e00\u6b21\u62ff\u5230Respeaker_Core\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f\n\n\n1. \u51c6\u5907\n\n\n\n\nReSpeaker\u6838\u5fc3\u677f\n\n\nPC\u6216Mac\n\n\nWi-Fi\u7f51\u7edc\n\n\nSD\u5361\n\n\n\n\n2. \u8fde\u63a5\u5230\u4e32\u884c\u63a7\u5236\u53f0\n\n\n\n\n\n\n\u5bf9\u4e8ewindow, \u63a8\u8350\u4f7f\u7528 \nputty\n\u3002\n\n\n\n\n\u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC\uff0c\u52fe\u9009COM\u8bbe\u5907\u7ba1\u7406\u5668\u3002\u8fd9\u91cc\u6211\u4eec\u7684ReSpeaker COM\u7aef\u53e3\u662fCOM31\u3002\n\n\n\n\n\n\n\n\n\u5728\u8fde\u63a5\u7c7b\u578b\u4e0b\u9009\u62e9Serial ,\u5728Serial line\u4e2d\uff0c\u8f93\u5165\u60a8\u7684ReSpeaker\u7684COM\u7aef\u53e3\u53f7\uff0c\u5728\u6ce2\u7279\u7387\u9009\u9879\u4e2d\uff0c\u952e\u516557600\u3002\n\n\n\n\n\n\n\n\n\u70b9\u51fb Open.\u7136\u540e\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u9ed1\u8272\u7684\u5c4f\u5e55\u754c\u9762\uff0c\u70b9\u51fb\u56de\u8f66\u952e\u3002\n\n\n\n\n\n\n\n\n\n\n\u5bf9\u4e8e Linux/Mac\n\n\n\n\n\n\n\u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC\n\n\n\n\n\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u4f1a\u8bdd\n\n\n\u5728\u7ec8\u7aef\u4e2d\u952e\u5165ls /dev/tty.usb*  \u6211\u4eec\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3ctty.usbmodemXXXXX\u7684\u4e1c\u897f\uff0c\u5176\u4e2dXXXXX\u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u7136\u540e\u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600\n\n\n\n\n$ ls /dev/tty.usb*\n/dev/tty.usbmodem14221\n$ screen /dev/tty.usbmodem14221 57600\n\n\n\n\n3. \u8bbe\u7f6e Wi-Fi\n\n\nReSpeaker\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a\u4e2d\u7ee7\u6a21\u5f0f\uff0c\u60a8\u5fc5\u987b\u5c06\u5176\u8fde\u63a5\u5230\u73b0\u6709\u7684\u65e0\u7ebfwifi\u7f51\u7edc\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528Internet\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\u3002\n\n\n\u5f53\u60a8\u9996\u6b21\u63a5\u901aReSpeaker\u7535\u6e90\u65f6\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201cReSpeakerXXXXXX\u201d\u7684Wi-Fi\u7f51\u7edc\u3002\u8fd9\u91cc\u201cXXXXXX\u201d\u662f\u60a8\u7684ReSpeaker MAC\u5730\u5740\u7684\u6700\u540e6\u4f4d\u3002\u5c06\u60a8\u7684\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\u3002\n\n\n\n\n\n\nNote\n\n\n\u5982\u679c\u201cReSpeakerXXXXXX\u201d\u672a\u51fa\u73b0\uff0c\u4f46\u627e\u5230\u201cLinkIt_Smart_7688_XXXXXX\u201d\u3002\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\n\n\u83b7\u53d6IP\u5730\u5740\u540e\uff0c\u6253\u5f00Web\u6d4f\u89c8\u5668\uff0c\u7136\u540e\u5728\u5730\u5740\u680f\u4e2d\u8f93\u5165192.168.100.1\u3002\u51e0\u79d2\u949f\u540e\uff0c\u4f1a\u51fa\u73b0\u4e0b\u56fe\u6240\u793a\u7f51\u9875\uff0c\u9700\u8981\u60a8\u8f93\u5165\u73b0\u6709Wi-Fi\u7f51\u7edc\u7684ssid\u548c\u5bc6\u7801\u3002\n\n\n\n\n\u9009\u62e9\u8981\u8fde\u63a5\u7684Wi-Fi\u5e76\u8f93\u5165\u5bc6\u7801\u3002\u5f53\u60a8\u6309OK\u6309\u94ae\u65f6\uff0cReSpeaker\u5c06\u52a0\u5165\u6307\u5b9a\u7684\u7f51\u7edc\u3002\n\n\n\u73b0\u5728\u60a8\u7684ReSpeaker\u80fd\u591f\u8bbf\u95ee\u4e92\u8054\u7f51\u3002\n\n\n\u5982\u679c\u60a8\u6ca1\u6709\u5f39\u51fawifi\u767b\u9646\u9875\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528putty\u4e32\u53e3\u6a21\u5f0f\u4e0b\u8fde\u63a5Respeaker_Core, \u5e76\u4e14\u5728putty\u4e2d\u4f7f\u7528wictl\u626b\u63cfwifi\u5e76\u8fde\u63a5\n\n\nroot@mylinkit:~# wictl\n0, SEEED-MKT\n1, Xiaomi_Youth\n2, ChinaNet-Z5C4\n3, STU-EE\n4, EMBEST_WIFI\n5, SEEED-MKT\n6, nobody\n7, SEEED-MKT\n8, se.VPN\n9, Moovent_HK_2G\n10, LinkIt_Smart_7688_1D917A\n11, SEEED-MKT\n12, SEEED-MKT\n13, zhongrixing\nPlease choose your wifi: 8\nPlease input the wifi password: 88888888\nudhcpc (v1.23.2) started\nSending discover...\nSending discover...\nSending select for 192.168.199.153...\nLease of 192.168.199.153 obtained, lease time 43200\nudhcpc: ifconfig apcli0 192.168.199.153 netmask 255.255.255.0 broadcast 192.168.199.255\nudhcpc: setting default routers: 192.168.199.1\nsuccess\nroot@mylinkit:~#\n\n\n\n\n!!!\u6ce8\u610f\n    \u5982\u679c\u60a8\u65e0\u6cd5\u4f7f\u7528\u4e0a\u8ff0\u65b9\u6cd5\u8fde\u63a5Wifi\uff0c\u8bf7\u901a\u8fc7\u8f93\u5165firstboot\u547d\u4ee4\u8fdb\u884c\u51fa\u5382\u8bbe\u7f6e\u3002\n\n\n\u542f\u7528Wifi\u529f\u80fd\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528SSH\u6a21\u5f0f\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5Respeaker\u3002\u6211\u4eec\u53ef\u4ee5\u4ecehttp://192.168.100.1/#!/overview WAN IP\u83b7\u53d6Respeaker IP\u5730\u5740\u3002\u5bc6\u7801\u662froot\u3002\n\n\nssh root@ssh *.*.*.*\n\n\n\n\n4. \u4f7f\u7528SD\u5361\u6765\u6269\u5c55\u5b58\u50a8\n\n\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5d4c\u5165\u5f0f\u8bbe\u5907\u53ef\u4ee5\u4f7f\u7528\u6709\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff08ReSpeaker\u4ec5\u4e3a\u7528\u6237\u63d0\u4f9b\u4e865M\u7684\u677f\u8f7dFlash\u5b58\u50a8\u7a7a\u95f4\uff09\u3002\u4e3a\u5e94\u7528\u6216\u8005\u6570\u636e\u63d0\u4f9b\u66f4\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u6fc0\u53d1ReSpeaker\u7684\u6f5c\u529b\uff0c\u6240\u4ee5\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u4f5c\u4e3aextroot\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u8fd8\u4e0d\u9519\u7684\u9009\u62e9\u54df\u3002\n\n\n\u901a\u8fc7\u4f7f\u7528extroot\uff0c\u6dfb\u52a0\u5916\u90e8SD\u5361\u5b58\u50a8\u8bbe\u5907\u6765\u5b9e\u73b0\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u5b58\u50a8\u5bb9\u91cf\u7684\u6269\u5c55\u3002\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u5916\u90e8\u5b58\u50a8\u7a7a\u95f4\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\u542f\u52a8\uff0c\u6216\u8005\u4ee5\u539f\u59cb\u6587\u4ef6\u7cfb\u7edf\u7684\u8986\u76d6\u914d\u7f6e\u8fdb\u884c\u542f\u52a8\u3002\n\n\n\n\n\u786e\u4fdd\u60a8\u7684SD\u5361\u5df2\u63d2\u5165ReSpeaker\uff0c\u5e76\u4e14/ dev / mmcblk0p1\u53ef\u4ee5\u901a\u8fc7df -h\u6216ls / dev\u8fdb\u884c\u68c0\u6d4b\u3002\n\n\n\n\nroot@ReSpeaker:/# df -h\nFilesystem                Size      Used Available Use% Mounted on\nrootfs                    1.8M    832.0K    960.0K  46% /\n/dev/root                29.0M     29.0M         0 100% /rom\ntmpfs                    61.7M    276.0K     61.5M   0% /tmp\n/dev/mtdblock6            1.8M    832.0K    960.0K  46% /overlay\noverlayfs:/overlay        1.8M    832.0K    960.0K  46% /\ntmpfs                   512.0K         0    512.0K   0% /dev\n/dev/mmcblk0p1            7.4G      2.5M      7.4G   0% /tmp/run/mountd/mmcblk0p1\n\n\n\n\n\n\n\u5c06SD\u5361\u683c\u5f0f\u5316\u4e3a\u4e24\u4e2a\u5206\u533a\uff0c\u4e00\u4e2a\u662fFAT32\uff0c\u53e6\u4e00\u4e2a\u662fEXT4\u3002EXT4\u6587\u4ef6\u7cfb\u7edf\u5c06\u4f5c\u4e3a\u4e00\u4e2a\u5916\u63a5\u7a0b\u5e8f\uff0c\u800cFAT32\u5c06\u4f5c\u4e3a\u6b63\u5e38\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u53ef\u4ee5\u5728ReSpeaker\u548cPC\u4e4b\u95f4\u4f20\u8f93\u6587\u4ef6\u3002\n\n\n\n\n    umount /dev/mmcblk0p1\n    fdisk /dev/mmcblk0\n     ------------------ fdisk ------------------------\n    \nCommand (m for help):o\n    \nCreated a new DOS disklabel\n    \nCommand (m for help):n\n    \nPartition type\n    p   primary (0 primary, 0 extended, 4 free)\n    e   extended (container for logical partitions)\n    \nSelect (default p):p\n    \nPartition number (1-4, default 1):1\n    \nFirst sector (2048-15523839, default 2048):\n    \nLast sector, +sectors or +size{K,M,G,T,P} (2048-15523839, default 15523839): +2G\n    \nCommand (m for help):n\n    \nPartition type\n    p   primary (1 primary, 0 extended, 3 free)\n    e   extended (container for logical partitions)\n    \nSelect (default p):p\n    \nPartition number (1-4, default 2):2\n    \nFirst sector (4196352-15523839, default 4196352):\n    \nLast sector, +sectors or +size{K,M,G,T,P} (4196352-15523839, default 15523839):\n    \nCommand (m for help):w\n    \nThe partition table has been altered.\n    \nCalling i[  292.010000]  mmcblk0: p1 p2\n    \noctl() to re-read partition table.\n    \nSyncing disks.\n     ------------------ end ------------------------\n\n    mkfs.fat /dev/mmcblk0p1\n    mkfs.ext4 /dev/mmcblk0p2\n\n    # reload mtk_sd kernel module\n    rmmod mtk_sd\n    insmod mtk_sd\n\n\n\n\n\n\n\u51c6\u5907\u60a8\u7684\u5916\u90e8\u5b58\u50a8root overlay\u3002\n\n\n\n\nmount /dev/mmcblk0p2 /mnt ; tar -C /overlay -cvf - . | tar -C /mnt -xf - ; umount /mnt\n\n\n\n\n\n\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efafstab\u3002\u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u542f\u7528\u6240\u6709\u5206\u533a\u5e76\u5c06'/ mnt / mmcblk0p2'\u5206\u533a\u8bbe\u7f6e\u4e3a'/ overlay'\u5206\u533a\u7684fstab\u6a21\u677f\n\n\n\n\n    block detect \n /etc/config/fstab;\n    sed -i s/option$\n\\t\nenabled$\n\\t\n\\\n0\\\n/option$\n\\t\nenabled$\n\\t\n\\\n1\\\n/ /etc/config/fstab;\n    sed -i s#/mnt/mmcblk0p2#/overlay# /etc/config/fstab;\n    cat /etc/config/fstab;\n\n\n\n\n\n\n\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u5230 overlay.\n\n\n\n\n    root@mylinkit:/# mount /dev/mmcblk0p2 /overlay/\n    root@ReSpeaker:/# df -h\n  Filesystem                Size      Used Available Use% Mounted on\n  rootfs                    1.8M    832.0K    960.0K  46% /\n  /dev/root                29.0M     29.0M         0 100% /rom\n  tmpfs                    61.7M    276.0K     61.5M   0% /tmp\n  /dev/mtdblock6            5.2G     11.8M      4.9G   0% /overlay\n  overlayfs:/overlay        1.8M    832.0K    960.0K  46% /\n  tmpfs                   512.0K         0    512.0K   0% /dev\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /tmp/run/mountd/mmcblk0p2\n  /dev/mmcblk0p1            2.0G      4.0K      2.0G   0% /tmp/run/mountd/mmcblk0p1\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /overlay\n\n\n\n\n\n\n\u91cd\u542fReSpeaker\u5e76\u91cd\u65b0\u68c0\u67e5\u3002\u5982\u679cSD\u5361\u81ea\u52a8\u5b89\u88c5\uff0c\u5c31\u5b8c\u6210\u4e86\u3002\u66f4\u591a\u5173\u4e8eextroot\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\n\n5. \u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6\n\n\n\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u540e\uff0c\u6709\u8db3\u591f\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6\u3002\n\n\n\u5b89\u88c5git\n\n\n    opkg update\n    opkg install git git-http\n\n\n\n\n6. \u66f4\u65b0 Python \u5e93\n\n\ngit clone https://github.com/respeaker/respeaker_python_library.git\ncd respeaker_python_library\npython setup.py install\n\n\n\n\n\u4e0eRespeaker\u7684\u7b2c\u4e00\u6b21\u4e92\u52a8 - ReSpeaker, play music!\n\n\n\u4f7f\u7528Bing Speech API\uff0cReSpeaker\u53ef\u4ee5\u5b9e\u65f6\u6253\u5f00\u5e76\u8bc6\u522b\u6765\u81ea\u9ea6\u514b\u98ce\u7684\u97f3\u9891\uff0c\u6216\u4ece\u6587\u4ef6\u8bc6\u522b\u97f3\u9891\u3002\n\n\n\u8981\u4f7f\u7528Bing Speech API\uff0c\u9996\u5148\u5fc5\u987b\u4ece \n\u8fd9\u91cc\n \u83b7\u53d6Microsoft Cognitive Services\u7684\u5bc6\u94a5\uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230BING_KEY =\u201c'\uff0c\u7136\u540e\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4fdd\u5b58\u5728playmusic.py\u4e2d\u5e76\u8fd0\u884c\n\n\n//stop mopidy and alexa to avoid USB device occupation\n/etc/init.d/mopidy stop\n/etc/init.d/alexa stop\npython playmusic.py\n\n\n\n\n\n\nimport logging\nimport time\nimport os\nfrom threading import Thread, Event\nfrom respeaker import Microphone\nfrom respeaker.bing_speech_api import BingSpeechAPI\n\n# use madplay to play mp3 file     \nos.system(\nmadplay\n)               \n\n# get a key from https://www.microsoft.com/cognitive-services/en-us/speech-api\nBING_KEY = \n      \n\n\ndef task(quit_event):                                                         \n    mic = Microphone(quit_event=quit_event)                                   \n    bing = BingSpeechAPI(key=BING_KEY)                                        \n\n    while not quit_event.is_set():\n        if mic.wakeup(\nrespeaker\n):        \n            print(\nWake up\n)               \n            data = mic.listen()            \n            try:                      \n                text = bing.recognize(data)\n                if text:           \n                    print(\nRecognized %s\n % text)\n                    if \nplay music\n in text:\n                        print(\nI will play music!\n)\n                        os.system(\nmadplay Tchaikovsky_Concerto_No.1p.mp3\n)\n            except Exception as e:               \n                print(e.message)                 \n\ndef main():                                                              \n    logging.basicConfig(level=logging.DEBUG)                                                           \n    quit_event = Event()        \n    thread = Thread(target=task, args=(quit_event,))\n    thread.start()                          \n    while True:                             \n        try:                                \n            time.sleep(1)                           \n        except KeyboardInterrupt:                   \n            print(\nQuit\n)                           \n            quit_event.set()\n            break        \n    thread.join()                \n\nif __name__ == \n__main__\n:       \n    main()                  \n\n\n\n\n\u5728\"INFO:mic:Start Detecting\" \u51fa\u6765\u4e4b\u540e\uff0c\u5c1d\u8bd5\u8bf4\u201cReSpeaker\u201d\u5524\u9192\u7a0b\u5e8f\uff0c\u5524\u9192\u540e\u8bf4\u201cplaymusic\u201d\u8ba9\u5b83\u64ad\u653e\u97f3\u4e50\u3002\u7136\u540eReSpeaker\u5c06\u4f7f\u7528madplay\u5de5\u5177\u5728\u5f53\u524d\u8def\u5f84\u4e2d\u64ad\u653e\u201cTchaikovsky_Concerto_No.1p.mp3\u201d\n\n\n\n\n\u5982\u679c\u60a8\u770b\u5230\u4ee5\u4e0b\u9519\u8bef\u4ee3\u7801\uff0c\u90a3\u4e48mopidy\u6b63\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u5360\u7528USB\u8bbe\u5907\u3002\u6240\u4ee5\u5c1d\u8bd5\u8fd0\u884c /etc/init.d/mopidy\uff0c\u505c\u6b62mopidy\uff0c\u7136\u540e\u518d\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4\u3002\n\n\nroot@ReSpeaker:~# python playmusic.py\nUsage: madplay [OPTIONS] FILE [...]\nTry `madplay --help\n for more information.\nException in thread Thread-2:\nTraceback (most recent call last):\nFile \n/usr/lib/python2.7/threading.py\n, line 810, in __bootstrap_inner\n\n\n\n\n\u5e94\u7528\u5b9e\u4f8b\n\n\n\n\n\u6c34\u679c\u94a2\u7434\n\n\n\n\nReSpeaker\u63a7\u5236\u6a21\u5757\u662f\u57fa\u4e8eATmega32u4\u82af\u7247\uff0c\u8be5\u82af\u7247\u5b8c\u5168\u517c\u5bb9Arduino\u9a71\u52a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ReSpeaker\u4f5c\u4e3a\u5f3a\u5927\u7684Arduino\u5b66\u4e60\u677f\uff0c\u5e76\u505a\u4e86\u8bb8\u591a\u201cArduino\u201d\u5f00\u53d1\u677f\u80fd\u505a\u7684\u4e8b\u60c5\u3002\n\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Arduino IDE\u5bf9\u5176\u8fdb\u884c\u7f16\u7a0b\uff0c\u6765\u5b9e\u73b0\u521b\u610fDIY\u94a2\u7434\uff0c\u8be5\u94a2\u7434\u642d\u914d8\u4e2a\u6a31\u6843\u897f\u7ea2\u67ff\u8fde\u63a5\u5230ReSpeaker\u76848\u4e2a\u89e6\u6478\u4f20\u611f\u5668\u3002\n\n\n\n\n\n\n\n\n\n\n\u5728respeaker\u4e0a\u8f93\u5165 git clone \nhttps://github.com/respeaker/piano.git\n      \u4e0b\u8f7d\u5e93\n\n\n\n\n\n\n\n\n\n\n\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e2d\u4e0b\u8f7d\nReSpeaker Arduino Library\n\n\n\n\n\n\n\n\n\n\n\u4e0a\u4f20piano.ino\u5230ReSpeaker\u7684Arduino Leonardo\uff08ATmega32U4\uff09\n\n\n\n\n\n\n\n\n\n\n\u5728ReSpeaker\u7684\u4e32\u884c\u63a7\u5236\u53f0\u4e0a\u8fd0\u884cpython piano.py\n\n\n\n\n\n\n\n\n\u5929\u6c14\u4e91\n\n\n\n\n\u5929\u6c14\u4e91\u662f\u5f88\u68d2\u7684\u4e00\u4e2aReSpeaker\u9879\u76ee\u3002\u8fd9\u4e2a\u5f88\u9177\u7684\u521b\u610f\u5c06ReSpeaker\u53d8\u6210\u4e86\u4e00\u4e2a\u5929\u6c14\u4e91\uff0c\u5b83\u80fd\u591f\u663e\u793a\u51fa\u751f\u52a8\u7684\u5149\u7ebf\u548c\u58f0\u97f3\u3002\n\n\n\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0cOpenwrt\u8d1f\u8d23\u4ece\u4e92\u8054\u7f51\u83b7\u53d6\u5b9e\u65f6\u5929\u6c14\u4fe1\u606f\uff0c\u8fdb\u884c\u8bed\u97f3\u4ea4\u4e92\u548c\u97f3\u9891\u8f93\u51fa\uff0c\u800cArduino\u8d1f\u8d23\u63a7\u5236\u5f69\u8272RGB LED\u3002\n\n\n\n\n\u5728respeaker\u4e0a\u8f93\u5165 git clone \nhttps://github.com/jerryyip/WeatherCloud.git\n, \u4e0b\u8f7d\u9879\u76ee\u5e93\u6587\u4ef6\u3002\n\n\n\u70b9\u51fb\u4e0b\u8f7d \nReSpeaker Arduino Library\n \u5230\u60a8\u7684\u7535\u8111\u4e0a\uff0c\u5e76\u5b89\u88c5\u3002\n\n\n\u901a\u8fc7Arduino IDE\u5c06 \npixels_pattern.ino\n \u4e0a\u4f20\u5230respeaker\u3002\n\n\n\n\n\u4ece\u8fd9\u91cc\u83b7\u53d6OpenWeatherMap appid \uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230main.py\u4e2d\u7684appID =\u201c\u201d\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u60a8\u7684\u57ce\u5e02\u6dfb\u52a0\u5230city =\u201c\u201d\n\n\n\n\n\n\n\u5728\u4f7f\u7528SPI\u4e4b\u524d\u8bf7\u7ec8\u6b62mopidy service\u5728OpenWrt\u4e2d\u7684\u8fdb\u7a0b\uff0crespeaker\u5728\u63a7\u5236\u53f0\u4e0a\u952e\u5165\n/etc/init.d/mopidy stop\n\n\n\n\n\u8fd0\u884cpython main.py \u7136\u540e\u5bf9\u7740\u5b83\u558a \"ReSpeaker, what is the weather like?\"\n\n\n\u6709\u5173\u5982\u4f55\u5236\u4f5c\u5929\u6c14\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\n\nReSpeaker Mic Array\uff08ReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\uff09\n\n\n\n\nReSpeaker Mic Array\n\n\nReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\n\n\n\u5173\u4e8e\u8f6f\u4ef6\n\n\n\n\n\u60a8\u53ef\u9875\u9762\u4ee5\u70b9\u51fb\u4e0b\u5217\u6807\u9898\u6765\u8df3\u8f6c\u5230\u5bf9\u5e94\n\n\nReSpeaker Arduino \u5e93\n\n\nReSpeaker Arudino\u5e93\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a\n\n\n\n\n\u652f\u6301\u7535\u5bb9\u5f0f\u89e6\u6478\u611f\u5e94\n\n\n\u5b9e\u73b0\u4e86WS2812 RGB LED\u9a71\u52a8\n\n\n\u6784\u5efa\u4e86\u4eceArduino (ATmega32U4)\u5230\u57fa\u4e8eLinux\u7684OpenWrt (MT7688)\u4e4b\u95f4\u7684USB\u5230\u4e32\u53e3\u548cUSB\u5230SPI\u901a\u9053\u3002                           \n\n\n\n\nReSpeaker Python \u5e93\n\n\nReSpeaker\u662f\u4e00\u4e2a\u652f\u6301\u8bed\u97f3\u4ea4\u4e92\u7684\u5f00\u653e\u9879\u76ee\u3002ReSpeaker python\u5e93\u662f\u4e00\u4e2a\u5f00\u6e90\u7684python\u5e93\uff0c\u7528\u4e8e\u63d0\u4f9b\u8bed\u97f3\u4ea4\u4e92\u7684\u57fa\u672c\u529f\u80fd\u3002\n\u5b83\u4f7f\u7528PocketSphinx\u8fdb\u884c\u5173\u952e\u5b57\u67e5\u627e\uff0c\u5e76\u4f7f\u7528webrtcvad\u8fdb\u884c\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b\u3002\n\n\n\u66f4\u591a\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc\u67e5\u770b\u6211\u4eec\u7684github\u8d44\u6599\u5e93\n\n\nFAQ\n\n\n\n\nQ1: \u5982\u4f55\u6062\u590d\u51fa\u5382\u8bbe\u7f6e?\n\n\n\n\n\u6253\u5f00\u4e32\u884c\u63a7\u5236\u53f0\u6216ssh\u4f1a\u8bdd\u5e76\u8fd0\u884c firstboot. \n\u66f4\u591a\u7ec6\u8282\u70b9\u51fb\u8fd9\u91cc\n.\n\n\n\n\nQ2: \u5982\u679c\u5347\u7ea7\u5931\u8d25\u4e86\uff0c\u600e\u4e48\u62a2\u6551?\n\n\n\n\n\u5347\u7ea7\u5931\u8d25\u540e\uff0c\u5f53\u91cd\u65b0\u542f\u52a8\u8fdb\u5165openwrt\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u7ec8\u7aef\uff0cssh\u6216\u4e32\u884c\u63a7\u5236\u53f0\u8bbf\u95ee\u7cfb\u7edf\u3002\u6211\u4eec\u53ef\u4ee5\u6309\u7167\n\n\n\n\nRescue instruction\n \u6307\u4ee4\u8fdb\u884c\u6062\u590d\u3002\n\n\nQ3: ReSpeaker\u627e\u4e0d\u5230\u6211\u7684Wi-Fi\n\n\n\n\n\u8bf7\u5148\u5c1d\u8bd5 \n\u6062\u590d\u51fa\u5382\u8bbe\u7f6e\n \u3002\n\n\nReSpeaker\u4e0d\u652f\u6301Wi-Fi\u9891\u905312\u3002\u786e\u4fdd\u60a8\u7684\u8def\u7531\u5668\u6ca1\u6709\u4f7f\u7528\u8be5\u901a\u9053\u3002.\n\n\n\n\nQ4: \u5982\u4f55\u8fdb\u884cWifi\u914d\u7f6e\n\n\n\n\n\u6211\u4eec\u5efa\u8bae\u60a8\u901a\u8fc7\nWEB-UI\n\u914d\u7f6eWi-Fi \uff0c\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\uff0c\u8bf7\u5728\u63a7\u5236\u53f0\u4e0a\u5c1d\u8bd5\u547d\u4ee4\u884c\u5de5\u5177\nwictl\n \u3002\n\n\n\n\nQ5: \u5982\u4f55\u6539\u53d8BING Speech api \u7684\u8bc6\u522b\u8bed\u8a00\n\n\n\n\n\u5982\u679c\u60a8\u4e0d\u9700\u8981\u66f4\u6539\u5524\u9192\u5b57\uff0c\u53ea\u9700\u5c06text = bing.recognize\uff08data\uff09\u66f4\u6539\u4e3atext = bing.recognize\uff08data\uff0clanguage =\u201czh-CN\u201d\uff09\u5c31\u53ef\u4ee5\u4e86\u3002 \n\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc\n.\n\n\n\n\nQ6: \u6536\u5230SD\u5361\u8b66\u544a\u6d88\u606f\u201c\u5377\u672a\u6b63\u786e\u5378\u8f7d\u3002\u67d0\u4e9b\u6570\u636e\u53ef\u80fd\u5df2\u635f\u574f\u3002\u8bf7\u8fd0\u884cfsck\u201d\n\n\n\n\n\u5982\u679cSD\u5361\u4e0a\u7684\u6587\u4ef6\u6b63\u5e38\uff0c\u8bf7\u5ffd\u7565\u5b83\u3002\u5426\u5219\uff0c\u5c1d\u8bd5\u4f7f\u7528\nsd\u5361\u683c\u5f0f\u5316\u7a0b\u5e8f\u8fdb\u884c\u683c\u5f0f\u5316\n.\n\n\n\n\nQ7: \u9519\u8bef\u63d0\u793a \u201cBad flash from Arduino\u201d\n\n\n\n\n\u6309\u7167\u4e0b\u9762\u4ee3\u7801\uff0c\u5728openwrt\u4e2d\u91cd\u65b0\u70e7\u5199 bootloade\u3002\n\n\n\n\n/etc/init.d/mopidy stop  # stop mopidy if it\ns running, mopidy-hallo plugin will use SPI\n/etc/init.d/alexa stop      # stop alexa if it\ns running\nmt7688_pinmux set ephy gpio\ncd /etc/arduino\navrdude -c linuxgpio -p m32u4 -e -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xCB:m  -U flash:w:Caterina-ReSpeaker.hex -u -U lock:w:0xEF:m\n\n\n\n\nQ8: \u5fd8\u8bb0\u4e86WebUI\u7684\u5bc6\u7801\n\n\n\n\n\u91cd\u7f6e juci \u5bc6\u7801\n\n\n\n\norangectl passwd root 12345678  //replace 12345678 with the password you want to set\n\n\n\n\nQ9: \u5982\u4f55\u652f\u6301\u8c37\u6b4c\u8bed\u97f3\u6216\u5176\u4ed6Speach to Text\uff08STT\uff09\u5f15\u64ce?\n\n\n\n\n\u6309\u7167\n\u6307\u5357\n\u5b89\u88c5speech_recognition\u5e93\n\n\n\n\nQ10: \u8fd0\u884cAlexa \u9519\u8bef\uff0c\u63d0\u793a\"IOError: [Errno -9998] Invalid number of channels\"\n\n\n\n\n\u8fd8\u6709\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6216alexa\u5b9e\u4f8b\u4f7f\u7528\u97f3\u9891\u8f93\u5165\u8bbe\u5907\u3002\u8fd0\u884c/etc/init.d/alexa stop\u548c/etc/init.d/mopidy stop \u505c\u6b62\u5b83\u4eec\u3002\u8981\u7981\u7528mopidy\u542f\u52a8\uff0c\u8bf7\u8fd0\u884c/etc/init.d/mopidy disable\u3002\n\n\n\n\nQ11: \u65e0\u6cd5\u8fd0\u884cpython playmusic.py\n\n\n\n\n\u5e94\u8be5\u662fmopidy\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u4f7f\u7528USB\u8bbe\u5907\u3002\u5c1d\u8bd5\u8fd0\u884c/etc/init.d/mopidy stop, \u505c\u6b62mopidy\u5e76\u518d\u6b21\u8fd0\u884c\u60a8\u7684\u547d\u4ee4\u3002\n\n\n\n\nQ12: \u6ca1\u6709RPC\u8fde\u63a5\n\n\n\n\n\u60a8\u9700\u8981\u91cd\u65b0\u5237\u56fa\u4ef6\uff0c\u70b9\u51fb\u67e5\u770b \n\u6307\u5357\n\n\n\n\nQ13: SFTP \n FTP\n\n\n\n\n\u6211\u4eec\u6ca1\u6709FTP\uff0c\u53ea\u6709SFTP\u3002\n\n\n\n\nQ14: \u4e32\u53e3\u63a7\u5236\u53f0\u88ab\u9501\u5b9a\n\n\n\n\n\u5c1d\u8bd5\u66f4\u65b0 \narduino code\n\u3002\n\n\n\n\nQ15:\u5982\u4f55\u7981\u7528'ap'\u6a21\u5f0f\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u5728vi / etc / config / wireless \u4e2d\u4fee\u6539\u5982\u4e0b 'ssid' flag of the 'ap' interface to '' \u3002\u4e5f\u5c31\u662f\u5c06'ap'\u6539\u4e3a''\u3002\u7136\u540e\u5c31\u4f1a\u9690\u85cfap\u3002\n\n\n\n\nQ16: I2C\u58f0\u5361\u95ee\u9898\n\n\n\n\n\u6211\u4eec\u9700\u8981\u68c0\u67e5\u7f16\u89e3\u7801\u5668\u9a71\u52a8\u7a0b\u5e8f\u517c\u5bb9\u540d\u4ee5\u53ca\u7f16\u89e3\u7801\u5668i2c\u5730\u5740 \u7136\u540e\u91cd\u5efaimage\u56fa\u4ef6\u3002\n\n\n\n\nQ17: \u5373\u4f7f\u6ca1\u6709\u58f0\u97f3\uff0cRespeaker\u4e5f\u7ecf\u5e38\u88ab\u5524\u9192\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0keyword.txt\u4e2d\u7684\u9608\u503c\u6765\u51cf\u5c11\u8bef\u8bc6\u522b\u7387\uff0c\u4f46\u4e5f\u4f1a\u964d\u4f4e\u654f\u611f\u5ea6\u3002\n\n\n\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u60a8\u7684\u58f0\u97f3\u4e0e\u5f53\u524d\u7684\u58f0\u5b66\u6a21\u5757\u8fdb\u884c\u5339\u914d\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u53c2\u8003\u8fd9\u91cc \nhttp://cmusphinx.sourceforge.net/wiki/tutorialadapt\n\u3002\n\n\n\u8fd9\u79cd\u65b9\u6cd5\u5c06\u6709\u6548\u63d0\u9ad8\u4e2a\u4eba\u5173\u952e\u5b57\u8bc6\u522b\u7387\uff0c\u4f46\u53ef\u80fd\u8ba9\u5176\u4ed6\u4eba\u4e0d\u88ab\u8bc6\u522b\u3002\n\n\n\n\nQ18: \u5982\u4f55\u63a7\u5236Respeaker\u7684GPIO\u5f15\u811a\uff1f\n\n\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u91cc\u7684\u4ee3\u7801 \nhttps://github.com/respeaker/respeaker_python_library/blob/master/respeaker/gpio.py\n\n\n\u4ee5\u53ca\u7528\u8fd9\u91cc\u7684\u4f8b\u7a0b\u6765\u901a\u8fc7GPIO\u6a21\u62dfSPI \nhttps://github.com/respeaker/respeaker_python_library/blob/master/respeaker/spi.py\n\n\n\n\nQ19: \u5982\u4f55\u6539\u53d8\u5524\u9192\u8bcd\uff1f\n\n\n\n\n\n\n\u5728respeaker\u7684 /usr/lib/python2.7/site-packages/respeaker-0.6.0-py2.7.egg/respeaker/pocketsphinx-data  \u76ee\u5f55\u4e0b\u627e\u5230\u5e76\u6253\u5f00\nkeywords.txt\n\n\nrespeaker /1e-30/\nalexa /1e-30/\nplay music /1e-40/\n\n\n\n\nrespeaker \u662f\u5173\u952e\u8bcd, 1e-30 \u662f\u5176\u9608\u503c\u3002\u4e3a\u4e86\u63d0\u9ad8\u654f\u611f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u964d\u4f4e\u9608\u503c\uff0c\u4f8b\u59821e-20\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u63d0\u9ad8\u7075\u654f\u5ea6\u800c\u964d\u4f4e\u9608\u503c\u540c\u65f6\u4f1a\u589e\u52a0\u9519\u8bef\u63a5\u53d7\u7387\u3002\n\n\n\n\n\n\n\u5982\u679c\u8981\u6dfb\u52a0\u65b0\u7684\u5173\u952e\u5b57\uff0c\u5e94\u8be5\u9996\u5148\u5c06\u5173\u952e\u5b57\u6dfb\u52a0\u5230 \ndictionary.txt\n \u3002dictionary.txt \u91cc\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\n\n\n```\nrespeaker   R IY S P IY K ER\nalexa   AH L EH K S AH\nplay    P L EY\nmusic   M Y UW Z IH K\n```\n\n\u6bcf\u884c\u7684\u7b2c\u4e00\u90e8\u5206\u662f\u5173\u952e\u8bcd\u7684\u540d\u5b57 (respeaker, alexa or music), \u7b2c\u4e8c\u90e8\u5206\u662f\u5b83\u7684\u97f3\u7d20\u3002\u4f60\u53ef\u4ee5\u5728 [\u8fd9\u91cc](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt) \u7684\u5b57\u5178\u4e2d\u627e\u5230\u5355\u8bcd\u3002\n\n\n\n\n\n\n\n\n\n\u7136\u540e\u66f4\u6539\u4ee3\u7801\uff1a .\n\n\nif mic.wakeup(\nrespeaker\n):\n\n\n\n\n\n\n\n\n\u5c0f\u7ed3:\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u6309\u7167\u4e0b\u9762\u76843\u6b65\u3002\u6bd4\u5982\u6dfb\u52a0good morning  \n\n\n-  1\u3001\u5728[\u5b98\u65b9\u5b57\u5178](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt)\u4e2d\u67e5\u627e\u5e76\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684\u97f3\u7d20\u3002\n-  2\u3001\u5728keyword.txt\u4e2d\u7ed9 good morning\u8bbe\u7f6e\u4e00\u4e2a\u9608\u503c\n-  3\u3001\u5728\u60a8\u7684python\u4ee3\u7801\u4e2d\u6dfb\u52a0\u8c03\u7528if mic.wakeup(\ngood morning\n):\n\n\n\n\n\nQ20: \u901a\u8fc7\u51fa\u5382\u56fa\u4ef6\u6062\u590d\u7cfb\u7edf\n\n\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u66f4\u65b0\u60a8\u7684ReSpeaker\u6216\u65e0\u6cd5\u8bbf\u95eehttp://192.168.100.1/home.html \uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n \u3002\u8981\u5c06\u7535\u8111\u4e0a\u6700\u65b0\u7684\u56fa\u4ef6\u4e0b\u8f7d\u5230SD\u5361\u4e0a\uff0c\u5e76\u5c06SD\u5361\u63d2\u5165ReSpeaker\u3002\n\n\n\u8fde\u63a5\u5230respeaker\u7684 \n\u4e32\u884c\u63a7\u5236\u53f0\n \uff0c\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\u884c\u6765\u66f4\u65b0\u56fa\u4ef6\uff1a\n\n\nmount /dev/mmcblk0p1 /mnt\ncd /mnt\nsysupgrade -n -F ramips-openwrt-latest-LinkIt7688-squashfs-sysupgrade.bin\n\n\nReSpeaker\u5b89\u88c5\u56fa\u4ef6\u548c\u91cd\u542f\u5927\u7ea6\u9700\u89813\u5206\u949f\uff0c\u66f4\u65b0\u65f6**\u8bf7\u52ff\u5173\u95ed** ReSpeaker\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u539f\u7406\u56fe]\n \nReSpeaker Core v1.0 SCH\n\n\n[Eagle PCB\u56fe]\n \nReSpeaker Core v1.0 BRD\n\n\n[PDF \u539f\u7406\u56fe]\n \nReSpeaker Core v1.0 Schematic(pdf)\n\n\n[PDF PCB\u5e95\u677f\u56fe]\n \nReSpeaker Core v1.0 PCB bottom(pdf)\n\n\n[PDF PCB\u9876\u677f\u56fe]\n \nReSpeaker Core v1.0 PCB top(pdf)", 
            "title": "Respeaker_Core"
        }, 
        {
            "location": "/Respeaker_Core/#_1", 
            "text": "\u89e3\u653e\u60a8\u7684\u53cc\u624b\uff1a\u79bb\u7ebf\u6216\u5728\u7ebf\u6a21\u5f0f\u4e0b\u7684\u8bed\u97f3\u8bc6\u522b  \u65e0\u7ebf\u97f3\u9891\u6d41\u4f20\u8f93\uff1a \u901a\u8fc7Airplay/DLNA\u4f20\u8f93\u97f3\u9891\u6d41  \u6613\u4e8e\u4f7f\u7528\u7684SDK\uff1a\u9002\u7528\u4e8ePython\u548cC / C ++\u5f00\u53d1\u4eba\u5458  \u65e5\u76ca\u589e\u957f\u7684\u529f\u80fd\uff1a\u4e0b\u8f7d\u548c\u63d2\u4ef6\u4e0d\u65ad\u4e30\u5bcc\u5176\u529f\u80fd\u4e0e\u5e94\u7528  \u5373\u63d2\u5373\u7528\u63d2\u4ef6\uff1a\u53ef\u6269\u5c55\u4f7f\u7528\u9ea6\u514b\u98ce\u9635\u5217\uff0cGrove\u6269\u5c55\u677f\uff0cGrove\u6a21\u5757  \u514d\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff1a\u53ef\u57fa\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u6240\u6709\u529f\u80fd\u3001\u53c2\u6570\uff08\u6682\u65f6\u4e0d\u53ef\u7528\uff09", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Respeaker_Core/#_2", 
            "text": "", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Respeaker_Core/#_3", 
            "text": "AI7688 Wi-Fi \u6a21\u5757:   \u64cd\u4f5c\u7cfb\u7edf: \u57fa\u4e8eGNU/Linux \u7684 OpenWrt  wifi\u652f\u6301: \u652f\u6301802.11b/g and HT 802.11n \u6a21\u5f0f  \u6269\u5c55\u6027:\u4e24\u6392\u6269\u5c55\u63a5\u53e3\uff0c\u62e5\u6709 I2C, GPIO \u548c USB 2.0  \u63a5\u53e3: 3.5mm AUX \u97f3\u9891\u63a5\u53e3, Micro USB \u548c SD card \u5361\u69fd     ATMega32U4 \u5904\u7406\u5668:   Linnux\u5e73\u53f0\u4e0b\u7684 USB CDC \u8f6f\u4e32\u53e3  12\u4e2a\u53ef\u7f16\u7a0bLED \u6307\u793a\u706f  8 \u4e2a\u7247\u4e0a\u89e6\u70b9\u63a5\u53e3     Codec WM8960:   DAC SNR 98dB (\u2018A\u2019 weighted), THD -84dB at 48kHz, 3.3V    ADC SNR 94dB (\u2018A\u2019 weighted), THD -82dB at 48kHz, 3.3V    Stereo Class D Speaker Driver with 87% efficiency (1W output)    On-chip Headphone Driver    40mW output power into 16\u03a9 at 3.3V    THD -75dB at 20mW, SNR 90dB with 16\u03a9 load    On-chip PLL provides flexible clocking scheme    Sample rates: 8, 11.025, 12, 16, 22.05, 24, 32, 44.1, 48 kHz     \u4f9b\u7535\u7535\u538b: 5V DC      \u5c3a\u5bf8: \u76f4\u5f84 70mm       \u91cd\u91cf: 17g", 
            "title": "\u6280\u672f\u89c4\u683c"
        }, 
        {
            "location": "/Respeaker_Core/#_4", 
            "text": "GPIO0 / I2S_ADC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cADC\u4fe1\u53f7  GPIO1 / I2S_DAC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cDAC\u4fe1\u53f7  GPIO2 / I2S_LRCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u5de6/\u53f3\u901a\u9053\u91c7\u6837\u65f6\u949f  GPIO3 / I2S_BCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u4f4d\u65f6\u949f  MCLK_OUT\uff1a\u5916\u90e8\u8bbe\u5907\u7684\u4e3b\u65f6\u949f  HP_SEL\uff1a\u8033\u673a\u9891\u9053\u9009\u62e9\u3002\u5982\u679c\u4f7f\u7528ReSpeaker Mic Array\u8f93\u51fa\u97f3\u9891\uff0c\u8bf7\u5c06HP_SEL\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73  HP_L\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u5de6\u58f0\u9053  HP_R\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u53f3\u58f0\u9053  AGND\uff1a\u97f3\u9891\u6a21\u62df\u5730", 
            "title": "\u7ba1\u811a\u56fe"
        }, 
        {
            "location": "/Respeaker_Core/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker_core", 
            "text": "", 
            "title": "\u7b2c\u4e00\u6b21\u62ff\u5230Respeaker_Core\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f"
        }, 
        {
            "location": "/Respeaker_Core/#1", 
            "text": "ReSpeaker\u6838\u5fc3\u677f  PC\u6216Mac  Wi-Fi\u7f51\u7edc  SD\u5361", 
            "title": "1. \u51c6\u5907"
        }, 
        {
            "location": "/Respeaker_Core/#2", 
            "text": "\u5bf9\u4e8ewindow, \u63a8\u8350\u4f7f\u7528  putty \u3002   \u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC\uff0c\u52fe\u9009COM\u8bbe\u5907\u7ba1\u7406\u5668\u3002\u8fd9\u91cc\u6211\u4eec\u7684ReSpeaker COM\u7aef\u53e3\u662fCOM31\u3002     \u5728\u8fde\u63a5\u7c7b\u578b\u4e0b\u9009\u62e9Serial ,\u5728Serial line\u4e2d\uff0c\u8f93\u5165\u60a8\u7684ReSpeaker\u7684COM\u7aef\u53e3\u53f7\uff0c\u5728\u6ce2\u7279\u7387\u9009\u9879\u4e2d\uff0c\u952e\u516557600\u3002     \u70b9\u51fb Open.\u7136\u540e\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u9ed1\u8272\u7684\u5c4f\u5e55\u754c\u9762\uff0c\u70b9\u51fb\u56de\u8f66\u952e\u3002      \u5bf9\u4e8e Linux/Mac    \u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC   \u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u4f1a\u8bdd  \u5728\u7ec8\u7aef\u4e2d\u952e\u5165ls /dev/tty.usb*  \u6211\u4eec\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3ctty.usbmodemXXXXX\u7684\u4e1c\u897f\uff0c\u5176\u4e2dXXXXX\u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u7136\u540e\u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600   $ ls /dev/tty.usb*\n/dev/tty.usbmodem14221\n$ screen /dev/tty.usbmodem14221 57600", 
            "title": "2. \u8fde\u63a5\u5230\u4e32\u884c\u63a7\u5236\u53f0"
        }, 
        {
            "location": "/Respeaker_Core/#3-wi-fi", 
            "text": "ReSpeaker\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a\u4e2d\u7ee7\u6a21\u5f0f\uff0c\u60a8\u5fc5\u987b\u5c06\u5176\u8fde\u63a5\u5230\u73b0\u6709\u7684\u65e0\u7ebfwifi\u7f51\u7edc\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528Internet\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\u3002  \u5f53\u60a8\u9996\u6b21\u63a5\u901aReSpeaker\u7535\u6e90\u65f6\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201cReSpeakerXXXXXX\u201d\u7684Wi-Fi\u7f51\u7edc\u3002\u8fd9\u91cc\u201cXXXXXX\u201d\u662f\u60a8\u7684ReSpeaker MAC\u5730\u5740\u7684\u6700\u540e6\u4f4d\u3002\u5c06\u60a8\u7684\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\u3002    Note  \u5982\u679c\u201cReSpeakerXXXXXX\u201d\u672a\u51fa\u73b0\uff0c\u4f46\u627e\u5230\u201cLinkIt_Smart_7688_XXXXXX\u201d\u3002\u8bf7\u70b9\u51fb  \u8fd9\u91cc .   \u83b7\u53d6IP\u5730\u5740\u540e\uff0c\u6253\u5f00Web\u6d4f\u89c8\u5668\uff0c\u7136\u540e\u5728\u5730\u5740\u680f\u4e2d\u8f93\u5165192.168.100.1\u3002\u51e0\u79d2\u949f\u540e\uff0c\u4f1a\u51fa\u73b0\u4e0b\u56fe\u6240\u793a\u7f51\u9875\uff0c\u9700\u8981\u60a8\u8f93\u5165\u73b0\u6709Wi-Fi\u7f51\u7edc\u7684ssid\u548c\u5bc6\u7801\u3002   \u9009\u62e9\u8981\u8fde\u63a5\u7684Wi-Fi\u5e76\u8f93\u5165\u5bc6\u7801\u3002\u5f53\u60a8\u6309OK\u6309\u94ae\u65f6\uff0cReSpeaker\u5c06\u52a0\u5165\u6307\u5b9a\u7684\u7f51\u7edc\u3002  \u73b0\u5728\u60a8\u7684ReSpeaker\u80fd\u591f\u8bbf\u95ee\u4e92\u8054\u7f51\u3002  \u5982\u679c\u60a8\u6ca1\u6709\u5f39\u51fawifi\u767b\u9646\u9875\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528putty\u4e32\u53e3\u6a21\u5f0f\u4e0b\u8fde\u63a5Respeaker_Core, \u5e76\u4e14\u5728putty\u4e2d\u4f7f\u7528wictl\u626b\u63cfwifi\u5e76\u8fde\u63a5  root@mylinkit:~# wictl\n0, SEEED-MKT\n1, Xiaomi_Youth\n2, ChinaNet-Z5C4\n3, STU-EE\n4, EMBEST_WIFI\n5, SEEED-MKT\n6, nobody\n7, SEEED-MKT\n8, se.VPN\n9, Moovent_HK_2G\n10, LinkIt_Smart_7688_1D917A\n11, SEEED-MKT\n12, SEEED-MKT\n13, zhongrixing\nPlease choose your wifi: 8\nPlease input the wifi password: 88888888\nudhcpc (v1.23.2) started\nSending discover...\nSending discover...\nSending select for 192.168.199.153...\nLease of 192.168.199.153 obtained, lease time 43200\nudhcpc: ifconfig apcli0 192.168.199.153 netmask 255.255.255.0 broadcast 192.168.199.255\nudhcpc: setting default routers: 192.168.199.1\nsuccess\nroot@mylinkit:~#  !!!\u6ce8\u610f\n    \u5982\u679c\u60a8\u65e0\u6cd5\u4f7f\u7528\u4e0a\u8ff0\u65b9\u6cd5\u8fde\u63a5Wifi\uff0c\u8bf7\u901a\u8fc7\u8f93\u5165firstboot\u547d\u4ee4\u8fdb\u884c\u51fa\u5382\u8bbe\u7f6e\u3002  \u542f\u7528Wifi\u529f\u80fd\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528SSH\u6a21\u5f0f\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5Respeaker\u3002\u6211\u4eec\u53ef\u4ee5\u4ecehttp://192.168.100.1/#!/overview WAN IP\u83b7\u53d6Respeaker IP\u5730\u5740\u3002\u5bc6\u7801\u662froot\u3002  ssh root@ssh *.*.*.*", 
            "title": "3. \u8bbe\u7f6e Wi-Fi"
        }, 
        {
            "location": "/Respeaker_Core/#4-sd", 
            "text": "\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5d4c\u5165\u5f0f\u8bbe\u5907\u53ef\u4ee5\u4f7f\u7528\u6709\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff08ReSpeaker\u4ec5\u4e3a\u7528\u6237\u63d0\u4f9b\u4e865M\u7684\u677f\u8f7dFlash\u5b58\u50a8\u7a7a\u95f4\uff09\u3002\u4e3a\u5e94\u7528\u6216\u8005\u6570\u636e\u63d0\u4f9b\u66f4\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u6fc0\u53d1ReSpeaker\u7684\u6f5c\u529b\uff0c\u6240\u4ee5\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u4f5c\u4e3aextroot\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u8fd8\u4e0d\u9519\u7684\u9009\u62e9\u54df\u3002  \u901a\u8fc7\u4f7f\u7528extroot\uff0c\u6dfb\u52a0\u5916\u90e8SD\u5361\u5b58\u50a8\u8bbe\u5907\u6765\u5b9e\u73b0\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u5b58\u50a8\u5bb9\u91cf\u7684\u6269\u5c55\u3002\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u5916\u90e8\u5b58\u50a8\u7a7a\u95f4\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\u542f\u52a8\uff0c\u6216\u8005\u4ee5\u539f\u59cb\u6587\u4ef6\u7cfb\u7edf\u7684\u8986\u76d6\u914d\u7f6e\u8fdb\u884c\u542f\u52a8\u3002   \u786e\u4fdd\u60a8\u7684SD\u5361\u5df2\u63d2\u5165ReSpeaker\uff0c\u5e76\u4e14/ dev / mmcblk0p1\u53ef\u4ee5\u901a\u8fc7df -h\u6216ls / dev\u8fdb\u884c\u68c0\u6d4b\u3002   root@ReSpeaker:/# df -h\nFilesystem                Size      Used Available Use% Mounted on\nrootfs                    1.8M    832.0K    960.0K  46% /\n/dev/root                29.0M     29.0M         0 100% /rom\ntmpfs                    61.7M    276.0K     61.5M   0% /tmp\n/dev/mtdblock6            1.8M    832.0K    960.0K  46% /overlay\noverlayfs:/overlay        1.8M    832.0K    960.0K  46% /\ntmpfs                   512.0K         0    512.0K   0% /dev\n/dev/mmcblk0p1            7.4G      2.5M      7.4G   0% /tmp/run/mountd/mmcblk0p1   \u5c06SD\u5361\u683c\u5f0f\u5316\u4e3a\u4e24\u4e2a\u5206\u533a\uff0c\u4e00\u4e2a\u662fFAT32\uff0c\u53e6\u4e00\u4e2a\u662fEXT4\u3002EXT4\u6587\u4ef6\u7cfb\u7edf\u5c06\u4f5c\u4e3a\u4e00\u4e2a\u5916\u63a5\u7a0b\u5e8f\uff0c\u800cFAT32\u5c06\u4f5c\u4e3a\u6b63\u5e38\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u53ef\u4ee5\u5728ReSpeaker\u548cPC\u4e4b\u95f4\u4f20\u8f93\u6587\u4ef6\u3002       umount /dev/mmcblk0p1\n    fdisk /dev/mmcblk0\n     ------------------ fdisk ------------------------\n     Command (m for help):o\n     Created a new DOS disklabel\n     Command (m for help):n\n     Partition type\n    p   primary (0 primary, 0 extended, 4 free)\n    e   extended (container for logical partitions)\n     Select (default p):p\n     Partition number (1-4, default 1):1\n     First sector (2048-15523839, default 2048):\n     Last sector, +sectors or +size{K,M,G,T,P} (2048-15523839, default 15523839): +2G\n     Command (m for help):n\n     Partition type\n    p   primary (1 primary, 0 extended, 3 free)\n    e   extended (container for logical partitions)\n     Select (default p):p\n     Partition number (1-4, default 2):2\n     First sector (4196352-15523839, default 4196352):\n     Last sector, +sectors or +size{K,M,G,T,P} (4196352-15523839, default 15523839):\n     Command (m for help):w\n     The partition table has been altered.\n     Calling i[  292.010000]  mmcblk0: p1 p2\n     octl() to re-read partition table.\n     Syncing disks.\n     ------------------ end ------------------------\n\n    mkfs.fat /dev/mmcblk0p1\n    mkfs.ext4 /dev/mmcblk0p2\n\n    # reload mtk_sd kernel module\n    rmmod mtk_sd\n    insmod mtk_sd   \u51c6\u5907\u60a8\u7684\u5916\u90e8\u5b58\u50a8root overlay\u3002   mount /dev/mmcblk0p2 /mnt ; tar -C /overlay -cvf - . | tar -C /mnt -xf - ; umount /mnt   \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efafstab\u3002\u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u542f\u7528\u6240\u6709\u5206\u533a\u5e76\u5c06'/ mnt / mmcblk0p2'\u5206\u533a\u8bbe\u7f6e\u4e3a'/ overlay'\u5206\u533a\u7684fstab\u6a21\u677f       block detect   /etc/config/fstab;\n    sed -i s/option$ \\t enabled$ \\t \\ 0\\ /option$ \\t enabled$ \\t \\ 1\\ / /etc/config/fstab;\n    sed -i s#/mnt/mmcblk0p2#/overlay# /etc/config/fstab;\n    cat /etc/config/fstab;   \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u5230 overlay.       root@mylinkit:/# mount /dev/mmcblk0p2 /overlay/\n    root@ReSpeaker:/# df -h\n  Filesystem                Size      Used Available Use% Mounted on\n  rootfs                    1.8M    832.0K    960.0K  46% /\n  /dev/root                29.0M     29.0M         0 100% /rom\n  tmpfs                    61.7M    276.0K     61.5M   0% /tmp\n  /dev/mtdblock6            5.2G     11.8M      4.9G   0% /overlay\n  overlayfs:/overlay        1.8M    832.0K    960.0K  46% /\n  tmpfs                   512.0K         0    512.0K   0% /dev\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /tmp/run/mountd/mmcblk0p2\n  /dev/mmcblk0p1            2.0G      4.0K      2.0G   0% /tmp/run/mountd/mmcblk0p1\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /overlay   \u91cd\u542fReSpeaker\u5e76\u91cd\u65b0\u68c0\u67e5\u3002\u5982\u679cSD\u5361\u81ea\u52a8\u5b89\u88c5\uff0c\u5c31\u5b8c\u6210\u4e86\u3002\u66f4\u591a\u5173\u4e8eextroot\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "4. \u4f7f\u7528SD\u5361\u6765\u6269\u5c55\u5b58\u50a8"
        }, 
        {
            "location": "/Respeaker_Core/#5-respeaker", 
            "text": "\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u540e\uff0c\u6709\u8db3\u591f\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6\u3002  \u5b89\u88c5git      opkg update\n    opkg install git git-http", 
            "title": "5. \u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6"
        }, 
        {
            "location": "/Respeaker_Core/#6-python", 
            "text": "git clone https://github.com/respeaker/respeaker_python_library.git\ncd respeaker_python_library\npython setup.py install", 
            "title": "6. \u66f4\u65b0 Python \u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-respeaker-play-music", 
            "text": "\u4f7f\u7528Bing Speech API\uff0cReSpeaker\u53ef\u4ee5\u5b9e\u65f6\u6253\u5f00\u5e76\u8bc6\u522b\u6765\u81ea\u9ea6\u514b\u98ce\u7684\u97f3\u9891\uff0c\u6216\u4ece\u6587\u4ef6\u8bc6\u522b\u97f3\u9891\u3002  \u8981\u4f7f\u7528Bing Speech API\uff0c\u9996\u5148\u5fc5\u987b\u4ece  \u8fd9\u91cc  \u83b7\u53d6Microsoft Cognitive Services\u7684\u5bc6\u94a5\uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230BING_KEY =\u201c'\uff0c\u7136\u540e\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4fdd\u5b58\u5728playmusic.py\u4e2d\u5e76\u8fd0\u884c  //stop mopidy and alexa to avoid USB device occupation\n/etc/init.d/mopidy stop\n/etc/init.d/alexa stop\npython playmusic.py   import logging\nimport time\nimport os\nfrom threading import Thread, Event\nfrom respeaker import Microphone\nfrom respeaker.bing_speech_api import BingSpeechAPI\n\n# use madplay to play mp3 file     \nos.system( madplay )               \n\n# get a key from https://www.microsoft.com/cognitive-services/en-us/speech-api\nBING_KEY =        \n\n\ndef task(quit_event):                                                         \n    mic = Microphone(quit_event=quit_event)                                   \n    bing = BingSpeechAPI(key=BING_KEY)                                        \n\n    while not quit_event.is_set():\n        if mic.wakeup( respeaker ):        \n            print( Wake up )               \n            data = mic.listen()            \n            try:                      \n                text = bing.recognize(data)\n                if text:           \n                    print( Recognized %s  % text)\n                    if  play music  in text:\n                        print( I will play music! )\n                        os.system( madplay Tchaikovsky_Concerto_No.1p.mp3 )\n            except Exception as e:               \n                print(e.message)                 \n\ndef main():                                                              \n    logging.basicConfig(level=logging.DEBUG)                                                           \n    quit_event = Event()        \n    thread = Thread(target=task, args=(quit_event,))\n    thread.start()                          \n    while True:                             \n        try:                                \n            time.sleep(1)                           \n        except KeyboardInterrupt:                   \n            print( Quit )                           \n            quit_event.set()\n            break        \n    thread.join()                \n\nif __name__ ==  __main__ :       \n    main()                    \u5728\"INFO:mic:Start Detecting\" \u51fa\u6765\u4e4b\u540e\uff0c\u5c1d\u8bd5\u8bf4\u201cReSpeaker\u201d\u5524\u9192\u7a0b\u5e8f\uff0c\u5524\u9192\u540e\u8bf4\u201cplaymusic\u201d\u8ba9\u5b83\u64ad\u653e\u97f3\u4e50\u3002\u7136\u540eReSpeaker\u5c06\u4f7f\u7528madplay\u5de5\u5177\u5728\u5f53\u524d\u8def\u5f84\u4e2d\u64ad\u653e\u201cTchaikovsky_Concerto_No.1p.mp3\u201d   \u5982\u679c\u60a8\u770b\u5230\u4ee5\u4e0b\u9519\u8bef\u4ee3\u7801\uff0c\u90a3\u4e48mopidy\u6b63\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u5360\u7528USB\u8bbe\u5907\u3002\u6240\u4ee5\u5c1d\u8bd5\u8fd0\u884c /etc/init.d/mopidy\uff0c\u505c\u6b62mopidy\uff0c\u7136\u540e\u518d\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4\u3002  root@ReSpeaker:~# python playmusic.py\nUsage: madplay [OPTIONS] FILE [...]\nTry `madplay --help  for more information.\nException in thread Thread-2:\nTraceback (most recent call last):\nFile  /usr/lib/python2.7/threading.py , line 810, in __bootstrap_inner", 
            "title": "\u4e0eRespeaker\u7684\u7b2c\u4e00\u6b21\u4e92\u52a8 - ReSpeaker, play music!"
        }, 
        {
            "location": "/Respeaker_Core/#_6", 
            "text": "", 
            "title": "\u5e94\u7528\u5b9e\u4f8b"
        }, 
        {
            "location": "/Respeaker_Core/#_7", 
            "text": "ReSpeaker\u63a7\u5236\u6a21\u5757\u662f\u57fa\u4e8eATmega32u4\u82af\u7247\uff0c\u8be5\u82af\u7247\u5b8c\u5168\u517c\u5bb9Arduino\u9a71\u52a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ReSpeaker\u4f5c\u4e3a\u5f3a\u5927\u7684Arduino\u5b66\u4e60\u677f\uff0c\u5e76\u505a\u4e86\u8bb8\u591a\u201cArduino\u201d\u5f00\u53d1\u677f\u80fd\u505a\u7684\u4e8b\u60c5\u3002  \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Arduino IDE\u5bf9\u5176\u8fdb\u884c\u7f16\u7a0b\uff0c\u6765\u5b9e\u73b0\u521b\u610fDIY\u94a2\u7434\uff0c\u8be5\u94a2\u7434\u642d\u914d8\u4e2a\u6a31\u6843\u897f\u7ea2\u67ff\u8fde\u63a5\u5230ReSpeaker\u76848\u4e2a\u89e6\u6478\u4f20\u611f\u5668\u3002      \u5728respeaker\u4e0a\u8f93\u5165 git clone  https://github.com/respeaker/piano.git       \u4e0b\u8f7d\u5e93      \u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e2d\u4e0b\u8f7d ReSpeaker Arduino Library      \u4e0a\u4f20piano.ino\u5230ReSpeaker\u7684Arduino Leonardo\uff08ATmega32U4\uff09      \u5728ReSpeaker\u7684\u4e32\u884c\u63a7\u5236\u53f0\u4e0a\u8fd0\u884cpython piano.py", 
            "title": "\u6c34\u679c\u94a2\u7434"
        }, 
        {
            "location": "/Respeaker_Core/#_8", 
            "text": "\u5929\u6c14\u4e91\u662f\u5f88\u68d2\u7684\u4e00\u4e2aReSpeaker\u9879\u76ee\u3002\u8fd9\u4e2a\u5f88\u9177\u7684\u521b\u610f\u5c06ReSpeaker\u53d8\u6210\u4e86\u4e00\u4e2a\u5929\u6c14\u4e91\uff0c\u5b83\u80fd\u591f\u663e\u793a\u51fa\u751f\u52a8\u7684\u5149\u7ebf\u548c\u58f0\u97f3\u3002  \u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0cOpenwrt\u8d1f\u8d23\u4ece\u4e92\u8054\u7f51\u83b7\u53d6\u5b9e\u65f6\u5929\u6c14\u4fe1\u606f\uff0c\u8fdb\u884c\u8bed\u97f3\u4ea4\u4e92\u548c\u97f3\u9891\u8f93\u51fa\uff0c\u800cArduino\u8d1f\u8d23\u63a7\u5236\u5f69\u8272RGB LED\u3002   \u5728respeaker\u4e0a\u8f93\u5165 git clone  https://github.com/jerryyip/WeatherCloud.git , \u4e0b\u8f7d\u9879\u76ee\u5e93\u6587\u4ef6\u3002  \u70b9\u51fb\u4e0b\u8f7d  ReSpeaker Arduino Library  \u5230\u60a8\u7684\u7535\u8111\u4e0a\uff0c\u5e76\u5b89\u88c5\u3002  \u901a\u8fc7Arduino IDE\u5c06  pixels_pattern.ino  \u4e0a\u4f20\u5230respeaker\u3002   \u4ece\u8fd9\u91cc\u83b7\u53d6OpenWeatherMap appid \uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230main.py\u4e2d\u7684appID =\u201c\u201d\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u60a8\u7684\u57ce\u5e02\u6dfb\u52a0\u5230city =\u201c\u201d    \u5728\u4f7f\u7528SPI\u4e4b\u524d\u8bf7\u7ec8\u6b62mopidy service\u5728OpenWrt\u4e2d\u7684\u8fdb\u7a0b\uff0crespeaker\u5728\u63a7\u5236\u53f0\u4e0a\u952e\u5165\n/etc/init.d/mopidy stop   \u8fd0\u884cpython main.py \u7136\u540e\u5bf9\u7740\u5b83\u558a \"ReSpeaker, what is the weather like?\"  \u6709\u5173\u5982\u4f55\u5236\u4f5c\u5929\u6c14\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "\u5929\u6c14\u4e91"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-mic-arrayrespeaker", 
            "text": "", 
            "title": "ReSpeaker Mic Array\uff08ReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\uff09"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-mic-array", 
            "text": "ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73", 
            "title": "ReSpeaker Mic Array"
        }, 
        {
            "location": "/Respeaker_Core/#_9", 
            "text": "\u60a8\u53ef\u9875\u9762\u4ee5\u70b9\u51fb\u4e0b\u5217\u6807\u9898\u6765\u8df3\u8f6c\u5230\u5bf9\u5e94", 
            "title": "\u5173\u4e8e\u8f6f\u4ef6"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-arduino", 
            "text": "ReSpeaker Arudino\u5e93\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a   \u652f\u6301\u7535\u5bb9\u5f0f\u89e6\u6478\u611f\u5e94  \u5b9e\u73b0\u4e86WS2812 RGB LED\u9a71\u52a8  \u6784\u5efa\u4e86\u4eceArduino (ATmega32U4)\u5230\u57fa\u4e8eLinux\u7684OpenWrt (MT7688)\u4e4b\u95f4\u7684USB\u5230\u4e32\u53e3\u548cUSB\u5230SPI\u901a\u9053\u3002", 
            "title": "ReSpeaker Arduino \u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-python", 
            "text": "ReSpeaker\u662f\u4e00\u4e2a\u652f\u6301\u8bed\u97f3\u4ea4\u4e92\u7684\u5f00\u653e\u9879\u76ee\u3002ReSpeaker python\u5e93\u662f\u4e00\u4e2a\u5f00\u6e90\u7684python\u5e93\uff0c\u7528\u4e8e\u63d0\u4f9b\u8bed\u97f3\u4ea4\u4e92\u7684\u57fa\u672c\u529f\u80fd\u3002\n\u5b83\u4f7f\u7528PocketSphinx\u8fdb\u884c\u5173\u952e\u5b57\u67e5\u627e\uff0c\u5e76\u4f7f\u7528webrtcvad\u8fdb\u884c\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b\u3002", 
            "title": "ReSpeaker Python \u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#github", 
            "text": "", 
            "title": "\u66f4\u591a\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc\u67e5\u770b\u6211\u4eec\u7684github\u8d44\u6599\u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#faq", 
            "text": "", 
            "title": "FAQ"
        }, 
        {
            "location": "/Respeaker_Core/#q1", 
            "text": "\u6253\u5f00\u4e32\u884c\u63a7\u5236\u53f0\u6216ssh\u4f1a\u8bdd\u5e76\u8fd0\u884c firstboot.  \u66f4\u591a\u7ec6\u8282\u70b9\u51fb\u8fd9\u91cc .", 
            "title": "Q1: \u5982\u4f55\u6062\u590d\u51fa\u5382\u8bbe\u7f6e?"
        }, 
        {
            "location": "/Respeaker_Core/#q2", 
            "text": "\u5347\u7ea7\u5931\u8d25\u540e\uff0c\u5f53\u91cd\u65b0\u542f\u52a8\u8fdb\u5165openwrt\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u7ec8\u7aef\uff0cssh\u6216\u4e32\u884c\u63a7\u5236\u53f0\u8bbf\u95ee\u7cfb\u7edf\u3002\u6211\u4eec\u53ef\u4ee5\u6309\u7167   Rescue instruction  \u6307\u4ee4\u8fdb\u884c\u6062\u590d\u3002", 
            "title": "Q2: \u5982\u679c\u5347\u7ea7\u5931\u8d25\u4e86\uff0c\u600e\u4e48\u62a2\u6551?"
        }, 
        {
            "location": "/Respeaker_Core/#q3-respeakerwi-fi", 
            "text": "\u8bf7\u5148\u5c1d\u8bd5  \u6062\u590d\u51fa\u5382\u8bbe\u7f6e  \u3002  ReSpeaker\u4e0d\u652f\u6301Wi-Fi\u9891\u905312\u3002\u786e\u4fdd\u60a8\u7684\u8def\u7531\u5668\u6ca1\u6709\u4f7f\u7528\u8be5\u901a\u9053\u3002.", 
            "title": "Q3: ReSpeaker\u627e\u4e0d\u5230\u6211\u7684Wi-Fi"
        }, 
        {
            "location": "/Respeaker_Core/#q4-wifi", 
            "text": "\u6211\u4eec\u5efa\u8bae\u60a8\u901a\u8fc7 WEB-UI \u914d\u7f6eWi-Fi \uff0c\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\uff0c\u8bf7\u5728\u63a7\u5236\u53f0\u4e0a\u5c1d\u8bd5\u547d\u4ee4\u884c\u5de5\u5177 wictl  \u3002", 
            "title": "Q4: \u5982\u4f55\u8fdb\u884cWifi\u914d\u7f6e"
        }, 
        {
            "location": "/Respeaker_Core/#q5-bing-speech-api", 
            "text": "\u5982\u679c\u60a8\u4e0d\u9700\u8981\u66f4\u6539\u5524\u9192\u5b57\uff0c\u53ea\u9700\u5c06text = bing.recognize\uff08data\uff09\u66f4\u6539\u4e3atext = bing.recognize\uff08data\uff0clanguage =\u201czh-CN\u201d\uff09\u5c31\u53ef\u4ee5\u4e86\u3002  \u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc .", 
            "title": "Q5: \u5982\u4f55\u6539\u53d8BING Speech api \u7684\u8bc6\u522b\u8bed\u8a00"
        }, 
        {
            "location": "/Respeaker_Core/#q6-sdfsck", 
            "text": "\u5982\u679cSD\u5361\u4e0a\u7684\u6587\u4ef6\u6b63\u5e38\uff0c\u8bf7\u5ffd\u7565\u5b83\u3002\u5426\u5219\uff0c\u5c1d\u8bd5\u4f7f\u7528 sd\u5361\u683c\u5f0f\u5316\u7a0b\u5e8f\u8fdb\u884c\u683c\u5f0f\u5316 .", 
            "title": "Q6: \u6536\u5230SD\u5361\u8b66\u544a\u6d88\u606f\u201c\u5377\u672a\u6b63\u786e\u5378\u8f7d\u3002\u67d0\u4e9b\u6570\u636e\u53ef\u80fd\u5df2\u635f\u574f\u3002\u8bf7\u8fd0\u884cfsck\u201d"
        }, 
        {
            "location": "/Respeaker_Core/#q7-bad-flash-from-arduino", 
            "text": "\u6309\u7167\u4e0b\u9762\u4ee3\u7801\uff0c\u5728openwrt\u4e2d\u91cd\u65b0\u70e7\u5199 bootloade\u3002   /etc/init.d/mopidy stop  # stop mopidy if it s running, mopidy-hallo plugin will use SPI\n/etc/init.d/alexa stop      # stop alexa if it s running\nmt7688_pinmux set ephy gpio\ncd /etc/arduino\navrdude -c linuxgpio -p m32u4 -e -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xCB:m  -U flash:w:Caterina-ReSpeaker.hex -u -U lock:w:0xEF:m", 
            "title": "Q7: \u9519\u8bef\u63d0\u793a \u201cBad flash from Arduino\u201d"
        }, 
        {
            "location": "/Respeaker_Core/#q8-webui", 
            "text": "\u91cd\u7f6e juci \u5bc6\u7801   orangectl passwd root 12345678  //replace 12345678 with the password you want to set", 
            "title": "Q8: \u5fd8\u8bb0\u4e86WebUI\u7684\u5bc6\u7801"
        }, 
        {
            "location": "/Respeaker_Core/#q9-speach-to-textstt", 
            "text": "\u6309\u7167 \u6307\u5357 \u5b89\u88c5speech_recognition\u5e93", 
            "title": "Q9: \u5982\u4f55\u652f\u6301\u8c37\u6b4c\u8bed\u97f3\u6216\u5176\u4ed6Speach to Text\uff08STT\uff09\u5f15\u64ce?"
        }, 
        {
            "location": "/Respeaker_Core/#q10-alexa-ioerror-errno-9998-invalid-number-of-channels", 
            "text": "\u8fd8\u6709\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6216alexa\u5b9e\u4f8b\u4f7f\u7528\u97f3\u9891\u8f93\u5165\u8bbe\u5907\u3002\u8fd0\u884c/etc/init.d/alexa stop\u548c/etc/init.d/mopidy stop \u505c\u6b62\u5b83\u4eec\u3002\u8981\u7981\u7528mopidy\u542f\u52a8\uff0c\u8bf7\u8fd0\u884c/etc/init.d/mopidy disable\u3002", 
            "title": "Q10: \u8fd0\u884cAlexa \u9519\u8bef\uff0c\u63d0\u793a\"IOError: [Errno -9998] Invalid number of channels\""
        }, 
        {
            "location": "/Respeaker_Core/#q11-python-playmusicpy", 
            "text": "\u5e94\u8be5\u662fmopidy\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u4f7f\u7528USB\u8bbe\u5907\u3002\u5c1d\u8bd5\u8fd0\u884c/etc/init.d/mopidy stop, \u505c\u6b62mopidy\u5e76\u518d\u6b21\u8fd0\u884c\u60a8\u7684\u547d\u4ee4\u3002", 
            "title": "Q11: \u65e0\u6cd5\u8fd0\u884cpython playmusic.py"
        }, 
        {
            "location": "/Respeaker_Core/#q12-rpc", 
            "text": "\u60a8\u9700\u8981\u91cd\u65b0\u5237\u56fa\u4ef6\uff0c\u70b9\u51fb\u67e5\u770b  \u6307\u5357", 
            "title": "Q12: \u6ca1\u6709RPC\u8fde\u63a5"
        }, 
        {
            "location": "/Respeaker_Core/#q13-sftp-ftp", 
            "text": "\u6211\u4eec\u6ca1\u6709FTP\uff0c\u53ea\u6709SFTP\u3002", 
            "title": "Q13: SFTP &amp; FTP"
        }, 
        {
            "location": "/Respeaker_Core/#q14", 
            "text": "\u5c1d\u8bd5\u66f4\u65b0  arduino code \u3002", 
            "title": "Q14: \u4e32\u53e3\u63a7\u5236\u53f0\u88ab\u9501\u5b9a"
        }, 
        {
            "location": "/Respeaker_Core/#q15ap", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u5728vi / etc / config / wireless \u4e2d\u4fee\u6539\u5982\u4e0b 'ssid' flag of the 'ap' interface to '' \u3002\u4e5f\u5c31\u662f\u5c06'ap'\u6539\u4e3a''\u3002\u7136\u540e\u5c31\u4f1a\u9690\u85cfap\u3002", 
            "title": "Q15:\u5982\u4f55\u7981\u7528'ap'\u6a21\u5f0f"
        }, 
        {
            "location": "/Respeaker_Core/#q16-i2c", 
            "text": "\u6211\u4eec\u9700\u8981\u68c0\u67e5\u7f16\u89e3\u7801\u5668\u9a71\u52a8\u7a0b\u5e8f\u517c\u5bb9\u540d\u4ee5\u53ca\u7f16\u89e3\u7801\u5668i2c\u5730\u5740 \u7136\u540e\u91cd\u5efaimage\u56fa\u4ef6\u3002", 
            "title": "Q16: I2C\u58f0\u5361\u95ee\u9898"
        }, 
        {
            "location": "/Respeaker_Core/#q17-respeaker", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0keyword.txt\u4e2d\u7684\u9608\u503c\u6765\u51cf\u5c11\u8bef\u8bc6\u522b\u7387\uff0c\u4f46\u4e5f\u4f1a\u964d\u4f4e\u654f\u611f\u5ea6\u3002  \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u60a8\u7684\u58f0\u97f3\u4e0e\u5f53\u524d\u7684\u58f0\u5b66\u6a21\u5757\u8fdb\u884c\u5339\u914d\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u53c2\u8003\u8fd9\u91cc  http://cmusphinx.sourceforge.net/wiki/tutorialadapt \u3002  \u8fd9\u79cd\u65b9\u6cd5\u5c06\u6709\u6548\u63d0\u9ad8\u4e2a\u4eba\u5173\u952e\u5b57\u8bc6\u522b\u7387\uff0c\u4f46\u53ef\u80fd\u8ba9\u5176\u4ed6\u4eba\u4e0d\u88ab\u8bc6\u522b\u3002", 
            "title": "Q17: \u5373\u4f7f\u6ca1\u6709\u58f0\u97f3\uff0cRespeaker\u4e5f\u7ecf\u5e38\u88ab\u5524\u9192"
        }, 
        {
            "location": "/Respeaker_Core/#q18-respeakergpio", 
            "text": "\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u91cc\u7684\u4ee3\u7801  https://github.com/respeaker/respeaker_python_library/blob/master/respeaker/gpio.py  \u4ee5\u53ca\u7528\u8fd9\u91cc\u7684\u4f8b\u7a0b\u6765\u901a\u8fc7GPIO\u6a21\u62dfSPI  https://github.com/respeaker/respeaker_python_library/blob/master/respeaker/spi.py", 
            "title": "Q18: \u5982\u4f55\u63a7\u5236Respeaker\u7684GPIO\u5f15\u811a\uff1f"
        }, 
        {
            "location": "/Respeaker_Core/#q19", 
            "text": "\u5728respeaker\u7684 /usr/lib/python2.7/site-packages/respeaker-0.6.0-py2.7.egg/respeaker/pocketsphinx-data  \u76ee\u5f55\u4e0b\u627e\u5230\u5e76\u6253\u5f00 keywords.txt  respeaker /1e-30/\nalexa /1e-30/\nplay music /1e-40/  respeaker \u662f\u5173\u952e\u8bcd, 1e-30 \u662f\u5176\u9608\u503c\u3002\u4e3a\u4e86\u63d0\u9ad8\u654f\u611f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u964d\u4f4e\u9608\u503c\uff0c\u4f8b\u59821e-20\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u63d0\u9ad8\u7075\u654f\u5ea6\u800c\u964d\u4f4e\u9608\u503c\u540c\u65f6\u4f1a\u589e\u52a0\u9519\u8bef\u63a5\u53d7\u7387\u3002    \u5982\u679c\u8981\u6dfb\u52a0\u65b0\u7684\u5173\u952e\u5b57\uff0c\u5e94\u8be5\u9996\u5148\u5c06\u5173\u952e\u5b57\u6dfb\u52a0\u5230  dictionary.txt  \u3002dictionary.txt \u91cc\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a  ```\nrespeaker   R IY S P IY K ER\nalexa   AH L EH K S AH\nplay    P L EY\nmusic   M Y UW Z IH K\n```\n\n\u6bcf\u884c\u7684\u7b2c\u4e00\u90e8\u5206\u662f\u5173\u952e\u8bcd\u7684\u540d\u5b57 (respeaker, alexa or music), \u7b2c\u4e8c\u90e8\u5206\u662f\u5b83\u7684\u97f3\u7d20\u3002\u4f60\u53ef\u4ee5\u5728 [\u8fd9\u91cc](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt) \u7684\u5b57\u5178\u4e2d\u627e\u5230\u5355\u8bcd\u3002    \u7136\u540e\u66f4\u6539\u4ee3\u7801\uff1a .  if mic.wakeup( respeaker ):    \u5c0f\u7ed3:\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u6309\u7167\u4e0b\u9762\u76843\u6b65\u3002\u6bd4\u5982\u6dfb\u52a0good morning    -  1\u3001\u5728[\u5b98\u65b9\u5b57\u5178](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt)\u4e2d\u67e5\u627e\u5e76\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684\u97f3\u7d20\u3002\n-  2\u3001\u5728keyword.txt\u4e2d\u7ed9 good morning\u8bbe\u7f6e\u4e00\u4e2a\u9608\u503c\n-  3\u3001\u5728\u60a8\u7684python\u4ee3\u7801\u4e2d\u6dfb\u52a0\u8c03\u7528if mic.wakeup( good morning ):", 
            "title": "Q19: \u5982\u4f55\u6539\u53d8\u5524\u9192\u8bcd\uff1f"
        }, 
        {
            "location": "/Respeaker_Core/#q20", 
            "text": "\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u66f4\u65b0\u60a8\u7684ReSpeaker\u6216\u65e0\u6cd5\u8bbf\u95eehttp://192.168.100.1/home.html \uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc  \u3002\u8981\u5c06\u7535\u8111\u4e0a\u6700\u65b0\u7684\u56fa\u4ef6\u4e0b\u8f7d\u5230SD\u5361\u4e0a\uff0c\u5e76\u5c06SD\u5361\u63d2\u5165ReSpeaker\u3002  \u8fde\u63a5\u5230respeaker\u7684  \u4e32\u884c\u63a7\u5236\u53f0  \uff0c\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\u884c\u6765\u66f4\u65b0\u56fa\u4ef6\uff1a  mount /dev/mmcblk0p1 /mnt\ncd /mnt\nsysupgrade -n -F ramips-openwrt-latest-LinkIt7688-squashfs-sysupgrade.bin \nReSpeaker\u5b89\u88c5\u56fa\u4ef6\u548c\u91cd\u542f\u5927\u7ea6\u9700\u89813\u5206\u949f\uff0c\u66f4\u65b0\u65f6**\u8bf7\u52ff\u5173\u95ed** ReSpeaker\u3002", 
            "title": "Q20: \u901a\u8fc7\u51fa\u5382\u56fa\u4ef6\u6062\u590d\u7cfb\u7edf"
        }, 
        {
            "location": "/Respeaker_Core/#_10", 
            "text": "[Eagle\u539f\u7406\u56fe]   ReSpeaker Core v1.0 SCH  [Eagle PCB\u56fe]   ReSpeaker Core v1.0 BRD  [PDF \u539f\u7406\u56fe]   ReSpeaker Core v1.0 Schematic(pdf)  [PDF PCB\u5e95\u677f\u56fe]   ReSpeaker Core v1.0 PCB bottom(pdf)  [PDF PCB\u9876\u677f\u56fe]   ReSpeaker Core v1.0 PCB top(pdf)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Shield/", 
            "text": "\u672c\u8282\u5305\u62ec\u7531Seeed\u521b\u5efa\u7684\u6269\u5c55\u677f\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u6269\u5c55\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nBase_Shield_V2\n\n\nCAN-BUS_Shield_V1.2", 
            "title": "Shield"
        }, 
        {
            "location": "/Shield/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u6269\u5c55\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Base_Shield_V2  CAN-BUS_Shield_V1.2", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Base_Shield_V2/", 
            "text": "\u4f5c\u4e3a\u6269\u5c55\u677f\uff0cBase Shield v2\u6709\u8bb8\u591aGrove\u8fde\u63a5\u63a5\u53e3\uff0c\u65b9\u4fbf\u60a8\u5c06\u591a\u4e2aGrove\u4ea7\u54c1\u4e00\u8d77\u4f7f\u7528\u3002\u5b83\u4e0e\u4e00\u7cfb\u5217Arduino\u4ea7\u54c1\u517c\u5bb9\u3002\n\n\n\n\nNote\n\n\n\n\n\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f \nGrove System\n.\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u7535\u6e90\u517c\u5bb9\uff1a\u6bcf\u4e2aGrove\u8fde\u63a5\u5668\u90fd\u6709\u56db\u6839\u7535\u7ebf\uff0c\u5176\u4e2d\u4e00\u6839\u662fVcc\u3002\u4f46\u662f\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u5fae\u63a7\u5236\u5668\u4e3b\u677f\u90fd\u9700\u89815V\u7684\u7535\u6e90\u7535\u538b\uff0c\u6709\u4e9b\u9700\u89813.3V\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728Base Shield v2\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u7535\u6e90\u5f00\u5173\u3002\u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8be5\u5f00\u5173\u8c03\u8282Vcc\u7684\u7535\u538b\uff0c\u786e\u4fddVcc\u7684\u7535\u538b\u4e0e\u4e3b\u677f\u7684\u7535\u6e90\u76f8\u540c\u3002\n\n\n\u6240\u4ee5\u5728\u4f7f\u7528Arduino UNO\u4e0eBase Shield v2\u65f6\uff0c\u8bf7\u5c06\u5f00\u5173\u8f6c\u52305v\u4f4d\u7f6e; \u5728\u4f7f\u7528\u5e26\u6709Base Shield v2\u7684Seeeduino Arch\u65f6\uff0c\u8bf7\u5c06\u5f00\u5173\u8f6c\u52303.3v\u3002\n\n\n\n\n\n\n\u5f00\u53d1\u677f\u517c\u5bb9\uff1a\u5f15\u811a\u6570\u4e0eArduino UNO R3\u76f8\u540c\u3002\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u5982\u679c\u4f7f\u7528\u5e26\u6709Seeeduino V3\u7684Base Shield v2\uff0c\u8bf7\u710a\u63a5P1\uff0cP2\u3002\n\n\n\n\n\n\nGrove \u8fde\u63a5\u5668: Base Shield v2 \u670916\u4e2aGrove \u8fde\u63a5\u5934.\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nAnalog port\n\n\nA0/A1/A2/A3\n\n\n4\n\n\n\n\n\n\nDigital port\n\n\nD2/D3/D4/D5/D6/D7/D8\n\n\n7\n\n\n\n\n\n\nUART port\n\n\nUART\n\n\n1\n\n\n\n\n\n\n2C port\n\n\nI2C\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8: 2.1 * 2.7 \u82f1\u5bf8\n\n\nLED \u6307\u793a: \u4f9b\u7535\u65f6\u7eff\u8272LED\u6307\u793a\u706f\u4eae\u8d77\u3002\n\n\n\n\n\u517c\u5bb9\u6027\n\n\n\u6211\u4eec\u5df2\u7ecf\u751f\u4ea7\u4e86\u5927\u91cf\u7684\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u7684\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u8fd9\u4e9b\u677f\u4e0e\u5e73\u53f0\u677f\u7684\u517c\u5bb9\u6027\u3002\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0c\u4e0b\u8868\u4e2d\u6807\u8bc6\u7684\"Not recommended\"\u5e76\u4e0d\u4ee3\u8868\u4e00\u5b9a\u5c31\u4e0d\u80fd\u517c\u5bb9\uff0c\u53ef\u80fd\u60a8\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8df3\u7ebf\u3001\u710a\u63a5\u3002\u5982\u6b64\uff0c\u90e8\u5206\u6807\u8bc6\u4e0d\u517c\u5bb9\u7684\u4e5f\u662f\u53ef\u80fd\u6b63\u5e38\u4f7f\u7528\u7684\u3002\u66f4\u591a\u517c\u5bb9\u6027\u4fe1\u606f\u8bf7\u8054\u7cfb\u6211\u4eec\u7684\u6280\u672f\u652f\u6301\n\u3002\n\n\n\n\n\u70b9\u51fb\u67e5\u770b\u5927\u56fe\n\n\n\n\n\u5e94\u7528\n\n\n\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86Grove - LED\u548cGrove - Button\u4e0eBase Shield v2\u3002\u6240\u6709Grove\u4ea7\u54c1\u90fd\u6709Grove\u8fde\u63a5\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165Base Shield\u3002\n\n\n\n\n/*\n The circuit:\n* LED attached from pin 3 to ground\n* Button attached to pin 2 from +5V\n* 10K resistor attached to pin 2 from ground\n* Button Control An LED\n*/\n\nconst int button = 2;       // the Grove port No. you attached a button to\nconst int LED    = 3;       // the Grove port No. you attached an LED to\nvoid setup()\n{\n    pinMode(button, INPUT); //set button as an INPUT device\n    pinMode(LED, OUTPUT);   //set LED as an OUTPUT device\n}\nvoid loop()\n{\n    int btn = digitalRead(button); //read the status of the button\n    digitalWrite(LED, btn);\n    delay(10);\n}\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Easyeda\u539f\u7406\u56fe]\n \nSchematic at Easyeda\n\n\n[Base Shield\u539f\u7406\u56fe]\n \nSchematic of Base Shield v2\n\n\n[Base Shield\u539f\u7406\u56fe pdf\u7248]\n \nSchematics PDF of Base Shield V2", 
            "title": "Base_Shield_V2"
        }, 
        {
            "location": "/Base_Shield_V2/#_1", 
            "text": "\u7535\u6e90\u517c\u5bb9\uff1a\u6bcf\u4e2aGrove\u8fde\u63a5\u5668\u90fd\u6709\u56db\u6839\u7535\u7ebf\uff0c\u5176\u4e2d\u4e00\u6839\u662fVcc\u3002\u4f46\u662f\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u5fae\u63a7\u5236\u5668\u4e3b\u677f\u90fd\u9700\u89815V\u7684\u7535\u6e90\u7535\u538b\uff0c\u6709\u4e9b\u9700\u89813.3V\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728Base Shield v2\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u7535\u6e90\u5f00\u5173\u3002\u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8be5\u5f00\u5173\u8c03\u8282Vcc\u7684\u7535\u538b\uff0c\u786e\u4fddVcc\u7684\u7535\u538b\u4e0e\u4e3b\u677f\u7684\u7535\u6e90\u76f8\u540c\u3002  \u6240\u4ee5\u5728\u4f7f\u7528Arduino UNO\u4e0eBase Shield v2\u65f6\uff0c\u8bf7\u5c06\u5f00\u5173\u8f6c\u52305v\u4f4d\u7f6e; \u5728\u4f7f\u7528\u5e26\u6709Base Shield v2\u7684Seeeduino Arch\u65f6\uff0c\u8bf7\u5c06\u5f00\u5173\u8f6c\u52303.3v\u3002    \u5f00\u53d1\u677f\u517c\u5bb9\uff1a\u5f15\u811a\u6570\u4e0eArduino UNO R3\u76f8\u540c\u3002     Note   \u5982\u679c\u4f7f\u7528\u5e26\u6709Seeeduino V3\u7684Base Shield v2\uff0c\u8bf7\u710a\u63a5P1\uff0cP2\u3002    Grove \u8fde\u63a5\u5668: Base Shield v2 \u670916\u4e2aGrove \u8fde\u63a5\u5934.     \u53c2\u6570  \u540d\u79f0  \u6570\u91cf      Analog port  A0/A1/A2/A3  4    Digital port  D2/D3/D4/D5/D6/D7/D8  7    UART port  UART  1    2C port  I2C  1      \u5c3a\u5bf8: 2.1 * 2.7 \u82f1\u5bf8  LED \u6307\u793a: \u4f9b\u7535\u65f6\u7eff\u8272LED\u6307\u793a\u706f\u4eae\u8d77\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Base_Shield_V2/#_2", 
            "text": "\u6211\u4eec\u5df2\u7ecf\u751f\u4ea7\u4e86\u5927\u91cf\u7684\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u7684\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u8fd9\u4e9b\u677f\u4e0e\u5e73\u53f0\u677f\u7684\u517c\u5bb9\u6027\u3002   Note  \u8bf7\u6ce8\u610f\uff0c\u4e0b\u8868\u4e2d\u6807\u8bc6\u7684\"Not recommended\"\u5e76\u4e0d\u4ee3\u8868\u4e00\u5b9a\u5c31\u4e0d\u80fd\u517c\u5bb9\uff0c\u53ef\u80fd\u60a8\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8df3\u7ebf\u3001\u710a\u63a5\u3002\u5982\u6b64\uff0c\u90e8\u5206\u6807\u8bc6\u4e0d\u517c\u5bb9\u7684\u4e5f\u662f\u53ef\u80fd\u6b63\u5e38\u4f7f\u7528\u7684\u3002\u66f4\u591a\u517c\u5bb9\u6027\u4fe1\u606f\u8bf7\u8054\u7cfb\u6211\u4eec\u7684\u6280\u672f\u652f\u6301 \u3002   \u70b9\u51fb\u67e5\u770b\u5927\u56fe", 
            "title": "\u517c\u5bb9\u6027"
        }, 
        {
            "location": "/Base_Shield_V2/#_3", 
            "text": "\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86Grove - LED\u548cGrove - Button\u4e0eBase Shield v2\u3002\u6240\u6709Grove\u4ea7\u54c1\u90fd\u6709Grove\u8fde\u63a5\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165Base Shield\u3002   /*\n The circuit:\n* LED attached from pin 3 to ground\n* Button attached to pin 2 from +5V\n* 10K resistor attached to pin 2 from ground\n* Button Control An LED\n*/\n\nconst int button = 2;       // the Grove port No. you attached a button to\nconst int LED    = 3;       // the Grove port No. you attached an LED to\nvoid setup()\n{\n    pinMode(button, INPUT); //set button as an INPUT device\n    pinMode(LED, OUTPUT);   //set LED as an OUTPUT device\n}\nvoid loop()\n{\n    int btn = digitalRead(button); //read the status of the button\n    digitalWrite(LED, btn);\n    delay(10);\n}", 
            "title": "\u5e94\u7528"
        }, 
        {
            "location": "/Base_Shield_V2/#_4", 
            "text": "[Easyeda\u539f\u7406\u56fe]   Schematic at Easyeda  [Base Shield\u539f\u7406\u56fe]   Schematic of Base Shield v2  [Base Shield\u539f\u7406\u56fe pdf\u7248]   Schematics PDF of Base Shield V2", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/", 
            "text": "CAN-BUS\n \u662f\u4e00\u79cd\u666e\u901a\u7684\u5de5\u4e1a\u603b\u7ebf\uff0c\u7531\u4e8e\u5176\u957f\u8ddd\u79bb\uff0c\u4e2d\u7b49\u901a\u4fe1\u901f\u5ea6\u548c\u9ad8\u53ef\u9760\u6027\u3002\u5b83\u901a\u5e38\u5728\u73b0\u4ee3\u673a\u5e8a\u4e0a\u5e94\u7528\uff0c\u4f8b\u5982\u6c7d\u8f66\u8bca\u65ad\u603b\u7ebf\u3002\n\n\n\u8be5CAN\u603b\u7ebf\u6269\u5c55\u677f\u91c7\u7528MCP2515 CAN\u603b\u7ebf\u63a7\u5236\u5668\u4e0eSPI\u63a5\u53e3\u548cMCP2551 CAN\u6536\u53d1\u5668\uff0c\u4e3a\u60a8\u63d0\u4f9bArduino / Seeeduino CAN-BUS\u51fd\u6570\u3002\u901a\u8fc7\u6dfb\u52a0OBD-II\u8f6c\u6362\u5668\u7535\u7f06\u5e76\u5bfc\u5165OBD-II\u5e93\uff0c\u5c31\u53ef\u4ee5\u6784\u5efa\u677f\u8f7d\u8bca\u65ad\u8bbe\u5907\u6216\u6570\u636e\u8bb0\u5f55\u5668\u3002\n\n\n\u7248\u672c\n\n\n\u672c\u6587\u6863\u9002\u7528\u4e8e\u4ee5\u4e0b\u7248\u672c\u7684\u4ea7\u54c1\uff1a:\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nCAN BUS Shield V1.0\n\n\nOct 14, 2012\n\n\n \u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nCAN BUS Shield V1.1\n\n\nAug 10, 2013\n\n\n \u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nCAN BUS Shield V1.2\n\n\nJan 5, 2015\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\nCAN BUS Shield V1.2\u7684\u65b0\u7279\u6027\n\n\n\n\n\u5728PCB\u80cc\u9762\u710a\u63a5\n\n\n\u5c06\u7aef\u5b50\u7535\u963b\u66f4\u6539\u4e3a120\u6b27\u59c6\n\n\n\n\n\u5982\u679c\u6211\u60f3\u5c06\u8fd9\u4e2a\u6269\u5c55\u677f\u8fde\u63a5\u5230\u6211\u7684\u8f66\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\n\n\u5982\u679c\u60a8\u60f3\u8981\u8bfb\u53d6\u6570\u636e\u6216\u63a7\u5236\u6c7d\u8f66\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528OBD\n DB9\u7535\u7f06\uff0c\u8be5\u7535\u7f06\u5c06\u8f7b\u677e\u5b8c\u6210OBD\u8fde\u63a5\u5668\u5230DB9\u8fde\u63a5\u5668\u7684\u8f6c\u6362\u3002\u8be5\u7535\u7f06\u4e5f\u53ef\u4ee5\u8fde\u63a5\u5230\u5177\u6709OBD\u8fde\u63a5\u5668\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u6211\u4eec\u5728\u7535\u7f06\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5f00\u5173\uff0c\u65b9\u4fbf\u60a8\u7684\u63a7\u5236\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u6807\u8d2d\u4e70\u8be5\u7535\u7f06\u3002\n\n\n\n\nUSB-CAN\u5206\u6790\u4eea\n\n\n\u5982\u679c\u60a8\u9700\u8981\u4e00\u4e2aCAN\u603b\u7ebf\u5206\u6790\u4eea\u6765\u68c0\u6d4b\u60a8\u7684CAN\u603b\u7ebf\uff0c\u6211\u4eec\u63a8\u8350\u4e0b\u9762\u7684 \nUSB-CAN Analyzer\n \u3002(\u540c\u6837\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u7247\u8d2d\u4e70)\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nCAN V2.0B\u901f\u5ea6\u9ad8\u8fbe1 Mb / s\n\n\nSPI\u63a5\u53e3\u901f\u5ea6\u9ad8\u8fbe10 MHz\n\n\n\u652f\u6301\u6807\u51c6\uff0811\u4f4d\uff09\u548c\u6269\u5c55\uff0829\u4f4d\uff09\u6570\u636e\u4ee5\u53ca\u8fdc\u7a0b\u5e27\n\n\n\u4e24\u4e2a\u5177\u6709\u4f18\u5148\u6d88\u606f\u5b58\u50a8\u7684\u63a5\u6536\u7f13\u51b2\u533a\n\n\n\u5de5\u4e1a\u6807\u51c6DB-9\u8fde\u63a5\u5668\n\n\nLED\u6307\u793a\u706f\n\n\n\n\n\n\nNote\n\n\nCAN BUS \u53ef\u4ee5\u826f\u597d\u5730\u517c\u5bb9Arduino UNO (ATmega328), Arduino Mega (ATmega1280/2560) \u3001 Arduino Leonardo (ATmega32U4).\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\nDB9 Interface\n - to connect to OBDII Interface via a DBG-OBD Cable.\n\n\nV_OBD\n - It gets power from OBDII Interface (from DB9)\n\n\nLed Indicator\n:\n\n\nPWR\n: power\n\n\nTX\n: blink when the data is sending\n\n\nRX\n: blink when there's data receiving\n\n\nINT\n: data interrupt\n\n\n\n\n\n\nTerminal\n - CAN_H and CAN_L\n\n\nArduino UNO pin out\n\n\nSerial Grove connector\n\n\nI2C Grove connector\n\n\nICSP pins\n\n\nIC\n - MCP2551, a high-speed CAN transceiver (\ndatasheet\n)\n\n\nIC\n - MCP2515, stand-alone CAN controller with SPI interface (\ndatasheet\n)\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5f53\u60a8\u5728\u4e00\u4e2a\u7f51\u7edc\u4e2d\u4f7f\u7528\u4e24\u4e2a\u4ee5\u4e0a\u7684CAN\u603b\u7ebf\u6269\u5c55\u677f\u65f6\uff0c\u5e94\u8003\u8651\u963b\u6297\u3002\u60a8\u5e94\u8be5\u7528\u5200\u5207\u5272PCB\u4e2d\u7684P1\uff0c\u6216\u8005\u5e72\u8106\u53d6\u4e0bPCB\u4e0a\u7684R3\u3002\n\n\n\n\n\n\n\u7ba1\u811a\u56fe\n\n\n\n\n\n\nNote\n\n\n\n\n\u7a7a\u95f2\u9488\u53ef\u7528\u4e8e\u5176\u4ed6\u7528\u9014\u3002\n\n\n\n\n\n\nDB9\nOBDii \u63a5\u53e3\n\n\n\n\nCS \u5f15\u811a\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cV1.2\u7684SPI_CS\u5f15\u811a\u8fde\u63a5\u5230D9\u3002\u5982\u679c\u8981\u66f4\u6539\u4e3aD10\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\n\n\n\u6b65\u9aa41\uff1a\u67e5\u770bPCB\u7684\u80cc\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u540d\u4e3aCS\u7684\u710a\u76d8\u3002\n\n\n\n\n\n\n\n\n\u6b65\u9aa42: \u5272\u65ad\u710a\u76d89\u548c\u4e2d\u95f4\u710a\u76d8\u4e4b\u95f4\u7684\u5bfc\u7ebf\n\n\n\n\n\n\n\n\n\u6b65\u9aa43: \u5c06\u4e2d\u95f4\u710a\u76d8\u548c\u710a\u76d810\u710a\u63a5\u5728\u4e00\u8d77\u3002\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002\n\n\n\n\n\n\nSPI \u5f15\u811a\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSPI\u5f15\u811a\uff08SCK\uff0cMISO\uff0cMOSI\uff09\u88ab\u8fde\u63a5\u5230ICSP\u5f15\u811a\u3002\u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u6838\u5fc3\u677f\uff0cSPI\u5f15\u811a\u4f4d\u4e8eD11\u301cD13\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u9700\u8981\u5bf9PCB\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u3002\u770b\u770bPCB\u7684\u80cc\u9762\uff0c\u6709\u4e09\u4e2a\u710a\u76d8\uff0cMOSI\uff0cMISO\u548cSCK\uff0c\u5b83\u4eec\u9ed8\u8ba4\u8fde\u63a5\u5230A\u3002\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u66f4\u6539\u4e3aB\u3002\n\n\n\n\nNote\n\n\n\n\n\u5bf9\u4e8eArduino UNO, Arduino Mega, Arduino Leonardo \u4ee5\u53ca\u4efb\u4f55\u5176\u4ed6\u57fa\u4e8eAVR \u7684Arduino \u6838\u5fc3\u677f, \u6211\u4eec\u63a8\u8350\u521d\u59cb\u8bbe\u7f6e\u3002\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5357\n\n\n\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660eCAN-BUS Shield\u7684\u5de5\u4f5c\u539f\u7406\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u89812\u5757CAN-BUS\u6269\u5c55\u677f\u4ee5\u53caArduino\u6216Seeeduino\u3002\n\n\n\n\nNote\n\n\n\u6b64\u793a\u4f8b\u57fa\u4e8e \nArduino IDE version 1.6.9\n.\n\n\n\n\n\u6b65\u9aa41: \u6211\u4eec\u9700\u8981\u51c6\u5907\u4e9b\u5565\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u529f\u80fd\n\n\n\u6570\u91cf\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nCAN-BUS Shield\n\n\nCAN \u603b\u7ebf\u901a\u4fe1\n\n\n2\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\nSeeeduino V4.2\n\n\n\u63a7\u5236\u5668\n\n\n2\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\u8df3\u7ebf\n\n\n\u8fde\u63a5\n\n\n2\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\u6b65\u9aa42: \u786c\u4ef6\u8fde\u63a5\n\n\n\u5c06\u6bcf\u5757CAN-BUS \u6269\u5c55\u677f\u90fd\u63d2\u5728Seeeduino V4.2\u4e0a\uff0c\u7136\u540e\u5982\u4e0b\u56fe\u6240\u793a\u4f7f\u7528\u4e24\u6839\u8df3\u7ebf\u5c06\u4e24\u5757CAN-BUS \u6269\u5c55\u677f\u8fde\u63a5\u8d77\u6765\u3002\n\n\n\n\n\n\nNote\n\n\n\n\nCAN_H \u8fde\u63a5\u5230 CAN_H, CAN_L \u8fde\u63a5\u5230 CAN_L\n\n\n\n\n\n\n\u6b65\u9aa43: \u8f6f\u4ef6\n\n\n\u8bf7\u9075\u5faa \n\u5982\u4f55\u5b89\u88c5Arduino\u5e93\n \u6765\u5b89\u88c5 CAN BUS shield library.\n\n\n\u70b9\u51fb\u4e0b\u9762\u56fe\u6807\u6765\u4e0b\u8f7dCAN BUS shield library\n\n\n\n\n\u4e0b\u8f7d\u5b8c\u6210\u540e\u5b89\u88c5\u5e93\u6587\u4ef6\u5230\u60a8\u7684Arduino\u3002\n\n\n\u4e00\u4e2a\u8282\u70b9(\u6b64\u5904\u4ee3\u8868Seeeduino + CAN_BUS \u6269\u5c55\u677f) \u4f5c\u4e3a\u4e3b\u673a\uff0c\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u4ece\u673a\u3002 \u4e3b\u673a\u5c06\u6301\u7eed\u5730\u5411\u4ece\u673a\u53d1\u9001\u6570\u636e\u3002\n\n\n\n\nNote\n\n\n\u5728\u4e0a\u4f20\u4ee3\u7801\u524d\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u673a\u3002\n\n\n\n\n\u6253\u5f00\u53d1\u9001\u793a\u4f8b\uff08\u6587\u4ef6\n\u793a\u4f8b\n CAN_BUS_Shield-master\n\u53d1\u9001\uff09\u5e76\u4e0a\u4f20\u5230\u4e3b\u673a\u3002\n\n\n\n\n\u6253\u5f00receive_check\u793a\u4f8b\uff08\u6587\u4ef6\n\u793a\u4f8b\n CAN_BUS_Shield-master\n receive_check\uff09\u5e76\u4e0a\u4f20\u5230\u4ece\u673a\u3002\n\n\n\n\n\u6b65\u9aa44: \u67e5\u770b\u7ed3\u679c\n\n\n\u6253\u5f00Arduino IDE\uff08\u4ece\u673a\uff09\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u5c06\u83b7\u5f97\u4ece\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\u3002\n\n\n\n\nAPIs\n\n\n\n\n1. \u8bbe\u7f6e\u6ce2\u7279\u7387\n\n\n\u8be5\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316CAN\u603b\u7ebf\u7cfb\u7edf\u7684\u6ce2\u7279\u7387\u3002\n\n\n\u53ef\u7528\u7684\u6ce2\u7279\u7387\u5217\u8868\u5982\u4e0b\uff1a\n\n\n#define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31K25BPS 5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83K3BPS  10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666kbps  17\n#define CAN_1000KBPS 18\n\n\n\n\n\n2. \u8bbe\u7f6e\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u8fc7\u6ee4\u5bc4\u5b58\u5668\n\n\n\u63a7\u5236\u5668\u82af\u7247\u4e0a\u67092\u4e2a\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c5\u4e2a\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4fdd\u8bc1\u4ece\u76ee\u6807\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002\u5b83\u4eec\u7279\u522b\u9002\u7528\u4e8e\u7531\u8bb8\u591a\u8282\u70b9\u7ec4\u6210\u7684\u5927\u578b\u7f51\u7edc\u3002\n\n\n\u6211\u4eec\u63d0\u4f9b\u4e24\u79cd\u51fd\u6570\u6765\u5229\u7528\u8fd9\u4e9b\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\u3002\u4ed6\u4eec\u662f\uff1a\n\n\nMask:\n\n\ninit_Mask(unsigned char num, unsigned char ext, unsigned char ulData);\n\n\n\n\n\nFilter:\n\n\ninit_Filt(unsigned char num, unsigned char ext, unsigned char ulData);\n\n\n\n\n\n\n\nnum\n num\u8868\u793a\u8981\u4f7f\u7528\u54ea\u4e2a\u5bc4\u5b58\u5668\u3002\u60a8\u53ef\u4ee5\u8bbe\u7f6e0\u62161\u9009\u62e9\u5c4f\u853d\u5bc4\u5b58\u5668\uff0c0\u81f35\u9009\u62e9\u8fc7\u6ee4\u5bc4\u5b58\u5668\u3002\n\n\next\n \u8868\u793a\u5e27\u7684\u72b6\u6001\u30020\u8868\u793a\u5b83\u662f\u6807\u51c6\u5e27\u30021\u8868\u793a\u5b83\u662f\u4e00\u4e2a\u6269\u5c55\u5e27\u3002\n\n\nulData\n \u4ee3\u8868\u5c4f\u853d\u5e27\u6216\u8fc7\u6ee4\u5e27\u7684\u5185\u5bb9\u3002\n\n\n\n\n3. \u6821\u9a8c\u63a5\u6536\n\n\nMCP2515\u53ef\u4ee5\u5728\u8f6e\u8be2\u6a21\u5f0f\u4e0b\u5de5\u4f5c\uff0c\u5176\u4e2d\u8f6f\u4ef6\u68c0\u67e5\u63a5\u6536\u5230\u7684\u5e27\uff0c\u6216\u4f7f\u7528\u9644\u52a0\u5f15\u811a\u6765\u53d1\u4fe1\u53f7\u901a\u77e5\u5e27\u5df2\u88ab\u63a5\u6536\u6216\u53d1\u9001\u5b8c\u6210\u3002\n\n\n\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8f6e\u8be2\u63a5\u6536\u5230\u7684\u5e27\u3002\n\n\nINT8U MCP_CAN::checkReceive(void);\n\n\n\n\n\n\u5982\u679c\u5e27\u5230\u8fbe\uff0c\u8be5\u51fd\u6570\u5c06\u8fd4\u56de1\uff0c\u5982\u679c\u6ca1\u6709\u5230\u8fbe\uff0c\u5219\u8fd4\u56de0\u3002\n\n\n4. \u83b7\u53d6 CAN ID\n\n\n\u5f53\u67d0\u4e9b\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u83b7\u53d6\u201c\u53d1\u9001\u201d\u8282\u70b9\u7684CAN ID\u3002\n\n\nINT32U MCP_CAN::getCanId(void)\n\n\n\n\n\n5. \u53d1\u9001\u6570\u636e\n\n\nCAN.sendMsgBuf(INT8U id, INT8U ext, INT8U len, data_buf);\n\n\n\n\n\n\u8fd9\u662f\u5c06\u6570\u636e\u53d1\u9001\u5230\u603b\u7ebf\u4e0a\u7684\u51fd\u6570\u3002\u5176\u4e2d\uff1a\n* \nid\n \u8868\u793a\u6570\u636e\u6765\u6e90\n* \next\n \u8868\u793a\u5e27\u7684\u72b6\u6001\u3002'0'\u8868\u793a\u6807\u51c6\u5e27\u3002'1'\u8868\u793a\u6269\u5c55\u5e27\u3002\n* \nlen\n \u8868\u793a\u6b64\u5e27\u7684\u957f\u5ea6\u3002\n* \ndata_buf\n \u662f\u6b64\u6d88\u606f\u7684\u5185\u5bb9\u3002\n\n\n\u4f8b\u5982\uff0c\u5728\u201c\u53d1\u9001\u201d\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6709\uff1a\n\n\nunsigned char stmp[8] = {0, 1, 2, 3, 4, 5, 6, 7};\nCAN.sendMsgBuf(0x00, 0, 8, stmp); //send out the message \nstmp\n to the bus and tell other devices this is a standard frame from 0x00.\n\n\n\n\n\n6. \u63a5\u6536\u6570\u636e\n\n\n\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u5728\u201c\u63a5\u6536\u201d\u8282\u70b9\u4e0a\u63a5\u6536\u6570\u636e\uff1a\n\n\nCAN.readMsgBuf(unsigned char len, unsigned char buf);\n\n\n\n\n\n\u5728\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u90fd\u8bbe\u7f6e\u597d\u7684\u6761\u4ef6\u4e0b\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u4f1a\u63a5\u6536\u6ee1\u8db3\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u7b5b\u9009\u6761\u4ef6\u7684\u6570\u636e\u5e27\u3002\n\n\n\n\nlen\n \u8868\u793a\u6570\u636e\u957f\u5ea6\u3002\n\n\nbuf\n \u662f\u5b58\u50a8\u6570\u636e\u7684\u4f4d\u7f6e\u3002\n\n\n\n\n\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6ce2\u7279\u7387\n\n\n\u6211\u4eec\u63d0\u4f9b\u4e86\u8bb8\u591a\u9891\u7e41\u4f7f\u7528\u7684\u6ce2\u7279\u7387\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n\n#define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31KBPS   5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83KBPS   10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666KBPS  17\n#define CAN_1000KBPS 18\n\n\n\n\n\n\u7136\u800c\uff0c\u60a8\u4ecd\u7136\u53ef\u80fd\u627e\u4e0d\u5230\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8f6f\u4ef6\u6765\u5e2e\u52a9\u60a8\u8ba1\u7b97\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002\n\n\n\u70b9\u51fb \n\u8fd9\u91cc\n \u6765\u4e0b\u8f7d\u8be5\u8f6f\u4ef6\u3002\n\n\n\n\n\n\nNote\n\n\n\u8fd9\u4e2a\u8f6f\u4ef6\u4ec5\u4ec5\u652f\u6301Windows\u7cfb\u7edf\uff0c\u5982\u679c\u60a8\u65e0\u6cd5\u6253\u5f00\u5b83\uff0c\u6b22\u8fce\u968f\u65f6\u901a\u8fc7\u90ae\u4ef6\u8054\u7cfb \n \u6765\u83b7\u53d6\u6280\u672f\u652f\u6301\u3002\n\n\n\n\n\u6253\u5f00\u8f6f\u4ef6\uff0c\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u8bbe\u7f6e\u4f60\u60f3\u8981\u7684\u6ce2\u7279\u7387\uff0c\u7136\u540e\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u7136\u540e\u70b9\u51fb\u8ba1\u7b97\u3002\n\n\n\u7136\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e9b\u6570\u636e\uff0ccfg1\uff0ccfg2\u548ccfg3\u3002\n\n\n\u60a8\u9700\u8981\u5728\u5e93\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u4ee3\u7801\u3002\n\n\n\u6253\u5f00 \nmcp_can_dfs.h\n, \u4f60\u9700\u8981\u5c06\u4e0b\u5217\u4ee3\u7801\u6dfb\u52a0\u5230\u7b2c272\u884c\u5de6\u53f3\u3002\n\n\n#define MCP_16MHz_xxxkBPS_CFG1 (cfg1)    // xxx is the baud rate you need\n#define MCP_16MHz_xxxkBPS_CFG2 (cfg2)\n#define MCP_16MHz_xxxkBPS_CFG3 (cfg2)\n\n\n\n\n\n\u7136\u540e\u8ba9\u6211\u4eec\u8df3\u8f6c\u5230\u7b2c390\u884c, \u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a\n\n\n#define CAN_xxxKBPS NUM       // xxx is the baudrate you need, and NUM is a number, you need to get a different from the other rates.\n\n\n\n\n\n\u6253\u5f00 \nmcp_can.cpp\n, \u8df3\u8f6c\u5230\u51fd\u6570**mcp2515_configRate**(\u5927\u81f4\u5728\u7b2c190\u884c), \u7136\u540e\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801:\n\n\ncase (CAN_xxxKBPS):\n    cfg1 = MCP_16MHz_xxxkBPS_CFG1;\n    cfg2 = MCP_16MHz_xxxkBPS_CFG2;\n    cfg3 = MCP_16MHz_xxxkBPS_CFG3;\n    break;\n\n\n\n\n\n\u7136\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u60a8\u9700\u8981\u7684\u6ce2\u7279\u7387\u4e86\u3002\u5f53\u60a8\u4f7f\u7528\u7684\u6ce2\u7279\u7387\u65f6\uff0c\u8bf7\u7ed9\u6211\u4eec\u4e00\u4e2agithub\u7684\u8bf7\u6c42\uff0c\u8fd9\u6837\u6211\u53ef\u4ee5\u6dfb\u52a0\u5230\u5e93\u6765\u5e2e\u52a9\u5176\u4ed6\u4eba\u3002\u611f\u8c22\uff01\n\n\n\u9879\u76ee\u5de5\u7a0b\n\n\n\n\n\u5982\u679c\u60a8\u60f3\u4f7f\u7528CAN-BUS \u6269\u5f20\u677f\u505a\u4e00\u4e9b\u9177\u70ab\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u53ef\u4f9b\u53c2\u8003\u3002\n\n\n\u5927\u4f17 CAN BUS \u6e38\u620f\n\n\n\n\nEver wanted to play a car/truck simulator with a real dashboard on your PC? Me too! I'm trying to control a VW Polo 6R dashboard via CAN Bus with an Arduino Uno and a Seeed CAN Bus Shield. Inspired by Silas Parker. Thanks Sepp and Is0-Mick for their great support!\n\n\n\n\n\u9ed1\u8fdb\u8f66\u8f7d CAN-BUS\n\n\n\n\nModern Vehicles all come equipped with a CAN-BUS Controller Area Network, Instead of having a million wires running back and forth from various devices in your car to the battery, its making use of a more clever system.\n\n\nAll electronic functions are connected to the TIPM, (Totally integrated Power Module), such as solenoids/relays to lock the doors or mini motors to wind the windows etc.\n\n\nFrom each node (IE Switch pod that controls your windows or electric door locks) it broadcasts a message across the CAN. When the TIPM detects a valid message it will react accordingly like, lock the doors, switch on lights and so on.\n\n\n\n\nFAQ\n\n\n\n\nQ1: \u6211\u65e0\u6cd5\u4ece\u5176\u4ed6CAN\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002\n\n\n\n\n\u68c0\u67e5\u8fde\u63a5\u662f\u5426\u6b63\u786e\n\n\n\u68c0\u67e5\u6ce2\u7279\u7387\u8bbe\u7f6e\u662f\u5426\u6b63\u786e\n\n\n\n\nQ2: \u4e32\u884c\u76d1\u89c6\u5668\u6253\u5370\u5931\u8d25\u3002\n\n\n*\u68c0\u67e5CS\u5f15\u811a\u8bbe\u7f6e\u662f\u5426\u4e0e\u4ee3\u7801\u5339\u914d\u3002\u5bf9\u4e8eCAN\u603b\u7ebf\u6269\u5c55\u677fV1.1 / 1.2\uff0cCS\u5f15\u811a\u8fde\u63a5\u5230D9\uff0c\u5176\u4ed6\u5219\u4e3aD10\u3002\n\n\nQ3. \u5982\u679c\u6211\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u6280\u672f\u652f\u6301\u3002\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728 Seeed \u8bba\u575b \nSeeed Forum\n \u7559\u8a00\u6216\u8005or \u7ed9\u4e0b\u5217\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6\u81f3 \n.\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\u3010PDF\u3011\nCAN-BUS Shield V1.2 Schmatics\n\n\n\u3010Eagle\u539f\u7406\u56fe\u3011\nSchematic of CAN-BUS Shield V1.2\n\n\n\u3010CAN_BUS_Shield\u5e93\u3011\nArduino Library for CAN-BUS Shield\n\n\n\u3010MCP2515\u6570\u636e\u624b\u518c\u3011\nMCP2515 datasheet\n\n\n\u3010MCP2551\u6570\u636e\u624b\u518c\u3011\nMCP2551 datasheet\n\n\n\u3010\u793a\u4f8b\u7a0b\u5e8f\u3011\nAn OBD Demo\n\n\n\u3010MCP2515\u6ce2\u7279\u7387\u8ba1\u7b97\u5de5\u5177\u3011\nMCP2515 Baud Rate Tool\n\n\n\u3010USB-CAN\u5206\u6790\u5668\u3011\nUSB-CAN Analyzer\n\n\n\u3010\u7ebf\u7f06DB9\u8f6cOBD2\u3011\nDB9 to OBD2 Cable", 
            "title": "CAN-BUS_Shield_V1.2"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_1", 
            "text": "CAN V2.0B\u901f\u5ea6\u9ad8\u8fbe1 Mb / s  SPI\u63a5\u53e3\u901f\u5ea6\u9ad8\u8fbe10 MHz  \u652f\u6301\u6807\u51c6\uff0811\u4f4d\uff09\u548c\u6269\u5c55\uff0829\u4f4d\uff09\u6570\u636e\u4ee5\u53ca\u8fdc\u7a0b\u5e27  \u4e24\u4e2a\u5177\u6709\u4f18\u5148\u6d88\u606f\u5b58\u50a8\u7684\u63a5\u6536\u7f13\u51b2\u533a  \u5de5\u4e1a\u6807\u51c6DB-9\u8fde\u63a5\u5668  LED\u6307\u793a\u706f    Note  CAN BUS \u53ef\u4ee5\u826f\u597d\u5730\u517c\u5bb9Arduino UNO (ATmega328), Arduino Mega (ATmega1280/2560) \u3001 Arduino Leonardo (ATmega32U4).", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_2", 
            "text": "DB9 Interface  - to connect to OBDII Interface via a DBG-OBD Cable.  V_OBD  - It gets power from OBDII Interface (from DB9)  Led Indicator :  PWR : power  TX : blink when the data is sending  RX : blink when there's data receiving  INT : data interrupt    Terminal  - CAN_H and CAN_L  Arduino UNO pin out  Serial Grove connector  I2C Grove connector  ICSP pins  IC  - MCP2551, a high-speed CAN transceiver ( datasheet )  IC  - MCP2515, stand-alone CAN controller with SPI interface ( datasheet )    Warning   \u5f53\u60a8\u5728\u4e00\u4e2a\u7f51\u7edc\u4e2d\u4f7f\u7528\u4e24\u4e2a\u4ee5\u4e0a\u7684CAN\u603b\u7ebf\u6269\u5c55\u677f\u65f6\uff0c\u5e94\u8003\u8651\u963b\u6297\u3002\u60a8\u5e94\u8be5\u7528\u5200\u5207\u5272PCB\u4e2d\u7684P1\uff0c\u6216\u8005\u5e72\u8106\u53d6\u4e0bPCB\u4e0a\u7684R3\u3002    \u7ba1\u811a\u56fe    Note   \u7a7a\u95f2\u9488\u53ef\u7528\u4e8e\u5176\u4ed6\u7528\u9014\u3002    DB9 OBDii \u63a5\u53e3   CS \u5f15\u811a  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cV1.2\u7684SPI_CS\u5f15\u811a\u8fde\u63a5\u5230D9\u3002\u5982\u679c\u8981\u66f4\u6539\u4e3aD10\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002   \u6b65\u9aa41\uff1a\u67e5\u770bPCB\u7684\u80cc\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u540d\u4e3aCS\u7684\u710a\u76d8\u3002     \u6b65\u9aa42: \u5272\u65ad\u710a\u76d89\u548c\u4e2d\u95f4\u710a\u76d8\u4e4b\u95f4\u7684\u5bfc\u7ebf     \u6b65\u9aa43: \u5c06\u4e2d\u95f4\u710a\u76d8\u548c\u710a\u76d810\u710a\u63a5\u5728\u4e00\u8d77\u3002     Warning   \u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002    SPI \u5f15\u811a  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSPI\u5f15\u811a\uff08SCK\uff0cMISO\uff0cMOSI\uff09\u88ab\u8fde\u63a5\u5230ICSP\u5f15\u811a\u3002\u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u6838\u5fc3\u677f\uff0cSPI\u5f15\u811a\u4f4d\u4e8eD11\u301cD13\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u9700\u8981\u5bf9PCB\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u3002\u770b\u770bPCB\u7684\u80cc\u9762\uff0c\u6709\u4e09\u4e2a\u710a\u76d8\uff0cMOSI\uff0cMISO\u548cSCK\uff0c\u5b83\u4eec\u9ed8\u8ba4\u8fde\u63a5\u5230A\u3002\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u66f4\u6539\u4e3aB\u3002   Note   \u5bf9\u4e8eArduino UNO, Arduino Mega, Arduino Leonardo \u4ee5\u53ca\u4efb\u4f55\u5176\u4ed6\u57fa\u4e8eAVR \u7684Arduino \u6838\u5fc3\u677f, \u6211\u4eec\u63a8\u8350\u521d\u59cb\u8bbe\u7f6e\u3002     Warning   \u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_3", 
            "text": "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660eCAN-BUS Shield\u7684\u5de5\u4f5c\u539f\u7406\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u89812\u5757CAN-BUS\u6269\u5c55\u677f\u4ee5\u53caArduino\u6216Seeeduino\u3002   Note  \u6b64\u793a\u4f8b\u57fa\u4e8e  Arduino IDE version 1.6.9 .   \u6b65\u9aa41: \u6211\u4eec\u9700\u8981\u51c6\u5907\u4e9b\u5565     \u540d\u79f0  \u529f\u80fd  \u6570\u91cf  \u8d2d\u4e70\u94fe\u63a5      CAN-BUS Shield  CAN \u603b\u7ebf\u901a\u4fe1  2  \u8d2d\u4e70\u94fe\u63a5    Seeeduino V4.2  \u63a7\u5236\u5668  2  \u8d2d\u4e70\u94fe\u63a5    \u8df3\u7ebf  \u8fde\u63a5  2  \u8d2d\u4e70\u94fe\u63a5     \u6b65\u9aa42: \u786c\u4ef6\u8fde\u63a5  \u5c06\u6bcf\u5757CAN-BUS \u6269\u5c55\u677f\u90fd\u63d2\u5728Seeeduino V4.2\u4e0a\uff0c\u7136\u540e\u5982\u4e0b\u56fe\u6240\u793a\u4f7f\u7528\u4e24\u6839\u8df3\u7ebf\u5c06\u4e24\u5757CAN-BUS \u6269\u5c55\u677f\u8fde\u63a5\u8d77\u6765\u3002    Note   CAN_H \u8fde\u63a5\u5230 CAN_H, CAN_L \u8fde\u63a5\u5230 CAN_L    \u6b65\u9aa43: \u8f6f\u4ef6  \u8bf7\u9075\u5faa  \u5982\u4f55\u5b89\u88c5Arduino\u5e93  \u6765\u5b89\u88c5 CAN BUS shield library.  \u70b9\u51fb\u4e0b\u9762\u56fe\u6807\u6765\u4e0b\u8f7dCAN BUS shield library   \u4e0b\u8f7d\u5b8c\u6210\u540e\u5b89\u88c5\u5e93\u6587\u4ef6\u5230\u60a8\u7684Arduino\u3002  \u4e00\u4e2a\u8282\u70b9(\u6b64\u5904\u4ee3\u8868Seeeduino + CAN_BUS \u6269\u5c55\u677f) \u4f5c\u4e3a\u4e3b\u673a\uff0c\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u4ece\u673a\u3002 \u4e3b\u673a\u5c06\u6301\u7eed\u5730\u5411\u4ece\u673a\u53d1\u9001\u6570\u636e\u3002   Note  \u5728\u4e0a\u4f20\u4ee3\u7801\u524d\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u673a\u3002   \u6253\u5f00\u53d1\u9001\u793a\u4f8b\uff08\u6587\u4ef6 \u793a\u4f8b  CAN_BUS_Shield-master \u53d1\u9001\uff09\u5e76\u4e0a\u4f20\u5230\u4e3b\u673a\u3002   \u6253\u5f00receive_check\u793a\u4f8b\uff08\u6587\u4ef6 \u793a\u4f8b  CAN_BUS_Shield-master  receive_check\uff09\u5e76\u4e0a\u4f20\u5230\u4ece\u673a\u3002   \u6b65\u9aa44: \u67e5\u770b\u7ed3\u679c  \u6253\u5f00Arduino IDE\uff08\u4ece\u673a\uff09\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u5c06\u83b7\u5f97\u4ece\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\u3002", 
            "title": "\u5165\u95e8\u6307\u5357"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#apis", 
            "text": "", 
            "title": "APIs"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#1", 
            "text": "\u8be5\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316CAN\u603b\u7ebf\u7cfb\u7edf\u7684\u6ce2\u7279\u7387\u3002  \u53ef\u7528\u7684\u6ce2\u7279\u7387\u5217\u8868\u5982\u4e0b\uff1a  #define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31K25BPS 5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83K3BPS  10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666kbps  17\n#define CAN_1000KBPS 18", 
            "title": "1. \u8bbe\u7f6e\u6ce2\u7279\u7387"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#2", 
            "text": "\u63a7\u5236\u5668\u82af\u7247\u4e0a\u67092\u4e2a\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c5\u4e2a\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4fdd\u8bc1\u4ece\u76ee\u6807\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002\u5b83\u4eec\u7279\u522b\u9002\u7528\u4e8e\u7531\u8bb8\u591a\u8282\u70b9\u7ec4\u6210\u7684\u5927\u578b\u7f51\u7edc\u3002  \u6211\u4eec\u63d0\u4f9b\u4e24\u79cd\u51fd\u6570\u6765\u5229\u7528\u8fd9\u4e9b\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\u3002\u4ed6\u4eec\u662f\uff1a  Mask:  init_Mask(unsigned char num, unsigned char ext, unsigned char ulData);  Filter:  init_Filt(unsigned char num, unsigned char ext, unsigned char ulData);   num  num\u8868\u793a\u8981\u4f7f\u7528\u54ea\u4e2a\u5bc4\u5b58\u5668\u3002\u60a8\u53ef\u4ee5\u8bbe\u7f6e0\u62161\u9009\u62e9\u5c4f\u853d\u5bc4\u5b58\u5668\uff0c0\u81f35\u9009\u62e9\u8fc7\u6ee4\u5bc4\u5b58\u5668\u3002  ext  \u8868\u793a\u5e27\u7684\u72b6\u6001\u30020\u8868\u793a\u5b83\u662f\u6807\u51c6\u5e27\u30021\u8868\u793a\u5b83\u662f\u4e00\u4e2a\u6269\u5c55\u5e27\u3002  ulData  \u4ee3\u8868\u5c4f\u853d\u5e27\u6216\u8fc7\u6ee4\u5e27\u7684\u5185\u5bb9\u3002", 
            "title": "2. \u8bbe\u7f6e\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u8fc7\u6ee4\u5bc4\u5b58\u5668"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#3", 
            "text": "MCP2515\u53ef\u4ee5\u5728\u8f6e\u8be2\u6a21\u5f0f\u4e0b\u5de5\u4f5c\uff0c\u5176\u4e2d\u8f6f\u4ef6\u68c0\u67e5\u63a5\u6536\u5230\u7684\u5e27\uff0c\u6216\u4f7f\u7528\u9644\u52a0\u5f15\u811a\u6765\u53d1\u4fe1\u53f7\u901a\u77e5\u5e27\u5df2\u88ab\u63a5\u6536\u6216\u53d1\u9001\u5b8c\u6210\u3002  \u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8f6e\u8be2\u63a5\u6536\u5230\u7684\u5e27\u3002  INT8U MCP_CAN::checkReceive(void);  \u5982\u679c\u5e27\u5230\u8fbe\uff0c\u8be5\u51fd\u6570\u5c06\u8fd4\u56de1\uff0c\u5982\u679c\u6ca1\u6709\u5230\u8fbe\uff0c\u5219\u8fd4\u56de0\u3002", 
            "title": "3. \u6821\u9a8c\u63a5\u6536"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#4-can-id", 
            "text": "\u5f53\u67d0\u4e9b\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u83b7\u53d6\u201c\u53d1\u9001\u201d\u8282\u70b9\u7684CAN ID\u3002  INT32U MCP_CAN::getCanId(void)", 
            "title": "4. \u83b7\u53d6 CAN ID"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#5", 
            "text": "CAN.sendMsgBuf(INT8U id, INT8U ext, INT8U len, data_buf);  \u8fd9\u662f\u5c06\u6570\u636e\u53d1\u9001\u5230\u603b\u7ebf\u4e0a\u7684\u51fd\u6570\u3002\u5176\u4e2d\uff1a\n*  id  \u8868\u793a\u6570\u636e\u6765\u6e90\n*  ext  \u8868\u793a\u5e27\u7684\u72b6\u6001\u3002'0'\u8868\u793a\u6807\u51c6\u5e27\u3002'1'\u8868\u793a\u6269\u5c55\u5e27\u3002\n*  len  \u8868\u793a\u6b64\u5e27\u7684\u957f\u5ea6\u3002\n*  data_buf  \u662f\u6b64\u6d88\u606f\u7684\u5185\u5bb9\u3002  \u4f8b\u5982\uff0c\u5728\u201c\u53d1\u9001\u201d\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6709\uff1a  unsigned char stmp[8] = {0, 1, 2, 3, 4, 5, 6, 7};\nCAN.sendMsgBuf(0x00, 0, 8, stmp); //send out the message  stmp  to the bus and tell other devices this is a standard frame from 0x00.", 
            "title": "5. \u53d1\u9001\u6570\u636e"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#6", 
            "text": "\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u5728\u201c\u63a5\u6536\u201d\u8282\u70b9\u4e0a\u63a5\u6536\u6570\u636e\uff1a  CAN.readMsgBuf(unsigned char len, unsigned char buf);  \u5728\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u90fd\u8bbe\u7f6e\u597d\u7684\u6761\u4ef6\u4e0b\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u4f1a\u63a5\u6536\u6ee1\u8db3\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u7b5b\u9009\u6761\u4ef6\u7684\u6570\u636e\u5e27\u3002   len  \u8868\u793a\u6570\u636e\u957f\u5ea6\u3002  buf  \u662f\u5b58\u50a8\u6570\u636e\u7684\u4f4d\u7f6e\u3002", 
            "title": "6. \u63a5\u6536\u6570\u636e"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_4", 
            "text": "\u6211\u4eec\u63d0\u4f9b\u4e86\u8bb8\u591a\u9891\u7e41\u4f7f\u7528\u7684\u6ce2\u7279\u7387\uff0c\u5982\u4e0b\u6240\u793a\uff1a  #define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31KBPS   5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83KBPS   10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666KBPS  17\n#define CAN_1000KBPS 18  \u7136\u800c\uff0c\u60a8\u4ecd\u7136\u53ef\u80fd\u627e\u4e0d\u5230\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8f6f\u4ef6\u6765\u5e2e\u52a9\u60a8\u8ba1\u7b97\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002  \u70b9\u51fb  \u8fd9\u91cc  \u6765\u4e0b\u8f7d\u8be5\u8f6f\u4ef6\u3002    Note  \u8fd9\u4e2a\u8f6f\u4ef6\u4ec5\u4ec5\u652f\u6301Windows\u7cfb\u7edf\uff0c\u5982\u679c\u60a8\u65e0\u6cd5\u6253\u5f00\u5b83\uff0c\u6b22\u8fce\u968f\u65f6\u901a\u8fc7\u90ae\u4ef6\u8054\u7cfb   \u6765\u83b7\u53d6\u6280\u672f\u652f\u6301\u3002   \u6253\u5f00\u8f6f\u4ef6\uff0c\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u8bbe\u7f6e\u4f60\u60f3\u8981\u7684\u6ce2\u7279\u7387\uff0c\u7136\u540e\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u7136\u540e\u70b9\u51fb\u8ba1\u7b97\u3002  \u7136\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e9b\u6570\u636e\uff0ccfg1\uff0ccfg2\u548ccfg3\u3002  \u60a8\u9700\u8981\u5728\u5e93\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u4ee3\u7801\u3002  \u6253\u5f00  mcp_can_dfs.h , \u4f60\u9700\u8981\u5c06\u4e0b\u5217\u4ee3\u7801\u6dfb\u52a0\u5230\u7b2c272\u884c\u5de6\u53f3\u3002  #define MCP_16MHz_xxxkBPS_CFG1 (cfg1)    // xxx is the baud rate you need\n#define MCP_16MHz_xxxkBPS_CFG2 (cfg2)\n#define MCP_16MHz_xxxkBPS_CFG3 (cfg2)  \u7136\u540e\u8ba9\u6211\u4eec\u8df3\u8f6c\u5230\u7b2c390\u884c, \u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a  #define CAN_xxxKBPS NUM       // xxx is the baudrate you need, and NUM is a number, you need to get a different from the other rates.  \u6253\u5f00  mcp_can.cpp , \u8df3\u8f6c\u5230\u51fd\u6570**mcp2515_configRate**(\u5927\u81f4\u5728\u7b2c190\u884c), \u7136\u540e\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801:  case (CAN_xxxKBPS):\n    cfg1 = MCP_16MHz_xxxkBPS_CFG1;\n    cfg2 = MCP_16MHz_xxxkBPS_CFG2;\n    cfg3 = MCP_16MHz_xxxkBPS_CFG3;\n    break;  \u7136\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u60a8\u9700\u8981\u7684\u6ce2\u7279\u7387\u4e86\u3002\u5f53\u60a8\u4f7f\u7528\u7684\u6ce2\u7279\u7387\u65f6\uff0c\u8bf7\u7ed9\u6211\u4eec\u4e00\u4e2agithub\u7684\u8bf7\u6c42\uff0c\u8fd9\u6837\u6211\u53ef\u4ee5\u6dfb\u52a0\u5230\u5e93\u6765\u5e2e\u52a9\u5176\u4ed6\u4eba\u3002\u611f\u8c22\uff01", 
            "title": "\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6ce2\u7279\u7387"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_5", 
            "text": "\u5982\u679c\u60a8\u60f3\u4f7f\u7528CAN-BUS \u6269\u5f20\u677f\u505a\u4e00\u4e9b\u9177\u70ab\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u53ef\u4f9b\u53c2\u8003\u3002", 
            "title": "\u9879\u76ee\u5de5\u7a0b"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#can-bus", 
            "text": "Ever wanted to play a car/truck simulator with a real dashboard on your PC? Me too! I'm trying to control a VW Polo 6R dashboard via CAN Bus with an Arduino Uno and a Seeed CAN Bus Shield. Inspired by Silas Parker. Thanks Sepp and Is0-Mick for their great support!", 
            "title": "\u5927\u4f17 CAN BUS \u6e38\u620f"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#can-bus_1", 
            "text": "Modern Vehicles all come equipped with a CAN-BUS Controller Area Network, Instead of having a million wires running back and forth from various devices in your car to the battery, its making use of a more clever system.  All electronic functions are connected to the TIPM, (Totally integrated Power Module), such as solenoids/relays to lock the doors or mini motors to wind the windows etc.  From each node (IE Switch pod that controls your windows or electric door locks) it broadcasts a message across the CAN. When the TIPM detects a valid message it will react accordingly like, lock the doors, switch on lights and so on.", 
            "title": "\u9ed1\u8fdb\u8f66\u8f7d CAN-BUS"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#faq", 
            "text": "Q1: \u6211\u65e0\u6cd5\u4ece\u5176\u4ed6CAN\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002   \u68c0\u67e5\u8fde\u63a5\u662f\u5426\u6b63\u786e  \u68c0\u67e5\u6ce2\u7279\u7387\u8bbe\u7f6e\u662f\u5426\u6b63\u786e   Q2: \u4e32\u884c\u76d1\u89c6\u5668\u6253\u5370\u5931\u8d25\u3002  *\u68c0\u67e5CS\u5f15\u811a\u8bbe\u7f6e\u662f\u5426\u4e0e\u4ee3\u7801\u5339\u914d\u3002\u5bf9\u4e8eCAN\u603b\u7ebf\u6269\u5c55\u677fV1.1 / 1.2\uff0cCS\u5f15\u811a\u8fde\u63a5\u5230D9\uff0c\u5176\u4ed6\u5219\u4e3aD10\u3002  Q3. \u5982\u679c\u6211\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u6280\u672f\u652f\u6301\u3002   \u60a8\u53ef\u4ee5\u5728 Seeed \u8bba\u575b  Seeed Forum  \u7559\u8a00\u6216\u8005or \u7ed9\u4e0b\u5217\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6\u81f3  .", 
            "title": "FAQ"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_6", 
            "text": "\u3010PDF\u3011 CAN-BUS Shield V1.2 Schmatics  \u3010Eagle\u539f\u7406\u56fe\u3011 Schematic of CAN-BUS Shield V1.2  \u3010CAN_BUS_Shield\u5e93\u3011 Arduino Library for CAN-BUS Shield  \u3010MCP2515\u6570\u636e\u624b\u518c\u3011 MCP2515 datasheet  \u3010MCP2551\u6570\u636e\u624b\u518c\u3011 MCP2551 datasheet  \u3010\u793a\u4f8b\u7a0b\u5e8f\u3011 An OBD Demo  \u3010MCP2515\u6ce2\u7279\u7387\u8ba1\u7b97\u5de5\u5177\u3011 MCP2515 Baud Rate Tool  \u3010USB-CAN\u5206\u6790\u5668\u3011 USB-CAN Analyzer  \u3010\u7ebf\u7f06DB9\u8f6cOBD2\u3011 DB9 to OBD2 Cable", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Essentials/", 
            "text": "\u672c\u90e8\u5206\u5305\u62ec\u7531Seeed\u521b\u5efa\u7684Essentials\u677f\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Essentials\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "Essentials"
        }, 
        {
            "location": "/Essentials/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Essentials\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Wireless/", 
            "text": "\u672c\u8282\u5305\u62ec\u7531Seeed\u521b\u5efa\u7684\u65e0\u7ebf\u7535\u8def\u677f\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u65e0\u7ebf\u63a7\u5236\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "Wireless"
        }, 
        {
            "location": "/Wireless/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u65e0\u7ebf\u63a7\u5236\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove_System/", 
            "text": "\u4ec0\u4e48\u662fGrove\u7cfb\u7edf?\n\n\nGrove\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u6807\u51c6\u8fde\u63a5\u5668\u539f\u578b\u7cfb\u7edf\u3002Grove\u91c7\u7528\u79ef\u6728\u5f0f\u7ec4\u88c5\u7535\u5b50\u6280\u672f\u3002\u4e0e\u57fa\u4e8e\u8df3\u7ebf\u6216\u710a\u63a5\u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u8fde\u63a5\uff0c\u8bd5\u9a8c\u548c\u6784\u5efa\u66f4\u5bb9\u6613\uff0c\u5e76\u7b80\u5316\u4e86\u5b66\u4e60\u7cfb\u7edf\u3002Grove\u7cfb\u7edf\u5141\u8bb8\u4f60\u6784\u5efa\u771f\u6b63\u7684\u7cfb\u7edf\u3002\u56e0\u800c\u5b83\u9700\u8981\u4e00\u4e9b\u5b66\u4e60\u548c\u4e13\u4e1a\u77e5\u8bc6\u624d\u80fd\u6b63\u786e\u5730\u5c06\u7269\u4ef6\u8054\u63a5\u8d77\u6765\u3002\n\n\nGrove\u7cfb\u7edf\u7531\u57fa\u672c\u5904\u7406\u5355\u5143\uff08\u6811\u5e72\uff09\u548c\u5177\u6709\u6807\u51c6\u5316\u8fde\u63a5\u5668\u7684\u5404\u79cd\u6a21\u5757\uff08\u6811\u679d\uff09\u7ec4\u6210\u3002Grove\u7cfb\u7edf\u7684\u521b\u59cb\u4eba\u4eec\uff08seeediuno\u56e2\u961f\uff09\u66fe\u7ecf\u8bd5\u56fe\u7528\u201c\u6811\u5e72\u201d\u548c\u201c\u6811\u679d\u201d\u6765\u547d\u540d\u8fd9\u4e9b\u5355\u5143\u548c\u6a21\u5757\uff0c\u7136\u800c\u77ed\u6682\u7684\u7ea0\u7ed3\u4e4b\u540e\u4ed6\u4eec\u679c\u65ad\u653e\u5f03\uff0c\u4e3a\u4e86\u4e0d\u7ed9\u60a8\u9020\u6210\u56f0\u60d1\uff0cseeed\u5c06\u4efb\u4f55\u53ef\u80fd\u9020\u6210\u6df7\u6dc6\u7684\u4e1c\u897f\u90fd\u5f03\u82e5\u655d\u5c63\u3002\n\n\n\u57fa\u672c\u5355\u5143\uff08\u901a\u5e38\u4e3a\u5fae\u5904\u7406\u5668\uff09\u5141\u8bb8\u4eceGrove\u6a21\u5757\u8f7b\u677e\u8fde\u63a5\u4efb\u4f55\u8f93\u5165\u6216\u8f93\u51fa\u3002\u6bcf\u4e2aGrove\u6a21\u5757\u901a\u5e38\u90fd\u53ef\u4ee5\u5904\u7406\u5355\u4e2a\u529f\u80fd\uff0c\u4f8b\u5982\u7b80\u5355\u7684\u6309\u94ae\u6216\u66f4\u590d\u6742\u7684\u5fc3\u7387\u4f20\u611f\u5668\u3002\n\n\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u5904\u7406\u5355\u5143\u6ca1\u6709Grove\u63a5\u53e3\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528Grove \u8f6cPin Header \u8f6c\u63a5\u7ebf\uff0c\u4eceRaspberry Pi\u6216Arduino\u7684\u9488\u811a\u8fde\u63a5\u5230Grove\u6a21\u5757\u3002\n\n\nGrove \u9879\u76ee\n\n\n\u4ee5\u4e0b\u662f\u4f7f\u7528Grove\u8fdb\u884c\u7684\u4e00\u4e9b\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\uff0c\u66f4\u591a\u9879\u76ee\u8bf7\u70b9\u51fb \n\u793a\u4f8b\n \u6216\u8005 \n\u6307\u5357\n.\n\n\n\n\n\n\n\n\nDIY a Humidifier\n\n\nPersonal Voice Assistant\n\n\nAcrylic Monitor Stand\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSensor hub \n Win10 IoT\n\n\nSteam-punk Style Award\n\n\nPlant Watering Device\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWi-Fi Speaker\n\n\nDIY a toy car\n\n\nRetro Wooden Lamp\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPokemon Go SAFETY BADGE\n\n\nMake a Wooden Gun\n\n\nQuality of Life Meter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHackable RGB ornament\n\n\nThe Internet Of Led Wall\n\n\nPI Game Box\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\nGrove \u6a21\u5757\u7684\u5c3a\u5bf8\n\n\n\u4e00\u5171\u6709\u4e94\u79cd\u5c3a\u5bf8\u7684Grove\u6a21\u5757\n\n\n\n\n\n\n\n\n1X1\n\n\n1X2\n\n\n1X3\n\n\n2X2\n\n\n2X3\n\n\n\n\n\n\n\n\n\n\n20x20mm\n\n\n20x40mm\n\n\n20x60mm\n\n\n40x40mm\n\n\n40x60mm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u5982\u4f55\u5c06Grove\u8fde\u63a5\u5230\u60a8\u7684\u63a7\u5236\u677f\n\n\n\u5982\u679c\u60a8\u7684\u63a7\u5236\u677f\u4e0a\u6ca1\u6709Grove\u8fde\u63a5\u5668\uff0c\u5219\u9700\u8981\u4e00\u4e2aGrove\u6269\u5c55\u677f\u6765\u8fde\u63a5Grove\u6a21\u5757\u3002Grove\u6269\u5c55\u677f\u63d0\u4f9b\u5904\u7406\u80fd\u529b\uff0c\u53ef\u63a5\u6536\u4f20\u611f\u5668\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u8f93\u51fa\u7ed9\u6267\u884c\u5668\u3002\u73b0\u5728\u6211\u4eec\u5df2\u6709\u4e13\u4e3a\u5404\u79cd\u5e73\u53f0\u7684\u8bbe\u8ba1\u7684\u591a\u6b3eGrove\u6269\u5c55\u677f\uff0c\u5305\u62ecArduino UNO\uff0cParticle Phone\uff0cBeagleBone\u7b49\u3002\n\n\n\n\n\n\n\n\nArduino \u6269\u5c55\u677f\n\n\nBeagleBone board \u6269\u5c55\u677f\n\n\nArduino Mega \u6269\u5c55\u677f\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIOIO-OTG\n\n\nParticle Photon\n\n\nNodeMCU\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\n!!!\u6ce8\u610f\n     Arduino Base Shield \u9002\u7528\u4e8e\u4e0b\u5217\u6838\u5fc3\u677f:\n\n\n* Arduino UNO/Leonardo\n* Seeeduino V3/4/4.1/Lite/Clio/Lotus/Stalker\n* LinkIt ONE\n\n\n\n\n\nGrove\u6a21\u5757\u63a5\u53e3\n\n\n\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230Grove\u7535\u7f06\u67094\u79cd\u989c\u8272\u3002\n\n\n\n\npin 1\n - \u9ec4\u8272 (\u4f8b\u5982, I2C Grove Connectors\u4e0a\u7684SCL)\n\n\npin 2\n - \u767d\u8272 (\u4f8b\u5982, I2C Grove Connectors\u4e0a\u7684SDA)\n\n\npin 3\n - \u7ea2\u8272 - VCC \uff08\u6240\u6709\u7684Grove\u63a5\u53e3\u7ea2\u8272\u90fd\u662fVCC\uff09\n\n\npin 4\n - \u9ed1\u8272 - GND \uff08\u6240\u6709\u7684Grove\u63a5\u53e3\u7ea2\u8272\u90fd\u662fGND\uff09\n\n\n\n\nGrove\u6a21\u5757\u4e3b\u8981\u67094\u79cd\u63a5\u53e3\u3002\n\n\nGrove Digital \u6570\u5b57\u63a5\u53e3\n\n\nGrove\u6570\u5b57\u63a5\u53e3\u7531Grove\u63d2\u5934\u7684\u56db\u6761\u6807\u51c6\u7ebf\u7ec4\u6210\u3002\u4e24\u6761\u4fe1\u53f7\u7ebf\u901a\u5e38\u79f0\u4e3aD0\u548cD1\u3002\u5927\u591a\u6570\u6a21\u5757\u53ea\u4f7f\u7528D0\uff0c\u4f46\u6709\u4e9b\uff08\u50cfLED Bar Grove\u663e\u793a\u5c4f\uff09\u4f7f\u7528\u4e24\u8005\u3002\u901a\u5e38\u6838\u5fc3\u677f\u4f1a\u5c06\u677f\u5361\u4e0a\u7684\u7b2c\u4e00\u4e2aGrove\u8fde\u63a5\u5934\u79f0\u4e3aD0\uff0c\u7b2c\u4e8c\u4e2a\u79f0\u4e3aD1\u3002\u7b2c\u4e00\u4e2a\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684DO/D1\u7ba1\u811a\uff0c\u7b2c\u4e8c\u4e2a\u8fde\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684D1/D2\u5f15\u811a\uff0c\u540e\u9762\u7684\u8fde\u63a5\u5934\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\n\n\n\n\n\n\npin\n\n\nFunction\n\n\nNote\n\n\n\n\n\n\n\n\n\n\npin1\n\n\nDn\n\n\n\u7b2c\u4e00\u4e2a\u6570\u5b57\u8f93\u5165\n\n\n\n\n\n\npin2\n\n\nDn+1\n\n\n\u7b2c\u4e8c\u4e2a\u6570\u5b57\u8f93\u5165\n\n\n\n\n\n\npin3\n\n\nVCC\n\n\n\u4f9b\u7535\u5f15\u811a 5V/3.3V\n\n\n\n\n\n\npin4\n\n\nGND\n\n\n\u5730\n\n\n\n\n\n\n\n\nGrove Analog \u6a21\u62df\u63a5\u53e3\n\n\nGrove\u6a21\u62df\u63a5\u53e3\u7531Grove\u63d2\u5934\u7684\u56db\u6761\u6807\u51c6\u7ebf\u7ec4\u6210\u3002\u4e24\u6761\u4fe1\u53f7\u7ebf\u901a\u5e38\u79f0\u4e3aA0\u548cA1\u3002\u5927\u591a\u6570\u6a21\u5757\u53ea\u4f7f\u7528A0\uff0c\u4f46\u6709\u4e9b\uff08\u50cfLED Bar Grove\u663e\u793a\u5c4f\uff09\u4f7f\u7528\u4e24\u8005\u3002\u901a\u5e38\u6838\u5fc3\u677f\u4f1a\u5c06\u677f\u5361\u4e0a\u7684\u7b2c\u4e00\u4e2aGrove\u8fde\u63a5\u5934\u79f0\u4e3aA0\uff0c\u7b2c\u4e8c\u4e2a\u79f0\u4e3aA1\u3002\u7b2c\u4e00\u4e2a\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684AO/A1\u7ba1\u811a\uff0c\u7b2c\u4e8c\u4e2a\u8fde\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684A1/A2\u5f15\u811a\uff0c\u540e\u9762\u7684\u8fde\u63a5\u5934\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\n\n\n\n\n\n\npin\n\n\nFunction\n\n\nNote\n\n\n\n\n\n\n\n\n\n\npin1\n\n\nAn\n\n\n\u7b2c\u4e00\u4e2a\u6a21\u62df\u8f93\u5165\n\n\n\n\n\n\npin2\n\n\nAn+1\n\n\n\u7b2c\u4e8c\u4e2a\u6a21\u62df\u8f93\u5165\n\n\n\n\n\n\npin3\n\n\nVCC\n\n\n\u4f9b\u7535\u5f15\u811a, 5V/3.3V\n\n\n\n\n\n\npin4\n\n\nGND\n\n\n\u5730\n\n\n\n\n\n\n\n\nGrove UART\n\n\nThe Grove UART \u662f\u7279\u6b8a\u7684\u4e00\u79cd\u6570\u5b57\u8f93\u5165\u8f93\u51fa\u63a5\u53e3\u3002\u5b83\u4f7f\u7528\u5f15\u811a1\u548c\u5f15\u811a2\u8fdb\u884c\u4e32\u884c\u8f93\u5165\u548c\u53d1\u9001\u3002 \u5f15\u811a1\u662fRX\u7ebf\uff08\u7528\u4e8e\u63a5\u6536\u6570\u636e\uff0c\u56e0\u6b64\u662f\u8f93\u5165\uff09\uff0c\u5176\u4e2d\u5f15\u811a2\u662fTX\u7ebf\uff08\u7528\u4e8e\u5411Grove\u6a21\u5757\u4f20\u8f93\u6570\u636e\uff09\u3002\n\n\n\n\n\n\n\n\npin\n\n\nFunction\n\n\nNote\n\n\n\n\n\n\n\n\n\n\npin1\n\n\nRX\n\n\n\u4e32\u884c\u63a5\u6536\n\n\n\n\n\n\npin2\n\n\nTX\n\n\n\u4e32\u884c\u53d1\u9001\n\n\n\n\n\n\npin3\n\n\nVCC\n\n\n\u4f9b\u7535\u5f15\u811a 5V/3.3V\n\n\n\n\n\n\npin4\n\n\nGND\n\n\n\u5730\n\n\n\n\n\n\n\n\nGrove I2C\n\n\n\u6709\u8bb8\u591a\u7c7b\u578b\u7684I2C Grove\u4f20\u611f\u5668\u53ef\u7528\u3002\u5927\u591a\u6570\u5668\u4ef6\u540c\u65f6\u652f\u63015V / 3.3V\uff0c\u4f46\u6709\u5c11\u6570\u53ea\u652f\u63013.3V\u6216\u53ea\u652f\u63015.0V\uff0c\u60a8\u9700\u8981\u5728\u4f7f\u7528\u524d\u4ed4\u7ec6\u68c0\u67e5\u7535\u538b\u53c2\u6570\u3002\n\n\nGrove I2C\u8fde\u63a5\u5668\u5177\u6709\u6807\u51c6\u5e03\u5c40\u3002\u5f15\u811a1\u662fSCL\u4fe1\u53f7\uff0c\u5f15\u811a2\u662fSDA\u4fe1\u53f7\u3002\u7535\u6e90\u548c\u63a5\u5730\u4e0e\u5176\u4ed6\u8fde\u63a5\u5668\u76f8\u540c\u3002\u8fd9\u662fGrove Digital Connector\u7684\u53e6\u4e00\u4e2a\u7279\u6b8a\u7248\u672c\u3002\u5b9e\u9645\u4e0a\uff0c\u63a7\u5236\u5668\u4e0a\u7684I2C\u603b\u7ebf\uff08\u5982ESP8266\uff0cRaspberry Pi\u548cArduino\uff09\u901a\u5e38\u53ea\u4f7f\u7528\u6570\u5b57I / O\u5f15\u811a\u901a\u8fc7\u8f6f\u4ef6\u6765\u5b9e\u73b0I2C\u603b\u7ebf\u3002Raspberry Pi\u548cArduino\u4e0a\u7684I2C\u5f15\u811a\u662f\u5e26\u6709\u786c\u4ef6\u652f\u6301\u7684\u3002\n\n\n\n\n\n\n\n\npin\n\n\nFunction\n\n\nNote\n\n\n\n\n\n\n\n\n\n\npin1\n\n\nSCL\n\n\nI2C \u65f6\u949f\n\n\n\n\n\n\npin2\n\n\nSDA\n\n\nI2C \u6570\u636e\n\n\n\n\n\n\npin3\n\n\nVCC\n\n\n\u4f9b\u7535\u5f15\u811a, 5V/3.3V\n\n\n\n\n\n\npin4\n\n\nGND\n\n\n\u5730\n\n\n\n\n\n\n\n\nGrove \u7ebf\u7f06\n\n\n\u901a\u7528 Grove \u7ebf\u7f06\n\n\n\u6211\u4eec\u4e3a\u60a8\u7684\u9879\u76ee\u5de5\u7a0b\u51c6\u5907\u4e865\u79cd\u4e0d\u540c\u7684grove\u7ebf\u7f06, \u957f\u5ea65\u5398\u7c73\uff0c20\u5398\u7c73\uff0c30\u5398\u7c73\uff0c40\u5398\u7c73\u4ee5\u53ca50\u5398\u7c73\u4e0d\u7b49\u3002   \n\n\n\n\n\n\n\n\n5cm\n\n\n20 cm\n\n\n30 cm\n\n\n40 cm\n\n\n50 cm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\nGrove - Branch Cable \uff08\u5206\u652f\u7535\u7f06\uff09\n\n\nGrove Branch Cable\u662fGrove\u7cfb\u7edf\u4e2d\u4f7f\u7528\u7684\u4e00\u79cd\u7535\u7f06\u3002\u5b83\u7531\u4e09\u4e2a\u5e26\u9632\u53cd\u63d2\u7684\u6bcd\u5934\u8fde\u63a5\u5668\u548c\u56db\u6839\u989c\u8272\u7f16\u7801\u7684\u7535\u7ebf\u7ec4\u6210\u3002Grove\u5206\u652f\u7535\u7f06\u53ef\u7528\u4e8e\u652f\u6301\u83ca\u82b1\u94fe\u4e2d\u7684\u591a\u4e2aGrove\u8bbe\u5907\u8fde\u63a5\u5230Grove shield\u677f\u5361\u4e0a\u3002\u901a\u5e38\uff0c\u4e00\u7aef\u63a5\u53e3\u8fde\u63a5\u5230Grove shield\u677f\u5361\u4e0a\uff0c\u7b2c\u4e8c\u548c\u7b2c\u4e09\u8fde\u63a5\u5668\u8fde\u63a5\u5230\u4e24\u4e2aGrove\u8bbe\u5907\u3002\n\n\n\u4e0eGrove\u7535\u7f06\u7cfb\u5217\u7684\u5176\u4ed6\u6210\u5458\u4e00\u6837\uff0c\u8fd9\u4e2a\u5206\u652f\u7535\u7f06\u4e5f\u662f\u5e26\u6709\u53cd\u63d2\u6263\u7684\uff0c\u8fd9\u6837\u786e\u4fdd\u60a8\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u628a\u7ebf\u63d2\u53cd\u3002\u53e6\u5916\uff0c\u5f53\u5c06\u8fde\u63a5\u5668\u8fde\u63a5\u5230shield\u677f\u5361\u6216\u5176\u4ed6\u8bbe\u5907\u65f6\uff0c\u8bf7\u60a8\u6309\u538b\u4ee5\u786e\u4fdd\u8fde\u63a5\u7a33\u5b9a\u53ef\u9760\u3002\u7531\u4e8eGrove Branch\u7535\u7f06\u6709\u95e9\u9501\uff08\u6709\u65f6\u79f0\u4e3a\u201c\u6263\u201d\u6216\u201c\u5e26\u6263\u7535\u7f06\u201d\uff09\uff0c\u5f53\u95e9\u9501\u5173\u95ed\u65f6\uff0c\u60a8\u5c06\u542c\u5230\u4e00\u4e2a\u5c0f\u58f0\u97f3\uff0c\u5e76\u4e14\u5e94\u8be5\u770b\u5230\u95e9\u9501\u5728\u5176\u5bf9\u5e94\u7684\u90e8\u4ef6\u4e0a\u3002\u8fd9\u4e9b\u95e9\u9501\uff08\u6216\u5e26\u6263\uff09\u53ef\u6539\u5584\u8fde\u63a5\uff0c\u5e76\u4e14\u5728\u9ad8\u632f\u52a8\u6216\u751f\u4ea7\u73af\u5883\u4e2d\u7279\u522b\u65b9\u4fbf\uff0c\u56e0\u4e3a\u65ad\u5f00\u7535\u7f06\u65f6\u5fc5\u987b\u4f7f\u7528\u4e00\u4e9b\u529b\u3002\uff0c\n\n\n\u4f7f\u7528Grove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u591a\u4e2a\u8bbe\u5907\u65f6\uff0c\u8bf7\u683c\u5916\u5c0f\u5fc3\u3002\u8bf7\u6ce8\u610fGrove Shield\u4e0a\u7684\u6a21\u62df\u6216\u6570\u5b57\u5f15\u811a\u5c06\u7531Grove\u8bbe\u5907\u5171\u4eab\u3002\u8fd9\u6837\u7684\u914d\u7f6e\u53ef\u80fd\u4e0d\u9002\u5408\u4e8e\u4e24\u4e2a\u6a21\u62df\u8bbe\u5907\u3002\u4f7f\u7528Grove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u6a21\u62df\u548c\u6570\u5b57Grove\u8bbe\u5907\u53ef\u80fd\u6839\u672c\u4e0d\u8d77\u4f5c\u7528\u3002\n\n\n\n\n\u793a\u4f8b\u5305\u62ec:\n\n\n\n\n\u4f7f\u7528\u83ca\u82b1\u94fe\u8fde\u63a5\u4e24\u4e2a\u6216\u591a\u4e2aI2C\u8bbe\u5907\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u6761\u5206\u652f\u7535\u7f06\u6765\u6269\u5c55I2C\u603b\u7ebf\u3002\n\n\n\u8fde\u63a5\u4e24\u4e2a\u9700\u8981\u540c\u65f6\u5de5\u4f5c\u7684\u8bbe\u5907\u3002\u4f8b\u5982\uff0cLED\u548c\u7ee7\u7535\u5668\u53ef\u4ee5\u901a\u8fc7\u5355\u4e2aGrove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u5230Grove Shield\u3002\u7531\u4e8e\u4e24\u4e2a\u5668\u4ef6\u5c06\u7531\u540c\u4e00\u4e2a\u6570\u5b57\u5f15\u811a\u63a7\u5236\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0\u540c\u65f6\u5173\u95edLED\u548c\u65ad\u5f00\u7ee7\u7535\u5668\u3002\n\n\n\n\nGrove - Branch Cable for Servo \uff08\u4f3a\u670d\u5206\u652f\u7535\u7f06\uff09\n\n\nGrove\u5206\u652f\u7535\u7f06\u662f\u53e6\u4e00\u79cdGrove\u7535\u7f06\uff0c\u4e3b\u8981\u7528\u4e8e\u5c06\u4e00\u4e2a\u6216\u4e24\u4e2a\u8235\u673a\u8fde\u63a5\u5230\u60a8\u7684\u9879\u76ee\u3002\u5b83\u4eec\u7531\u4e09\u4e2a\u8fde\u63a5\u5668\u7ec4\u6210\uff1a\u4e00\u4e2a\u56db\u9488\u6bcd\u8fde\u63a5\u5934\uff0c\u9002\u7528\u4e8e\u8fde\u63a5\u5230Grove Shield\uff0c\u4ee5\u53ca\u4e24\u4e2a\u4e09\u9488\u516c\u67f1\u578b\u8fde\u63a5\u5934\u3002\u5728\u8fd9\u79cd\u914d\u7f6e\u4e2d\uff0c\u7535\u6e90\u548c\u5730\uff08\u6765\u81ea\u56db\u9488\u6bcd\u5934\u7684\u5f15\u811a3\u548c4\uff09\u90fd\u8fde\u63a5\u52303\u9488\u7684\u7535\u6e90\u548c\u5730\u3002\u56db\u9488\u8fde\u63a5\u5668\u7684\u5f15\u811a1\uff08\u9ec4\u8272\uff09\u4e00\u7aef\u8fde\u63a5\u5230\u5177\u6709PWM\u529f\u80fd\u7684Arduino\u5f15\u811a\u4e0a\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u5230\u5e26\u6709\u9ec4\u8272\u5f15\u7ebf\u76843\u9488\u516c\u5934\u3002\u540c\u6837\uff0c\u56db\u9488\u8fde\u63a5\u5668\u7684\u5f15\u811a2\uff08\u767d\u7ebf\uff09\u7684\u4e00\u7aef\u4e5f\u8fde\u63a5\u5230Arduino\u7684\u7b2c\u4e8c\u4e2a\u5177\u6709PWM\u529f\u80fd\u7684\u5f15\u811a\u4e0a\uff0c\u800c\u53e6\u4e00\u7aef\u8fde\u63a5\u5230\u5e26\u6709\u9ec4\u7ebf\u7684\u53e6\u4e00\u4e2a\u4e09\u9488\u516c\u5934\u4e0a\u3002  \n\n\n\u7528\u4e8eServos\u7684Grove\u5206\u652f\u7535\u7f06\u7684\u56db\u9488\u8fde\u63a5\u5934\u901a\u5e38\u8fde\u63a5\u5230Grove Shield\u6570\u5b57\u63d2\u5ea7\uff0c\u5982D2-D9\u3002\u8fde\u63a5\u4f3a\u670d\u65f6\uff0c\u8bb0\u4e0b\u6570\u5b57PWM\u7535\u7f06\u7684\u7ebf\u989c\u8272\uff08\u9ec4\u8272\u6216\u767d\u8272\uff09\uff0c\u4ee5\u4e86\u89e3\u54ea\u4e2a\u6570\u5b57\u5f15\u811a\u5bf9\u5e94\u4e8e\u4f3a\u670d\u8f93\u5165\u3002\n\n\n\n\nGrove to 4pin Female/Male Jumper \uff08grove\u8f6c4pin \u8df3\u7ebf\uff09\n\n\n\u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6765:\n\n\n\n\n\u5c06Grove\u8bbe\u5907\u8fde\u63a5\u5230\u5176\u4ed6\u4e0d\u5e26Grove\u63a5\u53e3\u7684MCU\uff0c\u4f8b\u5982\u60a8\u8981\u5c06Grove - Light Sensor\u8fde\u63a5\u5230Raspberry Pi\u3002\n\n\n\u4f7f\u7528Grove shield\u63a7\u5236\u975eGrove\u63a5\u53e3\u7684\u8bbe\u5907\u3002\n\n\n\n\n\n\n\u7ebf\u7f06\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\nCable\n\n\nLink\n\n\n\n\n\n\n\n\n\n\nBranch Cable\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nBranch Cable for Servo\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove to 4Pin Female\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove to 4Pin Male\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\nGrove \u5165\u95e8\u5957\u4ef6\n\n\n\u6211\u4eec\u4e3a\u521d\u5b66\u8005\u8bbe\u8ba1\u4e86\u8bb8\u591a\u5957\u4ef6\u3002Grove\u5165\u95e8\u5957\u4ef6\u5305\u62ecGrove\u6269\u5c55\u677f\uff0c\u591a\u4e2aGrove\u6a21\u5757\u548c\u7528\u6237\u624b\u518c\u3002\u540c\u65f6\u6211\u4eec\u63d0\u4f9b\u5927\u91cf\u8bfe\u7a0b\u4f9b\u521d\u5b66\u8005\u5b66\u4e60\u3002\u5982\u679c\u60a8\u60f3\u5f00\u59cb\u7cfb\u7edf\u5730\u5b66\u4e60\u4e00\u4e2a\u5e73\u53f0\u6216\u8005\u5b66\u4e60\u76f8\u5173\u7535\u5b50\u77e5\u8bc6\uff0cGrove Starter\u5957\u4ef6\u5305\u5c06\u662f\u60a8\u7684\u6700\u4f73\u7684\u9009\u62e9\u3002\n\n\n\n\n\u6211\u4eec\u9488\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u5f00\u53d1\u4e86\u4e3a\u6570\u4f17\u591a\u7684\u5957\u4ef6\n\n\n\n\n\n\n\n\n\u5957\u4ef6\u540d\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nGrove - Starter Kit for Arduino\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for mbed\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for LinkIt ONE\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for LaunchPad\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for Photon\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for BeagleBone Green\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for LinkIt 7688 Duo\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for 96Boards\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter kit for Arduino\nGenuino 101\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrovePi+ Starter Kit for Raspberry Pi\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\n\u9009\u62e9\u60a8\u7684Grove\n\n\n\u60f3\u8981\u4e00\u4e9bGrove\u6a21\u5757\u7528\u4e8e\u60a8\u7684\u9879\u76ee\uff1f\u8fd9\u91cc\u6709\u4e00\u4e9b\u63a8\u8350\u3002\n\n\nGrove \u57fa\u672c\u8f93\u5165\u8f93\u51fa\u6a21\u5757\n\n\n\n\n\n\n\n\nGrove - LED\n\n\nGrove - Rotary Angle Sensor\n\n\nGrove - Button\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove - Switch\n\n\nGrove - Encoder\n\n\nGrove - Touch Sensor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u663e\u793a\u6a21\u5757\n\n\n\n\n\n\n\n\nI2C_LCD\n\n\nGrove - OLED Display 0.96\"\n\n\nGrove - OLED Display 1.12\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove - LCD RGB Backlight\n\n\nGrove - 4-Digit Display\n\n\nGrove LED Bar v2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u8fd0\u52a8\u68c0\u6d4b\u6a21\u5757\n\n\n\n\n\n\n\n\nGrove - IMU 10DOF v2.0\n\n\nDigital Accelerometer(\u00b1400g)\n\n\n3-Axis Digital Gyro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3-Axis Digital Compass\n\n\n3-Axis Digital Accelerometer(\u00b11.5g)\n\n\n3-Axis Analog Accelerometer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3-Axis Digital Acc(\u00b116g)\n\n\n6-Axis Acc\nCompass v2.0\n\n\n6-Axis Acc\nGyroscope\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u901a\u4fe1\u6a21\u5757\n\n\n\n\n\n\n\n\nGrove \u2013 Uart Wifi\n\n\n433MHz Simple RF link kit\n\n\n315MHz Simple RF Link Kit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove - Serial RF Pro\n\n\n125KHz RFID Reader\n\n\nGrove - BLE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove - BLE (dual model)\n\n\nGrove - NFC\n\n\nGrove - NFC Tag\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u73af\u5883\u76d1\u6d4b\u6a21\u5757\n\n\n\n\n\n\n\n\nAir quality sensor\n\n\nGas Sensor(MQ2)\n\n\nGas Sensor(MQ5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGas Sensor(MQ3)\n\n\nGas Sensor(MQ9)\n\n\nGas Sensor(O2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDust Sensor\n\n\nMoisture Sensor\n\n\nTemperature\nHumidity Sensor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u673a\u5668\u4eba\u914d\u4ef6\n\n\n\n\n\n\n\n\nI2C Mini Motor Driver\n\n\nI2C Motor Driver\n\n\nGrove - Servo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLine Finder\n\n\nUltrasonic Ranger\n\n\n80cm Infrared Proximity Sensor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details", 
            "title": "Grove\u7cfb\u7edf"
        }, 
        {
            "location": "/Grove_System/#grove", 
            "text": "Grove\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u6807\u51c6\u8fde\u63a5\u5668\u539f\u578b\u7cfb\u7edf\u3002Grove\u91c7\u7528\u79ef\u6728\u5f0f\u7ec4\u88c5\u7535\u5b50\u6280\u672f\u3002\u4e0e\u57fa\u4e8e\u8df3\u7ebf\u6216\u710a\u63a5\u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u8fde\u63a5\uff0c\u8bd5\u9a8c\u548c\u6784\u5efa\u66f4\u5bb9\u6613\uff0c\u5e76\u7b80\u5316\u4e86\u5b66\u4e60\u7cfb\u7edf\u3002Grove\u7cfb\u7edf\u5141\u8bb8\u4f60\u6784\u5efa\u771f\u6b63\u7684\u7cfb\u7edf\u3002\u56e0\u800c\u5b83\u9700\u8981\u4e00\u4e9b\u5b66\u4e60\u548c\u4e13\u4e1a\u77e5\u8bc6\u624d\u80fd\u6b63\u786e\u5730\u5c06\u7269\u4ef6\u8054\u63a5\u8d77\u6765\u3002  Grove\u7cfb\u7edf\u7531\u57fa\u672c\u5904\u7406\u5355\u5143\uff08\u6811\u5e72\uff09\u548c\u5177\u6709\u6807\u51c6\u5316\u8fde\u63a5\u5668\u7684\u5404\u79cd\u6a21\u5757\uff08\u6811\u679d\uff09\u7ec4\u6210\u3002Grove\u7cfb\u7edf\u7684\u521b\u59cb\u4eba\u4eec\uff08seeediuno\u56e2\u961f\uff09\u66fe\u7ecf\u8bd5\u56fe\u7528\u201c\u6811\u5e72\u201d\u548c\u201c\u6811\u679d\u201d\u6765\u547d\u540d\u8fd9\u4e9b\u5355\u5143\u548c\u6a21\u5757\uff0c\u7136\u800c\u77ed\u6682\u7684\u7ea0\u7ed3\u4e4b\u540e\u4ed6\u4eec\u679c\u65ad\u653e\u5f03\uff0c\u4e3a\u4e86\u4e0d\u7ed9\u60a8\u9020\u6210\u56f0\u60d1\uff0cseeed\u5c06\u4efb\u4f55\u53ef\u80fd\u9020\u6210\u6df7\u6dc6\u7684\u4e1c\u897f\u90fd\u5f03\u82e5\u655d\u5c63\u3002  \u57fa\u672c\u5355\u5143\uff08\u901a\u5e38\u4e3a\u5fae\u5904\u7406\u5668\uff09\u5141\u8bb8\u4eceGrove\u6a21\u5757\u8f7b\u677e\u8fde\u63a5\u4efb\u4f55\u8f93\u5165\u6216\u8f93\u51fa\u3002\u6bcf\u4e2aGrove\u6a21\u5757\u901a\u5e38\u90fd\u53ef\u4ee5\u5904\u7406\u5355\u4e2a\u529f\u80fd\uff0c\u4f8b\u5982\u7b80\u5355\u7684\u6309\u94ae\u6216\u66f4\u590d\u6742\u7684\u5fc3\u7387\u4f20\u611f\u5668\u3002  \u5982\u679c\u60a8\u4f7f\u7528\u7684\u5904\u7406\u5355\u5143\u6ca1\u6709Grove\u63a5\u53e3\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528Grove \u8f6cPin Header \u8f6c\u63a5\u7ebf\uff0c\u4eceRaspberry Pi\u6216Arduino\u7684\u9488\u811a\u8fde\u63a5\u5230Grove\u6a21\u5757\u3002", 
            "title": "\u4ec0\u4e48\u662fGrove\u7cfb\u7edf?"
        }, 
        {
            "location": "/Grove_System/#grove_1", 
            "text": "\u4ee5\u4e0b\u662f\u4f7f\u7528Grove\u8fdb\u884c\u7684\u4e00\u4e9b\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\uff0c\u66f4\u591a\u9879\u76ee\u8bf7\u70b9\u51fb  \u793a\u4f8b  \u6216\u8005  \u6307\u5357 .     DIY a Humidifier  Personal Voice Assistant  Acrylic Monitor Stand           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!        Sensor hub   Win10 IoT  Steam-punk Style Award  Plant Watering Device           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!        Wi-Fi Speaker  DIY a toy car  Retro Wooden Lamp           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!        Pokemon Go SAFETY BADGE  Make a Wooden Gun  Quality of Life Meter           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!        Hackable RGB ornament  The Internet Of Led Wall  PI Game Box           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!", 
            "title": "Grove \u9879\u76ee"
        }, 
        {
            "location": "/Grove_System/#grove_2", 
            "text": "\u4e00\u5171\u6709\u4e94\u79cd\u5c3a\u5bf8\u7684Grove\u6a21\u5757     1X1  1X2  1X3  2X2  2X3      20x20mm  20x40mm  20x60mm  40x40mm  40x60mm", 
            "title": "Grove \u6a21\u5757\u7684\u5c3a\u5bf8"
        }, 
        {
            "location": "/Grove_System/#grove_3", 
            "text": "\u5982\u679c\u60a8\u7684\u63a7\u5236\u677f\u4e0a\u6ca1\u6709Grove\u8fde\u63a5\u5668\uff0c\u5219\u9700\u8981\u4e00\u4e2aGrove\u6269\u5c55\u677f\u6765\u8fde\u63a5Grove\u6a21\u5757\u3002Grove\u6269\u5c55\u677f\u63d0\u4f9b\u5904\u7406\u80fd\u529b\uff0c\u53ef\u63a5\u6536\u4f20\u611f\u5668\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u8f93\u51fa\u7ed9\u6267\u884c\u5668\u3002\u73b0\u5728\u6211\u4eec\u5df2\u6709\u4e13\u4e3a\u5404\u79cd\u5e73\u53f0\u7684\u8bbe\u8ba1\u7684\u591a\u6b3eGrove\u6269\u5c55\u677f\uff0c\u5305\u62ecArduino UNO\uff0cParticle Phone\uff0cBeagleBone\u7b49\u3002     Arduino \u6269\u5c55\u677f  BeagleBone board \u6269\u5c55\u677f  Arduino Mega \u6269\u5c55\u677f           \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!        IOIO-OTG  Particle Photon  NodeMCU           \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!     !!!\u6ce8\u610f\n     Arduino Base Shield \u9002\u7528\u4e8e\u4e0b\u5217\u6838\u5fc3\u677f:  * Arduino UNO/Leonardo\n* Seeeduino V3/4/4.1/Lite/Clio/Lotus/Stalker\n* LinkIt ONE", 
            "title": "\u5982\u4f55\u5c06Grove\u8fde\u63a5\u5230\u60a8\u7684\u63a7\u5236\u677f"
        }, 
        {
            "location": "/Grove_System/#grove_4", 
            "text": "\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230Grove\u7535\u7f06\u67094\u79cd\u989c\u8272\u3002   pin 1  - \u9ec4\u8272 (\u4f8b\u5982, I2C Grove Connectors\u4e0a\u7684SCL)  pin 2  - \u767d\u8272 (\u4f8b\u5982, I2C Grove Connectors\u4e0a\u7684SDA)  pin 3  - \u7ea2\u8272 - VCC \uff08\u6240\u6709\u7684Grove\u63a5\u53e3\u7ea2\u8272\u90fd\u662fVCC\uff09  pin 4  - \u9ed1\u8272 - GND \uff08\u6240\u6709\u7684Grove\u63a5\u53e3\u7ea2\u8272\u90fd\u662fGND\uff09   Grove\u6a21\u5757\u4e3b\u8981\u67094\u79cd\u63a5\u53e3\u3002", 
            "title": "Grove\u6a21\u5757\u63a5\u53e3"
        }, 
        {
            "location": "/Grove_System/#grove-digital", 
            "text": "Grove\u6570\u5b57\u63a5\u53e3\u7531Grove\u63d2\u5934\u7684\u56db\u6761\u6807\u51c6\u7ebf\u7ec4\u6210\u3002\u4e24\u6761\u4fe1\u53f7\u7ebf\u901a\u5e38\u79f0\u4e3aD0\u548cD1\u3002\u5927\u591a\u6570\u6a21\u5757\u53ea\u4f7f\u7528D0\uff0c\u4f46\u6709\u4e9b\uff08\u50cfLED Bar Grove\u663e\u793a\u5c4f\uff09\u4f7f\u7528\u4e24\u8005\u3002\u901a\u5e38\u6838\u5fc3\u677f\u4f1a\u5c06\u677f\u5361\u4e0a\u7684\u7b2c\u4e00\u4e2aGrove\u8fde\u63a5\u5934\u79f0\u4e3aD0\uff0c\u7b2c\u4e8c\u4e2a\u79f0\u4e3aD1\u3002\u7b2c\u4e00\u4e2a\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684DO/D1\u7ba1\u811a\uff0c\u7b2c\u4e8c\u4e2a\u8fde\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684D1/D2\u5f15\u811a\uff0c\u540e\u9762\u7684\u8fde\u63a5\u5934\u4ee5\u6b64\u7c7b\u63a8\u3002     pin  Function  Note      pin1  Dn  \u7b2c\u4e00\u4e2a\u6570\u5b57\u8f93\u5165    pin2  Dn+1  \u7b2c\u4e8c\u4e2a\u6570\u5b57\u8f93\u5165    pin3  VCC  \u4f9b\u7535\u5f15\u811a 5V/3.3V    pin4  GND  \u5730", 
            "title": "Grove Digital \u6570\u5b57\u63a5\u53e3"
        }, 
        {
            "location": "/Grove_System/#grove-analog", 
            "text": "Grove\u6a21\u62df\u63a5\u53e3\u7531Grove\u63d2\u5934\u7684\u56db\u6761\u6807\u51c6\u7ebf\u7ec4\u6210\u3002\u4e24\u6761\u4fe1\u53f7\u7ebf\u901a\u5e38\u79f0\u4e3aA0\u548cA1\u3002\u5927\u591a\u6570\u6a21\u5757\u53ea\u4f7f\u7528A0\uff0c\u4f46\u6709\u4e9b\uff08\u50cfLED Bar Grove\u663e\u793a\u5c4f\uff09\u4f7f\u7528\u4e24\u8005\u3002\u901a\u5e38\u6838\u5fc3\u677f\u4f1a\u5c06\u677f\u5361\u4e0a\u7684\u7b2c\u4e00\u4e2aGrove\u8fde\u63a5\u5934\u79f0\u4e3aA0\uff0c\u7b2c\u4e8c\u4e2a\u79f0\u4e3aA1\u3002\u7b2c\u4e00\u4e2a\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684AO/A1\u7ba1\u811a\uff0c\u7b2c\u4e8c\u4e2a\u8fde\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684A1/A2\u5f15\u811a\uff0c\u540e\u9762\u7684\u8fde\u63a5\u5934\u4ee5\u6b64\u7c7b\u63a8\u3002     pin  Function  Note      pin1  An  \u7b2c\u4e00\u4e2a\u6a21\u62df\u8f93\u5165    pin2  An+1  \u7b2c\u4e8c\u4e2a\u6a21\u62df\u8f93\u5165    pin3  VCC  \u4f9b\u7535\u5f15\u811a, 5V/3.3V    pin4  GND  \u5730", 
            "title": "Grove Analog \u6a21\u62df\u63a5\u53e3"
        }, 
        {
            "location": "/Grove_System/#grove-uart", 
            "text": "The Grove UART \u662f\u7279\u6b8a\u7684\u4e00\u79cd\u6570\u5b57\u8f93\u5165\u8f93\u51fa\u63a5\u53e3\u3002\u5b83\u4f7f\u7528\u5f15\u811a1\u548c\u5f15\u811a2\u8fdb\u884c\u4e32\u884c\u8f93\u5165\u548c\u53d1\u9001\u3002 \u5f15\u811a1\u662fRX\u7ebf\uff08\u7528\u4e8e\u63a5\u6536\u6570\u636e\uff0c\u56e0\u6b64\u662f\u8f93\u5165\uff09\uff0c\u5176\u4e2d\u5f15\u811a2\u662fTX\u7ebf\uff08\u7528\u4e8e\u5411Grove\u6a21\u5757\u4f20\u8f93\u6570\u636e\uff09\u3002     pin  Function  Note      pin1  RX  \u4e32\u884c\u63a5\u6536    pin2  TX  \u4e32\u884c\u53d1\u9001    pin3  VCC  \u4f9b\u7535\u5f15\u811a 5V/3.3V    pin4  GND  \u5730", 
            "title": "Grove UART"
        }, 
        {
            "location": "/Grove_System/#grove-i2c", 
            "text": "\u6709\u8bb8\u591a\u7c7b\u578b\u7684I2C Grove\u4f20\u611f\u5668\u53ef\u7528\u3002\u5927\u591a\u6570\u5668\u4ef6\u540c\u65f6\u652f\u63015V / 3.3V\uff0c\u4f46\u6709\u5c11\u6570\u53ea\u652f\u63013.3V\u6216\u53ea\u652f\u63015.0V\uff0c\u60a8\u9700\u8981\u5728\u4f7f\u7528\u524d\u4ed4\u7ec6\u68c0\u67e5\u7535\u538b\u53c2\u6570\u3002  Grove I2C\u8fde\u63a5\u5668\u5177\u6709\u6807\u51c6\u5e03\u5c40\u3002\u5f15\u811a1\u662fSCL\u4fe1\u53f7\uff0c\u5f15\u811a2\u662fSDA\u4fe1\u53f7\u3002\u7535\u6e90\u548c\u63a5\u5730\u4e0e\u5176\u4ed6\u8fde\u63a5\u5668\u76f8\u540c\u3002\u8fd9\u662fGrove Digital Connector\u7684\u53e6\u4e00\u4e2a\u7279\u6b8a\u7248\u672c\u3002\u5b9e\u9645\u4e0a\uff0c\u63a7\u5236\u5668\u4e0a\u7684I2C\u603b\u7ebf\uff08\u5982ESP8266\uff0cRaspberry Pi\u548cArduino\uff09\u901a\u5e38\u53ea\u4f7f\u7528\u6570\u5b57I / O\u5f15\u811a\u901a\u8fc7\u8f6f\u4ef6\u6765\u5b9e\u73b0I2C\u603b\u7ebf\u3002Raspberry Pi\u548cArduino\u4e0a\u7684I2C\u5f15\u811a\u662f\u5e26\u6709\u786c\u4ef6\u652f\u6301\u7684\u3002     pin  Function  Note      pin1  SCL  I2C \u65f6\u949f    pin2  SDA  I2C \u6570\u636e    pin3  VCC  \u4f9b\u7535\u5f15\u811a, 5V/3.3V    pin4  GND  \u5730", 
            "title": "Grove I2C"
        }, 
        {
            "location": "/Grove_System/#grove_5", 
            "text": "", 
            "title": "Grove \u7ebf\u7f06"
        }, 
        {
            "location": "/Grove_System/#grove_6", 
            "text": "\u6211\u4eec\u4e3a\u60a8\u7684\u9879\u76ee\u5de5\u7a0b\u51c6\u5907\u4e865\u79cd\u4e0d\u540c\u7684grove\u7ebf\u7f06, \u957f\u5ea65\u5398\u7c73\uff0c20\u5398\u7c73\uff0c30\u5398\u7c73\uff0c40\u5398\u7c73\u4ee5\u53ca50\u5398\u7c73\u4e0d\u7b49\u3002        5cm  20 cm  30 cm  40 cm  50 cm             \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!", 
            "title": "\u901a\u7528 Grove \u7ebf\u7f06"
        }, 
        {
            "location": "/Grove_System/#grove-branch-cable", 
            "text": "Grove Branch Cable\u662fGrove\u7cfb\u7edf\u4e2d\u4f7f\u7528\u7684\u4e00\u79cd\u7535\u7f06\u3002\u5b83\u7531\u4e09\u4e2a\u5e26\u9632\u53cd\u63d2\u7684\u6bcd\u5934\u8fde\u63a5\u5668\u548c\u56db\u6839\u989c\u8272\u7f16\u7801\u7684\u7535\u7ebf\u7ec4\u6210\u3002Grove\u5206\u652f\u7535\u7f06\u53ef\u7528\u4e8e\u652f\u6301\u83ca\u82b1\u94fe\u4e2d\u7684\u591a\u4e2aGrove\u8bbe\u5907\u8fde\u63a5\u5230Grove shield\u677f\u5361\u4e0a\u3002\u901a\u5e38\uff0c\u4e00\u7aef\u63a5\u53e3\u8fde\u63a5\u5230Grove shield\u677f\u5361\u4e0a\uff0c\u7b2c\u4e8c\u548c\u7b2c\u4e09\u8fde\u63a5\u5668\u8fde\u63a5\u5230\u4e24\u4e2aGrove\u8bbe\u5907\u3002  \u4e0eGrove\u7535\u7f06\u7cfb\u5217\u7684\u5176\u4ed6\u6210\u5458\u4e00\u6837\uff0c\u8fd9\u4e2a\u5206\u652f\u7535\u7f06\u4e5f\u662f\u5e26\u6709\u53cd\u63d2\u6263\u7684\uff0c\u8fd9\u6837\u786e\u4fdd\u60a8\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u628a\u7ebf\u63d2\u53cd\u3002\u53e6\u5916\uff0c\u5f53\u5c06\u8fde\u63a5\u5668\u8fde\u63a5\u5230shield\u677f\u5361\u6216\u5176\u4ed6\u8bbe\u5907\u65f6\uff0c\u8bf7\u60a8\u6309\u538b\u4ee5\u786e\u4fdd\u8fde\u63a5\u7a33\u5b9a\u53ef\u9760\u3002\u7531\u4e8eGrove Branch\u7535\u7f06\u6709\u95e9\u9501\uff08\u6709\u65f6\u79f0\u4e3a\u201c\u6263\u201d\u6216\u201c\u5e26\u6263\u7535\u7f06\u201d\uff09\uff0c\u5f53\u95e9\u9501\u5173\u95ed\u65f6\uff0c\u60a8\u5c06\u542c\u5230\u4e00\u4e2a\u5c0f\u58f0\u97f3\uff0c\u5e76\u4e14\u5e94\u8be5\u770b\u5230\u95e9\u9501\u5728\u5176\u5bf9\u5e94\u7684\u90e8\u4ef6\u4e0a\u3002\u8fd9\u4e9b\u95e9\u9501\uff08\u6216\u5e26\u6263\uff09\u53ef\u6539\u5584\u8fde\u63a5\uff0c\u5e76\u4e14\u5728\u9ad8\u632f\u52a8\u6216\u751f\u4ea7\u73af\u5883\u4e2d\u7279\u522b\u65b9\u4fbf\uff0c\u56e0\u4e3a\u65ad\u5f00\u7535\u7f06\u65f6\u5fc5\u987b\u4f7f\u7528\u4e00\u4e9b\u529b\u3002\uff0c  \u4f7f\u7528Grove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u591a\u4e2a\u8bbe\u5907\u65f6\uff0c\u8bf7\u683c\u5916\u5c0f\u5fc3\u3002\u8bf7\u6ce8\u610fGrove Shield\u4e0a\u7684\u6a21\u62df\u6216\u6570\u5b57\u5f15\u811a\u5c06\u7531Grove\u8bbe\u5907\u5171\u4eab\u3002\u8fd9\u6837\u7684\u914d\u7f6e\u53ef\u80fd\u4e0d\u9002\u5408\u4e8e\u4e24\u4e2a\u6a21\u62df\u8bbe\u5907\u3002\u4f7f\u7528Grove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u6a21\u62df\u548c\u6570\u5b57Grove\u8bbe\u5907\u53ef\u80fd\u6839\u672c\u4e0d\u8d77\u4f5c\u7528\u3002   \u793a\u4f8b\u5305\u62ec:   \u4f7f\u7528\u83ca\u82b1\u94fe\u8fde\u63a5\u4e24\u4e2a\u6216\u591a\u4e2aI2C\u8bbe\u5907\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u6761\u5206\u652f\u7535\u7f06\u6765\u6269\u5c55I2C\u603b\u7ebf\u3002  \u8fde\u63a5\u4e24\u4e2a\u9700\u8981\u540c\u65f6\u5de5\u4f5c\u7684\u8bbe\u5907\u3002\u4f8b\u5982\uff0cLED\u548c\u7ee7\u7535\u5668\u53ef\u4ee5\u901a\u8fc7\u5355\u4e2aGrove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u5230Grove Shield\u3002\u7531\u4e8e\u4e24\u4e2a\u5668\u4ef6\u5c06\u7531\u540c\u4e00\u4e2a\u6570\u5b57\u5f15\u811a\u63a7\u5236\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0\u540c\u65f6\u5173\u95edLED\u548c\u65ad\u5f00\u7ee7\u7535\u5668\u3002", 
            "title": "Grove - Branch Cable \uff08\u5206\u652f\u7535\u7f06\uff09"
        }, 
        {
            "location": "/Grove_System/#grove-branch-cable-for-servo", 
            "text": "Grove\u5206\u652f\u7535\u7f06\u662f\u53e6\u4e00\u79cdGrove\u7535\u7f06\uff0c\u4e3b\u8981\u7528\u4e8e\u5c06\u4e00\u4e2a\u6216\u4e24\u4e2a\u8235\u673a\u8fde\u63a5\u5230\u60a8\u7684\u9879\u76ee\u3002\u5b83\u4eec\u7531\u4e09\u4e2a\u8fde\u63a5\u5668\u7ec4\u6210\uff1a\u4e00\u4e2a\u56db\u9488\u6bcd\u8fde\u63a5\u5934\uff0c\u9002\u7528\u4e8e\u8fde\u63a5\u5230Grove Shield\uff0c\u4ee5\u53ca\u4e24\u4e2a\u4e09\u9488\u516c\u67f1\u578b\u8fde\u63a5\u5934\u3002\u5728\u8fd9\u79cd\u914d\u7f6e\u4e2d\uff0c\u7535\u6e90\u548c\u5730\uff08\u6765\u81ea\u56db\u9488\u6bcd\u5934\u7684\u5f15\u811a3\u548c4\uff09\u90fd\u8fde\u63a5\u52303\u9488\u7684\u7535\u6e90\u548c\u5730\u3002\u56db\u9488\u8fde\u63a5\u5668\u7684\u5f15\u811a1\uff08\u9ec4\u8272\uff09\u4e00\u7aef\u8fde\u63a5\u5230\u5177\u6709PWM\u529f\u80fd\u7684Arduino\u5f15\u811a\u4e0a\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u5230\u5e26\u6709\u9ec4\u8272\u5f15\u7ebf\u76843\u9488\u516c\u5934\u3002\u540c\u6837\uff0c\u56db\u9488\u8fde\u63a5\u5668\u7684\u5f15\u811a2\uff08\u767d\u7ebf\uff09\u7684\u4e00\u7aef\u4e5f\u8fde\u63a5\u5230Arduino\u7684\u7b2c\u4e8c\u4e2a\u5177\u6709PWM\u529f\u80fd\u7684\u5f15\u811a\u4e0a\uff0c\u800c\u53e6\u4e00\u7aef\u8fde\u63a5\u5230\u5e26\u6709\u9ec4\u7ebf\u7684\u53e6\u4e00\u4e2a\u4e09\u9488\u516c\u5934\u4e0a\u3002    \u7528\u4e8eServos\u7684Grove\u5206\u652f\u7535\u7f06\u7684\u56db\u9488\u8fde\u63a5\u5934\u901a\u5e38\u8fde\u63a5\u5230Grove Shield\u6570\u5b57\u63d2\u5ea7\uff0c\u5982D2-D9\u3002\u8fde\u63a5\u4f3a\u670d\u65f6\uff0c\u8bb0\u4e0b\u6570\u5b57PWM\u7535\u7f06\u7684\u7ebf\u989c\u8272\uff08\u9ec4\u8272\u6216\u767d\u8272\uff09\uff0c\u4ee5\u4e86\u89e3\u54ea\u4e2a\u6570\u5b57\u5f15\u811a\u5bf9\u5e94\u4e8e\u4f3a\u670d\u8f93\u5165\u3002", 
            "title": "Grove - Branch Cable for Servo \uff08\u4f3a\u670d\u5206\u652f\u7535\u7f06\uff09"
        }, 
        {
            "location": "/Grove_System/#grove-to-4pin-femalemale-jumper-grove4pin", 
            "text": "\u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6765:   \u5c06Grove\u8bbe\u5907\u8fde\u63a5\u5230\u5176\u4ed6\u4e0d\u5e26Grove\u63a5\u53e3\u7684MCU\uff0c\u4f8b\u5982\u60a8\u8981\u5c06Grove - Light Sensor\u8fde\u63a5\u5230Raspberry Pi\u3002  \u4f7f\u7528Grove shield\u63a7\u5236\u975eGrove\u63a5\u53e3\u7684\u8bbe\u5907\u3002", 
            "title": "Grove to 4pin Female/Male Jumper \uff08grove\u8f6c4pin \u8df3\u7ebf\uff09"
        }, 
        {
            "location": "/Grove_System/#_1", 
            "text": "Cable  Link      Branch Cable  \u7acb\u5373\u8d2d\u4e70!    Branch Cable for Servo  \u7acb\u5373\u8d2d\u4e70!    Grove to 4Pin Female  \u7acb\u5373\u8d2d\u4e70!    Grove to 4Pin Male  \u7acb\u5373\u8d2d\u4e70!", 
            "title": "\u7ebf\u7f06\u8d2d\u4e70\u94fe\u63a5"
        }, 
        {
            "location": "/Grove_System/#grove_7", 
            "text": "\u6211\u4eec\u4e3a\u521d\u5b66\u8005\u8bbe\u8ba1\u4e86\u8bb8\u591a\u5957\u4ef6\u3002Grove\u5165\u95e8\u5957\u4ef6\u5305\u62ecGrove\u6269\u5c55\u677f\uff0c\u591a\u4e2aGrove\u6a21\u5757\u548c\u7528\u6237\u624b\u518c\u3002\u540c\u65f6\u6211\u4eec\u63d0\u4f9b\u5927\u91cf\u8bfe\u7a0b\u4f9b\u521d\u5b66\u8005\u5b66\u4e60\u3002\u5982\u679c\u60a8\u60f3\u5f00\u59cb\u7cfb\u7edf\u5730\u5b66\u4e60\u4e00\u4e2a\u5e73\u53f0\u6216\u8005\u5b66\u4e60\u76f8\u5173\u7535\u5b50\u77e5\u8bc6\uff0cGrove Starter\u5957\u4ef6\u5305\u5c06\u662f\u60a8\u7684\u6700\u4f73\u7684\u9009\u62e9\u3002   \u6211\u4eec\u9488\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u5f00\u53d1\u4e86\u4e3a\u6570\u4f17\u591a\u7684\u5957\u4ef6     \u5957\u4ef6\u540d  \u8d2d\u4e70\u94fe\u63a5      Grove - Starter Kit for Arduino  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for mbed  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for LinkIt ONE  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for LaunchPad  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for Photon  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for BeagleBone Green  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for LinkIt 7688 Duo  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for 96Boards  \u7acb\u5373\u8d2d\u4e70!    Grove Starter kit for Arduino Genuino 101  \u7acb\u5373\u8d2d\u4e70!    GrovePi+ Starter Kit for Raspberry Pi  \u7acb\u5373\u8d2d\u4e70!", 
            "title": "Grove \u5165\u95e8\u5957\u4ef6"
        }, 
        {
            "location": "/Grove_System/#grove_8", 
            "text": "\u60f3\u8981\u4e00\u4e9bGrove\u6a21\u5757\u7528\u4e8e\u60a8\u7684\u9879\u76ee\uff1f\u8fd9\u91cc\u6709\u4e00\u4e9b\u63a8\u8350\u3002", 
            "title": "\u9009\u62e9\u60a8\u7684Grove"
        }, 
        {
            "location": "/Grove_System/#grove_9", 
            "text": "Grove - LED  Grove - Rotary Angle Sensor  Grove - Button           More Details  More Details  More Details        Grove - Switch  Grove - Encoder  Grove - Touch Sensor           More Details  More Details  More Details", 
            "title": "Grove \u57fa\u672c\u8f93\u5165\u8f93\u51fa\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_10", 
            "text": "I2C_LCD  Grove - OLED Display 0.96\"  Grove - OLED Display 1.12\"           More Details  More Details  More Details        Grove - LCD RGB Backlight  Grove - 4-Digit Display  Grove LED Bar v2.0           More Details  More Details  More Details", 
            "title": "Grove \u663e\u793a\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_11", 
            "text": "Grove - IMU 10DOF v2.0  Digital Accelerometer(\u00b1400g)  3-Axis Digital Gyro           More Details  More Details  More Details        3-Axis Digital Compass  3-Axis Digital Accelerometer(\u00b11.5g)  3-Axis Analog Accelerometer           More Details  More Details  More Details        3-Axis Digital Acc(\u00b116g)  6-Axis Acc Compass v2.0  6-Axis Acc Gyroscope           More Details  More Details  More Details", 
            "title": "Grove \u8fd0\u52a8\u68c0\u6d4b\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_12", 
            "text": "Grove \u2013 Uart Wifi  433MHz Simple RF link kit  315MHz Simple RF Link Kit           More Details  More Details  More Details        Grove - Serial RF Pro  125KHz RFID Reader  Grove - BLE           More Details  More Details  More Details        Grove - BLE (dual model)  Grove - NFC  Grove - NFC Tag           More Details  More Details  More Details", 
            "title": "Grove \u901a\u4fe1\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_13", 
            "text": "Air quality sensor  Gas Sensor(MQ2)  Gas Sensor(MQ5)           More Details  More Details  More Details        Gas Sensor(MQ3)  Gas Sensor(MQ9)  Gas Sensor(O2)           More Details  More Details  More Details        Dust Sensor  Moisture Sensor  Temperature Humidity Sensor           More Details  More Details  More Details", 
            "title": "Grove \u73af\u5883\u76d1\u6d4b\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_14", 
            "text": "I2C Mini Motor Driver  I2C Motor Driver  Grove - Servo           More Details  More Details  More Details        Line Finder  Ultrasonic Ranger  80cm Infrared Proximity Sensor           More Details  More Details  More Details", 
            "title": "Grove \u673a\u5668\u4eba\u914d\u4ef6"
        }, 
        {
            "location": "/Sensor/", 
            "text": "Grove - \u4f20\u611f\u5668\u5305\u62ec\u5404\u79cd\u4f20\u611f\u5668\u8f93\u5165\u6a21\u5757\u3002\n\n\n\u4ea7\u54c1\u5217\u8868\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u4f20\u611f\u5668\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGrove-Encoder\n\n\nGrove-Multichannel_Gas_Sensor\n\n\nGrove-Piezo_Vibration_Sensor", 
            "title": "Sensor"
        }, 
        {
            "location": "/Sensor/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u4f20\u611f\u5668\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Grove-Encoder  Grove-Multichannel_Gas_Sensor  Grove-Piezo_Vibration_Sensor", 
            "title": "\u4ea7\u54c1\u5217\u8868"
        }, 
        {
            "location": "/Grove-Encoder/", 
            "text": "\u7b80\u4ecb\n\n\nGrove \u2013 Encoder \u662f\u4e00\u4e2a\u589e\u91cf\u65cb\u8f6c\u7f16\u7801\u5668\u3002\u5b83\u5c06\u8f74\u7684\u65cb\u8f6c\u4fe1\u53f7\u7f16\u7801\u6210\u7535\u5b50\u8109\u51b2\u8f93\u51fa\u4fe1\u53f7\u3002\u8fd9\u4e2a\u6a21\u5757\u4e5f\u5c5e\u4e8eGrove\u7cfb\u5217\uff0c\u6709\u6807\u51c6\u7684Grove\u63a5\u53e3\u3002\n\n\n\u5f53\u60a8\u7684\u9879\u76ee\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u65cb\u94ae\u65f6\uff0c\u6bd4\u5982\u8bf4\u97f3\u91cf\u65cb\u94ae\uff0c\u6570\u5b57\u65cb\u94ae\u7b49\uff0c\u8fd9\u4e2a\u4ea7\u54c1\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u589e\u91cf\u5f0f\u7f16\u7801\u5668\n\n\nGrove\u63a5\u53e3\n\n\n360\u5ea6\u65cb\u8f6c\n\n\n\n\n\n\nTips\n\n\n\n\n\u5173\u4e8eGrove\u63a5\u53e3\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003\u4e0b\u9762\u94fe\u63a5\nGrove System\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n\n\n4.5\n\n\n\n\n5\n\n\n\n\n5.5\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u7535\u6d41\n\n\n\n\n10\n\n\n\n\n20\n\n\n\n\n30\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n\n\n20x 20\n\n\n\n\nmm\n\n\n\n\n\n\n\n\n\u51c0\u91cd\n\n\n\n\n12\n\n\n\n\ng\n\n\n\n\n\n\n\n\n\u5e73\u53f0\u652f\u6301\n\n\nIntel Edison (with the \nseeedstudio library\n)\n\n\nArduino101 (with the \ncommunity library\n)\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u5f00\u59cb\u4e4b\u524d\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\nGrove-Encoder \u4f7f\u7528\u7684\u4e3aseeedstudio\u7f16\u5199\u7684\u5e93\u7b80\u5355\u6613\u7528\uff0c\u9996\u5148\u8bf7\u70b9\u51fb\u540e\u9762\u7684\u5e93\u540d\u4e0b\u8f7d\u5e93 \nseeedstudio Encoder Lib\n, \u6216\u8005\u70b9\u51fb\u8fd9\u91cc\ncommunity GroveEncoder library\n.  \u7136\u540e\u53ea\u9700\u8981\u628a\u5b83\u63a5\u5728BaseShield\u7684D2\u63a5\u53e3\u4e0a\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86.\n\n\n\u73af\u5f62LED\u706f\u6761\u793a\u4f8b\n\n\n\n\n\n\n1.\n\n\n\n\n\u63a5\u4e0b\u6765\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u5c31\u662f\u5c55\u793a\u4e86\u5982\u4f55\u64cd\u505a\u4e00\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u3002\n\u8fd9\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u7531Encoder\u548c  \nGrove-CircularLED\n \uff08\u53ef\u70b9\u51fb\u67e5\u770b\uff09\u4e24\u4e2a\u6a21\u5757\u7ec4\u6210 \u3002\u5c06\u8fd9\u4e24\u4e2a\u6a21\u5757\u6309\u7167\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u8d77\u6765:\n\n\n\n\n\n\n2.\n\n\n\n\n\u8fd9\u4e2a\u9879\u76ee\u9700\u8981\u5148\u70b9\u51fb\u5b89\u88c5\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5e93\uff1a \nTimerOne Lib\n \u5e93\u3001 \nEncoder Lib\n \u5e93\u548c \nCircularLED Library\n\u5e93 \u3002\u4e0b\u8f7d\u5b8c\u4e0a\u9762\u51e0\u4e2a\u5e93\u540e\u5b89\u88c5\u5728\u4f60\u7684Arduino IDE\u4e0a\u3002\n\n\n\n\n3.\n\n\n\n\n\u91cd\u542f\u5e76\u6253\u5f00Arduino IDE\uff0c\u6253\u5f00 \nFile-\nExamples-\nEncoder-\nEncodeCircuiBar\n\u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a\n\n\n#include \nCircularLED.h\n\n#include \nEncoder.h\n\n#include \nTimerOne.h\n\nCircularLED circularLED;\nunsigned int LED[24];\nint index_LED;\nvoid setup()\n{\n  encoder.Timer_init();\n}\nvoid loop()\n{\n    if (encoder.rotate_flag ==1)\n  {\n    if (encoder.direct==1)\n    {\n      index_LED++;\n      if (index_LED\n23)\n      index_LED=24;\n      SenttocircularBar(index_LED);\n    }\n     else\n     {\n      index_LED--;\n      if(index_LED\n0)\n      index_LED=0;\n      SenttocircularBar(index_LED);\n     }\n    encoder.rotate_flag =0;\n  }\n}\nvoid SenttocircularBar(int index)\n{\n  for (int i=0;i\n24;i++)\n  {\n    if (i\nindex)\n    {\n      LED[i]=0xff;\n    }\n    else\n    LED[i]=0;\n  }\n  circularLED.CircularLEDWrite(LED);\n}\n\n\n\n\n\n\n4.\n\n\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684Arduino\u6216Seeeduino\u677f\u5b50\u91cc\u3002\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n\n\n\n\n\uff01\uff01\uff01\u6ce8\u610f\n\n\n    \u5f53Grove \u2013 Encoder \u88ab\u6309\u4e0b\u65f6\uff0c\u4e5f\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4fe1\u53f7\uff0c\u4f46\u662f\u57fa\u4e8eGrove\u7ebf\u7684\u9650\u5236\uff0c\u5e76\u6ca1\u6709\u5c06\u8be5\u4fe1\u53f7\u5f15\u51fa\u6765\u3002\n\n\n\n\n\u8d44\u6599\u4e0b\u8f7d\n\n\n\n\nEncoder Spec\n\n\nDemo in Arduino forum\n\n\nTimeOne Lib\n\n\nseeedstudio Encoder Library\n\n\ncommunity Encoder Library\n\n\nGrove-Encoder Eagle files", 
            "title": "Grove-Encoder"
        }, 
        {
            "location": "/Grove-Encoder/#_1", 
            "text": "Grove \u2013 Encoder \u662f\u4e00\u4e2a\u589e\u91cf\u65cb\u8f6c\u7f16\u7801\u5668\u3002\u5b83\u5c06\u8f74\u7684\u65cb\u8f6c\u4fe1\u53f7\u7f16\u7801\u6210\u7535\u5b50\u8109\u51b2\u8f93\u51fa\u4fe1\u53f7\u3002\u8fd9\u4e2a\u6a21\u5757\u4e5f\u5c5e\u4e8eGrove\u7cfb\u5217\uff0c\u6709\u6807\u51c6\u7684Grove\u63a5\u53e3\u3002  \u5f53\u60a8\u7684\u9879\u76ee\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u65cb\u94ae\u65f6\uff0c\u6bd4\u5982\u8bf4\u97f3\u91cf\u65cb\u94ae\uff0c\u6570\u5b57\u65cb\u94ae\u7b49\uff0c\u8fd9\u4e2a\u4ea7\u54c1\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/Grove-Encoder/#_2", 
            "text": "\u589e\u91cf\u5f0f\u7f16\u7801\u5668  Grove\u63a5\u53e3  360\u5ea6\u65cb\u8f6c    Tips   \u5173\u4e8eGrove\u63a5\u53e3\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003\u4e0b\u9762\u94fe\u63a5 Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Encoder/#_3", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u7535\u538b  \n4.5  \n5  \n5.5  \nV    \n\u7535\u6d41  \n10  \n20  \n30  \nmA    \n\u5c3a\u5bf8  \n20x 20  \nmm    \n\u51c0\u91cd  \n12  \ng", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Encoder/#_4", 
            "text": "Intel Edison (with the  seeedstudio library )  Arduino101 (with the  community library )", 
            "title": "\u5e73\u53f0\u652f\u6301"
        }, 
        {
            "location": "/Grove-Encoder/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Encoder/#_6", 
            "text": "\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002  Grove-Encoder \u4f7f\u7528\u7684\u4e3aseeedstudio\u7f16\u5199\u7684\u5e93\u7b80\u5355\u6613\u7528\uff0c\u9996\u5148\u8bf7\u70b9\u51fb\u540e\u9762\u7684\u5e93\u540d\u4e0b\u8f7d\u5e93  seeedstudio Encoder Lib , \u6216\u8005\u70b9\u51fb\u8fd9\u91cc community GroveEncoder library .  \u7136\u540e\u53ea\u9700\u8981\u628a\u5b83\u63a5\u5728BaseShield\u7684D2\u63a5\u53e3\u4e0a\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86.", 
            "title": "\u5f00\u59cb\u4e4b\u524d"
        }, 
        {
            "location": "/Grove-Encoder/#led", 
            "text": "1.   \u63a5\u4e0b\u6765\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u5c31\u662f\u5c55\u793a\u4e86\u5982\u4f55\u64cd\u505a\u4e00\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u3002\n\u8fd9\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u7531Encoder\u548c   Grove-CircularLED  \uff08\u53ef\u70b9\u51fb\u67e5\u770b\uff09\u4e24\u4e2a\u6a21\u5757\u7ec4\u6210 \u3002\u5c06\u8fd9\u4e24\u4e2a\u6a21\u5757\u6309\u7167\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u8d77\u6765:    2.   \u8fd9\u4e2a\u9879\u76ee\u9700\u8981\u5148\u70b9\u51fb\u5b89\u88c5\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5e93\uff1a  TimerOne Lib  \u5e93\u3001  Encoder Lib  \u5e93\u548c  CircularLED Library \u5e93 \u3002\u4e0b\u8f7d\u5b8c\u4e0a\u9762\u51e0\u4e2a\u5e93\u540e\u5b89\u88c5\u5728\u4f60\u7684Arduino IDE\u4e0a\u3002   3.   \u91cd\u542f\u5e76\u6253\u5f00Arduino IDE\uff0c\u6253\u5f00  File- Examples- Encoder- EncodeCircuiBar \u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a  #include  CircularLED.h \n#include  Encoder.h \n#include  TimerOne.h \nCircularLED circularLED;\nunsigned int LED[24];\nint index_LED;\nvoid setup()\n{\n  encoder.Timer_init();\n}\nvoid loop()\n{\n    if (encoder.rotate_flag ==1)\n  {\n    if (encoder.direct==1)\n    {\n      index_LED++;\n      if (index_LED 23)\n      index_LED=24;\n      SenttocircularBar(index_LED);\n    }\n     else\n     {\n      index_LED--;\n      if(index_LED 0)\n      index_LED=0;\n      SenttocircularBar(index_LED);\n     }\n    encoder.rotate_flag =0;\n  }\n}\nvoid SenttocircularBar(int index)\n{\n  for (int i=0;i 24;i++)\n  {\n    if (i index)\n    {\n      LED[i]=0xff;\n    }\n    else\n    LED[i]=0;\n  }\n  circularLED.CircularLEDWrite(LED);\n}   4.   \u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684Arduino\u6216Seeeduino\u677f\u5b50\u91cc\u3002\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002    \uff01\uff01\uff01\u6ce8\u610f \n\n    \u5f53Grove \u2013 Encoder \u88ab\u6309\u4e0b\u65f6\uff0c\u4e5f\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4fe1\u53f7\uff0c\u4f46\u662f\u57fa\u4e8eGrove\u7ebf\u7684\u9650\u5236\uff0c\u5e76\u6ca1\u6709\u5c06\u8be5\u4fe1\u53f7\u5f15\u51fa\u6765\u3002", 
            "title": "\u73af\u5f62LED\u706f\u6761\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Encoder/#_7", 
            "text": "Encoder Spec  Demo in Arduino forum  TimeOne Lib  seeedstudio Encoder Library  community Encoder Library  Grove-Encoder Eagle files", 
            "title": "\u8d44\u6599\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/", 
            "text": "\u4ea7\u54c1\u7b80\u4ecb\n\n\nGrove-Multichannel Gas Sensor\u662f\u4e00\u4e2a\u5efa\u7acb\u5728MiCS-6814\u4e0a\u7684\u73af\u5883\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u68c0\u6d4b\u591a\u79cd\u6709\u5bb3\u6c14\u4f53\uff0c\u7531\u4e8e\u5176\u591a\u901a\u9053\u7279\u6027\uff0c\u53ef\u4ee5\u540c\u65f6\u68c0\u6d4b\u4e09\u79cd\u4e0d\u540c\u6c14\u4f53\u3002\u56e0\u6b64\uff0c\u5f53\u73af\u5883\u5185\u4e0d\u6b62\u4e00\u79cd\u6c14\u4f53\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u53ef\u4ee5\u7528\u4e8e\u76d1\u6d4b\u6c14\u4f53\u6d53\u5ea6\u3002\n\n\n\u8fd9\u4e2a\u4f20\u611f\u5668\u5c5e\u4e8eGrove system\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5230Base shield\u4e0a\uff0c\u5728\u4e0d\u9700\u8981\u4efb\u4f55\u8df3\u7ebf\u7684\u6761\u4ef6\u4e0b\uff0c\u76f4\u63a5\u4e0eArduino\u7ec4\u5408\u4f7f\u7528\u3002\u5176\u63a5\u53e3\u4e3aI2C\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u5b83\u8fde\u63a5\u5230\u6269\u5c55\u677f\u81ea\u5e26\u7684I2C\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\n\n\n\n\n\u6ce8\u610f\u63d0\u793a\n\n\n\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u4e86\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u6c14\u4f53\u6d53\u5ea6\u7684\u8fd1\u4f3c\u8d8b\u52bf, \u5b83\u5e76\u4e0d\u4ee3\u8868\u51c6\u786e\u771f\u5b9e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002\u7a7a\u6c14\u4e2d\u7279\u5b9a\u6210\u5206\u6d53\u5ea6\u7684\u68c0\u6d4b\u65e0\u6cd5\u901a\u8fc7\u5355\u4e00\u7684\u4f20\u611f\u5668\u5b9e\u73b0\uff0c\u901a\u5e38\u9700\u8981\u66f4\u52a0\u7cbe\u786e\u548c\u6602\u8d35\u7684\u8bbe\u5907\u3002\u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u6c14\u4f53\u6d53\u5ea6\u6570\u636e\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u60a8\u4f7f\u7528\u8fd9\u4e2a\u4f20\u611f\u5668\u3002\n\n\n\n\n\n\n\n\n\u5f00\u59cb\u4e4b\u524d\n\n\n\u76f8\u5173\u9605\u8bfb\n\n\n\u6211\u4eec\u6781\u529b\u63a8\u8350\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\uff0c\u5148\u9605\u8bfb\u5982\u4e0b\u53c2\u8003\u8d44\u6599\u3002\u8fd9\u5c06\u5e2e\u52a9\u60a8\u4e86\u89e3\u66f4\u591a\u5173\u4e8eArduino\u548c\u6211\u4eec\u4ea7\u54c1\u7684\u76f8\u5173\u77e5\u8bc6\u3002\u800c\u4e14\u4f1a\u4f7f\u60a8\u5728\u4f7f\u7528\u5f00\u6e90\u786c\u4ef6\u65f6\u66f4\u5f97\u5fc3\u5e94\u624b\u3002\n\n\n\n\nArduino\u5165\u95e8\u6307\u5bfc\n\n\nGrove\u7cfb\u7edf\u7b80\u4ecb\n\n\nBase_Shield\u4f7f\u7528\u6307\u5357\n\n\n\n\n\u9605\u8bfb\u5b8c\u4e0a\u8bc9\u8d44\u6599\u540e\u60a8\u5c06\u638c\u63e1\u5982\u4f55\u4f7f\u7528Base_Shield\u677f\u5361\u5c06Grove\u7cfb\u5217\u4ea7\u54c1\u4e0eArduino\u76f8\u8fde\u3002\u597d\u4e86\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u8fd9\u4e2a\u6559\u7a0b\u5c06\u9700\u8981\u4f7f\u7528\u5230\u4e0b\u5217\u4ea7\u54c1\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u67e5\u9605\u6216\u8d2d\u4e70\u5bf9\u5e94\u4ea7\u54c1:\n\n\n\n\nArduino UNO R3\n \u6216\u8005 \nSeeeduino v4\n\n\nBase Shield\n\n\nGrove - Multichannel Gas Sensor\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npin\u540d\u79f0\n\n\n\u76f8\u5173\u63cf\u8ff0\n\n\n\n\n\n\n\n\n\n\nGND\n\n\n\u63a5\u5730\n\n\n\n\n\n\nVCC\n\n\n3.3V - 5V\n\n\n\n\n\n\nSDA\n\n\nI2C data\n\n\n\n\n\n\nSCL\n\n\nI2C clock\n\n\n\n\n\n\n\n\n\u8be5\u4f20\u611f\u5668\u7684\u4f9b\u7535\u7535\u538b\u4ecb\u4e8e3.3V\u548c5V\u4e4b\u95f4\uff0c\u53ef\u4e0e\u8f93\u51fa\u7535\u538b\u4e3a3.3V\u7684\u5355\u7247\u673a\u517c\u5bb9\u3002\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u4e09\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u4f20\u611f\u5355\u5143\n\n\n\u57fa\u4e8eATmega168PA\n\n\n\u5e26\u6709\u53ef\u7f16\u7a0b\u5730\u5740\u7684I2C\u63a5\u53e3\n\n\n\u53ef\u4ee5\u901a\u8fc7\u5173\u95ed\u52a0\u70ed\u529f\u8017\u964d\u4f4e\u529f\u7387\n\n\n\u53ef\u68c0\u6d4b\u7684\u6c14\u4f53\u79cd\u7c7b\uff1a\n\n\n\u4e00\u6c27\u5316\u78b3 CO 1-1000ppm\n\n\n\u4e8c\u6c27\u5316\u6c2e NO2 0.05-10ppm\n\n\n\u4e59\u9187 C2H6OH 10-500ppm\n\n\n\u6c22 H2 1-1000ppm\n\n\n\u6c28 NH3 1-500ppm\n\n\n\u7532\u70f7 CH4 \n1000ppm\n\n\n\u4e19\u70f7 C3H8 \n1000ppm\n\n\n\u5f02\u4e01\u70f7 C4H10 \n1000ppm\n\n\n\n\n\u6a21\u5757\u56fe\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\nArduino, linkit, wio\n\n\n\u7535\u6c14\u7279\u6027\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u72b6\u6001\n\n\n\u6700\u5c0f\u503c\n\n\n\u7279\u5f81\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n-\n\n\n3.1\n\n\n3.3\n\n\n5.25\n\n\nV\n\n\n\n\n\n\n\u6ce2\u7eb9\n\n\n\u6700\u5927\u4f9b\u7535\n\n\n-\n\n\n80\n\n\n100\n\n\nmV\n\n\n\n\n\n\n\u53d1\u70ed\u529f\u7387\n\n\n-\n\n\n-\n\n\n-\n\n\n88\n\n\nmV\n\n\n\n\n\n\n\u6700\u5927\u529f\u7387\n\n\n-\n\n\n-\n\n\n-\n\n\n150\n\n\nmV\n\n\n\n\n\n\nADC\u7cbe\u5ea6\n\n\n-\n\n\n-\n\n\n10\n\n\n-\n\n\nBits\n\n\n\n\n\n\nI2C\u901f\u5ea6\n\n\n-\n\n\n-\n\n\n100\n\n\n400\n\n\nkHz\n\n\n\n\n\n\nVIL\n\n\n@I2C\n\n\n-0.5\n\n\n-\n\n\n0.99\n\n\nV\n\n\n\n\n\n\nVIH\n\n\n@I2C\n\n\n2.31\n\n\n-\n\n\n5.25\n\n\nV\n\n\n\n\n\n\n\n\nRED\u4f20\u611f\u5668\u6027\u80fd\n\n\n\n\n\n\n\n\nCharacteristic RED sensor\n\n\nSymbol\n\n\nTyp\n\n\nMin\n\n\nMax\n\n\nUnit\n\n\n\n\n\n\n\n\n\n\nSensing resistance in air\n\n\nR0\n\n\n-\n\n\n100\n\n\n1500\n\n\nk\u03a9\n\n\n\n\n\n\nTypical CO detection range\n\n\nFS\n\n\n-\n\n\n1\n\n\n1000\n\n\nppm\n\n\n\n\n\n\nSensitivity factor\n\n\nSR\n\n\n-\n\n\n1.2\n\n\n50\n\n\n-\n\n\n\n\n\n\n\n\n\n\nOX\u4f20\u611f\u5668\u6027\u80fd\n\n\n\n\n\n\n\n\nCharacteristic OX sensor\n\n\nSymbol\n\n\nTyp\n\n\nMin\n\n\nMax\n\n\nUnit\n\n\n\n\n\n\n\n\n\n\nSensing resistance in air\n\n\nR0\n\n\n-\n\n\n0.8\n\n\n20\n\n\nk\u03a9\n\n\n\n\n\n\nTypical NO2 detection range\n\n\nFS\n\n\n-\n\n\n0.05\n\n\n10\n\n\nppm\n\n\n\n\n\n\nSensitivity factor\n\n\nSR\n\n\n-\n\n\n2\n\n\n-\n\n\n-\n\n\n\n\n\n\n\n\n\n\nNH3\u4f20\u611f\u5668\u6027\u80fd\n\n\n\n\n\n\n\n\nCharacteristic NH3 sensor\n\n\nSymbol\n\n\nTyp\n\n\nMin\n\n\nMax\n\n\nUnit\n\n\n\n\n\n\n\n\n\n\nSensing resistance in air\n\n\nR0\n\n\n-\n\n\n10\n\n\n1500\n\n\nk\u03a9\n\n\n\n\n\n\nTypical NH3 detection range\n\n\nFS\n\n\n-\n\n\n1\n\n\n300\n\n\nppm\n\n\n\n\n\n\nSensitivity factor\n\n\nSR\n\n\n-\n\n\n1.5\n\n\n15\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n!!!\u6ce8\u610f\n    \u4e3a\u4e86\u5f97\u5230\u7a33\u5b9a\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u4f20\u611f\u5668\u9700\u8981\u9884\u52a0\u70ed\u5341\u5206\u949f\u4ee5\u4e0a\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\u56fe:\n\n\n1.\u5c06 Grove - Multichannel Gas Sensor \u548c Seeeduino\u6309\u7167\u4e0b\u56fe\u65b9\u5f0f\u76f8\u8fde.\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801:\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\n\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\n2.\u4e0b\u8f7d \nArduino Library \n Grove/Xadow firmware\n \u7136\u540e\u6dfb\u52a0\u5230Arduino\u5e93\u6587\u4ef6\u4e2d\u3002\n\n\n3.\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f:File -\n Example -\n Mutichannel_Gas_Sensor-\n ReadSensorValue_Grove.\n\n\nReadSensorValue_Grove \u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n\n// Read Data from Grove - Multichannel Gas Sensor\n\n\n#include\n \nWire.h\n\n\n#include\n \nMutichannelGasSensor.h\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nSerial\n.\nbegin\n(\n115200\n);\n  \n// start serial for output\n\n    \nSerial\n.\nprintln\n(\npower on!\n);\n\n    \ngas\n.\nbegin\n(\n0x04\n);\n//the default I2C address of the slave is 0x04\n\n    \ngas\n.\npowerOn\n();\n\n    \nSerial\n.\nprint\n(\nFirmware Version = \n);\n\n    \nSerial\n.\nprintln\n(\ngas\n.\ngetVersion\n());\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nfloat\n \nc\n;\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_NH3\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of NH3 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_CO\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of CO is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_NO2\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of NO2 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_C3H8\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of C3H8 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_C4H10\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of C4H10 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_CH4\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of CH4 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_H2\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of H2 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_C2H5OH\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of C2H5OH is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \ndelay\n(\n1000\n);\n\n\n}\n\n\n\n\n\n4.\u4e0a\u4f20\u4ee3\u7801\u3002\u8bf7\u8bb0\u5f97\u5728Arduino\u8f6f\u4ef6\u7684 \u5de5\u5177 | \u5f00\u53d1\u677f\u4e2d\u52fe\u9009\u5bf9\u5e94\u7684\u677f\u5361\uff0c\u672c\u4f8b\u7a0b\u4f7f\u7528\u7684\u662fSeeeduino Uno\uff0c\u540c\u65f6\u8bf7\u9009\u62e9\u6b63\u786e\u7684\u4e32\u53e3\u3002\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08ctrl+shift+M\uff09\uff0c\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u6765\u81ea\u4f20\u611f\u5668\u7684\u6570\u636e\u4e86.\n\n\n\n\n\n\nTip\n\n\n\n\n\u66f4\u591a\u7684\u5173\u4e8eGrove\u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u53c2\u8003 \nGrove System\n\n\n\n\n\n\n\u66f4\u65b0\u56fa\u4ef6\n\n\n\u8be5Grove\u6a21\u5757\u6709\u4e00\u4e2aATmega168 MCU \u51fa\u5382\u56fa\u4ef6\u3002\u56fa\u4ef6\u5df2\u7ecf\u4e8e2016\u5e7411\u670811\u66f4\u65b0\u5230\u4e86V2.0\u7248\u672c\u3002\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u68c0\u6d4b\u60a8\u5f53\u524d\u7684\u56fa\u4ef6\u7248\u672c\u3002\n\n\n// Get firmware version of Grove Multichannel Gas Sensor\n\n\n#include\n \nWire.h\n\n\n#include\n \nMutichannelGasSensor.h\n\n\n\n#define SENSOR_ADDR     0X04        \n// default to 0x04\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nSerial\n.\nbegin\n(\n115200\n);\n\n    \ngas\n.\nbegin\n(\nSENSOR_ADDR\n);\n\n\n    \nunsigned\n \nchar\n \nversion\n \n=\n \ngas\n.\ngetVersion\n();\n\n    \nSerial\n.\nprint\n(\nVersion = \n);\n\n    \nSerial\n.\nprintln\n(\nversion\n);\n    \n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \n// nothing to do\n\n\n}\n\n\n\n\n\n\u5982\u679c\u68c0\u6d4b\u7ed3\u679c\u60a8\u7684\u56fa\u4ef6\u7248\u672c\u662fV1\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u66f4\u65b0\u56fa\u4ef6\u5230V2\u4ee5\u83b7\u53d6\u66f4\u7a33\u5b9a\u7684\u6570\u636e\u3002\n\n\n\u4e3a\u4e86\u66f4\u65b0\u56fa\u4ef6\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7d20\u6750,\n\n\n\n\nAn Arduino UNO/Seeeduino V3/\n\n\n6 \u6839\u675c\u90a6\u7ebf\n\n\n\u70d9\u94c1\n\n\n\n\n\u5728\u677f\u5361\u7684\u80cc\u9762\u7559\u6709ICSP\u710a\u76d8\uff0c\u60a8\u9700\u8981\u5c06\u8fd9\u4e9b\u710a\u76d8\u4e0eArduino\u677f\u5b50\u76f8\u8fde\u3002\u7ba1\u811a\u5b9a\u4e49\u5982\u4e0b\u8868\uff0c\u8fde\u63a5\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\n\n\n\nSensor\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nMISO\n\n\nD12\n\n\n\n\n\n\nSCK\n\n\nD13\n\n\n\n\n\n\nNRST\n\n\nD10\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nMOSI\n\n\nD11\n\n\n\n\n\n\nVCC\n\n\n5V\n\n\n\n\n\n\n\n\n\n\n\u8fde\u63a5\u597d\u4e4b\u540e\uff0c\u8bf7\u6253\u5f00\u60a8Arduino\u793a\u4f8b\u4e2d\u7684 \nUpdateFrimware\n , \u8fd0\u884c\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002\u60a8\u5c06\u770b\u5230\u4e00\u4e9b\u6253\u5370\u7684\u4fe1\u606f\u3002\n\n\n\u8f93\u5165\u4e00\u4e2a \u201c g \u201d\u6765\u5f00\u59cb\u70e7\u5f55\u3002\n\n\n\n\n\u6821\u51c6\n\n\n\u5982\u679c\u60a8\u603b\u662f\u5f97\u5230\u4e00\u4e9b\u4e0d\u53ef\u9760\u7684\u6570\u636e\uff0c\u8bf7\u5c1d\u8bd5\u6821\u51c6\u4f20\u611f\u5668\u3002\u6253\u5f00\u793a\u4f8b\u4e2d\u7684 \ncalibration\n ,\u4e0a\u4f20\u81f3\u60a8\u7684Arduino\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u6821\u51c6\u7684\u76f8\u5173\u4fe1\u606f\u3002\n\n\n\n\nNote\n\n\n\n\n\u5728\u4f20\u611f\u5668\u51fa\u5382\u524d\u5df2\u7ecf\u6821\u51c6\u8fc7\u4e86\uff0c\u5982\u679c\u60a8\u60f3\u8981\u91cd\u65b0\u6821\u51c6\uff0c\u8bf7\u786e\u4fdd\u6821\u51c6\u65f6\u7a7a\u6c14\u73af\u5883\u662f\u65b0\u9c9c\u6e05\u65b0\u7684\u3002\u6821\u51c6\u5927\u81f4\u9700\u8981\u51e0\u5206\u949f\u5230\u534a\u5c0f\u65f6\u4e0d\u7b49\u7684\u65f6\u95f4\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u539f\u7406\u56fe]\n  \nGrove - Multichannel Gas Sensor v1.0 sch\n\n\n[PCB\u56fe]\n \nGrove - Multichannel Gas Sensor eagle files\n\n\n[\u5e93\u6587\u4ef6]\n \nArduino Library \n Grove/Xadow firmware\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nMiCS-6814 Datasheet\n\n\n\n\n\n\n\nFAQ\n\n\n\n\n\n\nQ1. \u5982\u4f55\u6539\u53d8\u6a21\u5757\u7684I2C\u5730\u5740\n\n\n\n\nA1. \u6253\u5f00\u793a\u4f8b\u4e2d\u540d\u4e3aI2C_Address\u7684\u4f8b\u7a0b\uff0c\u8fd0\u884c\u5b83\u3002\n\n\n\n\n\n\n\n\nQ2. \u6211\u6539\u4e86I2C\u5730\u5740\u4f46\u662f\u4e0d\u5c0f\u5fc3\u5fd8\u4e86\n\n\n\n\n*A2. \u522b\u62c5\u5fc3\uff0c\u8fd0\u884c\u793a\u4f8b\u4e2d\u540d\u4e3a factory_setting\u7684\u4f8b\u7a0b\uff0c\u56de\u5230\u51fa\u5382\u72b6\u6001\u3002 *\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\u5982\u679c\u60a8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u652f\u6301\uff0c\u8bf7\u8054\u7cfb\u4e0b\u9762\u7684\u90ae\u7bb1\uff0c\u6211\u4eec\u671f\u5f85\u5e76\u6b22\u8fce\u60a8\u7684\u54a8\u8be2\uff1a", 
            "title": "Grove-Multichannel_Gas_Sensor"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_1", 
            "text": "Grove-Multichannel Gas Sensor\u662f\u4e00\u4e2a\u5efa\u7acb\u5728MiCS-6814\u4e0a\u7684\u73af\u5883\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u68c0\u6d4b\u591a\u79cd\u6709\u5bb3\u6c14\u4f53\uff0c\u7531\u4e8e\u5176\u591a\u901a\u9053\u7279\u6027\uff0c\u53ef\u4ee5\u540c\u65f6\u68c0\u6d4b\u4e09\u79cd\u4e0d\u540c\u6c14\u4f53\u3002\u56e0\u6b64\uff0c\u5f53\u73af\u5883\u5185\u4e0d\u6b62\u4e00\u79cd\u6c14\u4f53\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u53ef\u4ee5\u7528\u4e8e\u76d1\u6d4b\u6c14\u4f53\u6d53\u5ea6\u3002  \u8fd9\u4e2a\u4f20\u611f\u5668\u5c5e\u4e8eGrove system\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5230Base shield\u4e0a\uff0c\u5728\u4e0d\u9700\u8981\u4efb\u4f55\u8df3\u7ebf\u7684\u6761\u4ef6\u4e0b\uff0c\u76f4\u63a5\u4e0eArduino\u7ec4\u5408\u4f7f\u7528\u3002\u5176\u63a5\u53e3\u4e3aI2C\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u5b83\u8fde\u63a5\u5230\u6269\u5c55\u677f\u81ea\u5e26\u7684I2C\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528   \u6ce8\u610f\u63d0\u793a \n\n\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u4e86\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u6c14\u4f53\u6d53\u5ea6\u7684\u8fd1\u4f3c\u8d8b\u52bf, \u5b83\u5e76\u4e0d\u4ee3\u8868\u51c6\u786e\u771f\u5b9e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002\u7a7a\u6c14\u4e2d\u7279\u5b9a\u6210\u5206\u6d53\u5ea6\u7684\u68c0\u6d4b\u65e0\u6cd5\u901a\u8fc7\u5355\u4e00\u7684\u4f20\u611f\u5668\u5b9e\u73b0\uff0c\u901a\u5e38\u9700\u8981\u66f4\u52a0\u7cbe\u786e\u548c\u6602\u8d35\u7684\u8bbe\u5907\u3002\u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u6c14\u4f53\u6d53\u5ea6\u6570\u636e\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u60a8\u4f7f\u7528\u8fd9\u4e2a\u4f20\u611f\u5668\u3002", 
            "title": "\u4ea7\u54c1\u7b80\u4ecb"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_2", 
            "text": "", 
            "title": "\u5f00\u59cb\u4e4b\u524d"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_3", 
            "text": "\u6211\u4eec\u6781\u529b\u63a8\u8350\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\uff0c\u5148\u9605\u8bfb\u5982\u4e0b\u53c2\u8003\u8d44\u6599\u3002\u8fd9\u5c06\u5e2e\u52a9\u60a8\u4e86\u89e3\u66f4\u591a\u5173\u4e8eArduino\u548c\u6211\u4eec\u4ea7\u54c1\u7684\u76f8\u5173\u77e5\u8bc6\u3002\u800c\u4e14\u4f1a\u4f7f\u60a8\u5728\u4f7f\u7528\u5f00\u6e90\u786c\u4ef6\u65f6\u66f4\u5f97\u5fc3\u5e94\u624b\u3002   Arduino\u5165\u95e8\u6307\u5bfc  Grove\u7cfb\u7edf\u7b80\u4ecb  Base_Shield\u4f7f\u7528\u6307\u5357   \u9605\u8bfb\u5b8c\u4e0a\u8bc9\u8d44\u6599\u540e\u60a8\u5c06\u638c\u63e1\u5982\u4f55\u4f7f\u7528Base_Shield\u677f\u5361\u5c06Grove\u7cfb\u5217\u4ea7\u54c1\u4e0eArduino\u76f8\u8fde\u3002\u597d\u4e86\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01", 
            "title": "\u76f8\u5173\u9605\u8bfb"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_4", 
            "text": "\u8fd9\u4e2a\u6559\u7a0b\u5c06\u9700\u8981\u4f7f\u7528\u5230\u4e0b\u5217\u4ea7\u54c1\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u67e5\u9605\u6216\u8d2d\u4e70\u5bf9\u5e94\u4ea7\u54c1:   Arduino UNO R3  \u6216\u8005  Seeeduino v4  Base Shield  Grove - Multichannel Gas Sensor", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_5", 
            "text": "pin\u540d\u79f0  \u76f8\u5173\u63cf\u8ff0      GND  \u63a5\u5730    VCC  3.3V - 5V    SDA  I2C data    SCL  I2C clock     \u8be5\u4f20\u611f\u5668\u7684\u4f9b\u7535\u7535\u538b\u4ecb\u4e8e3.3V\u548c5V\u4e4b\u95f4\uff0c\u53ef\u4e0e\u8f93\u51fa\u7535\u538b\u4e3a3.3V\u7684\u5355\u7247\u673a\u517c\u5bb9\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_6", 
            "text": "\u4e09\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u4f20\u611f\u5355\u5143  \u57fa\u4e8eATmega168PA  \u5e26\u6709\u53ef\u7f16\u7a0b\u5730\u5740\u7684I2C\u63a5\u53e3  \u53ef\u4ee5\u901a\u8fc7\u5173\u95ed\u52a0\u70ed\u529f\u8017\u964d\u4f4e\u529f\u7387  \u53ef\u68c0\u6d4b\u7684\u6c14\u4f53\u79cd\u7c7b\uff1a  \u4e00\u6c27\u5316\u78b3 CO 1-1000ppm  \u4e8c\u6c27\u5316\u6c2e NO2 0.05-10ppm  \u4e59\u9187 C2H6OH 10-500ppm  \u6c22 H2 1-1000ppm  \u6c28 NH3 1-500ppm  \u7532\u70f7 CH4  1000ppm  \u4e19\u70f7 C3H8  1000ppm  \u5f02\u4e01\u70f7 C4H10  1000ppm", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_7", 
            "text": "", 
            "title": "\u6a21\u5757\u56fe"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_8", 
            "text": "Arduino, linkit, wio", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_9", 
            "text": "\u9879\u76ee  \u72b6\u6001  \u6700\u5c0f\u503c  \u7279\u5f81\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u7535\u538b  -  3.1  3.3  5.25  V    \u6ce2\u7eb9  \u6700\u5927\u4f9b\u7535  -  80  100  mV    \u53d1\u70ed\u529f\u7387  -  -  -  88  mV    \u6700\u5927\u529f\u7387  -  -  -  150  mV    ADC\u7cbe\u5ea6  -  -  10  -  Bits    I2C\u901f\u5ea6  -  -  100  400  kHz    VIL  @I2C  -0.5  -  0.99  V    VIH  @I2C  2.31  -  5.25  V", 
            "title": "\u7535\u6c14\u7279\u6027"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#red", 
            "text": "Characteristic RED sensor  Symbol  Typ  Min  Max  Unit      Sensing resistance in air  R0  -  100  1500  k\u03a9    Typical CO detection range  FS  -  1  1000  ppm    Sensitivity factor  SR  -  1.2  50  -", 
            "title": "RED\u4f20\u611f\u5668\u6027\u80fd"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#ox", 
            "text": "Characteristic OX sensor  Symbol  Typ  Min  Max  Unit      Sensing resistance in air  R0  -  0.8  20  k\u03a9    Typical NO2 detection range  FS  -  0.05  10  ppm    Sensitivity factor  SR  -  2  -  -", 
            "title": "OX\u4f20\u611f\u5668\u6027\u80fd"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#nh3", 
            "text": "Characteristic NH3 sensor  Symbol  Typ  Min  Max  Unit      Sensing resistance in air  R0  -  10  1500  k\u03a9    Typical NH3 detection range  FS  -  1  300  ppm    Sensitivity factor  SR  -  1.5  15  -", 
            "title": "NH3\u4f20\u611f\u5668\u6027\u80fd"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_10", 
            "text": "!!!\u6ce8\u610f\n    \u4e3a\u4e86\u5f97\u5230\u7a33\u5b9a\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u4f20\u611f\u5668\u9700\u8981\u9884\u52a0\u70ed\u5341\u5206\u949f\u4ee5\u4e0a\u3002  \u786c\u4ef6\u8fde\u63a5\u56fe:  1.\u5c06 Grove - Multichannel Gas Sensor \u548c Seeeduino\u6309\u7167\u4e0b\u56fe\u65b9\u5f0f\u76f8\u8fde.   \u4e0a\u4f20\u4ee3\u7801:  \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002  \u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002  2.\u4e0b\u8f7d  Arduino Library   Grove/Xadow firmware  \u7136\u540e\u6dfb\u52a0\u5230Arduino\u5e93\u6587\u4ef6\u4e2d\u3002  3.\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f:File -  Example -  Mutichannel_Gas_Sensor-  ReadSensorValue_Grove.  ReadSensorValue_Grove \u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a  // Read Data from Grove - Multichannel Gas Sensor  #include   Wire.h  #include   MutichannelGasSensor.h  void   setup ()  { \n     Serial . begin ( 115200 );    // start serial for output \n     Serial . println ( power on! ); \n     gas . begin ( 0x04 ); //the default I2C address of the slave is 0x04 \n     gas . powerOn (); \n     Serial . print ( Firmware Version =  ); \n     Serial . println ( gas . getVersion ());  }  void   loop ()  { \n     float   c ; \n\n     c   =   gas . measure_NH3 (); \n     Serial . print ( The concentration of NH3 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_CO (); \n     Serial . print ( The concentration of CO is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_NO2 (); \n     Serial . print ( The concentration of NO2 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_C3H8 (); \n     Serial . print ( The concentration of C3H8 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_C4H10 (); \n     Serial . print ( The concentration of C4H10 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_CH4 (); \n     Serial . print ( The concentration of CH4 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_H2 (); \n     Serial . print ( The concentration of H2 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_C2H5OH (); \n     Serial . print ( The concentration of C2H5OH is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     delay ( 1000 );  }   4.\u4e0a\u4f20\u4ee3\u7801\u3002\u8bf7\u8bb0\u5f97\u5728Arduino\u8f6f\u4ef6\u7684 \u5de5\u5177 | \u5f00\u53d1\u677f\u4e2d\u52fe\u9009\u5bf9\u5e94\u7684\u677f\u5361\uff0c\u672c\u4f8b\u7a0b\u4f7f\u7528\u7684\u662fSeeeduino Uno\uff0c\u540c\u65f6\u8bf7\u9009\u62e9\u6b63\u786e\u7684\u4e32\u53e3\u3002  \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08ctrl+shift+M\uff09\uff0c\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u6765\u81ea\u4f20\u611f\u5668\u7684\u6570\u636e\u4e86.    Tip   \u66f4\u591a\u7684\u5173\u4e8eGrove\u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u53c2\u8003  Grove System", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_11", 
            "text": "\u8be5Grove\u6a21\u5757\u6709\u4e00\u4e2aATmega168 MCU \u51fa\u5382\u56fa\u4ef6\u3002\u56fa\u4ef6\u5df2\u7ecf\u4e8e2016\u5e7411\u670811\u66f4\u65b0\u5230\u4e86V2.0\u7248\u672c\u3002\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u68c0\u6d4b\u60a8\u5f53\u524d\u7684\u56fa\u4ef6\u7248\u672c\u3002  // Get firmware version of Grove Multichannel Gas Sensor  #include   Wire.h  #include   MutichannelGasSensor.h  #define SENSOR_ADDR     0X04         // default to 0x04  void   setup ()  { \n     Serial . begin ( 115200 ); \n     gas . begin ( SENSOR_ADDR ); \n\n     unsigned   char   version   =   gas . getVersion (); \n     Serial . print ( Version =  ); \n     Serial . println ( version );      }  void   loop ()  { \n     // nothing to do  }   \u5982\u679c\u68c0\u6d4b\u7ed3\u679c\u60a8\u7684\u56fa\u4ef6\u7248\u672c\u662fV1\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u66f4\u65b0\u56fa\u4ef6\u5230V2\u4ee5\u83b7\u53d6\u66f4\u7a33\u5b9a\u7684\u6570\u636e\u3002  \u4e3a\u4e86\u66f4\u65b0\u56fa\u4ef6\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7d20\u6750,   An Arduino UNO/Seeeduino V3/  6 \u6839\u675c\u90a6\u7ebf  \u70d9\u94c1   \u5728\u677f\u5361\u7684\u80cc\u9762\u7559\u6709ICSP\u710a\u76d8\uff0c\u60a8\u9700\u8981\u5c06\u8fd9\u4e9b\u710a\u76d8\u4e0eArduino\u677f\u5b50\u76f8\u8fde\u3002\u7ba1\u811a\u5b9a\u4e49\u5982\u4e0b\u8868\uff0c\u8fde\u63a5\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\u3002     Sensor  Arduino      MISO  D12    SCK  D13    NRST  D10    GND  GND    MOSI  D11    VCC  5V      \u8fde\u63a5\u597d\u4e4b\u540e\uff0c\u8bf7\u6253\u5f00\u60a8Arduino\u793a\u4f8b\u4e2d\u7684  UpdateFrimware  , \u8fd0\u884c\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002\u60a8\u5c06\u770b\u5230\u4e00\u4e9b\u6253\u5370\u7684\u4fe1\u606f\u3002  \u8f93\u5165\u4e00\u4e2a \u201c g \u201d\u6765\u5f00\u59cb\u70e7\u5f55\u3002", 
            "title": "\u66f4\u65b0\u56fa\u4ef6"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_12", 
            "text": "\u5982\u679c\u60a8\u603b\u662f\u5f97\u5230\u4e00\u4e9b\u4e0d\u53ef\u9760\u7684\u6570\u636e\uff0c\u8bf7\u5c1d\u8bd5\u6821\u51c6\u4f20\u611f\u5668\u3002\u6253\u5f00\u793a\u4f8b\u4e2d\u7684  calibration  ,\u4e0a\u4f20\u81f3\u60a8\u7684Arduino\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u6821\u51c6\u7684\u76f8\u5173\u4fe1\u606f\u3002   Note   \u5728\u4f20\u611f\u5668\u51fa\u5382\u524d\u5df2\u7ecf\u6821\u51c6\u8fc7\u4e86\uff0c\u5982\u679c\u60a8\u60f3\u8981\u91cd\u65b0\u6821\u51c6\uff0c\u8bf7\u786e\u4fdd\u6821\u51c6\u65f6\u7a7a\u6c14\u73af\u5883\u662f\u65b0\u9c9c\u6e05\u65b0\u7684\u3002\u6821\u51c6\u5927\u81f4\u9700\u8981\u51e0\u5206\u949f\u5230\u534a\u5c0f\u65f6\u4e0d\u7b49\u7684\u65f6\u95f4\u3002", 
            "title": "\u6821\u51c6"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_13", 
            "text": "[\u539f\u7406\u56fe]    Grove - Multichannel Gas Sensor v1.0 sch  [PCB\u56fe]   Grove - Multichannel Gas Sensor eagle files  [\u5e93\u6587\u4ef6]   Arduino Library   Grove/Xadow firmware  [\u82af\u7247\u6570\u636e\u624b\u518c]   MiCS-6814 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#faq", 
            "text": "Q1. \u5982\u4f55\u6539\u53d8\u6a21\u5757\u7684I2C\u5730\u5740   A1. \u6253\u5f00\u793a\u4f8b\u4e2d\u540d\u4e3aI2C_Address\u7684\u4f8b\u7a0b\uff0c\u8fd0\u884c\u5b83\u3002     Q2. \u6211\u6539\u4e86I2C\u5730\u5740\u4f46\u662f\u4e0d\u5c0f\u5fc3\u5fd8\u4e86   *A2. \u522b\u62c5\u5fc3\uff0c\u8fd0\u884c\u793a\u4f8b\u4e2d\u540d\u4e3a factory_setting\u7684\u4f8b\u7a0b\uff0c\u56de\u5230\u51fa\u5382\u72b6\u6001\u3002 *      Tip   \u5982\u679c\u60a8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u652f\u6301\uff0c\u8bf7\u8054\u7cfb\u4e0b\u9762\u7684\u90ae\u7bb1\uff0c\u6211\u4eec\u671f\u5f85\u5e76\u6b22\u8fce\u60a8\u7684\u54a8\u8be2\uff1a", 
            "title": "FAQ"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/", 
            "text": "Grove - Piezo Vibration\u4f20\u611f\u5668\u9002\u7528\u4e8e\u5f39\u6027\uff0c\u632f\u52a8\uff0c\u51b2\u51fb\u548c\u89e6\u611f\u7684\u6d4b\u91cf\u3002\u8be5\u6a21\u5757\u57fa\u4e8ePZT\u8584\u819c\u4f20\u611f\u5668LDT0-028\u3002\u5f53\u4f20\u611f\u5668\u6765\u56de\u79fb\u52a8\u65f6\uff0c\u5176\u4e2d\u7684\u7535\u538b\u6bd4\u8f83\u5668\u5c06\u4ea7\u751f\u4e00\u5b9a\u7684\u7535\u538b\u3002\u5bbd\u52a8\u6001\u8303\u56f4\uff080.001Hz\u301c1000MHz\uff09\u4fdd\u8bc1\u4e86\u826f\u597d\u7684\u6d4b\u91cf\u6027\u80fd\u3002\u5e76\u4e14\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u7528\u87ba\u4e1d\u8c03\u6574\u677f\u4e0a\u7535\u4f4d\u5668\u6765\u8c03\u6574\u5176\u7075\u654f\u5ea6\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u6807\u51c6Grove\u63a5\u53e3\n\n\n\u5bbd\u52a8\u6001\u6d4b\u91cf\u8303\u56f4\uff1a0.1Hz~180Hz\n\n\n\u6d4b\u91cf\u7075\u654f\u5ea6\u53ef\u8c03\n\n\n\u9ad8\u5ea6\u611f\u77e5\u5f3a\u70c8\u51b2\u51fb\n\n\n\n\n\n\nTip\n\n\n\u66f4\u591a\u5173\u4e8eGrove\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u5e73\u53f0\u652f\u6301\n\n\n\n\nArduino\nRaspberry\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u6d17\u8863\u673a\u632f\u52a8\u68c0\u6d4b\n\n\n\u4f4e\u529f\u8017\u5524\u9192\u5f00\u5173\n\n\n\u4f4e\u6210\u672c\u632f\u52a8\u611f\u5e94\n\n\n\u6c7d\u8f66\u8b66\u62a5\u7cfb\u7edf\n\n\n\u8eab\u4f53\u8fd0\u52a8\u68c0\u6d4b\n\n\n\u5b89\u5168\u7cfb\u7edf\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u9002\u7528 \nArduino\n\n\n\u7269\u7406\u8fde\u63a5\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5411\u60a8\u5c55\u793aGrove - Piezo Vibration\u4f20\u611f\u5668\u5982\u4f55\u5de5\u4f5c\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Piezo Vibration\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\n\n\n\n\n\n\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0cGrove - Piezo Vibration\u4f20\u611f\u5668\u8f93\u51fa\u903b\u8f91\u9ad8\u7535\u5e73\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55Arduino\u5f15\u811a\u6765\u8bfb\u53d6\u6570\u636e\u3002\u4ee5\u4e0b\u662f\u538b\u7535\u632f\u52a8\u4f20\u611f\u5668\u63a7\u5236LED\u7684\u793a\u4f8b\u3002\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u8f93\u51fa\u903b\u8f91\u9ad8\u4fe1\u53f7\uff08\u7075\u654f\u5ea6\u53ef\u901a\u8fc7\u8c03\u8282\u7535\u4f4d\u5668\u6765\u66f4\u6539\uff09\uff0cLED\u4eae\u8d77\u3002\n\n\n\n\n\u6ce8\u610f\n\n\u5f53\u901a\u8fc7\u987a\u65f6\u9488\u8c03\u8282\u7535\u4f4d\u5668\u6765\u589e\u52a0\u9608\u503c\u7535\u538b\u65f6\uff0c\u5373\u4f7f\u539f\u59cb\u8f93\u51fa\u5e94\u8be5\u4e3a\u9ad8\u7535\u5e73\uff0c\u4e5f\u53ef\u80fd\u6700\u7ec8\u8f93\u51fa\u4f4e\u7535\u5e73\u3002\n\n\n\n\n\n\n\u901a\u8fc74 pin\u7684Grove\u63a5\u53e3\u5c06\u4f20\u611f\u5668\u6a21\u5757\u548c\u6269\u5c55\u677f\u7684**A0** \u53e3\u76f8\u8fde\u3002\u6211\u4eec\u4f7f\u7528**\u6570\u5b57\u811a pin13 \u8054\u901a\u7684\u677f\u8f7dLED** \u6765\u4f5c\u4e3a\u8f93\u51fa\u3002\n\n\n\u5c06 the Grove - Basic Shield \u63d2\u5165 Arduino.\n\n\n\u901a\u8fc7USB\u6570\u636e\u7ebf\u5c06Arduino \u8fde\u63a5\u5230PC\u3002\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u5728Arduino \u4e2d\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u5c06\u4e0b\u5217\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230\u8fd9\u4e2a\u7a7a\u767d\u7684\u6587\u4ef6\u4e2d\u3002\n\n\n\n\nconst int ledPin=13;\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorValue = analogRead(A0);\n    Serial.println(sensorValue);\n    delay(1000);\n    if(sensorValue==1023)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n}\n\n\n- \u89e6\u6478\u538b\u7535\u4f20\u611f\u5668\u4f7f\u5176\u632f\u52a8\uff0c\u5f53\u7136\uff0c\u4efb\u4f55\u65b9\u5f0f\u4f7f\u5176\u632f\u52a8\u90fd\u53ef\u4ee5\u3002\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0cLED\u5c06\u4eae\u8d77\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u67e5\u770b\u4f20\u611f\u5668\u8f93\u51fa\u3002\n\n\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u5b57\u5f15\u811a\uff0c\u4ee5\u6269\u5c55\u677f\u4e0a\u7684D5\u4e3a\u4f8b\uff0c\u5e76\u5c06LED\u8fde\u63a5\u5230\u5f15\u811a13\u3002\n\n\n\n\nconst int ledPin=13;\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorState = digitalRead(5);\n    Serial.println(sensorState);\n    delay(1000);\n    if(sensorState == HIGH)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n}\n\n\n\n\n\u4f7f\u7528\u4e8e Raspberry Pi \uff08\u6811\u8393\u6d3e\uff09\n\n\n\u7269\u7406\u8fde\u63a5\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - Piezo Vibration\n\n\nGrovePi_Plus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\n\n\n\n\n\n\n\n\u6839\u636e \n\u6307\u5357\n \u6765\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\n\n\n\u901a\u8fc7Grove\u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230grovepi+ \u6269\u5c55\u677f\u7684 A0 \u7aef\u53e3\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\u4e0b\uff1a\n\n\n\n\n    \u8f6c\u6362\u8def\u5f84\u5230\u60a8\u7684\u5bf9\u5e94\u76ee\u5f55   cd yourpath/GrovePi/Software/Python/\n\n\n-   \u4ee3\u7801\u5982\u4e0b\uff1a\n\n    nano grove_piezo_vibration_sensor.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Piezo Vibration Sensor to analog port A0\n    # OUT,NC,VCC,GND\n    piezo = 0\n\n    grovepi.pinMode(piezo,\nINPUT\n)\n\n    while True:\n        try:\n            # When vibration is detected, the sensor outputs a logic high signal\n            print grovepi.analogRead(piezo)\n            time.sleep(.5)\n\n        except IOError:\n            print \nError\n\n\n\n\n\n\n\u8fd0\u884c\u793a\u4f8b\n\n    sudo python grove_piezo_vibration_sensor.py\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u56fe]\n \nGrove - Piezo Vibration Sensor Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nGrove - Piezo Vibration Sensor Schematic PDF File\n\n\n[PCB\u56fePDF]\n \nGrove - Piezo Vibration Sensor PCB PDF File\n\n\n[\u6570\u636e\u624b\u518c]\n \nPiezo Vibration Sensor Datasheet", 
            "title": "Grove-Piezo_Vibration_Sensor"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_1", 
            "text": "\u6807\u51c6Grove\u63a5\u53e3  \u5bbd\u52a8\u6001\u6d4b\u91cf\u8303\u56f4\uff1a0.1Hz~180Hz  \u6d4b\u91cf\u7075\u654f\u5ea6\u53ef\u8c03  \u9ad8\u5ea6\u611f\u77e5\u5f3a\u70c8\u51b2\u51fb    Tip  \u66f4\u591a\u5173\u4e8eGrove\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_2", 
            "text": "Arduino\nRaspberry", 
            "title": "\u5e73\u53f0\u652f\u6301"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_3", 
            "text": "\u6d17\u8863\u673a\u632f\u52a8\u68c0\u6d4b  \u4f4e\u529f\u8017\u5524\u9192\u5f00\u5173  \u4f4e\u6210\u672c\u632f\u52a8\u611f\u5e94  \u6c7d\u8f66\u8b66\u62a5\u7cfb\u7edf  \u8eab\u4f53\u8fd0\u52a8\u68c0\u6d4b  \u5b89\u5168\u7cfb\u7edf", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#arduino", 
            "text": "", 
            "title": "\u9002\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_5", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5411\u60a8\u5c55\u793aGrove - Piezo Vibration\u4f20\u611f\u5668\u5982\u4f55\u5de5\u4f5c\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Piezo Vibration  Base Shield           \u9a6c\u4e0a\u8ba2\u8d2d  \u9a6c\u4e0a\u8ba2\u8d2d  \u9a6c\u4e0a\u8ba2\u8d2d     \u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0cGrove - Piezo Vibration\u4f20\u611f\u5668\u8f93\u51fa\u903b\u8f91\u9ad8\u7535\u5e73\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55Arduino\u5f15\u811a\u6765\u8bfb\u53d6\u6570\u636e\u3002\u4ee5\u4e0b\u662f\u538b\u7535\u632f\u52a8\u4f20\u611f\u5668\u63a7\u5236LED\u7684\u793a\u4f8b\u3002\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u8f93\u51fa\u903b\u8f91\u9ad8\u4fe1\u53f7\uff08\u7075\u654f\u5ea6\u53ef\u901a\u8fc7\u8c03\u8282\u7535\u4f4d\u5668\u6765\u66f4\u6539\uff09\uff0cLED\u4eae\u8d77\u3002   \u6ce8\u610f \n\u5f53\u901a\u8fc7\u987a\u65f6\u9488\u8c03\u8282\u7535\u4f4d\u5668\u6765\u589e\u52a0\u9608\u503c\u7535\u538b\u65f6\uff0c\u5373\u4f7f\u539f\u59cb\u8f93\u51fa\u5e94\u8be5\u4e3a\u9ad8\u7535\u5e73\uff0c\u4e5f\u53ef\u80fd\u6700\u7ec8\u8f93\u51fa\u4f4e\u7535\u5e73\u3002   \u901a\u8fc74 pin\u7684Grove\u63a5\u53e3\u5c06\u4f20\u611f\u5668\u6a21\u5757\u548c\u6269\u5c55\u677f\u7684**A0** \u53e3\u76f8\u8fde\u3002\u6211\u4eec\u4f7f\u7528**\u6570\u5b57\u811a pin13 \u8054\u901a\u7684\u677f\u8f7dLED** \u6765\u4f5c\u4e3a\u8f93\u51fa\u3002  \u5c06 the Grove - Basic Shield \u63d2\u5165 Arduino.  \u901a\u8fc7USB\u6570\u636e\u7ebf\u5c06Arduino \u8fde\u63a5\u5230PC\u3002", 
            "title": "\u7269\u7406\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_6", 
            "text": "\u5728Arduino \u4e2d\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u5c06\u4e0b\u5217\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230\u8fd9\u4e2a\u7a7a\u767d\u7684\u6587\u4ef6\u4e2d\u3002   const int ledPin=13;\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorValue = analogRead(A0);\n    Serial.println(sensorValue);\n    delay(1000);\n    if(sensorValue==1023)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n} \n- \u89e6\u6478\u538b\u7535\u4f20\u611f\u5668\u4f7f\u5176\u632f\u52a8\uff0c\u5f53\u7136\uff0c\u4efb\u4f55\u65b9\u5f0f\u4f7f\u5176\u632f\u52a8\u90fd\u53ef\u4ee5\u3002\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0cLED\u5c06\u4eae\u8d77\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u67e5\u770b\u4f20\u611f\u5668\u8f93\u51fa\u3002    \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u5b57\u5f15\u811a\uff0c\u4ee5\u6269\u5c55\u677f\u4e0a\u7684D5\u4e3a\u4f8b\uff0c\u5e76\u5c06LED\u8fde\u63a5\u5230\u5f15\u811a13\u3002   const int ledPin=13;\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorState = digitalRead(5);\n    Serial.println(sensorState);\n    delay(1000);\n    if(sensorState == HIGH)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n}", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#raspberry-pi", 
            "text": "", 
            "title": "\u4f7f\u7528\u4e8e Raspberry Pi \uff08\u6811\u8393\u6d3e\uff09"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_7", 
            "text": "\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Raspberry pi  Grove - Piezo Vibration  GrovePi_Plus           \u9a6c\u4e0a\u8ba2\u8d2d  \u9a6c\u4e0a\u8ba2\u8d2d  \u9a6c\u4e0a\u8ba2\u8d2d      \u6839\u636e  \u6307\u5357  \u6765\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002  \u901a\u8fc7Grove\u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230grovepi+ \u6269\u5c55\u677f\u7684 A0 \u7aef\u53e3\u3002", 
            "title": "\u7269\u7406\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_8", 
            "text": "\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\u4e0b\uff1a       \u8f6c\u6362\u8def\u5f84\u5230\u60a8\u7684\u5bf9\u5e94\u76ee\u5f55   cd yourpath/GrovePi/Software/Python/ \n-   \u4ee3\u7801\u5982\u4e0b\uff1a     nano grove_piezo_vibration_sensor.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Piezo Vibration Sensor to analog port A0\n    # OUT,NC,VCC,GND\n    piezo = 0\n\n    grovepi.pinMode(piezo, INPUT )\n\n    while True:\n        try:\n            # When vibration is detected, the sensor outputs a logic high signal\n            print grovepi.analogRead(piezo)\n            time.sleep(.5)\n\n        except IOError:\n            print  Error    \u8fd0\u884c\u793a\u4f8b     sudo python grove_piezo_vibration_sensor.py", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_9", 
            "text": "[Eagle\u56fe]   Grove - Piezo Vibration Sensor Eagle File  [\u539f\u7406\u56fePDF]   Grove - Piezo Vibration Sensor Schematic PDF File  [PCB\u56fePDF]   Grove - Piezo Vibration Sensor PCB PDF File  [\u6570\u636e\u624b\u518c]   Piezo Vibration Sensor Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Actuator/", 
            "text": "Grove - \u6267\u884c\u5668\u5305\u62ec\u7535\u673a\u9a71\u52a8\u5668\uff0cLED\u663e\u793a\u5c4f\uff0c\u7ee7\u7535\u5668\uff0c\u626c\u58f0\u5668\uff0c\u8702\u9e23\u5668\u7b49\u6a21\u5757\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u6267\u884c\u5668\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGrove-MP3_v2.0", 
            "title": "Actuator"
        }, 
        {
            "location": "/Actuator/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u6267\u884c\u5668\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Grove-MP3_v2.0", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove-MP3_v2.0/", 
            "text": "\u7b80\u4ecb\n\n\nGrove \u2013 MP3 V2.0\u662f\u4e00\u6b3e\u5916\u5f62\u5c0f\u5de7\uff0c\u8bbe\u8ba1\u7d27\u51d1\u7684\u97f3\u9891\u6a21\u5757\u3002\u672c\u6a21\u5757\u652f\u6301\u591a\u79cd\u683c\u5f0f\u7684\u64ad\u653e\uff0cMP3, WAV\u4ee5\u53caWMV\u706f\u3002\u5e76\u652f\u6301\u591a\u79cd\u64ad\u653e\u6a21\u5f0f\uff0c\u968f\u673a\u64ad\u653e\uff0c\u5faa\u73af\u64ad\u653e\u4ee5\u53ca\u5355\u66f2\u5faa\u73af\u7b49\u3002Grove \u2013 MP3 V2\u91c7\u7528\u4e32\u53e3\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8e\u4efb\u4f55\u5177\u6709\u4e32\u53e3\u7684\u4e3b\u63a7\u677f\uff0c\u4f8b\u5982Arduino, Raspberry, LaunchPad\u7b49\u4e3b\u6d41\u7684\u5f00\u6e90\u786c\u4ef6\u5f00\u53d1\u677f\u3002\u53e6\u5916\uff0c\u6a21\u5757\u4e0a\u96c6\u6210\u6709micro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54\uff0c\u4e3a\u4f60\u97f3\u9891\u65b9\u9762\u7684\u5e94\u7528\u5e26\u6765\u6781\u5927\u7684\u4fbf\u5229\u3002\n\n\n\n\n\u7248\u672c\u66f4\u65b0\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7248\u672c\n\n\n\u53d1\u5e03\u65f6\u95f4\n\n\n\u5f53\u524d\u652f\u6301\u72b6\u6001\n\n\n\n\n\n\n\n\n\n\nVersion 1.0\n\n\n2013 04 28\n\n\n\u652f\u6301\n\n\n\n\n\n\nVersion 2.0\n\n\n2015 11 15\n\n\n\u652f\u6301\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5185\u7f6e\u57fa\u672c\u7684\u97f3\u9891\u64cd\u4f5c\n\n\n\u534a\u8f7dmicro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54\n\n\n\u591a\u79cd\u91c7\u6837\u7387\u652f\u6301\uff0c8/11.025/12/16/22.05/24/32/44.1/48K\n\n\n24\u4f4dDAC\u9ad8\u7cbe\u5ea6\u8f93\u51fa\uff0c\u6700\u592790dB\u52a8\u6001\u8f93\u51fa@85dB SNR\n\n\n\u652f\u6301\u591a\u79cd\u97f3\u9891\u683c\u5f0f\uff0cMP3, WAV, WMV\u706f\n\n\n10\u79cd\u5747\u8861\u6a21\u5f0f\n\n\n\n\n\n\nNote\n\n\n\n\n\u66f4\u591a\u5173\u4e8eGrove\u63a5\u53e3\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u4e0b\u9762\u94fe\u63a5 \nGrove System\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u9002\u5408\u5404\u79cd\u97f3\u9891\u5e94\u7528\u7684\u4e2d\u95f4\u89e3\u51b3\u65b9\u6848.\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u6570\u503c\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\n\n\n5 V (DC)\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41 (\u65e0\u4fe1\u53f7\u8f93\u51fa\u65f6)\n\n\n 15 mA\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n 40 mA\n\n\n\n\n\n\n\u4e3b\u63a7\u82af\u7247\n\n\nKT403A \n(datasheet)\n\n\n\n\n\n\n\u82af\u7247\u8f93\u51fa\u7535\u538b\n\n\n3.3 V\n\n\n\n\n\n\n\u82af\u7247\u8f93\u51fa\u7535\u6d41\n\n\n100mA(at Max.)\n\n\n\n\n\n\n\u652f\u6301\u97f3\u9891\u683c\u5f0f\n\n\nMP3, WAV, WMA\n\n\n\n\n\n\n\u652f\u6301SD\u5361\u6700\u5927\u5bb9\u91cf\n\n\n32 GB\n\n\n\n\n\n\n\u91c7\u6837\u9891\u7387\n\n\n8 / 11.025 / 12 / 16 / 22.05 / 24 / 32 / 44.1 / 48(KHz)\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\nArduino, Raspberrypi, bbg, linkitone\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\n\u7ec4\u4ef6\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - MP3 v2.0\n\n\n1PC\n\n\n\n\n\n\nGrove - Universal Cable\n\n\n1PC\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u9700\u8981\u7684\u7d20\u6750\n\n\n\n\nSeeeduino \u00d7 1\n\n\nGrove - Base Shield v2 \u00d7 1\n\n\nGrove - MP3 v2.0 \u00d7 1\n\n\n\u88c5\u6709\u97f3\u9891\u6587\u4ef6\u7684SD\u5361 \u00d7 1\n\n\nUSB \u9002\u914d\u7ebf (type A to micro type-B) \u00d7 1\n\n\n\u5e26\u67093.5mm\u63a5\u53e3\u7684\u8033\u673a\u6216\u97f3\u7bb1 \u00d7 1\n\n\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u70b9\u51fb\u4e0b\u9762\u7684\u6307\u5357\u6765\u642d\u5efa\u597d\u60a8\u7684IDE\u7f16\u8bd1\u5de5\u5177:.\n\n\nWindows\u7cfb\u7edfIDE\u6307\u5357\n\n\nMac OS X IDE\u6307\u5357\n\n\n\n\n\u63d0\u793a\n\n\u6211\u4eec\u9009\u53d6\u7684Seeeduino\u4f5c\u4e3a\u6b64\u5b9e\u4f8b\u7684\u5f00\u53d1\u677f\uff0c\u4f46\u662f\u60a8\u4e5f\u53ef\u4ee5\u9009\u7528Arduino\u7684\u5f00\u53d1\u677f\u6765\u5b9e\u73b0\u6240\u6709\u529f\u80fd\uff0c\u4ed6\u4eec\u662f\u5b8c\u5168\u517c\u5bb9\u7684\u3002\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\u56fe\n\n\n\n\n\u8f6f\u4ef6\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\n\n\nTip\n\n\n\n\n\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n\n\n\n\n\u70e7\u5f55\u4f8b\u7a0b\n\n\n\n\n\u5230 \n\u8fd9\u91cc\n \u4e0b\u8f7d\u9a71\u52a8\u5e93\u3002\n\n\n\u628a\u4e0b\u8f7d\u7684\u9a71\u52a8\u5e93\u653e\u5230Arduino IDE\u7684 \nlibraries\n \u6587\u4ef6\u5939\n\n\n\u6253\u5f00MP3_Play_Test\u7684example\uff0c\u628a\u4ee3\u7801\u70e7\u5f55\u5230Seeeduino\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08Ctrl + Shift + M\uff09\uff0c\u53d1\u9001\u547d\u4ee4\u64ad\u653e\u97f3\u4e50\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u786c\u4ef6\u539f\u7406\u56fe]\n Hardware \nSchematic files\n\n\n[\u5e93]\nLibraries\n on Github.\n\n\n[\u6570\u636e\u624b\u518c]\n KT403A \nDatasheet\n (part)", 
            "title": "Grove-MP3_v2.0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_1", 
            "text": "Grove \u2013 MP3 V2.0\u662f\u4e00\u6b3e\u5916\u5f62\u5c0f\u5de7\uff0c\u8bbe\u8ba1\u7d27\u51d1\u7684\u97f3\u9891\u6a21\u5757\u3002\u672c\u6a21\u5757\u652f\u6301\u591a\u79cd\u683c\u5f0f\u7684\u64ad\u653e\uff0cMP3, WAV\u4ee5\u53caWMV\u706f\u3002\u5e76\u652f\u6301\u591a\u79cd\u64ad\u653e\u6a21\u5f0f\uff0c\u968f\u673a\u64ad\u653e\uff0c\u5faa\u73af\u64ad\u653e\u4ee5\u53ca\u5355\u66f2\u5faa\u73af\u7b49\u3002Grove \u2013 MP3 V2\u91c7\u7528\u4e32\u53e3\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8e\u4efb\u4f55\u5177\u6709\u4e32\u53e3\u7684\u4e3b\u63a7\u677f\uff0c\u4f8b\u5982Arduino, Raspberry, LaunchPad\u7b49\u4e3b\u6d41\u7684\u5f00\u6e90\u786c\u4ef6\u5f00\u53d1\u677f\u3002\u53e6\u5916\uff0c\u6a21\u5757\u4e0a\u96c6\u6210\u6709micro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54\uff0c\u4e3a\u4f60\u97f3\u9891\u65b9\u9762\u7684\u5e94\u7528\u5e26\u6765\u6781\u5927\u7684\u4fbf\u5229\u3002", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_2", 
            "text": "\u4ea7\u54c1\u7248\u672c  \u53d1\u5e03\u65f6\u95f4  \u5f53\u524d\u652f\u6301\u72b6\u6001      Version 1.0  2013 04 28  \u652f\u6301    Version 2.0  2015 11 15  \u652f\u6301", 
            "title": "\u7248\u672c\u66f4\u65b0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_3", 
            "text": "\u5185\u7f6e\u57fa\u672c\u7684\u97f3\u9891\u64cd\u4f5c  \u534a\u8f7dmicro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54  \u591a\u79cd\u91c7\u6837\u7387\u652f\u6301\uff0c8/11.025/12/16/22.05/24/32/44.1/48K  24\u4f4dDAC\u9ad8\u7cbe\u5ea6\u8f93\u51fa\uff0c\u6700\u592790dB\u52a8\u6001\u8f93\u51fa@85dB SNR  \u652f\u6301\u591a\u79cd\u97f3\u9891\u683c\u5f0f\uff0cMP3, WAV, WMV\u706f  10\u79cd\u5747\u8861\u6a21\u5f0f    Note   \u66f4\u591a\u5173\u4e8eGrove\u63a5\u53e3\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u4e0b\u9762\u94fe\u63a5  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_4", 
            "text": "\u9002\u5408\u5404\u79cd\u97f3\u9891\u5e94\u7528\u7684\u4e2d\u95f4\u89e3\u51b3\u65b9\u6848.", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_5", 
            "text": "\u53c2\u6570  \u6570\u503c      \u8f93\u5165  5 V (DC)    \u5de5\u4f5c\u7535\u6d41 (\u65e0\u4fe1\u53f7\u8f93\u51fa\u65f6)   15 mA    \u5de5\u4f5c\u7535\u6d41   40 mA    \u4e3b\u63a7\u82af\u7247  KT403A  (datasheet)    \u82af\u7247\u8f93\u51fa\u7535\u538b  3.3 V    \u82af\u7247\u8f93\u51fa\u7535\u6d41  100mA(at Max.)    \u652f\u6301\u97f3\u9891\u683c\u5f0f  MP3, WAV, WMA    \u652f\u6301SD\u5361\u6700\u5927\u5bb9\u91cf  32 GB    \u91c7\u6837\u9891\u7387  8 / 11.025 / 12 / 16 / 22.05 / 24 / 32 / 44.1 / 48(KHz)", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_6", 
            "text": "Arduino, Raspberrypi, bbg, linkitone", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_7", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_8", 
            "text": "\u7ec4\u4ef6\u540d\u79f0  \u6570\u91cf      Grove - MP3 v2.0  1PC    Grove - Universal Cable  1PC", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_9", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_10", 
            "text": "Seeeduino \u00d7 1  Grove - Base Shield v2 \u00d7 1  Grove - MP3 v2.0 \u00d7 1  \u88c5\u6709\u97f3\u9891\u6587\u4ef6\u7684SD\u5361 \u00d7 1  USB \u9002\u914d\u7ebf (type A to micro type-B) \u00d7 1  \u5e26\u67093.5mm\u63a5\u53e3\u7684\u8033\u673a\u6216\u97f3\u7bb1 \u00d7 1", 
            "title": "\u9700\u8981\u7684\u7d20\u6750"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_11", 
            "text": "\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u70b9\u51fb\u4e0b\u9762\u7684\u6307\u5357\u6765\u642d\u5efa\u597d\u60a8\u7684IDE\u7f16\u8bd1\u5de5\u5177:.  Windows\u7cfb\u7edfIDE\u6307\u5357  Mac OS X IDE\u6307\u5357   \u63d0\u793a \n\u6211\u4eec\u9009\u53d6\u7684Seeeduino\u4f5c\u4e3a\u6b64\u5b9e\u4f8b\u7684\u5f00\u53d1\u677f\uff0c\u4f46\u662f\u60a8\u4e5f\u53ef\u4ee5\u9009\u7528Arduino\u7684\u5f00\u53d1\u677f\u6765\u5b9e\u73b0\u6240\u6709\u529f\u80fd\uff0c\u4ed6\u4eec\u662f\u5b8c\u5168\u517c\u5bb9\u7684\u3002", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_12", 
            "text": "", 
            "title": "\u786c\u4ef6\u8fde\u63a5\u56fe"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_13", 
            "text": "\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002   Tip   \u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_14", 
            "text": "\u5230  \u8fd9\u91cc  \u4e0b\u8f7d\u9a71\u52a8\u5e93\u3002  \u628a\u4e0b\u8f7d\u7684\u9a71\u52a8\u5e93\u653e\u5230Arduino IDE\u7684  libraries  \u6587\u4ef6\u5939  \u6253\u5f00MP3_Play_Test\u7684example\uff0c\u628a\u4ee3\u7801\u70e7\u5f55\u5230Seeeduino  \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08Ctrl + Shift + M\uff09\uff0c\u53d1\u9001\u547d\u4ee4\u64ad\u653e\u97f3\u4e50", 
            "title": "\u70e7\u5f55\u4f8b\u7a0b"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_15", 
            "text": "[\u786c\u4ef6\u539f\u7406\u56fe]  Hardware  Schematic files  [\u5e93] Libraries  on Github.  [\u6570\u636e\u624b\u518c]  KT403A  Datasheet  (part)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Display/", 
            "text": "\u8fd9\u91cc\u5217\u51fa\u4e86\u4e0eLCD\u6216LED\u663e\u793a\u76f8\u5173\u7684Grove\u6a21\u5757\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u663e\u793a\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "Display"
        }, 
        {
            "location": "/Display/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u663e\u793a\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Communication/", 
            "text": "\u8fd9\u91cc\u5217\u51fa\u4e86\u4e0e\u6709\u7ebf\u6216\u65e0\u7ebf\u901a\u4fe1\u76f8\u5173\u7684Grove\u6a21\u5757\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u901a\u4fe1\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "Communication"
        }, 
        {
            "location": "/Communication/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u901a\u4fe1\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Others/", 
            "text": "\u5176\u4ed6\u672a\u5217\u51fa\u7684\u5176\u4ed6Grove\u6a21\u5757\u5217\u5728\u6b64\u5904\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove Other Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "Others"
        }, 
        {
            "location": "/Others/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove Other Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/IoT/", 
            "text": "\u7269\u8054\u7f51\uff08IoT\uff09\u4ea7\u54c1\u5217\u5728\u8fd9\u91cc\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684IoT\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "IoT"
        }, 
        {
            "location": "/IoT/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684IoT\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/MakerPro/", 
            "text": "\u6df1\u5733\u5c31\u50cfMaker\u7684\u5929\u5802\u3002 \u4f5c\u4e3a\u4e00\u5bb6\u603b\u90e8\u4f4d\u4e8e\u6df1\u5733\u7684\u5f00\u6e90\u516c\u53f8\uff0cSeeedStudio\u5177\u6709\u4e3a\u4e16\u754c\u5404\u5730\u7684\u5236\u9020\u5546\u63d0\u4f9b\u6240\u6709\u6700\u4f73\u8d44\u6e90\u7684\u4f18\u52bf\u548c\u80fd\u529b\u3002 MakerPro\u4e0d\u662fSeeed\u5f00\u53d1\u4ea7\u54c1\u7684\u90e8\u5206\uff0c\u800c\u662f\u76f4\u63a5\u4ece\u6df1\u5733\u91c7\u8d2d\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684MakerPro\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\n2KM_Long_Range_RF_link_kits_w_encoder_and_decoder\n\n\nPiezo_Sensor-MiniSense_100", 
            "title": "MakerPro"
        }, 
        {
            "location": "/MakerPro/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684MakerPro\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   2KM_Long_Range_RF_link_kits_w_encoder_and_decoder  Piezo_Sensor-MiniSense_100", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/", 
            "text": "1.  \u7b80\u4ecb\n\n\n\n\n\u8fd9\u662f\u4e00\u6b3e\u8d85\u957f\u8ddd\u79bb\u7684433MHz RF\u901a\u4fe1\u6a21\u5757\u5957\u4ef6\uff0c\u901a\u4fe1\u8ddd\u79bb\u53ef\u8fbe2\u516c\u91cc\uff0c\u5305\u542b\u53d1\u5c04\u548c\u63a5\u6536\u4e24\u4e2a\u6a21\u5757\u3002\u6a21\u5757\u5185\u7f6eVCO, PLL\u6280\u672f\uff0c\u9891\u7387\u7a33\u5b9a\u4ee5\u53ca\u6297\u5e72\u6270\u80fd\u529b\u5f3a\u3002\u4f60\u53ef\u4ee5\u5728\u9700\u8981\u65e0\u7ebf\u6570\u636e\u4f20\u8f93\u548c\u8fdc\u7a0b\u63a7\u5236\u7b49\u5e94\u7528\u4f7f\u7528\u672c\u6a21\u5757\u3002\n\n\n\n\n2. \u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\u63a5\u6536\u5668\uff1a3\n5V\uff0c\u53d1\u5c04\u56683\n9V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n\u22642.5mA\uff08@5V\uff09\n\n\n\n\n\n\n\u5de5\u4f5c\u539f\u7406\n\n\n\"\u8d85\u5916\u5dee\uff08VCO,PLL)\n\n\n\n\n\n\n\u8c03\u5236\u65b9\u5f0f\n\n\nOOK/ASK\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u6bb5\n\n\n433.92MHz\n\n\n\n\n\n\n\u5e26\u5bbd\n\n\n1.5MHz\n\n\n\n\n\n\n\u7075\u654f\u5ea6\n\n\n-105dBm(50\u03a9)\n\n\n\n\n\n\n\u89e3\u7801\u65b9\u5f0f\n\n\nPT2272\n\n\n\n\n\n\n\u5929\u7ebf\u957f\u5ea6\n\n\n18cm\n\n\n\n\n\n\n\u6700\u5927\u901a\u4fe1\u8ddd\u79bb\n\n\n2Km\n\n\n\n\n\n\n\n\n3. \u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u65e0\u7ebf\u5f00\u5173\n\n\n\u8fdc\u7a0b\u4f20\u8f93\n\n\n\u65e0\u7ebf\u63a7\u5236\n\n\n\n\n4. \u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n5.\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\n\u8bf7\u6839\u636e\u4ee5\u4e0b \n\u6d41\u7a0b\n \u6765\u642d\u5efa\u7cfb\u7edf.\n\n\n\u8fde\u63a5\u7535\u6c60, \u6309\u94ae\u548c\u53d1\u5c04\u677f.\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u8bf7\u4f7f\u75283-5V\u7535\u6e90\uff01 9V\u7535\u6e90\u4f1a\u635f\u574f\u63a5\u6536\u677f.\n\n\n\u8fde\u63a5\u7535\u6c60, LEDs and \u63a5\u6536\u677f.\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\u4e0d\u8981\u628aRX \u6a21\u5757\u548c TX\u6a21\u5757\u9760\u7684\u5f88\u8fd1: \u8fd9\u5c06\u963b\u6b62\u4ed6\u4eec\u6b63\u5e38\u5de5\u4f5c\u3002 \u786e\u4fddRX\u6a21\u5757\u548cTX\u6a21\u5757\u8ddd\u79bb\u81f3\u5c111\u7c73\u3002\n\n\n\u5f53\u6211\u4eec\u6309\u53d1\u5c04\u673a\u4fa7\u7684\u6309\u94ae\u65f6\uff0c\u63a5\u6536\u673a\u4fa7\u7684\u76f8\u5173LED\u5c06\u88ab\u6253\u5f00\u3002\n\n\n\n\n\n\n6. \u8d44\u6e90\n\n\n\n\n\n\n\n\n[\u6d41\u7a0b]\n   \nTransmitter and receiver Setup Manual\n\n\n\n\n\n\n[\u6570\u636e\u624b\u518c]\n   \nDatasheet for PT2272 and PT2262", 
            "title": "2KM_Long_Range_RF_link_kits_w_encoder_and_decoder"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#1", 
            "text": "\u8fd9\u662f\u4e00\u6b3e\u8d85\u957f\u8ddd\u79bb\u7684433MHz RF\u901a\u4fe1\u6a21\u5757\u5957\u4ef6\uff0c\u901a\u4fe1\u8ddd\u79bb\u53ef\u8fbe2\u516c\u91cc\uff0c\u5305\u542b\u53d1\u5c04\u548c\u63a5\u6536\u4e24\u4e2a\u6a21\u5757\u3002\u6a21\u5757\u5185\u7f6eVCO, PLL\u6280\u672f\uff0c\u9891\u7387\u7a33\u5b9a\u4ee5\u53ca\u6297\u5e72\u6270\u80fd\u529b\u5f3a\u3002\u4f60\u53ef\u4ee5\u5728\u9700\u8981\u65e0\u7ebf\u6570\u636e\u4f20\u8f93\u548c\u8fdc\u7a0b\u63a7\u5236\u7b49\u5e94\u7528\u4f7f\u7528\u672c\u6a21\u5757\u3002", 
            "title": "1.  \u7b80\u4ecb"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#2", 
            "text": "\u53c2\u6570  \u503c      \u5de5\u4f5c\u7535\u538b  \u63a5\u6536\u5668\uff1a3 5V\uff0c\u53d1\u5c04\u56683 9V    \u5de5\u4f5c\u7535\u6d41  \u22642.5mA\uff08@5V\uff09    \u5de5\u4f5c\u539f\u7406  \"\u8d85\u5916\u5dee\uff08VCO,PLL)    \u8c03\u5236\u65b9\u5f0f  OOK/ASK    \u5de5\u4f5c\u9891\u6bb5  433.92MHz    \u5e26\u5bbd  1.5MHz    \u7075\u654f\u5ea6  -105dBm(50\u03a9)    \u89e3\u7801\u65b9\u5f0f  PT2272    \u5929\u7ebf\u957f\u5ea6  18cm    \u6700\u5927\u901a\u4fe1\u8ddd\u79bb  2Km", 
            "title": "2. \u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#3", 
            "text": "\u65e0\u7ebf\u5f00\u5173  \u8fdc\u7a0b\u4f20\u8f93  \u65e0\u7ebf\u63a7\u5236", 
            "title": "3. \u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#4", 
            "text": "", 
            "title": "4. \u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#5", 
            "text": "\u8bf7\u6839\u636e\u4ee5\u4e0b  \u6d41\u7a0b  \u6765\u642d\u5efa\u7cfb\u7edf.  \u8fde\u63a5\u7535\u6c60, \u6309\u94ae\u548c\u53d1\u5c04\u677f.    Note   \u8bf7\u4f7f\u75283-5V\u7535\u6e90\uff01 9V\u7535\u6e90\u4f1a\u635f\u574f\u63a5\u6536\u677f.  \u8fde\u63a5\u7535\u6c60, LEDs and \u63a5\u6536\u677f.      Warning   \u4e0d\u8981\u628aRX \u6a21\u5757\u548c TX\u6a21\u5757\u9760\u7684\u5f88\u8fd1: \u8fd9\u5c06\u963b\u6b62\u4ed6\u4eec\u6b63\u5e38\u5de5\u4f5c\u3002 \u786e\u4fddRX\u6a21\u5757\u548cTX\u6a21\u5757\u8ddd\u79bb\u81f3\u5c111\u7c73\u3002  \u5f53\u6211\u4eec\u6309\u53d1\u5c04\u673a\u4fa7\u7684\u6309\u94ae\u65f6\uff0c\u63a5\u6536\u673a\u4fa7\u7684\u76f8\u5173LED\u5c06\u88ab\u6253\u5f00\u3002", 
            "title": "5.\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#6", 
            "text": "[\u6d41\u7a0b]     Transmitter and receiver Setup Manual    [\u6570\u636e\u624b\u518c]     Datasheet for PT2272 and PT2262", 
            "title": "6. \u8d44\u6e90"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/", 
            "text": "MiniSense 100\u662f\u4e00\u79cd\u4f4e\u6210\u672c\u7684\u60ac\u81c2\u5f0f\u632f\u52a8\u4f20\u611f\u5668\uff0c\u4f20\u611f\u5668\u4e0a\u589e\u52a0\u4e86\u4e00\u4e2a\u8d28\u91cf\u5757\uff0c\u53ef\u5728\u4f4e\u9891\u4e0b\u63d0\u4f9b\u9ad8\u7075\u654f\u5ea6\u3002\u5f15\u811a\u8bbe\u8ba1\u6613\u4e8e\u5b89\u88c5\uff0c\u53ef\u710a\u63a5\u3002\u63d0\u4f9b\u6c34\u5e73\u548c\u5782\u76f4\u5b89\u88c5\u9009\u9879\u3002\u5bc6\u5c01\u4f20\u611f\u5668\u4ee5\u63d0\u9ad8RFI / EMI\u6291\u5236\u3002\u575a\u56fa\u8010\u7528\u7684\u67d4\u6027PVDF\u4f20\u611f\u5143\u4ef6\u53ef\u627f\u53d7\u9ad8\u51b2\u51fb\u3002\u4f20\u611f\u5668\u5177\u6709\u4f18\u5f02\u7684\u7ebf\u6027\u5ea6\u548c\u52a8\u6001\u8303\u56f4\uff0c\u53ef\u7528\u4e8e\u68c0\u6d4b\u8fde\u7eed\u632f\u52a8\u6216\u51b2\u51fb\u3002\u8bf7\u54a8\u8be2\u539f\u5382\u5982\u4f55\u4fee\u6539\u8d28\u91cf\u5757\u4ee5\u83b7\u5f97\u66ff\u4ee3\u9891\u7387\u54cd\u5e94\u548c\u7075\u654f\u5ea6\u9009\u62e9\u3002MiniSense 100\u4f5c\u4e3a\u60ac\u81c2\u6881\u52a0\u901f\u5ea6\u8ba1\uff0c\u5f53\u6c34\u5e73\u5b89\u88c5\u65f6\uff0c\u5782\u76f4\u5e73\u9762\u4e0a\u7684\u52a0\u901f\u5ea6\u4f1a\u7531\u4e8e\u8d28\u91cf\u5757\u800c\u4ea7\u751f\u5f2f\u66f2\u3002\u4f20\u611f\u5668\u5e94\u53d8\u4ea7\u751f\u538b\u7535\u54cd\u5e94\uff0c\u5176\u53ef\u4ee5\u88ab\u68c0\u6d4b\u4e3a\u4f20\u611f\u5668\u7684\u7535\u6781\u7684\u7535\u8377\u6216\u7535\u538b\u8f93\u51fa\u3002\u4f20\u611f\u5668\u4e5f\u53ef\u7528\u4e8e\u68c0\u6d4b\u8fde\u7eed\u6216\u8109\u51b2\u632f\u52a8\u6216\u51b2\u51fb\u3002\u5bf9\u4e8e\u4f4e\u4e8e\u4f20\u611f\u5668\u8c10\u632f\u9891\u7387\u7684\u6fc0\u53d1\u9891\u7387\uff0c\u5668\u4ef6\u4ea7\u751f\u7531\u201c\u57fa\u7ebf\u201d\u7075\u654f\u5ea6\u63a7\u5236\u7684\u7ebf\u6027\u8f93\u51fa\uff0c\u5171\u632f\u7684\u7075\u654f\u5ea6\u660e\u663e\u8f83\u9ad8\u3002\u4f20\u611f\u5668\u68c0\u6d4b\u4f4e\u9891\u8fd0\u52a8\u7684\u80fd\u529b\u53d7\u5230\u5916\u90e8\u7535\u8def\u7684\u5f3a\u70c8\u5f71\u54cd\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u4f4e\u6210\u672c\n\n\n\n\n\n\n\u60ac\u81c2\u5f0f\u632f\u52a8\u4f20\u611f\u5668\n\n\n\n\n\n\n\u4f4e\u9891\u7075\u654f\u5ea6\u9ad8\n\n\n\n\n\n\n\u4f20\u611f\u5668\u88ab\u5bc6\u5c01\u7528\u4e8e\u63d0\u9ad8RFI/EMI\u6291\u5236\n\n\n\n\n\n\n\u826f\u597d\u7684\u7ebf\u6027\u5ea6\u548c\u52a8\u6001\u8303\u56f4\n\n\n\n\n\n\n\u575a\u56fa\u8010\u7528\u7684\u67d4\u6027PVDF\u4f20\u611f\u5143\u4ef6\u53ef\u627f\u53d7\u9ad8\u51b2\u51fb\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u68c0\u6d4b\u8fde\u7eed\n\n\n\u8109\u51b2\u632f\u52a8\u6216\u51b2\u51fb\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\u5178\u578b\u6027\u80fd (25\u00b0C)\n\n\n\n\n\n\n \u53c2\u6570\n\n\n\n \u503c\n\n\n\n \u5355\u4f4d\n\n\n\n\n\n \u7535\u538b\u7075\u654f\u5ea6 (open-circuit, baseline)\n\n\n\n  1.1\n\n\n\n  V/g\n\n\n\n\n\n \u7535\u8377\u7075\u654f\u5ea6 (baseline)\n\n\n\n  260\n\n\n\n  pC/g\n\n\n\n\n\n \u5171\u632f\u9891\u7387\n\n\n\n  75\n\n\n\n  Hz\n\n\n\n\n\n \u7535\u538b\u7075\u654f\u5ea6 (open-circuit, at resonance)\n\n\n\n  6\n\n\n\n  V/g\n\n\n\n\n\n \u4e0a\u7ebf\u9891\u7387 (+3 dB)\n\n\n\n  42\n\n\n\n  Hz\n\n\n\n\n\n \u7ebf\u6027\n\n\n\n  +/-1\n\n\n\n  %\n\n\n\n\n\n \u7535\u5bb9\n\n\n\n  244\n\n\n\n  pF\n\n\n\n\n\n \u8017\u6563\u7cfb\u6570\n\n\n\n 0.018\n\n\n\n (none)\n\n\n\n\n\n \u60ef\u6027\u8d28\u91cf\n\n\n\n  0.3\n\n\n\n  gram\n\n\n\n\n\u73af\u5883\u6307\u6807\n\n\n\n\n\n\n \u53c2\u6570\n\n\n\n \u503c\n\n\n\n \u5355\u4f4d\n\n\n\n\n\n \u50a8\u5b58\u6e29\u5ea6\n\n\n\n  -40 to +80 deg C\n\n\n\n\n\n  \u5de5\u4f5c\u6e29\u5ea6\n\n\n\n  -20 to +60 deg C\n\n\n\n\n\n \u91cd\u91cf\n\n\n\n  Minisense 100H\n\n\n\n 0.5 gram\n\n\n\n\n\n  Minisense 100V\n\n\n\n 0.6 gram\n\n\n\n\n\u8d44\u6599\u4e0b\u8f7d\n\n\n\n\n\n\nPiezo Film Sensors Technical Manual\n\n\n\n\n\n\nMiniSense 100 Vibration Sensor Manual", 
            "title": "Piezo_Sensor-MiniSense_100"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_1", 
            "text": "\u4f4e\u6210\u672c    \u60ac\u81c2\u5f0f\u632f\u52a8\u4f20\u611f\u5668    \u4f4e\u9891\u7075\u654f\u5ea6\u9ad8    \u4f20\u611f\u5668\u88ab\u5bc6\u5c01\u7528\u4e8e\u63d0\u9ad8RFI/EMI\u6291\u5236    \u826f\u597d\u7684\u7ebf\u6027\u5ea6\u548c\u52a8\u6001\u8303\u56f4    \u575a\u56fa\u8010\u7528\u7684\u67d4\u6027PVDF\u4f20\u611f\u5143\u4ef6\u53ef\u627f\u53d7\u9ad8\u51b2\u51fb", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_2", 
            "text": "\u68c0\u6d4b\u8fde\u7eed  \u8109\u51b2\u632f\u52a8\u6216\u51b2\u51fb", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_3", 
            "text": "", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#25c", 
            "text": "\u53c2\u6570   \u503c   \u5355\u4f4d    \u7535\u538b\u7075\u654f\u5ea6 (open-circuit, baseline)    1.1    V/g    \u7535\u8377\u7075\u654f\u5ea6 (baseline)    260    pC/g    \u5171\u632f\u9891\u7387    75    Hz    \u7535\u538b\u7075\u654f\u5ea6 (open-circuit, at resonance)    6    V/g    \u4e0a\u7ebf\u9891\u7387 (+3 dB)    42    Hz    \u7ebf\u6027    +/-1    %    \u7535\u5bb9    244    pF    \u8017\u6563\u7cfb\u6570   0.018   (none)    \u60ef\u6027\u8d28\u91cf    0.3    gram", 
            "title": "\u5178\u578b\u6027\u80fd (25\u00b0C)"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_4", 
            "text": "\u53c2\u6570   \u503c   \u5355\u4f4d    \u50a8\u5b58\u6e29\u5ea6    -40 to +80 deg C     \u5de5\u4f5c\u6e29\u5ea6    -20 to +60 deg C    \u91cd\u91cf    Minisense 100H   0.5 gram     Minisense 100V   0.6 gram", 
            "title": "\u73af\u5883\u6307\u6807"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_5", 
            "text": "Piezo Film Sensors Technical Manual    MiniSense 100 Vibration Sensor Manual", 
            "title": "\u8d44\u6599\u4e0b\u8f7d"
        }, 
        {
            "location": "/Tutorial/", 
            "text": "\u672c\u8282\u5305\u62ec\u7531\u5404\u79cd\u65b9\u6cd5\u7684\u4ecb\u7ecd\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u5404\u79cd\u65b9\u6cd5\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGetting_Started_with_Seeeduino\n\n\nHow_to_edit_Wiki\n\n\nHow_to_install_Arduino_Library\n\n\nUpload_Code", 
            "title": "Tutorial"
        }, 
        {
            "location": "/Tutorial/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u5404\u79cd\u65b9\u6cd5\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Getting_Started_with_Seeeduino  How_to_edit_Wiki  How_to_install_Arduino_Library  Upload_Code", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/How_to_install_Arduino_Library/", 
            "text": "Note\n\n\n\n\n\u6b64\u6559\u7a0b\u662f\u57fa\u4e8e Arduino 1.6.9.\n\n\n\n\n\n\n\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5Arduino\u5e93\u3002\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u51e0\u4e4e\u6240\u6709\u7684\u5e93\u90fd\u5b58\u50a8\u5728Github\u4e0a\u3002\u5f53\u4ea7\u54c1\u9700\u8981\u65f6\uff0c\u6211\u4eec\u5c06\u63d0\u4f9bArduino\u5e93\u3002\u5bf9\u4e8e\u4e00\u4e9b\u7b80\u5355\u7684\u4ea7\u54c1\uff0c\u5b83\u4e0d\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u5e93\uff0c\u5982Grove - Button\u3002    \n\n\n\u9996\u5148\uff0c\u4ea7\u54c1\u9875\u9762\u4e0a\u6709\u4e00\u4e2a\u4e0b\u8f7d\u5e93\u6309\u94ae\u3002\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\u70b9\u51fb\u6309\u94ae\u5f00\u59cb\u4e0b\u8f7d\u3002\u6570\u79d2\u540e\u79d2\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u6570\u636e\u5305\u3002\n\n\n\u5982\u679c\u60a8\u70b9\u51fb\u6309\u94ae\u540e\u83b7\u5f97Github\u9875\u9762\uff0c\u5219\u53ef\u4ee5\u5355\u51fb \nClond or download \n Download ZIP\n \u6309\u952e\u6765\u83b7\u53d6\u5e93\u6587\u4ef6\u3002\n\n\n\n\n\u7136\u540e\u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u5355\u51fb**Sketch (\u9879\u76ee)\n Include Library (\u52a0\u8f7d\u5e93)\n Add .ZIP Library\uff08\u6dfb\u52a0\u4e00\u4e2azip\u5e93\uff09**\n\n\n\n\n\u7136\u540e\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u5e93\u662f\u5426\u6b63\u786e\u5b89\u88c5\u3002\n\n\n\u70b9\u51fb \nFile\uff08\u6587\u4ef6\uff09 \n Example \uff08\u793a\u4f8b\uff09 \n OLED_Display_96x96-master \n OLED_Hello_World\n \u6253\u5f00\u4e00\u4e2a\u4f8b\u5b50\uff0c\u70b9\u51fb\u9a8c\u8bc1\u6309\u94ae\uff0c\u5982\u679c\u6ca1\u6709\u9519\u8bef\uff0c\u795d\u8d3a\uff0c\u5e93\u5b8c\u7f8e\u5b89\u88c5\u3002", 
            "title": "\u5982\u4f55\u5b89\u88c5Arduino\u5e93"
        }, 
        {
            "location": "/Upload_Code/", 
            "text": "The specific steps for uploading the code:\n\n\n1.\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u9009\u62e9\u60a8\u6b63\u5728\u4f7f\u7528\u7684Arduino\u677f\u5b50\uff1aTools\uff08\u5de5\u5177\uff09 --\n Board\uff08\u5f00\u53d1\u677f\uff09 --\n  \uff08\u4f8b\u5982\uff09Arduino UNO\n\n\n\n\n\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u63d0\u793a\uff0c\u53ef\u80fd\u662f\u60a8\u9009\u62e9\u4e86\u9519\u8bef\u7684\u5f00\u53d1\u677f\uff0c\u8bf7\u91cd\u65b0\u9009\u62e9\u60a8\u6b63\u5728\u4f7f\u7528\u7684Arduino\u677f\u3002\n\n\n\n\n\n\n\u901a\u8fc7\u4ee5\u4e0b\u8def\u5f84\u9009\u62e9\u6b63\u5728\u4f7f\u7528\u7684\u4e32\u884c\u7aef\u53e3: Tools\uff08\u5de5\u5177\uff09 --\n Serial Port\uff08\u7aef\u53e3\uff09 --\n \uff08\u4f8b\u5982\uff09 COM3.\n\n\n\u5982\u4e0b\u56fe\u6240\u793a\u4e0a\u4f20\u793a\u4f8b\u4ee3\u7801:\n\n\n\n\n\n\n\u5f53\u51fa\u73b0\"Done uploading\"\u65f6\uff0c\u606d\u559c\u60a8\u4e0a\u4f20\u6210\u529f\u3002", 
            "title": "\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/", 
            "text": "0. Hello world\n\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u8001\u5e08\u4f1a\u6559\u4f1a\u6211\u4eec\u5728\u5f00\u59cb\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u65f6\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684Hello World\u793a\u4f8b\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u4ecb\u7ecd\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8fc7\u7a0b\u3002\u867d\u7136\u4f60\u4e0d\u719f\u6089Arduino\uff0c\u4e0d\u7528\u62c5\u5fc3\u3002\u4f60\u53ef\u4ee5\u5b66\u4e60\u5173\u4e8eArduino\u7684\u95ee\u9898\uff1a\u70b9\u4eaeLED\u3002\u73b0\u5728\u4ee5Seeeduino\u4e3a\u4f8b\uff0c\u4e86\u89e3\u5982\u4f55\u70b9\u4eae\u7531\u6570\u5b5713\u9488\u63a7\u5236\u7684LED\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u4e0b\u8f7dArduino Environment\u5e76\u6210\u529f\u5b89\u88c5Seeeduino\u9a71\u52a8\u7a0b\u5e8f\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u4e86\u89e3\u5177\u4f53\u6b65\u9aa4\u3002\n\n\n1. \u5c06Seeeduino\u548c\u7535\u8111\u76f8\u8fde\n\n\n\u4f7f\u7528USB\u7535\u7f06\u5c06Seeeduino\u677f\u8fde\u63a5\u5230\u7535\u8111\u3002\u7eff\u8272\u7535\u6e90LED\uff08\u6807\u6709PWR\uff09\u5e94\u70b9\u4eae\u3002\uff08\u5f53Seeeduino\u72ec\u7acb\u5de5\u4f5c\u65f6\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9USB\u6216\u7535\u6e90\u9002\u914d\u5668\u4e3aSeeeduino\u4f9b\u7535\u3002\uff09\n\n\n2. \u6253\u5f00\u4f8b\u7a0b Blink\n\n\n\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u627e\u5230\u5e76\u6253\u5f00\u4f8b\u7a0b\uff1a \nFile\uff08\u6587\u4ef6\uff09\nExamples\uff08\u793a\u4f8b\uff09\n01.Basics\nBlink\n.\n\n\n\n\n3. \u9009\u62e9\u60a8\u7684\u5f00\u53d1\u677f\n\n\n\u60a8\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u8fdb\u884c\u9009\u62e9 Tools\uff08\u5de5\u5177\uff09 \n Board menu\uff08\u5f00\u53d1\u677f\uff09\uff0c\u9009\u62e9\u60a8\u5f53\u524d\u7684\u5f00\u53d1\u677f. \u5728\u8fd9\u91cc\u6211\u4eec\u9009\u62e9ATmega328.\n\n\n\n\n4. \u9009\u62e9\u60a8\u7684\u4e32\u53e3\n\n\n\u9009\u62e9\u60a8\u7684\u5f00\u53d1\u677f\u5f53\u524d\u5360\u7528\u7684\u4e32\u53e3\uff0c\u5728 Tools\uff08\u5de5\u5177\uff09 | Serial Port\uff08\u7aef\u53e3\uff09 \u4e2d\u8fdb\u884c\u9009\u62e9\u3002\n\n\n\n\n5. \u4e0a\u4f20\u7a0b\u5e8f\n\n\n\u73b0\u5728\uff0c\u53ea\u9700\u70b9\u51fb\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u201c\u4e0a\u4f20\u201d\u6309\u94ae\u5373\u53ef\u3002\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u7684RX\u548cTX LED\u95ea\u70c1\u3002\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u5219\u4f1a\u5728\u72b6\u6001\u680f\u4e2d\u663e\u793a\u201c\u5b8c\u6210\u4e0a\u4f20\u201d\u6d88\u606f\u3002\n\n\n\n\n6. \u7ed3\u679c\n\n\n\u4e0a\u4f20\u5b8c\u6210\u540e\u7684\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u768413\uff08L\uff09\u9488\u811a\u5f00\u59cb\u95ea\u70c1\uff08\u6a59\u8272\uff09\u3002\u5982\u679c\u662f\uff0c\u606d\u559c\uff01\u4f60\u7684Arduino\u7a0b\u5e8f\u5df2\u7ecf\u5f00\u59cb\u8fd0\u884c\u4e86\u3002", 
            "title": "Seeeduino\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#0-hello-world", 
            "text": "\u4e00\u822c\u6765\u8bf4\uff0c\u8001\u5e08\u4f1a\u6559\u4f1a\u6211\u4eec\u5728\u5f00\u59cb\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u65f6\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684Hello World\u793a\u4f8b\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u4ecb\u7ecd\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8fc7\u7a0b\u3002\u867d\u7136\u4f60\u4e0d\u719f\u6089Arduino\uff0c\u4e0d\u7528\u62c5\u5fc3\u3002\u4f60\u53ef\u4ee5\u5b66\u4e60\u5173\u4e8eArduino\u7684\u95ee\u9898\uff1a\u70b9\u4eaeLED\u3002\u73b0\u5728\u4ee5Seeeduino\u4e3a\u4f8b\uff0c\u4e86\u89e3\u5982\u4f55\u70b9\u4eae\u7531\u6570\u5b5713\u9488\u63a7\u5236\u7684LED\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u4e0b\u8f7dArduino Environment\u5e76\u6210\u529f\u5b89\u88c5Seeeduino\u9a71\u52a8\u7a0b\u5e8f\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u4e86\u89e3\u5177\u4f53\u6b65\u9aa4\u3002", 
            "title": "0. Hello world"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#1-seeeduino", 
            "text": "\u4f7f\u7528USB\u7535\u7f06\u5c06Seeeduino\u677f\u8fde\u63a5\u5230\u7535\u8111\u3002\u7eff\u8272\u7535\u6e90LED\uff08\u6807\u6709PWR\uff09\u5e94\u70b9\u4eae\u3002\uff08\u5f53Seeeduino\u72ec\u7acb\u5de5\u4f5c\u65f6\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9USB\u6216\u7535\u6e90\u9002\u914d\u5668\u4e3aSeeeduino\u4f9b\u7535\u3002\uff09", 
            "title": "1. \u5c06Seeeduino\u548c\u7535\u8111\u76f8\u8fde"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#2-blink", 
            "text": "\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u627e\u5230\u5e76\u6253\u5f00\u4f8b\u7a0b\uff1a  File\uff08\u6587\u4ef6\uff09 Examples\uff08\u793a\u4f8b\uff09 01.Basics Blink .", 
            "title": "2. \u6253\u5f00\u4f8b\u7a0b Blink"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#3", 
            "text": "\u60a8\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u8fdb\u884c\u9009\u62e9 Tools\uff08\u5de5\u5177\uff09   Board menu\uff08\u5f00\u53d1\u677f\uff09\uff0c\u9009\u62e9\u60a8\u5f53\u524d\u7684\u5f00\u53d1\u677f. \u5728\u8fd9\u91cc\u6211\u4eec\u9009\u62e9ATmega328.", 
            "title": "3. \u9009\u62e9\u60a8\u7684\u5f00\u53d1\u677f"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#4", 
            "text": "\u9009\u62e9\u60a8\u7684\u5f00\u53d1\u677f\u5f53\u524d\u5360\u7528\u7684\u4e32\u53e3\uff0c\u5728 Tools\uff08\u5de5\u5177\uff09 | Serial Port\uff08\u7aef\u53e3\uff09 \u4e2d\u8fdb\u884c\u9009\u62e9\u3002", 
            "title": "4. \u9009\u62e9\u60a8\u7684\u4e32\u53e3"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#5", 
            "text": "\u73b0\u5728\uff0c\u53ea\u9700\u70b9\u51fb\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u201c\u4e0a\u4f20\u201d\u6309\u94ae\u5373\u53ef\u3002\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u7684RX\u548cTX LED\u95ea\u70c1\u3002\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u5219\u4f1a\u5728\u72b6\u6001\u680f\u4e2d\u663e\u793a\u201c\u5b8c\u6210\u4e0a\u4f20\u201d\u6d88\u606f\u3002", 
            "title": "5. \u4e0a\u4f20\u7a0b\u5e8f"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#6", 
            "text": "\u4e0a\u4f20\u5b8c\u6210\u540e\u7684\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u768413\uff08L\uff09\u9488\u811a\u5f00\u59cb\u95ea\u70c1\uff08\u6a59\u8272\uff09\u3002\u5982\u679c\u662f\uff0c\u606d\u559c\uff01\u4f60\u7684Arduino\u7a0b\u5e8f\u5df2\u7ecf\u5f00\u59cb\u8fd0\u884c\u4e86\u3002", 
            "title": "6. \u7ed3\u679c"
        }, 
        {
            "location": "/How_to_edit_Wiki/", 
            "text": "Seeed\u4e2d\u6587\u6587\u6863\u7ef4\u62a4\u8bf4\u660e\n\n\n\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230\u90e8\u5206Seeed\u4ea7\u54c1\u7684\n\u4e2d\u6587\u6587\u6863\n\uff0c\u7531\u4e8e\u8fd9\u4e2a\u7ad9\u70b9\u521a\u5efa\u7acb\uff0c\u6240\u4ee5\u53ea\u6709\u90e8\u5206\u5df2\u7ecf\u7ffb\u8bd1\u7684\u6587\u6863\u3002\n\n\n\u6ca1\u6709\u4e2d\u6587\u6587\u6863\u7684\u4ea7\u54c1\uff0c\u4ecd\u7136\u9700\u8981\u5230\n\u82f1\u6587\u7ad9\u70b9\n.\n\n\n\u8fd9\u4e2a\u7ad9\u70b9\u57fa\u4e8e\u4f18\u79c0\u7684\u5e76\u4e14\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edf\nMkDocs\n\u4ee5\u53ca\u4e3b\u9898\nMaterial\n.\n\n\n\u57fa\u672c\u64cd\u4f5c\n\n\nGit clone \u8fd9\u4e2a\u5e93\u5230\u672c\u5730\uff0c\u53ef\u4ee5\u5728docs\u6587\u4ef6\u5939\u91cc\u9762\u6dfb\u52a0\u6587\u6863\u3002\u6dfb\u52a0\u5b8c\u6587\u6863\u540e\uff0c\u9700\u8981\u624b\u52a8\u4fee\u6539mkdocs.yml\u6587\u4ef6\u3002\n\n\n# Page tree\npages:\n  - Seeed.Wiki: index.md\n  - Respeaker\u9ea6\u514b\u98ce\u6574\u5217FAQ: respeaker_array_faq.md\n  - \u65b0\u6dfb\u52a0\u7684\u6587\u6863: new_docs_name.md\n  - License: license.md\n\n\n\n\n\n\n\u9996\u5148\u6267\u884c \npip install mkdocs-material\n\n\n\u6267\u884c\u6267\u884c \nmkdocs serve\n \u8fdb\u884c\u9884\u89c8\n\n\n\u6267\u884c \nmkdocs build --clean\n\uff0c\u7f16\u8bd1\u7684\u9759\u6001\u6587\u4ef6\u4f1a\u51fa\u73b0\u5728 \nsite\n \u6587\u4ef6\u5939\u3002\n\n\nGit clone \nSeeedDocument.github.io\n \u5230\u672c\u5730\uff0c\u628aSite\u7684\u5185\u5bb9\u66ff\u4ee3\u539f\u6765\u7684\u5185\u5bb9\uff0c\u91cd\u65b0\u4e0a\u4f20\uff0c\u65e2\u53ef\u4ee5\u66f4\u65b0\u7f51\u9875\u3002\n\n\n\n\n\n\nNote\n\n\nCNAME\u6587\u4ef6\u4e0d\u8981\u5220\u6389\n\n\n\n\n\u6587\u6863\u683c\u5f0f\n\n\n\n\n1. \u7b80\u4ecb\n\n\n2. \u89c4\u683c\u53c2\u6570\n\n\n3. \u521b\u610f\u5e94\u7528\n\n\n4. \u786c\u4ef6\u6982\u8ff0\n\n\n5. \u5165\u95e8\u6307\u5bfc\n\n\n6. \u8d44\u6e90\n\n\n\n\n\u8d21\u732e\n\n\n\u8fd9\u4e2a\u6587\u6863\u7cfb\u7edf\u6709Seeed\u7ef4\u62a4\uff0c\u5e76\u4e14\u6b22\u8fce\u4f60\u5bf9\u6587\u6863\u7684\u5185\u5bb9\u5206\u6790\u4f60\u7684\u8d21\u732e\uff0c\u8d21\u732e\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\n\n\n\n\n\u9519\u522b\u5b57\u6216\u8005\u4e0d\u6070\u5f53\u7684\u8bcd\u6c47\u8868\u8fbe\n\n\n\u589e\u52a0\u5185\u5bb9\u4ee5\u4f7f\u6559\u7a0b\u66f4\u52a0\u7684\u6e05\u6670\n\n\n\u4e0a\u4f20\u66f4\u597d\u7684\u56fe\u7247\n\n\n\u5176\u4ed6\u5fc5\u8981\u7684\u4fee\u6539\u6216\u4f18\u5316\n\n\n\n\nMkDocs\n\n\n\u8fd9\u4e2a\u9879\u76ee\u57fa\u4e8e\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edfMKDocs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nView the \nMkDocs documentation\n.\n\n\nProject \nrelease notes\n.\n\n\nVisit the \nMkDocs wiki\n for community\n  resources, including third party themes and a list of MkDocs users.\n\n\nIRC channel: \n#mkdocs\n on freenode.\n\n\nDiscussions and support: \nhttps://groups.google.com/forum/#!forum/mkdocs\n\n\n\n\n\u534f\u8bae\n\n\nCopyright \n 2018-2017 Seeed Inc. (\nhttps://www.seeedstudio.com\n)\n\n\n\u6587\u6863\u53ca\u56fe\u7247\n\n\n\n\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece \nCreative Commons Attribution-ShareAlike 4.0 International License\n. \n \n\n\u7684\u534f\u8bae\n\n\n\u8054\u7cfb\u6211\u4eec\n\n\n\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "How_to_edit_Wiki"
        }, 
        {
            "location": "/How_to_edit_Wiki/#seeed", 
            "text": "\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230\u90e8\u5206Seeed\u4ea7\u54c1\u7684 \u4e2d\u6587\u6587\u6863 \uff0c\u7531\u4e8e\u8fd9\u4e2a\u7ad9\u70b9\u521a\u5efa\u7acb\uff0c\u6240\u4ee5\u53ea\u6709\u90e8\u5206\u5df2\u7ecf\u7ffb\u8bd1\u7684\u6587\u6863\u3002  \u6ca1\u6709\u4e2d\u6587\u6587\u6863\u7684\u4ea7\u54c1\uff0c\u4ecd\u7136\u9700\u8981\u5230 \u82f1\u6587\u7ad9\u70b9 .  \u8fd9\u4e2a\u7ad9\u70b9\u57fa\u4e8e\u4f18\u79c0\u7684\u5e76\u4e14\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edf MkDocs \u4ee5\u53ca\u4e3b\u9898 Material .", 
            "title": "Seeed\u4e2d\u6587\u6587\u6863\u7ef4\u62a4\u8bf4\u660e"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_1", 
            "text": "Git clone \u8fd9\u4e2a\u5e93\u5230\u672c\u5730\uff0c\u53ef\u4ee5\u5728docs\u6587\u4ef6\u5939\u91cc\u9762\u6dfb\u52a0\u6587\u6863\u3002\u6dfb\u52a0\u5b8c\u6587\u6863\u540e\uff0c\u9700\u8981\u624b\u52a8\u4fee\u6539mkdocs.yml\u6587\u4ef6\u3002  # Page tree\npages:\n  - Seeed.Wiki: index.md\n  - Respeaker\u9ea6\u514b\u98ce\u6574\u5217FAQ: respeaker_array_faq.md\n  - \u65b0\u6dfb\u52a0\u7684\u6587\u6863: new_docs_name.md\n  - License: license.md   \u9996\u5148\u6267\u884c  pip install mkdocs-material  \u6267\u884c\u6267\u884c  mkdocs serve  \u8fdb\u884c\u9884\u89c8  \u6267\u884c  mkdocs build --clean \uff0c\u7f16\u8bd1\u7684\u9759\u6001\u6587\u4ef6\u4f1a\u51fa\u73b0\u5728  site  \u6587\u4ef6\u5939\u3002  Git clone  SeeedDocument.github.io  \u5230\u672c\u5730\uff0c\u628aSite\u7684\u5185\u5bb9\u66ff\u4ee3\u539f\u6765\u7684\u5185\u5bb9\uff0c\u91cd\u65b0\u4e0a\u4f20\uff0c\u65e2\u53ef\u4ee5\u66f4\u65b0\u7f51\u9875\u3002    Note  CNAME\u6587\u4ef6\u4e0d\u8981\u5220\u6389", 
            "title": "\u57fa\u672c\u64cd\u4f5c"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_2", 
            "text": "1. \u7b80\u4ecb  2. \u89c4\u683c\u53c2\u6570  3. \u521b\u610f\u5e94\u7528  4. \u786c\u4ef6\u6982\u8ff0  5. \u5165\u95e8\u6307\u5bfc  6. \u8d44\u6e90", 
            "title": "\u6587\u6863\u683c\u5f0f"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_3", 
            "text": "\u8fd9\u4e2a\u6587\u6863\u7cfb\u7edf\u6709Seeed\u7ef4\u62a4\uff0c\u5e76\u4e14\u6b22\u8fce\u4f60\u5bf9\u6587\u6863\u7684\u5185\u5bb9\u5206\u6790\u4f60\u7684\u8d21\u732e\uff0c\u8d21\u732e\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a   \u9519\u522b\u5b57\u6216\u8005\u4e0d\u6070\u5f53\u7684\u8bcd\u6c47\u8868\u8fbe  \u589e\u52a0\u5185\u5bb9\u4ee5\u4f7f\u6559\u7a0b\u66f4\u52a0\u7684\u6e05\u6670  \u4e0a\u4f20\u66f4\u597d\u7684\u56fe\u7247  \u5176\u4ed6\u5fc5\u8981\u7684\u4fee\u6539\u6216\u4f18\u5316", 
            "title": "\u8d21\u732e"
        }, 
        {
            "location": "/How_to_edit_Wiki/#mkdocs", 
            "text": "\u8fd9\u4e2a\u9879\u76ee\u57fa\u4e8e\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edfMKDocs        View the  MkDocs documentation .  Project  release notes .  Visit the  MkDocs wiki  for community\n  resources, including third party themes and a list of MkDocs users.  IRC channel:  #mkdocs  on freenode.  Discussions and support:  https://groups.google.com/forum/#!forum/mkdocs", 
            "title": "MkDocs"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_4", 
            "text": "Copyright   2018-2017 Seeed Inc. ( https://www.seeedstudio.com )", 
            "title": "\u534f\u8bae"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_5", 
            "text": "\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece  Creative Commons Attribution-ShareAlike 4.0 International License .    \n\u7684\u534f\u8bae", 
            "title": "\u6587\u6863\u53ca\u56fe\u7247"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_6", 
            "text": "\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "\u8054\u7cfb\u6211\u4eec"
        }, 
        {
            "location": "/license/", 
            "text": "License\n\n\nMIT License\n\n\nCopyright \n 2008 - 2017 Seeed INC.\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.", 
            "title": "\u6587\u6863\u534f\u8bae"
        }, 
        {
            "location": "/license/#license", 
            "text": "MIT License  Copyright   2008 - 2017 Seeed INC.  Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.", 
            "title": "License"
        }
    ]
}