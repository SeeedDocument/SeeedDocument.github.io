{
    "docs": [
        {
            "location": "/", 
            "text": "Seeed\u4e2d\u6587\u6587\u6863\u7ef4\u62a4\u8bf4\u660e\n\n\n\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230\u90e8\u5206Seeed\u4ea7\u54c1\u7684\n\u4e2d\u6587\u6587\u6863\n\uff0c\u7531\u4e8e\u8fd9\u4e2a\u7ad9\u70b9\u521a\u5efa\u7acb\uff0c\u6240\u4ee5\u53ea\u6709\u90e8\u5206\u5df2\u7ecf\u7ffb\u8bd1\u7684\u6587\u6863\u3002\n\n\n\u6ca1\u6709\u4e2d\u6587\u6587\u6863\u7684\u4ea7\u54c1\uff0c\u4ecd\u7136\u9700\u8981\u5230\n\u82f1\u6587\u7ad9\u70b9\n.\n\n\n\u8fd9\u4e2a\u7ad9\u70b9\u57fa\u4e8e\u4f18\u79c0\u7684\u5e76\u4e14\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edf\nMkDocs\n\u4ee5\u53ca\u4e3b\u9898\nMaterial\n.\n\n\n\u57fa\u672c\u64cd\u4f5c\n\n\nGit clone \u8fd9\u4e2a\u5e93\u5230\u672c\u5730\uff0c\u53ef\u4ee5\u5728docs\u6587\u4ef6\u5939\u91cc\u9762\u6dfb\u52a0\u6587\u6863\u3002\u6dfb\u52a0\u5b8c\u6587\u6863\u540e\uff0c\u9700\u8981\u624b\u52a8\u4fee\u6539mkdocs.yml\u6587\u4ef6\u3002\n\n\n# Page tree\npages:\n  - Seeed.Wiki: index.md\n  - Respeaker\u9ea6\u514b\u98ce\u6574\u5217FAQ: respeaker_array_faq.md\n  - \u65b0\u6dfb\u52a0\u7684\u6587\u6863: new_docs_name.md\n  - License: license.md\n\n\n\n\n\n\n\u9996\u5148\u6267\u884c \npip install mkdocs-material\n\n\n\u6267\u884c\u6267\u884c \nmkdocs serve\n \u8fdb\u884c\u9884\u89c8\n\n\n\u6267\u884c \nmkdocs build --clean\n\uff0c\u7f16\u8bd1\u7684\u9759\u6001\u6587\u4ef6\u4f1a\u51fa\u73b0\u5728 \nsite\n \u6587\u4ef6\u5939\u3002\n\n\nGit clone \nSeeedDocument.github.io\n \u5230\u672c\u5730\uff0c\u628aSite\u7684\u5185\u5bb9\u66ff\u4ee3\u539f\u6765\u7684\u5185\u5bb9\uff0c\u91cd\u65b0\u4e0a\u4f20\uff0c\u65e2\u53ef\u4ee5\u66f4\u65b0\u7f51\u9875\u3002\n\n\n\n\n\n\nNote\n\n\nCNAME\u6587\u4ef6\u4e0d\u8981\u5220\u6389\n\n\n\n\n\u6587\u6863\u683c\u5f0f\n\n\n\n\n1. \u7b80\u4ecb\n\n\n2. \u89c4\u683c\u53c2\u6570\n\n\n3. \u521b\u610f\u5e94\u7528\n\n\n4. \u786c\u4ef6\u6982\u8ff0\n\n\n5. \u5165\u95e8\u6307\u5bfc\n\n\n6. \u8d44\u6e90\n\n\n\n\n\u8d21\u732e\n\n\n\u8fd9\u4e2a\u6587\u6863\u7cfb\u7edf\u6709Seeed\u7ef4\u62a4\uff0c\u5e76\u4e14\u6b22\u8fce\u4f60\u5bf9\u6587\u6863\u7684\u5185\u5bb9\u5206\u6790\u4f60\u7684\u8d21\u732e\uff0c\u8d21\u732e\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\n\n\n\n\n\u9519\u522b\u5b57\u6216\u8005\u4e0d\u6070\u5f53\u7684\u8bcd\u6c47\u8868\u8fbe\n\n\n\u589e\u52a0\u5185\u5bb9\u4ee5\u4f7f\u6559\u7a0b\u66f4\u52a0\u7684\u6e05\u6670\n\n\n\u4e0a\u4f20\u66f4\u597d\u7684\u56fe\u7247\n\n\n\u5176\u4ed6\u5fc5\u8981\u7684\u4fee\u6539\u6216\u4f18\u5316\n\n\n\n\nMkDocs\n\n\n\u8fd9\u4e2a\u9879\u76ee\u57fa\u4e8e\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edfMKDocs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nView the \nMkDocs documentation\n.\n\n\nProject \nrelease notes\n.\n\n\nVisit the \nMkDocs wiki\n for community\n  resources, including third party themes and a list of MkDocs users.\n\n\nIRC channel: \n#mkdocs\n on freenode.\n\n\nDiscussions and support: \nhttps://groups.google.com/forum/#!forum/mkdocs\n\n\n\n\n\u534f\u8bae\n\n\nCopyright \n 2018-2017 Seeed Inc. (\nhttps://www.seeedstudio.com\n)\n\n\n\u6587\u6863\u53ca\u56fe\u7247\n\n\n\n\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece \nCreative Commons Attribution-ShareAlike 4.0 International License\n. \n \n\n\u7684\u534f\u8bae\n\n\n\u8054\u7cfb\u6211\u4eec\n\n\n\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "Seeed\u6587\u6863\u4e2d\u6587\u7ad9\u70b9\u4ecb\u7ecd"
        }, 
        {
            "location": "/#seeed", 
            "text": "\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230\u90e8\u5206Seeed\u4ea7\u54c1\u7684 \u4e2d\u6587\u6587\u6863 \uff0c\u7531\u4e8e\u8fd9\u4e2a\u7ad9\u70b9\u521a\u5efa\u7acb\uff0c\u6240\u4ee5\u53ea\u6709\u90e8\u5206\u5df2\u7ecf\u7ffb\u8bd1\u7684\u6587\u6863\u3002  \u6ca1\u6709\u4e2d\u6587\u6587\u6863\u7684\u4ea7\u54c1\uff0c\u4ecd\u7136\u9700\u8981\u5230 \u82f1\u6587\u7ad9\u70b9 .  \u8fd9\u4e2a\u7ad9\u70b9\u57fa\u4e8e\u4f18\u79c0\u7684\u5e76\u4e14\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edf MkDocs \u4ee5\u53ca\u4e3b\u9898 Material .", 
            "title": "Seeed\u4e2d\u6587\u6587\u6863\u7ef4\u62a4\u8bf4\u660e"
        }, 
        {
            "location": "/#_1", 
            "text": "Git clone \u8fd9\u4e2a\u5e93\u5230\u672c\u5730\uff0c\u53ef\u4ee5\u5728docs\u6587\u4ef6\u5939\u91cc\u9762\u6dfb\u52a0\u6587\u6863\u3002\u6dfb\u52a0\u5b8c\u6587\u6863\u540e\uff0c\u9700\u8981\u624b\u52a8\u4fee\u6539mkdocs.yml\u6587\u4ef6\u3002  # Page tree\npages:\n  - Seeed.Wiki: index.md\n  - Respeaker\u9ea6\u514b\u98ce\u6574\u5217FAQ: respeaker_array_faq.md\n  - \u65b0\u6dfb\u52a0\u7684\u6587\u6863: new_docs_name.md\n  - License: license.md   \u9996\u5148\u6267\u884c  pip install mkdocs-material  \u6267\u884c\u6267\u884c  mkdocs serve  \u8fdb\u884c\u9884\u89c8  \u6267\u884c  mkdocs build --clean \uff0c\u7f16\u8bd1\u7684\u9759\u6001\u6587\u4ef6\u4f1a\u51fa\u73b0\u5728  site  \u6587\u4ef6\u5939\u3002  Git clone  SeeedDocument.github.io  \u5230\u672c\u5730\uff0c\u628aSite\u7684\u5185\u5bb9\u66ff\u4ee3\u539f\u6765\u7684\u5185\u5bb9\uff0c\u91cd\u65b0\u4e0a\u4f20\uff0c\u65e2\u53ef\u4ee5\u66f4\u65b0\u7f51\u9875\u3002    Note  CNAME\u6587\u4ef6\u4e0d\u8981\u5220\u6389", 
            "title": "\u57fa\u672c\u64cd\u4f5c"
        }, 
        {
            "location": "/#_2", 
            "text": "1. \u7b80\u4ecb  2. \u89c4\u683c\u53c2\u6570  3. \u521b\u610f\u5e94\u7528  4. \u786c\u4ef6\u6982\u8ff0  5. \u5165\u95e8\u6307\u5bfc  6. \u8d44\u6e90", 
            "title": "\u6587\u6863\u683c\u5f0f"
        }, 
        {
            "location": "/#_3", 
            "text": "\u8fd9\u4e2a\u6587\u6863\u7cfb\u7edf\u6709Seeed\u7ef4\u62a4\uff0c\u5e76\u4e14\u6b22\u8fce\u4f60\u5bf9\u6587\u6863\u7684\u5185\u5bb9\u5206\u6790\u4f60\u7684\u8d21\u732e\uff0c\u8d21\u732e\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a   \u9519\u522b\u5b57\u6216\u8005\u4e0d\u6070\u5f53\u7684\u8bcd\u6c47\u8868\u8fbe  \u589e\u52a0\u5185\u5bb9\u4ee5\u4f7f\u6559\u7a0b\u66f4\u52a0\u7684\u6e05\u6670  \u4e0a\u4f20\u66f4\u597d\u7684\u56fe\u7247  \u5176\u4ed6\u5fc5\u8981\u7684\u4fee\u6539\u6216\u4f18\u5316", 
            "title": "\u8d21\u732e"
        }, 
        {
            "location": "/#mkdocs", 
            "text": "\u8fd9\u4e2a\u9879\u76ee\u57fa\u4e8e\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edfMKDocs        View the  MkDocs documentation .  Project  release notes .  Visit the  MkDocs wiki  for community\n  resources, including third party themes and a list of MkDocs users.  IRC channel:  #mkdocs  on freenode.  Discussions and support:  https://groups.google.com/forum/#!forum/mkdocs", 
            "title": "MkDocs"
        }, 
        {
            "location": "/#_4", 
            "text": "Copyright   2018-2017 Seeed Inc. ( https://www.seeedstudio.com )", 
            "title": "\u534f\u8bae"
        }, 
        {
            "location": "/#_5", 
            "text": "\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece  Creative Commons Attribution-ShareAlike 4.0 International License .    \n\u7684\u534f\u8bae", 
            "title": "\u6587\u6863\u53ca\u56fe\u7247"
        }, 
        {
            "location": "/#_6", 
            "text": "\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "\u8054\u7cfb\u6211\u4eec"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/", 
            "text": "1.  \u7b80\u4ecb\n\n\n\n\n\u8fd9\u662f\u4e00\u6b3e\u8d85\u957f\u8ddd\u79bb\u7684433MHz RF\u901a\u4fe1\u6a21\u5757\u5957\u4ef6\uff0c\u901a\u4fe1\u8ddd\u79bb\u53ef\u8fbe2\u516c\u91cc\uff0c\u5305\u542b\u53d1\u5c04\u548c\u63a5\u6536\u4e24\u4e2a\u6a21\u5757\u3002\u6a21\u5757\u5185\u7f6eVCO, PLL\u6280\u672f\uff0c\u9891\u7387\u7a33\u5b9a\u4ee5\u53ca\u6297\u5e72\u6270\u80fd\u529b\u5f3a\u3002\u4f60\u53ef\u4ee5\u5728\u9700\u8981\u65e0\u7ebf\u6570\u636e\u4f20\u8f93\u548c\u8fdc\u7a0b\u63a7\u5236\u7b49\u5e94\u7528\u4f7f\u7528\u672c\u6a21\u5757\u3002\n\n\n\n\n2. \u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\u63a5\u6536\u5668\uff1a3\n5V\uff0c\u53d1\u5c04\u56683\n9V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n\u22642.5mA\uff08@5V\uff09\n\n\n\n\n\n\n\u5de5\u4f5c\u539f\u7406\n\n\n\"\u8d85\u5916\u5dee\uff08VCO,PLL)\n\n\n\n\n\n\n\u8c03\u5236\u65b9\u5f0f\n\n\nOOK/ASK\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u6bb5\n\n\n433.92MHz\n\n\n\n\n\n\n\u5e26\u5bbd\n\n\n1.5MHz\n\n\n\n\n\n\n\u7075\u654f\u5ea6\n\n\n-105dBm(50\u03a9)\n\n\n\n\n\n\n\u89e3\u7801\u65b9\u5f0f\n\n\nPT2272\n\n\n\n\n\n\n\u5929\u7ebf\u957f\u5ea6\n\n\n18cm\n\n\n\n\n\n\n\u6700\u5927\u901a\u4fe1\u8ddd\u79bb\n\n\n2Km\n\n\n\n\n\n\n\n\n3. \u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u65e0\u7ebf\u5f00\u5173\n\n\n\u8fdc\u7a0b\u4f20\u8f93\n\n\n\u65e0\u7ebf\u63a7\u5236\n\n\n\n\n4. \u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n5.\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\n\u8bf7\u6839\u636e\u4ee5\u4e0b \n\u6d41\u7a0b\n \u6765\u642d\u5efa\u7cfb\u7edf.\n\n\n\u8fde\u63a5\u7535\u6c60, \u6309\u94ae\u548c\u53d1\u5c04\u677f.\n\n\n\n\n\n!!!\u6ce8\u610f\n\n\n\n\n\u8bf7\u4f7f\u75283-5V\u7535\u6e90\uff01 9V\u7535\u6e90\u4f1a\u635f\u574f\u63a5\u6536\u677f.\n\n\n\u8fde\u63a5\u7535\u6c60, LEDs and \u63a5\u6536\u677f.\n\n\n\n\n\n!!!\u6ce8\u610f\n\n\n\n\n\u4e0d\u8981\u628aRX \u6a21\u5757\u548c TX\u6a21\u5757\u9760\u7684\u5f88\u8fd1: \u8fd9\u5c06\u963b\u6b62\u4ed6\u4eec\u6b63\u5e38\u5de5\u4f5c\u3002 \u786e\u4fddRX\u6a21\u5757\u548cTX\u6a21\u5757\u8ddd\u79bb\u81f3\u5c111\u7c73\u3002\n\n\n\u5f53\u6211\u4eec\u6309\u53d1\u5c04\u673a\u4fa7\u7684\u6309\u94ae\u65f6\uff0c\u63a5\u6536\u673a\u4fa7\u7684\u76f8\u5173LED\u5c06\u88ab\u6253\u5f00\u3002\n\n\n\n\n6. \u8d44\u6e90\n\n\n\n\n\n\n\n\n[\u6d41\u7a0b]\n   \nTransmitter and receiver Setup Manual\n\n\n\n\n\n\n[\u6570\u636e\u624b\u518c]\n   \nDatasheet for PT2272 and PT2262", 
            "title": "2KM Long Range RF link kits w encoder and decoder"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#1", 
            "text": "\u8fd9\u662f\u4e00\u6b3e\u8d85\u957f\u8ddd\u79bb\u7684433MHz RF\u901a\u4fe1\u6a21\u5757\u5957\u4ef6\uff0c\u901a\u4fe1\u8ddd\u79bb\u53ef\u8fbe2\u516c\u91cc\uff0c\u5305\u542b\u53d1\u5c04\u548c\u63a5\u6536\u4e24\u4e2a\u6a21\u5757\u3002\u6a21\u5757\u5185\u7f6eVCO, PLL\u6280\u672f\uff0c\u9891\u7387\u7a33\u5b9a\u4ee5\u53ca\u6297\u5e72\u6270\u80fd\u529b\u5f3a\u3002\u4f60\u53ef\u4ee5\u5728\u9700\u8981\u65e0\u7ebf\u6570\u636e\u4f20\u8f93\u548c\u8fdc\u7a0b\u63a7\u5236\u7b49\u5e94\u7528\u4f7f\u7528\u672c\u6a21\u5757\u3002", 
            "title": "1.  \u7b80\u4ecb"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#2", 
            "text": "\u53c2\u6570  \u503c      \u5de5\u4f5c\u7535\u538b  \u63a5\u6536\u5668\uff1a3 5V\uff0c\u53d1\u5c04\u56683 9V    \u5de5\u4f5c\u7535\u6d41  \u22642.5mA\uff08@5V\uff09    \u5de5\u4f5c\u539f\u7406  \"\u8d85\u5916\u5dee\uff08VCO,PLL)    \u8c03\u5236\u65b9\u5f0f  OOK/ASK    \u5de5\u4f5c\u9891\u6bb5  433.92MHz    \u5e26\u5bbd  1.5MHz    \u7075\u654f\u5ea6  -105dBm(50\u03a9)    \u89e3\u7801\u65b9\u5f0f  PT2272    \u5929\u7ebf\u957f\u5ea6  18cm    \u6700\u5927\u901a\u4fe1\u8ddd\u79bb  2Km", 
            "title": "2. \u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#3", 
            "text": "\u65e0\u7ebf\u5f00\u5173  \u8fdc\u7a0b\u4f20\u8f93  \u65e0\u7ebf\u63a7\u5236", 
            "title": "3. \u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#4", 
            "text": "", 
            "title": "4. \u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#5", 
            "text": "\u8bf7\u6839\u636e\u4ee5\u4e0b  \u6d41\u7a0b  \u6765\u642d\u5efa\u7cfb\u7edf.  \u8fde\u63a5\u7535\u6c60, \u6309\u94ae\u548c\u53d1\u5c04\u677f.   !!!\u6ce8\u610f   \u8bf7\u4f7f\u75283-5V\u7535\u6e90\uff01 9V\u7535\u6e90\u4f1a\u635f\u574f\u63a5\u6536\u677f.  \u8fde\u63a5\u7535\u6c60, LEDs and \u63a5\u6536\u677f.   !!!\u6ce8\u610f   \u4e0d\u8981\u628aRX \u6a21\u5757\u548c TX\u6a21\u5757\u9760\u7684\u5f88\u8fd1: \u8fd9\u5c06\u963b\u6b62\u4ed6\u4eec\u6b63\u5e38\u5de5\u4f5c\u3002 \u786e\u4fddRX\u6a21\u5757\u548cTX\u6a21\u5757\u8ddd\u79bb\u81f3\u5c111\u7c73\u3002  \u5f53\u6211\u4eec\u6309\u53d1\u5c04\u673a\u4fa7\u7684\u6309\u94ae\u65f6\uff0c\u63a5\u6536\u673a\u4fa7\u7684\u76f8\u5173LED\u5c06\u88ab\u6253\u5f00\u3002", 
            "title": "5.\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#6", 
            "text": "[\u6d41\u7a0b]     Transmitter and receiver Setup Manual    [\u6570\u636e\u624b\u518c]     Datasheet for PT2272 and PT2262", 
            "title": "6. \u8d44\u6e90"
        }, 
        {
            "location": "/Grove-Encoder/", 
            "text": "\u7b80\u4ecb\n\n\nGrove \u2013 Encoder \u662f\u4e00\u4e2a\u589e\u91cf\u65cb\u8f6c\u7f16\u7801\u5668\u3002\u5b83\u5c06\u8f74\u7684\u65cb\u8f6c\u4fe1\u53f7\u7f16\u7801\u6210\u7535\u5b50\u8109\u51b2\u8f93\u51fa\u4fe1\u53f7\u3002\u8fd9\u4e2a\u6a21\u5757\u4e5f\u5c5e\u4e8eGrove\u7cfb\u5217\uff0c\u6709\u6807\u51c6\u7684Grove\u63a5\u53e3\u3002\n\n\n\u5f53\u60a8\u7684\u9879\u76ee\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u65cb\u94ae\u65f6\uff0c\u6bd4\u5982\u8bf4\u97f3\u91cf\u65cb\u94ae\uff0c\u6570\u5b57\u65cb\u94ae\u7b49\uff0c\u8fd9\u4e2a\u4ea7\u54c1\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u589e\u91cf\u5f0f\u7f16\u7801\u5668\n\n\nGrove\u63a5\u53e3\n\n\n360\u5ea6\u65cb\u8f6c\n\n\n\n\n\n\n\uff01\uff01\uff01\u5c0f\u63d0\u793a\uff1a\n\n\n  \u5173\u4e8eGrove\u63a5\u53e3\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003\u4e0b\u9762\u94fe\u63a5\uff1a\n\n\n\n\nGrove System\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n\n\n4.5\n\n\n\n\n5\n\n\n\n\n5.5\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u7535\u6d41\n\n\n\n\n10\n\n\n\n\n20\n\n\n\n\n30\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n\n\n20x 20\n\n\n\n\nmm\n\n\n\n\n\n\n\n\n\u51c0\u91cd\n\n\n\n\n12\n\n\n\n\ng\n\n\n\n\n\n\n\n\n\u5e73\u53f0\u652f\u6301\n\n\nIntel Edison (with the \nseeedstudio library\n)\n\n\nArduino101 (with the \ncommunity library\n)\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u5f00\u59cb\u4e4b\u524d\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\nGrove-Encoder \u4f7f\u7528\u7684\u4e3aseeedstudio\u7f16\u5199\u7684\u5e93\u7b80\u5355\u6613\u7528\uff0c\u9996\u5148\u8bf7\u70b9\u51fb\u540e\u9762\u7684\u5e93\u540d\u4e0b\u8f7d\u5e93 \nseeedstudio Encoder Lib\n, \u6216\u8005\u70b9\u51fb\u8fd9\u91cc\ncommunity GroveEncoder library\n.  \u7136\u540e\u53ea\u9700\u8981\u628a\u5b83\u63a5\u5728BaseShield\u7684D2\u63a5\u53e3\u4e0a\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86.\n\n\n\u73af\u5f62LED\u706f\u6761\u793a\u4f8b\n\n\n\n\n\n\n1.\n\n\n\n\n\u63a5\u4e0b\u6765\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u5c31\u662f\u5c55\u793a\u4e86\u5982\u4f55\u64cd\u505a\u4e00\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u3002\n\u8fd9\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u7531Encoder\u548c  \nGrove-CircularLED\n \uff08\u53ef\u70b9\u51fb\u67e5\u770b\uff09\u4e24\u4e2a\u6a21\u5757\u7ec4\u6210 \u3002\u5c06\u8fd9\u4e24\u4e2a\u6a21\u5757\u6309\u7167\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u8d77\u6765:\n\n\n\n\n\n\n2.\n\n\n\n\n\u8fd9\u4e2a\u9879\u76ee\u9700\u8981\u5148\u70b9\u51fb\u5b89\u88c5\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5e93\uff1a \nTimerOne Lib\n \u5e93\u3001 \nEncoder Lib\n \u5e93\u548c \nCircularLED Library\n\u5e93 \u3002\u4e0b\u8f7d\u5b8c\u4e0a\u9762\u51e0\u4e2a\u5e93\u540e\u5b89\u88c5\u5728\u4f60\u7684Arduino IDE\u4e0a\u3002\n\n\n\n\n3.\n\n\n\n\n\u91cd\u542f\u5e76\u6253\u5f00Arduino IDE\uff0c\u6253\u5f00 \nFile-\nExamples-\nEncoder-\nEncodeCircuiBar\n\u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a\n\n\n#include \nCircularLED.h\n\n#include \nEncoder.h\n\n#include \nTimerOne.h\n\nCircularLED circularLED;\nunsigned int LED[24];\nint index_LED;\nvoid setup()\n{\n  encoder.Timer_init();\n}\nvoid loop()\n{\n    if (encoder.rotate_flag ==1)\n  {\n    if (encoder.direct==1)\n    {\n      index_LED++;\n      if (index_LED\n23)\n      index_LED=24;\n      SenttocircularBar(index_LED);\n    }\n     else\n     {\n      index_LED--;\n      if(index_LED\n0)\n      index_LED=0;\n      SenttocircularBar(index_LED);\n     }\n    encoder.rotate_flag =0;\n  }\n}\nvoid SenttocircularBar(int index)\n{\n  for (int i=0;i\n24;i++)\n  {\n    if (i\nindex)\n    {\n      LED[i]=0xff;\n    }\n    else\n    LED[i]=0;\n  }\n  circularLED.CircularLEDWrite(LED);\n}\n\n\n\n\n\n\n4.\n\n\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684Arduino\u6216Seeeduino\u677f\u5b50\u91cc\u3002\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n\n\n\n\n\uff01\uff01\uff01\u6ce8\u610f\n\n\n    \u5f53Grove \u2013 Encoder \u88ab\u6309\u4e0b\u65f6\uff0c\u4e5f\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4fe1\u53f7\uff0c\u4f46\u662f\u57fa\u4e8eGrove\u7ebf\u7684\u9650\u5236\uff0c\u5e76\u6ca1\u6709\u5c06\u8be5\u4fe1\u53f7\u5f15\u51fa\u6765\u3002\n\n\n\n\n\u8d44\u6e90\n\n\n\n\nEncoder Spec\n\n\nDemo in Arduino forum\n\n\nTimeOne Lib\n\n\nseeedstudio Encoder Library\n\n\ncommunity Encoder Library\n\n\nGrove-Encoder Eagle files", 
            "title": "Grove-Encoder"
        }, 
        {
            "location": "/Grove-Encoder/#_1", 
            "text": "Grove \u2013 Encoder \u662f\u4e00\u4e2a\u589e\u91cf\u65cb\u8f6c\u7f16\u7801\u5668\u3002\u5b83\u5c06\u8f74\u7684\u65cb\u8f6c\u4fe1\u53f7\u7f16\u7801\u6210\u7535\u5b50\u8109\u51b2\u8f93\u51fa\u4fe1\u53f7\u3002\u8fd9\u4e2a\u6a21\u5757\u4e5f\u5c5e\u4e8eGrove\u7cfb\u5217\uff0c\u6709\u6807\u51c6\u7684Grove\u63a5\u53e3\u3002  \u5f53\u60a8\u7684\u9879\u76ee\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u65cb\u94ae\u65f6\uff0c\u6bd4\u5982\u8bf4\u97f3\u91cf\u65cb\u94ae\uff0c\u6570\u5b57\u65cb\u94ae\u7b49\uff0c\u8fd9\u4e2a\u4ea7\u54c1\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/Grove-Encoder/#_2", 
            "text": "\u589e\u91cf\u5f0f\u7f16\u7801\u5668  Grove\u63a5\u53e3  360\u5ea6\u65cb\u8f6c    \uff01\uff01\uff01\u5c0f\u63d0\u793a\uff1a \n\n  \u5173\u4e8eGrove\u63a5\u53e3\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003\u4e0b\u9762\u94fe\u63a5\uff1a  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Encoder/#_3", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u7535\u538b  \n4.5  \n5  \n5.5  \nV    \n\u7535\u6d41  \n10  \n20  \n30  \nmA    \n\u5c3a\u5bf8  \n20x 20  \nmm    \n\u51c0\u91cd  \n12  \ng", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Encoder/#_4", 
            "text": "Intel Edison (with the  seeedstudio library )  Arduino101 (with the  community library )", 
            "title": "\u5e73\u53f0\u652f\u6301"
        }, 
        {
            "location": "/Grove-Encoder/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Encoder/#_6", 
            "text": "\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002  Grove-Encoder \u4f7f\u7528\u7684\u4e3aseeedstudio\u7f16\u5199\u7684\u5e93\u7b80\u5355\u6613\u7528\uff0c\u9996\u5148\u8bf7\u70b9\u51fb\u540e\u9762\u7684\u5e93\u540d\u4e0b\u8f7d\u5e93  seeedstudio Encoder Lib , \u6216\u8005\u70b9\u51fb\u8fd9\u91cc community GroveEncoder library .  \u7136\u540e\u53ea\u9700\u8981\u628a\u5b83\u63a5\u5728BaseShield\u7684D2\u63a5\u53e3\u4e0a\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86.", 
            "title": "\u5f00\u59cb\u4e4b\u524d"
        }, 
        {
            "location": "/Grove-Encoder/#led", 
            "text": "1.   \u63a5\u4e0b\u6765\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u5c31\u662f\u5c55\u793a\u4e86\u5982\u4f55\u64cd\u505a\u4e00\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u3002\n\u8fd9\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u7531Encoder\u548c   Grove-CircularLED  \uff08\u53ef\u70b9\u51fb\u67e5\u770b\uff09\u4e24\u4e2a\u6a21\u5757\u7ec4\u6210 \u3002\u5c06\u8fd9\u4e24\u4e2a\u6a21\u5757\u6309\u7167\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u8d77\u6765:    2.   \u8fd9\u4e2a\u9879\u76ee\u9700\u8981\u5148\u70b9\u51fb\u5b89\u88c5\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5e93\uff1a  TimerOne Lib  \u5e93\u3001  Encoder Lib  \u5e93\u548c  CircularLED Library \u5e93 \u3002\u4e0b\u8f7d\u5b8c\u4e0a\u9762\u51e0\u4e2a\u5e93\u540e\u5b89\u88c5\u5728\u4f60\u7684Arduino IDE\u4e0a\u3002   3.   \u91cd\u542f\u5e76\u6253\u5f00Arduino IDE\uff0c\u6253\u5f00  File- Examples- Encoder- EncodeCircuiBar \u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a  #include  CircularLED.h \n#include  Encoder.h \n#include  TimerOne.h \nCircularLED circularLED;\nunsigned int LED[24];\nint index_LED;\nvoid setup()\n{\n  encoder.Timer_init();\n}\nvoid loop()\n{\n    if (encoder.rotate_flag ==1)\n  {\n    if (encoder.direct==1)\n    {\n      index_LED++;\n      if (index_LED 23)\n      index_LED=24;\n      SenttocircularBar(index_LED);\n    }\n     else\n     {\n      index_LED--;\n      if(index_LED 0)\n      index_LED=0;\n      SenttocircularBar(index_LED);\n     }\n    encoder.rotate_flag =0;\n  }\n}\nvoid SenttocircularBar(int index)\n{\n  for (int i=0;i 24;i++)\n  {\n    if (i index)\n    {\n      LED[i]=0xff;\n    }\n    else\n    LED[i]=0;\n  }\n  circularLED.CircularLEDWrite(LED);\n}   4.   \u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684Arduino\u6216Seeeduino\u677f\u5b50\u91cc\u3002\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002    \uff01\uff01\uff01\u6ce8\u610f \n\n    \u5f53Grove \u2013 Encoder \u88ab\u6309\u4e0b\u65f6\uff0c\u4e5f\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4fe1\u53f7\uff0c\u4f46\u662f\u57fa\u4e8eGrove\u7ebf\u7684\u9650\u5236\uff0c\u5e76\u6ca1\u6709\u5c06\u8be5\u4fe1\u53f7\u5f15\u51fa\u6765\u3002", 
            "title": "\u73af\u5f62LED\u706f\u6761\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Encoder/#_7", 
            "text": "Encoder Spec  Demo in Arduino forum  TimeOne Lib  seeedstudio Encoder Library  community Encoder Library  Grove-Encoder Eagle files", 
            "title": "\u8d44\u6e90"
        }, 
        {
            "location": "/Grove-MP3_v2.0/", 
            "text": "\u7b80\u4ecb\n\n\nGrove \u2013 MP3 V2.0\u662f\u4e00\u6b3e\u5916\u5f62\u5c0f\u5de7\uff0c\u8bbe\u8ba1\u7d27\u51d1\u7684\u97f3\u9891\u6a21\u5757\u3002\u672c\u6a21\u5757\u652f\u6301\u591a\u79cd\u683c\u5f0f\u7684\u64ad\u653e\uff0cMP3, WAV\u4ee5\u53caWMV\u706f\u3002\u5e76\u652f\u6301\u591a\u79cd\u64ad\u653e\u6a21\u5f0f\uff0c\u968f\u673a\u64ad\u653e\uff0c\u5faa\u73af\u64ad\u653e\u4ee5\u53ca\u5355\u66f2\u5faa\u73af\u7b49\u3002Grove \u2013 MP3 V2\u91c7\u7528\u4e32\u53e3\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8e\u4efb\u4f55\u5177\u6709\u4e32\u53e3\u7684\u4e3b\u63a7\u677f\uff0c\u4f8b\u5982Arduino, Raspberry, LaunchPad\u7b49\u4e3b\u6d41\u7684\u5f00\u6e90\u786c\u4ef6\u5f00\u53d1\u677f\u3002\u53e6\u5916\uff0c\u6a21\u5757\u4e0a\u96c6\u6210\u6709micro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54\uff0c\u4e3a\u4f60\u97f3\u9891\u65b9\u9762\u7684\u5e94\u7528\u5e26\u6765\u6781\u5927\u7684\u4fbf\u5229\u3002\n\n\n\n\n\u7248\u672c\u66f4\u65b0\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7248\u672c\n\n\n\u53d1\u5e03\u65f6\u95f4\n\n\n\u5f53\u524d\u652f\u6301\u72b6\u6001\n\n\n\n\n\n\n\n\n\n\nVersion 1.0\n\n\n2013 04 28\n\n\n\u652f\u6301\n\n\n\n\n\n\nVersion 2.0\n\n\n2015 11 15\n\n\n\u652f\u6301\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5185\u7f6e\u57fa\u672c\u7684\u97f3\u9891\u64cd\u4f5c\n\n\n\u534a\u8f7dmicro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54\n\n\n\u591a\u79cd\u91c7\u6837\u7387\u652f\u6301\uff0c8/11.025/12/16/22.05/24/32/44.1/48K\n\n\n24\u4f4dDAC\u9ad8\u7cbe\u5ea6\u8f93\u51fa\uff0c\u6700\u592790dB\u52a8\u6001\u8f93\u51fa@85dB SNR\n\n\n\u652f\u6301\u591a\u79cd\u97f3\u9891\u683c\u5f0f\uff0cMP3, WAV, WMV\u706f\n\n\n10\u79cd\u5747\u8861\u6a21\u5f0f\n\n\n\n\n\n\nTip\n\n\n\u66f4\u591a\u5173\u4e8eGrove\u63a5\u53e3\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u4e0b\u9762\u94fe\u63a5 \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u9002\u5408\u5404\u79cd\u97f3\u9891\u5e94\u7528\u7684\u4e2d\u95f4\u89e3\u51b3\u65b9\u6848.\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u6570\u503c\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\n\n\n5 V (DC)\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41 (\u65e0\u4fe1\u53f7\u8f93\u51fa\u65f6)\n\n\n 15 mA\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n 40 mA\n\n\n\n\n\n\n\u4e3b\u63a7\u82af\u7247\n\n\nKT403A \n(datasheet)\n\n\n\n\n\n\n\u82af\u7247\u8f93\u51fa\u7535\u538b\n\n\n3.3 V\n\n\n\n\n\n\n\u82af\u7247\u8f93\u51fa\u7535\u6d41\n\n\n100mA(at Max.)\n\n\n\n\n\n\n\u652f\u6301\u97f3\u9891\u683c\u5f0f\n\n\nMP3, WAV, WMA\n\n\n\n\n\n\n\u652f\u6301SD\u5361\u6700\u5927\u5bb9\u91cf\n\n\n32 GB\n\n\n\n\n\n\n\u91c7\u6837\u9891\u7387\n\n\n8 / 11.025 / 12 / 16 / 22.05 / 24 / 32 / 44.1 / 48(KHz)\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\nArduino, Raspberrypi, bbg, linkitone\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\n\u7ec4\u4ef6\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - MP3 v2.0\n\n\n1PC\n\n\n\n\n\n\nGrove - Universal Cable\n\n\n1PC\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u9700\u8981\u7684\u7d20\u6750\n\n\n\n\nSeeeduino \u00d7 1\n\n\nGrove - Base Shield v2 \u00d7 1\n\n\nGrove - MP3 v2.0 \u00d7 1\n\n\n\u88c5\u6709\u97f3\u9891\u6587\u4ef6\u7684SD\u5361 \u00d7 1\n\n\nUSB \u9002\u914d\u7ebf (type A to micro type-B) \u00d7 1\n\n\n\u5e26\u67093.5mm\u63a5\u53e3\u7684\u8033\u673a\u6216\u97f3\u7bb1 \u00d7 1\n\n\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u70b9\u51fb\u4e0b\u9762\u7684\u6307\u5357\u6765\u642d\u5efa\u597d\u60a8\u7684IDE\u7f16\u8bd1\u5de5\u5177:.\n\n\nWindows\u7cfb\u7edfIDE\u6307\u5357\n\n\nMac OS X IDE\u6307\u5357\n\n\n\n\n\u63d0\u793a\n\n\u6211\u4eec\u9009\u53d6\u7684Seeeduino\u4f5c\u4e3a\u6b64\u5b9e\u4f8b\u7684\u5f00\u53d1\u677f\uff0c\u4f46\u662f\u60a8\u4e5f\u53ef\u4ee5\u9009\u7528Arduino\u7684\u5f00\u53d1\u677f\u6765\u5b9e\u73b0\u6240\u6709\u529f\u80fd\uff0c\u4ed6\u4eec\u662f\u5b8c\u5168\u517c\u5bb9\u7684\u3002\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\u56fe\n\n\n\n\n\u8f6f\u4ef6\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\n\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n\u70e7\u5f55\u4f8b\u7a0b\n\n\n\n\n\u5230 \n\u8fd9\u91cc\n \u4e0b\u8f7d\u9a71\u52a8\u5e93\u3002\n\n\n\u628a\u4e0b\u8f7d\u7684\u9a71\u52a8\u5e93\u653e\u5230Arduino IDE\u7684 \nlibraries\n \u6587\u4ef6\u5939\n\n\n\u6253\u5f00MP3_Play_Test\u7684example\uff0c\u628a\u4ee3\u7801\u70e7\u5f55\u5230Seeeduino\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08Ctrl + Shift + M\uff09\uff0c\u53d1\u9001\u547d\u4ee4\u64ad\u653e\u97f3\u4e50\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u786c\u4ef6\u539f\u7406\u56fe]\n Hardware \nSchematic files\n\n\n[\u5e93]\nLibraries\n on Github.\n\n\n[\u6570\u636e\u624b\u518c]\n KT403A \nDatasheet\n (part)", 
            "title": "Grove-MP3_v2.0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_1", 
            "text": "Grove \u2013 MP3 V2.0\u662f\u4e00\u6b3e\u5916\u5f62\u5c0f\u5de7\uff0c\u8bbe\u8ba1\u7d27\u51d1\u7684\u97f3\u9891\u6a21\u5757\u3002\u672c\u6a21\u5757\u652f\u6301\u591a\u79cd\u683c\u5f0f\u7684\u64ad\u653e\uff0cMP3, WAV\u4ee5\u53caWMV\u706f\u3002\u5e76\u652f\u6301\u591a\u79cd\u64ad\u653e\u6a21\u5f0f\uff0c\u968f\u673a\u64ad\u653e\uff0c\u5faa\u73af\u64ad\u653e\u4ee5\u53ca\u5355\u66f2\u5faa\u73af\u7b49\u3002Grove \u2013 MP3 V2\u91c7\u7528\u4e32\u53e3\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8e\u4efb\u4f55\u5177\u6709\u4e32\u53e3\u7684\u4e3b\u63a7\u677f\uff0c\u4f8b\u5982Arduino, Raspberry, LaunchPad\u7b49\u4e3b\u6d41\u7684\u5f00\u6e90\u786c\u4ef6\u5f00\u53d1\u677f\u3002\u53e6\u5916\uff0c\u6a21\u5757\u4e0a\u96c6\u6210\u6709micro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54\uff0c\u4e3a\u4f60\u97f3\u9891\u65b9\u9762\u7684\u5e94\u7528\u5e26\u6765\u6781\u5927\u7684\u4fbf\u5229\u3002", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_2", 
            "text": "\u4ea7\u54c1\u7248\u672c  \u53d1\u5e03\u65f6\u95f4  \u5f53\u524d\u652f\u6301\u72b6\u6001      Version 1.0  2013 04 28  \u652f\u6301    Version 2.0  2015 11 15  \u652f\u6301", 
            "title": "\u7248\u672c\u66f4\u65b0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_3", 
            "text": "\u5185\u7f6e\u57fa\u672c\u7684\u97f3\u9891\u64cd\u4f5c  \u534a\u8f7dmicro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54  \u591a\u79cd\u91c7\u6837\u7387\u652f\u6301\uff0c8/11.025/12/16/22.05/24/32/44.1/48K  24\u4f4dDAC\u9ad8\u7cbe\u5ea6\u8f93\u51fa\uff0c\u6700\u592790dB\u52a8\u6001\u8f93\u51fa@85dB SNR  \u652f\u6301\u591a\u79cd\u97f3\u9891\u683c\u5f0f\uff0cMP3, WAV, WMV\u706f  10\u79cd\u5747\u8861\u6a21\u5f0f    Tip  \u66f4\u591a\u5173\u4e8eGrove\u63a5\u53e3\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u4e0b\u9762\u94fe\u63a5  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_4", 
            "text": "\u9002\u5408\u5404\u79cd\u97f3\u9891\u5e94\u7528\u7684\u4e2d\u95f4\u89e3\u51b3\u65b9\u6848.", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_5", 
            "text": "\u53c2\u6570  \u6570\u503c      \u8f93\u5165  5 V (DC)    \u5de5\u4f5c\u7535\u6d41 (\u65e0\u4fe1\u53f7\u8f93\u51fa\u65f6)   15 mA    \u5de5\u4f5c\u7535\u6d41   40 mA    \u4e3b\u63a7\u82af\u7247  KT403A  (datasheet)    \u82af\u7247\u8f93\u51fa\u7535\u538b  3.3 V    \u82af\u7247\u8f93\u51fa\u7535\u6d41  100mA(at Max.)    \u652f\u6301\u97f3\u9891\u683c\u5f0f  MP3, WAV, WMA    \u652f\u6301SD\u5361\u6700\u5927\u5bb9\u91cf  32 GB    \u91c7\u6837\u9891\u7387  8 / 11.025 / 12 / 16 / 22.05 / 24 / 32 / 44.1 / 48(KHz)", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_6", 
            "text": "Arduino, Raspberrypi, bbg, linkitone", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_7", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_8", 
            "text": "\u7ec4\u4ef6\u540d\u79f0  \u6570\u91cf      Grove - MP3 v2.0  1PC    Grove - Universal Cable  1PC", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_9", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_10", 
            "text": "Seeeduino \u00d7 1  Grove - Base Shield v2 \u00d7 1  Grove - MP3 v2.0 \u00d7 1  \u88c5\u6709\u97f3\u9891\u6587\u4ef6\u7684SD\u5361 \u00d7 1  USB \u9002\u914d\u7ebf (type A to micro type-B) \u00d7 1  \u5e26\u67093.5mm\u63a5\u53e3\u7684\u8033\u673a\u6216\u97f3\u7bb1 \u00d7 1", 
            "title": "\u9700\u8981\u7684\u7d20\u6750"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_11", 
            "text": "\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u70b9\u51fb\u4e0b\u9762\u7684\u6307\u5357\u6765\u642d\u5efa\u597d\u60a8\u7684IDE\u7f16\u8bd1\u5de5\u5177:.  Windows\u7cfb\u7edfIDE\u6307\u5357  Mac OS X IDE\u6307\u5357   \u63d0\u793a \n\u6211\u4eec\u9009\u53d6\u7684Seeeduino\u4f5c\u4e3a\u6b64\u5b9e\u4f8b\u7684\u5f00\u53d1\u677f\uff0c\u4f46\u662f\u60a8\u4e5f\u53ef\u4ee5\u9009\u7528Arduino\u7684\u5f00\u53d1\u677f\u6765\u5b9e\u73b0\u6240\u6709\u529f\u80fd\uff0c\u4ed6\u4eec\u662f\u5b8c\u5168\u517c\u5bb9\u7684\u3002", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_12", 
            "text": "", 
            "title": "\u786c\u4ef6\u8fde\u63a5\u56fe"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_13", 
            "text": "\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002  \u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_14", 
            "text": "\u5230  \u8fd9\u91cc  \u4e0b\u8f7d\u9a71\u52a8\u5e93\u3002  \u628a\u4e0b\u8f7d\u7684\u9a71\u52a8\u5e93\u653e\u5230Arduino IDE\u7684  libraries  \u6587\u4ef6\u5939  \u6253\u5f00MP3_Play_Test\u7684example\uff0c\u628a\u4ee3\u7801\u70e7\u5f55\u5230Seeeduino  \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08Ctrl + Shift + M\uff09\uff0c\u53d1\u9001\u547d\u4ee4\u64ad\u653e\u97f3\u4e50", 
            "title": "\u70e7\u5f55\u4f8b\u7a0b"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_15", 
            "text": "[\u786c\u4ef6\u539f\u7406\u56fe]  Hardware  Schematic files  [\u5e93] Libraries  on Github.  [\u6570\u636e\u624b\u518c]  KT403A  Datasheet  (part)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/", 
            "text": "\u4ea7\u54c1\u7b80\u4ecb\n\n\nGrove-Multichannel Gas Sensor\u662f\u4e00\u4e2a\u5efa\u7acb\u5728MiCS-6814\u4e0a\u7684\u73af\u5883\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u68c0\u6d4b\u591a\u79cd\u6709\u5bb3\u6c14\u4f53\uff0c\u7531\u4e8e\u5176\u591a\u901a\u9053\u7279\u6027\uff0c\u53ef\u4ee5\u540c\u65f6\u68c0\u6d4b\u4e09\u79cd\u4e0d\u540c\u6c14\u4f53\u3002\u56e0\u6b64\uff0c\u5f53\u73af\u5883\u5185\u4e0d\u6b62\u4e00\u79cd\u6c14\u4f53\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u53ef\u4ee5\u7528\u4e8e\u76d1\u6d4b\u6c14\u4f53\u6d53\u5ea6\u3002\n\n\n\u8fd9\u4e2a\u4f20\u611f\u5668\u5c5e\u4e8eGrove system\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5230Base shield\u4e0a\uff0c\u5728\u4e0d\u9700\u8981\u4efb\u4f55\u8df3\u7ebf\u7684\u6761\u4ef6\u4e0b\uff0c\u76f4\u63a5\u4e0eArduino\u7ec4\u5408\u4f7f\u7528\u3002\u5176\u63a5\u53e3\u4e3aI2C\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u5b83\u8fde\u63a5\u5230\u6269\u5c55\u677f\u81ea\u5e26\u7684I2C\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\n\n\n\n\n\u6ce8\u610f\u63d0\u793a\n\n\n\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u4e86\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u6c14\u4f53\u6d53\u5ea6\u7684\u8fd1\u4f3c\u8d8b\u52bf, \u5b83\u5e76\u4e0d\u4ee3\u8868\u51c6\u786e\u771f\u5b9e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002\u7a7a\u6c14\u4e2d\u7279\u5b9a\u6210\u5206\u6d53\u5ea6\u7684\u68c0\u6d4b\u65e0\u6cd5\u901a\u8fc7\u5355\u4e00\u7684\u4f20\u611f\u5668\u5b9e\u73b0\uff0c\u901a\u5e38\u9700\u8981\u66f4\u52a0\u7cbe\u786e\u548c\u6602\u8d35\u7684\u8bbe\u5907\u3002\u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u6c14\u4f53\u6d53\u5ea6\u6570\u636e\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u60a8\u4f7f\u7528\u8fd9\u4e2a\u4f20\u611f\u5668\u3002\n\n\n\n\n\n\n\n\n\u5f00\u59cb\u4e4b\u524d\n\n\n\u76f8\u5173\u9605\u8bfb\n\n\n\u6211\u4eec\u6781\u529b\u63a8\u8350\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\uff0c\u5148\u9605\u8bfb\u5982\u4e0b\u53c2\u8003\u8d44\u6599\u3002\u8fd9\u5c06\u5e2e\u52a9\u60a8\u4e86\u89e3\u66f4\u591a\u5173\u4e8eArduino\u548c\u6211\u4eec\u4ea7\u54c1\u7684\u76f8\u5173\u77e5\u8bc6\u3002\u800c\u4e14\u4f1a\u4f7f\u60a8\u5728\u4f7f\u7528\u5f00\u6e90\u786c\u4ef6\u65f6\u66f4\u5f97\u5fc3\u5e94\u624b\u3002\n\n\n\n\nArduino\u5165\u95e8\u6307\u5bfc\n\n\nGrove\u7cfb\u7edf\u7b80\u4ecb\n\n\nBase_Shield\u4f7f\u7528\u6307\u5357\n\n\n\n\n\u9605\u8bfb\u5b8c\u4e0a\u8bc9\u8d44\u6599\u540e\u60a8\u5c06\u638c\u63e1\u5982\u4f55\u4f7f\u7528Base_Shield\u677f\u5361\u5c06Grove\u7cfb\u5217\u4ea7\u54c1\u4e0eArduino\u76f8\u8fde\u3002\u597d\u4e86\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u8fd9\u4e2a\u6559\u7a0b\u5c06\u9700\u8981\u4f7f\u7528\u5230\u4e0b\u5217\u4ea7\u54c1\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u67e5\u9605\u6216\u8d2d\u4e70\u5bf9\u5e94\u4ea7\u54c1:\n\n\n\n\nArduino UNO R3\n \u6216\u8005 \nSeeeduino v4\n\n\nBase Shield\n\n\nGrove - Multichannel Gas Sensor\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npin\u540d\u79f0\n\n\n\u76f8\u5173\u63cf\u8ff0\n\n\n\n\n\n\n\n\n\n\nGND\n\n\n\u63a5\u5730\n\n\n\n\n\n\nVCC\n\n\n3.3V - 5V\n\n\n\n\n\n\nSDA\n\n\nI2C data\n\n\n\n\n\n\nSCL\n\n\nI2C clock\n\n\n\n\n\n\n\n\n\u8be5\u4f20\u611f\u5668\u7684\u4f9b\u7535\u7535\u538b\u4ecb\u4e8e3.3V\u548c5V\u4e4b\u95f4\uff0c\u53ef\u4e0e\u8f93\u51fa\u7535\u538b\u4e3a3.3V\u7684\u5355\u7247\u673a\u517c\u5bb9\u3002\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u4e09\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u4f20\u611f\u5355\u5143\n\n\n\u57fa\u4e8eATmega168PA\n\n\n\u5e26\u6709\u53ef\u7f16\u7a0b\u5730\u5740\u7684I2C\u63a5\u53e3\n\n\n\u53ef\u4ee5\u901a\u8fc7\u5173\u95ed\u52a0\u70ed\u529f\u8017\u964d\u4f4e\u529f\u7387\n\n\n\u53ef\u68c0\u6d4b\u7684\u6c14\u4f53\u79cd\u7c7b\uff1a\n\n\n\u4e00\u6c27\u5316\u78b3 CO 1-1000ppm\n\n\n\u4e8c\u6c27\u5316\u6c2e NO2 0.05-10ppm\n\n\n\u4e59\u9187 C2H6OH 10-500ppm\n\n\n\u6c22 H2 1-1000ppm\n\n\n\u6c28 NH3 1-500ppm\n\n\n\u7532\u70f7 CH4 \n1000ppm\n\n\n\u4e19\u70f7 C3H8 \n1000ppm\n\n\n\u5f02\u4e01\u70f7 C4H10 \n1000ppm\n\n\n\n\n\u6a21\u5757\u56fe\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\nArduino, linkit, wio\n\n\n\u7535\u6c14\u7279\u6027\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u72b6\u6001\n\n\n\u6700\u5c0f\u503c\n\n\n\u7279\u5f81\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n-\n\n\n3.1\n\n\n3.3\n\n\n5.25\n\n\nV\n\n\n\n\n\n\n\u6ce2\u7eb9\n\n\n\u6700\u5927\u4f9b\u7535\n\n\n-\n\n\n80\n\n\n100\n\n\nmV\n\n\n\n\n\n\n\u53d1\u70ed\u529f\u7387\n\n\n-\n\n\n-\n\n\n-\n\n\n88\n\n\nmV\n\n\n\n\n\n\n\u6700\u5927\u529f\u7387\n\n\n-\n\n\n-\n\n\n-\n\n\n150\n\n\nmV\n\n\n\n\n\n\nADC\u7cbe\u5ea6\n\n\n-\n\n\n-\n\n\n10\n\n\n-\n\n\nBits\n\n\n\n\n\n\nI2C\u901f\u5ea6\n\n\n-\n\n\n-\n\n\n100\n\n\n400\n\n\nkHz\n\n\n\n\n\n\nVIL\n\n\n@I2C\n\n\n-0.5\n\n\n-\n\n\n0.99\n\n\nV\n\n\n\n\n\n\nVIH\n\n\n@I2C\n\n\n2.31\n\n\n-\n\n\n5.25\n\n\nV\n\n\n\n\n\n\n\n\nRED\u4f20\u611f\u5668\u6027\u80fd\n\n\n\n\n\n\n\n\nCharacteristic RED sensor\n\n\nSymbol\n\n\nTyp\n\n\nMin\n\n\nMax\n\n\nUnit\n\n\n\n\n\n\n\n\n\n\nSensing resistance in air\n\n\nR0\n\n\n-\n\n\n100\n\n\n1500\n\n\nk\u03a9\n\n\n\n\n\n\nTypical CO detection range\n\n\nFS\n\n\n-\n\n\n1\n\n\n1000\n\n\nppm\n\n\n\n\n\n\nSensitivity factor\n\n\nSR\n\n\n-\n\n\n1.2\n\n\n50\n\n\n-\n\n\n\n\n\n\n\n\n\n\nOX\u4f20\u611f\u5668\u6027\u80fd\n\n\n\n\n\n\n\n\nCharacteristic OX sensor\n\n\nSymbol\n\n\nTyp\n\n\nMin\n\n\nMax\n\n\nUnit\n\n\n\n\n\n\n\n\n\n\nSensing resistance in air\n\n\nR0\n\n\n-\n\n\n0.8\n\n\n20\n\n\nk\u03a9\n\n\n\n\n\n\nTypical NO2 detection range\n\n\nFS\n\n\n-\n\n\n0.05\n\n\n10\n\n\nppm\n\n\n\n\n\n\nSensitivity factor\n\n\nSR\n\n\n-\n\n\n2\n\n\n-\n\n\n-\n\n\n\n\n\n\n\n\n\n\nNH3\u4f20\u611f\u5668\u6027\u80fd\n\n\n\n\n\n\n\n\nCharacteristic NH3 sensor\n\n\nSymbol\n\n\nTyp\n\n\nMin\n\n\nMax\n\n\nUnit\n\n\n\n\n\n\n\n\n\n\nSensing resistance in air\n\n\nR0\n\n\n-\n\n\n10\n\n\n1500\n\n\nk\u03a9\n\n\n\n\n\n\nTypical NH3 detection range\n\n\nFS\n\n\n-\n\n\n1\n\n\n300\n\n\nppm\n\n\n\n\n\n\nSensitivity factor\n\n\nSR\n\n\n-\n\n\n1.5\n\n\n15\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n!!!\u6ce8\u610f\n    \u4e3a\u4e86\u5f97\u5230\u7a33\u5b9a\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u4f20\u611f\u5668\u9700\u8981\u9884\u52a0\u70ed\u5341\u5206\u949f\u4ee5\u4e0a\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\u56fe:\n\n\n1.\u5c06 Grove - Multichannel Gas Sensor \u548c Seeeduino\u6309\u7167\u4e0b\u56fe\u65b9\u5f0f\u76f8\u8fde.\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801:\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\n\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\n2.\u4e0b\u8f7d \nArduino Library \n Grove/Xadow firmware\n \u7136\u540e\u6dfb\u52a0\u5230Arduino\u5e93\u6587\u4ef6\u4e2d\u3002\n\n\n3.\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f:File -\n Example -\n Mutichannel_Gas_Sensor-\n ReadSensorValue_Grove.\n\n\nReadSensorValue_Grove \u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n\n// Read Data from Grove - Multichannel Gas Sensor\n\n\n#include\n \nWire.h\n\n\n#include\n \nMutichannelGasSensor.h\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nSerial\n.\nbegin\n(\n115200\n);\n  \n// start serial for output\n\n    \nSerial\n.\nprintln\n(\npower on!\n);\n\n    \ngas\n.\nbegin\n(\n0x04\n);\n//the default I2C address of the slave is 0x04\n\n    \ngas\n.\npowerOn\n();\n\n    \nSerial\n.\nprint\n(\nFirmware Version = \n);\n\n    \nSerial\n.\nprintln\n(\ngas\n.\ngetVersion\n());\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nfloat\n \nc\n;\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_NH3\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of NH3 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_CO\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of CO is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_NO2\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of NO2 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_C3H8\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of C3H8 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_C4H10\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of C4H10 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_CH4\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of CH4 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_H2\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of H2 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_C2H5OH\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of C2H5OH is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \ndelay\n(\n1000\n);\n\n\n}\n\n\n\n\n\n4.\u4e0a\u4f20\u4ee3\u7801\u3002\u8bf7\u8bb0\u5f97\u5728Arduino\u8f6f\u4ef6\u7684 \u5de5\u5177 | \u5f00\u53d1\u677f\u4e2d\u52fe\u9009\u5bf9\u5e94\u7684\u677f\u5361\uff0c\u672c\u4f8b\u7a0b\u4f7f\u7528\u7684\u662fSeeeduino Uno\uff0c\u540c\u65f6\u8bf7\u9009\u62e9\u6b63\u786e\u7684\u4e32\u53e3\u3002\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08ctrl+shift+M\uff09\uff0c\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u6765\u81ea\u4f20\u611f\u5668\u7684\u6570\u636e\u4e86.\n\n\n\n\n!!!\u5c0f\u63d0\u793a\n    \u66f4\u591a\u7684\u5173\u4e8eGrove\u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u53c2\u8003 \nGrove System\n\n\n\u66f4\u65b0\u56fa\u4ef6\n\n\n\u8be5Grove\u6a21\u5757\u6709\u4e00\u4e2aATmega168 MCU \u51fa\u5382\u56fa\u4ef6\u3002\u56fa\u4ef6\u5df2\u7ecf\u4e8e2016\u5e7411\u670811\u66f4\u65b0\u5230\u4e86V2.0\u7248\u672c\u3002\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u68c0\u6d4b\u60a8\u5f53\u524d\u7684\u56fa\u4ef6\u7248\u672c\u3002\n\n\n// Get firmware version of Grove Multichannel Gas Sensor\n\n\n#include\n \nWire.h\n\n\n#include\n \nMutichannelGasSensor.h\n\n\n\n#define SENSOR_ADDR     0X04        \n// default to 0x04\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nSerial\n.\nbegin\n(\n115200\n);\n\n    \ngas\n.\nbegin\n(\nSENSOR_ADDR\n);\n\n\n    \nunsigned\n \nchar\n \nversion\n \n=\n \ngas\n.\ngetVersion\n();\n\n    \nSerial\n.\nprint\n(\nVersion = \n);\n\n    \nSerial\n.\nprintln\n(\nversion\n);\n    \n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \n// nothing to do\n\n\n}\n\n\n\n\n\n\u5982\u679c\u68c0\u6d4b\u7ed3\u679c\u60a8\u7684\u56fa\u4ef6\u7248\u672c\u662fV1\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u66f4\u65b0\u56fa\u4ef6\u5230V2\u4ee5\u83b7\u53d6\u66f4\u7a33\u5b9a\u7684\u6570\u636e\u3002\n\n\n\u4e3a\u4e86\u66f4\u65b0\u56fa\u4ef6\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7d20\u6750,\n\n\n\n\nAn Arduino UNO/Seeeduino V3/\n\n\n6 \u6839\u675c\u90a6\u7ebf\n\n\n\u70d9\u94c1\n\n\n\n\n\u5728\u677f\u5361\u7684\u80cc\u9762\u7559\u6709ICSP\u710a\u76d8\uff0c\u60a8\u9700\u8981\u5c06\u8fd9\u4e9b\u710a\u76d8\u4e0eArduino\u677f\u5b50\u76f8\u8fde\u3002\u7ba1\u811a\u5b9a\u4e49\u5982\u4e0b\u8868\uff0c\u8fde\u63a5\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\n\n\n\nSensor\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nMISO\n\n\nD12\n\n\n\n\n\n\nSCK\n\n\nD13\n\n\n\n\n\n\nNRST\n\n\nD10\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nMOSI\n\n\nD11\n\n\n\n\n\n\nVCC\n\n\n5V\n\n\n\n\n\n\n\n\n\n\n\u8fde\u63a5\u597d\u4e4b\u540e\uff0c\u8bf7\u6253\u5f00\u60a8Arduino\u793a\u4f8b\u4e2d\u7684 \nUpdateFrimware\n , \u8fd0\u884c\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002\u60a8\u5c06\u770b\u5230\u4e00\u4e9b\u6253\u5370\u7684\u4fe1\u606f\u3002\n\n\n\u8f93\u5165\u4e00\u4e2a \u201c g \u201d\u6765\u5f00\u59cb\u70e7\u5f55\u3002\n\n\n\n\n\u6821\u51c6\n\n\n\u5982\u679c\u60a8\u603b\u662f\u5f97\u5230\u4e00\u4e9b\u4e0d\u53ef\u9760\u7684\u6570\u636e\uff0c\u8bf7\u5c1d\u8bd5\u6821\u51c6\u4f20\u611f\u5668\u3002\u6253\u5f00\u793a\u4f8b\u4e2d\u7684 \ncalibration\n ,\u4e0a\u4f20\u81f3\u60a8\u7684Arduino\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u6821\u51c6\u7684\u76f8\u5173\u4fe1\u606f\u3002\n\n\n!!!\u6ce8\u610f\n   \u5728\u4f20\u611f\u5668\u51fa\u5382\u524d\u5df2\u7ecf\u6821\u51c6\u8fc7\u4e86\uff0c\u5982\u679c\u60a8\u60f3\u8981\u91cd\u65b0\u6821\u51c6\uff0c\u8bf7\u786e\u4fdd\u6821\u51c6\u65f6\u7a7a\u6c14\u73af\u5883\u662f\u65b0\u9c9c\u6e05\u65b0\u7684\u3002\u6821\u51c6\u5927\u81f4\u9700\u8981\u51e0\u5206\u949f\u5230\u534a\u5c0f\u65f6\u4e0d\u7b49\u7684\u65f6\u95f4\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u539f\u7406\u56fe]\n  \nGrove - Multichannel Gas Sensor v1.0 sch\n\n\n[PCB\u56fe]\n \nGrove - Multichannel Gas Sensor eagle files\n\n\n[\u5e93\u6587\u4ef6]\n \nArduino Library \n Grove/Xadow firmware\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nMiCS-6814 Datasheet\n\n\n\n\n\n\n\nFAQ\n\n\n\n\n\n\nQ1. \u5982\u4f55\u6539\u53d8\u6a21\u5757\u7684I2C\u5730\u5740\n\n\n\n\nA1. \u6253\u5f00\u793a\u4f8b\u4e2d\u540d\u4e3aI2C_Address\u7684\u4f8b\u7a0b\uff0c\u8fd0\u884c\u5b83\u3002\n\n\n\n\n\n\n\n\nQ2. \u6211\u6539\u4e86I2C\u5730\u5740\u4f46\u662f\u4e0d\u5c0f\u5fc3\u5fd8\u4e86\n\n\n\n\n*A2. \u522b\u62c5\u5fc3\uff0c\u8fd0\u884c\u793a\u4f8b\u4e2d\u540d\u4e3a factory_setting\u7684\u4f8b\u7a0b\uff0c\u56de\u5230\u51fa\u5382\u72b6\u6001\u3002 *\n\n\n\n\n\n\n\n\n!!!\u5c0f\u63d0\u793a\n    \u5982\u679c\u60a8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u652f\u6301\uff0c\u8bf7\u8054\u7cfb\u4e0b\u9762\u7684\u90ae\u7bb1\uff0c\u6211\u4eec\u671f\u5f85\u5e76\u6b22\u8fce\u60a8\u7684\u54a8\u8be2\uff1a", 
            "title": "Grove-Multichannel_Gas_Sensor"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_1", 
            "text": "Grove-Multichannel Gas Sensor\u662f\u4e00\u4e2a\u5efa\u7acb\u5728MiCS-6814\u4e0a\u7684\u73af\u5883\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u68c0\u6d4b\u591a\u79cd\u6709\u5bb3\u6c14\u4f53\uff0c\u7531\u4e8e\u5176\u591a\u901a\u9053\u7279\u6027\uff0c\u53ef\u4ee5\u540c\u65f6\u68c0\u6d4b\u4e09\u79cd\u4e0d\u540c\u6c14\u4f53\u3002\u56e0\u6b64\uff0c\u5f53\u73af\u5883\u5185\u4e0d\u6b62\u4e00\u79cd\u6c14\u4f53\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u53ef\u4ee5\u7528\u4e8e\u76d1\u6d4b\u6c14\u4f53\u6d53\u5ea6\u3002  \u8fd9\u4e2a\u4f20\u611f\u5668\u5c5e\u4e8eGrove system\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5230Base shield\u4e0a\uff0c\u5728\u4e0d\u9700\u8981\u4efb\u4f55\u8df3\u7ebf\u7684\u6761\u4ef6\u4e0b\uff0c\u76f4\u63a5\u4e0eArduino\u7ec4\u5408\u4f7f\u7528\u3002\u5176\u63a5\u53e3\u4e3aI2C\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u5b83\u8fde\u63a5\u5230\u6269\u5c55\u677f\u81ea\u5e26\u7684I2C\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528   \u6ce8\u610f\u63d0\u793a \n\n\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u4e86\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u6c14\u4f53\u6d53\u5ea6\u7684\u8fd1\u4f3c\u8d8b\u52bf, \u5b83\u5e76\u4e0d\u4ee3\u8868\u51c6\u786e\u771f\u5b9e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002\u7a7a\u6c14\u4e2d\u7279\u5b9a\u6210\u5206\u6d53\u5ea6\u7684\u68c0\u6d4b\u65e0\u6cd5\u901a\u8fc7\u5355\u4e00\u7684\u4f20\u611f\u5668\u5b9e\u73b0\uff0c\u901a\u5e38\u9700\u8981\u66f4\u52a0\u7cbe\u786e\u548c\u6602\u8d35\u7684\u8bbe\u5907\u3002\u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u6c14\u4f53\u6d53\u5ea6\u6570\u636e\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u60a8\u4f7f\u7528\u8fd9\u4e2a\u4f20\u611f\u5668\u3002", 
            "title": "\u4ea7\u54c1\u7b80\u4ecb"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_2", 
            "text": "", 
            "title": "\u5f00\u59cb\u4e4b\u524d"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_3", 
            "text": "\u6211\u4eec\u6781\u529b\u63a8\u8350\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\uff0c\u5148\u9605\u8bfb\u5982\u4e0b\u53c2\u8003\u8d44\u6599\u3002\u8fd9\u5c06\u5e2e\u52a9\u60a8\u4e86\u89e3\u66f4\u591a\u5173\u4e8eArduino\u548c\u6211\u4eec\u4ea7\u54c1\u7684\u76f8\u5173\u77e5\u8bc6\u3002\u800c\u4e14\u4f1a\u4f7f\u60a8\u5728\u4f7f\u7528\u5f00\u6e90\u786c\u4ef6\u65f6\u66f4\u5f97\u5fc3\u5e94\u624b\u3002   Arduino\u5165\u95e8\u6307\u5bfc  Grove\u7cfb\u7edf\u7b80\u4ecb  Base_Shield\u4f7f\u7528\u6307\u5357   \u9605\u8bfb\u5b8c\u4e0a\u8bc9\u8d44\u6599\u540e\u60a8\u5c06\u638c\u63e1\u5982\u4f55\u4f7f\u7528Base_Shield\u677f\u5361\u5c06Grove\u7cfb\u5217\u4ea7\u54c1\u4e0eArduino\u76f8\u8fde\u3002\u597d\u4e86\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01", 
            "title": "\u76f8\u5173\u9605\u8bfb"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_4", 
            "text": "\u8fd9\u4e2a\u6559\u7a0b\u5c06\u9700\u8981\u4f7f\u7528\u5230\u4e0b\u5217\u4ea7\u54c1\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u67e5\u9605\u6216\u8d2d\u4e70\u5bf9\u5e94\u4ea7\u54c1:   Arduino UNO R3  \u6216\u8005  Seeeduino v4  Base Shield  Grove - Multichannel Gas Sensor", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_5", 
            "text": "pin\u540d\u79f0  \u76f8\u5173\u63cf\u8ff0      GND  \u63a5\u5730    VCC  3.3V - 5V    SDA  I2C data    SCL  I2C clock     \u8be5\u4f20\u611f\u5668\u7684\u4f9b\u7535\u7535\u538b\u4ecb\u4e8e3.3V\u548c5V\u4e4b\u95f4\uff0c\u53ef\u4e0e\u8f93\u51fa\u7535\u538b\u4e3a3.3V\u7684\u5355\u7247\u673a\u517c\u5bb9\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_6", 
            "text": "\u4e09\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u4f20\u611f\u5355\u5143  \u57fa\u4e8eATmega168PA  \u5e26\u6709\u53ef\u7f16\u7a0b\u5730\u5740\u7684I2C\u63a5\u53e3  \u53ef\u4ee5\u901a\u8fc7\u5173\u95ed\u52a0\u70ed\u529f\u8017\u964d\u4f4e\u529f\u7387  \u53ef\u68c0\u6d4b\u7684\u6c14\u4f53\u79cd\u7c7b\uff1a  \u4e00\u6c27\u5316\u78b3 CO 1-1000ppm  \u4e8c\u6c27\u5316\u6c2e NO2 0.05-10ppm  \u4e59\u9187 C2H6OH 10-500ppm  \u6c22 H2 1-1000ppm  \u6c28 NH3 1-500ppm  \u7532\u70f7 CH4  1000ppm  \u4e19\u70f7 C3H8  1000ppm  \u5f02\u4e01\u70f7 C4H10  1000ppm", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_7", 
            "text": "", 
            "title": "\u6a21\u5757\u56fe"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_8", 
            "text": "Arduino, linkit, wio", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_9", 
            "text": "\u9879\u76ee  \u72b6\u6001  \u6700\u5c0f\u503c  \u7279\u5f81\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u7535\u538b  -  3.1  3.3  5.25  V    \u6ce2\u7eb9  \u6700\u5927\u4f9b\u7535  -  80  100  mV    \u53d1\u70ed\u529f\u7387  -  -  -  88  mV    \u6700\u5927\u529f\u7387  -  -  -  150  mV    ADC\u7cbe\u5ea6  -  -  10  -  Bits    I2C\u901f\u5ea6  -  -  100  400  kHz    VIL  @I2C  -0.5  -  0.99  V    VIH  @I2C  2.31  -  5.25  V", 
            "title": "\u7535\u6c14\u7279\u6027"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#red", 
            "text": "Characteristic RED sensor  Symbol  Typ  Min  Max  Unit      Sensing resistance in air  R0  -  100  1500  k\u03a9    Typical CO detection range  FS  -  1  1000  ppm    Sensitivity factor  SR  -  1.2  50  -", 
            "title": "RED\u4f20\u611f\u5668\u6027\u80fd"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#ox", 
            "text": "Characteristic OX sensor  Symbol  Typ  Min  Max  Unit      Sensing resistance in air  R0  -  0.8  20  k\u03a9    Typical NO2 detection range  FS  -  0.05  10  ppm    Sensitivity factor  SR  -  2  -  -", 
            "title": "OX\u4f20\u611f\u5668\u6027\u80fd"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#nh3", 
            "text": "Characteristic NH3 sensor  Symbol  Typ  Min  Max  Unit      Sensing resistance in air  R0  -  10  1500  k\u03a9    Typical NH3 detection range  FS  -  1  300  ppm    Sensitivity factor  SR  -  1.5  15  -", 
            "title": "NH3\u4f20\u611f\u5668\u6027\u80fd"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_10", 
            "text": "!!!\u6ce8\u610f\n    \u4e3a\u4e86\u5f97\u5230\u7a33\u5b9a\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u4f20\u611f\u5668\u9700\u8981\u9884\u52a0\u70ed\u5341\u5206\u949f\u4ee5\u4e0a\u3002  \u786c\u4ef6\u8fde\u63a5\u56fe:  1.\u5c06 Grove - Multichannel Gas Sensor \u548c Seeeduino\u6309\u7167\u4e0b\u56fe\u65b9\u5f0f\u76f8\u8fde.   \u4e0a\u4f20\u4ee3\u7801:  \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002  \u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002  2.\u4e0b\u8f7d  Arduino Library   Grove/Xadow firmware  \u7136\u540e\u6dfb\u52a0\u5230Arduino\u5e93\u6587\u4ef6\u4e2d\u3002  3.\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f:File -  Example -  Mutichannel_Gas_Sensor-  ReadSensorValue_Grove.  ReadSensorValue_Grove \u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a  // Read Data from Grove - Multichannel Gas Sensor  #include   Wire.h  #include   MutichannelGasSensor.h  void   setup ()  { \n     Serial . begin ( 115200 );    // start serial for output \n     Serial . println ( power on! ); \n     gas . begin ( 0x04 ); //the default I2C address of the slave is 0x04 \n     gas . powerOn (); \n     Serial . print ( Firmware Version =  ); \n     Serial . println ( gas . getVersion ());  }  void   loop ()  { \n     float   c ; \n\n     c   =   gas . measure_NH3 (); \n     Serial . print ( The concentration of NH3 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_CO (); \n     Serial . print ( The concentration of CO is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_NO2 (); \n     Serial . print ( The concentration of NO2 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_C3H8 (); \n     Serial . print ( The concentration of C3H8 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_C4H10 (); \n     Serial . print ( The concentration of C4H10 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_CH4 (); \n     Serial . print ( The concentration of CH4 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_H2 (); \n     Serial . print ( The concentration of H2 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_C2H5OH (); \n     Serial . print ( The concentration of C2H5OH is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     delay ( 1000 );  }   4.\u4e0a\u4f20\u4ee3\u7801\u3002\u8bf7\u8bb0\u5f97\u5728Arduino\u8f6f\u4ef6\u7684 \u5de5\u5177 | \u5f00\u53d1\u677f\u4e2d\u52fe\u9009\u5bf9\u5e94\u7684\u677f\u5361\uff0c\u672c\u4f8b\u7a0b\u4f7f\u7528\u7684\u662fSeeeduino Uno\uff0c\u540c\u65f6\u8bf7\u9009\u62e9\u6b63\u786e\u7684\u4e32\u53e3\u3002  \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08ctrl+shift+M\uff09\uff0c\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u6765\u81ea\u4f20\u611f\u5668\u7684\u6570\u636e\u4e86.   !!!\u5c0f\u63d0\u793a\n    \u66f4\u591a\u7684\u5173\u4e8eGrove\u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u53c2\u8003  Grove System", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_11", 
            "text": "\u8be5Grove\u6a21\u5757\u6709\u4e00\u4e2aATmega168 MCU \u51fa\u5382\u56fa\u4ef6\u3002\u56fa\u4ef6\u5df2\u7ecf\u4e8e2016\u5e7411\u670811\u66f4\u65b0\u5230\u4e86V2.0\u7248\u672c\u3002\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u68c0\u6d4b\u60a8\u5f53\u524d\u7684\u56fa\u4ef6\u7248\u672c\u3002  // Get firmware version of Grove Multichannel Gas Sensor  #include   Wire.h  #include   MutichannelGasSensor.h  #define SENSOR_ADDR     0X04         // default to 0x04  void   setup ()  { \n     Serial . begin ( 115200 ); \n     gas . begin ( SENSOR_ADDR ); \n\n     unsigned   char   version   =   gas . getVersion (); \n     Serial . print ( Version =  ); \n     Serial . println ( version );      }  void   loop ()  { \n     // nothing to do  }   \u5982\u679c\u68c0\u6d4b\u7ed3\u679c\u60a8\u7684\u56fa\u4ef6\u7248\u672c\u662fV1\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u66f4\u65b0\u56fa\u4ef6\u5230V2\u4ee5\u83b7\u53d6\u66f4\u7a33\u5b9a\u7684\u6570\u636e\u3002  \u4e3a\u4e86\u66f4\u65b0\u56fa\u4ef6\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7d20\u6750,   An Arduino UNO/Seeeduino V3/  6 \u6839\u675c\u90a6\u7ebf  \u70d9\u94c1   \u5728\u677f\u5361\u7684\u80cc\u9762\u7559\u6709ICSP\u710a\u76d8\uff0c\u60a8\u9700\u8981\u5c06\u8fd9\u4e9b\u710a\u76d8\u4e0eArduino\u677f\u5b50\u76f8\u8fde\u3002\u7ba1\u811a\u5b9a\u4e49\u5982\u4e0b\u8868\uff0c\u8fde\u63a5\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\u3002     Sensor  Arduino      MISO  D12    SCK  D13    NRST  D10    GND  GND    MOSI  D11    VCC  5V      \u8fde\u63a5\u597d\u4e4b\u540e\uff0c\u8bf7\u6253\u5f00\u60a8Arduino\u793a\u4f8b\u4e2d\u7684  UpdateFrimware  , \u8fd0\u884c\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002\u60a8\u5c06\u770b\u5230\u4e00\u4e9b\u6253\u5370\u7684\u4fe1\u606f\u3002  \u8f93\u5165\u4e00\u4e2a \u201c g \u201d\u6765\u5f00\u59cb\u70e7\u5f55\u3002", 
            "title": "\u66f4\u65b0\u56fa\u4ef6"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_12", 
            "text": "\u5982\u679c\u60a8\u603b\u662f\u5f97\u5230\u4e00\u4e9b\u4e0d\u53ef\u9760\u7684\u6570\u636e\uff0c\u8bf7\u5c1d\u8bd5\u6821\u51c6\u4f20\u611f\u5668\u3002\u6253\u5f00\u793a\u4f8b\u4e2d\u7684  calibration  ,\u4e0a\u4f20\u81f3\u60a8\u7684Arduino\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u6821\u51c6\u7684\u76f8\u5173\u4fe1\u606f\u3002  !!!\u6ce8\u610f\n   \u5728\u4f20\u611f\u5668\u51fa\u5382\u524d\u5df2\u7ecf\u6821\u51c6\u8fc7\u4e86\uff0c\u5982\u679c\u60a8\u60f3\u8981\u91cd\u65b0\u6821\u51c6\uff0c\u8bf7\u786e\u4fdd\u6821\u51c6\u65f6\u7a7a\u6c14\u73af\u5883\u662f\u65b0\u9c9c\u6e05\u65b0\u7684\u3002\u6821\u51c6\u5927\u81f4\u9700\u8981\u51e0\u5206\u949f\u5230\u534a\u5c0f\u65f6\u4e0d\u7b49\u7684\u65f6\u95f4\u3002", 
            "title": "\u6821\u51c6"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_13", 
            "text": "[\u539f\u7406\u56fe]    Grove - Multichannel Gas Sensor v1.0 sch  [PCB\u56fe]   Grove - Multichannel Gas Sensor eagle files  [\u5e93\u6587\u4ef6]   Arduino Library   Grove/Xadow firmware  [\u82af\u7247\u6570\u636e\u624b\u518c]   MiCS-6814 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#faq", 
            "text": "Q1. \u5982\u4f55\u6539\u53d8\u6a21\u5757\u7684I2C\u5730\u5740   A1. \u6253\u5f00\u793a\u4f8b\u4e2d\u540d\u4e3aI2C_Address\u7684\u4f8b\u7a0b\uff0c\u8fd0\u884c\u5b83\u3002     Q2. \u6211\u6539\u4e86I2C\u5730\u5740\u4f46\u662f\u4e0d\u5c0f\u5fc3\u5fd8\u4e86   *A2. \u522b\u62c5\u5fc3\uff0c\u8fd0\u884c\u793a\u4f8b\u4e2d\u540d\u4e3a factory_setting\u7684\u4f8b\u7a0b\uff0c\u56de\u5230\u51fa\u5382\u72b6\u6001\u3002 *     !!!\u5c0f\u63d0\u793a\n    \u5982\u679c\u60a8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u652f\u6301\uff0c\u8bf7\u8054\u7cfb\u4e0b\u9762\u7684\u90ae\u7bb1\uff0c\u6211\u4eec\u671f\u5f85\u5e76\u6b22\u8fce\u60a8\u7684\u54a8\u8be2\uff1a", 
            "title": "FAQ"
        }, 
        {
            "location": "/Respeaker_Mic_Array/", 
            "text": "\u4ea7\u54c1\u7b80\u4ecb\n\n\nReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u8fdc\u573a\u8bed\u97f3\u6355\u83b7\n\n\n\u58f0\u6e90\u5b9a\u4f4d\n\n\n\u6ce2\u675f\u6210\u5f62\n\n\n\u566a\u58f0\u6291\u5236\n\n\n\u6d88\u6df7\u54cd\n\n\n\u56de\u97f3\u6d88\u9664\n\n\n\n\n\u6280\u672f\u89c4\u683c\n\n\n\n\n\n\nXVSM-2000\u5185\u7f6e16\u4e2a\u5185\u6838:\n\n\n\u57282\u4e2axCore titles\u4e0a\u768416\u4e2a\u5b9e\u65f6\u903b\u8f91\u5185\u6838\n\n\n\u6838\u5728dual issue mode\u4e0b\u5171\u4eab2000 MIPS\n\n\n\u5185\u90e8single cycle 512KB SRAM\u548c2MB\u5185\u7f6e\u95ea\u5b58\n\n\n16KB\u5185\u90e8OTP\uff08\u6700\u59278KB\u6bcftile\uff09\n\n\nUSB PHY\uff0c\u5b8c\u5168\u7b26\u5408USB 2.0\u89c4\u8303\n\n\n\u53ef\u7f16\u7a0b I/O.\n\n\n\u63d0\u4f9bDFU\u6a21\u5f0f.\n\n\n\n\n\n\n7 \u6570\u5b57\u9ea6\u514b\u98ce:\n\n\n\u7528\u4e8e\u8fdc\u573a\u8bed\u97f3\u8bc6\u522b\u6216\u58f0\u97f3\u5b9a\u4f4d.\n\n\nST MP34DT01-M.\n\n\n-26 dBFS \u7075\u654f\u5ea6.\n\n\n120 dBSPL \u58f0\u5b66\u8fc7\u8f7d\u70b9.\n\n\n61 dB \u4fe1\u566a\u6bd4.\n\n\n\u5168\u5411\u7075\u654f\u5ea6.\n\n\nPDM \u8f93\u51fa.\n\n\n\n\n\n\n12 RGB LEDs:\n\n\n256\u7ea7\u4eae\u5ea6.\n\n\n800kHz\u7ebf\u6570\u636e\u4f20\u8f93.\n\n\n\n\n\n\n\u97f3\u9891\u8f93\u51fa:\n\n\n\u677f\u8f7d3.5mmAUX\u8f93\u51fa.\n\n\nWOLFSON WM8960.\n\n\n24 or 16bit 16kHz\u7acb\u4f53\u58f0\u8f93\u51fa.\n\n\n40 mW \u8f93\u51fa\u529f\u7387 16 \u2126 @ 3.3 V.\n\n\n\n\n\n\n\u65f6\u949f\u540c\u6b65\uff1a\n\n\n\u677f\u8f7d PLL.\n\n\n\u7528\u4e8e DAC,MIC\u7684\u53ef\u7f16\u7a0b\u91c7\u6837\u65f6\u949f.\n(\u5982\u679c\u5728XVSM-2000\u4e2d\u4f7f\u7528DSP\uff0c\u5219\u7981\u7528).\n\n\n\n\n\n\n\u7535\u6e90:\n\n\nMicro USB\u6216\u6269\u5c55\u63a5\u5934\u63d0\u4f9b5V\u7535\u6e90.\n\n\n\n\n\n\n\u5c3a\u5bf8:\n\n\n\u76f4\u5f84 70mm.\n\n\n\n\n\n\n\u91cd\u91cf:\n\n\n15.25g\n\n\n\n\n\n\n\n\nReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\u9a71\u52a8\n\n\n\n\n\u5bf9\u4e8eWindows\u7528\u6237, \u8bf7\u5355\u51fb \n\u6b64\u5904\n \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\u5bf9\u4e8eLinux\u6216Mac\u7528\u6237\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\n\n\u7528ReSpeaker Core\u63d0\u53d6\u58f0\u97f3\n\n\n\u5f53\u9ea6\u514b\u98ce\u9635\u5217\u5806\u53e0\u5728ReSpeaker Core\u4e0a\u65f6\uff0c\u5c06\u81ea\u52a8\u68c0\u6d4b\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7aplay -l\u6765\u624b\u52a8\u68c0\u6d4b\uff09\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u53ef\u4ee5\u4f7f\u7528\nrespeaker_python_library\n\u6765\u5f00\u53d1\u8bed\u97f3\u4ea4\u4e92\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u60a8\u4e0d\u9700\u8981\u5173\u5fc3Mic Array\u662f\u5426\u6253\u5f00\u3002\u6211\u4eec\u7684\u5e93\u6587\u4ef6\u4f1a\u68c0\u67e5\u5e76\u9009\u62e9\u9ea6\u514b\u98ce\u9635\u5217\u3002\n\n\n\u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c\u57fa\u4e8ePyaudio\u7684\u9ea6\u514b\u98ce\u7c7b\u5177\u6709\u540d\u4e3alisten\u7684\u65b9\u6cd5\u6765\u63d0\u53d6\u8bed\u97f3\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u793a\u4f8b\u4ee3\u7801\u4ee5\u4f9b\u4f7f\u7528\u3002\n\n\n\u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c \nclass Microphone\n, \u57fa\u4e8e \nPyaudio\n, \u7528 \nlisten\n, \u6765\u63d0\u53d6\u58f0\u97f3. \u8bf7\u67e5\u9605 \nexample code\n \u5173\u4e8e\u5982\u4f55\u4f7f\u7528.\n\n\n\u5728PC\u6216Mac\u6216Linux\u6216Raspberry Pi\u4e0a\u63d0\u53d6\u8bed\u97f3\n\n\n\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8ePyaudio\u7684\u4f8b\u5b50\uff1a\n\n\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u6765\u83b7\u53d6Mic Array\u7684\u8bbe\u5907\u7d22\u5f15\u53f7\uff1a\n\n\nimport\n \npyaudio\n\n\n\np\n \n=\n \npyaudio\n.\nPyAudio\n()\n\n\ninfo\n \n=\n \np\n.\nget_host_api_info_by_index\n(\n0\n)\n\n\nnumdevices\n \n=\n \ninfo\n.\nget\n(\ndeviceCount\n)\n\n\n\nfor\n \ni\n \nin\n \nrange\n(\n0\n,\n \nnumdevices\n):\n\n        \nif\n \n(\np\n.\nget_device_info_by_host_api_device_index\n(\n0\n,\n \ni\n)\n.\nget\n(\nmaxInputChannels\n))\n \n \n0\n:\n\n            \nprint\n \nInput Device id \n,\n \ni\n,\n \n - \n,\n \np\n.\nget_device_info_by_host_api_device_index\n(\n0\n,\n \ni\n)\n.\nget\n(\nname\n)\n\n\n\n\n\n\u7136\u540e\uff0c\u66f4\u6539RESPEAKER_INDEX = 1\u4e3a\u60a8\u7684\u7d22\u5f15\u53f7\u3002\u8fd0\u884c\u811a\u672c\u6765\u5f55\u5236\u8bed\u97f3\u3002\n\n\nimport\n \npyaudio\n\n\nimport\n \nwave\n\n\n\nRESPEAKER_RATE\n \n=\n \n16000\n\n\nRESPEAKER_CHANNELS\n \n=\n \n2\n\n\nRESPEAKER_WIDTH\n \n=\n \n2\n\n\n# run getDeviceInfo.py to get index\n\n\nRESPEAKER_INDEX\n \n=\n \n1\n\n\nCHUNK\n \n=\n \n1024\n\n\nRECORD_SECONDS\n \n=\n \n5\n\n\nWAVE_OUTPUT_FILENAME\n \n=\n \noutput.wav\n\n\n\np\n \n=\n \npyaudio\n.\nPyAudio\n()\n\n\n\nstream\n \n=\n \np\n.\nopen\n(\n\n            \nrate\n=\nRESPEAKER_RATE\n,\n\n            \nformat\n=\np\n.\nget_format_from_width\n(\nRESPEAKER_WIDTH\n),\n\n            \nchannels\n=\nRESPEAKER_CHANNELS\n,\n\n            \ninput\n=\nTrue\n,\n\n            \ninput_device_index\n=\nRESPEAKER_INDEX\n,)\n\n\n\nprint\n(\n* recording\n)\n\n\n\nframes\n \n=\n \n[]\n\n\n\nfor\n \ni\n \nin\n \nrange\n(\n0\n,\n \nint\n(\nRESPEAKER_RATE\n \n/\n \nCHUNK\n \n*\n \nRECORD_SECONDS\n)):\n\n    \ndata\n \n=\n \nstream\n.\nread\n(\nCHUNK\n)\n\n    \nframes\n.\nappend\n(\ndata\n)\n\n\n\nprint\n(\n* done recording\n)\n\n\n\nstream\n.\nstop_stream\n()\n\n\nstream\n.\nclose\n()\n\n\np\n.\nterminate\n()\n\n\n\nwf\n \n=\n \nwave\n.\nopen\n(\nWAVE_OUTPUT_FILENAME\n,\n \nwb\n)\n\n\nwf\n.\nsetnchannels\n(\nRESPEAKER_CHANNELS\n)\n\n\nwf\n.\nsetsampwidth\n(\np\n.\nget_sample_size\n(\np\n.\nget_format_from_width\n(\nRESPEAKER_WIDTH\n)))\n\n\nwf\n.\nsetframerate\n(\nRESPEAKER_RATE\n)\n\n\nwf\n.\nwriteframes\n(\nb\n.\njoin\n(\nframes\n))\n\n\nwf\n.\nclose\n()\n\n\n\n\n\nReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6\n\n\nYou could download ReSpeaker Mic array firmwares for DFU \nhere\n. We have provided two versions:\n\n\n\n\nxvsm version\n : initial version, outputs 2 channels data with dsp support.\n\n\nraw version\n : outputs 8 channels mic raw data, this firmware is without xvsm dsp support, so it does not support some functions such as DOA, AEC and so on.\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n\u4e0b\u8f7d\u9002\u7528\u4e8eDFU\u7684ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7248\u672c\uff1a\n\n\n\n\nxvsm\u7248\u672c\n\uff1a\u521d\u59cb\u7248\u672c\uff0c\u652f\u6301dsp\u8f93\u51fa2\u901a\u9053\u6570\u636e\u3002\n\n\n\u539f\u59cb\u7248\u672c\n\uff1a\u8f93\u51fa8\u8def\u9ea6\u514b\u98ce\u539f\u59cb\u6570\u636e\uff0c\u6b64\u56fa\u4ef6\u4e0d\u652f\u6301xvsm dsp\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u67d0\u4e9b\u529f\u80fd\uff0c\u5982DOA\uff0cAEC\u7b49\u3002\n\n\n\n\n\u5173\u4e8e\u8bf7\u67e5\u9605\u5982\u4f55\u5728Mac\u6216Linux\u4e0a\u66f4\u65b0\u56fa\u4ef6\uff0c \u8bf7\u67e5\u9605 \n\u8fd9\u91cc\n \u3002\n\n\n\u7528\u4e8e\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684HID\n\n\n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7USB HID\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\n\u901a\u4fe1\u534f\u8bae\n.\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u4f7f\u7528 \n\u6700\u65b0\u7684\u539f\u59cb\u7248\u672c\n\uff0c\u5219\u53ea\u80fd\u63a7\u5236LED\u3002\n\n\n\u8fd9\u91cc\u662f\u4e00\u4e2apython\u4f8b\u5b50\uff1a\n\n\n#!/usr/bin/env python\n\n\n\nimport\n \nrespeaker.usb_hid\n \nas\n \nusb_hid\n\n\n\nclass\n \nMicArray\n:\n\n    \ndef\n \n__init__\n(\nself\n):\n\n        \nself\n.\nhid\n \n=\n \nusb_hid\n.\nget\n()\n\n\n    \ndef\n \nwrite\n(\nself\n,\n \naddress\n,\n \ndata\n):\n\n        \ndata\n \n=\n \nself\n.\nto_bytearray\n(\ndata\n)\n\n        \nlength\n \n=\n \nlen\n(\ndata\n)\n\n        \nif\n \nself\n.\nhid\n:\n\n            \npacket\n \n=\n \nbytearray\n([\naddress\n \n \n0xFF\n,\n \n(\naddress\n \n \n8\n)\n \n \n0x7F\n,\n \nlength\n \n \n0xFF\n,\n \n(\nlength\n \n \n8\n)\n \n \n0xFF\n])\n \n+\n \ndata\n\n            \npacket\n \n=\n \nlist\n(\npacket\n)\n\n            \nself\n.\nhid\n.\nwrite\n(\npacket\n)\n\n\n    \ndef\n \nread\n(\nself\n,\n \naddress\n,\n \nlength\n):\n\n        \nself\n.\nhid\n.\nwrite\n(\nlist\n(\nbytearray\n([\naddress\n \n \n0xFF\n,\n \n(\naddress\n \n \n8\n)\n \n \n0xFF\n \n|\n \n0x80\n,\n \nlength\n \n \n0xFF\n,\n \n(\nlength\n \n \n8\n)\n \n \n0xFF\n])))\n\n        \nfor\n \n_\n \nin\n \nrange\n(\n6\n):\n\n            \ndata\n \n=\n \nself\n.\nhid\n.\nread\n()\n\n            \n# print [int(x) for x in data]\n\n            \n# skip VAD data\n\n            \nif\n \nint\n(\ndata\n[\n0\n])\n \n!=\n \n0xFF\n \nand\n \nint\n(\ndata\n[\n1\n])\n \n!=\n \n0xFF\n:\n\n                \nreturn\n \ndata\n[\n4\n:(\n4\n \n+\n \nlength\n)]\n\n\n    \n@staticmethod\n\n    \ndef\n \nto_bytearray\n(\ndata\n):\n\n        \nif\n \ntype\n(\ndata\n)\n \nis\n \nint\n:\n\n            \narray\n \n=\n \nbytearray\n([\ndata\n \n \n0xFF\n])\n\n        \nelif\n \ntype\n(\ndata\n)\n \nis\n \nbytearray\n:\n\n            \narray\n \n=\n \ndata\n\n        \nelif\n \ntype\n(\ndata\n)\n \nis\n \nstr\n:\n\n            \narray\n \n=\n \nbytearray\n(\ndata\n)\n\n        \nelif\n \ntype\n(\ndata\n)\n \nis\n \nlist\n:\n\n            \narray\n \n=\n \nbytearray\n(\ndata\n)\n\n        \nelse\n:\n\n            \nraise\n \nTypeError\n(\n%s\n is not supported\n \n%\n \ntype\n(\ndata\n))\n\n        \nreturn\n \narray\n\n\n\ndef\n \nmain\n():\n\n    \nimport\n \nsys\n\n    \nimport\n \nstruct\n\n\n    \nmic\n \n=\n \nMicArray\n()\n\n\n    \nprint\n(\nUsing: \n%s\n \n%\n \nusb_hid\n.\nusb_backend\n)\n\n\n    \nif\n \nlen\n(\nsys\n.\nargv\n)\n \n \n3\n:\n\n        \nprint\n(\nUsage: python {} w 0x0 0x000003\n.\nformat\n(\nsys\n.\nargv\n[\n0\n]))\n\n        \nsys\n.\nexit\n(\n1\n)\n\n\n    \ntry\n:\n\n        \nif\n \nsys\n.\nargv\n[\n2\n]\n.\nstartswith\n(\n0x\n):\n\n            \naddress\n \n=\n \nint\n(\nsys\n.\nargv\n[\n2\n],\n \n16\n)\n\n        \nelse\n:\n\n            \naddress\n \n=\n \nint\n(\nsys\n.\nargv\n[\n2\n])\n\n\n        \nif\n \nsys\n.\nargv\n[\n1\n]\n \n==\n \nw\n:\n\n            \nif\n \nsys\n.\nargv\n[\n3\n]\n.\nstartswith\n(\n0x\n):\n\n                \ndata\n \n=\n \nint\n(\nsys\n.\nargv\n[\n3\n],\n \n16\n)\n\n            \nelse\n:\n\n                \ndata\n \n=\n \nint\n(\nsys\n.\nargv\n[\n3\n])\n\n\n            \nif\n \ndata\n \n \n0xFFFF\n:\n\n                \ndata\n \n=\n \nstruct\n.\npack\n(\nI\n,\n \ndata\n)\n\n            \nelif\n \ndata\n \n \n0xFF\n:\n\n                \ndata\n \n=\n \nstruct\n.\npack\n(\nH\n,\n \ndata\n)\n\n\n            \nmic\n.\nwrite\n(\naddress\n,\n \ndata\n)\n\n        \nelse\n:\n\n            \nprint\n \n[\nint\n(\nx\n)\n \nfor\n \nx\n \nin\n \nmic\n.\nread\n(\naddress\n,\n \n4\n)]\n\n    \nexcept\n \nException\n \nas\n \ne\n:\n\n        \nprint\n(\ne\n.\nmessage\n)\n\n\n\nif\n \n__name__\n \n==\n \n__main__\n:\n\n    \nmain\n()\n\n\n\n\n\nFAQ\n\n\n\n\n\n\nQ1\uff1a\u5982\u4f55\u4f7f\u7528 \nxvsm\u7248\u672c\u56fa\u4ef6\n \u4eceMic Array\u83b7\u53d6\u97f3\u9891\u6e90\u65b9\u5411\uff1f\n\n\n\n\n\u4f7f\u7528Windows\u65f6, \u8bf7\u9075\u5faa\n\u6307\u5357\n \u6216\u8005\u4f7f\u7528 \nHID tool\n.\n\n\nPython \n C hidapi \u793a\u4f8b\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle]\nReSpeaker Microphone Array SCH\n\n\n[Eagle]\nReSpeaker Microphone Array BRD\n\n\n[PDF]\n \nReSpeaker Microphone Array SCH\n\n\n[PDF]\n \nReSpeaker Microphone Array PCB", 
            "title": "Respeaker_Mic_Array"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_1", 
            "text": "ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\u3002", 
            "title": "\u4ea7\u54c1\u7b80\u4ecb"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_2", 
            "text": "\u8fdc\u573a\u8bed\u97f3\u6355\u83b7  \u58f0\u6e90\u5b9a\u4f4d  \u6ce2\u675f\u6210\u5f62  \u566a\u58f0\u6291\u5236  \u6d88\u6df7\u54cd  \u56de\u97f3\u6d88\u9664", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_3", 
            "text": "XVSM-2000\u5185\u7f6e16\u4e2a\u5185\u6838:  \u57282\u4e2axCore titles\u4e0a\u768416\u4e2a\u5b9e\u65f6\u903b\u8f91\u5185\u6838  \u6838\u5728dual issue mode\u4e0b\u5171\u4eab2000 MIPS  \u5185\u90e8single cycle 512KB SRAM\u548c2MB\u5185\u7f6e\u95ea\u5b58  16KB\u5185\u90e8OTP\uff08\u6700\u59278KB\u6bcftile\uff09  USB PHY\uff0c\u5b8c\u5168\u7b26\u5408USB 2.0\u89c4\u8303  \u53ef\u7f16\u7a0b I/O.  \u63d0\u4f9bDFU\u6a21\u5f0f.    7 \u6570\u5b57\u9ea6\u514b\u98ce:  \u7528\u4e8e\u8fdc\u573a\u8bed\u97f3\u8bc6\u522b\u6216\u58f0\u97f3\u5b9a\u4f4d.  ST MP34DT01-M.  -26 dBFS \u7075\u654f\u5ea6.  120 dBSPL \u58f0\u5b66\u8fc7\u8f7d\u70b9.  61 dB \u4fe1\u566a\u6bd4.  \u5168\u5411\u7075\u654f\u5ea6.  PDM \u8f93\u51fa.    12 RGB LEDs:  256\u7ea7\u4eae\u5ea6.  800kHz\u7ebf\u6570\u636e\u4f20\u8f93.    \u97f3\u9891\u8f93\u51fa:  \u677f\u8f7d3.5mmAUX\u8f93\u51fa.  WOLFSON WM8960.  24 or 16bit 16kHz\u7acb\u4f53\u58f0\u8f93\u51fa.  40 mW \u8f93\u51fa\u529f\u7387 16 \u2126 @ 3.3 V.    \u65f6\u949f\u540c\u6b65\uff1a  \u677f\u8f7d PLL.  \u7528\u4e8e DAC,MIC\u7684\u53ef\u7f16\u7a0b\u91c7\u6837\u65f6\u949f.\n(\u5982\u679c\u5728XVSM-2000\u4e2d\u4f7f\u7528DSP\uff0c\u5219\u7981\u7528).    \u7535\u6e90:  Micro USB\u6216\u6269\u5c55\u63a5\u5934\u63d0\u4f9b5V\u7535\u6e90.    \u5c3a\u5bf8:  \u76f4\u5f84 70mm.    \u91cd\u91cf:  15.25g", 
            "title": "\u6280\u672f\u89c4\u683c"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeaker", 
            "text": "\u5bf9\u4e8eWindows\u7528\u6237, \u8bf7\u5355\u51fb  \u6b64\u5904  \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f  \u5bf9\u4e8eLinux\u6216Mac\u7528\u6237\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f", 
            "title": "ReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\u9a71\u52a8"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeaker-core", 
            "text": "\u5f53\u9ea6\u514b\u98ce\u9635\u5217\u5806\u53e0\u5728ReSpeaker Core\u4e0a\u65f6\uff0c\u5c06\u81ea\u52a8\u68c0\u6d4b\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7aplay -l\u6765\u624b\u52a8\u68c0\u6d4b\uff09\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u53ef\u4ee5\u4f7f\u7528 respeaker_python_library \u6765\u5f00\u53d1\u8bed\u97f3\u4ea4\u4e92\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u60a8\u4e0d\u9700\u8981\u5173\u5fc3Mic Array\u662f\u5426\u6253\u5f00\u3002\u6211\u4eec\u7684\u5e93\u6587\u4ef6\u4f1a\u68c0\u67e5\u5e76\u9009\u62e9\u9ea6\u514b\u98ce\u9635\u5217\u3002  \u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c\u57fa\u4e8ePyaudio\u7684\u9ea6\u514b\u98ce\u7c7b\u5177\u6709\u540d\u4e3alisten\u7684\u65b9\u6cd5\u6765\u63d0\u53d6\u8bed\u97f3\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u793a\u4f8b\u4ee3\u7801\u4ee5\u4f9b\u4f7f\u7528\u3002  \u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c  class Microphone , \u57fa\u4e8e  Pyaudio , \u7528  listen , \u6765\u63d0\u53d6\u58f0\u97f3. \u8bf7\u67e5\u9605  example code  \u5173\u4e8e\u5982\u4f55\u4f7f\u7528.", 
            "title": "\u7528ReSpeaker Core\u63d0\u53d6\u58f0\u97f3"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#pcmaclinuxraspberry-pi", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8ePyaudio\u7684\u4f8b\u5b50\uff1a  \u9996\u5148\uff0c\u60a8\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u6765\u83b7\u53d6Mic Array\u7684\u8bbe\u5907\u7d22\u5f15\u53f7\uff1a  import   pyaudio  p   =   pyaudio . PyAudio ()  info   =   p . get_host_api_info_by_index ( 0 )  numdevices   =   info . get ( deviceCount )  for   i   in   range ( 0 ,   numdevices ): \n         if   ( p . get_device_info_by_host_api_device_index ( 0 ,   i ) . get ( maxInputChannels ))     0 : \n             print   Input Device id  ,   i ,    -  ,   p . get_device_info_by_host_api_device_index ( 0 ,   i ) . get ( name )   \u7136\u540e\uff0c\u66f4\u6539RESPEAKER_INDEX = 1\u4e3a\u60a8\u7684\u7d22\u5f15\u53f7\u3002\u8fd0\u884c\u811a\u672c\u6765\u5f55\u5236\u8bed\u97f3\u3002  import   pyaudio  import   wave  RESPEAKER_RATE   =   16000  RESPEAKER_CHANNELS   =   2  RESPEAKER_WIDTH   =   2  # run getDeviceInfo.py to get index  RESPEAKER_INDEX   =   1  CHUNK   =   1024  RECORD_SECONDS   =   5  WAVE_OUTPUT_FILENAME   =   output.wav  p   =   pyaudio . PyAudio ()  stream   =   p . open ( \n             rate = RESPEAKER_RATE , \n             format = p . get_format_from_width ( RESPEAKER_WIDTH ), \n             channels = RESPEAKER_CHANNELS , \n             input = True , \n             input_device_index = RESPEAKER_INDEX ,)  print ( * recording )  frames   =   []  for   i   in   range ( 0 ,   int ( RESPEAKER_RATE   /   CHUNK   *   RECORD_SECONDS )): \n     data   =   stream . read ( CHUNK ) \n     frames . append ( data )  print ( * done recording )  stream . stop_stream ()  stream . close ()  p . terminate ()  wf   =   wave . open ( WAVE_OUTPUT_FILENAME ,   wb )  wf . setnchannels ( RESPEAKER_CHANNELS )  wf . setsampwidth ( p . get_sample_size ( p . get_format_from_width ( RESPEAKER_WIDTH )))  wf . setframerate ( RESPEAKER_RATE )  wf . writeframes ( b . join ( frames ))  wf . close ()", 
            "title": "\u5728PC\u6216Mac\u6216Linux\u6216Raspberry Pi\u4e0a\u63d0\u53d6\u8bed\u97f3"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeaker_1", 
            "text": "You could download ReSpeaker Mic array firmwares for DFU  here . We have provided two versions:   xvsm version  : initial version, outputs 2 channels data with dsp support.  raw version  : outputs 8 channels mic raw data, this firmware is without xvsm dsp support, so it does not support some functions such as DOA, AEC and so on.   \u60a8\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u9002\u7528\u4e8eDFU\u7684ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7248\u672c\uff1a   xvsm\u7248\u672c \uff1a\u521d\u59cb\u7248\u672c\uff0c\u652f\u6301dsp\u8f93\u51fa2\u901a\u9053\u6570\u636e\u3002  \u539f\u59cb\u7248\u672c \uff1a\u8f93\u51fa8\u8def\u9ea6\u514b\u98ce\u539f\u59cb\u6570\u636e\uff0c\u6b64\u56fa\u4ef6\u4e0d\u652f\u6301xvsm dsp\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u67d0\u4e9b\u529f\u80fd\uff0c\u5982DOA\uff0cAEC\u7b49\u3002   \u5173\u4e8e\u8bf7\u67e5\u9605\u5982\u4f55\u5728Mac\u6216Linux\u4e0a\u66f4\u65b0\u56fa\u4ef6\uff0c \u8bf7\u67e5\u9605  \u8fd9\u91cc  \u3002", 
            "title": "ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeakerhid", 
            "text": "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7USB HID\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684 \u901a\u4fe1\u534f\u8bae .  \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u4f7f\u7528  \u6700\u65b0\u7684\u539f\u59cb\u7248\u672c \uff0c\u5219\u53ea\u80fd\u63a7\u5236LED\u3002  \u8fd9\u91cc\u662f\u4e00\u4e2apython\u4f8b\u5b50\uff1a  #!/usr/bin/env python  import   respeaker.usb_hid   as   usb_hid  class   MicArray : \n     def   __init__ ( self ): \n         self . hid   =   usb_hid . get () \n\n     def   write ( self ,   address ,   data ): \n         data   =   self . to_bytearray ( data ) \n         length   =   len ( data ) \n         if   self . hid : \n             packet   =   bytearray ([ address     0xFF ,   ( address     8 )     0x7F ,   length     0xFF ,   ( length     8 )     0xFF ])   +   data \n             packet   =   list ( packet ) \n             self . hid . write ( packet ) \n\n     def   read ( self ,   address ,   length ): \n         self . hid . write ( list ( bytearray ([ address     0xFF ,   ( address     8 )     0xFF   |   0x80 ,   length     0xFF ,   ( length     8 )     0xFF ]))) \n         for   _   in   range ( 6 ): \n             data   =   self . hid . read () \n             # print [int(x) for x in data] \n             # skip VAD data \n             if   int ( data [ 0 ])   !=   0xFF   and   int ( data [ 1 ])   !=   0xFF : \n                 return   data [ 4 :( 4   +   length )] \n\n     @staticmethod \n     def   to_bytearray ( data ): \n         if   type ( data )   is   int : \n             array   =   bytearray ([ data     0xFF ]) \n         elif   type ( data )   is   bytearray : \n             array   =   data \n         elif   type ( data )   is   str : \n             array   =   bytearray ( data ) \n         elif   type ( data )   is   list : \n             array   =   bytearray ( data ) \n         else : \n             raise   TypeError ( %s  is not supported   %   type ( data )) \n         return   array  def   main (): \n     import   sys \n     import   struct \n\n     mic   =   MicArray () \n\n     print ( Using:  %s   %   usb_hid . usb_backend ) \n\n     if   len ( sys . argv )     3 : \n         print ( Usage: python {} w 0x0 0x000003 . format ( sys . argv [ 0 ])) \n         sys . exit ( 1 ) \n\n     try : \n         if   sys . argv [ 2 ] . startswith ( 0x ): \n             address   =   int ( sys . argv [ 2 ],   16 ) \n         else : \n             address   =   int ( sys . argv [ 2 ]) \n\n         if   sys . argv [ 1 ]   ==   w : \n             if   sys . argv [ 3 ] . startswith ( 0x ): \n                 data   =   int ( sys . argv [ 3 ],   16 ) \n             else : \n                 data   =   int ( sys . argv [ 3 ]) \n\n             if   data     0xFFFF : \n                 data   =   struct . pack ( I ,   data ) \n             elif   data     0xFF : \n                 data   =   struct . pack ( H ,   data ) \n\n             mic . write ( address ,   data ) \n         else : \n             print   [ int ( x )   for   x   in   mic . read ( address ,   4 )] \n     except   Exception   as   e : \n         print ( e . message )  if   __name__   ==   __main__ : \n     main ()", 
            "title": "\u7528\u4e8e\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684HID"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#faq", 
            "text": "Q1\uff1a\u5982\u4f55\u4f7f\u7528  xvsm\u7248\u672c\u56fa\u4ef6  \u4eceMic Array\u83b7\u53d6\u97f3\u9891\u6e90\u65b9\u5411\uff1f   \u4f7f\u7528Windows\u65f6, \u8bf7\u9075\u5faa \u6307\u5357  \u6216\u8005\u4f7f\u7528  HID tool .  Python   C hidapi \u793a\u4f8b", 
            "title": "FAQ"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_4", 
            "text": "[Eagle] ReSpeaker Microphone Array SCH  [Eagle] ReSpeaker Microphone Array BRD  [PDF]   ReSpeaker Microphone Array SCH  [PDF]   ReSpeaker Microphone Array PCB", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Respeaker_Core/", 
            "text": "ReSpeaker\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u6a21\u5757\u5316\u8bed\u97f3\u63a5\u53e3\uff0c\u7528\u4e8e\u63a5\u5165\u60a8\u5468\u56f4\u7684\u5404\u79cd\u4e8b\u7269\u3002\u8ba9\u60a8\u901a\u8fc7\u8bed\u97f3\u4e0e\u60a8\u7684\u5bb6\u7528\u7535\u5668\uff0c\u60a8\u7684\u5de5\u5382\uff0c\u529e\u516c\u5ba4\uff0c\u4e92\u8054\u7f51\u8bbe\u5907\u6216\u60a8\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u5176\u4ed6\u4efb\u4f55\u4e8b\u7269\u8fdb\u884c\u4e92\u52a8\u3002\n\n\n\n\n\u5b83\u662f\u60a8\u5468\u56f4\u7269\u4ef6\u7684\u8bed\u97f3\u6269\u5c55\n\n\n\n\nReSpeaker\u652f\u6301\u5728\u7ebf\u8bed\u4e49\u8bc6\u522b\u670d\u52a1\u5e76\u4e14\u62e5\u6709\u79bb\u7ebf\u8f7b\u91cf\u7ea7\u8bed\u97f3\u8bc6\u522b\u5f15\u64ce\u3002\u60a8\u53ef\u4ee5\u5c06ReSpeaker\u6dfb\u52a0\u5230\u60a8\u5468\u56f4\u7684\u4e8b\u7269\u4e2d\uff0c\u4f7f\u5176\u53d8\u5f97\u667a\u80fd\u6216\u66f4\u52a0\u667a\u80fd\u3002\n\n\n\n\n\u5b83\u662f\u4e00\u4e2a\u97f3\u9891\u6d41\u8bbe\u5907\n\n\n\n\n\u8bed\u97f3\u4ea4\u4e92\u4ece\u672a\u4e0e\u97f3\u4e50\u5a31\u4e50\u533a\u5206\u5f00\uff0cReSpeaker\u4e5f\u662f\u5982\u6b64\u3002ReSpeaker\u652f\u6301Airplay / DLNA\u65e0\u7ebf\u97f3\u4e50\u6d41\u3002\u53ea\u9700\u4f7f\u7528AUX\u7535\u7f06\u5c06ReSpeaker\u8fde\u63a5\u5230\u4efb\u4f55\u666e\u901a\u7684\u626c\u58f0\u5668\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5f00\u59cb\u4eab\u53d7\u60a8\u6240\u7231\u7684\u97f3\u4e50\uff0c\u800c\u65e0\u9700\u6309\u4efb\u4f55\u4e00\u4e2a\u6309\u94ae\u3002\n\n\n\n\n\u5b83\u662f\u5b69\u5b50\u4eec\u5b66\u4e60\u7684\u5de5\u5177\n\n\n\n\nReSpeaker\u63a7\u5236\u6a21\u5757\u662f\u57fa\u4e8eATmega32u4\u82af\u7247\uff0c\u8be5\u82af\u7247\u5b8c\u5168\u517c\u5bb9Arduino\u9a71\u52a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ReSpeaker\u4f5c\u4e3a\u5f3a\u5927\u7684Arduino\u5b66\u4e60\u677f\uff0c\u5e76\u505a\u4e86\u8bb8\u591a\u201cArduino\u201d\u5f00\u53d1\u677f\u80fd\u505a\u7684\u4e8b\u60c5\u3002\u8fd9\u662f\u4e3a\u4e86\u5b66\u4e60\uff0c\u8fd9\u662f\u4e3a\u4e86\u7ec3\u4e60\uff0c\u8fd9\u662f\u4e50\u8da3\uff01\uff01\uff01\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u89e3\u653e\u60a8\u7684\u53cc\u624b\uff1a\u79bb\u7ebf\u6216\u5728\u7ebf\u6a21\u5f0f\u4e0b\u7684\u8bed\u97f3\u8bc6\u522b\n\n\n\u65e0\u7ebf\u97f3\u9891\u6d41\u4f20\u8f93\uff1a \u901a\u8fc7Airplay/DLNA\u4f20\u8f93\u97f3\u9891\u6d41\n\n\n\u6613\u4e8e\u4f7f\u7528\u7684SDK\uff1a\u9002\u7528\u4e8ePython\u548cC / C ++\u5f00\u53d1\u4eba\u5458\n\n\n\u65e5\u76ca\u589e\u957f\u7684\u529f\u80fd\uff1a\u4e0b\u8f7d\u548c\u63d2\u4ef6\u4e0d\u65ad\u4e30\u5bcc\u5176\u529f\u80fd\u4e0e\u5e94\u7528\n\n\n\u5373\u63d2\u5373\u7528\u63d2\u4ef6\uff1a\u53ef\u6269\u5c55\u4f7f\u7528\u9ea6\u514b\u98ce\u9635\u5217\uff0cGrove\u6269\u5c55\u677f\uff0cGrove\u6a21\u5757\n\n\n\u514d\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff1a\u53ef\u57fa\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u6240\u6709\u529f\u80fd\u3001\u53c2\u6570\uff08\u6682\u65f6\u4e0d\u53ef\u7528\uff09\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u6280\u672f\u89c4\u683c\n\n\n\n\n\n\nAI7688 Wi-Fi \u6a21\u5757:\n\n\n\n\n\u64cd\u4f5c\u7cfb\u7edf: \u57fa\u4e8eGNU/Linux \u7684 OpenWrt\n\n\nwifi\u652f\u6301: \u652f\u6301802.11b/g and HT 802.11n \u6a21\u5f0f\n\n\n\u6269\u5c55\u6027:\u4e24\u6392\u6269\u5c55\u63a5\u53e3\uff0c\u62e5\u6709 I2C, GPIO \u548c USB 2.0\n\n\n\u63a5\u53e3: 3.5mm AUX \u97f3\u9891\u63a5\u53e3, Micro USB \u548c SD card \u5361\u69fd\n\n\n\n\n\n\n\n\nATMega32U4 \u5904\u7406\u5668:\n\n\n\n\nLinnux\u5e73\u53f0\u4e0b\u7684 USB CDC \u8f6f\u4e32\u53e3\n\n\n12\u4e2a\u53ef\u7f16\u7a0bLED \u6307\u793a\u706f\n\n\n8 \u4e2a\u7247\u4e0a\u89e6\u70b9\u63a5\u53e3\n\n\n\n\n\n\n\n\nCodec WM8960:\n\n\n\n\nDAC SNR 98dB (\u2018A\u2019 weighted), THD -84dB at 48kHz, 3.3V  \n\n\nADC SNR 94dB (\u2018A\u2019 weighted), THD -82dB at 48kHz, 3.3V  \n\n\nStereo Class D Speaker Driver with 87% efficiency (1W output)  \n\n\nOn-chip Headphone Driver  \n\n\n40mW output power into 16\u03a9 at 3.3V  \n\n\nTHD -75dB at 20mW, SNR 90dB with 16\u03a9 load  \n\n\nOn-chip PLL provides flexible clocking scheme  \n\n\nSample rates: 8, 11.025, 12, 16, 22.05, 24, 32, 44.1, 48 kHz\n\n\n\n\n\n\n\n\n\u4f9b\u7535\u7535\u538b: 5V DC  \n\n\n\n\n\n\n\u5c3a\u5bf8: \u76f4\u5f84 70mm   \n\n\n\n\n\n\n\u91cd\u91cf: 17g\n\n\n\n\n\n\n\u7ba1\u811a\u56fe\n\n\n\n\n\n\nGPIO0 / I2S_ADC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cADC\u4fe1\u53f7\n\n\nGPIO1 / I2S_DAC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cDAC\u4fe1\u53f7\n\n\nGPIO2 / I2S_LRCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u5de6/\u53f3\u901a\u9053\u91c7\u6837\u65f6\u949f\n\n\nGPIO3 / I2S_BCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u4f4d\u65f6\u949f\n\n\nMCLK_OUT\uff1a\u5916\u90e8\u8bbe\u5907\u7684\u4e3b\u65f6\u949f\n\n\nHP_SEL\uff1a\u8033\u673a\u9891\u9053\u9009\u62e9\u3002\u5982\u679c\u4f7f\u7528ReSpeaker Mic Array\u8f93\u51fa\u97f3\u9891\uff0c\u8bf7\u5c06HP_SEL\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\n\n\nHP_L\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u5de6\u58f0\u9053\n\n\nHP_R\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u53f3\u58f0\u9053\n\n\nAGND\uff1a\u97f3\u9891\u6a21\u62df\u5730\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u7b2c\u4e00\u6b21\u62ff\u5230Respeaker_Core\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f\n\n\n1. \u51c6\u5907\n\n\n\n\nReSpeaker\u6838\u5fc3\u677f\n\n\nPC\u6216Mac\n\n\nWi-Fi\u7f51\u7edc\n\n\nSD\u5361\n\n\n\n\n2. \u8fde\u63a5\u5230\u4e32\u884c\u63a7\u5236\u53f0\n\n\n\n\n\n\n\u5bf9\u4e8ewindow, \u63a8\u8350\u4f7f\u7528 \nputty\n\u3002\n\n\n\n\n\u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC\uff0c\u52fe\u9009COM\u8bbe\u5907\u7ba1\u7406\u5668\u3002\u8fd9\u91cc\u6211\u4eec\u7684ReSpeaker COM\u7aef\u53e3\u662fCOM31\u3002\n\n\n\n\n\n\n\n\n\u5728\u8fde\u63a5\u7c7b\u578b\u4e0b\u9009\u62e9Serial ,\u5728Serial line\u4e2d\uff0c\u8f93\u5165\u60a8\u7684ReSpeaker\u7684COM\u7aef\u53e3\u53f7\uff0c\u5728\u6ce2\u7279\u7387\u9009\u9879\u4e2d\uff0c\u952e\u516557600\u3002\n\n\n\n\n\n\n\n\n\u70b9\u51fb Open.\u7136\u540e\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u9ed1\u8272\u7684\u5c4f\u5e55\u754c\u9762\uff0c\u70b9\u51fb\u56de\u8f66\u952e\u3002\n\n\n\n\n\n\n\n\n\n\n\u5bf9\u4e8e Linux/Mac\n\n\n\n\n\n\n\u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC\n\n\n\n\n\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u4f1a\u8bdd\n\n\n\u5728\u7ec8\u7aef\u4e2d\u952e\u5165ls /dev/tty.usb*  \u6211\u4eec\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3ctty.usbmodemXXXXX\u7684\u4e1c\u897f\uff0c\u5176\u4e2dXXXXX\u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u7136\u540e\u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600\n\n\n\n\n$ ls /dev/tty.usb*\n/dev/tty.usbmodem14221\n$ screen /dev/tty.usbmodem14221 57600\n\n\n\n\n3. \u8bbe\u7f6e Wi-Fi\n\n\nReSpeaker\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a\u4e2d\u7ee7\u6a21\u5f0f\uff0c\u60a8\u5fc5\u987b\u5c06\u5176\u8fde\u63a5\u5230\u73b0\u6709\u7684\u65e0\u7ebfwifi\u7f51\u7edc\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528Internet\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\u3002\n\n\n\u5f53\u60a8\u9996\u6b21\u63a5\u901aReSpeaker\u7535\u6e90\u65f6\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201cReSpeakerXXXXXX\u201d\u7684Wi-Fi\u7f51\u7edc\u3002\u8fd9\u91cc\u201cXXXXXX\u201d\u662f\u60a8\u7684ReSpeaker MAC\u5730\u5740\u7684\u6700\u540e6\u4f4d\u3002\u5c06\u60a8\u7684\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\u3002\n\n\n\n\n\n\nNote\n\n\n\u5982\u679c\u201cReSpeakerXXXXXX\u201d\u672a\u51fa\u73b0\uff0c\u4f46\u627e\u5230\u201cLinkIt_Smart_7688_XXXXXX\u201d\u3002\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\n\n\u83b7\u53d6IP\u5730\u5740\u540e\uff0c\u6253\u5f00Web\u6d4f\u89c8\u5668\uff0c\u7136\u540e\u5728\u5730\u5740\u680f\u4e2d\u8f93\u5165192.168.100.1\u3002\u51e0\u79d2\u949f\u540e\uff0c\u4f1a\u51fa\u73b0\u4e0b\u56fe\u6240\u793a\u7f51\u9875\uff0c\u9700\u8981\u60a8\u8f93\u5165\u73b0\u6709Wi-Fi\u7f51\u7edc\u7684ssid\u548c\u5bc6\u7801\u3002\n\n\n\n\n\u9009\u62e9\u8981\u8fde\u63a5\u7684Wi-Fi\u5e76\u8f93\u5165\u5bc6\u7801\u3002\u5f53\u60a8\u6309OK\u6309\u94ae\u65f6\uff0cReSpeaker\u5c06\u52a0\u5165\u6307\u5b9a\u7684\u7f51\u7edc\u3002\n\n\n\u73b0\u5728\u60a8\u7684ReSpeaker\u80fd\u591f\u8bbf\u95ee\u4e92\u8054\u7f51\u3002\n\n\n\u5982\u679c\u60a8\u6ca1\u6709\u5f39\u51fawifi\u767b\u9646\u9875\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528putty\u4e32\u53e3\u6a21\u5f0f\u4e0b\u8fde\u63a5Respeaker_Core, \u5e76\u4e14\u5728putty\u4e2d\u4f7f\u7528wictl\u626b\u63cfwifi\u5e76\u8fde\u63a5\n\n\nroot@mylinkit:~# wictl\n0, SEEED-MKT\n1, Xiaomi_Youth\n2, ChinaNet-Z5C4\n3, STU-EE\n4, EMBEST_WIFI\n5, SEEED-MKT\n6, nobody\n7, SEEED-MKT\n8, se.VPN\n9, Moovent_HK_2G\n10, LinkIt_Smart_7688_1D917A\n11, SEEED-MKT\n12, SEEED-MKT\n13, zhongrixing\nPlease choose your wifi: 8\nPlease input the wifi password: 88888888\nudhcpc (v1.23.2) started\nSending discover...\nSending discover...\nSending select for 192.168.199.153...\nLease of 192.168.199.153 obtained, lease time 43200\nudhcpc: ifconfig apcli0 192.168.199.153 netmask 255.255.255.0 broadcast 192.168.199.255\nudhcpc: setting default routers: 192.168.199.1\nsuccess\nroot@mylinkit:~#\n\n\n\n\n!!!\u6ce8\u610f\n    \u5982\u679c\u60a8\u65e0\u6cd5\u4f7f\u7528\u4e0a\u8ff0\u65b9\u6cd5\u8fde\u63a5Wifi\uff0c\u8bf7\u901a\u8fc7\u8f93\u5165firstboot\u547d\u4ee4\u8fdb\u884c\u51fa\u5382\u8bbe\u7f6e\u3002\n\n\n\u542f\u7528Wifi\u529f\u80fd\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528SSH\u6a21\u5f0f\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5Respeaker\u3002\u6211\u4eec\u53ef\u4ee5\u4ecehttp://192.168.100.1/#!/overview WAN IP\u83b7\u53d6Respeaker IP\u5730\u5740\u3002\u5bc6\u7801\u662froot\u3002\n\n\nssh root@ssh *.*.*.*\n\n\n\n\n4. \u4f7f\u7528SD\u5361\u6765\u6269\u5c55\u5b58\u50a8\n\n\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5d4c\u5165\u5f0f\u8bbe\u5907\u53ef\u4ee5\u4f7f\u7528\u6709\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff08ReSpeaker\u4ec5\u4e3a\u7528\u6237\u63d0\u4f9b\u4e865M\u7684\u677f\u8f7dFlash\u5b58\u50a8\u7a7a\u95f4\uff09\u3002\u4e3a\u5e94\u7528\u6216\u8005\u6570\u636e\u63d0\u4f9b\u66f4\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u6fc0\u53d1ReSpeaker\u7684\u6f5c\u529b\uff0c\u6240\u4ee5\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u4f5c\u4e3aextroot\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u8fd8\u4e0d\u9519\u7684\u9009\u62e9\u54df\u3002\n\n\n\u901a\u8fc7\u4f7f\u7528extroot\uff0c\u6dfb\u52a0\u5916\u90e8SD\u5361\u5b58\u50a8\u8bbe\u5907\u6765\u5b9e\u73b0\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u5b58\u50a8\u5bb9\u91cf\u7684\u6269\u5c55\u3002\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u5916\u90e8\u5b58\u50a8\u7a7a\u95f4\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\u542f\u52a8\uff0c\u6216\u8005\u4ee5\u539f\u59cb\u6587\u4ef6\u7cfb\u7edf\u7684\u8986\u76d6\u914d\u7f6e\u8fdb\u884c\u542f\u52a8\u3002\n\n\n\n\n\u786e\u4fdd\u60a8\u7684SD\u5361\u5df2\u63d2\u5165ReSpeaker\uff0c\u5e76\u4e14/ dev / mmcblk0p1\u53ef\u4ee5\u901a\u8fc7df -h\u6216ls / dev\u8fdb\u884c\u68c0\u6d4b\u3002\n\n\n\n\nroot@ReSpeaker:/# df -h\nFilesystem                Size      Used Available Use% Mounted on\nrootfs                    1.8M    832.0K    960.0K  46% /\n/dev/root                29.0M     29.0M         0 100% /rom\ntmpfs                    61.7M    276.0K     61.5M   0% /tmp\n/dev/mtdblock6            1.8M    832.0K    960.0K  46% /overlay\noverlayfs:/overlay        1.8M    832.0K    960.0K  46% /\ntmpfs                   512.0K         0    512.0K   0% /dev\n/dev/mmcblk0p1            7.4G      2.5M      7.4G   0% /tmp/run/mountd/mmcblk0p1\n\n\n\n\n\n\n\u5c06SD\u5361\u683c\u5f0f\u5316\u4e3a\u4e24\u4e2a\u5206\u533a\uff0c\u4e00\u4e2a\u662fFAT32\uff0c\u53e6\u4e00\u4e2a\u662fEXT4\u3002EXT4\u6587\u4ef6\u7cfb\u7edf\u5c06\u4f5c\u4e3a\u4e00\u4e2a\u5916\u63a5\u7a0b\u5e8f\uff0c\u800cFAT32\u5c06\u4f5c\u4e3a\u6b63\u5e38\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u53ef\u4ee5\u5728ReSpeaker\u548cPC\u4e4b\u95f4\u4f20\u8f93\u6587\u4ef6\u3002\n\n\n\n\n    umount /dev/mmcblk0p1\n    fdisk /dev/mmcblk0\n     ------------------ fdisk ------------------------\n    \nCommand (m for help):o\n    \nCreated a new DOS disklabel\n    \nCommand (m for help):n\n    \nPartition type\n    p   primary (0 primary, 0 extended, 4 free)\n    e   extended (container for logical partitions)\n    \nSelect (default p):p\n    \nPartition number (1-4, default 1):1\n    \nFirst sector (2048-15523839, default 2048):\n    \nLast sector, +sectors or +size{K,M,G,T,P} (2048-15523839, default 15523839): +2G\n    \nCommand (m for help):n\n    \nPartition type\n    p   primary (1 primary, 0 extended, 3 free)\n    e   extended (container for logical partitions)\n    \nSelect (default p):p\n    \nPartition number (1-4, default 2):2\n    \nFirst sector (4196352-15523839, default 4196352):\n    \nLast sector, +sectors or +size{K,M,G,T,P} (4196352-15523839, default 15523839):\n    \nCommand (m for help):w\n    \nThe partition table has been altered.\n    \nCalling i[  292.010000]  mmcblk0: p1 p2\n    \noctl() to re-read partition table.\n    \nSyncing disks.\n     ------------------ end ------------------------\n\n    mkfs.fat /dev/mmcblk0p1\n    mkfs.ext4 /dev/mmcblk0p2\n\n    # reload mtk_sd kernel module\n    rmmod mtk_sd\n    insmod mtk_sd\n\n\n\n\n\n\n\u51c6\u5907\u60a8\u7684\u5916\u90e8\u5b58\u50a8root overlay\u3002\n\n\n\n\nmount /dev/mmcblk0p2 /mnt ; tar -C /overlay -cvf - . | tar -C /mnt -xf - ; umount /mnt\n\n\n\n\n\n\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efafstab\u3002\u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u542f\u7528\u6240\u6709\u5206\u533a\u5e76\u5c06'/ mnt / mmcblk0p2'\u5206\u533a\u8bbe\u7f6e\u4e3a'/ overlay'\u5206\u533a\u7684fstab\u6a21\u677f\n\n\n\n\n    block detect \n /etc/config/fstab;\n    sed -i s/option$\n\\t\nenabled$\n\\t\n\\\n0\\\n/option$\n\\t\nenabled$\n\\t\n\\\n1\\\n/ /etc/config/fstab;\n    sed -i s#/mnt/mmcblk0p2#/overlay# /etc/config/fstab;\n    cat /etc/config/fstab;\n\n\n\n\n\n\n\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u5230 overlay.\n\n\n\n\n    root@mylinkit:/# mount /dev/mmcblk0p2 /overlay/\n    root@ReSpeaker:/# df -h\n  Filesystem                Size      Used Available Use% Mounted on\n  rootfs                    1.8M    832.0K    960.0K  46% /\n  /dev/root                29.0M     29.0M         0 100% /rom\n  tmpfs                    61.7M    276.0K     61.5M   0% /tmp\n  /dev/mtdblock6            5.2G     11.8M      4.9G   0% /overlay\n  overlayfs:/overlay        1.8M    832.0K    960.0K  46% /\n  tmpfs                   512.0K         0    512.0K   0% /dev\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /tmp/run/mountd/mmcblk0p2\n  /dev/mmcblk0p1            2.0G      4.0K      2.0G   0% /tmp/run/mountd/mmcblk0p1\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /overlay\n\n\n\n\n\n\n\u91cd\u542fReSpeaker\u5e76\u91cd\u65b0\u68c0\u67e5\u3002\u5982\u679cSD\u5361\u81ea\u52a8\u5b89\u88c5\uff0c\u5c31\u5b8c\u6210\u4e86\u3002\u66f4\u591a\u5173\u4e8eextroot\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\n\n5. \u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6\n\n\n\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u540e\uff0c\u6709\u8db3\u591f\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6\u3002\n\n\n\u5b89\u88c5git\n\n\n    opkg update\n    opkg install git git-http\n\n\n\n\n6. \u66f4\u65b0 Python \u5e93\n\n\ngit clone https://github.com/respeaker/respeaker_python_library.git\ncd respeaker_python_library\npython setup.py install\n\n\n\n\n\u4e0eRespeaker\u7684\u7b2c\u4e00\u6b21\u4e92\u52a8 - ReSpeaker, play music!\n\n\n\u4f7f\u7528Bing Speech API\uff0cReSpeaker\u53ef\u4ee5\u5b9e\u65f6\u6253\u5f00\u5e76\u8bc6\u522b\u6765\u81ea\u9ea6\u514b\u98ce\u7684\u97f3\u9891\uff0c\u6216\u4ece\u6587\u4ef6\u8bc6\u522b\u97f3\u9891\u3002\n\n\n\u8981\u4f7f\u7528Bing Speech API\uff0c\u9996\u5148\u5fc5\u987b\u4ece \n\u8fd9\u91cc\n \u83b7\u53d6Microsoft Cognitive Services\u7684\u5bc6\u94a5\uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230BING_KEY =\u201c'\uff0c\u7136\u540e\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4fdd\u5b58\u5728playmusic.py\u4e2d\u5e76\u8fd0\u884c\n\n\n//stop mopidy and alexa to avoid USB device occupation\n/etc/init.d/mopidy stop\n/etc/init.d/alexa stop\npython playmusic.py\n\n\n\n\n\n\nimport logging\nimport time\nimport os\nfrom threading import Thread, Event\nfrom respeaker import Microphone\nfrom respeaker.bing_speech_api import BingSpeechAPI\n\n# use madplay to play mp3 file     \nos.system(\nmadplay\n)               \n\n# get a key from https://www.microsoft.com/cognitive-services/en-us/speech-api\nBING_KEY = \n      \n\n\ndef task(quit_event):                                                         \n    mic = Microphone(quit_event=quit_event)                                   \n    bing = BingSpeechAPI(key=BING_KEY)                                        \n\n    while not quit_event.is_set():\n        if mic.wakeup(\nrespeaker\n):        \n            print(\nWake up\n)               \n            data = mic.listen()            \n            try:                      \n                text = bing.recognize(data)\n                if text:           \n                    print(\nRecognized %s\n % text)\n                    if \nplay music\n in text:\n                        print(\nI will play music!\n)\n                        os.system(\nmadplay Tchaikovsky_Concerto_No.1p.mp3\n)\n            except Exception as e:               \n                print(e.message)                 \n\ndef main():                                                              \n    logging.basicConfig(level=logging.DEBUG)                                                           \n    quit_event = Event()        \n    thread = Thread(target=task, args=(quit_event,))\n    thread.start()                          \n    while True:                             \n        try:                                \n            time.sleep(1)                           \n        except KeyboardInterrupt:                   \n            print(\nQuit\n)                           \n            quit_event.set()\n            break        \n    thread.join()                \n\nif __name__ == \n__main__\n:       \n    main()                  \n\n\n\n\n\u5728\"INFO:mic:Start Detecting\" \u51fa\u6765\u4e4b\u540e\uff0c\u5c1d\u8bd5\u8bf4\u201cReSpeaker\u201d\u5524\u9192\u7a0b\u5e8f\uff0c\u5524\u9192\u540e\u8bf4\u201cplaymusic\u201d\u8ba9\u5b83\u64ad\u653e\u97f3\u4e50\u3002\u7136\u540eReSpeaker\u5c06\u4f7f\u7528madplay\u5de5\u5177\u5728\u5f53\u524d\u8def\u5f84\u4e2d\u64ad\u653e\u201cTchaikovsky_Concerto_No.1p.mp3\u201d\n\n\n\n\n\u5982\u679c\u60a8\u770b\u5230\u4ee5\u4e0b\u9519\u8bef\u4ee3\u7801\uff0c\u90a3\u4e48mopidy\u6b63\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u5360\u7528USB\u8bbe\u5907\u3002\u6240\u4ee5\u5c1d\u8bd5\u8fd0\u884c /etc/init.d/mopidy\uff0c\u505c\u6b62mopidy\uff0c\u7136\u540e\u518d\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4\u3002\n\n\nroot@ReSpeaker:~# python playmusic.py\nUsage: madplay [OPTIONS] FILE [...]\nTry `madplay --help\n for more information.\nException in thread Thread-2:\nTraceback (most recent call last):\nFile \n/usr/lib/python2.7/threading.py\n, line 810, in __bootstrap_inner\n\n\n\n\n\u5e94\u7528\u5b9e\u4f8b\n\n\n\n\n\u6c34\u679c\u94a2\u7434\n\n\n\n\nReSpeaker\u63a7\u5236\u6a21\u5757\u662f\u57fa\u4e8eATmega32u4\u82af\u7247\uff0c\u8be5\u82af\u7247\u5b8c\u5168\u517c\u5bb9Arduino\u9a71\u52a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ReSpeaker\u4f5c\u4e3a\u5f3a\u5927\u7684Arduino\u5b66\u4e60\u677f\uff0c\u5e76\u505a\u4e86\u8bb8\u591a\u201cArduino\u201d\u5f00\u53d1\u677f\u80fd\u505a\u7684\u4e8b\u60c5\u3002\n\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Arduino IDE\u5bf9\u5176\u8fdb\u884c\u7f16\u7a0b\uff0c\u6765\u5b9e\u73b0\u521b\u610fDIY\u94a2\u7434\uff0c\u8be5\u94a2\u7434\u642d\u914d8\u4e2a\u6a31\u6843\u897f\u7ea2\u67ff\u8fde\u63a5\u5230ReSpeaker\u76848\u4e2a\u89e6\u6478\u4f20\u611f\u5668\u3002\n\n\n\n\n\n\n\n\n\n\n\u5728respeaker\u4e0a\u8f93\u5165 git clone \nhttps://github.com/respeaker/piano.git\n      \u4e0b\u8f7d\u5e93\n\n\n\n\n\n\n\n\n\n\n\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e2d\u4e0b\u8f7d\nReSpeaker Arduino Library\n\n\n\n\n\n\n\n\n\n\n\u4e0a\u4f20piano.ino\u5230ReSpeaker\u7684Arduino Leonardo\uff08ATmega32U4\uff09\n\n\n\n\n\n\n\n\n\n\n\u5728ReSpeaker\u7684\u4e32\u884c\u63a7\u5236\u53f0\u4e0a\u8fd0\u884cpython piano.py\n\n\n\n\n\n\n\n\n\u5929\u6c14\u4e91\n\n\n\n\n\u5929\u6c14\u4e91\u662f\u5f88\u68d2\u7684\u4e00\u4e2aReSpeaker\u9879\u76ee\u3002\u8fd9\u4e2a\u5f88\u9177\u7684\u521b\u610f\u5c06ReSpeaker\u53d8\u6210\u4e86\u4e00\u4e2a\u5929\u6c14\u4e91\uff0c\u5b83\u80fd\u591f\u663e\u793a\u51fa\u751f\u52a8\u7684\u5149\u7ebf\u548c\u58f0\u97f3\u3002\n\n\n\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0cOpenwrt\u8d1f\u8d23\u4ece\u4e92\u8054\u7f51\u83b7\u53d6\u5b9e\u65f6\u5929\u6c14\u4fe1\u606f\uff0c\u8fdb\u884c\u8bed\u97f3\u4ea4\u4e92\u548c\u97f3\u9891\u8f93\u51fa\uff0c\u800cArduino\u8d1f\u8d23\u63a7\u5236\u5f69\u8272RGB LED\u3002\n\n\n\n\n\u5728respeaker\u4e0a\u8f93\u5165 git clone \nhttps://github.com/jerryyip/WeatherCloud.git\n, \u4e0b\u8f7d\u9879\u76ee\u5e93\u6587\u4ef6\u3002\n\n\n\u70b9\u51fb\u4e0b\u8f7d \nReSpeaker Arduino Library\n \u5230\u60a8\u7684\u7535\u8111\u4e0a\uff0c\u5e76\u5b89\u88c5\u3002\n\n\n\u901a\u8fc7Arduino IDE\u5c06 \npixels_pattern.ino\n \u4e0a\u4f20\u5230respeaker\u3002\n\n\n\n\n\u4ece\u8fd9\u91cc\u83b7\u53d6OpenWeatherMap appid \uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230main.py\u4e2d\u7684appID =\u201c\u201d\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u60a8\u7684\u57ce\u5e02\u6dfb\u52a0\u5230city =\u201c\u201d\n\n\n\n\n\n\n\u5728\u4f7f\u7528SPI\u4e4b\u524d\u8bf7\u7ec8\u6b62mopidy service\u5728OpenWrt\u4e2d\u7684\u8fdb\u7a0b\uff0crespeaker\u5728\u63a7\u5236\u53f0\u4e0a\u952e\u5165\n/etc/init.d/mopidy stop\n\n\n\n\n\u8fd0\u884cpython main.py \u7136\u540e\u5bf9\u7740\u5b83\u558a \"ReSpeaker, what is the weather like?\"\n\n\n\u6709\u5173\u5982\u4f55\u5236\u4f5c\u5929\u6c14\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\n\nReSpeaker Mic Array\uff08ReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\uff09\n\n\n\n\nReSpeaker Mic Array\n\n\nReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\n\n\n\u5173\u4e8e\u8f6f\u4ef6\n\n\n\n\n\u60a8\u53ef\u9875\u9762\u4ee5\u70b9\u51fb\u4e0b\u5217\u6807\u9898\u6765\u8df3\u8f6c\u5230\u5bf9\u5e94\n\n\nReSpeaker Arduino \u5e93\n\n\nReSpeaker Arudino\u5e93\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a\n\n\n\n\n\u652f\u6301\u7535\u5bb9\u5f0f\u89e6\u6478\u611f\u5e94\n\n\n\u5b9e\u73b0\u4e86WS2812 RGB LED\u9a71\u52a8\n\n\n\u6784\u5efa\u4e86\u4eceArduino (ATmega32U4)\u5230\u57fa\u4e8eLinux\u7684OpenWrt (MT7688)\u4e4b\u95f4\u7684USB\u5230\u4e32\u53e3\u548cUSB\u5230SPI\u901a\u9053\u3002                           \n\n\n\n\nReSpeaker Python \u5e93\n\n\nReSpeaker\u662f\u4e00\u4e2a\u652f\u6301\u8bed\u97f3\u4ea4\u4e92\u7684\u5f00\u653e\u9879\u76ee\u3002ReSpeaker python\u5e93\u662f\u4e00\u4e2a\u5f00\u6e90\u7684python\u5e93\uff0c\u7528\u4e8e\u63d0\u4f9b\u8bed\u97f3\u4ea4\u4e92\u7684\u57fa\u672c\u529f\u80fd\u3002\n\u5b83\u4f7f\u7528PocketSphinx\u8fdb\u884c\u5173\u952e\u5b57\u67e5\u627e\uff0c\u5e76\u4f7f\u7528webrtcvad\u8fdb\u884c\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b\u3002\n\n\n\u66f4\u591a\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc\u67e5\u770b\u6211\u4eec\u7684github\u8d44\u6599\u5e93\n\n\nFAQ\n\n\n\n\nQ1: \u5982\u4f55\u6062\u590d\u51fa\u5382\u8bbe\u7f6e?\n\n\n\n\n\u6253\u5f00\u4e32\u884c\u63a7\u5236\u53f0\u6216ssh\u4f1a\u8bdd\u5e76\u8fd0\u884c firstboot. \n\u66f4\u591a\u7ec6\u8282\u70b9\u51fb\u8fd9\u91cc\n.\n\n\n\n\nQ2: \u5982\u679c\u5347\u7ea7\u5931\u8d25\u4e86\uff0c\u600e\u4e48\u62a2\u6551?\n\n\n\n\n\u5347\u7ea7\u5931\u8d25\u540e\uff0c\u5f53\u91cd\u65b0\u542f\u52a8\u8fdb\u5165openwrt\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u7ec8\u7aef\uff0cssh\u6216\u4e32\u884c\u63a7\u5236\u53f0\u8bbf\u95ee\u7cfb\u7edf\u3002\u6211\u4eec\u53ef\u4ee5\u6309\u7167\n\n\n\n\nRescue instruction\n \u6307\u4ee4\u8fdb\u884c\u6062\u590d\u3002\n\n\nQ3: ReSpeaker\u627e\u4e0d\u5230\u6211\u7684Wi-Fi\n\n\n\n\n\u8bf7\u5148\u5c1d\u8bd5 \n\u6062\u590d\u51fa\u5382\u8bbe\u7f6e\n \u3002\n\n\nReSpeaker\u4e0d\u652f\u6301Wi-Fi\u9891\u905312\u3002\u786e\u4fdd\u60a8\u7684\u8def\u7531\u5668\u6ca1\u6709\u4f7f\u7528\u8be5\u901a\u9053\u3002.\n\n\n\n\nQ4: \u5982\u4f55\u8fdb\u884cWifi\u914d\u7f6e\n\n\n\n\n\u6211\u4eec\u5efa\u8bae\u60a8\u901a\u8fc7\nWEB-UI\n\u914d\u7f6eWi-Fi \uff0c\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\uff0c\u8bf7\u5728\u63a7\u5236\u53f0\u4e0a\u5c1d\u8bd5\u547d\u4ee4\u884c\u5de5\u5177\nwictl\n \u3002\n\n\n\n\nQ5: \u5982\u4f55\u6539\u53d8BING Speech api \u7684\u8bc6\u522b\u8bed\u8a00\n\n\n\n\n\u5982\u679c\u60a8\u4e0d\u9700\u8981\u66f4\u6539\u5524\u9192\u5b57\uff0c\u53ea\u9700\u5c06text = bing.recognize\uff08data\uff09\u66f4\u6539\u4e3atext = bing.recognize\uff08data\uff0clanguage =\u201czh-CN\u201d\uff09\u5c31\u53ef\u4ee5\u4e86\u3002 \n\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc\n.\n\n\n\n\nQ6: \u6536\u5230SD\u5361\u8b66\u544a\u6d88\u606f\u201c\u5377\u672a\u6b63\u786e\u5378\u8f7d\u3002\u67d0\u4e9b\u6570\u636e\u53ef\u80fd\u5df2\u635f\u574f\u3002\u8bf7\u8fd0\u884cfsck\u201d\n\n\n\n\n\u5982\u679cSD\u5361\u4e0a\u7684\u6587\u4ef6\u6b63\u5e38\uff0c\u8bf7\u5ffd\u7565\u5b83\u3002\u5426\u5219\uff0c\u5c1d\u8bd5\u4f7f\u7528\nsd\u5361\u683c\u5f0f\u5316\u7a0b\u5e8f\u8fdb\u884c\u683c\u5f0f\u5316\n.\n\n\n\n\nQ7: \u9519\u8bef\u63d0\u793a \u201cBad flash from Arduino\u201d\n\n\n\n\n\u6309\u7167\u4e0b\u9762\u4ee3\u7801\uff0c\u5728openwrt\u4e2d\u91cd\u65b0\u70e7\u5199 bootloade\u3002\n\n\n\n\n/etc/init.d/mopidy stop  # stop mopidy if it\ns running, mopidy-hallo plugin will use SPI\n/etc/init.d/alexa stop      # stop alexa if it\ns running\nmt7688_pinmux set ephy gpio\ncd /etc/arduino\navrdude -c linuxgpio -p m32u4 -e -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xCB:m  -U flash:w:Caterina-ReSpeaker.hex -u -U lock:w:0xEF:m\n\n\n\n\nQ8: \u5fd8\u8bb0\u4e86WebUI\u7684\u5bc6\u7801\n\n\n\n\n\u91cd\u7f6e juci \u5bc6\u7801\n\n\n\n\norangectl passwd root 12345678  //replace 12345678 with the password you want to set\n\n\n\n\nQ9: \u5982\u4f55\u652f\u6301\u8c37\u6b4c\u8bed\u97f3\u6216\u5176\u4ed6Speach to Text\uff08STT\uff09\u5f15\u64ce?\n\n\n\n\n\u6309\u7167\n\u6307\u5357\n\u5b89\u88c5speech_recognition\u5e93\n\n\n\n\nQ10: \u8fd0\u884cAlexa \u9519\u8bef\uff0c\u63d0\u793a\"IOError: [Errno -9998] Invalid number of channels\"\n\n\n\n\n\u8fd8\u6709\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6216alexa\u5b9e\u4f8b\u4f7f\u7528\u97f3\u9891\u8f93\u5165\u8bbe\u5907\u3002\u8fd0\u884c/etc/init.d/alexa stop\u548c/etc/init.d/mopidy stop \u505c\u6b62\u5b83\u4eec\u3002\u8981\u7981\u7528mopidy\u542f\u52a8\uff0c\u8bf7\u8fd0\u884c/etc/init.d/mopidy disable\u3002\n\n\n\n\nQ11: \u65e0\u6cd5\u8fd0\u884cpython playmusic.py\n\n\n\n\n\u5e94\u8be5\u662fmopidy\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u4f7f\u7528USB\u8bbe\u5907\u3002\u5c1d\u8bd5\u8fd0\u884c/etc/init.d/mopidy stop, \u505c\u6b62mopidy\u5e76\u518d\u6b21\u8fd0\u884c\u60a8\u7684\u547d\u4ee4\u3002\n\n\n\n\nQ12: \u6ca1\u6709RPC\u8fde\u63a5\n\n\n\n\n\u60a8\u9700\u8981\u91cd\u65b0\u5237\u56fa\u4ef6\uff0c\u70b9\u51fb\u67e5\u770b \n\u6307\u5357\n\n\n\n\nQ13: SFTP \n FTP\n\n\n\n\n\u6211\u4eec\u6ca1\u6709FTP\uff0c\u53ea\u6709SFTP\u3002\n\n\n\n\nQ14: \u4e32\u53e3\u63a7\u5236\u53f0\u88ab\u9501\u5b9a\n\n\n\n\n\u5c1d\u8bd5\u66f4\u65b0 \narduino code\n\u3002\n\n\n\n\nQ15:\u5982\u4f55\u7981\u7528'ap'\u6a21\u5f0f\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u5728vi / etc / config / wireless \u4e2d\u4fee\u6539\u5982\u4e0b 'ssid' flag of the 'ap' interface to '' \u3002\u4e5f\u5c31\u662f\u5c06'ap'\u6539\u4e3a''\u3002\u7136\u540e\u5c31\u4f1a\u9690\u85cfap\u3002\n\n\n\n\nQ16: I2C\u58f0\u5361\u95ee\u9898\n\n\n\n\n\u6211\u4eec\u9700\u8981\u68c0\u67e5\u7f16\u89e3\u7801\u5668\u9a71\u52a8\u7a0b\u5e8f\u517c\u5bb9\u540d\u4ee5\u53ca\u7f16\u89e3\u7801\u5668i2c\u5730\u5740 \u7136\u540e\u91cd\u5efaimage\u56fa\u4ef6\u3002\n\n\n\n\nQ17: \u5373\u4f7f\u6ca1\u6709\u58f0\u97f3\uff0cRespeaker\u4e5f\u7ecf\u5e38\u88ab\u5524\u9192\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0keyword.txt\u4e2d\u7684\u9608\u503c\u6765\u51cf\u5c11\u8bef\u8bc6\u522b\u7387\uff0c\u4f46\u4e5f\u4f1a\u964d\u4f4e\u654f\u611f\u5ea6\u3002\n\n\n\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u60a8\u7684\u58f0\u97f3\u4e0e\u5f53\u524d\u7684\u58f0\u5b66\u6a21\u5757\u8fdb\u884c\u5339\u914d\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u53c2\u8003\u8fd9\u91cc \nhttp://cmusphinx.sourceforge.net/wiki/tutorialadapt\n\u3002\n\n\n\u8fd9\u79cd\u65b9\u6cd5\u5c06\u6709\u6548\u63d0\u9ad8\u4e2a\u4eba\u5173\u952e\u5b57\u8bc6\u522b\u7387\uff0c\u4f46\u53ef\u80fd\u8ba9\u5176\u4ed6\u4eba\u4e0d\u88ab\u8bc6\u522b\u3002\n\n\n\n\nQ18: \u5982\u4f55\u63a7\u5236Respeaker\u7684GPIO\u5f15\u811a\uff1f\n\n\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u91cc\u7684\u4ee3\u7801 \nhttps://github.com/respeaker/respeaker_python_library/blob/master/respeaker/gpio.py\n\n\n\u4ee5\u53ca\u7528\u8fd9\u91cc\u7684\u4f8b\u7a0b\u6765\u901a\u8fc7GPIO\u6a21\u62dfSPI \nhttps://github.com/respeaker/respeaker_python_library/blob/master/respeaker/spi.py\n\n\n\n\nQ19: \u5982\u4f55\u6539\u53d8\u5524\u9192\u8bcd\uff1f\n\n\n\n\n\n\n\u5728respeaker\u7684 /usr/lib/python2.7/site-packages/respeaker-0.6.0-py2.7.egg/respeaker/pocketsphinx-data  \u76ee\u5f55\u4e0b\u627e\u5230\u5e76\u6253\u5f00\nkeywords.txt\n\n\nrespeaker /1e-30/\nalexa /1e-30/\nplay music /1e-40/\n\n\n\n\nrespeaker \u662f\u5173\u952e\u8bcd, 1e-30 \u662f\u5176\u9608\u503c\u3002\u4e3a\u4e86\u63d0\u9ad8\u654f\u611f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u964d\u4f4e\u9608\u503c\uff0c\u4f8b\u59821e-20\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u63d0\u9ad8\u7075\u654f\u5ea6\u800c\u964d\u4f4e\u9608\u503c\u540c\u65f6\u4f1a\u589e\u52a0\u9519\u8bef\u63a5\u53d7\u7387\u3002\n\n\n\n\n\n\n\u5982\u679c\u8981\u6dfb\u52a0\u65b0\u7684\u5173\u952e\u5b57\uff0c\u5e94\u8be5\u9996\u5148\u5c06\u5173\u952e\u5b57\u6dfb\u52a0\u5230 \ndictionary.txt\n \u3002dictionary.txt \u91cc\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\n\n\n```\nrespeaker   R IY S P IY K ER\nalexa   AH L EH K S AH\nplay    P L EY\nmusic   M Y UW Z IH K\n```\n\n\u6bcf\u884c\u7684\u7b2c\u4e00\u90e8\u5206\u662f\u5173\u952e\u8bcd\u7684\u540d\u5b57 (respeaker, alexa or music), \u7b2c\u4e8c\u90e8\u5206\u662f\u5b83\u7684\u97f3\u7d20\u3002\u4f60\u53ef\u4ee5\u5728 [\u8fd9\u91cc](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt) \u7684\u5b57\u5178\u4e2d\u627e\u5230\u5355\u8bcd\u3002\n\n\n\n\n\n\n\n\n\n\u7136\u540e\u66f4\u6539\u4ee3\u7801\uff1a .\n\n\nif mic.wakeup(\nrespeaker\n):\n\n\n\n\n\n\n\n\n\u5c0f\u7ed3:\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u6309\u7167\u4e0b\u9762\u76843\u6b65\u3002\u6bd4\u5982\u6dfb\u52a0good morning  \n\n\n-  1\u3001\u5728[\u5b98\u65b9\u5b57\u5178](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt)\u4e2d\u67e5\u627e\u5e76\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684\u97f3\u7d20\u3002\n-  2\u3001\u5728keyword.txt\u4e2d\u7ed9 good morning\u8bbe\u7f6e\u4e00\u4e2a\u9608\u503c\n-  3\u3001\u5728\u60a8\u7684python\u4ee3\u7801\u4e2d\u6dfb\u52a0\u8c03\u7528if mic.wakeup(\ngood morning\n):\n\n\n\n\n\nQ20: \u901a\u8fc7\u51fa\u5382\u56fa\u4ef6\u6062\u590d\u7cfb\u7edf\n\n\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u66f4\u65b0\u60a8\u7684ReSpeaker\u6216\u65e0\u6cd5\u8bbf\u95eehttp://192.168.100.1/home.html \uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n \u3002\u8981\u5c06\u7535\u8111\u4e0a\u6700\u65b0\u7684\u56fa\u4ef6\u4e0b\u8f7d\u5230SD\u5361\u4e0a\uff0c\u5e76\u5c06SD\u5361\u63d2\u5165ReSpeaker\u3002\n\n\n\u8fde\u63a5\u5230respeaker\u7684 \n\u4e32\u884c\u63a7\u5236\u53f0\n \uff0c\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\u884c\u6765\u66f4\u65b0\u56fa\u4ef6\uff1a\n\n\nmount /dev/mmcblk0p1 /mnt\ncd /mnt\nsysupgrade -n -F ramips-openwrt-latest-LinkIt7688-squashfs-sysupgrade.bin\n\n\nReSpeaker\u5b89\u88c5\u56fa\u4ef6\u548c\u91cd\u542f\u5927\u7ea6\u9700\u89813\u5206\u949f\uff0c\u66f4\u65b0\u65f6**\u8bf7\u52ff\u5173\u95ed** ReSpeaker\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u539f\u7406\u56fe]\n \nReSpeaker Core v1.0 SCH\n\n\n[Eagle PCB\u56fe]\n \nReSpeaker Core v1.0 BRD\n\n\n[PDF \u539f\u7406\u56fe]\n \nReSpeaker Core v1.0 Schematic(pdf)\n\n\n[PDF PCB\u5e95\u677f\u56fe]\n \nReSpeaker Core v1.0 PCB bottom(pdf)\n\n\n[PDF PCB\u9876\u677f\u56fe]\n \nReSpeaker Core v1.0 PCB top(pdf)", 
            "title": "Respeaker_Core"
        }, 
        {
            "location": "/Respeaker_Core/#_1", 
            "text": "\u89e3\u653e\u60a8\u7684\u53cc\u624b\uff1a\u79bb\u7ebf\u6216\u5728\u7ebf\u6a21\u5f0f\u4e0b\u7684\u8bed\u97f3\u8bc6\u522b  \u65e0\u7ebf\u97f3\u9891\u6d41\u4f20\u8f93\uff1a \u901a\u8fc7Airplay/DLNA\u4f20\u8f93\u97f3\u9891\u6d41  \u6613\u4e8e\u4f7f\u7528\u7684SDK\uff1a\u9002\u7528\u4e8ePython\u548cC / C ++\u5f00\u53d1\u4eba\u5458  \u65e5\u76ca\u589e\u957f\u7684\u529f\u80fd\uff1a\u4e0b\u8f7d\u548c\u63d2\u4ef6\u4e0d\u65ad\u4e30\u5bcc\u5176\u529f\u80fd\u4e0e\u5e94\u7528  \u5373\u63d2\u5373\u7528\u63d2\u4ef6\uff1a\u53ef\u6269\u5c55\u4f7f\u7528\u9ea6\u514b\u98ce\u9635\u5217\uff0cGrove\u6269\u5c55\u677f\uff0cGrove\u6a21\u5757  \u514d\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff1a\u53ef\u57fa\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u6240\u6709\u529f\u80fd\u3001\u53c2\u6570\uff08\u6682\u65f6\u4e0d\u53ef\u7528\uff09", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Respeaker_Core/#_2", 
            "text": "", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Respeaker_Core/#_3", 
            "text": "AI7688 Wi-Fi \u6a21\u5757:   \u64cd\u4f5c\u7cfb\u7edf: \u57fa\u4e8eGNU/Linux \u7684 OpenWrt  wifi\u652f\u6301: \u652f\u6301802.11b/g and HT 802.11n \u6a21\u5f0f  \u6269\u5c55\u6027:\u4e24\u6392\u6269\u5c55\u63a5\u53e3\uff0c\u62e5\u6709 I2C, GPIO \u548c USB 2.0  \u63a5\u53e3: 3.5mm AUX \u97f3\u9891\u63a5\u53e3, Micro USB \u548c SD card \u5361\u69fd     ATMega32U4 \u5904\u7406\u5668:   Linnux\u5e73\u53f0\u4e0b\u7684 USB CDC \u8f6f\u4e32\u53e3  12\u4e2a\u53ef\u7f16\u7a0bLED \u6307\u793a\u706f  8 \u4e2a\u7247\u4e0a\u89e6\u70b9\u63a5\u53e3     Codec WM8960:   DAC SNR 98dB (\u2018A\u2019 weighted), THD -84dB at 48kHz, 3.3V    ADC SNR 94dB (\u2018A\u2019 weighted), THD -82dB at 48kHz, 3.3V    Stereo Class D Speaker Driver with 87% efficiency (1W output)    On-chip Headphone Driver    40mW output power into 16\u03a9 at 3.3V    THD -75dB at 20mW, SNR 90dB with 16\u03a9 load    On-chip PLL provides flexible clocking scheme    Sample rates: 8, 11.025, 12, 16, 22.05, 24, 32, 44.1, 48 kHz     \u4f9b\u7535\u7535\u538b: 5V DC      \u5c3a\u5bf8: \u76f4\u5f84 70mm       \u91cd\u91cf: 17g", 
            "title": "\u6280\u672f\u89c4\u683c"
        }, 
        {
            "location": "/Respeaker_Core/#_4", 
            "text": "GPIO0 / I2S_ADC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cADC\u4fe1\u53f7  GPIO1 / I2S_DAC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cDAC\u4fe1\u53f7  GPIO2 / I2S_LRCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u5de6/\u53f3\u901a\u9053\u91c7\u6837\u65f6\u949f  GPIO3 / I2S_BCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u4f4d\u65f6\u949f  MCLK_OUT\uff1a\u5916\u90e8\u8bbe\u5907\u7684\u4e3b\u65f6\u949f  HP_SEL\uff1a\u8033\u673a\u9891\u9053\u9009\u62e9\u3002\u5982\u679c\u4f7f\u7528ReSpeaker Mic Array\u8f93\u51fa\u97f3\u9891\uff0c\u8bf7\u5c06HP_SEL\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73  HP_L\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u5de6\u58f0\u9053  HP_R\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u53f3\u58f0\u9053  AGND\uff1a\u97f3\u9891\u6a21\u62df\u5730", 
            "title": "\u7ba1\u811a\u56fe"
        }, 
        {
            "location": "/Respeaker_Core/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker_core", 
            "text": "", 
            "title": "\u7b2c\u4e00\u6b21\u62ff\u5230Respeaker_Core\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f"
        }, 
        {
            "location": "/Respeaker_Core/#1", 
            "text": "ReSpeaker\u6838\u5fc3\u677f  PC\u6216Mac  Wi-Fi\u7f51\u7edc  SD\u5361", 
            "title": "1. \u51c6\u5907"
        }, 
        {
            "location": "/Respeaker_Core/#2", 
            "text": "\u5bf9\u4e8ewindow, \u63a8\u8350\u4f7f\u7528  putty \u3002   \u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC\uff0c\u52fe\u9009COM\u8bbe\u5907\u7ba1\u7406\u5668\u3002\u8fd9\u91cc\u6211\u4eec\u7684ReSpeaker COM\u7aef\u53e3\u662fCOM31\u3002     \u5728\u8fde\u63a5\u7c7b\u578b\u4e0b\u9009\u62e9Serial ,\u5728Serial line\u4e2d\uff0c\u8f93\u5165\u60a8\u7684ReSpeaker\u7684COM\u7aef\u53e3\u53f7\uff0c\u5728\u6ce2\u7279\u7387\u9009\u9879\u4e2d\uff0c\u952e\u516557600\u3002     \u70b9\u51fb Open.\u7136\u540e\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u9ed1\u8272\u7684\u5c4f\u5e55\u754c\u9762\uff0c\u70b9\u51fb\u56de\u8f66\u952e\u3002      \u5bf9\u4e8e Linux/Mac    \u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC   \u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u4f1a\u8bdd  \u5728\u7ec8\u7aef\u4e2d\u952e\u5165ls /dev/tty.usb*  \u6211\u4eec\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3ctty.usbmodemXXXXX\u7684\u4e1c\u897f\uff0c\u5176\u4e2dXXXXX\u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u7136\u540e\u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600   $ ls /dev/tty.usb*\n/dev/tty.usbmodem14221\n$ screen /dev/tty.usbmodem14221 57600", 
            "title": "2. \u8fde\u63a5\u5230\u4e32\u884c\u63a7\u5236\u53f0"
        }, 
        {
            "location": "/Respeaker_Core/#3-wi-fi", 
            "text": "ReSpeaker\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a\u4e2d\u7ee7\u6a21\u5f0f\uff0c\u60a8\u5fc5\u987b\u5c06\u5176\u8fde\u63a5\u5230\u73b0\u6709\u7684\u65e0\u7ebfwifi\u7f51\u7edc\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528Internet\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\u3002  \u5f53\u60a8\u9996\u6b21\u63a5\u901aReSpeaker\u7535\u6e90\u65f6\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201cReSpeakerXXXXXX\u201d\u7684Wi-Fi\u7f51\u7edc\u3002\u8fd9\u91cc\u201cXXXXXX\u201d\u662f\u60a8\u7684ReSpeaker MAC\u5730\u5740\u7684\u6700\u540e6\u4f4d\u3002\u5c06\u60a8\u7684\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\u3002    Note  \u5982\u679c\u201cReSpeakerXXXXXX\u201d\u672a\u51fa\u73b0\uff0c\u4f46\u627e\u5230\u201cLinkIt_Smart_7688_XXXXXX\u201d\u3002\u8bf7\u70b9\u51fb  \u8fd9\u91cc .   \u83b7\u53d6IP\u5730\u5740\u540e\uff0c\u6253\u5f00Web\u6d4f\u89c8\u5668\uff0c\u7136\u540e\u5728\u5730\u5740\u680f\u4e2d\u8f93\u5165192.168.100.1\u3002\u51e0\u79d2\u949f\u540e\uff0c\u4f1a\u51fa\u73b0\u4e0b\u56fe\u6240\u793a\u7f51\u9875\uff0c\u9700\u8981\u60a8\u8f93\u5165\u73b0\u6709Wi-Fi\u7f51\u7edc\u7684ssid\u548c\u5bc6\u7801\u3002   \u9009\u62e9\u8981\u8fde\u63a5\u7684Wi-Fi\u5e76\u8f93\u5165\u5bc6\u7801\u3002\u5f53\u60a8\u6309OK\u6309\u94ae\u65f6\uff0cReSpeaker\u5c06\u52a0\u5165\u6307\u5b9a\u7684\u7f51\u7edc\u3002  \u73b0\u5728\u60a8\u7684ReSpeaker\u80fd\u591f\u8bbf\u95ee\u4e92\u8054\u7f51\u3002  \u5982\u679c\u60a8\u6ca1\u6709\u5f39\u51fawifi\u767b\u9646\u9875\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528putty\u4e32\u53e3\u6a21\u5f0f\u4e0b\u8fde\u63a5Respeaker_Core, \u5e76\u4e14\u5728putty\u4e2d\u4f7f\u7528wictl\u626b\u63cfwifi\u5e76\u8fde\u63a5  root@mylinkit:~# wictl\n0, SEEED-MKT\n1, Xiaomi_Youth\n2, ChinaNet-Z5C4\n3, STU-EE\n4, EMBEST_WIFI\n5, SEEED-MKT\n6, nobody\n7, SEEED-MKT\n8, se.VPN\n9, Moovent_HK_2G\n10, LinkIt_Smart_7688_1D917A\n11, SEEED-MKT\n12, SEEED-MKT\n13, zhongrixing\nPlease choose your wifi: 8\nPlease input the wifi password: 88888888\nudhcpc (v1.23.2) started\nSending discover...\nSending discover...\nSending select for 192.168.199.153...\nLease of 192.168.199.153 obtained, lease time 43200\nudhcpc: ifconfig apcli0 192.168.199.153 netmask 255.255.255.0 broadcast 192.168.199.255\nudhcpc: setting default routers: 192.168.199.1\nsuccess\nroot@mylinkit:~#  !!!\u6ce8\u610f\n    \u5982\u679c\u60a8\u65e0\u6cd5\u4f7f\u7528\u4e0a\u8ff0\u65b9\u6cd5\u8fde\u63a5Wifi\uff0c\u8bf7\u901a\u8fc7\u8f93\u5165firstboot\u547d\u4ee4\u8fdb\u884c\u51fa\u5382\u8bbe\u7f6e\u3002  \u542f\u7528Wifi\u529f\u80fd\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528SSH\u6a21\u5f0f\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5Respeaker\u3002\u6211\u4eec\u53ef\u4ee5\u4ecehttp://192.168.100.1/#!/overview WAN IP\u83b7\u53d6Respeaker IP\u5730\u5740\u3002\u5bc6\u7801\u662froot\u3002  ssh root@ssh *.*.*.*", 
            "title": "3. \u8bbe\u7f6e Wi-Fi"
        }, 
        {
            "location": "/Respeaker_Core/#4-sd", 
            "text": "\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5d4c\u5165\u5f0f\u8bbe\u5907\u53ef\u4ee5\u4f7f\u7528\u6709\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff08ReSpeaker\u4ec5\u4e3a\u7528\u6237\u63d0\u4f9b\u4e865M\u7684\u677f\u8f7dFlash\u5b58\u50a8\u7a7a\u95f4\uff09\u3002\u4e3a\u5e94\u7528\u6216\u8005\u6570\u636e\u63d0\u4f9b\u66f4\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u6fc0\u53d1ReSpeaker\u7684\u6f5c\u529b\uff0c\u6240\u4ee5\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u4f5c\u4e3aextroot\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u8fd8\u4e0d\u9519\u7684\u9009\u62e9\u54df\u3002  \u901a\u8fc7\u4f7f\u7528extroot\uff0c\u6dfb\u52a0\u5916\u90e8SD\u5361\u5b58\u50a8\u8bbe\u5907\u6765\u5b9e\u73b0\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u5b58\u50a8\u5bb9\u91cf\u7684\u6269\u5c55\u3002\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u5916\u90e8\u5b58\u50a8\u7a7a\u95f4\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\u542f\u52a8\uff0c\u6216\u8005\u4ee5\u539f\u59cb\u6587\u4ef6\u7cfb\u7edf\u7684\u8986\u76d6\u914d\u7f6e\u8fdb\u884c\u542f\u52a8\u3002   \u786e\u4fdd\u60a8\u7684SD\u5361\u5df2\u63d2\u5165ReSpeaker\uff0c\u5e76\u4e14/ dev / mmcblk0p1\u53ef\u4ee5\u901a\u8fc7df -h\u6216ls / dev\u8fdb\u884c\u68c0\u6d4b\u3002   root@ReSpeaker:/# df -h\nFilesystem                Size      Used Available Use% Mounted on\nrootfs                    1.8M    832.0K    960.0K  46% /\n/dev/root                29.0M     29.0M         0 100% /rom\ntmpfs                    61.7M    276.0K     61.5M   0% /tmp\n/dev/mtdblock6            1.8M    832.0K    960.0K  46% /overlay\noverlayfs:/overlay        1.8M    832.0K    960.0K  46% /\ntmpfs                   512.0K         0    512.0K   0% /dev\n/dev/mmcblk0p1            7.4G      2.5M      7.4G   0% /tmp/run/mountd/mmcblk0p1   \u5c06SD\u5361\u683c\u5f0f\u5316\u4e3a\u4e24\u4e2a\u5206\u533a\uff0c\u4e00\u4e2a\u662fFAT32\uff0c\u53e6\u4e00\u4e2a\u662fEXT4\u3002EXT4\u6587\u4ef6\u7cfb\u7edf\u5c06\u4f5c\u4e3a\u4e00\u4e2a\u5916\u63a5\u7a0b\u5e8f\uff0c\u800cFAT32\u5c06\u4f5c\u4e3a\u6b63\u5e38\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u53ef\u4ee5\u5728ReSpeaker\u548cPC\u4e4b\u95f4\u4f20\u8f93\u6587\u4ef6\u3002       umount /dev/mmcblk0p1\n    fdisk /dev/mmcblk0\n     ------------------ fdisk ------------------------\n     Command (m for help):o\n     Created a new DOS disklabel\n     Command (m for help):n\n     Partition type\n    p   primary (0 primary, 0 extended, 4 free)\n    e   extended (container for logical partitions)\n     Select (default p):p\n     Partition number (1-4, default 1):1\n     First sector (2048-15523839, default 2048):\n     Last sector, +sectors or +size{K,M,G,T,P} (2048-15523839, default 15523839): +2G\n     Command (m for help):n\n     Partition type\n    p   primary (1 primary, 0 extended, 3 free)\n    e   extended (container for logical partitions)\n     Select (default p):p\n     Partition number (1-4, default 2):2\n     First sector (4196352-15523839, default 4196352):\n     Last sector, +sectors or +size{K,M,G,T,P} (4196352-15523839, default 15523839):\n     Command (m for help):w\n     The partition table has been altered.\n     Calling i[  292.010000]  mmcblk0: p1 p2\n     octl() to re-read partition table.\n     Syncing disks.\n     ------------------ end ------------------------\n\n    mkfs.fat /dev/mmcblk0p1\n    mkfs.ext4 /dev/mmcblk0p2\n\n    # reload mtk_sd kernel module\n    rmmod mtk_sd\n    insmod mtk_sd   \u51c6\u5907\u60a8\u7684\u5916\u90e8\u5b58\u50a8root overlay\u3002   mount /dev/mmcblk0p2 /mnt ; tar -C /overlay -cvf - . | tar -C /mnt -xf - ; umount /mnt   \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efafstab\u3002\u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u542f\u7528\u6240\u6709\u5206\u533a\u5e76\u5c06'/ mnt / mmcblk0p2'\u5206\u533a\u8bbe\u7f6e\u4e3a'/ overlay'\u5206\u533a\u7684fstab\u6a21\u677f       block detect   /etc/config/fstab;\n    sed -i s/option$ \\t enabled$ \\t \\ 0\\ /option$ \\t enabled$ \\t \\ 1\\ / /etc/config/fstab;\n    sed -i s#/mnt/mmcblk0p2#/overlay# /etc/config/fstab;\n    cat /etc/config/fstab;   \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u5230 overlay.       root@mylinkit:/# mount /dev/mmcblk0p2 /overlay/\n    root@ReSpeaker:/# df -h\n  Filesystem                Size      Used Available Use% Mounted on\n  rootfs                    1.8M    832.0K    960.0K  46% /\n  /dev/root                29.0M     29.0M         0 100% /rom\n  tmpfs                    61.7M    276.0K     61.5M   0% /tmp\n  /dev/mtdblock6            5.2G     11.8M      4.9G   0% /overlay\n  overlayfs:/overlay        1.8M    832.0K    960.0K  46% /\n  tmpfs                   512.0K         0    512.0K   0% /dev\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /tmp/run/mountd/mmcblk0p2\n  /dev/mmcblk0p1            2.0G      4.0K      2.0G   0% /tmp/run/mountd/mmcblk0p1\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /overlay   \u91cd\u542fReSpeaker\u5e76\u91cd\u65b0\u68c0\u67e5\u3002\u5982\u679cSD\u5361\u81ea\u52a8\u5b89\u88c5\uff0c\u5c31\u5b8c\u6210\u4e86\u3002\u66f4\u591a\u5173\u4e8eextroot\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "4. \u4f7f\u7528SD\u5361\u6765\u6269\u5c55\u5b58\u50a8"
        }, 
        {
            "location": "/Respeaker_Core/#5-respeaker", 
            "text": "\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u540e\uff0c\u6709\u8db3\u591f\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6\u3002  \u5b89\u88c5git      opkg update\n    opkg install git git-http", 
            "title": "5. \u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6"
        }, 
        {
            "location": "/Respeaker_Core/#6-python", 
            "text": "git clone https://github.com/respeaker/respeaker_python_library.git\ncd respeaker_python_library\npython setup.py install", 
            "title": "6. \u66f4\u65b0 Python \u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-respeaker-play-music", 
            "text": "\u4f7f\u7528Bing Speech API\uff0cReSpeaker\u53ef\u4ee5\u5b9e\u65f6\u6253\u5f00\u5e76\u8bc6\u522b\u6765\u81ea\u9ea6\u514b\u98ce\u7684\u97f3\u9891\uff0c\u6216\u4ece\u6587\u4ef6\u8bc6\u522b\u97f3\u9891\u3002  \u8981\u4f7f\u7528Bing Speech API\uff0c\u9996\u5148\u5fc5\u987b\u4ece  \u8fd9\u91cc  \u83b7\u53d6Microsoft Cognitive Services\u7684\u5bc6\u94a5\uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230BING_KEY =\u201c'\uff0c\u7136\u540e\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4fdd\u5b58\u5728playmusic.py\u4e2d\u5e76\u8fd0\u884c  //stop mopidy and alexa to avoid USB device occupation\n/etc/init.d/mopidy stop\n/etc/init.d/alexa stop\npython playmusic.py   import logging\nimport time\nimport os\nfrom threading import Thread, Event\nfrom respeaker import Microphone\nfrom respeaker.bing_speech_api import BingSpeechAPI\n\n# use madplay to play mp3 file     \nos.system( madplay )               \n\n# get a key from https://www.microsoft.com/cognitive-services/en-us/speech-api\nBING_KEY =        \n\n\ndef task(quit_event):                                                         \n    mic = Microphone(quit_event=quit_event)                                   \n    bing = BingSpeechAPI(key=BING_KEY)                                        \n\n    while not quit_event.is_set():\n        if mic.wakeup( respeaker ):        \n            print( Wake up )               \n            data = mic.listen()            \n            try:                      \n                text = bing.recognize(data)\n                if text:           \n                    print( Recognized %s  % text)\n                    if  play music  in text:\n                        print( I will play music! )\n                        os.system( madplay Tchaikovsky_Concerto_No.1p.mp3 )\n            except Exception as e:               \n                print(e.message)                 \n\ndef main():                                                              \n    logging.basicConfig(level=logging.DEBUG)                                                           \n    quit_event = Event()        \n    thread = Thread(target=task, args=(quit_event,))\n    thread.start()                          \n    while True:                             \n        try:                                \n            time.sleep(1)                           \n        except KeyboardInterrupt:                   \n            print( Quit )                           \n            quit_event.set()\n            break        \n    thread.join()                \n\nif __name__ ==  __main__ :       \n    main()                    \u5728\"INFO:mic:Start Detecting\" \u51fa\u6765\u4e4b\u540e\uff0c\u5c1d\u8bd5\u8bf4\u201cReSpeaker\u201d\u5524\u9192\u7a0b\u5e8f\uff0c\u5524\u9192\u540e\u8bf4\u201cplaymusic\u201d\u8ba9\u5b83\u64ad\u653e\u97f3\u4e50\u3002\u7136\u540eReSpeaker\u5c06\u4f7f\u7528madplay\u5de5\u5177\u5728\u5f53\u524d\u8def\u5f84\u4e2d\u64ad\u653e\u201cTchaikovsky_Concerto_No.1p.mp3\u201d   \u5982\u679c\u60a8\u770b\u5230\u4ee5\u4e0b\u9519\u8bef\u4ee3\u7801\uff0c\u90a3\u4e48mopidy\u6b63\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u5360\u7528USB\u8bbe\u5907\u3002\u6240\u4ee5\u5c1d\u8bd5\u8fd0\u884c /etc/init.d/mopidy\uff0c\u505c\u6b62mopidy\uff0c\u7136\u540e\u518d\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4\u3002  root@ReSpeaker:~# python playmusic.py\nUsage: madplay [OPTIONS] FILE [...]\nTry `madplay --help  for more information.\nException in thread Thread-2:\nTraceback (most recent call last):\nFile  /usr/lib/python2.7/threading.py , line 810, in __bootstrap_inner", 
            "title": "\u4e0eRespeaker\u7684\u7b2c\u4e00\u6b21\u4e92\u52a8 - ReSpeaker, play music!"
        }, 
        {
            "location": "/Respeaker_Core/#_6", 
            "text": "", 
            "title": "\u5e94\u7528\u5b9e\u4f8b"
        }, 
        {
            "location": "/Respeaker_Core/#_7", 
            "text": "ReSpeaker\u63a7\u5236\u6a21\u5757\u662f\u57fa\u4e8eATmega32u4\u82af\u7247\uff0c\u8be5\u82af\u7247\u5b8c\u5168\u517c\u5bb9Arduino\u9a71\u52a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ReSpeaker\u4f5c\u4e3a\u5f3a\u5927\u7684Arduino\u5b66\u4e60\u677f\uff0c\u5e76\u505a\u4e86\u8bb8\u591a\u201cArduino\u201d\u5f00\u53d1\u677f\u80fd\u505a\u7684\u4e8b\u60c5\u3002  \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Arduino IDE\u5bf9\u5176\u8fdb\u884c\u7f16\u7a0b\uff0c\u6765\u5b9e\u73b0\u521b\u610fDIY\u94a2\u7434\uff0c\u8be5\u94a2\u7434\u642d\u914d8\u4e2a\u6a31\u6843\u897f\u7ea2\u67ff\u8fde\u63a5\u5230ReSpeaker\u76848\u4e2a\u89e6\u6478\u4f20\u611f\u5668\u3002      \u5728respeaker\u4e0a\u8f93\u5165 git clone  https://github.com/respeaker/piano.git       \u4e0b\u8f7d\u5e93      \u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e2d\u4e0b\u8f7d ReSpeaker Arduino Library      \u4e0a\u4f20piano.ino\u5230ReSpeaker\u7684Arduino Leonardo\uff08ATmega32U4\uff09      \u5728ReSpeaker\u7684\u4e32\u884c\u63a7\u5236\u53f0\u4e0a\u8fd0\u884cpython piano.py", 
            "title": "\u6c34\u679c\u94a2\u7434"
        }, 
        {
            "location": "/Respeaker_Core/#_8", 
            "text": "\u5929\u6c14\u4e91\u662f\u5f88\u68d2\u7684\u4e00\u4e2aReSpeaker\u9879\u76ee\u3002\u8fd9\u4e2a\u5f88\u9177\u7684\u521b\u610f\u5c06ReSpeaker\u53d8\u6210\u4e86\u4e00\u4e2a\u5929\u6c14\u4e91\uff0c\u5b83\u80fd\u591f\u663e\u793a\u51fa\u751f\u52a8\u7684\u5149\u7ebf\u548c\u58f0\u97f3\u3002  \u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0cOpenwrt\u8d1f\u8d23\u4ece\u4e92\u8054\u7f51\u83b7\u53d6\u5b9e\u65f6\u5929\u6c14\u4fe1\u606f\uff0c\u8fdb\u884c\u8bed\u97f3\u4ea4\u4e92\u548c\u97f3\u9891\u8f93\u51fa\uff0c\u800cArduino\u8d1f\u8d23\u63a7\u5236\u5f69\u8272RGB LED\u3002   \u5728respeaker\u4e0a\u8f93\u5165 git clone  https://github.com/jerryyip/WeatherCloud.git , \u4e0b\u8f7d\u9879\u76ee\u5e93\u6587\u4ef6\u3002  \u70b9\u51fb\u4e0b\u8f7d  ReSpeaker Arduino Library  \u5230\u60a8\u7684\u7535\u8111\u4e0a\uff0c\u5e76\u5b89\u88c5\u3002  \u901a\u8fc7Arduino IDE\u5c06  pixels_pattern.ino  \u4e0a\u4f20\u5230respeaker\u3002   \u4ece\u8fd9\u91cc\u83b7\u53d6OpenWeatherMap appid \uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230main.py\u4e2d\u7684appID =\u201c\u201d\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u60a8\u7684\u57ce\u5e02\u6dfb\u52a0\u5230city =\u201c\u201d    \u5728\u4f7f\u7528SPI\u4e4b\u524d\u8bf7\u7ec8\u6b62mopidy service\u5728OpenWrt\u4e2d\u7684\u8fdb\u7a0b\uff0crespeaker\u5728\u63a7\u5236\u53f0\u4e0a\u952e\u5165\n/etc/init.d/mopidy stop   \u8fd0\u884cpython main.py \u7136\u540e\u5bf9\u7740\u5b83\u558a \"ReSpeaker, what is the weather like?\"  \u6709\u5173\u5982\u4f55\u5236\u4f5c\u5929\u6c14\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "\u5929\u6c14\u4e91"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-mic-arrayrespeaker", 
            "text": "", 
            "title": "ReSpeaker Mic Array\uff08ReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\uff09"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-mic-array", 
            "text": "ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73", 
            "title": "ReSpeaker Mic Array"
        }, 
        {
            "location": "/Respeaker_Core/#_9", 
            "text": "\u60a8\u53ef\u9875\u9762\u4ee5\u70b9\u51fb\u4e0b\u5217\u6807\u9898\u6765\u8df3\u8f6c\u5230\u5bf9\u5e94", 
            "title": "\u5173\u4e8e\u8f6f\u4ef6"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-arduino", 
            "text": "ReSpeaker Arudino\u5e93\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a   \u652f\u6301\u7535\u5bb9\u5f0f\u89e6\u6478\u611f\u5e94  \u5b9e\u73b0\u4e86WS2812 RGB LED\u9a71\u52a8  \u6784\u5efa\u4e86\u4eceArduino (ATmega32U4)\u5230\u57fa\u4e8eLinux\u7684OpenWrt (MT7688)\u4e4b\u95f4\u7684USB\u5230\u4e32\u53e3\u548cUSB\u5230SPI\u901a\u9053\u3002", 
            "title": "ReSpeaker Arduino \u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-python", 
            "text": "ReSpeaker\u662f\u4e00\u4e2a\u652f\u6301\u8bed\u97f3\u4ea4\u4e92\u7684\u5f00\u653e\u9879\u76ee\u3002ReSpeaker python\u5e93\u662f\u4e00\u4e2a\u5f00\u6e90\u7684python\u5e93\uff0c\u7528\u4e8e\u63d0\u4f9b\u8bed\u97f3\u4ea4\u4e92\u7684\u57fa\u672c\u529f\u80fd\u3002\n\u5b83\u4f7f\u7528PocketSphinx\u8fdb\u884c\u5173\u952e\u5b57\u67e5\u627e\uff0c\u5e76\u4f7f\u7528webrtcvad\u8fdb\u884c\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b\u3002", 
            "title": "ReSpeaker Python \u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#github", 
            "text": "", 
            "title": "\u66f4\u591a\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc\u67e5\u770b\u6211\u4eec\u7684github\u8d44\u6599\u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#faq", 
            "text": "", 
            "title": "FAQ"
        }, 
        {
            "location": "/Respeaker_Core/#q1", 
            "text": "\u6253\u5f00\u4e32\u884c\u63a7\u5236\u53f0\u6216ssh\u4f1a\u8bdd\u5e76\u8fd0\u884c firstboot.  \u66f4\u591a\u7ec6\u8282\u70b9\u51fb\u8fd9\u91cc .", 
            "title": "Q1: \u5982\u4f55\u6062\u590d\u51fa\u5382\u8bbe\u7f6e?"
        }, 
        {
            "location": "/Respeaker_Core/#q2", 
            "text": "\u5347\u7ea7\u5931\u8d25\u540e\uff0c\u5f53\u91cd\u65b0\u542f\u52a8\u8fdb\u5165openwrt\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u7ec8\u7aef\uff0cssh\u6216\u4e32\u884c\u63a7\u5236\u53f0\u8bbf\u95ee\u7cfb\u7edf\u3002\u6211\u4eec\u53ef\u4ee5\u6309\u7167   Rescue instruction  \u6307\u4ee4\u8fdb\u884c\u6062\u590d\u3002", 
            "title": "Q2: \u5982\u679c\u5347\u7ea7\u5931\u8d25\u4e86\uff0c\u600e\u4e48\u62a2\u6551?"
        }, 
        {
            "location": "/Respeaker_Core/#q3-respeakerwi-fi", 
            "text": "\u8bf7\u5148\u5c1d\u8bd5  \u6062\u590d\u51fa\u5382\u8bbe\u7f6e  \u3002  ReSpeaker\u4e0d\u652f\u6301Wi-Fi\u9891\u905312\u3002\u786e\u4fdd\u60a8\u7684\u8def\u7531\u5668\u6ca1\u6709\u4f7f\u7528\u8be5\u901a\u9053\u3002.", 
            "title": "Q3: ReSpeaker\u627e\u4e0d\u5230\u6211\u7684Wi-Fi"
        }, 
        {
            "location": "/Respeaker_Core/#q4-wifi", 
            "text": "\u6211\u4eec\u5efa\u8bae\u60a8\u901a\u8fc7 WEB-UI \u914d\u7f6eWi-Fi \uff0c\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\uff0c\u8bf7\u5728\u63a7\u5236\u53f0\u4e0a\u5c1d\u8bd5\u547d\u4ee4\u884c\u5de5\u5177 wictl  \u3002", 
            "title": "Q4: \u5982\u4f55\u8fdb\u884cWifi\u914d\u7f6e"
        }, 
        {
            "location": "/Respeaker_Core/#q5-bing-speech-api", 
            "text": "\u5982\u679c\u60a8\u4e0d\u9700\u8981\u66f4\u6539\u5524\u9192\u5b57\uff0c\u53ea\u9700\u5c06text = bing.recognize\uff08data\uff09\u66f4\u6539\u4e3atext = bing.recognize\uff08data\uff0clanguage =\u201czh-CN\u201d\uff09\u5c31\u53ef\u4ee5\u4e86\u3002  \u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc .", 
            "title": "Q5: \u5982\u4f55\u6539\u53d8BING Speech api \u7684\u8bc6\u522b\u8bed\u8a00"
        }, 
        {
            "location": "/Respeaker_Core/#q6-sdfsck", 
            "text": "\u5982\u679cSD\u5361\u4e0a\u7684\u6587\u4ef6\u6b63\u5e38\uff0c\u8bf7\u5ffd\u7565\u5b83\u3002\u5426\u5219\uff0c\u5c1d\u8bd5\u4f7f\u7528 sd\u5361\u683c\u5f0f\u5316\u7a0b\u5e8f\u8fdb\u884c\u683c\u5f0f\u5316 .", 
            "title": "Q6: \u6536\u5230SD\u5361\u8b66\u544a\u6d88\u606f\u201c\u5377\u672a\u6b63\u786e\u5378\u8f7d\u3002\u67d0\u4e9b\u6570\u636e\u53ef\u80fd\u5df2\u635f\u574f\u3002\u8bf7\u8fd0\u884cfsck\u201d"
        }, 
        {
            "location": "/Respeaker_Core/#q7-bad-flash-from-arduino", 
            "text": "\u6309\u7167\u4e0b\u9762\u4ee3\u7801\uff0c\u5728openwrt\u4e2d\u91cd\u65b0\u70e7\u5199 bootloade\u3002   /etc/init.d/mopidy stop  # stop mopidy if it s running, mopidy-hallo plugin will use SPI\n/etc/init.d/alexa stop      # stop alexa if it s running\nmt7688_pinmux set ephy gpio\ncd /etc/arduino\navrdude -c linuxgpio -p m32u4 -e -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xCB:m  -U flash:w:Caterina-ReSpeaker.hex -u -U lock:w:0xEF:m", 
            "title": "Q7: \u9519\u8bef\u63d0\u793a \u201cBad flash from Arduino\u201d"
        }, 
        {
            "location": "/Respeaker_Core/#q8-webui", 
            "text": "\u91cd\u7f6e juci \u5bc6\u7801   orangectl passwd root 12345678  //replace 12345678 with the password you want to set", 
            "title": "Q8: \u5fd8\u8bb0\u4e86WebUI\u7684\u5bc6\u7801"
        }, 
        {
            "location": "/Respeaker_Core/#q9-speach-to-textstt", 
            "text": "\u6309\u7167 \u6307\u5357 \u5b89\u88c5speech_recognition\u5e93", 
            "title": "Q9: \u5982\u4f55\u652f\u6301\u8c37\u6b4c\u8bed\u97f3\u6216\u5176\u4ed6Speach to Text\uff08STT\uff09\u5f15\u64ce?"
        }, 
        {
            "location": "/Respeaker_Core/#q10-alexa-ioerror-errno-9998-invalid-number-of-channels", 
            "text": "\u8fd8\u6709\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6216alexa\u5b9e\u4f8b\u4f7f\u7528\u97f3\u9891\u8f93\u5165\u8bbe\u5907\u3002\u8fd0\u884c/etc/init.d/alexa stop\u548c/etc/init.d/mopidy stop \u505c\u6b62\u5b83\u4eec\u3002\u8981\u7981\u7528mopidy\u542f\u52a8\uff0c\u8bf7\u8fd0\u884c/etc/init.d/mopidy disable\u3002", 
            "title": "Q10: \u8fd0\u884cAlexa \u9519\u8bef\uff0c\u63d0\u793a\"IOError: [Errno -9998] Invalid number of channels\""
        }, 
        {
            "location": "/Respeaker_Core/#q11-python-playmusicpy", 
            "text": "\u5e94\u8be5\u662fmopidy\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u4f7f\u7528USB\u8bbe\u5907\u3002\u5c1d\u8bd5\u8fd0\u884c/etc/init.d/mopidy stop, \u505c\u6b62mopidy\u5e76\u518d\u6b21\u8fd0\u884c\u60a8\u7684\u547d\u4ee4\u3002", 
            "title": "Q11: \u65e0\u6cd5\u8fd0\u884cpython playmusic.py"
        }, 
        {
            "location": "/Respeaker_Core/#q12-rpc", 
            "text": "\u60a8\u9700\u8981\u91cd\u65b0\u5237\u56fa\u4ef6\uff0c\u70b9\u51fb\u67e5\u770b  \u6307\u5357", 
            "title": "Q12: \u6ca1\u6709RPC\u8fde\u63a5"
        }, 
        {
            "location": "/Respeaker_Core/#q13-sftp-ftp", 
            "text": "\u6211\u4eec\u6ca1\u6709FTP\uff0c\u53ea\u6709SFTP\u3002", 
            "title": "Q13: SFTP &amp; FTP"
        }, 
        {
            "location": "/Respeaker_Core/#q14", 
            "text": "\u5c1d\u8bd5\u66f4\u65b0  arduino code \u3002", 
            "title": "Q14: \u4e32\u53e3\u63a7\u5236\u53f0\u88ab\u9501\u5b9a"
        }, 
        {
            "location": "/Respeaker_Core/#q15ap", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u5728vi / etc / config / wireless \u4e2d\u4fee\u6539\u5982\u4e0b 'ssid' flag of the 'ap' interface to '' \u3002\u4e5f\u5c31\u662f\u5c06'ap'\u6539\u4e3a''\u3002\u7136\u540e\u5c31\u4f1a\u9690\u85cfap\u3002", 
            "title": "Q15:\u5982\u4f55\u7981\u7528'ap'\u6a21\u5f0f"
        }, 
        {
            "location": "/Respeaker_Core/#q16-i2c", 
            "text": "\u6211\u4eec\u9700\u8981\u68c0\u67e5\u7f16\u89e3\u7801\u5668\u9a71\u52a8\u7a0b\u5e8f\u517c\u5bb9\u540d\u4ee5\u53ca\u7f16\u89e3\u7801\u5668i2c\u5730\u5740 \u7136\u540e\u91cd\u5efaimage\u56fa\u4ef6\u3002", 
            "title": "Q16: I2C\u58f0\u5361\u95ee\u9898"
        }, 
        {
            "location": "/Respeaker_Core/#q17-respeaker", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0keyword.txt\u4e2d\u7684\u9608\u503c\u6765\u51cf\u5c11\u8bef\u8bc6\u522b\u7387\uff0c\u4f46\u4e5f\u4f1a\u964d\u4f4e\u654f\u611f\u5ea6\u3002  \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u60a8\u7684\u58f0\u97f3\u4e0e\u5f53\u524d\u7684\u58f0\u5b66\u6a21\u5757\u8fdb\u884c\u5339\u914d\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u53c2\u8003\u8fd9\u91cc  http://cmusphinx.sourceforge.net/wiki/tutorialadapt \u3002  \u8fd9\u79cd\u65b9\u6cd5\u5c06\u6709\u6548\u63d0\u9ad8\u4e2a\u4eba\u5173\u952e\u5b57\u8bc6\u522b\u7387\uff0c\u4f46\u53ef\u80fd\u8ba9\u5176\u4ed6\u4eba\u4e0d\u88ab\u8bc6\u522b\u3002", 
            "title": "Q17: \u5373\u4f7f\u6ca1\u6709\u58f0\u97f3\uff0cRespeaker\u4e5f\u7ecf\u5e38\u88ab\u5524\u9192"
        }, 
        {
            "location": "/Respeaker_Core/#q18-respeakergpio", 
            "text": "\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u91cc\u7684\u4ee3\u7801  https://github.com/respeaker/respeaker_python_library/blob/master/respeaker/gpio.py  \u4ee5\u53ca\u7528\u8fd9\u91cc\u7684\u4f8b\u7a0b\u6765\u901a\u8fc7GPIO\u6a21\u62dfSPI  https://github.com/respeaker/respeaker_python_library/blob/master/respeaker/spi.py", 
            "title": "Q18: \u5982\u4f55\u63a7\u5236Respeaker\u7684GPIO\u5f15\u811a\uff1f"
        }, 
        {
            "location": "/Respeaker_Core/#q19", 
            "text": "\u5728respeaker\u7684 /usr/lib/python2.7/site-packages/respeaker-0.6.0-py2.7.egg/respeaker/pocketsphinx-data  \u76ee\u5f55\u4e0b\u627e\u5230\u5e76\u6253\u5f00 keywords.txt  respeaker /1e-30/\nalexa /1e-30/\nplay music /1e-40/  respeaker \u662f\u5173\u952e\u8bcd, 1e-30 \u662f\u5176\u9608\u503c\u3002\u4e3a\u4e86\u63d0\u9ad8\u654f\u611f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u964d\u4f4e\u9608\u503c\uff0c\u4f8b\u59821e-20\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u63d0\u9ad8\u7075\u654f\u5ea6\u800c\u964d\u4f4e\u9608\u503c\u540c\u65f6\u4f1a\u589e\u52a0\u9519\u8bef\u63a5\u53d7\u7387\u3002    \u5982\u679c\u8981\u6dfb\u52a0\u65b0\u7684\u5173\u952e\u5b57\uff0c\u5e94\u8be5\u9996\u5148\u5c06\u5173\u952e\u5b57\u6dfb\u52a0\u5230  dictionary.txt  \u3002dictionary.txt \u91cc\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a  ```\nrespeaker   R IY S P IY K ER\nalexa   AH L EH K S AH\nplay    P L EY\nmusic   M Y UW Z IH K\n```\n\n\u6bcf\u884c\u7684\u7b2c\u4e00\u90e8\u5206\u662f\u5173\u952e\u8bcd\u7684\u540d\u5b57 (respeaker, alexa or music), \u7b2c\u4e8c\u90e8\u5206\u662f\u5b83\u7684\u97f3\u7d20\u3002\u4f60\u53ef\u4ee5\u5728 [\u8fd9\u91cc](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt) \u7684\u5b57\u5178\u4e2d\u627e\u5230\u5355\u8bcd\u3002    \u7136\u540e\u66f4\u6539\u4ee3\u7801\uff1a .  if mic.wakeup( respeaker ):    \u5c0f\u7ed3:\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u6309\u7167\u4e0b\u9762\u76843\u6b65\u3002\u6bd4\u5982\u6dfb\u52a0good morning    -  1\u3001\u5728[\u5b98\u65b9\u5b57\u5178](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt)\u4e2d\u67e5\u627e\u5e76\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684\u97f3\u7d20\u3002\n-  2\u3001\u5728keyword.txt\u4e2d\u7ed9 good morning\u8bbe\u7f6e\u4e00\u4e2a\u9608\u503c\n-  3\u3001\u5728\u60a8\u7684python\u4ee3\u7801\u4e2d\u6dfb\u52a0\u8c03\u7528if mic.wakeup( good morning ):", 
            "title": "Q19: \u5982\u4f55\u6539\u53d8\u5524\u9192\u8bcd\uff1f"
        }, 
        {
            "location": "/Respeaker_Core/#q20", 
            "text": "\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u66f4\u65b0\u60a8\u7684ReSpeaker\u6216\u65e0\u6cd5\u8bbf\u95eehttp://192.168.100.1/home.html \uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc  \u3002\u8981\u5c06\u7535\u8111\u4e0a\u6700\u65b0\u7684\u56fa\u4ef6\u4e0b\u8f7d\u5230SD\u5361\u4e0a\uff0c\u5e76\u5c06SD\u5361\u63d2\u5165ReSpeaker\u3002  \u8fde\u63a5\u5230respeaker\u7684  \u4e32\u884c\u63a7\u5236\u53f0  \uff0c\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\u884c\u6765\u66f4\u65b0\u56fa\u4ef6\uff1a  mount /dev/mmcblk0p1 /mnt\ncd /mnt\nsysupgrade -n -F ramips-openwrt-latest-LinkIt7688-squashfs-sysupgrade.bin \nReSpeaker\u5b89\u88c5\u56fa\u4ef6\u548c\u91cd\u542f\u5927\u7ea6\u9700\u89813\u5206\u949f\uff0c\u66f4\u65b0\u65f6**\u8bf7\u52ff\u5173\u95ed** ReSpeaker\u3002", 
            "title": "Q20: \u901a\u8fc7\u51fa\u5382\u56fa\u4ef6\u6062\u590d\u7cfb\u7edf"
        }, 
        {
            "location": "/Respeaker_Core/#_10", 
            "text": "[Eagle\u539f\u7406\u56fe]   ReSpeaker Core v1.0 SCH  [Eagle PCB\u56fe]   ReSpeaker Core v1.0 BRD  [PDF \u539f\u7406\u56fe]   ReSpeaker Core v1.0 Schematic(pdf)  [PDF PCB\u5e95\u677f\u56fe]   ReSpeaker Core v1.0 PCB bottom(pdf)  [PDF PCB\u9876\u677f\u56fe]   ReSpeaker Core v1.0 PCB top(pdf)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/license/", 
            "text": "License\n\n\nMIT License\n\n\nCopyright \n 2008 - 2017 Seeed INC.\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.", 
            "title": "\u6587\u6863\u534f\u8bae"
        }, 
        {
            "location": "/license/#license", 
            "text": "MIT License  Copyright   2008 - 2017 Seeed INC.  Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.", 
            "title": "License"
        }
    ]
}