{
    "docs": [
        {
            "location": "/", 
            "text": "Platform\n\n\n\n\n\n\n\n\nArduino\n\n\nBeaglebone\n\n\nRaspberry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWio\n\n\nmbed\n\n\nRePhone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinkIt\n\n\nReSpeaker\n\n\nShield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEssentials\n\n\nWireless\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove\n\n\n\n\n\n\n\n\nSensor\n\n\nActuator\n\n\nDisplay\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication\n\n\nOthers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIOT\n\n\n\n\n\n\n\n\nIOT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaker Pro\n\n\n\n\n\n\n\n\nMaker Pro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTutorial\n\n\n\n\n\n\n\n\nTutorial\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u534f\u8bae\n\n\nCopyright \n 2018-2017 Seeed Inc. (\nhttps://www.seeedstudio.com\n)\n\n\n\u6587\u6863\u53ca\u56fe\u7247\n\n\n\n\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece \nCreative Commons Attribution-ShareAlike 4.0 International License\n. \n \n\n\u7684\u534f\u8bae\n\n\n\u8054\u7cfb\u6211\u4eec\n\n\n\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "Seeed\u6587\u6863\u4e2d\u6587\u7ad9\u70b9\u4ecb\u7ecd"
        }, 
        {
            "location": "/#platform", 
            "text": "Arduino  Beaglebone  Raspberry               Wio  mbed  RePhone               LinkIt  ReSpeaker  Shield               Essentials  Wireless", 
            "title": "Platform"
        }, 
        {
            "location": "/#grove", 
            "text": "Sensor  Actuator  Display               Communication  Others", 
            "title": "Grove"
        }, 
        {
            "location": "/#iot", 
            "text": "IOT", 
            "title": "IOT"
        }, 
        {
            "location": "/#maker-pro", 
            "text": "Maker Pro", 
            "title": "Maker Pro"
        }, 
        {
            "location": "/#tutorial", 
            "text": "Tutorial", 
            "title": "Tutorial"
        }, 
        {
            "location": "/#_1", 
            "text": "Copyright   2018-2017 Seeed Inc. ( https://www.seeedstudio.com )", 
            "title": "\u534f\u8bae"
        }, 
        {
            "location": "/#_2", 
            "text": "\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece  Creative Commons Attribution-ShareAlike 4.0 International License .    \n\u7684\u534f\u8bae", 
            "title": "\u6587\u6863\u53ca\u56fe\u7247"
        }, 
        {
            "location": "/#_3", 
            "text": "\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "\u8054\u7cfb\u6211\u4eec"
        }, 
        {
            "location": "/Arduino/", 
            "text": "Arduino\u662f\u57fa\u4e8e\u6613\u4e8e\u4f7f\u7528\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u7684\u5f00\u6e90\u539f\u578b\u5e73\u53f0\u3002\u56e0\u4e3a\u5b83\u662f\u5982\u6b64\u7075\u6d3b\u548c\u5f00\u6e90\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u6709\u5174\u8da3\u521b\u5efa\u4ea4\u4e92\u5f0f\u5bf9\u8c61\u6216\u73af\u5883\uff0c\u65e0\u8bba\u60a8\u662f\u827a\u672f\u5bb6\uff0c\u8bbe\u8ba1\u5e08\u8fd8\u662f\u4e1a\u4f59\u7231\u597d\u8005\uff0cArduino\u90fd\u662f\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u3002\n\n\nSeeed Studio\u7684\u5ea7\u53f3\u94ed\u4e4b\u4e00\u662f\u201c\u589e\u957f\u5dee\u5f02\u201d\uff0c\u73b0\u5728\u5df2\u6210\u4e3a\u516c\u53f8\u6587\u5316\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e0d\u4ec5\u4f53\u73b0\u5728\u6211\u4eec\u5728\u666e\u53ca\u5f00\u6e90\u6587\u5316\u65b9\u9762\u6240\u505a\u7684\u5de5\u4f5c\uff0c\u4e5f\u53cd\u6620\u5728\u6211\u4eec\u7684\u4ea7\u54c1\u4e2d\u3002\u81ea\u516c\u53f8\u6210\u7acb\u4ee5\u6765\uff0c\u6211\u4eec\u4e0d\u65ad\u521b\u5efa\u81ea\u5df1\u7684\u5f00\u653e\u5e73\u53f0\uff0c\u4e0e\u73b0\u6709\u7684\u5e73\u53f0\u4e0d\u540c\u3002\n\n\n\u5728Seeed\uff0c\u60a8\u4e0d\u4ec5\u53ef\u4ee5\u53d1\u73b0Arduino\u677f\uff0c\u5982Arduino Nano\u548cArduino Mega\uff0c\u8fd8\u6709\u8bb8\u591a\u677f\u5757\uff0c\u5982Seeed Studio\u548cArduino\u7684\u8054\u5408\u52aa\u529b\uff0c\u5982Seeeduino\u3002 Seeeduino\u4e0eArduino\u517c\u5bb9\uff0c\u5177\u6709\u66f4\u5f3a\u5927\u7684\u529f\u80fd\u548c\u66f4\u4f4e\u7684\u4ef7\u683c\u3002\u9996\u5148\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u5bf9\u5e94\u4e8eArduino Mega\u7684\u6700\u65b0\u7248\u672cSeeeduino V4.2\u6216Seeeduino Mega\u3002\n\n\n\u5668\u6750\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Seeeduino\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGrove-Maker_Kit_for_Intel_Joule\n\n\nGrove_Starter_kit_for_Arduino_101\n\n\nSeeeduino_Cloud\n\n\nSeeeduino_Lite\n\n\nSeeeduino_LoRAWAN\n\n\nSeeeduino_Lotus\n\n\nSeeeduino_v4.2\n\n\nSidekick_Basic_Kit_for_Arduino_V2\n\n\nUartSBee_v5", 
            "title": "Arduino"
        }, 
        {
            "location": "/Arduino/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Seeeduino\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Grove-Maker_Kit_for_Intel_Joule  Grove_Starter_kit_for_Arduino_101  Seeeduino_Cloud  Seeeduino_Lite  Seeeduino_LoRAWAN  Seeeduino_Lotus  Seeeduino_v4.2  Sidekick_Basic_Kit_for_Arduino_V2  UartSBee_v5", 
            "title": "\u5668\u6750\u6e05\u5355"
        }, 
        {
            "location": "/Seeeduino_v4.2/", 
            "text": "Seeeduino v4.2\u662f\u4e00\u6b3e\u5f00\u6e90\u7684Arduino\u517c\u5bb9ATmega328 MCU\u5f00\u53d1\u677f\u3002 \u6211\u4eec\u8ba4\u4e3aSeeeduino v4.2\u662f\u6700\u597d\u7684Arduino\u884d\u751f\u7269/\u517c\u5bb9\u7269\u4e4b\u4e00\u3002 Seeeduino v4\u662f\u529f\u80fd\u4e30\u5bcc\uff0c\u66f4\u7a33\u5b9a\uff0c\u6613\u4e8e\u4f7f\u7528\uff0c\u5e76\u4e14\u989c\u503c\u66f4\u9ad8\u3002\n\n\nSeeeduino v4.2\u57fa\u4e8eArduino UNO\u5f15\u5bfc\u7a0b\u5e8f\uff0cATmega16U2\u4f5c\u4e3aUART\u5230USB\u8f6c\u6362\u5668\uff08\u57fa\u672c\u4e0a\u7c7b\u4f3cFTDI USB2UART\u82af\u7247\uff09\u3002 \u8be5\u677f\u9644\u5e26\u4e00\u5957\u989d\u5916\u7684\u901a\u5b54\u710a\u76d8\uff0c\u5305\u62ec\u6240\u6709\u5f15\u811a\u3002 \u8fd9\u4e9b\u710a\u76d8\u4e0e0.1\u201c\u683c\u6805\u5bf9\u9f50\uff0c\u8fd9\u6837\u53ef\u4ee5\u8f7b\u677e\u710a\u63a5\u989d\u5916\u7684\u5f15\u811a\u63d2\u5934\u63d2\u5165\u9762\u677f\uff0c\u6216\u8005\u75280.1\u201d\u70b9\u9635\u901a\u7528PCB\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u9644\u4ef6/\u6269\u5c55\u677f\u3002\n\n\n\u60a8\u53ef\u4ee5\u901a\u8fc7micro-USB\u7535\u7f06\u5bf9\u5f00\u53d1\u677f\u8fdb\u884c\u7f16\u7a0b\u3002 \u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7DC\u63d2\u5b54\u8f93\u5165\uff087\u81f315V DC\uff09\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u3002 \u6709\u4e00\u4e2a\u9009\u62e9\u7cfb\u7edf\u7684\u7535\u6e90\u7535\u538b3.3V\u62165V\u7684\u5f00\u5173\uff0c\u5982\u679c\u8981\u5c06\u7cfb\u7edf\u8bbe\u7f6e\u4e3a3.3V\u4e0e\u4f4e\u7535\u538b\u4f20\u611f\u5668\u4ea4\u4e92\uff0c\u60a8\u9700\u8981\u5c06\u5f00\u5173\u62e8\u52303.3V\u6863\u4f4d\u3002\n\n\n\u6700\u540e\uff0c\u4e09\u4e2a\u677f\u8f7dGrove\u63a5\u53e3\u53ef\u4ee5\u4f7f\u60a8\u7684\u7535\u8def\u677f\u8f7b\u677e\u8fde\u63a5\u5230Grove\u6a21\u5757\u3002 \u60f3\u8981\u505a\u4e00\u4e9b\u5f88\u68d2\u7684\u4e1c\u897f\uff0c\u53ea\u9700\u8981\u4e00\u4e2aSeeeduino v4.2\uff0c\u4e00\u4e9bGroves\u5c31\u591f\u4e86\u3002\n\n\n\n\n\u7248\u672c\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u4e0a\u5e02\u65e5\u671f\n\n\n\u8d2d\u4e70\u9014\u5f84\n\n\n\n\n\n\n\n\n\n\nSeeeduino V4.0\n\n\n2014\u5e748\u670815\u65e5\n\n\n\u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nSeeeduino V4.2\n\n\n2015\u5e748\u670825\u65e5\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\nSeeeduino V4.2\u7684\u65b0\u7279\u6027\n\n\nV4.0 \u5230 V4.2 \u6709\u5f88\u591a\u5347\u7ea7\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a\n\n\n\n\n\u91cd\u65b0\u8bbe\u8ba1\u4e86DC-DC\u6a21\u5757\u4f7f\u5f00\u53d1\u677f\u7684\u8fd0\u884c\u66f4\u52a0\u7a33\u5b9a\n\n\n\u52a0\u5165\u4e86\u4e00\u4e2aI2C Grove \u8fde\u63a5\u5668\n\n\n\u53bb\u9664\u4e86\u5f00\u53d1\u677f\u9876\u9762\u5de6\u4e0a\u89d2\u90e8\u5206\u710a\u76d8.\n\n\n\u5c06USB\u63a5\u53e3\u653e\u5728\u4e86\u677f\u5b50\u4e2d\u90e8\n\n\n\u91cd\u65b0\u8c03\u6574\u4e86\u7248\u9762\u5e03\u5c40\u4f7f\u5f00\u53d1\u677f\u66f4\u52a0\u7f8e\u89c2\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\nDIY\n\n\n\u7269\u8054\u7f51\u667a\u80fd\u5bb6\u5c45\n\n\n\u673a\u5668\u4eba\n\n\n\u7814\u4e60\n\n\n\n\n\u4e0b\u9762\u662f\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\u53ef\u4ee5\u4f9b\u60a8\u53c2\u8003\n\n\n\n\n\n\n\n\nPaper Man\n\n\nFingerprint Lock\n\n\nMonitor Stand\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake it Now\n\n\nMake it Now\n\n\nMake it Now\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDesk Promo\n\n\nTiger Machine\n\n\nColorful Pyramid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake it Now\n\n\nMake it Now\n\n\nMake it Now\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u548cArduino UNO\u5b8c\u5168\u517c\u5bb9\n\n\nATmega328 \u5fae\u5904\u7406\u5668\n\n\n14 \u4e2a\u6570\u5b57 I/O \u5f15\u811a (6 \u8def PWM \u8f93\u51fa)\n\n\n6 \u4e2a\u6a21\u62df\u8f93\u5165\n\n\nISP \u63a5\u5934\n\n\nArduino UNO-R3 \u6269\u5c55\u677f\u517c\u5bb9\n\n\nMicro USB \u7f16\u7a0b\u4f9b\u7535\n\n\n\u677f\u8f7dGrove \u8fde\u63a5\u5934\n\n\n\u53ef\u90093.3V \u6216\u80055V \u7cfb\u7edf\u7535\u538b\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nDC Jack\u8f93\u5165\u7535\u538b\n\n\n7-12V\n\n\n\n\n\n\n5V \u5f15\u811a\n\n\n\u4f7f\u7528 Micro USB   \u4f9b\u7535\u6700\u5927500mA\n\n\n\n\n\n\n5V \u5f15\u811a\n\n\n\u4f7f\u7528 DC Jack \u4f9b\u7535\u6700\u5927 2000mA\n\n\n\n\n\n\n3V3 \u5f15\u811a\n\n\n\u6700\u5927500mA\n\n\n\n\n\n\nI/O \u7ba1\u811a\u76f4\u6d41\u4f9b\u7535\n\n\n40mA\n\n\n\n\n\n\n\u95ea\u5b58\n\n\n32 KB\n\n\n\n\n\n\nRAM\n\n\n2 KB\n\n\n\n\n\n\nEEPROM\n\n\n1 KB\n\n\n\n\n\n\n\u65f6\u949f\u9891\u7387\n\n\n16 MHz\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n68.6mm x 53.4mm\n\n\n\n\n\n\n\u91cd\u91cf\n\n\n26g\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\nNote\n\n\n\u672c\u7ae0\u8282\u57fa\u4e8eSeeeduino V4.2\n\n\n\n\n\u4e0b\u56fe\u663e\u793a\u4e86Seeeduino v4.2\u786c\u4ef6\u529f\u80fd\u7684\u6982\u8ff0\u3002 Seeeduino v4.2\u7684\u5404\u79cd\u5f15\u811a\u548c\u5f15\u811a\u529f\u80fd\u5982\u5f15\u811a\u56fe\u6240\u793a\uff0c \u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5feb\u901f\u53c2\u8003\u3002\n\n\n\n\n\n\nLED-D13\n\nLED\u8fde\u63a5\u5230\u7535\u8def\u677f\u7684D13\u5f15\u811a\u3002 \u8fd9\u4e2a\u7b49\u53ef\u4ee5\u4f5c\u4e3a\u4f5c\u7a0b\u5e8f\u7684\u677f\u8f7dLED\u6307\u793a\u706f\u3002\n\n\nUSB Input\n\nUSB\u7aef\u53e3\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230PC\u8fdb\u884c\u7f16\u7a0b\u548c\u4e0a\u7535\u3002 Micro USB\u662f\u5927\u591a\u6570Android\u624b\u673a\u548c\u5176\u4ed6\u8bbe\u5907\u4e2d\u666e\u904d\u5b58\u5728\u7684USB\u63a5\u53e3\u3002 \u5728\u4f60\u7684\u5468\u56f4\u53ef\u80fd\u6709\u51e0\u5341\u6839\u8fd9\u6837\u7684\u7535\u7f06\u3002\n\n\nRX/TX Indicator\n\nTX \u548c RX LED \u6307\u793a\u706f\u8fde\u63a5\u5230USB\u8f6cUART\u82af\u7247\u7684TX\u548cRX\u5f15\u811a\u3002 \u4ed6\u4eec\u4f1a\u81ea\u52a8\u5de5\u4f5c\uff0c\u5f53\u6709\u6570\u636e\u53d1\u9001\u6216\u8005\u63a5\u6536\u65f6\u6307\u793a\u5de5\u4f5c\u72b6\u6001\n\n\nSystem Power Switch\n\n\u6ed1\u52a8\u5f00\u5173\u7528\u4e8e\u5c06\u7535\u8def\u677f\u7684\u903b\u8f91\u7535\u5e73\u548c\u5de5\u4f5c\u7535\u538b\u6539\u4e3a5V\u62163.3V\u3002 \u5982\u4eca\uff0c\u8bb8\u591a\u65b0\u7684\u548c\u597d\u7528\u7684\u4f20\u611f\u5668\u90fd\u88ab\u8bbe\u8ba1\u6210\u53ea\u80fd\u4f7f\u75283.3V\u7535\u538b\uff0c\u5176\u4ed6Arduino\u5f00\u53d1\u677f\u9700\u8981\u5728\u5f00\u53d1\u677f\u548c\u8fd9\u4e9b\u4f20\u611f\u5668\u4e4b\u95f4\u653e\u7f6e\u4e00\u4e2a\u903b\u8f91\u7535\u5e73\u8f6c\u6362\u5668\u3002 \u4f7f\u7528Seeeduino V4.2\uff0c\u60a8\u53ea\u9700\u6ed1\u52a8\u5f00\u5173\u5373\u53ef\uff01\n\n\nDC Input\n\n\u76f4\u6d41\u7535\u6e90\u63d2\u5b54\u5141\u8bb8\u60a8\u7684Seeeduino\u677f\u901a\u8fc7USB typeA \u9002\u914d\u5668\u4f9b\u7535\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u4e3a\u9879\u76ee\u63d0\u4f9b\u66f4\u591a\u7684\u7535\u529b\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u76f4\u6d41\u7535\u673a\u6216\u5176\u4ed6\u5927\u529f\u7387\u5668\u4ef6\u65f6\uff0c\u76f4\u6d41\u8f93\u5165\u53ef\u4ee5\u4e3a7V-15V\u3002\n\n\nReset\n\n\u590d\u4f4d\u6309\u94ae\u65b9\u4fbf\u5730\u653e\u7f6e\u5728\u4fa7\u9762\uff0c\u4ee5\u4fbf\u5373\u4f7f\u5c06\u6269\u5c55\u677f\u653e\u7f6e\u5728\u9876\u90e8\u4e5f\u53ef\u4ee5\u91cd\u7f6eSeeeduino\u677f\u3002 \u5728\u5176\u4ed6Arduino\u677f\u4e0a\u5e76\u4e0d\u662f\u8fd9\u6837\uff0c\u6309\u94ae\u653e\u7f6e\u5728\u9876\u90e8\uff0c\u5f88\u96be\u62e8\u52a8\u3002\n\n\nPower Pins \n Analog Pins\n\n\u6b63\u5982\u5f15\u51fa\u7684\u6570\u5b57\u5f15\u811a\u63d2\u5ea7\u4e00\u6837\uff0c\u6211\u4eec\u8003\u8651\u5230\u60a8\u5728\u8fdb\u884c\u81ea\u5df1\u7684\u9879\u76ee\u65f6\u53ef\u80fd\u9700\u8981\u7528\u5230\u989d\u5916\u7684\u76f8\u5173\u5f15\u811a\u3002\u7279\u522b\u662f\u5982\u679c\u60a8\u60f3\u8981\u5728\u4e0d\u4f7f\u7528\u9762\u5305\u677f\u7684\u60c5\u51b5\u4e0b\u4e3a\u591a\u4e2a\u4f20\u611f\u5668/\u8bbe\u5907\u4f9b\u7535\uff0c\u5219\u9700\u8981\u901a\u8fc7Power Pins\u5f15\u7ebf\u51fa\u53bb\u3002\n\n\nGrove Connectors\n\nSeeedStudio\u5177\u6709\u53ef\u4ee5\u4f7f\u7528I2C\u6216UART\u8fde\u63a5\u5668\u7684\u5404\u79cd\u4f20\u611f\u5668/\u8bbe\u5907\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u9500\u552e\u72ec\u7acb\u7684Grove\u8fde\u63a5\u5668\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5236\u4f5c\u81ea\u5df1\u7684\u4f20\u611f\u5668\u8fde\u63a5\u3002 \u5982\u679c\u8981\u4f7f\u7528\u8fd9\u4e9b\u5f15\u811a\uff0c\u5219I2C Grove\u8fde\u63a5\u5668\u5206\u522b\u8fde\u63a5\u5230SDA\u548cSCL\u7684\u6a21\u62df\u5f15\u811aA4\u548cA5\u3002 UART Grove\u8fde\u63a5\u5668\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a0\u548c1\uff0c\u7528\u4e8eRX\u548cTX\u3002\n\n\nICSP\n\n\u8fd9\u662fATmega328P\u7684ICSP/ISP\u5f15\u811a\uff0c\u5bf9\u4e8eArduino Uno, Due, Mega, \u548c Leonardo\u4ee5\u53ca\u548c\u5b83\u4eec\u517c\u5bb9\u7684\u5f00\u53d1\u677f\u6765\u8bf4\uff0c\u8be5\u5f15\u811a\u90fd\u4f4d\u4e8e\u76f8\u540c\u7684\u6807\u51c6\u4f4d\u7f6e\u3002\u6b64\u5904\u7684SPI\u5f15\u811aMISO,SCK,MOSI\u540c\u65f6\u4e5f\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a12,13,11\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u548cArduino Uno\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002\n\n\nUSB 2 Uart\n\nUSB\u8f6c\u4e32\u53e3\u7684\u5f15\u811a\u5206\u914d. \u8fd9\u4e9b\u710a\u76d8\u53ef\u4ee5\u7528\u4e8e\u901a\u8fc7\u5c06\u677f\u8f7dATmega328\u7f6e\u4e8e\u590d\u4f4d\u6a21\u5f0f\u4e0e\u5176\u4ed6UART\u5668\u4ef6\u8fdb\u884c\u4ea4\u4e92\u3002 \u8fd9\u4f7f\u5f97Seeeduino V4.2\u53ef\u4ee5\u7528\u4f5c\u4e3aUSB\u8f6cUART\u5b9e\u7528\u677f\u3002\n\n\nAdditional 0.1\" Grid aligned header Pads\n\n\u6709\u65f6\uff0c\u76f4\u63a5\u5c06\u4f20\u611f\u5668/\u8bbe\u5907\u8fde\u63a5\u5230\u7535\u8def\u677f\u800c\u4e0d\u662f\u901a\u8fc7\u9762\u5305\u677f\u8fdb\u884c\u8fde\u63a5\u662f\u975e\u5e38\u65b9\u4fbf\u7684\uff0c\u6216\u8005\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u5b8c\u6210\u9879\u76ee\u540e\u5c06\u4f20\u611f\u5668\u76f4\u63a5\u710a\u63a5\u5230\u7535\u8def\u677f\uff0c\u6216\u8005\u4e5f\u8bb8\u60a8\u60f3\u8981\u5728\u8bbe\u5907\u5360\u7528\u8f93\u51fa\u5f15\u811a\u7684\u540c\u65f6\u76d1\u6d4b\u5f15\u811a... \u4e3a\u4e86\u6ee1\u8db3\u4ee5\u4e0a\u9700\u6c42\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u8fd9\u4e9b\u989d\u5916\u7684\u8fc7\u5b54\u710a\u76d8\u4ee5\u5e2e\u52a9\u60a8\u3002 \u8fd9\u4e9b\u710a\u76d8\u4ee50.1\u201c\u683c\u6805\u6392\u5217\uff0c\u53ef\u65b9\u4fbf\u5730\u4e0e\u901a\u7528\u70b9\u9635PCB\u914d\u5408\u4f7f\u7528\u3002\n\n\n\n\n\n\nWarning\n\n\n\u5f53\u60a8\u5728\u63d2\u62d4micro USB\u7684\u65f6\u5019\u8bf7\u60a8\u6ce8\u610f\u4e0d\u8981\u7528\u529b\u8fc7\u731b\uff0c\u5426\u5219\u60a8\u53ef\u80fd\u4f1a\u4f24\u5bb3\u5b83.\n\n\n\n\n\u5b89\u88c5\u9a71\u52a8\n\n\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907:\n\n\n\n\n\n\n\u51c6\u5907\u4e00\u6761Micro-USB \u7ebf\u7f06\n\n\n\n\n\u9996\u5148\u60a8\u9700\u8981\u51c6\u5907\u4e00\u6761Micro-USB\u6570\u636e\u7ebf\uff0c\u901a\u7528\u7684\u5b89\u5353\u6570\u636e\u7ebf\u5c31\u597d\u3002\u5982\u679c\u60a8\u627e\u4e0d\u5230\u5408\u9002\u7684\u7ebf\u7f06\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u8fd9\u91cc\u8d2d\u4e70\u3002 \n\u70b9\u6211\u8d2d\u4e70\u54df\n.\n\n\n\n\n\n\n\n\n\u8fde\u63a5\u5230\u5f00\u53d1\u677f\n\n\n\n\nSeeeduino V4.2 \u53ef\u4ee5\u901a\u8fc7USB\u548c\u5916\u90e8\u4f9b\u7535\u63a5\u53e3\u4f9b\u7535\uff0c\u5f53\u4f7f\u7528USB\u6570\u636e\u7ebf\u8fde\u63a5\u5f00\u53d1\u677f\u540e\uff0c\u7eff\u8272\u7684\u7535\u6e90\u6307\u793a\u706f\uff08\u6807\u6ce8\u4e3aPWR\uff09\u5c06\u4f1a\u70b9\u4eae\u3002\n\n\n\n\n\n\n\n\nWindows\u7cfb\u7edf\n\n\n\n\nNote\n\n\n\u8fd9\u4e2a\u9a71\u52a8\u9002\u7528\u4e8e Windows XP, Windows Vista, Windows 7, Windows 8/8.1 \u548c Windows 10.\n\n\n\n\n\n\n\n\n\u63d2\u5165\u60a8\u7684\u7535\u8def\u677f\uff0c\u7b49\u5f85Windows\u5f00\u59cb\u5176\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u8fc7\u7a0b\u3002 \u8fc7\u4e86\u4e00\u4f1a\u513f\uff0c\u5c3d\u7ba1\u7a0b\u5e8f\u5df2\u7ecf\u5f88\u52aa\u529b\u4e86\uff0c\u53ef\u80fd\u8fd8\u662f\u4f1a\u63d0\u793a\u60a8\u5b89\u88c5\u5931\u8d25\u3002\n\n\n\u4e0d\u8981\u7070\u5fc3\uff0c\u70b9\u51fbWindows\u7684\u5f00\u59cb\u5065\uff0c\u7136\u540e\u6253\u5f00\u63a7\u5236\u9762\u677f\u3002\n\n\n\u5728\u63a7\u5236\u9762\u677f\u4e2d\uff0c\u9009\u4e2d\u7cfb\u7edf\u548c\u5b89\u5168\u3002 \u63a5\u4e0b\u6765\uff0c\u70b9\u51fb\u7cfb\u7edf\u3002 \u7cfb\u7edf\u7a97\u53e3\u6253\u5f00\u540e\uff0c\u6253\u5f00**\u8bbe\u5907\u7ba1\u7406\u5668**\u3002\n\n\n\u67e5\u770b\u7aef\u53e3\uff08COM\uff06LPT\uff09\u3002 \u4f60\u5e94\u8be5\u627e\u5230\u4e00\u4e2a\u540d\u4e3a\u201cSeeeduino v4.2\u201d\u7684\u5f00\u653e\u7aef\u53e3\u3002 \u5982\u679c\u6ca1\u6709COM\uff06LPT\u90e8\u5206\uff0c\u8bf7\u67e5\u770b\u201c\u5176\u4ed6\u8bbe\u5907\u201d\u4e2d\u7684\u201c\u672a\u77e5\u8bbe\u5907\u201d\u3002\n\n\n\u53f3\u952e\u70b9\u51fb\"Seeeduino v4\" \u7aef\u53e3\u9009\u62e9 \"Update Driver Software\" \u9009\u9879\u3002\n\n\n\u7136\u540e, \u9009\u62e9 \"\u6d4f\u89c8\u6211\u7684\u7535\u8111\u4ee5\u5b89\u88c5\u9a71\u52a8\" \u9009\u9879\u3002\n\n\n\u6700\u540e\uff0c\u627e\u5230\u60a8\u521a\u521a\u4e0b\u8f7d\u7684\u540d\u4e3a\"seeed_usb_serial.inf\"\u7684\u9a71\u52a8\n\n\nWindows \u5c06\u81ea\u52a8\u5b89\u88c5\u9a71\u52a8\u3002\n\n\n\n\nMac OSX\n\n\n\u60a8\u4e0d\u9700\u8981\u5b89\u88c5\u4efb\u4f55\u9a71\u52a8.\n\n\n\u5165\u95e8\u6307\u5357\n\n\n\n\nNote\n\n\n\u8fd9\u90e8\u5206\u57fa\u4e8eArduino 1.6.9\uff0c\u8fd0\u884c\u5728 Windows 10\u4e0b.\n\n\n\n\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u5b89\u88c5Arduino \u8f6f\u4ef6\u3002\n\n\n\n\n\n\nNote\n\n\n\u5982\u679cArduino \u8f6f\u4ef6\u9ed8\u8ba4\u662f\u4e0d\u540c\u7684\u8bed\u8a00\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u5b66\u4e60\u8bbe\u7f6e\u8bed\u8a00\u3002\n \n\u70b9\u51fb\u8fd9\u91cc\u8bbe\u7f6e\u5566\n\n\n\n\n\u6253\u5f00\u540d\u4e3aBlink \u7684\u4f8b\u7a0b\n\n\n\u6253\u5f00Blink \u4f8b\u7a0b: \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n01.Basics \n Blink\n.\n\n\n\n\n\u6dfb\u52a0Seeeduino \u5230 \u60a8\u7684Arduino IDE\n\n\nArduino IDE \u4e2d\u6ca1\u6709\u9ed8\u8ba4\u5305\u62ec \nSeeeduino V4.2\n \u7684\u677f\u5361, \u70b9\u51fb\u67e5\u770b \n\u600e\u6837\u5c06seeeduio\u677f\u5361\u52a0\u8f7d\u5230Arduino IDE\n \u3002\n\n\n\u9009\u62e9\u60a8\u7684\u677f\u5361\n\n\n\u60a8\u9700\u8981\u4ece\u8fd9\u91cc\u9009 \nTools\uff08\u5de5\u5177\uff09 \n Board\uff08\u5f00\u53d1\u677f\uff09\n \u5728\u83dc\u5355\u4e2d\u9009\u62e9\u548c\u60a8\u7684\u5f00\u53d1\u677f\u5bf9\u5e94\u7684\u9009\u9879\u3002\u672c\u4f8b\u7a0b\u4e2d**Seeeduino V4**.\n\u5bf9\u5e94\u7684\u5e94\u8be5\u9009\u62e9 \nArduino V4\n \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n\n\nSelect your serial port\n\n\nSelect the serial device of the Arduino board from the Tools | Serial Port menu. This is likely to be COM3 or higher (\nCOM1\n and \nCOM2\n are usually reserved for hardware serial ports). To find out, you can disconnect your Arduino board and re-open the menu; the entry that disappears should be the Arduino board. Reconnect the board and select that serial port.\n\n\n\n\n\n\nNote\n\n\nOn the Mac, this should be something with \n/dev/tty.USBmodem\n.\n\n\n\n\nUpload the program\n\n\nNow, simply click the \"Upload\" button in the environment. Wait a few seconds - you should see the RX and TX LED indicators on the board flashing. If the upload is successful, the message \"Done uploading.\" will appear in the status bar.\n\n\n\n\nA few seconds after the upload finishes, you should see the pin 13 (L) LED on the board start to blink (in orange). If it does, congratulations! You've gotten Arduino up-and-running. If you have problems, please see the troubleshooting suggestions.\n\n\n\n\nGetting Started on Linux\n\n\nFor using on Linux, please go to \nInstalling Arduino on Linux\n\n\nResources\n\n\n\n\n\n\nSchematic\n\n\n\n\nSeeeduino V4.2 in EAGLE file\n\n\nSeeeduino V4.2 in PDF\n\n\nSeeeduino V4.0 in EAGLE file\n\n\nSeeeduino V4.0 in PDF\n\n\n\n\n\n\n\n\nDatasheet\n\n\n\n\nATmega328P\n\n\nATmega16U2\n\n\n\n\n\n\n\n\nDownload above all\n\n\n\n\n\n\nReferences\n\n\n\n\nGetting Started with Arduino\n\n\nArduino Language Reference\n\n\nDownload the Arduino Software(IDE)\n\n\nArduino FAQ\n\n\nArduino Introduction\n\n\nWikipedia page for Arduino\n\n\nHow to fit RF Explorer 3G+ IoT modules on Seeeduino\n\n\n\n\n\n\n\n\nFAQ\n\n\nQ1. What's the difference between Arduino UNO and Seeeduino V4\n\n\nSeeeduino V4 is fully compatible with Arduino UNO. The mainly difference list below:\n\n\n\n\nUse a micro USB to power and program the board\n\n\n3 on-board Grove connector\n\n\n3.\nV system power switch\n\n\nDCDC circuit instead of LDO, more efficiency\n\n\nOthers circuit improve\n\n\n\n\nQ2. I can't upload my sketch to Seeeduino V4\n\n\nPlease check,\n\n\n\n\nIf the Power LED on\n\n\nIf you choose the right Port and Board (Seeeduino V4)\n\n\nClose and reopen Arduino IDE and try again\n\n\n\n\nQ3. Where can I find technical support if I have some other issue.\n\n\nYou can post a question to \nSeeed Forum\n or send an email to \n.", 
            "title": "Seeeduino v4.2"
        }, 
        {
            "location": "/Seeeduino_v4.2/#_1", 
            "text": "\u7248\u672c  \u4e0a\u5e02\u65e5\u671f  \u8d2d\u4e70\u9014\u5f84      Seeeduino V4.0  2014\u5e748\u670815\u65e5  \u4e0d\u518d\u9500\u552e    Seeeduino V4.2  2015\u5e748\u670825\u65e5  \u70b9\u51fb\u8d2d\u4e70", 
            "title": "\u7248\u672c"
        }, 
        {
            "location": "/Seeeduino_v4.2/#seeeduino-v42", 
            "text": "V4.0 \u5230 V4.2 \u6709\u5f88\u591a\u5347\u7ea7\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a   \u91cd\u65b0\u8bbe\u8ba1\u4e86DC-DC\u6a21\u5757\u4f7f\u5f00\u53d1\u677f\u7684\u8fd0\u884c\u66f4\u52a0\u7a33\u5b9a  \u52a0\u5165\u4e86\u4e00\u4e2aI2C Grove \u8fde\u63a5\u5668  \u53bb\u9664\u4e86\u5f00\u53d1\u677f\u9876\u9762\u5de6\u4e0a\u89d2\u90e8\u5206\u710a\u76d8.  \u5c06USB\u63a5\u53e3\u653e\u5728\u4e86\u677f\u5b50\u4e2d\u90e8  \u91cd\u65b0\u8c03\u6574\u4e86\u7248\u9762\u5e03\u5c40\u4f7f\u5f00\u53d1\u677f\u66f4\u52a0\u7f8e\u89c2", 
            "title": "Seeeduino V4.2\u7684\u65b0\u7279\u6027"
        }, 
        {
            "location": "/Seeeduino_v4.2/#_2", 
            "text": "DIY  \u7269\u8054\u7f51\u667a\u80fd\u5bb6\u5c45  \u673a\u5668\u4eba  \u7814\u4e60   \u4e0b\u9762\u662f\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\u53ef\u4ee5\u4f9b\u60a8\u53c2\u8003     Paper Man  Fingerprint Lock  Monitor Stand           Make it Now  Make it Now  Make it Now        Desk Promo  Tiger Machine  Colorful Pyramid           Make it Now  Make it Now  Make it Now", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Seeeduino_v4.2/#_3", 
            "text": "\u548cArduino UNO\u5b8c\u5168\u517c\u5bb9  ATmega328 \u5fae\u5904\u7406\u5668  14 \u4e2a\u6570\u5b57 I/O \u5f15\u811a (6 \u8def PWM \u8f93\u51fa)  6 \u4e2a\u6a21\u62df\u8f93\u5165  ISP \u63a5\u5934  Arduino UNO-R3 \u6269\u5c55\u677f\u517c\u5bb9  Micro USB \u7f16\u7a0b\u4f9b\u7535  \u677f\u8f7dGrove \u8fde\u63a5\u5934  \u53ef\u90093.3V \u6216\u80055V \u7cfb\u7edf\u7535\u538b", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Seeeduino_v4.2/#_4", 
            "text": "\u9879\u76ee  \u503c      DC Jack\u8f93\u5165\u7535\u538b  7-12V    5V \u5f15\u811a  \u4f7f\u7528 Micro USB   \u4f9b\u7535\u6700\u5927500mA    5V \u5f15\u811a  \u4f7f\u7528 DC Jack \u4f9b\u7535\u6700\u5927 2000mA    3V3 \u5f15\u811a  \u6700\u5927500mA    I/O \u7ba1\u811a\u76f4\u6d41\u4f9b\u7535  40mA    \u95ea\u5b58  32 KB    RAM  2 KB    EEPROM  1 KB    \u65f6\u949f\u9891\u7387  16 MHz    \u5c3a\u5bf8  68.6mm x 53.4mm    \u91cd\u91cf  26g", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Seeeduino_v4.2/#_5", 
            "text": "Note  \u672c\u7ae0\u8282\u57fa\u4e8eSeeeduino V4.2   \u4e0b\u56fe\u663e\u793a\u4e86Seeeduino v4.2\u786c\u4ef6\u529f\u80fd\u7684\u6982\u8ff0\u3002 Seeeduino v4.2\u7684\u5404\u79cd\u5f15\u811a\u548c\u5f15\u811a\u529f\u80fd\u5982\u5f15\u811a\u56fe\u6240\u793a\uff0c \u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5feb\u901f\u53c2\u8003\u3002    LED-D13 \nLED\u8fde\u63a5\u5230\u7535\u8def\u677f\u7684D13\u5f15\u811a\u3002 \u8fd9\u4e2a\u7b49\u53ef\u4ee5\u4f5c\u4e3a\u4f5c\u7a0b\u5e8f\u7684\u677f\u8f7dLED\u6307\u793a\u706f\u3002  USB Input \nUSB\u7aef\u53e3\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230PC\u8fdb\u884c\u7f16\u7a0b\u548c\u4e0a\u7535\u3002 Micro USB\u662f\u5927\u591a\u6570Android\u624b\u673a\u548c\u5176\u4ed6\u8bbe\u5907\u4e2d\u666e\u904d\u5b58\u5728\u7684USB\u63a5\u53e3\u3002 \u5728\u4f60\u7684\u5468\u56f4\u53ef\u80fd\u6709\u51e0\u5341\u6839\u8fd9\u6837\u7684\u7535\u7f06\u3002  RX/TX Indicator \nTX \u548c RX LED \u6307\u793a\u706f\u8fde\u63a5\u5230USB\u8f6cUART\u82af\u7247\u7684TX\u548cRX\u5f15\u811a\u3002 \u4ed6\u4eec\u4f1a\u81ea\u52a8\u5de5\u4f5c\uff0c\u5f53\u6709\u6570\u636e\u53d1\u9001\u6216\u8005\u63a5\u6536\u65f6\u6307\u793a\u5de5\u4f5c\u72b6\u6001  System Power Switch \n\u6ed1\u52a8\u5f00\u5173\u7528\u4e8e\u5c06\u7535\u8def\u677f\u7684\u903b\u8f91\u7535\u5e73\u548c\u5de5\u4f5c\u7535\u538b\u6539\u4e3a5V\u62163.3V\u3002 \u5982\u4eca\uff0c\u8bb8\u591a\u65b0\u7684\u548c\u597d\u7528\u7684\u4f20\u611f\u5668\u90fd\u88ab\u8bbe\u8ba1\u6210\u53ea\u80fd\u4f7f\u75283.3V\u7535\u538b\uff0c\u5176\u4ed6Arduino\u5f00\u53d1\u677f\u9700\u8981\u5728\u5f00\u53d1\u677f\u548c\u8fd9\u4e9b\u4f20\u611f\u5668\u4e4b\u95f4\u653e\u7f6e\u4e00\u4e2a\u903b\u8f91\u7535\u5e73\u8f6c\u6362\u5668\u3002 \u4f7f\u7528Seeeduino V4.2\uff0c\u60a8\u53ea\u9700\u6ed1\u52a8\u5f00\u5173\u5373\u53ef\uff01  DC Input \n\u76f4\u6d41\u7535\u6e90\u63d2\u5b54\u5141\u8bb8\u60a8\u7684Seeeduino\u677f\u901a\u8fc7USB typeA \u9002\u914d\u5668\u4f9b\u7535\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u4e3a\u9879\u76ee\u63d0\u4f9b\u66f4\u591a\u7684\u7535\u529b\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u76f4\u6d41\u7535\u673a\u6216\u5176\u4ed6\u5927\u529f\u7387\u5668\u4ef6\u65f6\uff0c\u76f4\u6d41\u8f93\u5165\u53ef\u4ee5\u4e3a7V-15V\u3002  Reset \n\u590d\u4f4d\u6309\u94ae\u65b9\u4fbf\u5730\u653e\u7f6e\u5728\u4fa7\u9762\uff0c\u4ee5\u4fbf\u5373\u4f7f\u5c06\u6269\u5c55\u677f\u653e\u7f6e\u5728\u9876\u90e8\u4e5f\u53ef\u4ee5\u91cd\u7f6eSeeeduino\u677f\u3002 \u5728\u5176\u4ed6Arduino\u677f\u4e0a\u5e76\u4e0d\u662f\u8fd9\u6837\uff0c\u6309\u94ae\u653e\u7f6e\u5728\u9876\u90e8\uff0c\u5f88\u96be\u62e8\u52a8\u3002  Power Pins   Analog Pins \n\u6b63\u5982\u5f15\u51fa\u7684\u6570\u5b57\u5f15\u811a\u63d2\u5ea7\u4e00\u6837\uff0c\u6211\u4eec\u8003\u8651\u5230\u60a8\u5728\u8fdb\u884c\u81ea\u5df1\u7684\u9879\u76ee\u65f6\u53ef\u80fd\u9700\u8981\u7528\u5230\u989d\u5916\u7684\u76f8\u5173\u5f15\u811a\u3002\u7279\u522b\u662f\u5982\u679c\u60a8\u60f3\u8981\u5728\u4e0d\u4f7f\u7528\u9762\u5305\u677f\u7684\u60c5\u51b5\u4e0b\u4e3a\u591a\u4e2a\u4f20\u611f\u5668/\u8bbe\u5907\u4f9b\u7535\uff0c\u5219\u9700\u8981\u901a\u8fc7Power Pins\u5f15\u7ebf\u51fa\u53bb\u3002  Grove Connectors \nSeeedStudio\u5177\u6709\u53ef\u4ee5\u4f7f\u7528I2C\u6216UART\u8fde\u63a5\u5668\u7684\u5404\u79cd\u4f20\u611f\u5668/\u8bbe\u5907\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u9500\u552e\u72ec\u7acb\u7684Grove\u8fde\u63a5\u5668\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5236\u4f5c\u81ea\u5df1\u7684\u4f20\u611f\u5668\u8fde\u63a5\u3002 \u5982\u679c\u8981\u4f7f\u7528\u8fd9\u4e9b\u5f15\u811a\uff0c\u5219I2C Grove\u8fde\u63a5\u5668\u5206\u522b\u8fde\u63a5\u5230SDA\u548cSCL\u7684\u6a21\u62df\u5f15\u811aA4\u548cA5\u3002 UART Grove\u8fde\u63a5\u5668\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a0\u548c1\uff0c\u7528\u4e8eRX\u548cTX\u3002  ICSP \n\u8fd9\u662fATmega328P\u7684ICSP/ISP\u5f15\u811a\uff0c\u5bf9\u4e8eArduino Uno, Due, Mega, \u548c Leonardo\u4ee5\u53ca\u548c\u5b83\u4eec\u517c\u5bb9\u7684\u5f00\u53d1\u677f\u6765\u8bf4\uff0c\u8be5\u5f15\u811a\u90fd\u4f4d\u4e8e\u76f8\u540c\u7684\u6807\u51c6\u4f4d\u7f6e\u3002\u6b64\u5904\u7684SPI\u5f15\u811aMISO,SCK,MOSI\u540c\u65f6\u4e5f\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a12,13,11\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u548cArduino Uno\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002  USB 2 Uart \nUSB\u8f6c\u4e32\u53e3\u7684\u5f15\u811a\u5206\u914d. \u8fd9\u4e9b\u710a\u76d8\u53ef\u4ee5\u7528\u4e8e\u901a\u8fc7\u5c06\u677f\u8f7dATmega328\u7f6e\u4e8e\u590d\u4f4d\u6a21\u5f0f\u4e0e\u5176\u4ed6UART\u5668\u4ef6\u8fdb\u884c\u4ea4\u4e92\u3002 \u8fd9\u4f7f\u5f97Seeeduino V4.2\u53ef\u4ee5\u7528\u4f5c\u4e3aUSB\u8f6cUART\u5b9e\u7528\u677f\u3002  Additional 0.1\" Grid aligned header Pads \n\u6709\u65f6\uff0c\u76f4\u63a5\u5c06\u4f20\u611f\u5668/\u8bbe\u5907\u8fde\u63a5\u5230\u7535\u8def\u677f\u800c\u4e0d\u662f\u901a\u8fc7\u9762\u5305\u677f\u8fdb\u884c\u8fde\u63a5\u662f\u975e\u5e38\u65b9\u4fbf\u7684\uff0c\u6216\u8005\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u5b8c\u6210\u9879\u76ee\u540e\u5c06\u4f20\u611f\u5668\u76f4\u63a5\u710a\u63a5\u5230\u7535\u8def\u677f\uff0c\u6216\u8005\u4e5f\u8bb8\u60a8\u60f3\u8981\u5728\u8bbe\u5907\u5360\u7528\u8f93\u51fa\u5f15\u811a\u7684\u540c\u65f6\u76d1\u6d4b\u5f15\u811a... \u4e3a\u4e86\u6ee1\u8db3\u4ee5\u4e0a\u9700\u6c42\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u8fd9\u4e9b\u989d\u5916\u7684\u8fc7\u5b54\u710a\u76d8\u4ee5\u5e2e\u52a9\u60a8\u3002 \u8fd9\u4e9b\u710a\u76d8\u4ee50.1\u201c\u683c\u6805\u6392\u5217\uff0c\u53ef\u65b9\u4fbf\u5730\u4e0e\u901a\u7528\u70b9\u9635PCB\u914d\u5408\u4f7f\u7528\u3002    Warning  \u5f53\u60a8\u5728\u63d2\u62d4micro USB\u7684\u65f6\u5019\u8bf7\u60a8\u6ce8\u610f\u4e0d\u8981\u7528\u529b\u8fc7\u731b\uff0c\u5426\u5219\u60a8\u53ef\u80fd\u4f1a\u4f24\u5bb3\u5b83.", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Seeeduino_v4.2/#_6", 
            "text": "\u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907:    \u51c6\u5907\u4e00\u6761Micro-USB \u7ebf\u7f06   \u9996\u5148\u60a8\u9700\u8981\u51c6\u5907\u4e00\u6761Micro-USB\u6570\u636e\u7ebf\uff0c\u901a\u7528\u7684\u5b89\u5353\u6570\u636e\u7ebf\u5c31\u597d\u3002\u5982\u679c\u60a8\u627e\u4e0d\u5230\u5408\u9002\u7684\u7ebf\u7f06\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u8fd9\u91cc\u8d2d\u4e70\u3002  \u70b9\u6211\u8d2d\u4e70\u54df .     \u8fde\u63a5\u5230\u5f00\u53d1\u677f   Seeeduino V4.2 \u53ef\u4ee5\u901a\u8fc7USB\u548c\u5916\u90e8\u4f9b\u7535\u63a5\u53e3\u4f9b\u7535\uff0c\u5f53\u4f7f\u7528USB\u6570\u636e\u7ebf\u8fde\u63a5\u5f00\u53d1\u677f\u540e\uff0c\u7eff\u8272\u7684\u7535\u6e90\u6307\u793a\u706f\uff08\u6807\u6ce8\u4e3aPWR\uff09\u5c06\u4f1a\u70b9\u4eae\u3002", 
            "title": "\u5b89\u88c5\u9a71\u52a8"
        }, 
        {
            "location": "/Seeeduino_v4.2/#windows", 
            "text": "Note  \u8fd9\u4e2a\u9a71\u52a8\u9002\u7528\u4e8e Windows XP, Windows Vista, Windows 7, Windows 8/8.1 \u548c Windows 10.     \u63d2\u5165\u60a8\u7684\u7535\u8def\u677f\uff0c\u7b49\u5f85Windows\u5f00\u59cb\u5176\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u8fc7\u7a0b\u3002 \u8fc7\u4e86\u4e00\u4f1a\u513f\uff0c\u5c3d\u7ba1\u7a0b\u5e8f\u5df2\u7ecf\u5f88\u52aa\u529b\u4e86\uff0c\u53ef\u80fd\u8fd8\u662f\u4f1a\u63d0\u793a\u60a8\u5b89\u88c5\u5931\u8d25\u3002  \u4e0d\u8981\u7070\u5fc3\uff0c\u70b9\u51fbWindows\u7684\u5f00\u59cb\u5065\uff0c\u7136\u540e\u6253\u5f00\u63a7\u5236\u9762\u677f\u3002  \u5728\u63a7\u5236\u9762\u677f\u4e2d\uff0c\u9009\u4e2d\u7cfb\u7edf\u548c\u5b89\u5168\u3002 \u63a5\u4e0b\u6765\uff0c\u70b9\u51fb\u7cfb\u7edf\u3002 \u7cfb\u7edf\u7a97\u53e3\u6253\u5f00\u540e\uff0c\u6253\u5f00**\u8bbe\u5907\u7ba1\u7406\u5668**\u3002  \u67e5\u770b\u7aef\u53e3\uff08COM\uff06LPT\uff09\u3002 \u4f60\u5e94\u8be5\u627e\u5230\u4e00\u4e2a\u540d\u4e3a\u201cSeeeduino v4.2\u201d\u7684\u5f00\u653e\u7aef\u53e3\u3002 \u5982\u679c\u6ca1\u6709COM\uff06LPT\u90e8\u5206\uff0c\u8bf7\u67e5\u770b\u201c\u5176\u4ed6\u8bbe\u5907\u201d\u4e2d\u7684\u201c\u672a\u77e5\u8bbe\u5907\u201d\u3002  \u53f3\u952e\u70b9\u51fb\"Seeeduino v4\" \u7aef\u53e3\u9009\u62e9 \"Update Driver Software\" \u9009\u9879\u3002  \u7136\u540e, \u9009\u62e9 \"\u6d4f\u89c8\u6211\u7684\u7535\u8111\u4ee5\u5b89\u88c5\u9a71\u52a8\" \u9009\u9879\u3002  \u6700\u540e\uff0c\u627e\u5230\u60a8\u521a\u521a\u4e0b\u8f7d\u7684\u540d\u4e3a\"seeed_usb_serial.inf\"\u7684\u9a71\u52a8  Windows \u5c06\u81ea\u52a8\u5b89\u88c5\u9a71\u52a8\u3002", 
            "title": "Windows\u7cfb\u7edf"
        }, 
        {
            "location": "/Seeeduino_v4.2/#mac-osx", 
            "text": "\u60a8\u4e0d\u9700\u8981\u5b89\u88c5\u4efb\u4f55\u9a71\u52a8.", 
            "title": "Mac OSX"
        }, 
        {
            "location": "/Seeeduino_v4.2/#_7", 
            "text": "Note  \u8fd9\u90e8\u5206\u57fa\u4e8eArduino 1.6.9\uff0c\u8fd0\u884c\u5728 Windows 10\u4e0b.   \u9996\u5148\uff0c\u60a8\u9700\u8981\u5b89\u88c5Arduino \u8f6f\u4ef6\u3002    Note  \u5982\u679cArduino \u8f6f\u4ef6\u9ed8\u8ba4\u662f\u4e0d\u540c\u7684\u8bed\u8a00\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u5b66\u4e60\u8bbe\u7f6e\u8bed\u8a00\u3002\n  \u70b9\u51fb\u8fd9\u91cc\u8bbe\u7f6e\u5566", 
            "title": "\u5165\u95e8\u6307\u5357"
        }, 
        {
            "location": "/Seeeduino_v4.2/#blink", 
            "text": "\u6253\u5f00Blink \u4f8b\u7a0b:  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09  01.Basics   Blink .", 
            "title": "\u6253\u5f00\u540d\u4e3aBlink \u7684\u4f8b\u7a0b"
        }, 
        {
            "location": "/Seeeduino_v4.2/#seeeduino-arduino-ide", 
            "text": "Arduino IDE \u4e2d\u6ca1\u6709\u9ed8\u8ba4\u5305\u62ec  Seeeduino V4.2  \u7684\u677f\u5361, \u70b9\u51fb\u67e5\u770b  \u600e\u6837\u5c06seeeduio\u677f\u5361\u52a0\u8f7d\u5230Arduino IDE  \u3002", 
            "title": "\u6dfb\u52a0Seeeduino \u5230 \u60a8\u7684Arduino IDE"
        }, 
        {
            "location": "/Seeeduino_v4.2/#_8", 
            "text": "\u60a8\u9700\u8981\u4ece\u8fd9\u91cc\u9009  Tools\uff08\u5de5\u5177\uff09   Board\uff08\u5f00\u53d1\u677f\uff09  \u5728\u83dc\u5355\u4e2d\u9009\u62e9\u548c\u60a8\u7684\u5f00\u53d1\u677f\u5bf9\u5e94\u7684\u9009\u9879\u3002\u672c\u4f8b\u7a0b\u4e2d**Seeeduino V4**.\n\u5bf9\u5e94\u7684\u5e94\u8be5\u9009\u62e9  Arduino V4  \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a", 
            "title": "\u9009\u62e9\u60a8\u7684\u677f\u5361"
        }, 
        {
            "location": "/Seeeduino_v4.2/#select-your-serial-port", 
            "text": "Select the serial device of the Arduino board from the Tools | Serial Port menu. This is likely to be COM3 or higher ( COM1  and  COM2  are usually reserved for hardware serial ports). To find out, you can disconnect your Arduino board and re-open the menu; the entry that disappears should be the Arduino board. Reconnect the board and select that serial port.    Note  On the Mac, this should be something with  /dev/tty.USBmodem .", 
            "title": "Select your serial port"
        }, 
        {
            "location": "/Seeeduino_v4.2/#upload-the-program", 
            "text": "Now, simply click the \"Upload\" button in the environment. Wait a few seconds - you should see the RX and TX LED indicators on the board flashing. If the upload is successful, the message \"Done uploading.\" will appear in the status bar.   A few seconds after the upload finishes, you should see the pin 13 (L) LED on the board start to blink (in orange). If it does, congratulations! You've gotten Arduino up-and-running. If you have problems, please see the troubleshooting suggestions.", 
            "title": "Upload the program"
        }, 
        {
            "location": "/Seeeduino_v4.2/#getting-started-on-linux", 
            "text": "For using on Linux, please go to  Installing Arduino on Linux", 
            "title": "Getting Started on Linux"
        }, 
        {
            "location": "/Seeeduino_v4.2/#resources", 
            "text": "Schematic   Seeeduino V4.2 in EAGLE file  Seeeduino V4.2 in PDF  Seeeduino V4.0 in EAGLE file  Seeeduino V4.0 in PDF     Datasheet   ATmega328P  ATmega16U2     Download above all    References   Getting Started with Arduino  Arduino Language Reference  Download the Arduino Software(IDE)  Arduino FAQ  Arduino Introduction  Wikipedia page for Arduino  How to fit RF Explorer 3G+ IoT modules on Seeeduino", 
            "title": "Resources"
        }, 
        {
            "location": "/Seeeduino_v4.2/#faq", 
            "text": "", 
            "title": "FAQ"
        }, 
        {
            "location": "/Seeeduino_v4.2/#q1-whats-the-difference-between-arduino-uno-and-seeeduino-v4", 
            "text": "Seeeduino V4 is fully compatible with Arduino UNO. The mainly difference list below:   Use a micro USB to power and program the board  3 on-board Grove connector  3. V system power switch  DCDC circuit instead of LDO, more efficiency  Others circuit improve", 
            "title": "Q1. What's the difference between Arduino UNO and Seeeduino V4"
        }, 
        {
            "location": "/Seeeduino_v4.2/#q2-i-cant-upload-my-sketch-to-seeeduino-v4", 
            "text": "Please check,   If the Power LED on  If you choose the right Port and Board (Seeeduino V4)  Close and reopen Arduino IDE and try again", 
            "title": "Q2. I can't upload my sketch to Seeeduino V4"
        }, 
        {
            "location": "/Seeeduino_v4.2/#q3-where-can-i-find-technical-support-if-i-have-some-other-issue", 
            "text": "You can post a question to  Seeed Forum  or send an email to  .", 
            "title": "Q3. Where can I find technical support if I have some other issue."
        }, 
        {
            "location": "/Seeeduino_Lite/", 
            "text": "Seeeduino Lite \u662f\u57fa\u4e8e ATmega32U4 \u5fae\u63a7\u5236\u5668\u7684\u5f00\u53d1\u677f\u3002\u5c31\u50cf Arduino Leonardo \u4e00\u6837\uff0c\u5b83\u65e0\u9700 USB \u8f6c\u4e32\u53e3\u901a\u4fe1\u6240\u9700\u7684\u8f85\u52a9\u5904\u7406\u5668\u3002\u8fd9\u4f7f\u5f97 Seeeduino Lite \u53ef\u4ee5\u4f5c\u4e3a\u8ba1\u7b97\u673a\u4e0a\u7684 USB \u8bbe\u5907\uff0c\u5982\u952e\u76d8\u548c\u9f20\u6807\u3002Seeeduino Lite \u6e90\u81ea Leonardo\uff0c\u6211\u4eec\u8fd8\u5c06 Seeeduino \u7cfb\u5217\u7684\u81ea\u5b9a\u4e49\u7ec6\u8282\u5408\u5e76\u5230 Seeeduino Lite \u4e2d\uff0c\u5982\u53ef\u9009\u5de5\u4f5c\u7535\u538b\uff0c\u677f\u8f7d Grove \u63a5\u53e3\u7b49\u7b49\u3002\u5b83\u6709 20 \u4e2a\u6570\u5b57 I/O\uff08\u5176\u4e2d 7 \u4e2a\u53ef\u8f93\u51faPWM\uff09\uff0c\u4e00\u4e2a Micro USB \u8fde\u63a5\uff0c\u4e00\u4e2a\u7535\u6e90\u63d2\u5b54\uff0c\u4e00\u4e2a ICSP \u63d2\u5934\u548c\u4e00\u4e2a\u590d\u4f4d\u6309\u94ae\u3002\u5b83\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u4f7f\u7528 USB \u7535\u7f06\u5c06\u5176\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\uff0c\u6216\u4f7f\u7528\u5916\u63a5\u7535\u6e90\u5de5\u4f5c\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u5fae\u63a7\u5236\u5668\uff1aATmega32u4\n\n\n\u5de5\u4f5c\u7535\u538b\uff1a5V\n\n\n\u8f93\u5165\u7535\u538b (\u63a8\u8350\u503c)\uff1a7-12V\n\n\n\u8f93\u5165\u7535\u538b (\u6700\u5927\u8303\u56f4)\uff1a6-20V\n\n\n\u6570\u5b57 I/O \u5f15\u811a\uff1a20\n\n\nPWM \u901a\u9053\uff1a7\n\n\n\u6a21\u62df\u8f93\u5165\u901a\u9053\uff1a12\n\n\n\u6bcf\u4e2a I/O \u5f15\u811a\u7684\u76f4\u6d41\u7535\u6d41\uff1a40 mA\n\n\n3.3V \u5f15\u811a\u7684\u76f4\u6d41\u7535\u6d41\uff1a50 mA\n\n\nFlash \u5b58\u50a8\uff1a32 KB (ATmega32u4) \u5176\u4e2d\u6709 4 KB\u7528\u4e8e\u5f15\u5bfc\u88c5\u5728\u7a0b\u5e8f\n\n\nSRAM\uff1a2.5 KB (ATmega32u4)\n\n\nEEPROM\uff1a1 KB (ATmega32u4)\n\n\n\u65f6\u949f\u9891\u7387\uff1a16 MHz\n\n\n\n\n\u63a5\u53e3\n\n\n\n\n\n\nU1:\n 78M05 IC\uff0c\u4e09\u7aef\u7a33\u538b\u5668\u3002\n\n\nU3:\n LD1117 IC\uff0c\u4f4e\u538b\u964d\u7a33\u538b\u5668\uff0c\u80fd\u591f\u63d0\u4f9b\u9ad8\u8fbe 800mA \u7684\u8f93\u51fa\u7535\u6d41\u3002\n\n\nU5:\n Atmega32U4 IC\uff0c\u5177\u6709 32KB \u7684 ISP \u95ea\u5b58\u548c USB \u63a7\u5236\u5668\u76848\u4f4dAVR\u5fae\u63a7\u5236\u5668\u3002\n\n\n\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\n\n\u4ece\u8fd9\u91cc\u4e0b\u8f7d\u9a71\u52a8\u7a0b\u5e8f\uff1a \nhttps://github.com/Seeed-Studio/Signed_USB_Serial_Driver\n.\n\n\n\u4f7f\u7528 Micro-USB \u7ebf\u628a Seeeduino Lite \u8fde\u63a5\u5230\u7535\u8111\u3002\n\n\n\u7b49\u5f85\u53d1\u73b0\u65b0\u786c\u4ef6\u3002\u5982\u679c\u5b89\u88c5\u7a0b\u5e8f\u6ca1\u6709\u81ea\u52a8\u542f\u52a8\uff0c\u8bf7\u6253\u5f00 Windows \u8bbe\u5907\u7ba1\u7406\u5668\u5e76\u627e\u5230 Seeeduino Lite \u8fd9\u4e00\u9879\u3002\n\n\n\n\n\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9\u66f4\u65b0\u9a71\u52a8\u7a0b\u5e8f\u3002 \u5f53\u8981\u6c42\u81ea\u52a8\u641c\u7d22\u6216\u624b\u52a8\u67e5\u627e\u65f6\uff0c\u8bf7\u9009\u62e9\u201c\u6d4f\u89c8\u6211\u7684\u8ba1\u7b97\u673a\u4ee5\u67e5\u627e\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6\u201d\u3002\n\n\n\n\n\u9009\u62e9\u201c\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u641c\u7d22\u9a71\u52a8\u7a0b\u5e8f\uff1a\u201d\uff0c\u7136\u540e\u70b9\u51fb\u4e0b\u65b9\u6587\u672c\u6846\u7684\u201c\u6d4f\u89c8\u201d\u627e\u5230\u60a8\u4e0b\u8f7d\u597d\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u9009\u62e9\u8be5\u6587\u4ef6\u5e76\u70b9\u51fb\u786e\u5b9a\u3002\n\n\n\n\n\n\n\u66ff\u6362 Arduino \u8def\u5f84\u4e2d\u7684\u4e24\u4e2a\u6587\u4ef6\u3002\u6253\u5f00 \nArduino-1.0.1/hardware/arduino/cores/arduino\n \u76ee\u5f55\uff0c\u7528 \n\u65b0\u7684\n USBCore.cpp \u8986\u76d6\u539f\u6765\u7684 \nUSBCore.cpp\n\uff0c\u7136\u540e\u5728\u76ee\u5f55 \nArduino-1.0.1/hardware/arduino\n \u4e0b\u7528 \n\u65b0\u7684 boards.txt\n \u66ff\u6362\u539f\u6765\u7684\u6587\u4ef6\u3002\u6587\u4ef6\u53ef\u5728\u7bc7\u5c3e\u7684 \n\u201c\u8d44\u6e90\u4e0b\u8f7d\u201d\n \u4e2d\u627e\u5230\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u7528\u4f7f\u7528\u5176\u4ed6 Arduino \u677f\u7684\u65b9\u6cd5\u6765\u548c\u4f7f\u7528 seeeduino lite\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\nSeeeduino Lite Eagle File\n.\n\n\n[\u66ff\u6362\u6587\u4ef6]\nnew boards.txt\n.\n\n\n[\u66ff\u6362\u6587\u4ef6]\nnew USBCore.cpp\n.\n\n\n[\u9a71\u52a8\u7a0b\u5e8f]\nLite Driver File\n.", 
            "title": "Seeeduino Lite"
        }, 
        {
            "location": "/Seeeduino_Lite/#_1", 
            "text": "\u5fae\u63a7\u5236\u5668\uff1aATmega32u4  \u5de5\u4f5c\u7535\u538b\uff1a5V  \u8f93\u5165\u7535\u538b (\u63a8\u8350\u503c)\uff1a7-12V  \u8f93\u5165\u7535\u538b (\u6700\u5927\u8303\u56f4)\uff1a6-20V  \u6570\u5b57 I/O \u5f15\u811a\uff1a20  PWM \u901a\u9053\uff1a7  \u6a21\u62df\u8f93\u5165\u901a\u9053\uff1a12  \u6bcf\u4e2a I/O \u5f15\u811a\u7684\u76f4\u6d41\u7535\u6d41\uff1a40 mA  3.3V \u5f15\u811a\u7684\u76f4\u6d41\u7535\u6d41\uff1a50 mA  Flash \u5b58\u50a8\uff1a32 KB (ATmega32u4) \u5176\u4e2d\u6709 4 KB\u7528\u4e8e\u5f15\u5bfc\u88c5\u5728\u7a0b\u5e8f  SRAM\uff1a2.5 KB (ATmega32u4)  EEPROM\uff1a1 KB (ATmega32u4)  \u65f6\u949f\u9891\u7387\uff1a16 MHz", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Seeeduino_Lite/#_2", 
            "text": "U1:  78M05 IC\uff0c\u4e09\u7aef\u7a33\u538b\u5668\u3002  U3:  LD1117 IC\uff0c\u4f4e\u538b\u964d\u7a33\u538b\u5668\uff0c\u80fd\u591f\u63d0\u4f9b\u9ad8\u8fbe 800mA \u7684\u8f93\u51fa\u7535\u6d41\u3002  U5:  Atmega32U4 IC\uff0c\u5177\u6709 32KB \u7684 ISP \u95ea\u5b58\u548c USB \u63a7\u5236\u5668\u76848\u4f4dAVR\u5fae\u63a7\u5236\u5668\u3002", 
            "title": "\u63a5\u53e3"
        }, 
        {
            "location": "/Seeeduino_Lite/#_3", 
            "text": "\u4ece\u8fd9\u91cc\u4e0b\u8f7d\u9a71\u52a8\u7a0b\u5e8f\uff1a  https://github.com/Seeed-Studio/Signed_USB_Serial_Driver .  \u4f7f\u7528 Micro-USB \u7ebf\u628a Seeeduino Lite \u8fde\u63a5\u5230\u7535\u8111\u3002  \u7b49\u5f85\u53d1\u73b0\u65b0\u786c\u4ef6\u3002\u5982\u679c\u5b89\u88c5\u7a0b\u5e8f\u6ca1\u6709\u81ea\u52a8\u542f\u52a8\uff0c\u8bf7\u6253\u5f00 Windows \u8bbe\u5907\u7ba1\u7406\u5668\u5e76\u627e\u5230 Seeeduino Lite \u8fd9\u4e00\u9879\u3002   \u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9\u66f4\u65b0\u9a71\u52a8\u7a0b\u5e8f\u3002 \u5f53\u8981\u6c42\u81ea\u52a8\u641c\u7d22\u6216\u624b\u52a8\u67e5\u627e\u65f6\uff0c\u8bf7\u9009\u62e9\u201c\u6d4f\u89c8\u6211\u7684\u8ba1\u7b97\u673a\u4ee5\u67e5\u627e\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6\u201d\u3002   \u9009\u62e9\u201c\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u641c\u7d22\u9a71\u52a8\u7a0b\u5e8f\uff1a\u201d\uff0c\u7136\u540e\u70b9\u51fb\u4e0b\u65b9\u6587\u672c\u6846\u7684\u201c\u6d4f\u89c8\u201d\u627e\u5230\u60a8\u4e0b\u8f7d\u597d\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u9009\u62e9\u8be5\u6587\u4ef6\u5e76\u70b9\u51fb\u786e\u5b9a\u3002    \u66ff\u6362 Arduino \u8def\u5f84\u4e2d\u7684\u4e24\u4e2a\u6587\u4ef6\u3002\u6253\u5f00  Arduino-1.0.1/hardware/arduino/cores/arduino  \u76ee\u5f55\uff0c\u7528  \u65b0\u7684  USBCore.cpp \u8986\u76d6\u539f\u6765\u7684  USBCore.cpp \uff0c\u7136\u540e\u5728\u76ee\u5f55  Arduino-1.0.1/hardware/arduino  \u4e0b\u7528  \u65b0\u7684 boards.txt  \u66ff\u6362\u539f\u6765\u7684\u6587\u4ef6\u3002\u6587\u4ef6\u53ef\u5728\u7bc7\u5c3e\u7684  \u201c\u8d44\u6e90\u4e0b\u8f7d\u201d  \u4e2d\u627e\u5230\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u7528\u4f7f\u7528\u5176\u4ed6 Arduino \u677f\u7684\u65b9\u6cd5\u6765\u548c\u4f7f\u7528 seeeduino lite\u3002", 
            "title": "\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f"
        }, 
        {
            "location": "/Seeeduino_Lite/#_4", 
            "text": "[Eagle \u6587\u4ef6] Seeeduino Lite Eagle File .  [\u66ff\u6362\u6587\u4ef6] new boards.txt .  [\u66ff\u6362\u6587\u4ef6] new USBCore.cpp .  [\u9a71\u52a8\u7a0b\u5e8f] Lite Driver File .", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Seeeduino_Lotus/", 
            "text": "Seeeduino Lotus \u662f\u4e00\u6b3e ATMEGA328 \u5fae\u63a7\u5236\u5668\u5f00\u53d1\u677f\u3002\u5b83\u662f Seeeduino \u548c Base Shield \u7684\u7ec4\u5408\u3002\u5b83\u4f7f\u7528\u4e86 Atmel ATMEGA328P-MU \u82af\u7247\u548c CH340 \u82af\u7247\u3002ATMEGA328P-MU \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\uff0c\u4f4e\u529f\u8017\u7684 AVR 8 \u4f4d\u5fae\u63a7\u5236\u5668\u3002CH340 \u662f\u53ef\u4ee5\u5b9e\u73b0 USB \u5230\u4e32\u884c\u63a5\u53e3\u7684 USB \u603b\u7ebf\u8f6c\u6362\u5668\u82af\u7247\u3002Seeeduino Lotus\u6709 14 \u4e2a\u6570\u5b57\u8f93\u5165/\u8f93\u51fa\uff08\u5176\u4e2d 6 \u4e2a\u53ef\u4ee5\u8f93\u51fa PWM\uff09\u548c 7 \u4e2a\u6a21\u62df\u8f93\u5165/\u8f93\u51fa\uff0c\u4e00\u4e2a micro USB \u63a5\u53e3\uff0c\u4e00\u4e2a ICSP \u63a5\u53e3\uff0c12 \u4e2a Grove \u63a5\u53e3\u548c\u4e00\u4e2a\u590d\u4f4d\u6309\u94ae\u3002\n\n\n\n\n\n\nWarning\n\n\n\n\nSeeeduino Lotus 1.0 \u652f\u6301 Windows \u64cd\u4f5c\u7cfb\u7edf\u3002Seeeduino Lotus 1.1 \u652f\u6301 Window \u548c Mac\u7cfb\u7edf\u3002\n\n\n\u7248\u672c\n\n\n\n\n\n\n\n\n\n\n\u7248\u6b21\n\n\n\u8bf4\u660e\n\n\n\u53d1\u5e03\u65f6\u95f4\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nv1.0\n\n\n\u521d\u6b21\u516c\u5f00\u53d1\u5e03\uff08\u6d4b\u8bd5\u7248\uff09\n\n\n\u4e03\u6708 22, 2014\n\n\n\u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nv1.1\n\n\n\u7528 CP2102 \u66ff\u6362\u4e86 CH340 \uff0c\u652f\u6301 MAC\n\n\n\u5341\u4e8c\u6708 22,2016\n\n\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\nDIY\n\n\nIoT \u548c\u667a\u80fd\u5bb6\u5c45\n\n\n\u673a\u5668\u4eba\n\n\n\u5b66\u4e60\n\n\n\u73a9\u5177\n\n\n\n\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u6848\u4f8b\u8ddf\u60a8\u53c2\u8003\u3002\n\n\n\n\n\n\n\n\nCar Controlled by Track Ball\n\n\nFM Receiver\n\n\nMake a Wooden Gun\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake it Now\n\n\nMake it Now\n\n\nMake it Now\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u4e0e Arduino UNO \u5b8c\u5168\u517c\u5bb9\n\n\nATmega328 \u5fae\u63a7\u5236\u5668\n\n\n\u677f\u8f7d 12 \u4e2a Grove \u63a5\u53e3\n\n\n14 \u4e2a\u6570\u5b57 I/O \u5f15\u811a (6 \u8def PWM \u8f93\u51fa)\n\n\n6 \u6a21\u62df\u8f93\u5165\n\n\n\u6709 ISP \u63a5\u53e3\n\n\n\u4e0e Arduino UNO-R3 Shield \u517c\u5bb9\n\n\n\u4f7f\u7528 Micro USB \u4e0a\u4f20\u4ee3\u7801\u548c\u4f9b\u7535\n\n\n5V \u5de5\u4f5c\u7535\u538b\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u5fae\u63a7\u5236\u5668\n\n\nATmega328P-MU\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n5V\n\n\n\n\n\n\n\u6570\u5b57 I/O \u5f15\u811a\n\n\n14\n\n\n\n\n\n\nPWM \u901a\u9053\n\n\n6\n\n\n\n\n\n\n\u6a21\u62df\u8f93\u5165\u901a\u9053\n\n\n7\n\n\n\n\n\n\n\u6bcf\u4e2a I/O \u5f15\u811a\u6700\u5927\u76f4\u6d41\u7535\u6d41\n\n\n40 mA\n\n\n\n\n\n\nFlash \u5b58\u50a8\n\n\n32 KB\n\n\n\n\n\n\nRAM\n\n\n2 KB\n\n\n\n\n\n\nEEPROM\n\n\n1 KB\n\n\n\n\n\n\n\u65f6\u949f\u9891\u7387\n\n\n16 MHz\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\u4e0b\u56fe\u663e\u793a\u4e86 Seeeduino Lotus \u786c\u4ef6\u529f\u80fd\u7684\u6982\u8ff0\u3002 Seeeduino Lotus \u7684\u5404\u79cd\u5f15\u811a\u7684\u4e3b\u8981\u529f\u80fd\u548c\u590d\u7528\u529f\u80fd\u5982\u5f15\u811a\u56fe\u6240\u793a\u3002\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u5feb\u901f\u53c2\u8003\u3002\n\n\n\n\n\n\nLED-D13\n\n\u8fd9\u4e2a LED \u8fde\u63a5\u5230\u677f\u5b50\u7684 D13 \u5f15\u811a\uff0c\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u7a0b\u5e8f\u6216\u9879\u76ee\u7684\u677f\u8f7d LED \u6307\u793a\u706f\u3002\n\n\nUSB Input\n\nUSB \u7aef\u53e3\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230 PC \u8fdb\u884c\u7f16\u7a0b\u548c\u4f9b\u7535\u3002Micro USB \u662f\u5927\u591a\u6570 Android \u624b\u673a\u548c\u5176\u4ed6\u8bbe\u5907\u5e38\u7528\u7684 USB \u63a5\u53e3\u3002 \u4f60\u53ef\u80fd\u6709\u51e0\u5341\u6839\u8fd9\u4e9b\u7535\u7f06\u6563\u843d\u5728\u4f60\u5bb6\u9644\u8fd1\u3002\n\n\nReset\n\n\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c\u91cd\u7f6e\u6309\u94ae\u88ab\u653e\u7f6e\u5728\u677f\u5b50\u4fa7\u9762\uff0c\u8fd9\u6837\u5373\u4f7f\u628a\u5176\u4ed6\u6269\u5c55\u677f\u653e\u5728 Seeeduino \u4e0a\u65f6\u4e5f\u80fd\u8f7b\u677e\u6309\u4e0b\u3002\u5728\u5176\u4ed6 Arduino \u677f\u4e0a\u5e76\u4e0d\u662f\u8fd9\u6837\uff0c\u6309\u94ae\u653e\u5728\u9876\u90e8\uff0c\u4f7f\u5176\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5f88\u96be\u6309\u4e0b\u3002\n\n\nPower Pins \n Analog Pins\n\n\u5c31\u50cf\u54ea\u4e9b\u989d\u5916\u7684\u6570\u5b57\u63a5\u53e3\u4e00\u6837\uff0c\u5f53\u4eba\u4eec\u5728\u505a\u67d0\u4e9b\u9879\u76ee\u9700\u8981\u7528\u4e0d\u6b62\u4e00\u4e2a\u4f20\u611f\u5668\u6216\u6267\u884c\u5668\u65f6\uff0c\u4ed6\u53ef\u80fd\u9700\u8981\u4e0d\u6b62\u4e00\u4e2a\u7535\u6e90\u63a5\u53e3\uff0c\u6709\u8fd9\u4e9b\u989d\u5916\u7684\u63a5\u53e3\u5c31\u907f\u514d\u4e86\u4f7f\u7528\u6269\u5c55\u677f\u7684\u9ebb\u70e6\u3002\n\n\nGrove Connectors\n\nSeeedStudio \u5177\u6709\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6a21\u62df\uff0c\u6570\u5b57\uff0cI2C\u548c UART \u8fde\u63a5\u7684\u5404\u79cd\u4f20\u611f\u5668/\u8bbe\u5907\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u9500\u552e\u72ec\u7acb\u7684 Grove \u8fde\u63a5\u7ebf\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5236\u4f5c\u6211\u4eec\u81ea\u5df1\u7684\u4f20\u611f\u5668\u8fde\u63a5\u3002\n\n\nICSP\n\n\u8fd9\u662f ATmega328P \u7684 ICSP \u63a5\u53e3\uff0c\u5b83\u4f4d\u4e8e\u53ef\u4ee5\u4f7f\u7528\u6b64\u8fde\u63a5\u5668\u7684 Arduino Uno\uff0cDue\uff0cMega \u548c Leonardo \u517c\u5bb9\u786c\u4ef6\uff08\u4f8b\u5982\u6269\u5c55\u677f\uff09\u7684\u6807\u51c6 ICSP / SPI \u4f4d\u7f6e\u3002 \u8be5\u7aef\u53e3\u7684 SPI \u5f15\u811a\uff1a MISO\uff0cSCK \u548c MOSI \u4e5f\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a 12,13 \u548c 11\uff0c\u5c31\u50cf Arduino Uno \u90a3\u6837\u3002\n\n\nUSB 2 Uart\n\n\u901a\u8fc7\u5c06\u677f\u8f7d ATmega328 \u7f6e\u4e8e\u590d\u4f4d\u6a21\u5f0f\uff0c\u8fd9\u4e9b\u710a\u76d8\u53ef\u7528\u4e8e\u4e0e\u5176\u4ed6 UART \u5668\u4ef6\u4ea4\u4e92\u3002 \u8fd9\u4f7f\u5f97 Seeeduino Lotus \u53ef\u4ee5\u4f7f\u7528 USB2UART \u6269\u5c55\u677f\u3002\n\n\n\n\n\n\nWarning\n\n\n\u4f7f\u7528 micro USB \u65f6\u8981\u5c0f\u5fc3\u64cd\u4f5c\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u4f7f\u63d2\u5ea7\u8131\u843d\u3002\n\n\n\n\n\u5b89\u88c5\u9a71\u52a8\n\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\uff1a\n\n\n\n\n\n\n\u627e\u5230\u4e00\u6839 Micro-USB \u7ebf\n\n\u9996\u5148\u4f60\u9700\u8981\u4e00\u6839 Micro-USB \u7ebf\u3002Android \u624b\u673a\u7684\u6570\u636e\u7ebf\u5c31\u518d\u597d\u4e0d\u8fc7\u4e86\u3002\n\u5982\u679c\u4f60\u627e\u4e0d\u5230\uff0c\u8bf7\u5728 \n\u8fd9\u91cc\n \u8d2d\u4e70\u3002\n\n\n\n\n\n\n\u8fde\u63a5\u7535\u8def\u677f\n\n\u4f7f\u7528 USB \u7ebf\u628a\u7535\u8def\u677f\u8fde\u63a5\u5230\u7535\u8111\u4e0a\u3002\u7eff\u8272\u7684\u7535\u6e90 LED (\u6807\u5fd7\u662f \nPWR\n) \u5e94\u8be5\u4f1a\u4eae\u8d77\u6765\u3002\n\n\n\n\n\n\n\n\nNote\n\n\nCH340 \u7684\u9a71\u52a8 (Seeeduino_Lotus V1.0) \u652f\u6301 Windows XP, Windows Vista, Windows 7, Windows 8/8.1 \u548c Windows 10.\n\n\n\n\n\n\n\u53cc\u51fb\u6253\u5f00\u9a71\u52a8\u5e76\u5b89\u88c5\u3002\n\n\n\n\n\n\nNote\n\n\nCP2102N \u9a71\u52a8 (Seeeduino_Lotus V1.1) \u652f\u6301 Windows XP, Windows Vista, Windows 7, Windows 8/8.1, Windows 10 and Mac.\n\n\n\n\n  \n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\nNote\n\n\n\u8fd9\u90e8\u5206\u57fa\u4e8e Windows 10 \u4e0b\u7684 Arduino 1.6.9\u3002\n\n\n\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\u5b89\u88c5 Arduino \u8f6f\u4ef6\n\n\n\n\n\u542f\u52a8 Arduino \u5e94\u7528\u7a0b\u5e8f\n\n\n\u53cc\u51fb\u4e0b\u8f7d\u597d\u7684 Arduino \u5e94\u7528 (arduino.exe) \u3002\n\n\n\n\nNote\n\n\n\u5982\u679c Arduino \u8f6f\u4ef6\u4ee5\u4e0d\u540c\u7684\u8bed\u8a00\u52a0\u8f7d\uff0c\u60a8\u53ef\u4ee5\u5728 Preferences \u5bf9\u8bdd\u6846\u4e2d\u8fdb\u884c\u66f4\u6539\u3002\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \nArduino Software (IDE) page\n \u3002\n\n\n\n\n\u6253\u5f00 Blink \u793a\u4f8b\n\n\n\u6253\u5f00 LED blink \u793a\u4f8b\u76ee\u5f55 \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n01.Basics \n Blink\n\u3002\n\n\n\n\n\u628a Seeeduino Lite \u6dfb\u52a0\u5230 Arduino IDE\n\n\nArduino IDE \u7684\u5f00\u53d1\u677f\u4e2d\u6ca1\u6709 \nSeeeduino Lite\n \u9009\u9879, \u6253\u5f00\u7528\u6cd5\u8bf4\u660e \n\u5982\u4f55\u628a Seeed \u5f00\u53d1\u677f\u6dfb\u52a0\u8fdb Arduino IDE\n \u64cd\u4f5c\u3002\n\n\n\u9009\u62e9\u4f60\u7684\u677f\u5b50\n\n\u6253\u5f00\u76ee\u5f55\u83dc\u5355 \nTools\uff08\u5de5\u5177\uff09 \n Board\uff08\u5f00\u53d1\u677f\uff09\n \u5e76\u9009\u62e9\u4f60\u7684 Arduino \u578b\u53f7\u3002\n\u8fd9\u6b21\u8bf7\u9009\u62e9 \nSeeeduino Lotus\n\u3002\n\n\n\n\n\u9009\u62e9\u4f7f\u7528\u7684\u4e32\u53e3\n\n\u4ece \nTools\uff08\u5de5\u5177\uff09 | Serial Port\uff08\u7aef\u53e3\uff09\n \u4e2d\u9009\u62e9 Arduino \u677f\u7684\u4e32\u53e3\u53f7\u3002 \u8fd9\u53ef\u80fd\u662f COM3 \u6216\u6570\u5b57\u66f4\u5927\u7684\u4e32\u53e3\uff08\nCOM1\n \u548c \nCOM2\n \u901a\u5e38\u4e3a\u786c\u4ef6\u4e32\u884c\u7aef\u53e3\u4fdd\u7559\uff09\u3002\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u662f\u54ea\u4e2a\uff0c\u60a8\u53ef\u4ee5\u65ad\u5f00 Arduino \u677f\u5e76\u91cd\u65b0\u6253\u5f00\u83dc\u5355; \u6d88\u5931\u7684\u6761\u76ee\u5e94\u8be5\u662f Arduino \u677f\u3002\u91cd\u65b0\u8fde\u63a5\u7535\u8def\u677f\u5e76\u9009\u62e9\u8be5\u4e32\u884c\u7aef\u53e3\u3002\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\n\n\u73b0\u5728\uff0c\u4f60\u53ea\u9700\u8981\u70b9\u51fb\u9875\u9762\u4e2d\u7684 \"\nUpload\uff08\u4e0a\u4f20\uff09\n\"\u6309\u94ae\u3002\u7b49\u5f85\u6570\u79d2\uff0c\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u72b6\u6001\u680f\u4e2d\u5c31\u4f1a\u663e\u793a \"Done uploading\"\u3002\n\n\n\n\u4e0a\u4f20\u7ed3\u675f\u540e\uff0c\u4f60\u4f1a\u770b\u5230\u677f\u5b50\u4e0a\u7684\u5f15\u811a 13 LED \u5f00\u59cb\u95ea\u70c1\uff08\u6a58\u9ec4\u8272\uff09\u3002\u5982\u679c\u662f\u7684\uff0c\u6309\u606d\u559c\u4f60\uff01\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86 Arduino \u7684\u4e0b\u8f7d\u548c\u8fd0\u884c\u3002\u5982\u679c\u60a8\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u6587\u672b\u7684 \n\u5e38\u89c1\u95ee\u9898\n\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\u539f\u7406\u56fe\n\n\n\n\n[Eagle \u6587\u4ef6]\nSeeeduino Lotus Eagle file V1.0\n\n\n[Eagle \u6587\u4ef6]\nSeeeduino Lotus Eagle file V1.1\n\n\n[PDF \u6587\u4ef6]\nSeeeduino Lotus SCH PDF file V1.0\n\n\n[PDF \u6587\u4ef6]\nSeeeduino Lotus SCH PDF file V1.1\n\n\n[PDF \u6587\u4ef6]\nSeeeduino Lotus PCB PDF file V1.0\n\n\n[PDF \u6587\u4ef6]\nSeeeduino Lotus PCB PDF file V1.1\n\n\n\n\n\n\n\n\n\u6570\u636e\u624b\u518c\n\n\n\n\nATmega328P\n\n\nATmega16U2\n\n\n\n\n\n\n\n\n\u5f15\u5bfc\u88c5\u5728\u7a0b\u5e8f\n    \n\n\n\n\nSeeeduino Lotus Bootloader\n\n\n\n\n\n\n\n\n\u76f8\u5173\u53c2\u8003\n\n\n\n\nGetting Started with Arduino\n\n\nArduino Language Reference\n\n\nDownload the Arduino Software(IDE)\n\n\nArduino FAQ\n\n\nArduino Introduction\n\n\nWikipedia page for Arduino\n\n\nSeeeduino Lotus V1.1 USB Driver\n\n\n\n\n\n\n\n\n\u5e38\u89c1\u95ee\u9898\n\n\nQ1.  Arduino UNO \u548c Seeeduino Lotus \u4e4b\u95f4\u6709\u4ec0\u4e48\u533a\u522b\u3002\n\n\nSeeeduino Lotus \u662f Arduino UNO\u7684\u5b8c\u5168\u517c\u5bb9\u5f00\u53d1\u7248\u3002 \u5e76\u4e14 Seeeduino Lotus \u6709 12 \u4e2a Grove \u63a5\u53e3\uff0c\u8fd9\u5c31\u4f7f\u4f7f\u7528 Seeed Studio Grove \u6a21\u5757\u642d\u5efa\u9879\u76ee\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002\u5e76\u4e14 Seeeduino Lotus \u4f7f\u7528 Micro USB \u6765\u7f16\u7a0b\u548c\u4f9b\u7535\u3002\n\n\nQ2. \u6211\u4e0d\u80fd\u5411 Seeeduino Lotus \u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\u8bf7\u68c0\u67e5\uff0c\n\n\n\n\n\u7535\u6e90\u6307\u793a LED \u662f\u5426\u4eae\u7740\n\n\n\u4f60\u662f\u5426\u9009\u62e9\u4e86\u6b63\u786e\u7684\u7aef\u53e3\u548c\u677f\u5b50(Seeeduino Lotus)\n\n\n\u91cd\u65b0\u6253\u5f00 Arduino IDE \u5e76\u518d\u8bd5\u4e00\u6b21\n\n\n\n\nQ3. \u5982\u679c\u6211\u6709\u4e86\u65b0\u60f3\u6cd5\uff0c\u6211\u5728\u54ea\u513f\u53ef\u4ee5\u5f97\u5230\u66f4\u591a\u7684\u6280\u672f\u652f\u6301\u3002\n\n\n\u4f60\u53ef\u4ee5\u5728 \nSeeed Forum\n \u4e2d\u53d1\u5e16\u6216\u53d1\u9001\u90ae\u4ef6\u5230 \n\u3002", 
            "title": "Seeeduino Lotus"
        }, 
        {
            "location": "/Seeeduino_Lotus/#_1", 
            "text": "\u7248\u6b21  \u8bf4\u660e  \u53d1\u5e03\u65f6\u95f4  \u8d2d\u4e70\u94fe\u63a5      v1.0  \u521d\u6b21\u516c\u5f00\u53d1\u5e03\uff08\u6d4b\u8bd5\u7248\uff09  \u4e03\u6708 22, 2014  \u4e0d\u518d\u9500\u552e    v1.1  \u7528 CP2102 \u66ff\u6362\u4e86 CH340 \uff0c\u652f\u6301 MAC  \u5341\u4e8c\u6708 22,2016", 
            "title": "\u7248\u672c"
        }, 
        {
            "location": "/Seeeduino_Lotus/#_2", 
            "text": "DIY  IoT \u548c\u667a\u80fd\u5bb6\u5c45  \u673a\u5668\u4eba  \u5b66\u4e60  \u73a9\u5177   \u8fd9\u91cc\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u6848\u4f8b\u8ddf\u60a8\u53c2\u8003\u3002     Car Controlled by Track Ball  FM Receiver  Make a Wooden Gun           Make it Now  Make it Now  Make it Now", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Seeeduino_Lotus/#_3", 
            "text": "\u4e0e Arduino UNO \u5b8c\u5168\u517c\u5bb9  ATmega328 \u5fae\u63a7\u5236\u5668  \u677f\u8f7d 12 \u4e2a Grove \u63a5\u53e3  14 \u4e2a\u6570\u5b57 I/O \u5f15\u811a (6 \u8def PWM \u8f93\u51fa)  6 \u6a21\u62df\u8f93\u5165  \u6709 ISP \u63a5\u53e3  \u4e0e Arduino UNO-R3 Shield \u517c\u5bb9  \u4f7f\u7528 Micro USB \u4e0a\u4f20\u4ee3\u7801\u548c\u4f9b\u7535  5V \u5de5\u4f5c\u7535\u538b", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Seeeduino_Lotus/#_4", 
            "text": "\u9879\u76ee  \u53c2\u6570      \u5fae\u63a7\u5236\u5668  ATmega328P-MU    \u5de5\u4f5c\u7535\u538b  5V    \u6570\u5b57 I/O \u5f15\u811a  14    PWM \u901a\u9053  6    \u6a21\u62df\u8f93\u5165\u901a\u9053  7    \u6bcf\u4e2a I/O \u5f15\u811a\u6700\u5927\u76f4\u6d41\u7535\u6d41  40 mA    Flash \u5b58\u50a8  32 KB    RAM  2 KB    EEPROM  1 KB    \u65f6\u949f\u9891\u7387  16 MHz", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Seeeduino_Lotus/#_5", 
            "text": "\u4e0b\u56fe\u663e\u793a\u4e86 Seeeduino Lotus \u786c\u4ef6\u529f\u80fd\u7684\u6982\u8ff0\u3002 Seeeduino Lotus \u7684\u5404\u79cd\u5f15\u811a\u7684\u4e3b\u8981\u529f\u80fd\u548c\u590d\u7528\u529f\u80fd\u5982\u5f15\u811a\u56fe\u6240\u793a\u3002\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u5feb\u901f\u53c2\u8003\u3002    LED-D13 \n\u8fd9\u4e2a LED \u8fde\u63a5\u5230\u677f\u5b50\u7684 D13 \u5f15\u811a\uff0c\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u7a0b\u5e8f\u6216\u9879\u76ee\u7684\u677f\u8f7d LED \u6307\u793a\u706f\u3002  USB Input \nUSB \u7aef\u53e3\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230 PC \u8fdb\u884c\u7f16\u7a0b\u548c\u4f9b\u7535\u3002Micro USB \u662f\u5927\u591a\u6570 Android \u624b\u673a\u548c\u5176\u4ed6\u8bbe\u5907\u5e38\u7528\u7684 USB \u63a5\u53e3\u3002 \u4f60\u53ef\u80fd\u6709\u51e0\u5341\u6839\u8fd9\u4e9b\u7535\u7f06\u6563\u843d\u5728\u4f60\u5bb6\u9644\u8fd1\u3002  Reset \n\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c\u91cd\u7f6e\u6309\u94ae\u88ab\u653e\u7f6e\u5728\u677f\u5b50\u4fa7\u9762\uff0c\u8fd9\u6837\u5373\u4f7f\u628a\u5176\u4ed6\u6269\u5c55\u677f\u653e\u5728 Seeeduino \u4e0a\u65f6\u4e5f\u80fd\u8f7b\u677e\u6309\u4e0b\u3002\u5728\u5176\u4ed6 Arduino \u677f\u4e0a\u5e76\u4e0d\u662f\u8fd9\u6837\uff0c\u6309\u94ae\u653e\u5728\u9876\u90e8\uff0c\u4f7f\u5176\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5f88\u96be\u6309\u4e0b\u3002  Power Pins   Analog Pins \n\u5c31\u50cf\u54ea\u4e9b\u989d\u5916\u7684\u6570\u5b57\u63a5\u53e3\u4e00\u6837\uff0c\u5f53\u4eba\u4eec\u5728\u505a\u67d0\u4e9b\u9879\u76ee\u9700\u8981\u7528\u4e0d\u6b62\u4e00\u4e2a\u4f20\u611f\u5668\u6216\u6267\u884c\u5668\u65f6\uff0c\u4ed6\u53ef\u80fd\u9700\u8981\u4e0d\u6b62\u4e00\u4e2a\u7535\u6e90\u63a5\u53e3\uff0c\u6709\u8fd9\u4e9b\u989d\u5916\u7684\u63a5\u53e3\u5c31\u907f\u514d\u4e86\u4f7f\u7528\u6269\u5c55\u677f\u7684\u9ebb\u70e6\u3002  Grove Connectors \nSeeedStudio \u5177\u6709\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6a21\u62df\uff0c\u6570\u5b57\uff0cI2C\u548c UART \u8fde\u63a5\u7684\u5404\u79cd\u4f20\u611f\u5668/\u8bbe\u5907\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u9500\u552e\u72ec\u7acb\u7684 Grove \u8fde\u63a5\u7ebf\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5236\u4f5c\u6211\u4eec\u81ea\u5df1\u7684\u4f20\u611f\u5668\u8fde\u63a5\u3002  ICSP \n\u8fd9\u662f ATmega328P \u7684 ICSP \u63a5\u53e3\uff0c\u5b83\u4f4d\u4e8e\u53ef\u4ee5\u4f7f\u7528\u6b64\u8fde\u63a5\u5668\u7684 Arduino Uno\uff0cDue\uff0cMega \u548c Leonardo \u517c\u5bb9\u786c\u4ef6\uff08\u4f8b\u5982\u6269\u5c55\u677f\uff09\u7684\u6807\u51c6 ICSP / SPI \u4f4d\u7f6e\u3002 \u8be5\u7aef\u53e3\u7684 SPI \u5f15\u811a\uff1a MISO\uff0cSCK \u548c MOSI \u4e5f\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a 12,13 \u548c 11\uff0c\u5c31\u50cf Arduino Uno \u90a3\u6837\u3002  USB 2 Uart \n\u901a\u8fc7\u5c06\u677f\u8f7d ATmega328 \u7f6e\u4e8e\u590d\u4f4d\u6a21\u5f0f\uff0c\u8fd9\u4e9b\u710a\u76d8\u53ef\u7528\u4e8e\u4e0e\u5176\u4ed6 UART \u5668\u4ef6\u4ea4\u4e92\u3002 \u8fd9\u4f7f\u5f97 Seeeduino Lotus \u53ef\u4ee5\u4f7f\u7528 USB2UART \u6269\u5c55\u677f\u3002    Warning  \u4f7f\u7528 micro USB \u65f6\u8981\u5c0f\u5fc3\u64cd\u4f5c\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u4f7f\u63d2\u5ea7\u8131\u843d\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Seeeduino_Lotus/#_6", 
            "text": "\u9996\u5148\uff0c\u4f60\u9700\u8981\uff1a    \u627e\u5230\u4e00\u6839 Micro-USB \u7ebf \n\u9996\u5148\u4f60\u9700\u8981\u4e00\u6839 Micro-USB \u7ebf\u3002Android \u624b\u673a\u7684\u6570\u636e\u7ebf\u5c31\u518d\u597d\u4e0d\u8fc7\u4e86\u3002\n\u5982\u679c\u4f60\u627e\u4e0d\u5230\uff0c\u8bf7\u5728  \u8fd9\u91cc  \u8d2d\u4e70\u3002    \u8fde\u63a5\u7535\u8def\u677f \n\u4f7f\u7528 USB \u7ebf\u628a\u7535\u8def\u677f\u8fde\u63a5\u5230\u7535\u8111\u4e0a\u3002\u7eff\u8272\u7684\u7535\u6e90 LED (\u6807\u5fd7\u662f  PWR ) \u5e94\u8be5\u4f1a\u4eae\u8d77\u6765\u3002     Note  CH340 \u7684\u9a71\u52a8 (Seeeduino_Lotus V1.0) \u652f\u6301 Windows XP, Windows Vista, Windows 7, Windows 8/8.1 \u548c Windows 10.    \u53cc\u51fb\u6253\u5f00\u9a71\u52a8\u5e76\u5b89\u88c5\u3002    Note  CP2102N \u9a71\u52a8 (Seeeduino_Lotus V1.1) \u652f\u6301 Windows XP, Windows Vista, Windows 7, Windows 8/8.1, Windows 10 and Mac.", 
            "title": "\u5b89\u88c5\u9a71\u52a8"
        }, 
        {
            "location": "/Seeeduino_Lotus/#_7", 
            "text": "Note  \u8fd9\u90e8\u5206\u57fa\u4e8e Windows 10 \u4e0b\u7684 Arduino 1.6.9\u3002   \u9996\u5148\uff0c\u4f60\u9700\u8981\u5b89\u88c5 Arduino \u8f6f\u4ef6   \u542f\u52a8 Arduino \u5e94\u7528\u7a0b\u5e8f  \u53cc\u51fb\u4e0b\u8f7d\u597d\u7684 Arduino \u5e94\u7528 (arduino.exe) \u3002   Note  \u5982\u679c Arduino \u8f6f\u4ef6\u4ee5\u4e0d\u540c\u7684\u8bed\u8a00\u52a0\u8f7d\uff0c\u60a8\u53ef\u4ee5\u5728 Preferences \u5bf9\u8bdd\u6846\u4e2d\u8fdb\u884c\u66f4\u6539\u3002\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605  Arduino Software (IDE) page  \u3002   \u6253\u5f00 Blink \u793a\u4f8b  \u6253\u5f00 LED blink \u793a\u4f8b\u76ee\u5f55  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09  01.Basics   Blink \u3002   \u628a Seeeduino Lite \u6dfb\u52a0\u5230 Arduino IDE  Arduino IDE \u7684\u5f00\u53d1\u677f\u4e2d\u6ca1\u6709  Seeeduino Lite  \u9009\u9879, \u6253\u5f00\u7528\u6cd5\u8bf4\u660e  \u5982\u4f55\u628a Seeed \u5f00\u53d1\u677f\u6dfb\u52a0\u8fdb Arduino IDE  \u64cd\u4f5c\u3002  \u9009\u62e9\u4f60\u7684\u677f\u5b50 \n\u6253\u5f00\u76ee\u5f55\u83dc\u5355  Tools\uff08\u5de5\u5177\uff09   Board\uff08\u5f00\u53d1\u677f\uff09  \u5e76\u9009\u62e9\u4f60\u7684 Arduino \u578b\u53f7\u3002\n\u8fd9\u6b21\u8bf7\u9009\u62e9  Seeeduino Lotus \u3002   \u9009\u62e9\u4f7f\u7528\u7684\u4e32\u53e3 \n\u4ece  Tools\uff08\u5de5\u5177\uff09 | Serial Port\uff08\u7aef\u53e3\uff09  \u4e2d\u9009\u62e9 Arduino \u677f\u7684\u4e32\u53e3\u53f7\u3002 \u8fd9\u53ef\u80fd\u662f COM3 \u6216\u6570\u5b57\u66f4\u5927\u7684\u4e32\u53e3\uff08 COM1  \u548c  COM2  \u901a\u5e38\u4e3a\u786c\u4ef6\u4e32\u884c\u7aef\u53e3\u4fdd\u7559\uff09\u3002\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u662f\u54ea\u4e2a\uff0c\u60a8\u53ef\u4ee5\u65ad\u5f00 Arduino \u677f\u5e76\u91cd\u65b0\u6253\u5f00\u83dc\u5355; \u6d88\u5931\u7684\u6761\u76ee\u5e94\u8be5\u662f Arduino \u677f\u3002\u91cd\u65b0\u8fde\u63a5\u7535\u8def\u677f\u5e76\u9009\u62e9\u8be5\u4e32\u884c\u7aef\u53e3\u3002   \u4e0a\u4f20\u4ee3\u7801 \n\u73b0\u5728\uff0c\u4f60\u53ea\u9700\u8981\u70b9\u51fb\u9875\u9762\u4e2d\u7684 \" Upload\uff08\u4e0a\u4f20\uff09 \"\u6309\u94ae\u3002\u7b49\u5f85\u6570\u79d2\uff0c\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u72b6\u6001\u680f\u4e2d\u5c31\u4f1a\u663e\u793a \"Done uploading\"\u3002  \u4e0a\u4f20\u7ed3\u675f\u540e\uff0c\u4f60\u4f1a\u770b\u5230\u677f\u5b50\u4e0a\u7684\u5f15\u811a 13 LED \u5f00\u59cb\u95ea\u70c1\uff08\u6a58\u9ec4\u8272\uff09\u3002\u5982\u679c\u662f\u7684\uff0c\u6309\u606d\u559c\u4f60\uff01\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86 Arduino \u7684\u4e0b\u8f7d\u548c\u8fd0\u884c\u3002\u5982\u679c\u60a8\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u6587\u672b\u7684  \u5e38\u89c1\u95ee\u9898 \u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Seeeduino_Lotus/#_8", 
            "text": "\u539f\u7406\u56fe   [Eagle \u6587\u4ef6] Seeeduino Lotus Eagle file V1.0  [Eagle \u6587\u4ef6] Seeeduino Lotus Eagle file V1.1  [PDF \u6587\u4ef6] Seeeduino Lotus SCH PDF file V1.0  [PDF \u6587\u4ef6] Seeeduino Lotus SCH PDF file V1.1  [PDF \u6587\u4ef6] Seeeduino Lotus PCB PDF file V1.0  [PDF \u6587\u4ef6] Seeeduino Lotus PCB PDF file V1.1     \u6570\u636e\u624b\u518c   ATmega328P  ATmega16U2     \u5f15\u5bfc\u88c5\u5728\u7a0b\u5e8f        Seeeduino Lotus Bootloader     \u76f8\u5173\u53c2\u8003   Getting Started with Arduino  Arduino Language Reference  Download the Arduino Software(IDE)  Arduino FAQ  Arduino Introduction  Wikipedia page for Arduino  Seeeduino Lotus V1.1 USB Driver", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Seeeduino_Lotus/#_9", 
            "text": "Q1.  Arduino UNO \u548c Seeeduino Lotus \u4e4b\u95f4\u6709\u4ec0\u4e48\u533a\u522b\u3002  Seeeduino Lotus \u662f Arduino UNO\u7684\u5b8c\u5168\u517c\u5bb9\u5f00\u53d1\u7248\u3002 \u5e76\u4e14 Seeeduino Lotus \u6709 12 \u4e2a Grove \u63a5\u53e3\uff0c\u8fd9\u5c31\u4f7f\u4f7f\u7528 Seeed Studio Grove \u6a21\u5757\u642d\u5efa\u9879\u76ee\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002\u5e76\u4e14 Seeeduino Lotus \u4f7f\u7528 Micro USB \u6765\u7f16\u7a0b\u548c\u4f9b\u7535\u3002  Q2. \u6211\u4e0d\u80fd\u5411 Seeeduino Lotus \u4e0a\u4f20\u4ee3\u7801\u3002  \u8bf7\u68c0\u67e5\uff0c   \u7535\u6e90\u6307\u793a LED \u662f\u5426\u4eae\u7740  \u4f60\u662f\u5426\u9009\u62e9\u4e86\u6b63\u786e\u7684\u7aef\u53e3\u548c\u677f\u5b50(Seeeduino Lotus)  \u91cd\u65b0\u6253\u5f00 Arduino IDE \u5e76\u518d\u8bd5\u4e00\u6b21   Q3. \u5982\u679c\u6211\u6709\u4e86\u65b0\u60f3\u6cd5\uff0c\u6211\u5728\u54ea\u513f\u53ef\u4ee5\u5f97\u5230\u66f4\u591a\u7684\u6280\u672f\u652f\u6301\u3002  \u4f60\u53ef\u4ee5\u5728  Seeed Forum  \u4e2d\u53d1\u5e16\u6216\u53d1\u9001\u90ae\u4ef6\u5230  \u3002", 
            "title": "\u5e38\u89c1\u95ee\u9898"
        }, 
        {
            "location": "/Seeeduino_Cloud/", 
            "text": "Seeeduino Cloud\u662f\u57fa\u4e8e\nDragino WiFi IoT\u6a21\u5757HE\n\u548cATmega32u4 \u7684\u5fae\u63a7\u5236\u5668\u677f\u3002HE\u662f\u4e00\u79cd\u9ad8\u6027\u80fd\uff0c\u4f4e\u6210\u672c\u7684150M\uff0c2.4G WiFi\u6a21\u5757\uff0c\u8fd9\u610f\u5473\u7740\u4e2d\u6587\u7684\u201c\u6838\u5fc3\u201d\u548c\u5185\u90e8\u7684\u5f00\u6e90OpenWrt\u7cfb\u7edf\u3002Seeeduino Cloud\u4e5f\u662fArduino\u517c\u5bb9\u677f\uff0c\u4e0eGrove\uff0cShield\u548cIDE\uff08Arduino IDE 1.5.3\u53ca\u66f4\u9ad8\u7248\u672c\uff09100%\u517c\u5bb9\u3002\u9664\u4e86Arduino\u7684\u6b63\u5e38\u63a5\u53e3\uff0cSeeeduino Cloud\u5185\u7f6e\u4e86\u4ee5\u592a\u7f51\u548cWiFi\u652f\u6301\uff0c\u4e00\u4e2aUSB-A\u7aef\u53e3\uff0c\u975e\u5e38\u9002\u5408\u90a3\u4e9b\u9700\u8981\u7f51\u7edc\u8fde\u63a5\u548c\u5927\u5bb9\u91cf\u5b58\u50a8\u7684\u539f\u578b\u8bbe\u8ba1\u3002\u4f7fSeeeduino Cloud\u6210\u4e3a\u4e00\u4e2aIoT\u7f51\u5173\u4e5f\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7269\u8054\u7f51  \n\n\n\u667a\u80fd\u5bb6\u5c45\n\n\n\u5b66\u4e60\n\n\n\n\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\u3002\n\n\n\n\n\n\n\n\n\u7b80\u5355\u7684Wi-Fi Messager\n\n\n\u5c06\u6570\u636e\u53d1\u9001\u5230Google\u6587\u6863\n\n\n\u592a\u9633\u80fd\u7535\u6c60\u677f\u76d1\u63a7\u7cfb\u7edf\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u505a\u4e00\u4e2a\n\n\n\u9a6c\u4e0a\u505a\u4e00\u4e2a\n\n\n\u9a6c\u4e0a\u505a\u4e00\u4e2a\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u4e0eArduino Yun\u517c\u5bb9\n\n\n\u57fa\u4e8eDragino WiFi IoT\u6a21\u5757HE\n\n\n\u5185\u7f6e\u5f00\u6e90OpenWrt\u7cfb\u7edf\n\n\n\u652f\u6301 2.4Ghz WiFi, 802.11 b/g/n\n\n\n\u652f\u6301\u4ee5\u592a\u7f51\n\n\n\u652f\u6301 USB 2.0\n\n\n\u677f\u8f7dGrove\u8fde\u63a5\u5668\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\u56e0\u4e3aSeeeduino Cloud\u6709\u4e24\u4e2a\u5904\u7406\u5668\uff0c\u6240\u4ee5\u8fd9\u4e00\u8282\u663e\u793a\u4e86\u4e24\u4e2a\u5355\u72ec\u8868\u683c\u4e2d\u6bcf\u4e2a\u5904\u7406\u5668\u7684\u7279\u5f81\u3002\n\n\nDragino HE\u6a21\u5757\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nATHEROS AR9331\n\n\n\n\n\n\nClock Speed\n\n\n400MHz\n\n\n\n\n\n\nRAM\n\n\n64MB\n\n\n\n\n\n\nFlash\n\n\n16MB\n\n\n\n\n\n\nOS\n\n\nOpenWrt\n\n\n\n\n\n\nInterfaces\n\n\n2 x RJ45, 1 x USB Host, 1 x UART, 14 multiplex GPIOs\n\n\n\n\n\n\nPower\n\n\n3.3V Power Input\n\n\n\n\n\n\nWiFi\n\n\nSupport 150M 2.4Ghz WiFi, 802.11 b/g/n\n\n\n\n\n\n\n\n\nAVR Arduino\u5fae\u63a7\u5236\u5668\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nMicrocontroller\n\n\nATmega32u4\n\n\n\n\n\n\nFlash Memory\n\n\n32KB\n\n\n\n\n\n\nSRAM\n\n\n2.5kB\n\n\n\n\n\n\nEEPROM\n\n\n1kB\n\n\n\n\n\n\nClock Speed\n\n\n16MHz\n\n\n\n\n\n\nOperating Voltage\n\n\n5V\n\n\n\n\n\n\nDigital I/O Pins\n\n\n20\n\n\n\n\n\n\nPWM Channels\n\n\n7\n\n\n\n\n\n\nAnalog Input Channels\n\n\n12\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\u4e0b\u56fe\u663e\u793a\u4e86Seeeduino Cloud\u786c\u4ef6\u529f\u80fd\u7684\u6982\u8ff0\u3002\u5f15\u811a\u56fe\u4e2d\u663e\u793a\u4e86Seeeduino Cloud\u5404\u79cd\u5f15\u811a\u7684\u529f\u80fd\u3002\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u5feb\u901f\u53c2\u8003\u3002\n\n\n\n\n\n\nRJ45\u4ee5\u592a\u7f51\u7aef\u53e3\n\nLAN\u7aef\u53e3\u8fde\u63a5\u5230ATHEROS AR9331\uff0c\u5e76\u5177\u6709\u81ea\u5df1\u7684IP\u5730\u5740\uff0c\u53ef\u7528\u4e8eInternet\u8fde\u63a5\u548c\u8bbe\u5907\u7ba1\u7406\u3002\n\n\nUSB \u8f93\u5165\n\nUSB\u7aef\u53e3\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230PC\u8fdb\u884c\u7f16\u7a0b\u548c\u4e0a\u7535\u3002Micro USB\u662f\u5927\u591a\u6570Android\u624b\u673a\u548c\u5176\u4ed6\u8bbe\u5907\u4e2d\u666e\u904d\u5b58\u5728\u7684USB\u7248\u672c\u3002\u4f60\u5bb6\u91cc\u53ef\u80fd\u6709\u51e0\u5341\u6839\u8fd9\u4e9b\u6570\u636e\u7ebf\u3002\n\n\nUSB HOST\n\nSeeeduino Cloud\u63d0\u4f9bUSB HOST\u529f\u80fd\uff0c\u4f7f\u5176\u80fd\u591f\u8fde\u63a5\u5230\u5404\u79cdUSB\u8bbe\u5907\uff0c\u5982\u7f51\u7edc\u6444\u50cf\u5934\uff0cUSB\u9a71\u52a8\u5668\uff0c\u952e\u76d8\uff0c\u64cd\u7eb5\u6746\u7b49\u3002\n\n\n32U4 RST\n\n\u630932U4 Reset \u6309\u94ae\u5bf9ATmega32U4 MCU\u8fdb\u884c\u590d\u4f4d. \u901a\u5e38\uff0c\u5b83\u7528\u4e8e\u7a0b\u5e8f\u590d\u4f4d.\n\n\nSYS RST\n\n\u6309\u4e0b\u7cfb\u7edf\u590d\u4f4d\u6309\u94ae\u5c06\u91cd\u65b0\u542f\u52a8Linux\u7cfb\u7edf\u3002\n\n\nWi-Fi RST\n\nWi-Fi\u91cd\u7f6e\u6309\u94ae\u4ec5\u652f\u6301\u957f\u6309\u30025\u79d2\u949f\u540e\u6309\u4e0b\u5e76\u91ca\u653e\uff0c\u5c06\u91cd\u7f6eWiFi\u8bbe\u7f6e\u3002\u5176\u4ed6\u8bbe\u7f6e\u5c06\u88ab\u4fdd\u7559\u3002\u5982\u679c\u572830\u79d2\u540e\u6309\u4e0b\u5e76\u91ca\u653e\u6309\u94ae\uff0c\u5219\u4f1a\u5c06\u6240\u6709\u8bbe\u7f6e\u91cd\u7f6e\u4e3a\u51fa\u5382\u9ed8\u8ba4\u503c\u3002\n\n\nGrove Connectors\n\nSeeedStudio\u5177\u6709\u652f\u6301I2C\u6216UART\u8fde\u63a5\u7684\u5404\u79cd\u4f20\u611f\u5668/\u8bbe\u5907\u3002\u53e6\u5916\uff0c\u6211\u4eec\u9500\u552e\u72ec\u7acb\u7684Grove\u8fde\u63a5\u5668\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5236\u4f5c\u81ea\u5df1\u7684\u4f20\u611f\u5668\u8fde\u63a5\u3002\u5982\u679c\u8981\u4f7f\u7528\u8fd9\u4e9b\u5f15\u811a\uff0cI2C Grove\u8fde\u63a5\u5668\u4e5f\u5206\u522b\u8fde\u63a5\u5230SDA\u548cSCL\u7684\u6a21\u62df\u5f15\u811aA4\u548cA5\u3002UART Grove\u8fde\u63a5\u5668\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a0\u548c1\uff0c\u7528\u4e8eRX\u548cTX\u3002\n\n\nICSP\n\n\u8fd9\u662fATmega32U4\u7684ICSP\u63a5\u53e3\uff0c\u5b83\u4f4d\u4e8eArduino Uno\uff0cDue\uff0cMega\u548cLeonardo\u517c\u5bb9\u786c\u4ef6\uff08\u4f8b\u5982\u5c4f\u853d\uff09\u7684\u6807\u51c6ICSP / SPI\u4f4d\u7f6e\u3002\u8be5\u7aef\u53e3\u4e2d\u7684SPI\u5f15\u811a\uff1aMISO\uff0cSCK\u548cMOSI\u4e5f\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a12,13\u548c11\uff0c\u5c31\u50cfArduino Uno\u90a3\u6837\u3002\n\n\nI-PEX Connector\n\n\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5916\u90e8\u5929\u7ebf\u7684I-PEX\u8fde\u63a5\u5668\u3002\n\n\n\n\nPins\n\n\u56e0\u4e3aAtheros AR9331\u6240\u6709I / O\u7ebf\u90fd\u8fde\u63a5\u5230ATmega32U4\uff0c\u6240\u4ee5\u4e0d\u80fd\u8bbf\u95eeAtheros AR9331\u7684I / O\u5f15\u811a\u300232U4\u4e0a\u768420\u4e2a\u6570\u5b57\u5f15\u811a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u7528\u4f5c\u8f93\u5165\u6216\u8f93\u51fa\uff0c\u4f7f\u7528pinMode\uff08\uff09\uff0cdigitalWrite\uff08\uff09\u548cdigitalRead\uff08\uff09\u51fd\u6570\u3002\u5b83\u4eec\u5de5\u4f5c\u57285\u4f0f\u3002\u6bcf\u4e2a\u5f15\u811a\u53ef\u63d0\u4f9b\u6216\u63a5\u6536\u6700\u592740 mA\uff0c\u5e76\u5177\u670920-50 kOhms\u7684\u5185\u90e8\u4e0a\u62c9\u7535\u963b\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u65ad\u5f00\uff09\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u9488\u811a\u5177\u6709\u4e13\u95e8\u7684\u529f\u80fd\uff1a\n\n\n\n\nSerial: 0 (RX) and 1 (TX).\u7528\u4e8eATmega32U4\u786c\u4ef6\u4e32\u884c\u63a5\u6536\uff08RX\uff09\u548c\u53d1\u9001\uff08TX\uff09TTL\u6570\u636e\u3002\u8bf7\u6ce8\u610f\uff0c\u5728Seeeduino Cloud\u4e2d\uff0cSerial\u7c7b\u662f\u6307USB\uff08CDC\uff09\u901a\u4fe1; \u5bf9\u4e8e\u5f15\u811a0\u548c1\u4e0a\u7684TTL\u4e32\u884c\uff0c\u4f7f\u7528Serial1\u7c7b\u3002Seeeduino Cloud\u4e0a\u7684ATmega32U4\u548cAR9331\u7684\u786c\u4ef6\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7528\u4e8e\u5728\u4e24\u4e2a\u5904\u7406\u5668\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u5982\u5728Linux\u7cfb\u7edf\u4e2d\u5e38\u89c1\u7684\u90a3\u6837\uff0c\u5728AR9331\u7684\u4e32\u884c\u7aef\u53e3\u4e0a\u7ed9\u63a7\u5236\u53f0\u4ee5\u8bbf\u95ee\u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u8bbf\u95eeLinux\u63d0\u4f9b\u7684\u7a0b\u5e8f\u548c\u5de5\u5177\u3002\n\n\nTWI: 2 (SDA) and 3 (SCL). \u652f\u6301\u7528Wire\u5e93\u6587\u4ef6\u8fdb\u884cTWI\u901a\u8baf\u3002\n\n\nExternal Interrupts: 3 (interrupt 0), 2 (interrupt 1), 0 (interrupt 2), 1 (interrupt 3) and 7 (interrupt 4). \u8fd9\u4e9b\u5f15\u811a\u53ef\u4ee5\u914d\u7f6e\u5728\u4f4e\u7535\u5e73\u503c\u89e6\u53d1\uff0c\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\u89e6\u53d1\uff0c\u6216\u503c\u7684\u53d8\u5316\u7684\u65f6\u5019\u89e6\u53d1\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605attachInterrupt\uff08\uff09\u51fd\u6570\u3002\u4e0d\u5efa\u8bae\u4f7f\u7528\u5f15\u811a0\u548c1\u4f5c\u4e3a\u4e2d\u65ad\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e5f\u662f\u7528\u4e8e\u4e0eLinux\u5904\u7406\u5668\u901a\u4fe1\u7684\u786c\u4ef6\u4e32\u884c\u7aef\u53e3\u3002\u5f15\u811a7\u8fde\u63a5\u5230AR9331\u5904\u7406\u5668\uff0c\u5c06\u6765\u53ef\u80fd\u88ab\u7528\u4f5c\u63e1\u624b\u4fe1\u53f7\u3002\u5982\u679c\u6253\u7b97\u5c06\u5176\u7528\u4f5c\u4e2d\u65ad\uff0c\u5c0f\u5fc3\u53ef\u80fd\u4f1a\u6709\u51b2\u7a81\u3002\n\n\nPWM: 3, 5, 6, 9, 10, 11, \u548c 13. \u7528analogWrite\uff08\uff09\u51fd\u6570\u63d0\u4f9b8\u4f4dPWM\u8f93\u51fa\u3002\n\n\nSPI: ICSP header. \u8fd9\u4e9b\u5f15\u811a\u652f\u6301\u4f7f\u7528SPI\u5e93\u7684SPI\u901a\u4fe1\u3002\u8bf7\u6ce8\u610f\uff0cSPI\u5f15\u811a\u6ca1\u6709\u8fde\u63a5\u5230\u4efb\u4f55\u6570\u5b57I / O\u5f15\u811a\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f4d\u4e8eUno\u4e0a\uff0c\u5b83\u4eec\u4ec5\u5728ICSP\u8fde\u63a5\u5668\u4e0a\u53ef\u7528\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u6709\u4f7f\u7528SPI\u7684shield\uff0c\u4f46\u6ca1\u67096\u9488ICSP\u8fde\u63a5\u5668\u8fde\u63a5\u5230Seeeduino Cloud\u76846\u5f15\u811aICSP\u63a5\u5934\uff0c\u5219shield\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002SPI\u5f15\u811a\u4e5f\u8fde\u63a5\u5230AR9331 gpio\u5f15\u811a\uff0c\u5b83\u5df2\u7ecf\u5728SPI\u63a5\u53e3\u7684\u8f6f\u4ef6\u4e2d\u5b9e\u73b0\u3002\u8fd9\u610f\u5473\u7740ATMega32u4\u548cAR9331\u4e5f\u53ef\u4ee5\u4f7f\u7528SPI\u534f\u8bae\u8fdb\u884c\u901a\u4fe1\u3002\n\n\nAnalog Inputs: Seeeduino Cloud\u670912\u4e2a\u6a21\u62df\u8f93\u5165\uff0c\u6807\u8bb0\u4e3aA0\u81f3A11\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u4f5c\u6570\u5b57I / O\u3002\u5f15\u811aA0-A5\u51fa\u73b0\u5728\u4e0eUno\u76f8\u540c\u7684\u4f4d\u7f6e; \u8f93\u5165A6-A11\u5206\u522b\u4f4d\u4e8e\u6570\u5b57I / O\u5f15\u811a4,6,8,9,10\u548c12\u4e0a\u3002\u6bcf\u4e2a\u6a21\u62df\u8f93\u5165\u63d0\u4f9b10\u4f4d\u5206\u8fa8\u7387\uff08\u53731024\u4e2a\u4e0d\u540c\u7684\u503c\uff09\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6a21\u62df\u8f93\u5165\u4ece0\u52305\u4f0f\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u4f7f\u7528AREF\u5f15\u811a\u548canalogReference\uff08\uff09\u529f\u80fd\u6765\u66f4\u6539\u5176\u8303\u56f4\u7684\u4e0a\u9650\u3002\n\n\nAREF. \u6a21\u62df\u8f93\u5165\u7684\u53c2\u8003\u7535\u538b\u3002\u4e0eanalogReference()\u4e00\u8d77\u4f7f\u7528.\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\nSeeeduino Cloud \u67092\u4e2a\u5904\u7406\u5668\u3002 \u5176\u4e2d\u4e00\u4e2a\u662f\u7c7b\u4f3cLeonardo\u7684ATmega32U4. \u53e6\u5916\u4e00\u4e2a\u662fAtheros 9331, \u8fd0\u884cLinux\u548cOpenWRT wireless stack, \u4f7f\u677f\u53ef\u4ee5\u8fde\u63a5\u5230WiFi\u548c\u4ee5\u592a\u7f51\u3002 \u4f7f\u7528 \nYun Bridge Library\n, \u53ef\u4ee5\u901a\u8fc7Arduino\u5728Linux\u7cfb\u7edf\u4e0a\u8c03\u7528\u7a0b\u5e8f\u6216\u81ea\u5b9a\u4e49\u811a\u672c\u6765\u8fde\u63a5\u5404\u79cd\u4e92\u8054\u7f51\u670d\u52a1\u3002\n\n\nATmega32U4 \u7a0b\u5e8f\n\n\nATmega32U4\u4f7f\u7528\nArduino\u8f6f\u4ef6\uff08IDE\uff09\n\u7f16\u7a0b\uff0c\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5\uff0c\u8bf7\u70b9\u51fb\n\u6b64\u5904\n\u8fdb\u884c\u5b89\u88c5\u8bf4\u660e\u3002\n\n\n\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\uff1a\n\n\n\n\n\u83b7\u53d6Micro-USB\u7535\u7f06\n\n\n\u60a8\u9996\u5148\u9700\u8981Micro-USB\u7535\u7f06; Android\u624b\u673a\u7684\u6570\u636e\u7ebf\u4e5f\u53ef\u4ee5\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n\u4e70\u4e00\u4e2a\u3002\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\u5c0f\u5fc3\u8fde\u63a5 micro USB \u63a5\u53e3, \u5426\u5219\u53ef\u80fd\u4f1a\u4f7f\u63d2\u5ea7\u8131\u843d\u3002\n\n\n\n\n\n\n\u8fde\u63a5\u786c\u4ef6\n\n\n\u5c06USB\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u6216\u5916\u90e8\u7535\u6e90\u7ed9Seeeduino Cloud\u4f9b\u7535\u3002\u4f7f\u7528USB\u7535\u7f06\u5c06Arduino\u677f\u8fde\u63a5\u5230\u7535\u8111\u3002\u7eff\u8272\u7535\u6e90LED\uff08\u6807\u6709PWR\uff09\u5e94\u8be5\u70b9\u4eae\u3002\n\n\n\n\n\n\n\n\nFor Windows\n\n\nWindows\u7248\u672c\u7684Arduino Software\uff08IDE\uff09\u5df2\u7ecf\u5305\u542b\u9a71\u52a8\u7a0b\u5e8f\u3002\u5b89\u88c5\u5b83\u65f6\uff0c\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5b89\u88c5\u5b83\u4eec\u3002\u8fde\u63a5\u60a8\u7684Seeeduino Yun\u7684\u65f6\u5019\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5c06\u81ea\u52a8\u5b89\u88c5\u3002\n\n\nFor MAC\n\n\n\u7b2c\u4e00\u6b21\u5c06Seeeduino Cloud\u63d2\u5165Mac\uff0c\u201cKeyboard Setup Assistant\u201d\u5c06\u4f1a\u8df3\u51fa\u3002\u6ca1\u6709\u4efb\u4f55\u914d\u7f6e\u4e0eSeeeduino Yun\u76f8\u5173; \u60a8\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb\u7a97\u53e3\u5de6\u4e0a\u65b9\u7684\u7ea2\u8272\u6309\u94ae\u6765\u5173\u95ed\u6b64\u5bf9\u8bdd\u6846\u3002\n\n\nFor Linux\n\n\n\u65e0\u9700\u4e3aUbuntu 10.0.4\u53ca\u66f4\u9ad8\u7248\u672c\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f46\u8bf7\u786e\u4fdd\u7aef\u53e35353\u672a\u88ab\u9632\u706b\u5899\u963b\u6b62\u3002\n\n\n\u5f00\u59cb\u4f60\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\n\n\n\u6253\u5f00 LED blink \u7a0b\u5e8f: File \n Examples \n01.Basics \n Blink.\n\n\n\n\n\u9009\u62e9\u4f60\u7684board type and port\n\n\n\u4f60\u9700\u8981\u901a\u8fc7 Tools \n Board menu \u6765\u9009\u62e9\u76f8\u5e94\u7684 Arduino or Genuino board.\n\n\n\n\n\u901a\u8fc7 Tools -\n Serial Port \u83dc\u5355\u6765\u9009\u62e9\u7aef\u53e3. \u7c7b\u4f3c COM3 \u6216\u8005\u66f4\u9ad8(COM1 \u548c COM2 \u901a\u5e38\u4f5c\u4e3a\u786c\u4ef6\u4e32\u53e3\u9884\u7559). \u8981\u4e86\u89e3\u5177\u4f53\u54ea\u4e2a\u7aef\u53e3\uff0c\u60a8\u53ef\u4ee5\u65ad\u5f00\u7535\u8def\u677f\u5e76\u91cd\u65b0\u6253\u5f00; \u6d88\u5931\u7684\u5c31\u662fArduino\u6216Genuino. \u91cd\u65b0\u8fde\u63a5\u7535\u8def\u677f\u5e76\u9009\u62e9\u8be5\u4e32\u884c\u7aef\u53e3\u3002\u5f53\u60a8\u7684\u7535\u8def\u677f\u5728WiFi\u4e0a\u6b63\u786e\u914d\u7f6e\u65f6\uff0c\u60a8\u5c06\u5728\u201c\u7aef\u53e3\u201d\u5217\u8868\u4e2d\u627e\u5230\u5b83\uff0c\u5982\u5c4f\u5e55\u622a\u56fe\u6240\u793a\u3002\n\n\n\n\n\u4e0a\u4f20\u7a0b\u5e8f\n\n\n\u73b0\u5728\uff0c\u53ea\u9700\u70b9\u51fbIDE\u4e2d\u7684\u201cUpload\u201d\u6309\u94ae\u5373\u53ef\u3002\u7b49\u5f85\u51e0\u79d2\u949f - \u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u7684RX\u548cTX LED\u95ea\u70c1\u3002\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u5219\u4f1a\u5728\u72b6\u6001\u680f\u4e2d\u663e\u793a\u201cDone uploading\u201d\u6d88\u606f\u3002\n\n\n\n\n\u4e0a\u4f20\u5b8c\u6210\u540e\u7684\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u7535\u8def\u677f\u4e0a\u7684LED\uff08D13\uff09\u5f00\u59cb\u95ea\u70c1\uff08\u7eff\u8272\uff09\u3002\u5982\u679c\u662f\uff0c\u606d\u559c\uff01\u4f60\u5df2\u7ecf\u5f97\u5230\u4e86Arduino\u7684\u8fd0\u884c\u3002\u5982\u679c\u60a8\u6709\u95ee\u9898\uff0c\u8bf7\u53c2\u9605\u6545\u969c\u6392\u9664\u5efa\u8bae\u3002\n\n\n\u5728ATHEROS AR9331\u4e0a\u7f16\u7a0b\n\n\n\u7f51\u7edc\u914d\u7f6e\n\n\nSeeeduino Cloud\u5177\u6709WiFi\u63a5\u53e3\u548cLAN\u7aef\u53e3\u3002\u4ed6\u4eec\u90fd\u6709IP\u5730\u5740\uff0c\u53ef\u4ee5\u7528\u4e8e\u4e92\u8054\u7f51\u8fde\u63a5\u548c\u8bbe\u5907\u7ba1\u7406\u3002\n\n\n1. Wi-Fi AP Mode\n\n\n\u5f53\u60a8\u7b2c\u4e00\u6b21\u6253\u5f00Seeeduino Cloud\u65f6\uff0c\u5c06\u4f1a\u663e\u793aWi-Fi\u8fde\u63a5\u4e2d\u663e\u793a\u7684\u4e0d\u5b89\u5168WiFi\u7f51\u7edcSeeeduinoCloud-AXXXX\u3002\u60a8\u53ef\u4ee5\u5c06\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\uff0c\u5982\u4e0b\u6240\u793a\u3002\u60a8\u7684\u8ba1\u7b97\u673a\u5c06\u83b7\u5f97\u6b64\u7f51\u7edc\u7684IP\u5730\u5740 \n192.168.240.xxx\n\u3002Seeeduino Cloud\u7684\u9ed8\u8ba4IP\u5730\u5740\u4e3a \n192.168.240.1\n\u3002\n\n\n2. Wi-Fi STA Mode\n\n\n\u8fde\u63a5SeeeduinoCloud-AXXXX\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u641c\u7d22\u6846\u4e2d\u8f93\u5165172.31.255.254\u6216192.168.240.1\uff0c\u60a8\u5c06\u4f7f\u7528Web UI\u8fde\u63a5\u5230Seeeduino Cloud\u3002\u9ed8\u8ba4\u5bc6\u7801\u4e3a\u201cseeeduino\u201d\uff0c\u7136\u540e\u5355\u51fbLOG IN\u3002\n\n\n\n\n\u70b9\u51fb \"SYSTEM\", \u9009\u62e9\u60a8\u7684Wi-Fi\u7f51\u7edc\uff0c\u8f93\u5165\u5bc6\u7801\uff0c\u7136\u540e\u70b9\u51fb \"CONFIGURE \n RESTART\".\n\n\n\n\n3. Onboard Ethernet\n\n\n\u5f53\u60a8\u4f7f\u7528\u4ee5\u592a\u7f51\u7535\u7f06\u5c06Seeeduino Cloud\u8fde\u63a5\u5230\u6709\u7ebf\u7f51\u7edc\u65f6\uff0c\u5c06\u5c1d\u8bd5\u901a\u8fc7DHCP\u81ea\u52a8\u8fde\u63a5\u3002\u8be5\u677f\u5c06\u663e\u793a\u5728\u7f51\u7edc\u5217\u8868\u4e0a\uff0c\u5c31\u50cf\u901a\u8fc7WiFi\u4e00\u6837\u3002\n\n\nTerminal\n\n\n\u60a8\u53ef\u4ee5\u901a\u8fc7SSH\u8bbf\u95eeSeeeduino Cloud\u7684\u7ec8\u7aef\uff0c\u4ee5\u7f16\u7a0b\u6216\u914d\u7f6eATHEROS AR9331\u3002\n\n\n\n\n\u4e0b\u8f7d SSH client \u4f8b\u5982 \nputty\n\n\n\u4f7f\u7528Seeeduino Cloud\u7684IP\u5730\u5740\u5e76\u8fd0\u884cSSH client\u3002\n\n\n\n\nusername: root\npassword: seeeduino\n\n\n\n\n\n\nYun Bridge Library\n\n\nThe Bridge Library \u7b80\u5316\u4e86Arduino Board\u548cDragino HE\u4e4b\u95f4\u7684\u901a\u8baf\u3002 \u6765\u81eaAVR\u7684Bridge commands\u7531HE\u4e0a\u7684Python\u6765\u89e3\u6790.\n\n\n\u4ed6\u7684\u4f5c\u7528\u5982\u4e0b\uff1a\n\n\n\n\n\u5728Arduino\u8981\u6c42\u7684\u65f6\u5019\u5728GNU / Linux\u7aef\u6267\u884c\u7a0b\u5e8f\n\n\n\u63d0\u4f9b\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4\uff0c\u7528\u4e8e\u5171\u4eab\u6570\u636e\uff0c\u5982Arduino\u548cInternet\u4e4b\u95f4\u7684\u4f20\u611f\u5668\u8bfb\u6570;\n\n\n\u63a5\u6536\u6765\u81eaInternet\u7684\u547d\u4ee4\uff0c\u5e76\u5c06\u5176\u76f4\u63a5\u4f20\u9012\u5230Arduino\u3002\n\n\n\n\nArduino Official Website\n\u6709\u8be6\u7ec6\u7684\u89e3\u91ca\u548c\u5f88\u591a\u4f8b\u5b50\u6765\u5c55\u793a\u5982\u4f55\u4f7f\u7528Bridge. \u4ee5\u4e0b\u662f\u4f7f\u7528Bridge Library\u7684\u4e00\u4e9b\u793a\u4f8b.\n\n\nExample 1: \u8ddfLinux\u6253\u62db\u547c\n\n\nThis example is a hello test between the Arduino and Seeeduino Cloud. The example can be found on the Arduino IDE\n File \n Examples \n Bridge \n ConsoleRead. A tutorial of this example can be found \nhere\n. You can see the code below with some additional details to understand it with the Seeeduino Cloud:\n\u8fd9\u4e2a\u4f8b\u5b50\u662fArduino\u548cSeeeduino Cloud\u4e4b\u95f4\u7684\u4e00\u4e2ahello\u6d4b\u8bd5\u3002\u8be5\u793a\u4f8b\u53ef\u4ee5\u5728Arduino IDE-\n File - \n Examples - \n Bridge - \n ConsoleRead\u4e2d\u627e\u5230\u3002\u8fd9\u4e2a\u4f8b\u5b50\u7684\u6559\u7a0b\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n\u627e\u5230\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u67e5\u770b\u4e00\u4e9b\u5176\u4ed6\u8be6\u7ec6\u4fe1\u606f:\n\n\n#include \nConsole.h\n\n\nString name;\n\nvoid setup() {\n    // Initialize Console and wait for port to open:\n    Bridge.begin();\n    Console.begin();\n\n    // Wait for Console port to connect\n    while (!Console);\n\n    Console.println(\nHi, what\ns your name?\n);\n}\n\nvoid loop() {\n    if (Console.available() \n 0) {\n        char c = Console.read(); // read the next char received\n        // look for the newline character, this is the last character in the string\n        if (c == \n\\n\n) {\n            //print text with the name received\n            Console.print(\nHi \n);\n            Console.print(name);\n            Console.println(\n! Nice to meet you!\n);\n            Console.println();\n            // Ask again for name and clear the old name\n            Console.println(\nHi, what\ns your name?\n);\n            name = \n;  // clear the name string\n        }\n        else {       // if the buffer is empty Cosole.read() returns -1\n            name += c; // append the read char from Console to the name string\n        }\n    }\n}\n\n\n\n\n\u4f8b\u7a0b 2: \u4e0a\u4f20\u6570\u636e\u5230\u7269\u8054\u7f51\u670d\u52a1\u5668\n\n\n\u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u5c06\u6570\u636e\u8bb0\u5f55\u5230\u516c\u5171IoT\u670d\u52a1\u5668\u201cXively\u201d\u3002\u793a\u4f8b\u662f\u4eceArduino IDE-\n File - \n Examples - \n Bridge - \n XivelyClient. \u8fd9\u4e2a\u4f8b\u5b50\u7684\u6559\u7a0b\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n\u8fd9\u91cc\u53c2\u8003\u3002\u4e0a\u4f20\u7a0b\u5e8f\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\uff1a\n\n\n\n\nSeeeduino Cloud \u63a5\u5165\u4e92\u8054\u7f51\u3002\n\n\n\u6839\u636e\u6559\u7a0b\u8f93\u5165\u60a8\u7684FEED ID\u548cAPI KEY\u3002\u6ce8\u610f\uff0cFEED ID\u5e94\u5728\u53cc\u5f15\u53f7\u201c\u201d\u5185\u3002\n\n\n\n\n/*\n  Xively sensor client with Strings\n\n This sketch connects an analog sensor to Xively,\n using an Arduino Y\u00fan.\n\n created 15 March 2010\n updated 27 May 2013\n by Tom Igoe\n\n http://arduino.cc/en/Tutorial/YunXivelyClient\n\n */\n#include \nProcess.h\n\n#include \npasswords.h\n      // contains my passwords, see below\n\n/*\n  NOTE: passwords.h is not included with this repo because it contains my passwords.\n You need to create it for your own version of this application.  To do so, make\n a new tab in Arduino, call it passwords.h, and include the following variables and constants:\n\n #define APIKEY        \nfoo\n                  // replace your pachube api key here\n #define FEEDID        0000                   // replace your feed ID\n #define USERAGENT     \nmy-project\n           // user agent is the project name\n */\n\n// set up net client info:\nconst unsigned long postingInterval = 60000;  //delay between updates to xively.com\nunsigned long lastRequest = 0;      // when you last made a request\nString dataString = \n;\n\nvoid setup() {\n    // start serial port:\n    Bridge.begin();\n    Serial.begin(9600);\n\n    while (!Serial);   // wait for Network Serial to open\n    Serial.println(\nXively client\n);\n\n    // Do a first update immediately\n    updateData();\n    sendData();\n    lastRequest = millis();\n}\n\nvoid loop() {\n    // get a timestamp so you can calculate reading and sending intervals:\n    long now = millis();\n\n    // if the sending interval has passed since your\n    // last connection, then connect again and send data:\n    if (now - lastRequest \n= postingInterval) {\n        updateData();\n        sendData();\n        lastRequest = now;\n    }\n}\n\nvoid updateData() {\n    // convert the readings to a String to send it:\n    dataString = \nTemperature,\n;\n    dataString += random(10) + 20;\n    // add pressure:\n    dataString += \n\\nPressure,\n;\n    dataString += random(5) + 100;\n}\n\n// this method makes a HTTP connection to the server:\nvoid sendData() {\n    // form the string for the API header parameter:\n    String apiString = \nX-ApiKey: \n;\n    apiString += APIKEY;\n\n    // form the string for the URL parameter:\n    String url = \nhttps://api.xively.com/v2/feeds/\n;\n    url += FEEDID;\n    url += \n.csv\n;\n\n    // Send the HTTP PUT request\n\n    // Is better to declare the Process here, so when the\n    // sendData function finishes the resources are immediately\n    // released. Declaring it global works too, BTW.\n    Process xively;\n    Serial.print(\n\\n\\nSending data... \n);\n    xively.begin(\ncurl\n);\n    xively.addParameter(\n-k\n);\n    xively.addParameter(\n--request\n);\n    xively.addParameter(\nPUT\n);\n    xively.addParameter(\n--data\n);\n    xively.addParameter(dataString);\n    xively.addParameter(\n--header\n);\n    xively.addParameter(apiString);\n    xively.addParameter(url);\n    xively.run();\n    Serial.println(\ndone!\n);\n\n    // If there\ns incoming data from the net connection,\n    // send it out the Serial:\n    while (xively.available() \n 0) {\n        char c = xively.read();\n        Serial.write(c);\n    }\n}\n\n\n\n\n\n\n\u4f8b\u7a0b 3: \u5c06\u6570\u636e\u8bb0\u5f55\u5728USB\u95ea\u5b58\u4e2d\n\n\n\u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u5c06\u6570\u636e\u8bb0\u5f55\u5230USB\u95ea\u5b58\u3002\u672c\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u7a0b\u5e8f\u4e0e\n\u6b64\u5904\n\u76f8\u540c\u3002\u5e76\u4e14\u53ef\u4ee5\u5728\u90a3\u91cc\u627e\u5230\u6e90\u4ee3\u7801\u3002Seeeduino Cloud\u5c06\u81ea\u52a8\u5c06USB\u95ea\u5b58\u6620\u5c04\u5230\u76ee\u5f55/ mnt /sda1\u3002\u800c\u7a0b\u5e8f\u4f1a\u5c06\u4f20\u611f\u5668\u6570\u636e\u9644\u52a0\u5230\u6587\u4ef6/mnt/sda1/data/datalog.csv\u3002\u56e0\u6b64\uff0c\u5728\u8fd0\u884c\u7a0b\u5e8f\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5728USB\u95ea\u5b58\u4e2d\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u3002\n\n\n#include \nFileIO.h\n     //FileIO class allow user to operate Linux file system\n#include \nConsole.h\n    //Console class provide the interactive between IDE and Yun Shield\nvoid setup() {\n    // Initialize the Console\n    Bridge.begin();\n    Console.begin();\n    FileSystem.begin();\n    while(!Console);   // wait for Serial port to connect.\n    Console.println(\nFilesystem datalogger\\n\n);\n}\nvoid loop () {\n    // make a string that start with a timestamp for assembling the data to log:\n    String dataString;\n    dataString += getTimeStamp();\n    dataString += \n , \n;\n    // read three sensors and append to the string:\n    for (int analogPin = 0; analogPin \n 3; analogPin++) {\n        int sensor = analogRead(analogPin);\n        dataString += String(sensor);\n        if (analogPin \n 2) {\n            dataString += \n,\n;    // separate the values with a comma\n        }\n    }\n    // open the file. note that only one file can be open at a time,\n    // so you have to close this one before opening another.\n    // The USB flash card is mounted at \n/mnt/sda1\n by default\n    File dataFile = FileSystem.open(\n/mnt/sda1/data/datalog.csv\n, FILE_APPEND);\n    // if the file is available, write to it:\n    if (dataFile) {\n        dataFile.println(dataString);\n        dataFile.close();\n        // print to the serial port too:\n        Console.println(dataString);\n    }\n    // if the file isn\nt open, pop up an error:\n    else {\n        Console.println(\nerror opening datalog.csv\n);\n    }\n    delay(15000);  //Write every 15 seconds\n}\n// getTimeStamp function return a string with the time stamp\n// Yun Shield will call the Linux \ndate\n command and get the time stamp\nString getTimeStamp() {\n    String result;\n    Process time;\n    // date is a command line utility to get the date and the time\n    // in different formats depending on the additional parameter\n    time.begin(\ndate\n);\n    time.addParameter(\n+%D-%T\n);   // parameters: D for the complete date mm/dd/yy\n    //              T for the time hh:mm:ss\n    time.run();   // run the command\n    // read the output of the command\n    while(time.available()\n0) {\n        char c = time.read();\n        if(c != \n\\n\n)\n        result += c;\n    }\n    return result;\n}\n\n\n\n\n\n\n\u7269\u8054\u7f51\u670d\u52a1\u5668\u914d\u7f6e\n\n\nIoT Server\u9875\u9762\u5141\u8bb8\u60a8\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u8bf8\u5982Xively\u4e4b\u7c7b\u7684IoT\u7f51\u7ad9\uff0c\u800c\u60a8\u53ea\u9700\u8981\u5c06\u4f20\u611f\u5668\u6570\u636e\u5199\u5165\u4e32\u53e3\u3002\n\n\n\n\n\u7a0b\u5e8f\u5982\u4e0b\uff1a\n\n\n/*\n  Simulate UART TX Data\n\n This sketch simulate Temperature and Humidity data to UART.\n\n To test the pass through feature for different IoT service\n\n created 25 Apr 2014\n by Dragino Technology Co., Limited\n\n Reference:\n http://wiki.dragino.com/index.php?title=Xively#Upload_data_to_Xively_use_Pass_Through_Mode\n\n */\nString dataString = \n;\n\nvoid setup() {\n    Serial1.begin(115200);\n}\n\nvoid loop() {\n    dataString = \ntemp:\n;\n    dataString += random(10) + 20;\n    Serial1.println(dataString);  // upload Temperature data\n    delay(20000);\n    dataString = \nhumidity:\n;\n    dataString += random(5) + 70;  // upload humidity data\n    Serial1.println(dataString);\n    delay(20000);\n}\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\u539f\u7406\u56fe\n\n\n\n\nSeeeduino Cloud Eagle file\n\n\nSeeeduino Cloud PDF file\n\n\n\n\n\n\n\n\n\u56fa\u4ef6\n\n\n\n\nSeeeduino Cloud Firmware\n\n\n\n\n\n\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\nGetting Started with Arduino\n\n\nArduino Language Reference\n\n\nDownload the Arduino Software(IDE)\n\n\nArduino FAQ\n\n\nArduino Introduction\n\n\nWikipedia page for Arduino\n\n\nArduino Yun Wiki\n\n\nGetting started with Arduino Yun\n\n\nYun Bridge Library\n\n\n\n\n\n\n\n\nFAQ\n\n\n\n\n\u4ec0\u4e48\u662f Yun Bridge Library?\n\n\n\n\nYun Bridge Library \u7528\u4e8eMPU\u548cMCU\u4e4b\u95f4\u901a\u4fe1\u7684\u673a\u5236\u3002 Seeeduino Cloud \u4f7f\u7528 Yun Bridge Library\uff0c \u8ba9Arduino\u7528\u6237\u8f7b\u677e\u6784\u5efa\u5176\u7269\u8054\u7f51\u9879\u76ee\u3002", 
            "title": "Seeeduino Cloud"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_1", 
            "text": "\u7269\u8054\u7f51    \u667a\u80fd\u5bb6\u5c45  \u5b66\u4e60   \u8fd9\u91cc\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\u3002     \u7b80\u5355\u7684Wi-Fi Messager  \u5c06\u6570\u636e\u53d1\u9001\u5230Google\u6587\u6863  \u592a\u9633\u80fd\u7535\u6c60\u677f\u76d1\u63a7\u7cfb\u7edf           \u9a6c\u4e0a\u505a\u4e00\u4e2a  \u9a6c\u4e0a\u505a\u4e00\u4e2a  \u9a6c\u4e0a\u505a\u4e00\u4e2a", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_2", 
            "text": "\u4e0eArduino Yun\u517c\u5bb9  \u57fa\u4e8eDragino WiFi IoT\u6a21\u5757HE  \u5185\u7f6e\u5f00\u6e90OpenWrt\u7cfb\u7edf  \u652f\u6301 2.4Ghz WiFi, 802.11 b/g/n  \u652f\u6301\u4ee5\u592a\u7f51  \u652f\u6301 USB 2.0  \u677f\u8f7dGrove\u8fde\u63a5\u5668", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_3", 
            "text": "\u56e0\u4e3aSeeeduino Cloud\u6709\u4e24\u4e2a\u5904\u7406\u5668\uff0c\u6240\u4ee5\u8fd9\u4e00\u8282\u663e\u793a\u4e86\u4e24\u4e2a\u5355\u72ec\u8868\u683c\u4e2d\u6bcf\u4e2a\u5904\u7406\u5668\u7684\u7279\u5f81\u3002  Dragino HE\u6a21\u5757     \u53c2\u6570  \u503c      CPU  ATHEROS AR9331    Clock Speed  400MHz    RAM  64MB    Flash  16MB    OS  OpenWrt    Interfaces  2 x RJ45, 1 x USB Host, 1 x UART, 14 multiplex GPIOs    Power  3.3V Power Input    WiFi  Support 150M 2.4Ghz WiFi, 802.11 b/g/n     AVR Arduino\u5fae\u63a7\u5236\u5668     \u53c2\u6570  \u503c      Microcontroller  ATmega32u4    Flash Memory  32KB    SRAM  2.5kB    EEPROM  1kB    Clock Speed  16MHz    Operating Voltage  5V    Digital I/O Pins  20    PWM Channels  7    Analog Input Channels  12", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_4", 
            "text": "\u4e0b\u56fe\u663e\u793a\u4e86Seeeduino Cloud\u786c\u4ef6\u529f\u80fd\u7684\u6982\u8ff0\u3002\u5f15\u811a\u56fe\u4e2d\u663e\u793a\u4e86Seeeduino Cloud\u5404\u79cd\u5f15\u811a\u7684\u529f\u80fd\u3002\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u5feb\u901f\u53c2\u8003\u3002    RJ45\u4ee5\u592a\u7f51\u7aef\u53e3 \nLAN\u7aef\u53e3\u8fde\u63a5\u5230ATHEROS AR9331\uff0c\u5e76\u5177\u6709\u81ea\u5df1\u7684IP\u5730\u5740\uff0c\u53ef\u7528\u4e8eInternet\u8fde\u63a5\u548c\u8bbe\u5907\u7ba1\u7406\u3002  USB \u8f93\u5165 \nUSB\u7aef\u53e3\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230PC\u8fdb\u884c\u7f16\u7a0b\u548c\u4e0a\u7535\u3002Micro USB\u662f\u5927\u591a\u6570Android\u624b\u673a\u548c\u5176\u4ed6\u8bbe\u5907\u4e2d\u666e\u904d\u5b58\u5728\u7684USB\u7248\u672c\u3002\u4f60\u5bb6\u91cc\u53ef\u80fd\u6709\u51e0\u5341\u6839\u8fd9\u4e9b\u6570\u636e\u7ebf\u3002  USB HOST \nSeeeduino Cloud\u63d0\u4f9bUSB HOST\u529f\u80fd\uff0c\u4f7f\u5176\u80fd\u591f\u8fde\u63a5\u5230\u5404\u79cdUSB\u8bbe\u5907\uff0c\u5982\u7f51\u7edc\u6444\u50cf\u5934\uff0cUSB\u9a71\u52a8\u5668\uff0c\u952e\u76d8\uff0c\u64cd\u7eb5\u6746\u7b49\u3002  32U4 RST \n\u630932U4 Reset \u6309\u94ae\u5bf9ATmega32U4 MCU\u8fdb\u884c\u590d\u4f4d. \u901a\u5e38\uff0c\u5b83\u7528\u4e8e\u7a0b\u5e8f\u590d\u4f4d.  SYS RST \n\u6309\u4e0b\u7cfb\u7edf\u590d\u4f4d\u6309\u94ae\u5c06\u91cd\u65b0\u542f\u52a8Linux\u7cfb\u7edf\u3002  Wi-Fi RST \nWi-Fi\u91cd\u7f6e\u6309\u94ae\u4ec5\u652f\u6301\u957f\u6309\u30025\u79d2\u949f\u540e\u6309\u4e0b\u5e76\u91ca\u653e\uff0c\u5c06\u91cd\u7f6eWiFi\u8bbe\u7f6e\u3002\u5176\u4ed6\u8bbe\u7f6e\u5c06\u88ab\u4fdd\u7559\u3002\u5982\u679c\u572830\u79d2\u540e\u6309\u4e0b\u5e76\u91ca\u653e\u6309\u94ae\uff0c\u5219\u4f1a\u5c06\u6240\u6709\u8bbe\u7f6e\u91cd\u7f6e\u4e3a\u51fa\u5382\u9ed8\u8ba4\u503c\u3002  Grove Connectors \nSeeedStudio\u5177\u6709\u652f\u6301I2C\u6216UART\u8fde\u63a5\u7684\u5404\u79cd\u4f20\u611f\u5668/\u8bbe\u5907\u3002\u53e6\u5916\uff0c\u6211\u4eec\u9500\u552e\u72ec\u7acb\u7684Grove\u8fde\u63a5\u5668\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5236\u4f5c\u81ea\u5df1\u7684\u4f20\u611f\u5668\u8fde\u63a5\u3002\u5982\u679c\u8981\u4f7f\u7528\u8fd9\u4e9b\u5f15\u811a\uff0cI2C Grove\u8fde\u63a5\u5668\u4e5f\u5206\u522b\u8fde\u63a5\u5230SDA\u548cSCL\u7684\u6a21\u62df\u5f15\u811aA4\u548cA5\u3002UART Grove\u8fde\u63a5\u5668\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a0\u548c1\uff0c\u7528\u4e8eRX\u548cTX\u3002  ICSP \n\u8fd9\u662fATmega32U4\u7684ICSP\u63a5\u53e3\uff0c\u5b83\u4f4d\u4e8eArduino Uno\uff0cDue\uff0cMega\u548cLeonardo\u517c\u5bb9\u786c\u4ef6\uff08\u4f8b\u5982\u5c4f\u853d\uff09\u7684\u6807\u51c6ICSP / SPI\u4f4d\u7f6e\u3002\u8be5\u7aef\u53e3\u4e2d\u7684SPI\u5f15\u811a\uff1aMISO\uff0cSCK\u548cMOSI\u4e5f\u5206\u522b\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a12,13\u548c11\uff0c\u5c31\u50cfArduino Uno\u90a3\u6837\u3002  I-PEX Connector \n\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5916\u90e8\u5929\u7ebf\u7684I-PEX\u8fde\u63a5\u5668\u3002   Pins \n\u56e0\u4e3aAtheros AR9331\u6240\u6709I / O\u7ebf\u90fd\u8fde\u63a5\u5230ATmega32U4\uff0c\u6240\u4ee5\u4e0d\u80fd\u8bbf\u95eeAtheros AR9331\u7684I / O\u5f15\u811a\u300232U4\u4e0a\u768420\u4e2a\u6570\u5b57\u5f15\u811a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u7528\u4f5c\u8f93\u5165\u6216\u8f93\u51fa\uff0c\u4f7f\u7528pinMode\uff08\uff09\uff0cdigitalWrite\uff08\uff09\u548cdigitalRead\uff08\uff09\u51fd\u6570\u3002\u5b83\u4eec\u5de5\u4f5c\u57285\u4f0f\u3002\u6bcf\u4e2a\u5f15\u811a\u53ef\u63d0\u4f9b\u6216\u63a5\u6536\u6700\u592740 mA\uff0c\u5e76\u5177\u670920-50 kOhms\u7684\u5185\u90e8\u4e0a\u62c9\u7535\u963b\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u65ad\u5f00\uff09\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u9488\u811a\u5177\u6709\u4e13\u95e8\u7684\u529f\u80fd\uff1a   Serial: 0 (RX) and 1 (TX).\u7528\u4e8eATmega32U4\u786c\u4ef6\u4e32\u884c\u63a5\u6536\uff08RX\uff09\u548c\u53d1\u9001\uff08TX\uff09TTL\u6570\u636e\u3002\u8bf7\u6ce8\u610f\uff0c\u5728Seeeduino Cloud\u4e2d\uff0cSerial\u7c7b\u662f\u6307USB\uff08CDC\uff09\u901a\u4fe1; \u5bf9\u4e8e\u5f15\u811a0\u548c1\u4e0a\u7684TTL\u4e32\u884c\uff0c\u4f7f\u7528Serial1\u7c7b\u3002Seeeduino Cloud\u4e0a\u7684ATmega32U4\u548cAR9331\u7684\u786c\u4ef6\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7528\u4e8e\u5728\u4e24\u4e2a\u5904\u7406\u5668\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u5982\u5728Linux\u7cfb\u7edf\u4e2d\u5e38\u89c1\u7684\u90a3\u6837\uff0c\u5728AR9331\u7684\u4e32\u884c\u7aef\u53e3\u4e0a\u7ed9\u63a7\u5236\u53f0\u4ee5\u8bbf\u95ee\u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u8bbf\u95eeLinux\u63d0\u4f9b\u7684\u7a0b\u5e8f\u548c\u5de5\u5177\u3002  TWI: 2 (SDA) and 3 (SCL). \u652f\u6301\u7528Wire\u5e93\u6587\u4ef6\u8fdb\u884cTWI\u901a\u8baf\u3002  External Interrupts: 3 (interrupt 0), 2 (interrupt 1), 0 (interrupt 2), 1 (interrupt 3) and 7 (interrupt 4). \u8fd9\u4e9b\u5f15\u811a\u53ef\u4ee5\u914d\u7f6e\u5728\u4f4e\u7535\u5e73\u503c\u89e6\u53d1\uff0c\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\u89e6\u53d1\uff0c\u6216\u503c\u7684\u53d8\u5316\u7684\u65f6\u5019\u89e6\u53d1\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605attachInterrupt\uff08\uff09\u51fd\u6570\u3002\u4e0d\u5efa\u8bae\u4f7f\u7528\u5f15\u811a0\u548c1\u4f5c\u4e3a\u4e2d\u65ad\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e5f\u662f\u7528\u4e8e\u4e0eLinux\u5904\u7406\u5668\u901a\u4fe1\u7684\u786c\u4ef6\u4e32\u884c\u7aef\u53e3\u3002\u5f15\u811a7\u8fde\u63a5\u5230AR9331\u5904\u7406\u5668\uff0c\u5c06\u6765\u53ef\u80fd\u88ab\u7528\u4f5c\u63e1\u624b\u4fe1\u53f7\u3002\u5982\u679c\u6253\u7b97\u5c06\u5176\u7528\u4f5c\u4e2d\u65ad\uff0c\u5c0f\u5fc3\u53ef\u80fd\u4f1a\u6709\u51b2\u7a81\u3002  PWM: 3, 5, 6, 9, 10, 11, \u548c 13. \u7528analogWrite\uff08\uff09\u51fd\u6570\u63d0\u4f9b8\u4f4dPWM\u8f93\u51fa\u3002  SPI: ICSP header. \u8fd9\u4e9b\u5f15\u811a\u652f\u6301\u4f7f\u7528SPI\u5e93\u7684SPI\u901a\u4fe1\u3002\u8bf7\u6ce8\u610f\uff0cSPI\u5f15\u811a\u6ca1\u6709\u8fde\u63a5\u5230\u4efb\u4f55\u6570\u5b57I / O\u5f15\u811a\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f4d\u4e8eUno\u4e0a\uff0c\u5b83\u4eec\u4ec5\u5728ICSP\u8fde\u63a5\u5668\u4e0a\u53ef\u7528\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u6709\u4f7f\u7528SPI\u7684shield\uff0c\u4f46\u6ca1\u67096\u9488ICSP\u8fde\u63a5\u5668\u8fde\u63a5\u5230Seeeduino Cloud\u76846\u5f15\u811aICSP\u63a5\u5934\uff0c\u5219shield\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002SPI\u5f15\u811a\u4e5f\u8fde\u63a5\u5230AR9331 gpio\u5f15\u811a\uff0c\u5b83\u5df2\u7ecf\u5728SPI\u63a5\u53e3\u7684\u8f6f\u4ef6\u4e2d\u5b9e\u73b0\u3002\u8fd9\u610f\u5473\u7740ATMega32u4\u548cAR9331\u4e5f\u53ef\u4ee5\u4f7f\u7528SPI\u534f\u8bae\u8fdb\u884c\u901a\u4fe1\u3002  Analog Inputs: Seeeduino Cloud\u670912\u4e2a\u6a21\u62df\u8f93\u5165\uff0c\u6807\u8bb0\u4e3aA0\u81f3A11\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u4f5c\u6570\u5b57I / O\u3002\u5f15\u811aA0-A5\u51fa\u73b0\u5728\u4e0eUno\u76f8\u540c\u7684\u4f4d\u7f6e; \u8f93\u5165A6-A11\u5206\u522b\u4f4d\u4e8e\u6570\u5b57I / O\u5f15\u811a4,6,8,9,10\u548c12\u4e0a\u3002\u6bcf\u4e2a\u6a21\u62df\u8f93\u5165\u63d0\u4f9b10\u4f4d\u5206\u8fa8\u7387\uff08\u53731024\u4e2a\u4e0d\u540c\u7684\u503c\uff09\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6a21\u62df\u8f93\u5165\u4ece0\u52305\u4f0f\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u4f7f\u7528AREF\u5f15\u811a\u548canalogReference\uff08\uff09\u529f\u80fd\u6765\u66f4\u6539\u5176\u8303\u56f4\u7684\u4e0a\u9650\u3002  AREF. \u6a21\u62df\u8f93\u5165\u7684\u53c2\u8003\u7535\u538b\u3002\u4e0eanalogReference()\u4e00\u8d77\u4f7f\u7528.", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_5", 
            "text": "Seeeduino Cloud \u67092\u4e2a\u5904\u7406\u5668\u3002 \u5176\u4e2d\u4e00\u4e2a\u662f\u7c7b\u4f3cLeonardo\u7684ATmega32U4. \u53e6\u5916\u4e00\u4e2a\u662fAtheros 9331, \u8fd0\u884cLinux\u548cOpenWRT wireless stack, \u4f7f\u677f\u53ef\u4ee5\u8fde\u63a5\u5230WiFi\u548c\u4ee5\u592a\u7f51\u3002 \u4f7f\u7528  Yun Bridge Library , \u53ef\u4ee5\u901a\u8fc7Arduino\u5728Linux\u7cfb\u7edf\u4e0a\u8c03\u7528\u7a0b\u5e8f\u6216\u81ea\u5b9a\u4e49\u811a\u672c\u6765\u8fde\u63a5\u5404\u79cd\u4e92\u8054\u7f51\u670d\u52a1\u3002  ATmega32U4 \u7a0b\u5e8f  ATmega32U4\u4f7f\u7528 Arduino\u8f6f\u4ef6\uff08IDE\uff09 \u7f16\u7a0b\uff0c\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5\uff0c\u8bf7\u70b9\u51fb \u6b64\u5904 \u8fdb\u884c\u5b89\u88c5\u8bf4\u660e\u3002  \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f  \u9996\u5148\uff0c\u4f60\u9700\u8981\uff1a   \u83b7\u53d6Micro-USB\u7535\u7f06  \u60a8\u9996\u5148\u9700\u8981Micro-USB\u7535\u7f06; Android\u624b\u673a\u7684\u6570\u636e\u7ebf\u4e5f\u53ef\u4ee5\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e70\u4e00\u4e2a\u3002      Warning  \u5c0f\u5fc3\u8fde\u63a5 micro USB \u63a5\u53e3, \u5426\u5219\u53ef\u80fd\u4f1a\u4f7f\u63d2\u5ea7\u8131\u843d\u3002    \u8fde\u63a5\u786c\u4ef6  \u5c06USB\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u6216\u5916\u90e8\u7535\u6e90\u7ed9Seeeduino Cloud\u4f9b\u7535\u3002\u4f7f\u7528USB\u7535\u7f06\u5c06Arduino\u677f\u8fde\u63a5\u5230\u7535\u8111\u3002\u7eff\u8272\u7535\u6e90LED\uff08\u6807\u6709PWR\uff09\u5e94\u8be5\u70b9\u4eae\u3002     For Windows  Windows\u7248\u672c\u7684Arduino Software\uff08IDE\uff09\u5df2\u7ecf\u5305\u542b\u9a71\u52a8\u7a0b\u5e8f\u3002\u5b89\u88c5\u5b83\u65f6\uff0c\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5b89\u88c5\u5b83\u4eec\u3002\u8fde\u63a5\u60a8\u7684Seeeduino Yun\u7684\u65f6\u5019\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5c06\u81ea\u52a8\u5b89\u88c5\u3002  For MAC  \u7b2c\u4e00\u6b21\u5c06Seeeduino Cloud\u63d2\u5165Mac\uff0c\u201cKeyboard Setup Assistant\u201d\u5c06\u4f1a\u8df3\u51fa\u3002\u6ca1\u6709\u4efb\u4f55\u914d\u7f6e\u4e0eSeeeduino Yun\u76f8\u5173; \u60a8\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb\u7a97\u53e3\u5de6\u4e0a\u65b9\u7684\u7ea2\u8272\u6309\u94ae\u6765\u5173\u95ed\u6b64\u5bf9\u8bdd\u6846\u3002  For Linux  \u65e0\u9700\u4e3aUbuntu 10.0.4\u53ca\u66f4\u9ad8\u7248\u672c\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f46\u8bf7\u786e\u4fdd\u7aef\u53e35353\u672a\u88ab\u9632\u706b\u5899\u963b\u6b62\u3002  \u5f00\u59cb\u4f60\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f  \u6253\u5f00 LED blink \u7a0b\u5e8f: File   Examples  01.Basics   Blink.   \u9009\u62e9\u4f60\u7684board type and port  \u4f60\u9700\u8981\u901a\u8fc7 Tools   Board menu \u6765\u9009\u62e9\u76f8\u5e94\u7684 Arduino or Genuino board.   \u901a\u8fc7 Tools -  Serial Port \u83dc\u5355\u6765\u9009\u62e9\u7aef\u53e3. \u7c7b\u4f3c COM3 \u6216\u8005\u66f4\u9ad8(COM1 \u548c COM2 \u901a\u5e38\u4f5c\u4e3a\u786c\u4ef6\u4e32\u53e3\u9884\u7559). \u8981\u4e86\u89e3\u5177\u4f53\u54ea\u4e2a\u7aef\u53e3\uff0c\u60a8\u53ef\u4ee5\u65ad\u5f00\u7535\u8def\u677f\u5e76\u91cd\u65b0\u6253\u5f00; \u6d88\u5931\u7684\u5c31\u662fArduino\u6216Genuino. \u91cd\u65b0\u8fde\u63a5\u7535\u8def\u677f\u5e76\u9009\u62e9\u8be5\u4e32\u884c\u7aef\u53e3\u3002\u5f53\u60a8\u7684\u7535\u8def\u677f\u5728WiFi\u4e0a\u6b63\u786e\u914d\u7f6e\u65f6\uff0c\u60a8\u5c06\u5728\u201c\u7aef\u53e3\u201d\u5217\u8868\u4e2d\u627e\u5230\u5b83\uff0c\u5982\u5c4f\u5e55\u622a\u56fe\u6240\u793a\u3002   \u4e0a\u4f20\u7a0b\u5e8f  \u73b0\u5728\uff0c\u53ea\u9700\u70b9\u51fbIDE\u4e2d\u7684\u201cUpload\u201d\u6309\u94ae\u5373\u53ef\u3002\u7b49\u5f85\u51e0\u79d2\u949f - \u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u7684RX\u548cTX LED\u95ea\u70c1\u3002\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u5219\u4f1a\u5728\u72b6\u6001\u680f\u4e2d\u663e\u793a\u201cDone uploading\u201d\u6d88\u606f\u3002   \u4e0a\u4f20\u5b8c\u6210\u540e\u7684\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u7535\u8def\u677f\u4e0a\u7684LED\uff08D13\uff09\u5f00\u59cb\u95ea\u70c1\uff08\u7eff\u8272\uff09\u3002\u5982\u679c\u662f\uff0c\u606d\u559c\uff01\u4f60\u5df2\u7ecf\u5f97\u5230\u4e86Arduino\u7684\u8fd0\u884c\u3002\u5982\u679c\u60a8\u6709\u95ee\u9898\uff0c\u8bf7\u53c2\u9605\u6545\u969c\u6392\u9664\u5efa\u8bae\u3002  \u5728ATHEROS AR9331\u4e0a\u7f16\u7a0b  \u7f51\u7edc\u914d\u7f6e  Seeeduino Cloud\u5177\u6709WiFi\u63a5\u53e3\u548cLAN\u7aef\u53e3\u3002\u4ed6\u4eec\u90fd\u6709IP\u5730\u5740\uff0c\u53ef\u4ee5\u7528\u4e8e\u4e92\u8054\u7f51\u8fde\u63a5\u548c\u8bbe\u5907\u7ba1\u7406\u3002  1. Wi-Fi AP Mode  \u5f53\u60a8\u7b2c\u4e00\u6b21\u6253\u5f00Seeeduino Cloud\u65f6\uff0c\u5c06\u4f1a\u663e\u793aWi-Fi\u8fde\u63a5\u4e2d\u663e\u793a\u7684\u4e0d\u5b89\u5168WiFi\u7f51\u7edcSeeeduinoCloud-AXXXX\u3002\u60a8\u53ef\u4ee5\u5c06\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\uff0c\u5982\u4e0b\u6240\u793a\u3002\u60a8\u7684\u8ba1\u7b97\u673a\u5c06\u83b7\u5f97\u6b64\u7f51\u7edc\u7684IP\u5730\u5740  192.168.240.xxx \u3002Seeeduino Cloud\u7684\u9ed8\u8ba4IP\u5730\u5740\u4e3a  192.168.240.1 \u3002  2. Wi-Fi STA Mode  \u8fde\u63a5SeeeduinoCloud-AXXXX\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u641c\u7d22\u6846\u4e2d\u8f93\u5165172.31.255.254\u6216192.168.240.1\uff0c\u60a8\u5c06\u4f7f\u7528Web UI\u8fde\u63a5\u5230Seeeduino Cloud\u3002\u9ed8\u8ba4\u5bc6\u7801\u4e3a\u201cseeeduino\u201d\uff0c\u7136\u540e\u5355\u51fbLOG IN\u3002   \u70b9\u51fb \"SYSTEM\", \u9009\u62e9\u60a8\u7684Wi-Fi\u7f51\u7edc\uff0c\u8f93\u5165\u5bc6\u7801\uff0c\u7136\u540e\u70b9\u51fb \"CONFIGURE   RESTART\".   3. Onboard Ethernet  \u5f53\u60a8\u4f7f\u7528\u4ee5\u592a\u7f51\u7535\u7f06\u5c06Seeeduino Cloud\u8fde\u63a5\u5230\u6709\u7ebf\u7f51\u7edc\u65f6\uff0c\u5c06\u5c1d\u8bd5\u901a\u8fc7DHCP\u81ea\u52a8\u8fde\u63a5\u3002\u8be5\u677f\u5c06\u663e\u793a\u5728\u7f51\u7edc\u5217\u8868\u4e0a\uff0c\u5c31\u50cf\u901a\u8fc7WiFi\u4e00\u6837\u3002  Terminal  \u60a8\u53ef\u4ee5\u901a\u8fc7SSH\u8bbf\u95eeSeeeduino Cloud\u7684\u7ec8\u7aef\uff0c\u4ee5\u7f16\u7a0b\u6216\u914d\u7f6eATHEROS AR9331\u3002   \u4e0b\u8f7d SSH client \u4f8b\u5982  putty  \u4f7f\u7528Seeeduino Cloud\u7684IP\u5730\u5740\u5e76\u8fd0\u884cSSH client\u3002   username: root\npassword: seeeduino   Yun Bridge Library  The Bridge Library \u7b80\u5316\u4e86Arduino Board\u548cDragino HE\u4e4b\u95f4\u7684\u901a\u8baf\u3002 \u6765\u81eaAVR\u7684Bridge commands\u7531HE\u4e0a\u7684Python\u6765\u89e3\u6790.  \u4ed6\u7684\u4f5c\u7528\u5982\u4e0b\uff1a   \u5728Arduino\u8981\u6c42\u7684\u65f6\u5019\u5728GNU / Linux\u7aef\u6267\u884c\u7a0b\u5e8f  \u63d0\u4f9b\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4\uff0c\u7528\u4e8e\u5171\u4eab\u6570\u636e\uff0c\u5982Arduino\u548cInternet\u4e4b\u95f4\u7684\u4f20\u611f\u5668\u8bfb\u6570;  \u63a5\u6536\u6765\u81eaInternet\u7684\u547d\u4ee4\uff0c\u5e76\u5c06\u5176\u76f4\u63a5\u4f20\u9012\u5230Arduino\u3002   Arduino Official Website \u6709\u8be6\u7ec6\u7684\u89e3\u91ca\u548c\u5f88\u591a\u4f8b\u5b50\u6765\u5c55\u793a\u5982\u4f55\u4f7f\u7528Bridge. \u4ee5\u4e0b\u662f\u4f7f\u7528Bridge Library\u7684\u4e00\u4e9b\u793a\u4f8b.  Example 1: \u8ddfLinux\u6253\u62db\u547c  This example is a hello test between the Arduino and Seeeduino Cloud. The example can be found on the Arduino IDE  File   Examples   Bridge   ConsoleRead. A tutorial of this example can be found  here . You can see the code below with some additional details to understand it with the Seeeduino Cloud:\n\u8fd9\u4e2a\u4f8b\u5b50\u662fArduino\u548cSeeeduino Cloud\u4e4b\u95f4\u7684\u4e00\u4e2ahello\u6d4b\u8bd5\u3002\u8be5\u793a\u4f8b\u53ef\u4ee5\u5728Arduino IDE-  File -   Examples -   Bridge -   ConsoleRead\u4e2d\u627e\u5230\u3002\u8fd9\u4e2a\u4f8b\u5b50\u7684\u6559\u7a0b\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u67e5\u770b\u4e00\u4e9b\u5176\u4ed6\u8be6\u7ec6\u4fe1\u606f:  #include  Console.h \n\nString name;\n\nvoid setup() {\n    // Initialize Console and wait for port to open:\n    Bridge.begin();\n    Console.begin();\n\n    // Wait for Console port to connect\n    while (!Console);\n\n    Console.println( Hi, what s your name? );\n}\n\nvoid loop() {\n    if (Console.available()   0) {\n        char c = Console.read(); // read the next char received\n        // look for the newline character, this is the last character in the string\n        if (c ==  \\n ) {\n            //print text with the name received\n            Console.print( Hi  );\n            Console.print(name);\n            Console.println( ! Nice to meet you! );\n            Console.println();\n            // Ask again for name and clear the old name\n            Console.println( Hi, what s your name? );\n            name =  ;  // clear the name string\n        }\n        else {       // if the buffer is empty Cosole.read() returns -1\n            name += c; // append the read char from Console to the name string\n        }\n    }\n}  \u4f8b\u7a0b 2: \u4e0a\u4f20\u6570\u636e\u5230\u7269\u8054\u7f51\u670d\u52a1\u5668  \u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u5c06\u6570\u636e\u8bb0\u5f55\u5230\u516c\u5171IoT\u670d\u52a1\u5668\u201cXively\u201d\u3002\u793a\u4f8b\u662f\u4eceArduino IDE-  File -   Examples -   Bridge -   XivelyClient. \u8fd9\u4e2a\u4f8b\u5b50\u7684\u6559\u7a0b\u53ef\u4ee5\u5728 \u8fd9\u91cc \u8fd9\u91cc\u53c2\u8003\u3002\u4e0a\u4f20\u7a0b\u5e8f\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\uff1a   Seeeduino Cloud \u63a5\u5165\u4e92\u8054\u7f51\u3002  \u6839\u636e\u6559\u7a0b\u8f93\u5165\u60a8\u7684FEED ID\u548cAPI KEY\u3002\u6ce8\u610f\uff0cFEED ID\u5e94\u5728\u53cc\u5f15\u53f7\u201c\u201d\u5185\u3002   /*\n  Xively sensor client with Strings\n\n This sketch connects an analog sensor to Xively,\n using an Arduino Y\u00fan.\n\n created 15 March 2010\n updated 27 May 2013\n by Tom Igoe\n\n http://arduino.cc/en/Tutorial/YunXivelyClient\n\n */\n#include  Process.h \n#include  passwords.h       // contains my passwords, see below\n\n/*\n  NOTE: passwords.h is not included with this repo because it contains my passwords.\n You need to create it for your own version of this application.  To do so, make\n a new tab in Arduino, call it passwords.h, and include the following variables and constants:\n\n #define APIKEY         foo                   // replace your pachube api key here\n #define FEEDID        0000                   // replace your feed ID\n #define USERAGENT      my-project            // user agent is the project name\n */\n\n// set up net client info:\nconst unsigned long postingInterval = 60000;  //delay between updates to xively.com\nunsigned long lastRequest = 0;      // when you last made a request\nString dataString =  ;\n\nvoid setup() {\n    // start serial port:\n    Bridge.begin();\n    Serial.begin(9600);\n\n    while (!Serial);   // wait for Network Serial to open\n    Serial.println( Xively client );\n\n    // Do a first update immediately\n    updateData();\n    sendData();\n    lastRequest = millis();\n}\n\nvoid loop() {\n    // get a timestamp so you can calculate reading and sending intervals:\n    long now = millis();\n\n    // if the sending interval has passed since your\n    // last connection, then connect again and send data:\n    if (now - lastRequest  = postingInterval) {\n        updateData();\n        sendData();\n        lastRequest = now;\n    }\n}\n\nvoid updateData() {\n    // convert the readings to a String to send it:\n    dataString =  Temperature, ;\n    dataString += random(10) + 20;\n    // add pressure:\n    dataString +=  \\nPressure, ;\n    dataString += random(5) + 100;\n}\n\n// this method makes a HTTP connection to the server:\nvoid sendData() {\n    // form the string for the API header parameter:\n    String apiString =  X-ApiKey:  ;\n    apiString += APIKEY;\n\n    // form the string for the URL parameter:\n    String url =  https://api.xively.com/v2/feeds/ ;\n    url += FEEDID;\n    url +=  .csv ;\n\n    // Send the HTTP PUT request\n\n    // Is better to declare the Process here, so when the\n    // sendData function finishes the resources are immediately\n    // released. Declaring it global works too, BTW.\n    Process xively;\n    Serial.print( \\n\\nSending data...  );\n    xively.begin( curl );\n    xively.addParameter( -k );\n    xively.addParameter( --request );\n    xively.addParameter( PUT );\n    xively.addParameter( --data );\n    xively.addParameter(dataString);\n    xively.addParameter( --header );\n    xively.addParameter(apiString);\n    xively.addParameter(url);\n    xively.run();\n    Serial.println( done! );\n\n    // If there s incoming data from the net connection,\n    // send it out the Serial:\n    while (xively.available()   0) {\n        char c = xively.read();\n        Serial.write(c);\n    }\n}   \u4f8b\u7a0b 3: \u5c06\u6570\u636e\u8bb0\u5f55\u5728USB\u95ea\u5b58\u4e2d  \u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u5c06\u6570\u636e\u8bb0\u5f55\u5230USB\u95ea\u5b58\u3002\u672c\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u7a0b\u5e8f\u4e0e \u6b64\u5904 \u76f8\u540c\u3002\u5e76\u4e14\u53ef\u4ee5\u5728\u90a3\u91cc\u627e\u5230\u6e90\u4ee3\u7801\u3002Seeeduino Cloud\u5c06\u81ea\u52a8\u5c06USB\u95ea\u5b58\u6620\u5c04\u5230\u76ee\u5f55/ mnt /sda1\u3002\u800c\u7a0b\u5e8f\u4f1a\u5c06\u4f20\u611f\u5668\u6570\u636e\u9644\u52a0\u5230\u6587\u4ef6/mnt/sda1/data/datalog.csv\u3002\u56e0\u6b64\uff0c\u5728\u8fd0\u884c\u7a0b\u5e8f\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5728USB\u95ea\u5b58\u4e2d\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u3002  #include  FileIO.h      //FileIO class allow user to operate Linux file system\n#include  Console.h     //Console class provide the interactive between IDE and Yun Shield\nvoid setup() {\n    // Initialize the Console\n    Bridge.begin();\n    Console.begin();\n    FileSystem.begin();\n    while(!Console);   // wait for Serial port to connect.\n    Console.println( Filesystem datalogger\\n );\n}\nvoid loop () {\n    // make a string that start with a timestamp for assembling the data to log:\n    String dataString;\n    dataString += getTimeStamp();\n    dataString +=   ,  ;\n    // read three sensors and append to the string:\n    for (int analogPin = 0; analogPin   3; analogPin++) {\n        int sensor = analogRead(analogPin);\n        dataString += String(sensor);\n        if (analogPin   2) {\n            dataString +=  , ;    // separate the values with a comma\n        }\n    }\n    // open the file. note that only one file can be open at a time,\n    // so you have to close this one before opening another.\n    // The USB flash card is mounted at  /mnt/sda1  by default\n    File dataFile = FileSystem.open( /mnt/sda1/data/datalog.csv , FILE_APPEND);\n    // if the file is available, write to it:\n    if (dataFile) {\n        dataFile.println(dataString);\n        dataFile.close();\n        // print to the serial port too:\n        Console.println(dataString);\n    }\n    // if the file isn t open, pop up an error:\n    else {\n        Console.println( error opening datalog.csv );\n    }\n    delay(15000);  //Write every 15 seconds\n}\n// getTimeStamp function return a string with the time stamp\n// Yun Shield will call the Linux  date  command and get the time stamp\nString getTimeStamp() {\n    String result;\n    Process time;\n    // date is a command line utility to get the date and the time\n    // in different formats depending on the additional parameter\n    time.begin( date );\n    time.addParameter( +%D-%T );   // parameters: D for the complete date mm/dd/yy\n    //              T for the time hh:mm:ss\n    time.run();   // run the command\n    // read the output of the command\n    while(time.available() 0) {\n        char c = time.read();\n        if(c !=  \\n )\n        result += c;\n    }\n    return result;\n}   \u7269\u8054\u7f51\u670d\u52a1\u5668\u914d\u7f6e  IoT Server\u9875\u9762\u5141\u8bb8\u60a8\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u8bf8\u5982Xively\u4e4b\u7c7b\u7684IoT\u7f51\u7ad9\uff0c\u800c\u60a8\u53ea\u9700\u8981\u5c06\u4f20\u611f\u5668\u6570\u636e\u5199\u5165\u4e32\u53e3\u3002   \u7a0b\u5e8f\u5982\u4e0b\uff1a  /*\n  Simulate UART TX Data\n\n This sketch simulate Temperature and Humidity data to UART.\n\n To test the pass through feature for different IoT service\n\n created 25 Apr 2014\n by Dragino Technology Co., Limited\n\n Reference:\n http://wiki.dragino.com/index.php?title=Xively#Upload_data_to_Xively_use_Pass_Through_Mode\n\n */\nString dataString =  ;\n\nvoid setup() {\n    Serial1.begin(115200);\n}\n\nvoid loop() {\n    dataString =  temp: ;\n    dataString += random(10) + 20;\n    Serial1.println(dataString);  // upload Temperature data\n    delay(20000);\n    dataString =  humidity: ;\n    dataString += random(5) + 70;  // upload humidity data\n    Serial1.println(dataString);\n    delay(20000);\n}", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Seeeduino_Cloud/#_6", 
            "text": "\u539f\u7406\u56fe   Seeeduino Cloud Eagle file  Seeeduino Cloud PDF file     \u56fa\u4ef6   Seeeduino Cloud Firmware     \u53c2\u8003\u8d44\u6599   Getting Started with Arduino  Arduino Language Reference  Download the Arduino Software(IDE)  Arduino FAQ  Arduino Introduction  Wikipedia page for Arduino  Arduino Yun Wiki  Getting started with Arduino Yun  Yun Bridge Library", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Seeeduino_Cloud/#faq", 
            "text": "\u4ec0\u4e48\u662f Yun Bridge Library?   Yun Bridge Library \u7528\u4e8eMPU\u548cMCU\u4e4b\u95f4\u901a\u4fe1\u7684\u673a\u5236\u3002 Seeeduino Cloud \u4f7f\u7528 Yun Bridge Library\uff0c \u8ba9Arduino\u7528\u6237\u8f7b\u677e\u6784\u5efa\u5176\u7269\u8054\u7f51\u9879\u76ee\u3002", 
            "title": "FAQ"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/", 
            "text": "Seeeduino LoRaWAN W / GPS\u662f\u5d4c\u5165\u4e86LoRaWan\u534f\u8bae\u548cGPS\u529f\u80fd\u7684Arduino\u5f00\u53d1\u677f\uff0c\u901a\u8fc7\u8fd9\u6b3e\u5f00\u53d1\u677f\u60a8\u53ef\u4ee5\u5feb\u901f\u4e0a\u624b\u5e76\u4e14\u4f53\u9a8c\u5230LoRa\u5728\u7269\u8054\u7f51\u9886\u57df\u7684\u4f18\u52bf\u3002\u57fa\u4e8e\u901a\u4fe1\u6a21\u5757RHF76-052AM\uff0cSeeeduino LoRaWAN\u4e0eLoRaWAN A / C\u7c7b\u517c\u5bb9\uff0c\u652f\u6301\u591a\u79cd\u901a\u4fe1\u9891\u7387\u3002\n\n\n4\u4e2a\u677f\u8f7d\u6807\u51c6Grove\u8fde\u63a5\u5668\u4f7fSeeeduino LoRaWan\u80fd\u591f\u65b9\u4fbf\u5730\u4e0eSeeedstudio\u7684\u6570\u767e\u4e2aGrove\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\u8fde\u63a5\uff0c\u4ece\u800c\u4f7f\u7528\u6237\u80fd\u591f\u66f4\u52a0\u4e13\u6ce8\u4e8e\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u4e0d\u540c\u6a21\u5757\u4e4b\u95f4\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002\u6b64\u5916\uff0c\u8be5\u677f\u8fd8\u5d4c\u5165\u4e86\u96c6\u6210\u7684\u9502\u7535\u6c60\u7ba1\u7406\u82af\u7247\uff0c\u53ef\u4ee5\u901a\u8fc7USB\u63a5\u53e3\u5bf9\u7535\u8def\u677f\u8fdb\u884c\u5145\u7535\u3002\u5728\u4f4e\u529f\u8017\u6a21\u5f0f\u4e0b\uff0c\u5145\u6ee1\u7535\u7684\u9502\u7535\u6c60\u53ef\u4ee5\u4e3a\u7535\u6c60\u4f9b\u7535\u6570\u6708\u3002\n\n\n\u5982\u679c\u60a8\u60f3\u5feb\u901f\u5efa\u7acb\u4e00\u4e2a\u7269\u8054\u7f51\u5e94\u7528\u7a0b\u5e8f\uff0cSeeeduino LoRaWAN\u5c06\u662f\u60a8\u7684\u6700\u4f73\u9009\u62e9\u3002\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7248\u672c\n\n\n\u7248\u672c\u65e5\u671f\n\n\n\u8d2d\u4e70\u65b9\u5f0f\n\n\n\n\n\n\n\n\n\n\nSeeeduino LoRaWAN\n\n\nDec 20, 2016\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\nSeeeduino LoRaWAN W/GPS\n\n\nDec 20, 2016\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\u8bf7\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u66f4\u65b0\u56fa\u4ef6\u3002\n\n\n\n\n\n\nTip\n\n\nSeeeduino LoRaWAN W / GPS\u7531GPS\u6a21\u5757\u548cLoRaWAN\u6a21\u5757\u7ec4\u6210\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u6700\u5c0f\u7535\u6d41 (3.7V \u9502\u7535\u6c60) - 2mA\n\n\n\u6700\u5c0f\u7535\u6d41 (3.7V \u9502\u7535\u6c60 \n \u53bb\u6389 PWR LED) - 80 uA\n\n\n\n\nArduino/Processor\uff08\u5904\u7406\u5668\uff09\n\n\n\n\nATSAMD21G18 @ 48MHz with 3.3V logic/power\n\n\nArduino compatible (based on Arduino Zero bootloader)\n\n\nEmbedded with lithium battery management chip and status indicator led\n\n\n20 GPIOs\n\n\n4 on-board Grove connectors\n\n\n18 x PWM pins\n\n\n6 x analog inputs\n\n\n1 x analog output (A0)\n\n\n3.3V regulator with 200mA output\n\n\nReset button\n\n\n\n\nLoRaWAN/RHF76-052\n\n\n\n\n1.45uA sleep current in WOR mode (Spec of the modules, not the board)\n\n\nHigh link budget of 160dB. -140dBm sensitivity and 19dBm Output power.\n\n\nDual band, 434/470MHz and 868/915MHz\n\n\n19dBm@434MHz/470MHz\n\n\n14dBm@868MHz/915MHz\n\n\n\n\n\n\nSupport LoRaWAN protocol, Class A/C\n\n\nUltra long range communication\n\n\nUltra low power consumption\n\n\nFirmware upgrade\n\n\nSmall size: 23mm X 28mm with 33 pin SMT package\n\n\n\n\n\n\nWarning\n\n\n\u4e0e\u5927\u591a\u6570Arduino\u548cGenuino\u677f\u4e0d\u540c\uff0cZore\u8fd0\u884c\u57283.3V\u3002I / O\u5f15\u811a\u53ef\u627f\u53d7\u7684\u6700\u5927\u7535\u538b\u4e3a3.3V\u3002\u5c06\u9ad8\u4e8e3.3V\u7684\u7535\u538b\u65bd\u52a0\u5230\u4efb\u4f55I / O\u5f15\u811a\u53ef\u80fd\u4f1a\u635f\u574f\u7535\u8def\u677f\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6570\u503c\n\n\n\n\n\n\n\n\n\n\n\u5fae\u5904\u7406\u5668\n\n\nATSAMD21G18, 32-Bit ARM Cortex M0+\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3.3V\n\n\n\n\n\n\nDigital I/O Pins\n\n\n20\n\n\n\n\n\n\nPWM Pins\n\n\nAll but pins 2 and 7\n\n\n\n\n\n\nUART\n\n\n2 (Native and Programming)\n\n\n\n\n\n\nAnalog Input Pins\n\n\n6, 12-bit ADC channels\n\n\n\n\n\n\nAnalog Output Pins\n\n\n1, 10-bit DAC\n\n\n\n\n\n\n\u5916\u90e8\u4e2d\u65ad\n\n\nAll pins except pin 4\n\n\n\n\n\n\n\u76f4\u6d41\u7535\u6d41 I/O Pin\n\n\n7 mA\n\n\n\n\n\n\nFlash Memory\n\n\n256 KB\n\n\n\n\n\n\nSRAM\n\n\n32 KB\n\n\n\n\n\n\nEEPROM\n\n\nNone\n\n\n\n\n\n\nClock Speed\n\n\n48 MHz\n\n\n\n\n\n\n\u957f\n\n\n68 mm\n\n\n\n\n\n\n\u5bbd\n\n\n53 mm\n\n\n\n\n\n\n\u51c0\u91cd\n\n\n19.6g(without GPS), 19.9(with GPS)\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7269\u8054\u7f51\n\n\n\u5b89\u4fdd\n\n\n\u667a\u80fd\u5bb6\u5c45\n\n\n\u667a\u80fd\u7535\u7f51\n\n\n\u667a\u80fd\u519c\u573a\n\n\n\u667a\u80fd\u516c\u56ed\n\n\n\n\n\n\nTip\n\n\n\n\n\u4f7f\u7528Grove\u6a21\u5757\u6269\u5c55\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\n\n\n\n\n\n\n\u677f\u4e0a\u67094\u4e2aGrove\u8fde\u63a5\u5668\u3002\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u542c\u8bf4Grove\uff0c\u8bf7\u70b9\u51fb \nGrove System\n \u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u7b80\u800c\u8a00\u4e4b\uff0cGroves\u7cfb\u7edf\u662f\u7531\u6570\u767e\u79cd\u6807\u51c6\u7edf\u4e00\u7684\u4f20\u611f\u5668\uff0c\u6267\u884c\u5668\uff0c\u663e\u793a\u5668\u4ee5\u53ca\u901a\u8baf\u6a21\u5757\u7ec4\u6210\u7684\u6807\u51c6\u5316\u7cfb\u7edf\u3002\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n1.\n Micro USB - Programming and supply power to the board\n\n\n2.\n Grove connectors\n\n\n3.\n JST2.0 Lipo battery input (3.7V) and charge status led\n\n\n4.\n DFU Button - Firmware mode button\n\n\n5.\n Reset Button\n\n\n6.\n Arduino Pinout\n\n\n7.\n ICSP pins\n\n\n8.\n Firmware mode led\n\n\n9.\n Wire antenna\n\n\nA.\n uFL antenna\n\n\nB.\n RF module - RHF76-052AM\n\n\nC.\n ARM Cortex M0 processor - ATSAMD21G18\n\n\nD.\n LEDs\n\n\nRX/TX\n - \u5f53\u6709UART\u6570\u636e\u4f20\u8f93\u65f6\u4f1a\u95ea\u70c1(from/to USB)\n\n\nL\n - an led connect to D13\n\n\nPWR\n - power\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\u5982\u679c\u8981\u4f7f\u75284\u677f\u8f7dGrove\u8fde\u63a5\u5668\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4digitalWrite\uff0838\uff0cHIGH\uff09\u6253\u5f00VCC\u3002\u5426\u5219\u60a8\u65e0\u6cd5\u4e3aGrove\u6a21\u5757\u63d0\u4f9b\u7535\u6e90\u3002\n\n\n\n\n\n\n\u7ba1\u811a\u56fe\n\n\n\n\n\n\n\n\nPin \u540d\u79f0\n\n\nGPIO \u7f16\u53f7\n\n\n\u5916\u90e8\u4e2d\u65ad\n\n\nPWM\n\n\nAnalog In\n\n\nAnalog Out\n\n\n\u529f\u80fd\n\n\n\n\n\n\n\n\n\n\n0\n\n\n#0\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nRX(Serial)\n\n\n\n\n\n\n1\n\n\n#1\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nTX(Serial)\n\n\n\n\n\n\n2\n\n\n#2\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n#3\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n#4\n\n\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n#5\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n#6\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n7\n\n\n#7\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n\n#8\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n9\n\n\n#9\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n10\n\n\n#10\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\n11\n\n\n#11\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nSPI_MOSI\n\n\n\n\n\n\n12\n\n\n#12\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nSPI_MISO\n\n\n\n\n\n\n13\n\n\n#13\n\n\nYES\n\n\nYES\n\n\n\n\n\n\nSPI_SCK\n\n\n\n\n\n\nSDA\n\n\n#20\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\nSCL\n\n\n#21\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\n\n\nA0\n\n\n#A0\n\n\nYES\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\nA1\n\n\n#A1\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nA2\n\n\n#A2\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nA3\n\n\n#A3\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nA4\n\n\n#A4\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\nVoltage of Battery\n\n\n\n\n\n\nA5\n\n\n#A5\n\n\nYES\n\n\nYES\n\n\nYES\n\n\n\n\nCharge Status\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u6240\u6709\u7684\u5f15\u811a\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6570\u5b57\u4fe1\u53f7\u7684\u8f93\u5165/\u8f93\u51fa\u3002\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5357 - Arduino IDE\n\n\n\n\nNote\n\n\n\n\n\u8fd9\u4e2a\u6307\u5357\u662f\u57fa\u4e8eWin10 \u548c Arduino IDE v1.6.0\n\n\n\n\n\n\n\u9996\u5148\u60a8\u9700\u8981\u5b89\u88c5\u6700\u65b0\u7684 Arduino IDE, \u7136\u540e\u70b9\u51fb\u8fd9\u91cc\u5c06 \nSeeeduino LoRa\n \u6dfb\u52a0\u5230\u60a8\u7684 Arduino IDE\u3002\n\n\n\u5b89\u88c5\u9a71\u52a8 (For Windows)\n\n\n\u5f53\u7b2c\u4e00\u6b21\u63d2\u5165\u7535\u8def\u677f\u65f6\uff0c\u60a8\u5e94\u8be5\u4f1a\u5f97\u5230\u540d\u4e3aSeeeduino LoRaWAN\u7684USB COM\u8bbe\u5907\u3002\u70b9\u51fb\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u4e0b\u8f7d\u5f00\u53d1\u677f\u7684\u9a71\u52a8\u3002\n\n\n\n\n\u4e3a\u4e86\u786e\u4fdd\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u6210\u529f\uff0c\u8bf7\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u4ee5\u67e5\u770b \nSeeeduino LoRaWAN\n \u662f\u5426\u5b58\u5728\u3002\n\n\n\n\n\u95ea\u70c1\n\n\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4e0a\u4f20\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u793a\u4f8b - \u201c\u95ea\u70c1\u201d\u5230Seeeduino LoRaWAN\u3002\n\n\n\u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u7136\u540e\u5355\u51fb \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n 01.Basics \n Blink\n \u6765\u6253\u5f00\u4f8b\u7a0b\u6216\u8005\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n\n// the setup function runs once when you press reset or power the board\n\n\nvoid\n \nsetup\n()\n \n{\n\n  \n// initialize digital pin 13 as an output.\n\n  \npinMode\n(\n13\n,\n \nOUTPUT\n);\n\n\n}\n\n\n\n// the loop function runs over and over again forever\n\n\nvoid\n \nloop\n()\n \n{\n\n  \ndigitalWrite\n(\n13\n,\n \nHIGH\n);\n   \n// turn the LED on (HIGH is the voltage level)\n\n  \ndelay\n(\n1000\n);\n              \n// wait for a second\n\n  \ndigitalWrite\n(\n13\n,\n \nLOW\n);\n    \n// turn the LED off by making the voltage LOW\n\n  \ndelay\n(\n1000\n);\n              \n// wait for a second\n\n\n}\n\n\n\n\n\n\u7136\u540e,\n\n\n\u70b9\u51fb\u5de5\u5177\n\u677f\n Seeeduino LoRaWAN\n\n\n\u5355\u51fb\u5de5\u5177\n\u7aef\u53e3\u4ee5\u9009\u62e9\u6b63\u786e\u7684\u7aef\u53e3\u53f7\u3002\uff08\u4e0d\u8981\u9009\u62e9COM1\uff09\n\n\n\n\n\u7136\u540e\u70b9\u51fbArduino IDE\u5de6\u4e0a\u89d2\u7684\u4e0a\u4f20\u6309\u94ae\uff0c\u51e0\u79d2\u949f\u540e\u4f8b\u7a0b\u4e0a\u4f20\u6210\u529f\u3002\n\n\n\n\n\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u60a8\u5c06\u770b\u5230\u4e0b\u56fe\u6240\u793a\u7684\u7ea2\u8272\u4fe1\u606f\uff0c\u8fd9\u65f6\u89c2\u5bdf\u60a8\u7684\u677f\u8f7dLED\uff0c\u770b\uff0c\u5b83\u5728\u95ea\u70c1\uff01\n\n\n\n\n\u7535\u6c60\n\n\n\u60a8\u53ef\u4ee5\u901a\u8fc73.7V \u9502\u7535\u6c60\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u3002\u4ea7\u54c1\u5957\u4ef6\u4e2d\u6709\u4e00\u4e2aJST2.0\u7535\u7f06\uff0c\u5982\u679c\u60a8\u4e0d\u80fd\u627e\u5230\u5e26\u6709JST2.0\u8fde\u63a5\u5668\u7684\u7535\u6c60\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6839\u7ebf\u7f06\u3002\n\n\n\n\nWarning\n\n\n\n\n\u786e\u4fdd\u7535\u6c60\u7684\u6b63\u6781\u548c\u8d1f\u6781\u8fde\u63a5\u6b63\u786e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u635f\u574f\u7535\u8def\u677f\u3002.\n\n\n\n\n\n\n\u7535\u6c60\u7684\u5145\u7535\u72b6\u6001\u5f15\u811a\u548c\u6b63\u6781\u5f15\u811a\u5206\u522b\u8fde\u63a5\u5230A4\u548cA5\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u68c0\u6d4b\u7535\u6c60\u7684\u5145\u7535\u72b6\u6001\u548c\u6d4b\u91cf\u7535\u6c60\u7535\u538b\u3002\n\n\n\u590d\u5236\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u68c0\u6d4b\u7535\u6c60\u72b6\u6001\u3002\n\n\n\n\nNote\n\n\n\n\n\u5145\u7535\u65f6\uff0c\u72b6\u6001\u503c\u8fd4\u56de0\uff1b\u5145\u7535\u5b8c\u6210\u6216\u65e0\u7535\u6c60\u63d2\u5165\uff0c\u72b6\u6001\u503c\u8fd4\u56de1\u3002\n\n\n\n\n\n\n\u53d1\u9001\u548c\u63a5\u6536\u793a\u4f8b\n\n\nLoRaWAN\u6a21\u5757\u62e5\u6709\u4e00\u4e2a\u5f88\u597d\u7528\u7684\u5e93\uff0c\u5bf9\u4e8e\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u5f88\u591a\u5173\u4e8eLoRa\u7684\u534f\u8bae\uff08\u534f\u8bae\u662f\u5f88\u590d\u6742\u548c\u96be\u4ee5\u9605\u8bfb\u7684\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u60f3\u8981\u9ad8\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u4e00\u4e9b\u5173\u4e8eLoRa\u534f\u8bae\u7684\u77e5\u8bc6\u3002\u60a8\u4e0d\u9700\u8981\u4e0b\u8f7d\u5e93\uff0c\u5b83\u5df2\u7ecf\u5305\u542b\u5728\u5305\u4e2d\u3002\u60a8\u53ef\u4ee5\u5728 \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n LoRaWAN\n \u4e2d\u627e\u5230\u793a\u4f8b\u7a0b\u5e8f\u3002\n\n\n\u60a8\u9700\u89812\u5757Seeeduino LoRaWAN\u6765\u5b8c\u6210\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u7528\u4e8e\u53d1\u9001\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u63a5\u6536\u3002\n\n\n\u53d1\u9001\n\n\n\u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u7136\u540e\u5355\u51fb \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n LoRaWAN \n p2p_tx\n \u6765\u6253\u5f00\u4f8b\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u590d\u5236\u4e0b\u9762\u7684\u7684\u4ee3\u7801\u3002\n\u8be5\u4f8b\u7a0b\u5c06\u4f1a\u6bcf\u96943000 ms\u5e7f\u64ad\u4e00\u6b21 \"Hello World!\"\n\n\n// Seduino LoRaWAN - TX example\n#include \nLoRaWan.h\n\n\nvoid setup(void)\n{\n    SerialUSB.begin(115200);\n    lora.init();\n    lora.initP2PMode(433, SF12, BW125, 8, 8, 20);\n}\n\nvoid loop(void)\n{\n    lora.transferPacketP2PMode(\nHello World!\n);\n    SerialUSB.println(\nSend string.\n);\n    delay(3000);\n}\n\n\n\n\n\u63a5\u6536\n\n\n\u6253\u5f00\u60a8\u7684 Arduino IDE \u70b9\u51fb \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n LoRaWAN \n p2p_rx\n \u6765\u6253\u5f00\u4f8b\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u590d\u5236\u4e0b\u9762\u7684\u7684\u4ee3\u7801\uff1a\n\n\n// Seduino LoRaWAN - RX example\n#include \nLoRaWan.h\n\n\nunsigned char buffer[128] = {0, };\n\nvoid setup(void)\n{\n    SerialUSB.begin(115200);\n    lora.init();\n    lora.initP2PMode(433, SF12, BW125, 8, 8, 20);\n}\n\nvoid loop(void)\n{\n    short length = 0;\n    short rssi = 0;\n\n    memset(buffer, 0, 128);\n    length = lora.receivePacketP2PMode(buffer, 128,  \nrssi, 1);\n\n    if(length)\n    {\n        SerialUSB.print(\nLength is: \n);\n        SerialUSB.println(length);\n        SerialUSB.print(\nRSSI is: \n);\n        SerialUSB.println(rssi);\n        SerialUSB.print(\nData is: \n);\n        for(unsigned char i = 0; i \n length; i ++)\n        {\n            SerialUSB.print(\n0x\n);\n            SerialUSB.print(buffer[i], HEX);\n            SerialUSB.print(\n \n);\n        }\n        SerialUSB.println();\n    }\n}\n\n\n\n\n\u5728\u4e24\u4e2a\u4f8b\u7a0b\u90fd\u4e0a\u4f20\u5b8c\u6bd5\u540e\uff0c\u6253\u5f00\u63a5\u6536\u677f\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u83b7\u53d6\u4e00\u4e9b\u6570\u636e\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n\n\nNote\n\n\n\u6211\u4eec\u5c06\u5f88\u5feb\u4e3aLoRa\u63d0\u4f9b\u7f51\u5173\u5957\u4ef6\uff0c\u6211\u4eec\u5c06\u5728\u5957\u4ef6\u7684\u7ef4\u57fa\u4e0a\u6dfb\u52a0\u5173\u4e8eAPB\u548cOTAA\u6a21\u5f0f\u7684\u5165\u95e8\u3002\n\n\n\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n\nW\u6211\u4eec\u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u4f8b\u5b50\u3002\u60a8\u53ef\u4ee5\u6253\u5f00 \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n LoRaWan\n \u6765\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4f8b\u7a0b\u5305\u62ec\uff1a\n\n\n\n\nABP\n\n\nOTAA\n\n\np2p-rx\n\n\np2p-tx\n\n\n\n\nGPS\u6570\u636e\n\n\n\n\nNote\n\n\n\u672c\u7ae0\u4ec5\u9002\u7528\u4e8eSeeeduino LoRaWAN W / GPS\u3002\n\n\n\n\n\u590d\u5236\u4e0b\u9762\u7684\u4ee3\u7801\u4f60Seeeduino LoRaWAN W / GPS\u3002\n\nvoid setup()\n{\n    Serial.begin(9600);\n    SerialUSB.begin(115200);\n}\n\nvoid loop()\n{\n    while(Serial.available())\n    {\n        SerialUSB.write(Serial.read());\n    }\n    while(SerialUSB.available())\n    {\n        Serial.write(SerialUSB.read());\n    }\n}\n\n\n\n\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u7136\u540e\u60a8\u5c06\u4eceGPS\u83b7\u53d6\u6570\u636e\u3002\n\n\n\n\u4f4e\u529f\u8017\u3001\u5c0f\u7535\u6d41\n\n\n\u6211\u4eec\u6d4b\u8bd5\u7684\u6700\u5c0f\u7535\u6d41\u4e3a80uA\uff08\u5bf9\u4e8eSeeeduino LoRaWAN\uff09\u3002\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\u3002\n\n\n1\u3001\u53d6\u4e0bPWR LED\uff08\u5982\u679c\u4e0d\u53d6\u4e0b\u6b64LED\uff0c\u7535\u6d41\u5c06\n 2mA\uff09\n2\u3001\u53d6\u4e0bCHG LED\n3\u3001\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002\n\n\n\n\n\n#include \nLoRaWan.h\n\n#include \nEnergySaving.h\n\n\nEnergySaving nrgSave;\n\nvoid blink()\n{\n    for(unsigned char i = 0; i \n 5; i ++)\n    {\n        digitalWrite(13,HIGH);\n        delay(500);\n        digitalWrite(13,LOW);\n        delay(500);\n    }\n}\n\nvoid setup()\n{\n    for(unsigned char i = 0; i \n 26; i ++)      // important, set all pins to HIGH to save power\n    {\n        pinMode(i, OUTPUT);\n        digitalWrite(i, HIGH);\n    }\n\n    lora.init();\n    blink();    \n    lora.setDeviceLowPower();\n    blink();    \n    nrgSave.begin(WAKE_EXT_INTERRUPT, 7, dummy);    // buton on D7 to wake up the board\n    nrgSave.standby();\n}\n\nvoid loop()\n{\n    blink();\n    nrgSave.standby();\n}\n\nvoid dummy(void)\n{\n    // do something\n}\n\n// END File\n\n\n\n\n\u66f4\u65b0\u56fa\u4ef6\n\n\n\u56fa\u4ef6\u7248\u672c\u4e3a2.0.10\uff0c\u5982\u679c\u60a8\u60f3\u68c0\u67e5\u60a8\u7684\u7248\u672c\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002\n\nvoid setup()\n{\n    Serial1.begin(9600);\n    SerialUSB.begin(115200);\n}\n\nvoid loop()\n{\n    while(Serial1.available())\n    {\n        SerialUSB.write(Serial1.read());\n    }\n    while(SerialUSB.available())\n    {\n        Serial1.write(SerialUSB.read());\n    }\n}\n\n\n\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u7136\u540e\u8f93\u5165\uff1a\n\nAT+VER\n\n\n\u7136\u540e\u60a8\u5c06\u770b\u5230\u60a8\u7684\u5f00\u53d1\u677f\u5f53\u524d\u7684\u7248\u672c\u3002\n\n\n\n\n\u5982\u679c\u8981\u66f4\u65b0\u56fa\u4ef6\uff0c\u5219\u9700\u8981\u9075\u5faa\u51e0\u4e2a\u6b65\u9aa4\u3002\n\n\n\u6b65\u9aa41\n\n\n\u5c06\u4e0b\u5217\u4ee3\u7801\u590d\u5236\u5e76\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002\n\n\n// Update firmware to RHF76-052AM\n\n\n#include\n \nArduino.h\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nSerialDBG\n.\nbegin\n(\n115200\n);\n\n    \nSerialUSB\n.\nbegin\n(\n115200\n);\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nwhile\n(\nSerialDBG\n.\navailable\n())\n\n    \n{\n\n        \nSerialUSB\n.\nwrite\n(\nSerialDBG\n.\nread\n());\n\n    \n}\n\n    \nwhile\n(\nSerialUSB\n.\navailable\n())\n\n    \n{\n\n        \nSerialDBG\n.\nwrite\n(\nSerialUSB\n.\nread\n());\n\n    \n}\n\n\n}\n\n\n\n\n\n\u6b65\u9aa42\n\n\n\u5c06\u677f\u5361\u7684USB\u63a5\u5934\u53d6\u4e0b\uff0c\u7136\u540e\u63d2\u4e0a\uff0c\u91cd\u65b0\u8fde\u63a5\u7535\u8111\uff0c\u7136\u540e\u70b9\u51fbDFU\u6309\u94ae\uff0c\u7b49\u5230\u56fa\u4ef6\u6a21\u5f0fLED\u5f00\u59cb\u95ea\u70c1\u60a8\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002\n\n\n\u6b65\u9aa43\n\n\n\u70b9\u51fb\u4e0b\u8f7d\u6700\u65b0\u7684\u56fa\u4ef6 .bin file.\n\n\n\n\n\u6b65\u9aa44\n\n\n\u6253\u5f00PuTTy\u5e76\u8fde\u63a5\u5230\u7535\u8def\u677f\n\n\n\n\n\n\nTip\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6700\u65b0\u7684PuTTy\uff1a.php \nhttp://www.extraputty.com/download.php\n\n\n\n\n\n\n\u6b65\u9aa45\n\n\n\u5c06\u60a8\u7684\u5f00\u53d1\u677f\u548cPutty\u76f8\u8fde\uff0c\u60a8\u5c06\u770b\u5230\u5b57\u6bcd\u201cC\u201d\u4e0d\u65ad\u5730\u6253\u5370\u5728\u5c4f\u5e55\u4e0a\u3002\u70b9\u51fb**Files Transfer\uff08\u6587\u4ef6\u4f20\u8f93\uff09 \n Ymodem \n Send**, \u7136\u540e\u9009\u62e9\u6b65\u9aa44\u4e2d\u4e0b\u8f7d\u7684.bin file\u3002\n\n\n\u7136\u540e\u5347\u7ea7\u5c31\u5f00\u59cb\u4e86\u3002\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[eagle\u539f\u7406\u56fe]\n \nSchematics in Eagle\n\n\n[sketchup\u6587\u4ef6]\n \nSketchup file(3D)\n\n\n[RHF76-052 \u7535\u6c14\u56fe]\n  \nCE certification of RHF 76-052\n\n\n[RHF76-052\u56fa\u4ef6]\n \nRHF76-052 Firmware V2.0.10\n\n\n[\u6570\u636e\u624b\u518cRHF76-052AM]\n \nDatasheet of RHF76-052AM", 
            "title": "Seeeduino LoRAWAN"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_1", 
            "text": "\u6700\u5c0f\u7535\u6d41 (3.7V \u9502\u7535\u6c60) - 2mA  \u6700\u5c0f\u7535\u6d41 (3.7V \u9502\u7535\u6c60   \u53bb\u6389 PWR LED) - 80 uA", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#arduinoprocessor", 
            "text": "ATSAMD21G18 @ 48MHz with 3.3V logic/power  Arduino compatible (based on Arduino Zero bootloader)  Embedded with lithium battery management chip and status indicator led  20 GPIOs  4 on-board Grove connectors  18 x PWM pins  6 x analog inputs  1 x analog output (A0)  3.3V regulator with 200mA output  Reset button", 
            "title": "Arduino/Processor\uff08\u5904\u7406\u5668\uff09"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#lorawanrhf76-052", 
            "text": "1.45uA sleep current in WOR mode (Spec of the modules, not the board)  High link budget of 160dB. -140dBm sensitivity and 19dBm Output power.  Dual band, 434/470MHz and 868/915MHz  19dBm@434MHz/470MHz  14dBm@868MHz/915MHz    Support LoRaWAN protocol, Class A/C  Ultra long range communication  Ultra low power consumption  Firmware upgrade  Small size: 23mm X 28mm with 33 pin SMT package    Warning  \u4e0e\u5927\u591a\u6570Arduino\u548cGenuino\u677f\u4e0d\u540c\uff0cZore\u8fd0\u884c\u57283.3V\u3002I / O\u5f15\u811a\u53ef\u627f\u53d7\u7684\u6700\u5927\u7535\u538b\u4e3a3.3V\u3002\u5c06\u9ad8\u4e8e3.3V\u7684\u7535\u538b\u65bd\u52a0\u5230\u4efb\u4f55I / O\u5f15\u811a\u53ef\u80fd\u4f1a\u635f\u574f\u7535\u8def\u677f\u3002", 
            "title": "LoRaWAN/RHF76-052"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_2", 
            "text": "\u9879\u76ee  \u6570\u503c      \u5fae\u5904\u7406\u5668  ATSAMD21G18, 32-Bit ARM Cortex M0+    \u5de5\u4f5c\u7535\u538b  3.3V    Digital I/O Pins  20    PWM Pins  All but pins 2 and 7    UART  2 (Native and Programming)    Analog Input Pins  6, 12-bit ADC channels    Analog Output Pins  1, 10-bit DAC    \u5916\u90e8\u4e2d\u65ad  All pins except pin 4    \u76f4\u6d41\u7535\u6d41 I/O Pin  7 mA    Flash Memory  256 KB    SRAM  32 KB    EEPROM  None    Clock Speed  48 MHz    \u957f  68 mm    \u5bbd  53 mm    \u51c0\u91cd  19.6g(without GPS), 19.9(with GPS)", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_3", 
            "text": "\u7269\u8054\u7f51  \u5b89\u4fdd  \u667a\u80fd\u5bb6\u5c45  \u667a\u80fd\u7535\u7f51  \u667a\u80fd\u519c\u573a  \u667a\u80fd\u516c\u56ed    Tip   \u4f7f\u7528Grove\u6a21\u5757\u6269\u5c55\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f    \u677f\u4e0a\u67094\u4e2aGrove\u8fde\u63a5\u5668\u3002\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u542c\u8bf4Grove\uff0c\u8bf7\u70b9\u51fb  Grove System  \u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u7b80\u800c\u8a00\u4e4b\uff0cGroves\u7cfb\u7edf\u662f\u7531\u6570\u767e\u79cd\u6807\u51c6\u7edf\u4e00\u7684\u4f20\u611f\u5668\uff0c\u6267\u884c\u5668\uff0c\u663e\u793a\u5668\u4ee5\u53ca\u901a\u8baf\u6a21\u5757\u7ec4\u6210\u7684\u6807\u51c6\u5316\u7cfb\u7edf\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_4", 
            "text": "1.  Micro USB - Programming and supply power to the board  2.  Grove connectors  3.  JST2.0 Lipo battery input (3.7V) and charge status led  4.  DFU Button - Firmware mode button  5.  Reset Button  6.  Arduino Pinout  7.  ICSP pins  8.  Firmware mode led  9.  Wire antenna  A.  uFL antenna  B.  RF module - RHF76-052AM  C.  ARM Cortex M0 processor - ATSAMD21G18  D.  LEDs  RX/TX  - \u5f53\u6709UART\u6570\u636e\u4f20\u8f93\u65f6\u4f1a\u95ea\u70c1(from/to USB)  L  - an led connect to D13  PWR  - power      Tip   \u5982\u679c\u8981\u4f7f\u75284\u677f\u8f7dGrove\u8fde\u63a5\u5668\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4digitalWrite\uff0838\uff0cHIGH\uff09\u6253\u5f00VCC\u3002\u5426\u5219\u60a8\u65e0\u6cd5\u4e3aGrove\u6a21\u5757\u63d0\u4f9b\u7535\u6e90\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_5", 
            "text": "Pin \u540d\u79f0  GPIO \u7f16\u53f7  \u5916\u90e8\u4e2d\u65ad  PWM  Analog In  Analog Out  \u529f\u80fd      0  #0  YES  YES    RX(Serial)    1  #1  YES  YES    TX(Serial)    2  #2  YES        3  #3  YES  YES       4  #4   YES       5  #5  YES  YES       6  #6  YES  YES       7  #7  YES        8  #8  YES  YES       9  #9  YES  YES       10  #10  YES  YES       11  #11  YES  YES    SPI_MOSI    12  #12  YES  YES    SPI_MISO    13  #13  YES  YES    SPI_SCK    SDA  #20  YES  YES       SCL  #21  YES  YES       A0  #A0  YES  YES  YES  YES     A1  #A1  YES  YES  YES      A2  #A2  YES  YES  YES      A3  #A3  YES  YES  YES      A4  #A4  YES  YES  YES   Voltage of Battery    A5  #A5  YES  YES  YES   Charge Status      Note   \u6240\u6709\u7684\u5f15\u811a\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6570\u5b57\u4fe1\u53f7\u7684\u8f93\u5165/\u8f93\u51fa\u3002", 
            "title": "\u7ba1\u811a\u56fe"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#-arduino-ide", 
            "text": "Note   \u8fd9\u4e2a\u6307\u5357\u662f\u57fa\u4e8eWin10 \u548c Arduino IDE v1.6.0    \u9996\u5148\u60a8\u9700\u8981\u5b89\u88c5\u6700\u65b0\u7684 Arduino IDE, \u7136\u540e\u70b9\u51fb\u8fd9\u91cc\u5c06  Seeeduino LoRa  \u6dfb\u52a0\u5230\u60a8\u7684 Arduino IDE\u3002", 
            "title": "\u5165\u95e8\u6307\u5357 - Arduino IDE"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#for-windows", 
            "text": "\u5f53\u7b2c\u4e00\u6b21\u63d2\u5165\u7535\u8def\u677f\u65f6\uff0c\u60a8\u5e94\u8be5\u4f1a\u5f97\u5230\u540d\u4e3aSeeeduino LoRaWAN\u7684USB COM\u8bbe\u5907\u3002\u70b9\u51fb\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u4e0b\u8f7d\u5f00\u53d1\u677f\u7684\u9a71\u52a8\u3002   \u4e3a\u4e86\u786e\u4fdd\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u6210\u529f\uff0c\u8bf7\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u4ee5\u67e5\u770b  Seeeduino LoRaWAN  \u662f\u5426\u5b58\u5728\u3002", 
            "title": "\u5b89\u88c5\u9a71\u52a8 (For Windows)"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_6", 
            "text": "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4e0a\u4f20\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u793a\u4f8b - \u201c\u95ea\u70c1\u201d\u5230Seeeduino LoRaWAN\u3002  \u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u7136\u540e\u5355\u51fb  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   01.Basics   Blink  \u6765\u6253\u5f00\u4f8b\u7a0b\u6216\u8005\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff1a  // the setup function runs once when you press reset or power the board  void   setup ()   { \n   // initialize digital pin 13 as an output. \n   pinMode ( 13 ,   OUTPUT );  }  // the loop function runs over and over again forever  void   loop ()   { \n   digitalWrite ( 13 ,   HIGH );     // turn the LED on (HIGH is the voltage level) \n   delay ( 1000 );                // wait for a second \n   digitalWrite ( 13 ,   LOW );      // turn the LED off by making the voltage LOW \n   delay ( 1000 );                // wait for a second  }   \u7136\u540e,  \u70b9\u51fb\u5de5\u5177 \u677f  Seeeduino LoRaWAN  \u5355\u51fb\u5de5\u5177 \u7aef\u53e3\u4ee5\u9009\u62e9\u6b63\u786e\u7684\u7aef\u53e3\u53f7\u3002\uff08\u4e0d\u8981\u9009\u62e9COM1\uff09   \u7136\u540e\u70b9\u51fbArduino IDE\u5de6\u4e0a\u89d2\u7684\u4e0a\u4f20\u6309\u94ae\uff0c\u51e0\u79d2\u949f\u540e\u4f8b\u7a0b\u4e0a\u4f20\u6210\u529f\u3002   \u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u60a8\u5c06\u770b\u5230\u4e0b\u56fe\u6240\u793a\u7684\u7ea2\u8272\u4fe1\u606f\uff0c\u8fd9\u65f6\u89c2\u5bdf\u60a8\u7684\u677f\u8f7dLED\uff0c\u770b\uff0c\u5b83\u5728\u95ea\u70c1\uff01", 
            "title": "\u95ea\u70c1"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_7", 
            "text": "\u60a8\u53ef\u4ee5\u901a\u8fc73.7V \u9502\u7535\u6c60\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u3002\u4ea7\u54c1\u5957\u4ef6\u4e2d\u6709\u4e00\u4e2aJST2.0\u7535\u7f06\uff0c\u5982\u679c\u60a8\u4e0d\u80fd\u627e\u5230\u5e26\u6709JST2.0\u8fde\u63a5\u5668\u7684\u7535\u6c60\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6839\u7ebf\u7f06\u3002   Warning   \u786e\u4fdd\u7535\u6c60\u7684\u6b63\u6781\u548c\u8d1f\u6781\u8fde\u63a5\u6b63\u786e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u635f\u574f\u7535\u8def\u677f\u3002.    \u7535\u6c60\u7684\u5145\u7535\u72b6\u6001\u5f15\u811a\u548c\u6b63\u6781\u5f15\u811a\u5206\u522b\u8fde\u63a5\u5230A4\u548cA5\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u68c0\u6d4b\u7535\u6c60\u7684\u5145\u7535\u72b6\u6001\u548c\u6d4b\u91cf\u7535\u6c60\u7535\u538b\u3002  \u590d\u5236\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u68c0\u6d4b\u7535\u6c60\u72b6\u6001\u3002   Note   \u5145\u7535\u65f6\uff0c\u72b6\u6001\u503c\u8fd4\u56de0\uff1b\u5145\u7535\u5b8c\u6210\u6216\u65e0\u7535\u6c60\u63d2\u5165\uff0c\u72b6\u6001\u503c\u8fd4\u56de1\u3002", 
            "title": "\u7535\u6c60"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_8", 
            "text": "LoRaWAN\u6a21\u5757\u62e5\u6709\u4e00\u4e2a\u5f88\u597d\u7528\u7684\u5e93\uff0c\u5bf9\u4e8e\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u5f88\u591a\u5173\u4e8eLoRa\u7684\u534f\u8bae\uff08\u534f\u8bae\u662f\u5f88\u590d\u6742\u548c\u96be\u4ee5\u9605\u8bfb\u7684\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u60f3\u8981\u9ad8\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u4e00\u4e9b\u5173\u4e8eLoRa\u534f\u8bae\u7684\u77e5\u8bc6\u3002\u60a8\u4e0d\u9700\u8981\u4e0b\u8f7d\u5e93\uff0c\u5b83\u5df2\u7ecf\u5305\u542b\u5728\u5305\u4e2d\u3002\u60a8\u53ef\u4ee5\u5728  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   LoRaWAN  \u4e2d\u627e\u5230\u793a\u4f8b\u7a0b\u5e8f\u3002  \u60a8\u9700\u89812\u5757Seeeduino LoRaWAN\u6765\u5b8c\u6210\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u7528\u4e8e\u53d1\u9001\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u63a5\u6536\u3002", 
            "title": "\u53d1\u9001\u548c\u63a5\u6536\u793a\u4f8b"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_9", 
            "text": "\u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u7136\u540e\u5355\u51fb  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   LoRaWAN   p2p_tx  \u6765\u6253\u5f00\u4f8b\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u590d\u5236\u4e0b\u9762\u7684\u7684\u4ee3\u7801\u3002\n\u8be5\u4f8b\u7a0b\u5c06\u4f1a\u6bcf\u96943000 ms\u5e7f\u64ad\u4e00\u6b21 \"Hello World!\"  // Seduino LoRaWAN - TX example\n#include  LoRaWan.h \n\nvoid setup(void)\n{\n    SerialUSB.begin(115200);\n    lora.init();\n    lora.initP2PMode(433, SF12, BW125, 8, 8, 20);\n}\n\nvoid loop(void)\n{\n    lora.transferPacketP2PMode( Hello World! );\n    SerialUSB.println( Send string. );\n    delay(3000);\n}", 
            "title": "\u53d1\u9001"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_10", 
            "text": "\u6253\u5f00\u60a8\u7684 Arduino IDE \u70b9\u51fb  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   LoRaWAN   p2p_rx  \u6765\u6253\u5f00\u4f8b\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u590d\u5236\u4e0b\u9762\u7684\u7684\u4ee3\u7801\uff1a  // Seduino LoRaWAN - RX example\n#include  LoRaWan.h \n\nunsigned char buffer[128] = {0, };\n\nvoid setup(void)\n{\n    SerialUSB.begin(115200);\n    lora.init();\n    lora.initP2PMode(433, SF12, BW125, 8, 8, 20);\n}\n\nvoid loop(void)\n{\n    short length = 0;\n    short rssi = 0;\n\n    memset(buffer, 0, 128);\n    length = lora.receivePacketP2PMode(buffer, 128,   rssi, 1);\n\n    if(length)\n    {\n        SerialUSB.print( Length is:  );\n        SerialUSB.println(length);\n        SerialUSB.print( RSSI is:  );\n        SerialUSB.println(rssi);\n        SerialUSB.print( Data is:  );\n        for(unsigned char i = 0; i   length; i ++)\n        {\n            SerialUSB.print( 0x );\n            SerialUSB.print(buffer[i], HEX);\n            SerialUSB.print(   );\n        }\n        SerialUSB.println();\n    }\n}  \u5728\u4e24\u4e2a\u4f8b\u7a0b\u90fd\u4e0a\u4f20\u5b8c\u6bd5\u540e\uff0c\u6253\u5f00\u63a5\u6536\u677f\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u83b7\u53d6\u4e00\u4e9b\u6570\u636e\u5982\u4e0b\u6240\u793a\uff1a    Note  \u6211\u4eec\u5c06\u5f88\u5feb\u4e3aLoRa\u63d0\u4f9b\u7f51\u5173\u5957\u4ef6\uff0c\u6211\u4eec\u5c06\u5728\u5957\u4ef6\u7684\u7ef4\u57fa\u4e0a\u6dfb\u52a0\u5173\u4e8eAPB\u548cOTAA\u6a21\u5f0f\u7684\u5165\u95e8\u3002", 
            "title": "\u63a5\u6536"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_11", 
            "text": "W\u6211\u4eec\u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u4f8b\u5b50\u3002\u60a8\u53ef\u4ee5\u6253\u5f00  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   LoRaWan  \u6765\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4f8b\u7a0b\u5305\u62ec\uff1a   ABP  OTAA  p2p-rx  p2p-tx", 
            "title": "\u4e3e\u4e2a\u4f8b\u5b50"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#gps", 
            "text": "Note  \u672c\u7ae0\u4ec5\u9002\u7528\u4e8eSeeeduino LoRaWAN W / GPS\u3002   \u590d\u5236\u4e0b\u9762\u7684\u4ee3\u7801\u4f60Seeeduino LoRaWAN W / GPS\u3002 void setup()\n{\n    Serial.begin(9600);\n    SerialUSB.begin(115200);\n}\n\nvoid loop()\n{\n    while(Serial.available())\n    {\n        SerialUSB.write(Serial.read());\n    }\n    while(SerialUSB.available())\n    {\n        Serial.write(SerialUSB.read());\n    }\n}  \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u7136\u540e\u60a8\u5c06\u4eceGPS\u83b7\u53d6\u6570\u636e\u3002", 
            "title": "GPS\u6570\u636e"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_12", 
            "text": "\u6211\u4eec\u6d4b\u8bd5\u7684\u6700\u5c0f\u7535\u6d41\u4e3a80uA\uff08\u5bf9\u4e8eSeeeduino LoRaWAN\uff09\u3002\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\u3002  1\u3001\u53d6\u4e0bPWR LED\uff08\u5982\u679c\u4e0d\u53d6\u4e0b\u6b64LED\uff0c\u7535\u6d41\u5c06  2mA\uff09\n2\u3001\u53d6\u4e0bCHG LED\n3\u3001\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002  #include  LoRaWan.h \n#include  EnergySaving.h \n\nEnergySaving nrgSave;\n\nvoid blink()\n{\n    for(unsigned char i = 0; i   5; i ++)\n    {\n        digitalWrite(13,HIGH);\n        delay(500);\n        digitalWrite(13,LOW);\n        delay(500);\n    }\n}\n\nvoid setup()\n{\n    for(unsigned char i = 0; i   26; i ++)      // important, set all pins to HIGH to save power\n    {\n        pinMode(i, OUTPUT);\n        digitalWrite(i, HIGH);\n    }\n\n    lora.init();\n    blink();    \n    lora.setDeviceLowPower();\n    blink();    \n    nrgSave.begin(WAKE_EXT_INTERRUPT, 7, dummy);    // buton on D7 to wake up the board\n    nrgSave.standby();\n}\n\nvoid loop()\n{\n    blink();\n    nrgSave.standby();\n}\n\nvoid dummy(void)\n{\n    // do something\n}\n\n// END File", 
            "title": "\u4f4e\u529f\u8017\u3001\u5c0f\u7535\u6d41"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_13", 
            "text": "\u56fa\u4ef6\u7248\u672c\u4e3a2.0.10\uff0c\u5982\u679c\u60a8\u60f3\u68c0\u67e5\u60a8\u7684\u7248\u672c\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002 void setup()\n{\n    Serial1.begin(9600);\n    SerialUSB.begin(115200);\n}\n\nvoid loop()\n{\n    while(Serial1.available())\n    {\n        SerialUSB.write(Serial1.read());\n    }\n    while(SerialUSB.available())\n    {\n        Serial1.write(SerialUSB.read());\n    }\n} \n\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u7136\u540e\u8f93\u5165\uff1a AT+VER \n\u7136\u540e\u60a8\u5c06\u770b\u5230\u60a8\u7684\u5f00\u53d1\u677f\u5f53\u524d\u7684\u7248\u672c\u3002   \u5982\u679c\u8981\u66f4\u65b0\u56fa\u4ef6\uff0c\u5219\u9700\u8981\u9075\u5faa\u51e0\u4e2a\u6b65\u9aa4\u3002  \u6b65\u9aa41  \u5c06\u4e0b\u5217\u4ee3\u7801\u590d\u5236\u5e76\u4e0a\u4f20\u5230\u60a8\u7684\u4e3b\u677f\u3002  // Update firmware to RHF76-052AM  #include   Arduino.h  void   setup ()  { \n     SerialDBG . begin ( 115200 ); \n     SerialUSB . begin ( 115200 );  }  void   loop ()  { \n     while ( SerialDBG . available ()) \n     { \n         SerialUSB . write ( SerialDBG . read ()); \n     } \n     while ( SerialUSB . available ()) \n     { \n         SerialDBG . write ( SerialUSB . read ()); \n     }  }   \u6b65\u9aa42  \u5c06\u677f\u5361\u7684USB\u63a5\u5934\u53d6\u4e0b\uff0c\u7136\u540e\u63d2\u4e0a\uff0c\u91cd\u65b0\u8fde\u63a5\u7535\u8111\uff0c\u7136\u540e\u70b9\u51fbDFU\u6309\u94ae\uff0c\u7b49\u5230\u56fa\u4ef6\u6a21\u5f0fLED\u5f00\u59cb\u95ea\u70c1\u60a8\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002  \u6b65\u9aa43  \u70b9\u51fb\u4e0b\u8f7d\u6700\u65b0\u7684\u56fa\u4ef6 .bin file.   \u6b65\u9aa44  \u6253\u5f00PuTTy\u5e76\u8fde\u63a5\u5230\u7535\u8def\u677f    Tip   \u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6700\u65b0\u7684PuTTy\uff1a.php  http://www.extraputty.com/download.php    \u6b65\u9aa45  \u5c06\u60a8\u7684\u5f00\u53d1\u677f\u548cPutty\u76f8\u8fde\uff0c\u60a8\u5c06\u770b\u5230\u5b57\u6bcd\u201cC\u201d\u4e0d\u65ad\u5730\u6253\u5370\u5728\u5c4f\u5e55\u4e0a\u3002\u70b9\u51fb**Files Transfer\uff08\u6587\u4ef6\u4f20\u8f93\uff09   Ymodem   Send**, \u7136\u540e\u9009\u62e9\u6b65\u9aa44\u4e2d\u4e0b\u8f7d\u7684.bin file\u3002  \u7136\u540e\u5347\u7ea7\u5c31\u5f00\u59cb\u4e86\u3002", 
            "title": "\u66f4\u65b0\u56fa\u4ef6"
        }, 
        {
            "location": "/Seeeduino_LoRAWAN/#_14", 
            "text": "[eagle\u539f\u7406\u56fe]   Schematics in Eagle  [sketchup\u6587\u4ef6]   Sketchup file(3D)  [RHF76-052 \u7535\u6c14\u56fe]    CE certification of RHF 76-052  [RHF76-052\u56fa\u4ef6]   RHF76-052 Firmware V2.0.10  [\u6570\u636e\u624b\u518cRHF76-052AM]   Datasheet of RHF76-052AM", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/UartSBee_v5/", 
            "text": "UartSBee v5\n \u517c\u5bb9 FTDI \u7535\u7f06\uff0c\nUSB \u8f6c\u4e32\u53e3\n \u9002\u914d\u5668\u542b\u6709 Bee \u7684\u63d2\u5ea7\uff0820pin,2.0mm\uff09\u3002\u96c6\u6210\u7684 \nFT232RL\n \u53ef\u7528\u4e8e\u7f16\u7a0b\u6216\u4e0e MCU \u901a\u4fe1\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 \nBee\n \u6a21\u5757\u5c06PC\u8fde\u63a5\u5230\u5404\u79cd\u65e0\u7ebf\u5e94\u7528\u7a0b\u5e8f\u3002UartSBee \u6269\u5c55\u4e86 \nFT232RL\n \u7684 bit-bang \u6a21\u5f0f\u3002\u8fd9\u4e2a Bit-bang \u6a21\u5f0f\u5f15\u811a\uff088 \u4e2a I/O \u5f15\u811a\uff09\u53ef\u4ee5\u7528\u6765\u66ff\u4ee3\u6d89\u53ca\u7535\u8111\u5e76\u884c\u7aef\u53e3\u7684\u5e94\u7528\u3002\n\n\n\n\nUartSBee v5 \u662f\u57fa\u4e8e UartSBee v4 \u7684 Mesh Bee \u7a0b\u5e8f\u5458\u7248\u672c\u3002\n\n\n\u60f3\u4e86\u89e3 UartSBee v4 \u66f4\u591a\uff0c\u8bf7\u8bbf\u95ee \nUartSBee v4 \u7684 wiki \u9875\u9762\n\u3002\u5728\u672c\u7bc7 Wiki \u4e2d\u6211\u4eec\u4e3b\u8981\u5173\u6ce8 V4 \u548c V5 \u7684\u533a\u522b\u3002\n\n\n\u65b0\u589e\u7279\u6027\n\n\n\n\nMicroUSB \u63a5\u53e3\u3002\n\n\nMesh Bee \u53ef\u7f16\u7a0b\u3002\n\n\n\u589e\u52a0\u4e86 SW3 \u5728 BEE \u63d2\u5ea7\u7684 TX1 / RX1 \u5f15\u811a\u6765\u5207\u6362 FT232 \u7684 UART \u548c Mesh Bee \u7684\u7a0b\u5e8f\u63a5\u53e3\u7684\u8fde\u63a5\u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle \u6587\u4ef6]\nEagle file for UartSBee v5\n\n\n[Wiki]\nHow to program Mesh Bee", 
            "title": "UartSBee v5"
        }, 
        {
            "location": "/UartSBee_v5/#_1", 
            "text": "MicroUSB \u63a5\u53e3\u3002  Mesh Bee \u53ef\u7f16\u7a0b\u3002  \u589e\u52a0\u4e86 SW3 \u5728 BEE \u63d2\u5ea7\u7684 TX1 / RX1 \u5f15\u811a\u6765\u5207\u6362 FT232 \u7684 UART \u548c Mesh Bee \u7684\u7a0b\u5e8f\u63a5\u53e3\u7684\u8fde\u63a5\u3002", 
            "title": "\u65b0\u589e\u7279\u6027"
        }, 
        {
            "location": "/UartSBee_v5/#_2", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/UartSBee_v5/#_3", 
            "text": "[Eagle \u6587\u4ef6] Eagle file for UartSBee v5  [Wiki] How to program Mesh Bee", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/BeagleBone/", 
            "text": "BeagleBones\u5728\u5fae\u63a7\u5236\u5668\u4e16\u754c\u4e2d\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u665a\uff0c\u4f46\u662f\u9ad8\u6027\u80fd\u548c\u4f4e\u529f\u8017\u4f7f\u5176\u6210\u4e3a\u5f00\u653e\u786c\u4ef6\u9886\u57df\u7684\u4e09\u5927\u6d41\u884c\u5e73\u53f0\u4e4b\u4e00\u3002 Beagles\u610f\u5473\u7740\u5c0f\u5305\u88c5\u4e2d\u7684\u5927\u529f\u80fd\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5c0f\u578bPC\u53ef\u4ee5\u7528\u4e8e\u60a8\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5904\u7406\u4e0e\u684c\u9762PC\u76f8\u540c\u7684\u8bb8\u591a\u76f8\u540c\u4efb\u52a1\u3002\u7c7b\u4f3c\u4e8eArduino\u548cRaspberry Pi\uff0cBeaglebone\u677f\u88ab\u827a\u672f\u5bb6\uff0c\u8bbe\u8ba1\u5e08\u548c\u7231\u597d\u8005\u7528\u6765\u5b9e\u73b0\u4ed6\u4eec\u7684\u9879\u76ee\u3002\n\n\nBeagleBone\u677f\u662f\u7f8e\u5999\u7684\u677f\uff0c\u4f46Seeed\u661f\u7403\u4e0a\u7684\u4eba\u5bf9\u76ee\u524d\u7684Beaglebone\u5e76\u4e0d\u6ee1\u610f\uff0c\u60f3\u8981\u505a\u51fa\u4e00\u4e9b\u6539\u5584\u3002\u5c31\u50cf\u6211\u4eec\u5728Seeeduino\u505a\u7684\u4e00\u6837\uff0c\u6211\u4eec\u4e0eBeaglebone.org\u8c08\u8bba\u4e86\u6211\u4eec\u7684\u60f3\u6cd5\uff0c\u7ec8\u4e8e\u6709\u673a\u4f1a\u4e0e\u4ed6\u4eec\u4e00\u8d77\u521b\u5efa\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u677f\u5b50\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u521b\u5efa\u4e86Seeed Studio\u81ea\u5df1\u7684Beaglebone\uff0cBeaglebone Green\uff08\u7b80\u79f0BBG\uff09 \uff09\u3002\n\n\nBeagleBone Green\u7531Beaglebone Black\uff08\u7b80\u79f0BBB\uff09\u6539\u8fdb\uff0c\u5982\u679c\u60a8\u4e86\u89e3BBB\uff0c\u60a8\u5c06\u4f1a\u77e5\u9053BBB\u5c31\u50cf\u662fbeagleboard\u7cfb\u5217\u4e2d\u7684\u660e\u661f\u677f\uff0c\u5b83\u7ee7\u627f\u4e86Beaglebone\u7684\u5c0f\u5c3a\u5bf8\uff0c\u5e76\u589e\u52a0\u4e86\u8bb8\u591a\u597d\u7684\u529f\u80fd\uff0c\u540c\u65f6\u4ef7\u683c\u4f4e\u5f97\u591a\u5f53\u6211\u4eec\u8bbe\u8ba1BBG\u65f6\uff0c\u6211\u4eec\u51b3\u5b9a\u4fdd\u7559\u51e0\u4e4e\u6240\u6709BBB\u7684\u4f18\u70b9\uff0c\u5982\u5fae\u5c0f\u7684\u5c3a\u5bf8\uff0c\u4e30\u5bcc\u7684\u754c\u9762\u548c\u5f3a\u5927\u7684\u6269\u5c55\u6027\uff0c\u540c\u65f6\u75282 Seeed Grove\u8fde\u63a5\u5668\u66ff\u4ee3HDMI\u63a5\u53e3\uff0c\u4f7f\u5176\u4e0eGrove\u517c\u5bb9\u3002\n\n\n\u6211\u4eec\u53d1\u5e03\u4e86\u53e6\u4e00\u4e2aBeagleBone\uff0c\u540d\u4e3aBeagleBone Green Wireless\uff08\u7b80\u79f0BBGW\uff09\uff0c\u9664\u4e86\u8fde\u63a5\u5668\uff0cBBGW\u8fd8\u5305\u62ec\u9ad8\u6027\u80fd\u7075\u6d3b\u7684WiFi /\u84dd\u7259\u63a5\u53e3\uff0c\u4f7f\u5176\u6210\u4e3aBeagleBone\u7684\u9996\u4e2aWiFi /\u84dd\u7259\u677f\u5bb6\u5ead\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684BeagleBone\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nBeagleBone_Green\n\n\nBeagleBone_Green_HDMI_Cape\n\n\nBeagleBone_Green_Wireless\n\n\nGrove_Base_Cape_for_BeagleBone_v2\n\n\nGrove_Starter_Kit_for_BeagleBone_Green", 
            "title": "BeagleBone"
        }, 
        {
            "location": "/BeagleBone/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684BeagleBone\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   BeagleBone_Green  BeagleBone_Green_HDMI_Cape  BeagleBone_Green_Wireless  Grove_Base_Cape_for_BeagleBone_v2  Grove_Starter_Kit_for_BeagleBone_Green", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/BeagleBone_Green/", 
            "text": "SeeedStudio BeagleBone Green\uff08BBG\uff09\u662f\u4e13\u4e3a\u5f00\u53d1\u8005\u548c\u4e1a\u4f59\u7231\u597d\u8005\u8bbe\u8ba1\u7684\uff0c\u4f4e\u6210\u672c\uff0c\u5f00\u6e90\uff0c\u793e\u533a\u652f\u6301\u7684\u5f00\u53d1\u5e73\u53f0\u3002 \u8fd9\u662f\nBeagleBoard.org\n\u548cSeeed Studio\u7684\u5171\u540c\u52aa\u529b\u3002 \u5b83\u57fa\u4e8e\nBeagleBone Black\n \u7684\u7ecf\u5178\u5f00\u6e90\u786c\u4ef6\u8bbe\u8ba1\uff0c\u5e76\u5f00\u53d1\u6210\u8fd9\u79cd\u5dee\u5f02\u5316\u7248\u672c\u3002 BBG\u5305\u62ec\u4e24\u4e2aGrove\u8fde\u63a5\u5668\uff0c\u4f7f\u5176\u66f4\u5bb9\u6613\u8fde\u63a5\u5230\u5927\u91cfGrove\u4f20\u611f\u5668\u7cfb\u5217\u3002 \u79fb\u9664\u677f\u8f7dHDMI\u4e3a\u8fd9\u4e9bGrove\u8fde\u63a5\u5668\u817e\u51fa\u7a7a\u95f4\u3002\n\n\n\u5728\u4e0d\u523010\u79d2\u5185\u542f\u52a8Linux\uff0c\u53ea\u9700\u4e00\u6839USB\u7535\u7f06\u5373\u53ef\u57285\u5206\u949f\u5185\u5f00\u59cb\u5f00\u53d1\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u548cBeagleBone Black\u5b8c\u5168\u517c\u5bb9\n\n\n\u5904\u7406\u5668: AM335x 1GHz ARMR Cortex-A8\n\n\n512MB DDR3 RAM\n\n\n4GB 8-bit eMMC \u677f\u8f7d flash \u5b58\u50a8\n\n\n3D \u56fe\u5f62\u52a0\u901f\u5668\n\n\nNEON \u6d6e\u70b9\u52a0\u901f\u5668\n\n\n2x PRU 32-bit \u5fae\u5904\u7406\u5668\n\n\n\n\n\n\n\u63a5\u53e3\n\n\nUSB client\u53ef\u4f9b\u7535\u548c\u901a\u4fe1\n\n\nUSB host\n\n\nEthernet\n\n\n2x 46 pin \u63a5\u5934\n\n\n2x Grove connectors (I2C and UART)\n\n\n\n\n\n\n\u7cfb\u7edf\u517c\u5bb9\n\n\nDebian\n\n\nAndroid\n\n\nUbuntu\n\n\nCloud9 IDE on Node.js w/ BoneScript library\n\n\n\u5373\u5c06\u517c\u5bb9\u66f4\u591a\n\n\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u5185\u5bb9\n\n\n\n\n\n\n\n\n\n\n\u5904\u7406\u5668\n\n\nAM335x 1GHz ARMR Cortex-A8\n\n\n\n\n\n\nRAM\n\n\n512MB DDR3\n\n\n\n\n\n\n\u677f\u8f7dFlash \u5b58\u50a8\n\n\n4GB eMMC\n\n\n\n\n\n\nCPU Supports\n\n\nNEON floating-point \n 3D graphics accelerator\n\n\n\n\n\n\nMicro USB  Supports\n\n\npowering \n communications\n\n\n\n\n\n\nUSB\n\n\nHost  1\n\n\n\n\n\n\nGrove Connectors\n\n\n2 (One I2C and One UART)\n\n\n\n\n\n\nGPIO\n\n\n2 x 46 pin headers\n\n\n\n\n\n\nEthernet\n\n\n1\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n0 ~ 75\u00b0\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u7269\u8054\u7f51\n\n\n\u667a\u80fd\u5bb6\u5c45\n\n\n\u5de5\u4e1a\u5e94\u7528\n\n\n\u81ea\u52a8\u5316\u8fc7\u7a0b\u63a7\u5236\n\n\n\u673a\u5668\u4eba\u4ea4\u4e92\n\n\n\u4f20\u611f\u5668\u8282\u70b9\n\n\n\n\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\u53ef\u4ee5\u4f9b\u60a8\u53c2\u8003\u3002\n\n\n\n\n\n\n\n\nHome Center\n\n\nRetro Lamp\n\n\nDrive a Motor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBBG Acrylic Case\n\n\nGPIO Control\n\n\nSmart Light\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\nUSB Host\n - USB Host\n\n\nDC Power and USB Client\n - \u4e3a\u677f\u5b50\u4f9b\u7535\u5e76\u4e14\u4f5c\u4e3a\u4ece\u673a\n\n\nLEDs\n\n\nD2\n \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5fc3\u8df3\u95ea\u70c1\n\n\nD3\n \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u8bfb\u5199SD\u5361\u6570\u636e\u65f6\u4eae\u8d77\n\n\nD4\n \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5f53 CPU \u6d3b\u52a8\u65f6\u4eae\u8d77\n\n\nD5\n \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5f53eMMC \u8bfb\u5199\u65f6\u4eae\u8d77\n\n\n\n\n\n\nBoot \u6309\u94ae\n\n\n\u5f53\u6709SD\u5361\u63d2\u5165\u65f6\uff0c\u7cfb\u7edf\u5c06\u9996\u5148\u4eceSD\u5361\u542f\u52a8\uff0c\u5982\u679c\u8981\u4eceeMMC\u542f\u52a8\uff0c\u8bf7\u6309\u6b64\u6309\u94ae\uff0c\u7136\u540e\u63a5\u901a\u7535\u6e90.\n\n\n\u5f53\u542f\u52a8\u540e\u5c31\u4f5c\u4e3a\u4e00\u4e2a\u666e\u901a\u6309\u94ae, \u8fde\u63a5\u5230 \nGPIO_72\n\n\n\n\n\n\nI2C Grove Interface\n - \u8fde\u63a5\u5230 \nI2C2\n\n\nUart Grove Interface\n - \u8fde\u63a5\u5230 \nUART2\n\n\nSerial Debug\n - \u8fde\u63a5\u5230 \nUART0\n, PIN1~PIN6: GND, NC, NC, RX, TX, NC, \u8bf7\u6ce8\u610fpin1 \u662f\u6307\u9760\u8fd1USB \u7684\u7ba1\u811a.\n\n\n\n\n\u7ba1\u811a\u56fe\n\n\n\u6bcf\u4e2a\u6570\u5b57 I/O pin \u62e5\u67098\u79cd\u4e0d\u540c\u6a21\u5f0f\u53ef\u4f9b\u9009\u62e9\uff0c\u5305\u62ec GPIO.\n\n\n65 \u79cd\u4e0d\u540c\u53ef\u80fd\u7684\u6570\u5b57 I/Os\n\n\n\n\nNote\n\n\n\u5728 GPIO \u6a21\u5f0f\u4e0b\uff0c\u6bcf\u4e2a\u6570\u5b57 I/O \u7ba1\u811a\u90fd\u53ef\u4ee5\u5904\u7406\u4e2d\u65ad\u3002\n\n\n\n\n\n\nPWMs and Timers\n\n\n\n\nNote\n\n\n\u9ad8\u8fbe8\u4e2a\u6570\u5b57 I/O \u5f15\u811a\u53ef\u4ee5\u88ab\u914d\u7f6e\u6210\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u6a21\u5f0f (PWM) \uff0c\u4ece\u800c\u5728\u65e0\u9700CPU\u53c2\u4e0e\u7684\u60c5\u51b5\u4e0b\u7528\u4e8e\u4ea7\u751f\u4fe1\u53f7\u6765\u63a7\u5236\u7535\u673a\u6216\u8005\u4ea7\u751f\u6a21\u62df\u7535\u5e73\u3002\n\n\n\n\n\n\n\u6a21\u62df\u8f93\u5165\n\n\n\n\nNote\n\n\n\u8bf7\u786e\u4fdd\u5728\u4efb\u4f55\u6a21\u62df\u5f15\u811a\u52a0\u7684\u8f93\u5165\u7535\u538b\u4e0d\u9ad8\u4e8e1.8V\u3002\u677f\u5361\u4e0a\u53ea\u6709\u4e00\u4e2a8\u901a\u9053\u7684 12-bit \u6570\u6a21\u8f6c\u5316\u5668\uff0c\u5176\u4e2d7\u4e2a\u901a\u9053\u5f15\u51fa\u5230\u63a5\u53e3\u3002\n\n\n\n\n\n\nUART\n\n\n\n\nNote\n\n\n\u6709\u4e00\u4e2a\u4e13\u7528\u7684\u8fde\u63a5\u5934\u7528\u4e8e\u8fde\u63a5UART0\u811a\u5e76\u4e14\u8fde\u63a5\u5230debug\u7ebf\u7f06\u30025\u4e2a\u9644\u52a0\u7684\u4e32\u884c\u53e3\u4e5f\u8fde\u63a5\u5230\u4e86\u6269\u5c55\u63a5\u53e3\u3002\n\n\n\n\n\n\nI2C\n\n\n\n\nNote\n\n\n\u7b2c\u4e00\u4e2aI2C\u603b\u7ebf\u7528\u4e8e\u8bfb\u53d6Cape\u9644\u52a0\u677f\u4e0a\u7684EEPROMS\uff0c\u4e3a\u4e86\u4e0d\u4f1a\u5f71\u54cd\u8be5\u529f\u80fd\u8be5\u603b\u7ebf\u4e0d\u80fd\u7528\u4e8e\u5176\u4ed6\u6570\u5b57I / O\u64cd\u4f5c\uff0c\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u5b83\u5728\u53ef\u7528\u5730\u5740\u4e2d\u6dfb\u52a0\u5176\u4ed6I2C\u8bbe\u5907\u3002 \u7b2c\u4e8c\u4e2aI2C\u603b\u7ebf\u53ef\u4f9b\u60a8\u81ea\u7531\u914d\u7f6e\u548c\u4f7f\u7528\u3002\n\n\n\n\n\n\nSPI\n\n\n\n\nNote\n\n\n\u82e5\u662f\u9700\u8981\u5feb\u901f\u4f20\u8f93\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528SPI\u63a5\u53e3\u3002\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5357\n\n\n\n\n\n\nNote\n\n\n\u6b64\u7ae0\u8282\u662f\u57fa\u4e8eWindows 10 \u7cfb\u7edf\uff0c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u7684\u6307\u5357\u4e0e\u6b64\u7c7b\u4f3c\u3002\n\n\n\n\n\u6b65\u9aa41.\u901a\u8fc7 USB \u63a5\u53e3\u8fde\u63a5 BBG\n\n\n\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684Micro-USB\u7535\u7f06\u5c06\u60a8\u7684BBG\u63a5\u5165\u7535\u8111\u3002 \u8fd9\u5c06\u540c\u65f6\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u5e76\u63d0\u4f9b\u5f00\u53d1\u63a5\u53e3\u3002 BBG\u5c06\u4ece\u677f\u8f7d2GB\u62164GB eMMC\u542f\u52a8Linux\u3002\n\n\nBBG\u5c06\u4f5c\u4e3a\u95ea\u5b58\u9a71\u52a8\u5668\u8fd0\u884c\uff0c\u4e3a\u60a8\u63d0\u4f9b\u6587\u6863\u548c\u9a71\u52a8\u7a0b\u5e8f\u7684\u672c\u5730\u526f\u672c\u3002 \u8bf7\u6ce8\u610f\uff0c\u6b64\u63a5\u53e3\u53ef\u80fd\u4e0d\u7528\u4e8e\u4f7f\u7528\u65b0\u6620\u50cf\u91cd\u65b0\u914d\u7f6emicroSD\u5361\uff0c\u4f46\u53ef\u7528\u4e8e\u4f7f\u7528uEnv.txt\u6587\u4ef6\u66f4\u65b0\u5f15\u5bfc\u53c2\u6570\u3002\n\n\n\u60a8\u5c06\u770b\u5230PWR LED\u7a33\u5b9a\u70b9\u4eae\u3002 \u572810\u79d2\u949f\u5185\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u53e6\u4e00\u4e2aLED\u4ee5\u5176\u9ed8\u8ba4\u914d\u7f6e\u95ea\u70c1\u3002\n\n\n\n\nD2\n \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5fc3\u8df3\u95ea\u70c1\n\n\nD3\n \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u8bfb\u5199SD\u5361\u6570\u636e\u65f6\u4eae\u8d77\n\n\nD4\n \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5f53 CPU \u6d3b\u52a8\u65f6\u4eae\u8d77\n\n\nD5\n \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5f53eMMC \u8bfb\u5199\u65f6\u4eae\u8d77\n\n\n\n\n\u6b65\u9aa42. \u5b89\u88c5\u9a71\u52a8\n\n\n\u4e3a\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u8ba9\u60a8\u7684Beaglebone\u53ef\u4ee5\u901a\u8fc7USB\u8bbf\u95ee\u7f51\u7edc\u3002 \u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u53ef\u8ba9\u60a8\u8bbf\u95ee\u7684\u4e3b\u677f\u3002\n\n\n\n\n\n\n\n\n\u64cd\u4f5c\u7cfb\u7edf\n\n\nUSB \u9a71\u52a8\n\n\n\u5907\u6ce8\n\n\n\n\n\n\n\n\n\n\nWindows (64-bit)\n\n\n64-bit installer\n\n\n\n\n\n\n\n\nWindows (32-bit)\n\n\n32-bit installer\n\n\n\n\n\n\n\n\nMac OS X\n\n\nNetwork\n and \nSerial\n\n\n\u6ce8\u610fNetwork\u548cSerial\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u9a71\u52a8\uff0c\u60a8\u90fd\u9700\u8981\u5b89\u88c5\n\n\n\n\n\n\nLinux\n\n\nmkudevrule.sh\n\n\n\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u662f\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u51e0\u4e2audev\u89c4\u5219\u5f88\u6709\u5e2e\u52a9\u3002.\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\u5bf9\u4e8eWindows\u7cfb\u7edf\uff0c\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9:\n\n\n\n\nWindows \u9a71\u52a8\u8ba4\u8bc1\u8b66\u544a\u53ef\u80fd\u4f1a\u5f39\u51fa\u4e24\u5230\u4e09\u6b21\uff0c\u70b9\u51fb \"\u5ffd\u7565\", \"\u5b89\u88c5\" \u6216\u8005 \"\u8fd0\u884c\"\n\n\n\u70b9\u51fb\u4e0b\u9762\u94fe\u63a5\u67e5\u770b\u60a8\u9700\u8981\u5b89\u88c564\u4f4d\u6216\u800532\u4f4d \n\u70b9\u51fb\u8fd9\u91cc\n\n\n\u5728\u975e\u6700\u65b0\u7248\u672c\u7684Windows\u7cfb\u7edf\u4e0b,\u60a8\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u9519\u8bef (0xc000007b)\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u70b9\u51fb \n\u5b89\u88c5\n \u518d\u91cd\u8bd5\u4e00\u6b21\u3002\n\n\n\u60a8\u53ef\u80fd\u9700\u8981\u91cd\u542f\u7535\u8111\u3002\n\n\n\u8be5\u9a71\u52a8\u5728Windows 10 \u4e0b\u6d4b\u8bd5\u901a\u8fc7\u3002\n\n\n\n\n\n\n\n\nNote\n\n\nAdditional FTDI USB to serial/JTAG information and drivers are available from \nhttps://www.ftdichip.com/Drivers/VCP.htm\n.\n\n\n\n\n\n\nNote\n\n\nAdditional USB to virtual Ethernet information and drivers are available from \nhttps://www.linux-usb.org/gadget/\n and \nhttps://joshuawise.com/horndis\n.\n\n\n\n\n\u6b65\u9aa43. \u4f7f\u7528\u6d4f\u89c8\u5668\u6d4f\u89c8\u60a8\u7684 Beagle\n\n\n\u4f7f\u7528Chrome\u6216Firefox\uff08Internet Explorer\u5c06\u4e0d\u8d77\u4f5c\u7528\uff09\uff0c\u6d4f\u89c8\u5230\u60a8\u7684\u7535\u8def\u677f\u4e0a\u8fd0\u884c\u7684Web\u670d\u52a1\u5668\u3002 \u5b83\u5c06\u52a0\u8f7d\u4e00\u4e2a\u6f14\u793a\u6587\u7a3f\uff0c\u5411\u60a8\u663e\u793a\u7535\u8def\u677f\u7684\u529f\u80fd\u3002 \u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u6d4f\u89c8\u6f14\u793a\u6587\u7a3f\u3002\n\u4f7f\u7528Chrome\u6216Firefox\uff08Internet Explorer\u5c06\u4e0d\u8d77\u4f5c\u7528\uff09\uff0c\u6d4f\u89c8\u5230\u60a8\u7684\u7535\u8def\u677f\u4e0a\u8fd0\u884c\u7684Web\u670d\u52a1\u5668\u3002 \u5b83\u5c06\u52a0\u8f7d\u4e00\u4e2a\u6f14\u793a\u6587\u7a3f\uff0c\u5411\u60a8\u5c55\u793a\u7535\u8def\u677f\u7684\u529f\u80fd\u3002 \u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u5bfc\u822a\u6f14\u793a\u6587\u7a3f\u3002\n\n\n\u70b9\u51fb \nhttp://192.168.7.2\n \u6765\u52a0\u8f7d\u60a8\u7684 BBG.\n\u8f83\u65e7\u7684\u8f6f\u4ef6\u6620\u50cf\u8981\u6c42\u60a8\u4f7f\u7528BEAGLE_BONE\u9a71\u52a8\u5668\u542f\u52a8\u7f51\u7edc\u3002 \u4f7f\u7528\u6700\u65b0\u7684\u8f6f\u4ef6\u6620\u50cf\uff0c\u4e0d\u518d\u9700\u8981\u8be5\u6b65\u9aa4\u3002\n\n\n\n\n\u6b65\u9aa44. Cloud9 IDE\n\n\n\u8981\u5f00\u59cb\u7f16\u8f91\u60a8\u7684\u4e3b\u677f\u4e0a\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5355\u51fb\u4e0b\u9762\u94fe\u63a5\u6765\u5f00\u542f Cloud9 IDE\n\n\n\n\n\u66f4\u65b0\u5230\u6700\u65b0\u7684\u8f6f\u4ef6\n\n\n\n\n\u60a8\u9700\u8981\u5c06\u4e3b\u677f\u66f4\u65b0\u5230\u6700\u65b0\u7684\u8f6f\u4ef6\u4ee5\u4fdd\u6301\u66f4\u597d\u7684\u6027\u80fd\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u9010\u6b65\u5b9e\u73b0\u3002\n\n\n\u6b65\u9aa41. \u4e0b\u8f7d\u6700\u65b0\u7684\u56fa\u4ef6\n\n\n\u9996\u5148\uff0c\u60a8\u5fc5\u987b\u5728\u8fd9\u91cc\u4e0b\u8f7d\u5408\u9002\u7684\u56fa\u4ef6\u3002\n\n\n\n\n\n\nNote\n\n\n\u7531\u4e8e\u8f6f\u4ef6\u5927\u5c0f\uff0c\u6b64\u4e0b\u8f7d\u53ef\u80fd\u9700\u8981\u7ea630\u5206\u949f\u6216\u66f4\u957f\u65f6\u95f4\u3002\n\n\n\n\n\u60a8\u4e0b\u8f7d\u7684\u6587\u4ef6\u5c06\u6709\u4e00\u4e2a**img.xz **\u6269\u5c55\u540d\u3002 \u8fd9\u662f\u7528\u4e8eSD\u5361\u70e7\u5f55\u7684\u56fa\u4ef6\u3002\n\n\n\u6b65\u9aa42. \u5b89\u88c5SD\u5361\u70e7\u5f55\u7a0b\u5e8f\n\n\n\u4e0b\u8f7d\u5e76\u4e14\u5b89\u88c5  \nImage Writer for Windows\n. \u8bf7\u786e\u4fdd\u60a8\u4e0b\u8f7d\u7684\u662f\u5bf9\u5e94\u81ea\u5df1\u7cfb\u7edf\u7684\u7248\u672c\u3002\n\n\n\u6b65\u9aa43. \u5c06\u60a8\u7684\u56fa\u4ef6\u5199\u5165SD\u5361\n\n\n\u9996\u5148\u9700\u8981\u901a\u8fc7\u4e00\u4e2aSD\u9002\u914d\u5668\u5c06microSD\u5361\u8fde\u63a5\u5230\u7535\u8111\u3002 \u7136\u540e\u4f7f\u7528\u8f6f\u4ef6Image Write for Windows\u5c06\u89e3\u538b\u7f29\u7684\u56fa\u4ef6\u5199\u5165SD\u5361\u3002\n\n\n\n\n\u70b9\u51fb \nWrite\n \u6309\u94ae,\u7136\u540e\u5199\u5165\u7a0b\u5e8f\u5c06\u5f00\u542f\u3002\n\n\n\n\n\n\nNote\n\n\n\n\n\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u6709\u5173\u635f\u574fSD\u5361\u7684\u8b66\u544a\uff0c\u8bf7\u60a8\u653e\u5fc3\u9009\u62e9\u63a5\u53d7\u3002\n\n\n\u6b64\u65f6\u60a8\u4e0d\u5e94\u5c06 BeagleBone \u94fe\u63a5\u5230\u7535\u8111\u3002\n\n\n\u6574\u4e2a\u8fc7\u7a0b\u5927\u6982\u4f1a\u6301\u7eed10\u5206\u949f\u3002\n\n\n\n\n\n\n\u6b65\u9aa44. \u4eceSD\u5361\u542f\u52a8\u60a8\u7684\u7cfb\u7edf\n\n\n\u5173\u95ed\u7535\u6e90\uff0c\u63d2\u5165SD\u5361\uff0c\u7136\u540e\u6253\u5f00\u7535\u6e90\uff0c\u7cfb\u7edf\u5c31\u5c06\u4eceSD\u5361\u542f\u52a8\u3002\n\n\n\n\nNote\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4e0d\u9700\u8981\u5c06\u56fa\u4ef6\u5199\u5165\u60a8\u7684\u677f\u8f7deMMC\uff0c\u5219\u65e0\u9700\u9605\u8bfb\u672c\u7ae0\u6700\u540e\u4e00\u7ae0\u3002 \u5426\u5219\u8bf7\u7ee7\u7eed\u3002\n\n\n\n\n\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u56fa\u4ef6\u5199\u5165\u60a8\u7684\u677f\u8f7deMMC\uff0c\u5219\u9700\u8981\u52a0\u8f7d\u8fdb\u677f\u5361\u5e76\u4fee\u6539\u6587\u4ef6\u3002\n\n\n\u5728 \n/boot/uEnv.txt\n \u4e2d\u627e\u5230:\n\n\n##enable BBB: eMMC Flasher:\n#cmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh\n\n\n\n\n\n\u4fee\u6539\u4e3a:\n\n\n##enable BBB: eMMC Flasher:\ncmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh\n\n\n\n\n\n\u7136\u540e\u60a8\u5c06\u770b\u52304\u4e2aLED\u706f\u4f1a\u5982\u4e0b\u56fe\u95ea\u70c1\u3002\n\n\n\n\n\n\nNote\n\n\n\n\n\n\n\u5982\u679c\u6ca1\u6709\u770b\u5230\u4e0a\u56fe\u6240\u793a\u7684\u7684\u706f\u8ff9\uff0c\u8bf7\u6309RESET\u6309\u94ae\u91cd\u7f6e\u7535\u8def\u677f\u3002\n\n\n\n\n\u5f53\u95ea\u70c1\u5b8c\u6210\u65f6\uff0c\u6240\u67094\u4e2a\u7528\u6237\u6307\u793a\u706f LED\u5c06\u5173\u95ed\u3002 \u6700\u65b0\u7684Debian\u7cfb\u7edf\u5728\u5b8c\u6210\u56fa\u4ef6\u52a0\u8f7d\u540e\u81ea\u52a8\u5173\u95ed\u7535\u8def\u677f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6700\u591a\u53ef\u80fd\u4f1a\u6301\u7eed** 10\u5206\u949f**\u3002 \u5173\u95ed\u7535\u6e90\uff0c\u53d6\u51faSD\u5361\uff0c\u518d\u6b21\u63a5\u901a\u7535\u6e90\u5373\u53ef\u5b8c\u6210\u3002\n\n\nGrove for BBG\n\n\n\n\nGrove \u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u662f\u4e00\u4e2a\u5177\u6709\u6807\u51c6\u534f\u8bae\u7684\u8fde\u63a5\u5668\u7cfb\u7edf\u3002 Grove\u91c7\u7528\u79ef\u6728\u5f0f\u7ec4\u88c5\u7535\u5b50\u6280\u672f\u3002 \u4e0e\u57fa\u4e8e\u8df3\u7ebf\u6216\u710a\u63a5\u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u5177\u6709\u8fde\u63a5\u65b9\u4fbf\u3001\u7ed3\u6784\u7b80\u5355\u3001\u6613\u4e8e\u4e0a\u624b\u3001\u53ef\u5feb\u901f\u5165\u95e8\u5b66\u4e60\u7b49\u8bf8\u591a\u4f18\u70b9\u3002\n\n\n\u4e0b\u8868\u7f57\u5217\u4e86\u9002\u7528\u4e8e BBG \u7684Grove \u6a21\u5757.\n\n\n\n\n\n\n\n\nSKU\n\n\n\u540d\u79f0\n\n\n\u63a5\u53e3\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\n101020054\n\n\nGrove - 3-Axis Digital Accelerometer(+16g)\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020071\n\n\nGrove - 3-Axis Digital Accelerometer(+400g)\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020034\n\n\nGrove - 3-Axis Digital Compass\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020050\n\n\nGrove - 3-Axis Digital Gyro\n\n\nAnalog\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020081\n\n\nGrove - 6-Axis Accelerometer\nCompass v2.0\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020072\n\n\nGrove - Barometer Sensor(BMP180)\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n104030010\n\n\nGrove - Blue LED\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020003\n\n\nGrove - Button\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n111020000\n\n\nGrove - Button(P)\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n107020000\n\n\nGrove - Buzzer\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n104030006\n\n\nGrove - Chainable RGB LED\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020030\n\n\nGrove - Digital Light Sensor\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n103020024\n\n\nGrove - Finger-clip Heart Rate Sensor\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020082\n\n\nGrove - Finger-clip Heart Rate Sensor with shell\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n113020003\n\n\nGrove - GPS\n\n\nUART\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n104030007\n\n\nGrove - Green LED\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n103020013\n\n\nGrove - I2C ADC\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n103020006\n\n\nGrove - I2C Hub\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020079\n\n\nGrove - IMU 10DOF\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020080\n\n\nGrove - IMU 9DOF v2.0\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020040\n\n\nGrove - IR Distance Interrupter\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n104030011\n\n\nGrove - OLED Display 0.96''\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n104030008\n\n\nGrove - OLED Display 1.12''\n\n\nI2C\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n104030005\n\n\nGrove - Red LED\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n103020005\n\n\nGrove - Relay\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n316010005\n\n\nGrove - Servo\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020023\n\n\nGrove - Sound Sensor\n\n\nAnalog\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020004\n\n\nGrove - Switch(P)\n\n\nI/O\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020015\n\n\nGrove - Temperature Sensor\n\n\nAnalog\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n101020019\n\n\nGrove - Temperature\nHumidity Sensor Pro\n\n\nAnalog\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\nCape for BBG\n\n\n\n\n\u5728\u60a8\u5f00\u59cb\u81ea\u5df1\u7684\u9879\u76ee\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u6269\u5c55\u677f\u3002 BBG \u5df2\u7ecf\u6709\u8bb8\u591a\u6269\u5c55\u677f\uff0c\u5305\u62ec\u6db2\u6676\u663e\u793a\u5668\uff0c\u7535\u673a\u9a71\u52a8\u5668\u4ee5\u53caHDMI\u6269\u5c55\u7b49\u3002\u4ee5\u4e0b\u662f\u5176\u4e2d\u7684\u4e00\u4e9b\u63a8\u8350\u3002\n\n\n\n\n\n\n\n\nGrove Cape\n\n\nMotor Bridge Cape\n\n\nHDMI Cape\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGET ONE NOW!\n\n\nGET ONE NOW!\n\n\nGET ONE NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove Cape\n\n\n5 Inch LCD\n\n\n7 Inch LCD\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGET ONE NOW!\n\n\nGET ONE NOW!\n\n\nGET ONE NOW!\n\n\n\n\n\n\n\n\nFAQ\n\n\n\n\n\n\nBBG 1 \u548c BBG 2 \u6709\u4f55\u4e0d\u540c?\n \u00a0 \n\n\u6211\u4eec\u57282016\u5e74\u66f4\u65b0\u4e86Beaglebone Green\u7684eMMC\u3002\u56e0\u6b64\uff0c\u4ee5\u524d\u7684BBG1\u56fa\u4ef6\u5728BBG2\u4e0a\u65e0\u6cd5\u4f7f\u7528\uff0c\u4f46\u65b0\u7684\u56fa\u4ef6\u5728BBG1\u548cBBG2\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u3002\n \u00a0  \n\n\n\n\n\u53c2\u8003\n\n\n\n\n\u6709\u5f88\u591a\u53c2\u8003\u8d44\u6599\u53ef\u4ee5\u5e2e\u52a9\u60a8\u83b7\u5f97\u6709\u5173 BBG \u7684\u66f4\u591a\u4fe1\u606f\u3002\n\n\n\n\nBeagleBoard Main Page\n\n\nBeagleBone Green info at BeagleBoard page\n\n\nBeagleBoard Getting Started\n\n\nTroubleshooting\n\n\nHardware documentation\n\n\nProjects of BeagleBoard\n\n\nCE certification of BBG\n\n\nFCC certification of BBG\n\n\n\n\n\u8d44\u6599\u4e0b\u8f7d\n\n\n\n\n\n\nBEAGLEBONE_GREEN SRM(v1a)(pdf)\n\n\nBEAGLEBONE_GREEN Schematic(pdf)\n\n\nBEAGLEBONE_GREEN Schematic(OrCAD)\n\n\nBEAGLEBONE_GREEN PCB(OrCAD)", 
            "title": "BeagleBone Green"
        }, 
        {
            "location": "/BeagleBone_Green/#_1", 
            "text": "\u548cBeagleBone Black\u5b8c\u5168\u517c\u5bb9  \u5904\u7406\u5668: AM335x 1GHz ARMR Cortex-A8  512MB DDR3 RAM  4GB 8-bit eMMC \u677f\u8f7d flash \u5b58\u50a8  3D \u56fe\u5f62\u52a0\u901f\u5668  NEON \u6d6e\u70b9\u52a0\u901f\u5668  2x PRU 32-bit \u5fae\u5904\u7406\u5668    \u63a5\u53e3  USB client\u53ef\u4f9b\u7535\u548c\u901a\u4fe1  USB host  Ethernet  2x 46 pin \u63a5\u5934  2x Grove connectors (I2C and UART)    \u7cfb\u7edf\u517c\u5bb9  Debian  Android  Ubuntu  Cloud9 IDE on Node.js w/ BoneScript library  \u5373\u5c06\u517c\u5bb9\u66f4\u591a", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/BeagleBone_Green/#_2", 
            "text": "\u9879\u76ee  \u5185\u5bb9      \u5904\u7406\u5668  AM335x 1GHz ARMR Cortex-A8    RAM  512MB DDR3    \u677f\u8f7dFlash \u5b58\u50a8  4GB eMMC    CPU Supports  NEON floating-point   3D graphics accelerator    Micro USB  Supports  powering   communications    USB  Host  1    Grove Connectors  2 (One I2C and One UART)    GPIO  2 x 46 pin headers    Ethernet  1    \u5de5\u4f5c\u6e29\u5ea6  0 ~ 75\u00b0", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/BeagleBone_Green/#_3", 
            "text": "\u7269\u8054\u7f51  \u667a\u80fd\u5bb6\u5c45  \u5de5\u4e1a\u5e94\u7528  \u81ea\u52a8\u5316\u8fc7\u7a0b\u63a7\u5236  \u673a\u5668\u4eba\u4ea4\u4e92  \u4f20\u611f\u5668\u8282\u70b9   \u8fd9\u91cc\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\u53ef\u4ee5\u4f9b\u60a8\u53c2\u8003\u3002     Home Center  Retro Lamp  Drive a Motor           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!        BBG Acrylic Case  GPIO Control  Smart Light           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/BeagleBone_Green/#_4", 
            "text": "USB Host  - USB Host  DC Power and USB Client  - \u4e3a\u677f\u5b50\u4f9b\u7535\u5e76\u4e14\u4f5c\u4e3a\u4ece\u673a  LEDs  D2  \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5fc3\u8df3\u95ea\u70c1  D3  \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u8bfb\u5199SD\u5361\u6570\u636e\u65f6\u4eae\u8d77  D4  \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5f53 CPU \u6d3b\u52a8\u65f6\u4eae\u8d77  D5  \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5f53eMMC \u8bfb\u5199\u65f6\u4eae\u8d77    Boot \u6309\u94ae  \u5f53\u6709SD\u5361\u63d2\u5165\u65f6\uff0c\u7cfb\u7edf\u5c06\u9996\u5148\u4eceSD\u5361\u542f\u52a8\uff0c\u5982\u679c\u8981\u4eceeMMC\u542f\u52a8\uff0c\u8bf7\u6309\u6b64\u6309\u94ae\uff0c\u7136\u540e\u63a5\u901a\u7535\u6e90.  \u5f53\u542f\u52a8\u540e\u5c31\u4f5c\u4e3a\u4e00\u4e2a\u666e\u901a\u6309\u94ae, \u8fde\u63a5\u5230  GPIO_72    I2C Grove Interface  - \u8fde\u63a5\u5230  I2C2  Uart Grove Interface  - \u8fde\u63a5\u5230  UART2  Serial Debug  - \u8fde\u63a5\u5230  UART0 , PIN1~PIN6: GND, NC, NC, RX, TX, NC, \u8bf7\u6ce8\u610fpin1 \u662f\u6307\u9760\u8fd1USB \u7684\u7ba1\u811a.   \u7ba1\u811a\u56fe  \u6bcf\u4e2a\u6570\u5b57 I/O pin \u62e5\u67098\u79cd\u4e0d\u540c\u6a21\u5f0f\u53ef\u4f9b\u9009\u62e9\uff0c\u5305\u62ec GPIO.  65 \u79cd\u4e0d\u540c\u53ef\u80fd\u7684\u6570\u5b57 I/Os   Note  \u5728 GPIO \u6a21\u5f0f\u4e0b\uff0c\u6bcf\u4e2a\u6570\u5b57 I/O \u7ba1\u811a\u90fd\u53ef\u4ee5\u5904\u7406\u4e2d\u65ad\u3002    PWMs and Timers   Note  \u9ad8\u8fbe8\u4e2a\u6570\u5b57 I/O \u5f15\u811a\u53ef\u4ee5\u88ab\u914d\u7f6e\u6210\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u6a21\u5f0f (PWM) \uff0c\u4ece\u800c\u5728\u65e0\u9700CPU\u53c2\u4e0e\u7684\u60c5\u51b5\u4e0b\u7528\u4e8e\u4ea7\u751f\u4fe1\u53f7\u6765\u63a7\u5236\u7535\u673a\u6216\u8005\u4ea7\u751f\u6a21\u62df\u7535\u5e73\u3002    \u6a21\u62df\u8f93\u5165   Note  \u8bf7\u786e\u4fdd\u5728\u4efb\u4f55\u6a21\u62df\u5f15\u811a\u52a0\u7684\u8f93\u5165\u7535\u538b\u4e0d\u9ad8\u4e8e1.8V\u3002\u677f\u5361\u4e0a\u53ea\u6709\u4e00\u4e2a8\u901a\u9053\u7684 12-bit \u6570\u6a21\u8f6c\u5316\u5668\uff0c\u5176\u4e2d7\u4e2a\u901a\u9053\u5f15\u51fa\u5230\u63a5\u53e3\u3002    UART   Note  \u6709\u4e00\u4e2a\u4e13\u7528\u7684\u8fde\u63a5\u5934\u7528\u4e8e\u8fde\u63a5UART0\u811a\u5e76\u4e14\u8fde\u63a5\u5230debug\u7ebf\u7f06\u30025\u4e2a\u9644\u52a0\u7684\u4e32\u884c\u53e3\u4e5f\u8fde\u63a5\u5230\u4e86\u6269\u5c55\u63a5\u53e3\u3002    I2C   Note  \u7b2c\u4e00\u4e2aI2C\u603b\u7ebf\u7528\u4e8e\u8bfb\u53d6Cape\u9644\u52a0\u677f\u4e0a\u7684EEPROMS\uff0c\u4e3a\u4e86\u4e0d\u4f1a\u5f71\u54cd\u8be5\u529f\u80fd\u8be5\u603b\u7ebf\u4e0d\u80fd\u7528\u4e8e\u5176\u4ed6\u6570\u5b57I / O\u64cd\u4f5c\uff0c\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u5b83\u5728\u53ef\u7528\u5730\u5740\u4e2d\u6dfb\u52a0\u5176\u4ed6I2C\u8bbe\u5907\u3002 \u7b2c\u4e8c\u4e2aI2C\u603b\u7ebf\u53ef\u4f9b\u60a8\u81ea\u7531\u914d\u7f6e\u548c\u4f7f\u7528\u3002    SPI   Note  \u82e5\u662f\u9700\u8981\u5feb\u901f\u4f20\u8f93\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528SPI\u63a5\u53e3\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/BeagleBone_Green/#_5", 
            "text": "Note  \u6b64\u7ae0\u8282\u662f\u57fa\u4e8eWindows 10 \u7cfb\u7edf\uff0c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u7684\u6307\u5357\u4e0e\u6b64\u7c7b\u4f3c\u3002   \u6b65\u9aa41.\u901a\u8fc7 USB \u63a5\u53e3\u8fde\u63a5 BBG  \u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684Micro-USB\u7535\u7f06\u5c06\u60a8\u7684BBG\u63a5\u5165\u7535\u8111\u3002 \u8fd9\u5c06\u540c\u65f6\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u5e76\u63d0\u4f9b\u5f00\u53d1\u63a5\u53e3\u3002 BBG\u5c06\u4ece\u677f\u8f7d2GB\u62164GB eMMC\u542f\u52a8Linux\u3002  BBG\u5c06\u4f5c\u4e3a\u95ea\u5b58\u9a71\u52a8\u5668\u8fd0\u884c\uff0c\u4e3a\u60a8\u63d0\u4f9b\u6587\u6863\u548c\u9a71\u52a8\u7a0b\u5e8f\u7684\u672c\u5730\u526f\u672c\u3002 \u8bf7\u6ce8\u610f\uff0c\u6b64\u63a5\u53e3\u53ef\u80fd\u4e0d\u7528\u4e8e\u4f7f\u7528\u65b0\u6620\u50cf\u91cd\u65b0\u914d\u7f6emicroSD\u5361\uff0c\u4f46\u53ef\u7528\u4e8e\u4f7f\u7528uEnv.txt\u6587\u4ef6\u66f4\u65b0\u5f15\u5bfc\u53c2\u6570\u3002  \u60a8\u5c06\u770b\u5230PWR LED\u7a33\u5b9a\u70b9\u4eae\u3002 \u572810\u79d2\u949f\u5185\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u53e6\u4e00\u4e2aLED\u4ee5\u5176\u9ed8\u8ba4\u914d\u7f6e\u95ea\u70c1\u3002   D2  \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5fc3\u8df3\u95ea\u70c1  D3  \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u8bfb\u5199SD\u5361\u6570\u636e\u65f6\u4eae\u8d77  D4  \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5f53 CPU \u6d3b\u52a8\u65f6\u4eae\u8d77  D5  \u5728 boot \u4e2d\u914d\u7f6e\u4e3a\u5f53eMMC \u8bfb\u5199\u65f6\u4eae\u8d77   \u6b65\u9aa42. \u5b89\u88c5\u9a71\u52a8  \u4e3a\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u8ba9\u60a8\u7684Beaglebone\u53ef\u4ee5\u901a\u8fc7USB\u8bbf\u95ee\u7f51\u7edc\u3002 \u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u53ef\u8ba9\u60a8\u8bbf\u95ee\u7684\u4e3b\u677f\u3002     \u64cd\u4f5c\u7cfb\u7edf  USB \u9a71\u52a8  \u5907\u6ce8      Windows (64-bit)  64-bit installer     Windows (32-bit)  32-bit installer     Mac OS X  Network  and  Serial  \u6ce8\u610fNetwork\u548cSerial\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u9a71\u52a8\uff0c\u60a8\u90fd\u9700\u8981\u5b89\u88c5    Linux  mkudevrule.sh  \u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u662f\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u51e0\u4e2audev\u89c4\u5219\u5f88\u6709\u5e2e\u52a9\u3002.      Note  \u5bf9\u4e8eWindows\u7cfb\u7edf\uff0c\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9:   Windows \u9a71\u52a8\u8ba4\u8bc1\u8b66\u544a\u53ef\u80fd\u4f1a\u5f39\u51fa\u4e24\u5230\u4e09\u6b21\uff0c\u70b9\u51fb \"\u5ffd\u7565\", \"\u5b89\u88c5\" \u6216\u8005 \"\u8fd0\u884c\"  \u70b9\u51fb\u4e0b\u9762\u94fe\u63a5\u67e5\u770b\u60a8\u9700\u8981\u5b89\u88c564\u4f4d\u6216\u800532\u4f4d  \u70b9\u51fb\u8fd9\u91cc  \u5728\u975e\u6700\u65b0\u7248\u672c\u7684Windows\u7cfb\u7edf\u4e0b,\u60a8\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u9519\u8bef (0xc000007b)\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u70b9\u51fb  \u5b89\u88c5  \u518d\u91cd\u8bd5\u4e00\u6b21\u3002  \u60a8\u53ef\u80fd\u9700\u8981\u91cd\u542f\u7535\u8111\u3002  \u8be5\u9a71\u52a8\u5728Windows 10 \u4e0b\u6d4b\u8bd5\u901a\u8fc7\u3002     Note  Additional FTDI USB to serial/JTAG information and drivers are available from  https://www.ftdichip.com/Drivers/VCP.htm .    Note  Additional USB to virtual Ethernet information and drivers are available from  https://www.linux-usb.org/gadget/  and  https://joshuawise.com/horndis .   \u6b65\u9aa43. \u4f7f\u7528\u6d4f\u89c8\u5668\u6d4f\u89c8\u60a8\u7684 Beagle  \u4f7f\u7528Chrome\u6216Firefox\uff08Internet Explorer\u5c06\u4e0d\u8d77\u4f5c\u7528\uff09\uff0c\u6d4f\u89c8\u5230\u60a8\u7684\u7535\u8def\u677f\u4e0a\u8fd0\u884c\u7684Web\u670d\u52a1\u5668\u3002 \u5b83\u5c06\u52a0\u8f7d\u4e00\u4e2a\u6f14\u793a\u6587\u7a3f\uff0c\u5411\u60a8\u663e\u793a\u7535\u8def\u677f\u7684\u529f\u80fd\u3002 \u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u6d4f\u89c8\u6f14\u793a\u6587\u7a3f\u3002\n\u4f7f\u7528Chrome\u6216Firefox\uff08Internet Explorer\u5c06\u4e0d\u8d77\u4f5c\u7528\uff09\uff0c\u6d4f\u89c8\u5230\u60a8\u7684\u7535\u8def\u677f\u4e0a\u8fd0\u884c\u7684Web\u670d\u52a1\u5668\u3002 \u5b83\u5c06\u52a0\u8f7d\u4e00\u4e2a\u6f14\u793a\u6587\u7a3f\uff0c\u5411\u60a8\u5c55\u793a\u7535\u8def\u677f\u7684\u529f\u80fd\u3002 \u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u5bfc\u822a\u6f14\u793a\u6587\u7a3f\u3002  \u70b9\u51fb  http://192.168.7.2  \u6765\u52a0\u8f7d\u60a8\u7684 BBG.\n\u8f83\u65e7\u7684\u8f6f\u4ef6\u6620\u50cf\u8981\u6c42\u60a8\u4f7f\u7528BEAGLE_BONE\u9a71\u52a8\u5668\u542f\u52a8\u7f51\u7edc\u3002 \u4f7f\u7528\u6700\u65b0\u7684\u8f6f\u4ef6\u6620\u50cf\uff0c\u4e0d\u518d\u9700\u8981\u8be5\u6b65\u9aa4\u3002   \u6b65\u9aa44. Cloud9 IDE  \u8981\u5f00\u59cb\u7f16\u8f91\u60a8\u7684\u4e3b\u677f\u4e0a\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5355\u51fb\u4e0b\u9762\u94fe\u63a5\u6765\u5f00\u542f Cloud9 IDE", 
            "title": "\u5165\u95e8\u6307\u5357"
        }, 
        {
            "location": "/BeagleBone_Green/#_6", 
            "text": "\u60a8\u9700\u8981\u5c06\u4e3b\u677f\u66f4\u65b0\u5230\u6700\u65b0\u7684\u8f6f\u4ef6\u4ee5\u4fdd\u6301\u66f4\u597d\u7684\u6027\u80fd\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u9010\u6b65\u5b9e\u73b0\u3002  \u6b65\u9aa41. \u4e0b\u8f7d\u6700\u65b0\u7684\u56fa\u4ef6  \u9996\u5148\uff0c\u60a8\u5fc5\u987b\u5728\u8fd9\u91cc\u4e0b\u8f7d\u5408\u9002\u7684\u56fa\u4ef6\u3002    Note  \u7531\u4e8e\u8f6f\u4ef6\u5927\u5c0f\uff0c\u6b64\u4e0b\u8f7d\u53ef\u80fd\u9700\u8981\u7ea630\u5206\u949f\u6216\u66f4\u957f\u65f6\u95f4\u3002   \u60a8\u4e0b\u8f7d\u7684\u6587\u4ef6\u5c06\u6709\u4e00\u4e2a**img.xz **\u6269\u5c55\u540d\u3002 \u8fd9\u662f\u7528\u4e8eSD\u5361\u70e7\u5f55\u7684\u56fa\u4ef6\u3002  \u6b65\u9aa42. \u5b89\u88c5SD\u5361\u70e7\u5f55\u7a0b\u5e8f  \u4e0b\u8f7d\u5e76\u4e14\u5b89\u88c5   Image Writer for Windows . \u8bf7\u786e\u4fdd\u60a8\u4e0b\u8f7d\u7684\u662f\u5bf9\u5e94\u81ea\u5df1\u7cfb\u7edf\u7684\u7248\u672c\u3002  \u6b65\u9aa43. \u5c06\u60a8\u7684\u56fa\u4ef6\u5199\u5165SD\u5361  \u9996\u5148\u9700\u8981\u901a\u8fc7\u4e00\u4e2aSD\u9002\u914d\u5668\u5c06microSD\u5361\u8fde\u63a5\u5230\u7535\u8111\u3002 \u7136\u540e\u4f7f\u7528\u8f6f\u4ef6Image Write for Windows\u5c06\u89e3\u538b\u7f29\u7684\u56fa\u4ef6\u5199\u5165SD\u5361\u3002   \u70b9\u51fb  Write  \u6309\u94ae,\u7136\u540e\u5199\u5165\u7a0b\u5e8f\u5c06\u5f00\u542f\u3002    Note   \u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u6709\u5173\u635f\u574fSD\u5361\u7684\u8b66\u544a\uff0c\u8bf7\u60a8\u653e\u5fc3\u9009\u62e9\u63a5\u53d7\u3002  \u6b64\u65f6\u60a8\u4e0d\u5e94\u5c06 BeagleBone \u94fe\u63a5\u5230\u7535\u8111\u3002  \u6574\u4e2a\u8fc7\u7a0b\u5927\u6982\u4f1a\u6301\u7eed10\u5206\u949f\u3002    \u6b65\u9aa44. \u4eceSD\u5361\u542f\u52a8\u60a8\u7684\u7cfb\u7edf  \u5173\u95ed\u7535\u6e90\uff0c\u63d2\u5165SD\u5361\uff0c\u7136\u540e\u6253\u5f00\u7535\u6e90\uff0c\u7cfb\u7edf\u5c31\u5c06\u4eceSD\u5361\u542f\u52a8\u3002   Note    \u5982\u679c\u60a8\u4e0d\u9700\u8981\u5c06\u56fa\u4ef6\u5199\u5165\u60a8\u7684\u677f\u8f7deMMC\uff0c\u5219\u65e0\u9700\u9605\u8bfb\u672c\u7ae0\u6700\u540e\u4e00\u7ae0\u3002 \u5426\u5219\u8bf7\u7ee7\u7eed\u3002   \u5982\u679c\u60a8\u5e0c\u671b\u5c06\u56fa\u4ef6\u5199\u5165\u60a8\u7684\u677f\u8f7deMMC\uff0c\u5219\u9700\u8981\u52a0\u8f7d\u8fdb\u677f\u5361\u5e76\u4fee\u6539\u6587\u4ef6\u3002  \u5728  /boot/uEnv.txt  \u4e2d\u627e\u5230:  ##enable BBB: eMMC Flasher:\n#cmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh  \u4fee\u6539\u4e3a:  ##enable BBB: eMMC Flasher:\ncmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh  \u7136\u540e\u60a8\u5c06\u770b\u52304\u4e2aLED\u706f\u4f1a\u5982\u4e0b\u56fe\u95ea\u70c1\u3002    Note    \u5982\u679c\u6ca1\u6709\u770b\u5230\u4e0a\u56fe\u6240\u793a\u7684\u7684\u706f\u8ff9\uff0c\u8bf7\u6309RESET\u6309\u94ae\u91cd\u7f6e\u7535\u8def\u677f\u3002   \u5f53\u95ea\u70c1\u5b8c\u6210\u65f6\uff0c\u6240\u67094\u4e2a\u7528\u6237\u6307\u793a\u706f LED\u5c06\u5173\u95ed\u3002 \u6700\u65b0\u7684Debian\u7cfb\u7edf\u5728\u5b8c\u6210\u56fa\u4ef6\u52a0\u8f7d\u540e\u81ea\u52a8\u5173\u95ed\u7535\u8def\u677f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6700\u591a\u53ef\u80fd\u4f1a\u6301\u7eed** 10\u5206\u949f**\u3002 \u5173\u95ed\u7535\u6e90\uff0c\u53d6\u51faSD\u5361\uff0c\u518d\u6b21\u63a5\u901a\u7535\u6e90\u5373\u53ef\u5b8c\u6210\u3002", 
            "title": "\u66f4\u65b0\u5230\u6700\u65b0\u7684\u8f6f\u4ef6"
        }, 
        {
            "location": "/BeagleBone_Green/#grove-for-bbg", 
            "text": "Grove \u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u662f\u4e00\u4e2a\u5177\u6709\u6807\u51c6\u534f\u8bae\u7684\u8fde\u63a5\u5668\u7cfb\u7edf\u3002 Grove\u91c7\u7528\u79ef\u6728\u5f0f\u7ec4\u88c5\u7535\u5b50\u6280\u672f\u3002 \u4e0e\u57fa\u4e8e\u8df3\u7ebf\u6216\u710a\u63a5\u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u5177\u6709\u8fde\u63a5\u65b9\u4fbf\u3001\u7ed3\u6784\u7b80\u5355\u3001\u6613\u4e8e\u4e0a\u624b\u3001\u53ef\u5feb\u901f\u5165\u95e8\u5b66\u4e60\u7b49\u8bf8\u591a\u4f18\u70b9\u3002  \u4e0b\u8868\u7f57\u5217\u4e86\u9002\u7528\u4e8e BBG \u7684Grove \u6a21\u5757.     SKU  \u540d\u79f0  \u63a5\u53e3  \u8d2d\u4e70\u94fe\u63a5      101020054  Grove - 3-Axis Digital Accelerometer(+16g)  I2C  \u8d2d\u4e70\u94fe\u63a5    101020071  Grove - 3-Axis Digital Accelerometer(+400g)  I2C  \u8d2d\u4e70\u94fe\u63a5    101020034  Grove - 3-Axis Digital Compass  I2C  \u8d2d\u4e70\u94fe\u63a5    101020050  Grove - 3-Axis Digital Gyro  Analog  \u8d2d\u4e70\u94fe\u63a5    101020081  Grove - 6-Axis Accelerometer Compass v2.0  I2C  \u8d2d\u4e70\u94fe\u63a5    101020072  Grove - Barometer Sensor(BMP180)  I2C  \u8d2d\u4e70\u94fe\u63a5    104030010  Grove - Blue LED  I/O  \u8d2d\u4e70\u94fe\u63a5    101020003  Grove - Button  I/O  \u8d2d\u4e70\u94fe\u63a5    111020000  Grove - Button(P)  I/O  \u8d2d\u4e70\u94fe\u63a5    107020000  Grove - Buzzer  I/O  \u8d2d\u4e70\u94fe\u63a5    104030006  Grove - Chainable RGB LED  I2C  \u8d2d\u4e70\u94fe\u63a5    101020030  Grove - Digital Light Sensor  I2C  \u8d2d\u4e70\u94fe\u63a5    103020024  Grove - Finger-clip Heart Rate Sensor  I2C  \u8d2d\u4e70\u94fe\u63a5    101020082  Grove - Finger-clip Heart Rate Sensor with shell  I2C  \u8d2d\u4e70\u94fe\u63a5    113020003  Grove - GPS  UART  \u8d2d\u4e70\u94fe\u63a5    104030007  Grove - Green LED  I/O  \u8d2d\u4e70\u94fe\u63a5    103020013  Grove - I2C ADC  I2C  \u8d2d\u4e70\u94fe\u63a5    103020006  Grove - I2C Hub  I2C  \u8d2d\u4e70\u94fe\u63a5    101020079  Grove - IMU 10DOF  I2C  \u8d2d\u4e70\u94fe\u63a5    101020080  Grove - IMU 9DOF v2.0  I2C  \u8d2d\u4e70\u94fe\u63a5    101020040  Grove - IR Distance Interrupter  I/O  \u8d2d\u4e70\u94fe\u63a5    104030011  Grove - OLED Display 0.96''  I2C  \u8d2d\u4e70\u94fe\u63a5    104030008  Grove - OLED Display 1.12''  I2C  \u8d2d\u4e70\u94fe\u63a5    104030005  Grove - Red LED  I/O  \u8d2d\u4e70\u94fe\u63a5    103020005  Grove - Relay  I/O  \u8d2d\u4e70\u94fe\u63a5    316010005  Grove - Servo  I/O  \u8d2d\u4e70\u94fe\u63a5    101020023  Grove - Sound Sensor  Analog  \u8d2d\u4e70\u94fe\u63a5    101020004  Grove - Switch(P)  I/O  \u8d2d\u4e70\u94fe\u63a5    101020015  Grove - Temperature Sensor  Analog  \u8d2d\u4e70\u94fe\u63a5    101020019  Grove - Temperature Humidity Sensor Pro  Analog  \u8d2d\u4e70\u94fe\u63a5", 
            "title": "Grove for BBG"
        }, 
        {
            "location": "/BeagleBone_Green/#cape-for-bbg", 
            "text": "\u5728\u60a8\u5f00\u59cb\u81ea\u5df1\u7684\u9879\u76ee\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u6269\u5c55\u677f\u3002 BBG \u5df2\u7ecf\u6709\u8bb8\u591a\u6269\u5c55\u677f\uff0c\u5305\u62ec\u6db2\u6676\u663e\u793a\u5668\uff0c\u7535\u673a\u9a71\u52a8\u5668\u4ee5\u53caHDMI\u6269\u5c55\u7b49\u3002\u4ee5\u4e0b\u662f\u5176\u4e2d\u7684\u4e00\u4e9b\u63a8\u8350\u3002     Grove Cape  Motor Bridge Cape  HDMI Cape           GET ONE NOW!  GET ONE NOW!  GET ONE NOW!        Grove Cape  5 Inch LCD  7 Inch LCD           GET ONE NOW!  GET ONE NOW!  GET ONE NOW!", 
            "title": "Cape for BBG"
        }, 
        {
            "location": "/BeagleBone_Green/#faq", 
            "text": "BBG 1 \u548c BBG 2 \u6709\u4f55\u4e0d\u540c?\n \u00a0  \n\u6211\u4eec\u57282016\u5e74\u66f4\u65b0\u4e86Beaglebone Green\u7684eMMC\u3002\u56e0\u6b64\uff0c\u4ee5\u524d\u7684BBG1\u56fa\u4ef6\u5728BBG2\u4e0a\u65e0\u6cd5\u4f7f\u7528\uff0c\u4f46\u65b0\u7684\u56fa\u4ef6\u5728BBG1\u548cBBG2\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u3002", 
            "title": "FAQ"
        }, 
        {
            "location": "/BeagleBone_Green/#_7", 
            "text": "\u6709\u5f88\u591a\u53c2\u8003\u8d44\u6599\u53ef\u4ee5\u5e2e\u52a9\u60a8\u83b7\u5f97\u6709\u5173 BBG \u7684\u66f4\u591a\u4fe1\u606f\u3002   BeagleBoard Main Page  BeagleBone Green info at BeagleBoard page  BeagleBoard Getting Started  Troubleshooting  Hardware documentation  Projects of BeagleBoard  CE certification of BBG  FCC certification of BBG", 
            "title": "\u53c2\u8003"
        }, 
        {
            "location": "/BeagleBone_Green/#_8", 
            "text": "BEAGLEBONE_GREEN SRM(v1a)(pdf)  BEAGLEBONE_GREEN Schematic(pdf)  BEAGLEBONE_GREEN Schematic(OrCAD)  BEAGLEBONE_GREEN PCB(OrCAD)", 
            "title": "\u8d44\u6599\u4e0b\u8f7d"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/", 
            "text": "SeeedStudio BeagleBoneGreen Wireless\uff08BBGW\uff09\u662f\u7531 \nBeagleBoard.org\n  \u548c Seeed Studio \u5171\u540c\u52aa\u529b\u751f\u4ea7\u7684\u6210\u679c\u3002 \u5b83\u662f\u57fa\u4e8e\u00a0\nBeagleBone Black\n\u00a0\u7684\u5f00\u6e90\u786c\u4ef6\u8bbe\u8ba1\uff0c\u5e76\u5f00\u53d1\u6210\u8fd9\u79cd\u8fa8\u8bc6\u5ea6\u5f88\u9ad8\u7248\u672c\u3002 SeeedStudio BeagleBone Green Wireless \u5305\u62ec\u9ad8\u6027\u80fd\u7075\u6d3b\u7684 WiFi /\u84dd\u7259\u63a5\u53e3\u548c\u4e24\u4e2a Grove \u8fde\u63a5\u5668\uff0c\u4f7f\u5176\u66f4\u5bb9\u6613\u8fde\u63a5\u5230\u5927\u578b Grove \u4f20\u611f\u5668\u7cfb\u5217\u3002 \u79fb\u9664\u4e86\u677f\u8f7d HDMI \u548c\u4ee5\u592a\u7f51\uff0c\u4e3a\u8fd9\u4e9b\u65e0\u7ebf\u529f\u80fd\u548c Grove \u8fde\u63a5\u6a21\u5757\u63d0\u4f9b\u7a7a\u95f4\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5b8c\u5168\u517c\u5bb9 BeagleBone Black\n\n\n\u5904\u7406\u5668\uff1aAM335x 1GHzARM\u00aeCortex-A8\n\n\n4GB 8\u4f4deMMC \u677f\u4e0a\u95ea\u5b58\n\n\n3D \u56fe\u5f62\u52a0\u901f\u5668\n\n\nNEON \u6d6e\u70b9\u52a0\u901f\u5668\n\n\n\n\n2x PRU 32\u4f4d\u5fae\u63a7\u5236\u5668\n\n\n\n\n\n\n\u8fde\u63a5\u7279\u6027\n\n\n\n\n\u7528\u4e8e\u7535\u6e90\u548c\u901a\u4fe1\u7684 USB \u5ba2\u6237\u7aef\n\n\n\u5e26 4 \u7aef\u53e3\u96c6\u7ebf\u5668\u7684 USB \u4e3b\u673a\n\n\nWiFi 802.11 b / g / n 2.4GHz\n\n\n\u84dd\u7259 4.1 \u4e0e BLE\n\n\n2x 46 \u9488\u5934\n\n\n\n\n2x Grove \u8fde\u63a5\u5668\uff08 I2C \u548c UART \uff09\n\n\n\n\n\n\n\u8f6f\u4ef6\u517c\u5bb9\u6027\n\n\n\n\nDebian\n\n\nAndroid\n\n\nUbuntu\n\n\nCloud9 IDE on Node.js w/ BoneScript \u5e93\n\n\n\u66f4\u591a\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\u503c\n\n\n\n\n\n\n\n\n\n\n\u5904\u7406\u5668\n\n\nAM335x 1GHz ARMR Cortex-A8\n\n\n\n\n\n\n\u5185\u5b58\n\n\n512MB DDR3\n\n\n\n\n\n\n\u677f\u8f7d\u95ea\u5b58\n\n\n4GB eMMC\n\n\n\n\n\n\nCPU\u652f\u6301\n\n\nNEON \u6d6e\u70b9\u8fd0\u7b97\u548c 3D \u56fe\u5f62\u52a0\u901f\u5668\n\n\n\n\n\n\nUSB\u652f\u6301\n\n\n\u4f9b\u7535\u4e0e\u901a\u4fe1\n\n\n\n\n\n\nUSB\n\n\nUSB2.0 \u4e3b\u673a x4\n\n\n\n\n\n\nGrove \u8fde\u63a5\u53e3\n\n\n2 (\u4e00\u4e2a I2C \u548c \u4e00\u4e2a UART)\n\n\n\n\n\n\nGPIO\n\n\n2 x 46 \u5f15\u811a\n\n\n\n\n\n\n\u4ee5\u592a\u7f51\n\n\nWi-Fi 802.11b/g/n 2.4GHz \u548c\u84dd\u7259 4.1 LE\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n0 ~ 75 \u2103\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7269\u8054\u7f51\n\n\n\u667a\u6167\u4e4b\u5bb6\n\n\n\u5de5\u4e1a\n\n\n\u81ea\u52a8\u5316\u4e0e\u8fc7\u7a0b\u63a7\u5236\n\n\n\u4eba\u673a\u63a5\u53e3\n\n\n\u4f20\u611f\u5668\u4e2d\u5fc3\n\n\n\u673a\u5668\u4eba\n\n\n\n\nBBGW\u5165\u95e8\u6559\u7a0b\n\n\n\u4ee5\u4e0b\u662f\u521d\u5b66\u8005\u4f7f\u7528\u4e00\u4e9b Grove \u6a21\u5757\u6765\u5b9e\u73b0\u4f7f\u7528 BeagleBone Green Wireless\uff08BBGW\uff09\u5b8c\u6210\u6709\u8da3\u7684\u60f3\u6cd5\u7684\u6559\u7a0b\u3002 \u672c\u6559\u7a0b\u57fa\u4e8e Python \u548c mraa / upm \u5e93\u3002\n\n\n\n\n\n\n\n\n#1 The Breath LED\n\n\n#2 Storm on your table\n\n\n#3 Speak Louuuuuudly\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u89c2\u770b\u89c6\u9891\n\n\n\u89c2\u770b\u89c6\u9891\n\n\n\u89c2\u770b\u89c6\u9891\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#4 How hot is it today?\n\n\n#5 Where are you?\n\n\n#6 My Little alarm clock\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u89c2\u770b\u89c6\u9891\n\n\n\u89c2\u770b\u89c6\u9891\n\n\n\u89c2\u770b\u89c6\u9891\n\n\n\n\n\n\n\n\n\u8da3\u5473\u9879\u76ee\n\n\n\n\n\n\n\n\nBluetooth Device Detection\n\n\nHome Control Center\n\n\nSAP HCP IoT Service\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u7acb\u5373\u53c2\u8003\n\n\n\u7acb\u5373\u53c2\u8003\n\n\n\u7acb\u5373\u53c2\u8003\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u5f15\u811a\u529f\u80fd\n\n\n\u6bcf\u4e2a\u6570\u5b57 I / O \u5f15\u811a\u67098\u79cd\u53ef\u4ee5\u9009\u62e9\u7684\u4e0d\u540c\u6a21\u5f0f\uff0c\u5305\u62ec GPIO \u5f15\u811a\n\n\n65\u79cd\u53ef\u80fd\u7684\u6570\u5b57 I / O\n\n\n\n\nNote\n\n\n\n\n\u5728GPIO\u6a21\u5f0f\u4e0b\uff0c\u6bcf\u4e2a\u6570\u5b57I / O\u90fd\u53ef\u4ea7\u751f\u4e2d\u65ad\n\n\n\n\n\n\n\n\nPWM \u548c\u5b9a\u65f6\u5668\n\n\n\n\nNote\n\n\n\n\n\u591a\u8fbe8\u4e2a\u6570\u5b57 I / O \u5f15\u811a\u53ef\u914d\u7f6e\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u5668\uff08PWM\uff09\uff0c\u4ee5\u4ea7\u751f\u4fe1\u53f7\u63a7\u5236\u7535\u673a\u6216\u521b\u5efa\u4f2a\u6a21\u62df\u7535\u538b\u7535\u5e73\uff0c\u800c\u4e0d\u5360\u7528\u4efb\u4f55\u989d\u5916\u7684 CPU \u5468\u671f\u3002\n\n\n\n\n\n\n\n\n\u6a21\u62df\u8f93\u5165\n\n\n\n\nNote\n\n\n\n\n\u786e\u4fdd\u6a21\u62df\u8f93\u5165\u5f15\u811a\u8f93\u5165\u4e0d\u591a\u4e8e 1.8 V\u3002 \u8fd9\u662f\u4e00\u4e2a\u5177\u6709 8 \u4e2a\u901a\u9053\u7684 12 \u4f4d\u6a21\u6570\u8f6c\u6362\u5668\uff0c\u5176\u4e2d 7 \u4e2a\u5728\u8fde\u63a5\u5934\u4e0a\u53ef\u7528\u3002\n\n\n\n\n\n\n\n\nUART\n\n\n\n\nNote\n\n\n\n\n\u6709\u4e00\u4e2a\u4e13\u7528\u8fde\u63a5\u5934\u7528\u4e8e\u8fde\u63a5 UART0 \u5f15\u811a\u5e76\u7528\u4e8e\u8fde\u63a5\u8c03\u8bd5\u3002 \u53e6\u5916\u8fd8\u6709\u4e94\u4e2a\u4e32\u884c\u6269\u5c55\u8fde\u63a5\u7aef\u53e3\uff0c\u4f46\u5176\u4e2d\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u662f\u5177\u6709\u65b9\u5411\u7684\u3002\n\n\n\n\n\n\n\n\nI2C \u7aef\u53e3\n\n\n\n\nNote\n\n\n\u7b2c\u4e00\u4e2a I2C \u603b\u7ebf\u7528\u4e8e\u8bfb\u53d6 Cape \u9644\u52a0\u677f\u4e0a\u7684 EEPROMS \uff0c\u4e0d\u80fd\u7528\u4e8e\u5176\u4ed6\u6570\u5b57 I / O \u7aef\u53e3\u64cd\u4f5c\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u8be5\u529f\u80fd\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4f7f\u7528\u5b83\u5728\u53ef\u7528\u5730\u5740\u4e2d\u6dfb\u52a0\u5176\u4ed6 I2C \u8bbe\u5907\u3002 \u7b2c\u4e8c\u4e2a I2C \u603b\u7ebf\u53ef\u4f9b\u60a8\u914d\u7f6e\u548c\u4f7f\u7528\u3002\n\n\n\n\n\n\nSPI\n\n\n\n\nNote\n\n\n\u4e3a\u4e86\u5feb\u901f\u79fb\u51fa\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a SPI \u7aef\u53e3\u3002\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\nNote\n\n\n\u672c\u7ae0\u6b63\u5728 Win10 \u4e0b\u7f16\u5199\u3002 \u8fd9\u4e9b\u6b65\u9aa4\u5bf9\u4e8e\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u662f\u9002\u7528\u7684\u3002\n\n\n\n\n\u6b65\u9aa41\uff1a \u901a\u8fc7 USB \u8fde\u63a5\u60a8\u7684 BBGW\n\n\n\u4f7f\u7528\u63d0\u4f9b\u7684 USB \u6570\u636e\u7ebf\u5c06\u60a8\u7684 BBGW \u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u3002 \u8fd9\u5c06\u540c\u65f6\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u5e76\u63d0\u4f9b\u5f00\u53d1\u63a5\u53e3\u3002 BBGW \u5c06\u4ece \n\u677f\u8f7d2GB\n \u6216 \n4GB\n \u7684eMMC \u542f\u52a8 Linux \u3002\n\n\nBBGW \u5c06\u4f5c\u4e3a\u95ea\u5b58\u9a71\u52a8\u5668\u8fd0\u884c\uff0c\u4e3a\u60a8\u63d0\u4f9b\u6587\u6863\u548c\u9a71\u52a8\u7a0b\u5e8f\u7684\u672c\u5730\u526f\u672c\u3002 \u8bf7\u6ce8\u610f\uff0c\u6b64\u63a5\u53e3\u53ef\u80fd\u4e0d\u80fd\u7528\u4e8e\u91cd\u65b0\u914d\u7f6e\u5177\u6709\u65b0\u6620\u50cf\u7684 microSD \u5361\uff0c\u4f46\u53ef\u7528\u4e8e\u4f7f\u7528 uEnv.txt \u6587\u4ef6\u66f4\u65b0\u5f15\u5bfc\u53c2\u6570\u3002\n\n\n\u60a8\u5c06\u770b\u5230 PWR LED \u7a33\u5b9a\u70b9\u4eae\u3002 \u572810\u79d2\u949f\u5185\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u5176\u4ed6LED\u5728\u5176\u9ed8\u8ba4\u914d\u7f6e\u4e2d\u95ea\u70c1\u3002\n\n\n\n\n\u5728\u5f15\u5bfc\u65f6\u8bbe\u7f6e \nD2\n \u7aef\u53e3  \uff0c\u4ee5\u547c\u5438\u8282\u594f\u95ea\u70c1\n\n\n\u5728 microSD \u5361\u8bbf\u95ee\u671f\u95f4\uff0c\u5c06 \nD3\n \u7aef\u53e3\u8bbe\u7f6e\u4e3a\u542f\u52a8\u65f6\u4eae\u8d77\n\n\n\u5728\u542f\u52a8\u65f6\uff0c\u5c06 \nD4\n \u7aef\u53e3\u8bbe\u7f6e\u4e3a\u5728 CPU \u6d3b\u52a8\u671f\u95f4\u70b9\u4eae\n\n\n\u5c06 \nD5\n \u5728\u542f\u52a8\u65f6\u8bbe\u7f6e\u4e3a\u5728 eMMC \u8bbf\u95ee\u671f\u95f4\u70b9\u4eae\n\n\n\n\n\u6b65\u9aa42\uff1a \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\u4e3a\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f7f\u60a8\u53ef\u4ee5\u901a\u8fc7 USB \u8bbf\u95ee Beagle \u3002 \u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u53ef\u8ba9\u60a8\u8fde\u7eed\u8bbf\u95ee\u60a8\u7684\u4e3b\u677f\u3002\n\n\n\n\n\n\n\n\n\u64cd\u4f5c\u7cfb\u7edf\n\n\nUSB\u9a71\u52a8\u7a0b\u5e8f\n\n\n\u5907\u6ce8\n\n\n\n\n\n\n\n\n\n\nWindows (64-bit)\n\n\n64-bit installer\n\n\n\n\n\n\n\n\nWindows (32-bit)\n\n\n32-bit installer\n\n\n\n\n\n\n\n\nMac OS X\n\n\nNetwork\n \nSerial\n\n\n\u5b89\u88c5\u4e24\u5957\u9a71\u52a8\u7a0b\u5e8f.\n\n\n\n\n\n\nLinux\n\n\nmkudevrule.sh\n\n\n\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u51e0\u4e2a udev \u89c4\u5219\u6709\u7528.\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\u5bf9\u4e8e\u7a97\u53e3\u7cfb\u7edf\uff0c\u8bf7\u6ce8\u610f\uff1a\n\n\n\n\nWindows Driver \u8ba4\u8bc1\u8b66\u544a\u53ef\u80fd\u5f39\u51fa\u4e24\u4e09\u6b21\u3002 \u70b9\u51fb\u201c\u5ffd\u7565\u201d\uff0c\u201c\u5b89\u88c5\u201d\u6216\u201c\u8fd0\u884c\u201d\n\n\n\u68c0\u67e5\u60a8\u662f\u5426\u6b63\u5728\u8fd0\u884c32\u4f4d\u621664\u4f4dWindows\n\n\n\u5728\u6ca1\u6709\u6700\u65b0\u670d\u52a1\u7248\u672c\u7684\u7cfb\u7edf\u4e0a\uff0c\u60a8\u53ef\u80fd\u4f1a\u6536\u5230\u9519\u8bef\uff080xc000007b\uff09\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8bf7 \n\u5b89\u88c5\n \u5e76\u91cd\u8bd5:\n\n\n\u60a8\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u542f\u52a8 Windows\u3002\n\n\n\u8fd9\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u5df2\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u9002\u7528\u4e8e Windows 10\n\n\n\n\n\n\n\u6b65\u9aa43\uff1a \u6d4f\u89c8\u4f60\u7684Beagle\n\n\n\u4f7f\u7528 Chrome \u6216 Firefox\uff08\u5982\u679cInternet Explorer\u4e0d\u8d77\u4f5c\u7528\uff09\uff0c\u6d4f\u89c8\u60a8\u7684\u7535\u8def\u677f\u4e0a\u8fd0\u884c\u7684 Web \u670d\u52a1\u5668\u3002 \u5b83\u5c06\u52a0\u8f7d\u4e00\u4e2a\u6f14\u793a\u6587\u7a3f\uff0c\u5411\u60a8\u5c55\u793a\u7535\u8def\u677f\u7684\u529f\u80fd\u3002 \u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u5bfc\u822a\u5230\u6f14\u793a\u6587\u7a3f\u3002\n\n\n\u5355\u51fb\nhttp://192.168.7.2\n \u542f\u52a8\u60a8\u7684 BBGW \u3002\n\u8f83\u65e7\u7684\u8f6f\u4ef6\u4f1a\u8981\u6c42\u60a8\u4f7f\u7528 BEAGLE_BONE \u9a71\u52a8\u5668\u542f\u52a8\u7f51\u7edc\u3002 \u4f7f\u7528\u6700\u65b0\u7684\u8f6f\u4ef6\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u8be5\u6b65\u9aa4\u3002\n\n\n\n\n\u6b65\u9aa44\uff1a Cloud9 IDE\n\n\n\u8981\u5f00\u59cb\u7f16\u8f91\u60a8\u7684\u4e3b\u677f\u4e0a\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5355\u51fb\u4f7f\u7528Cloud9 IDE\n\n\n\n\n\u6b65\u9aa45\uff1a\u5c06\u60a8\u7684BBGW\u8fde\u63a5\u5230Wi-Fi\n\n\n\u4f7f\u7528\u667a\u80fd\u624b\u673a\u6216\u7535\u8111\u626b\u63cf\u672c\u5730 Wi-Fi \u7f51\u7edc\u5e76\u8fde\u63a5\u5230\u540d\u4e3a \u201cBeagleBone XXX\u201d \u7684 AP\n\n\n\n\n\u8fde\u63a5\u6210\u529f\u540e\uff0c\u5c06\u81ea\u52a8\u8fdb\u5165\u767b\u5f55\u9875\u9762\u3002 \u9009\u62e9\u60a8\u7684 Wi-Fi \u7684 SSID \u5e76\u8f93\u5165\u5bc6\u7801\uff0c\u7136\u540e\u5355\u51fb\u786e\u5b9a\u3002\n\n\n\n\n\u73b0\u5728\u60a8\u7684 BBGW \u5df2\u8fde\u63a5\u5230 Wifi \u3002\n\n\n\n\n\u6b65\u9aa46\uff1a\u5c06\u60a8\u7684 BBGW \u8fde\u63a5\u5230\u84dd\u7259\u8bbe\u5907\n\n\n\u8fde\u63a5\u5230 Cloud9 IDE \u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u3002\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u84dd\u7259\u914d\u7f6e\uff1a\n\n\nbb-wl18x-bluetooth\nbluetoothctl\n\n\n\n\n\n\n\u952e\u5165\nscan on\n\u6765\u626b\u63cf\u672c\u5730\u84dd\u7259\u8bbe\u5907\u3002 \u6211\u7684\u8bbe\u5907\u540d\u4e3a\u201cjy\u201d\u3002\n\n\n\n\n\u590d\u5236\u8bbe\u5907mac\u5730\u5740\uff0c\u7136\u540e\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5\u5230\u8bbe\u5907\uff1a\n\n\npair 0C:xx:xx:xx:xx:0B\ntrust 0C:xx:xx:xx:xx:0B\nconnect 0C:xx:xx:xx:xx:0B\n\n\n\n\n\n\n\u73b0\u5728\u60a8\u7684 BBGW \u5df2\u8fde\u63a5\u5230\u84dd\u7259\u8bbe\u5907\u3002 \u952e\u5165\nquit\n\u56de\u5230\u7ec8\u7aef\u3002\n\u5728 BBGW \u64ad\u653e\u97f3\u4e50\uff0c\u7136\u540e\u60a8\u4f1a\u542c\u5230\u84dd\u7259\u97f3\u7bb1\u4e0a\u7684\u97f3\u4e50\u3002\n\n\n\u66f4\u65b0\u5230\u6700\u65b0\u7684\u8f6f\u4ef6\n\n\n\n\n\u60a8\u9700\u8981\u5c06\u4e3b\u677f\u66f4\u65b0\u5230\u6700\u65b0\u7684\u8f6f\u4ef6\u4ee5\u4fdd\u6301\u66f4\u597d\u7684\u6027\u80fd\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u9010\u6b65\u5b9e\u73b0\u3002\n\n\n\u6b65\u9aa41\uff1a\u4e0b\u8f7d\u6700\u65b0\u7684\u8f6f\u4ef6\n\n\n\u9996\u5148\uff0c\u60a8\u5fc5\u987b\u5728\u8fd9\u91cc\u4e0b\u8f7d\u5408\u9002\u7684\u56fe\u50cf\u3002\n\n\n\n\n\n\nNote\n\n\n\u7531\u4e8e\u6587\u4ef6\u8f83\u5927\uff0c\u6b64\u4e0b\u8f7d\u53ef\u80fd\u9700\u8981\u7ea630\u5206\u949f\u6216\u66f4\u957f\u65f6\u95f4\u3002\n\n\n\n\n\u60a8\u4e0b\u8f7d\u7684\u6587\u4ef6\u5c06\u6709\u4e00\u4e2a \n.img.xz\n \u6269\u5c55\u540d\u3002 \u8fd9\u662fSD\u5361\u7684\u538b\u7f29\u6247\u533a\u56fe\u50cf\u3002\n\n\n\u6b65\u9aa42\uff1a \u5b89\u88c5\u538b\u7f29\u5b9e\u7528\u7a0b\u5e8f\u5e76\u89e3\u538b\u7f29\n\n\n\u4e0b\u8f7d\u5e76\u5b89\u88c5 \n7-zip.\n\n\n\n\nNote\n\n\n\u9009\u62e9\u9002\u5408\u60a8\u7cfb\u7edf\u7684\u7248\u672c\u3002\n\n\n\n\n\u4f7f\u75287-zip\u89e3\u538b\u7f29SD\u5361 \n.img file\n\n\n\u6b65\u9aa43\uff1a \u5b89\u88c5SD\u5361\u7f16\u7a0b\u5de5\u5177\n\n\n\u4e0b\u8f7d\u5e76\u5b89\u88c5 \nWindows\u7684\u56fe\u50cf\u7f16\u5199\u5668\n. \u786e\u4fdd\u4e0b\u8f7d\u7684\u7248\u672c\u6b63\u786e\u3002\n\n\n\u6b65\u9aa44\uff1a \u5c06\u56fe\u50cf\u5199\u5165SD\u5361\n\n\n\u9996\u5148\u9700\u8981\u4e00\u4e2a SD \u9002\u914d\u5668\u5c06 microSD \u5361\u8fde\u63a5\u5230\u7535\u8111\u3002 \u7136\u540e\u4f7f\u7528\u8f6f\u4ef6 Image Write for Windows \u5c06\u89e3\u538b\u7f29\u7684\u56fe\u50cf\u5199\u5165 SD \u5361\u3002\n\n\n\n\n\u70b9\u51fb \n\u5199\n \u6309\u94ae\uff0c\u7136\u540e\u5f00\u59cb\u3002\n\n\n\n\n\n\nNote\n\n\n\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u6709\u5173\u635f\u574f\u8bbe\u5907\u7684\u8b66\u544a\u3002 \u53ea\u8981\u4f60\u6307\u5b9a\u4e86\u4f60\u7684 SD \u5361\uff0c\u8fd9\u5c06\u4e0d\u662f\u95ee\u9898\u3002\n\n\n\n\n\n\n\n\n* \u6b64\u65f6\u60a8\u4e0d\u5e94\u8be5\u5c06 BeagleBone \u8fde\u63a5\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u3002\n\u00a0\u00a0\u00a0\u00a0* \u6b64\u8fc7\u7a0b\u6700\u591a\u53ef\u80fd\u9700\u8981 10 \u5206\u949f\u3002\n\n\n\u6b65\u9aa45\uff1a \u4ece SD \u5361\u542f\u52a8\u60a8\u7684\u7535\u8def\u677f\n\n\n\u5c06 SD\u5361\u63d2\u5165\uff08\u7b2c\u4e00\u7535\u6e90\uff09\u677f\u3002 \u7136\u540e\u677f\u5b50\u5c06\u4ece SD\u5361\u542f\u52a8\u3002\n\n\n\n\nNote\n\n\n\u5982\u679c\u60a8\u4e0d\u9700\u8981\u5c06\u56fe\u50cf\u5199\u5165\u60a8\u7684\u673a\u8f7d eMMC \uff0c\u5219\u65e0\u9700\u9605\u8bfb\u672c\u7ae0\u6700\u540e\u4e00\u7ae0\u3002 \u5426\u5219\u8bf7\u770b\u770b\u4e0b\u9762\u3002\n\n\n\n\n\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u56fe\u50cf\u5199\u5165\u60a8\u7684\u677f\u8f7d eMMC \uff0c\u5219\u9700\u8981\u542f\u52a8\u677f\u5e76\u4fee\u6539\u6587\u4ef6\u3002\n\n\n\u5728 \n/boot/uEnv.txt\n:\n\n\n##enable Generic eMMC Flasher:\n##make sure, these tools are installed: dosfstools rsync\n#cmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh\n\n\n\n\n\n\u6539\u53d8\u4e3a:\n\n\n##enable Generic eMMC Flasher:\n##make sure, these tools are installed: dosfstools rsync\ncmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh\n\n\n\n\n\n\u90a3\u4e48\u4f60\u4f1a\u53d1\u73b0 4 \u4e2a\u7528\u6237\u7684 led \u706f\u5982\u4e0b\uff1a\n\n\n\n\n\n\nNote\n\n\n\u5982\u679c\u6ca1\u6709\u627e\u5230\u4e0a\u9762\u7684\u8ddf\u8e2a\u706f\uff0c\u8bf7\u5148\u5173\u95ed\u7535\u6e90\u518d\u91cd\u65b0\u6253\u5f00\u7535\u6e90\u3002\n\n\n\n\n\u5f53\u95ea\u70c1\u5b8c\u6210\u65f6\uff0c\u6240\u6709 4\u4e2aUSRx LED\u5c06 \n\u7184\u706d\n \u3002 \u6700\u65b0\u7684 Debian \u95ea\u5149\u706f\u5728\u5b8c\u6210\u95ea\u70c1\u540e\u5c06\u81ea\u52a8\u5173\u95ed\u7535\u8def\u677f\u3002 \u6700\u591a\u53ef\u80fd\u9700\u8981 \n10\u5206\u949f\n \u3002 \u5173\u95ed\u7535\u6e90\uff0c\u53d6\u51faSD\u5361\uff0c\u518d\u6b21\u63a5\u901a\u7535\u6e90\u5373\u53ef\u5b8c\u6210\u3002\n\n\n\u7a0b\u5e8f Grove \u6a21\u5757\u4e0e Mraa \u548c UPM\n\n\n\u6211\u4eec\u63d0\u4f9b\u4e86 Mraa \u5e93\u548c UPM \u5e93\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u548c\u4f20\u611f\u5668\u5236\u9020\u5546\u80fd\u591f\u8f7b\u677e\u5730\u5c06\u5176\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\u5b89\u88c5\u5230\u652f\u6301\u7684\u786c\u4ef6\u4e4b\u4e0a\uff0c\u5e76\u5141\u8bb8\u901a\u8fc7\u9ad8\u7ea7\u8bed\u8a00\u548c\u7ed3\u6784\u63a7\u5236\u5b9e\u73b0\u901a\u4fe1\u3002\n\n\n\u4ec0\u4e48\u662f Mraa \u548c UPM \uff1f\n\n\nMraa \u662f\u4e00\u4e2a\u80fd\u591f\u4f7f\u7528 C / C ++ \u5e93\uff0c\u4e0e Python\uff0cJavascript \u548c Java \u7684\u5e73\u53f0\uff0c\u4f7fBBG\uff0cBBGW \u548c\u5176\u4ed6\u5e73\u53f0\u4e0a\u7684I / O\u63a5\u53e3\u80fd\u591f\u901a\u8fc7API\u517c\u5bb9\u3002 \u4f7f\u7528 Mraa \u5219\u4e0d\u9700\u8981\u60a8\u6307\u5b9a\u5230\u7279\u5b9a\u7684\u786c\u4ef6\uff0c\u5728\u8fd0\u884c\u65f6\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\u677f\u5b50\u7684\u68c0\u6d4b\uff0c\u60a8\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u521b\u5efa\u5728\u652f\u6301\u5e73\u53f0\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u3002\nUPM \u662f\u4f7f\u7528 MRAA \u7684\u4f20\u611f\u5668\u7684\u9ad8\u7ea7\u5b58\u50a8\u5e93\u3002\u5c3d\u7ba1\u6709\u4e9b\u4f20\u611f\u5668\u7ec4\u53ef\u80fd\u4e0d\u662f\u4e92\u8fde\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a\u4f20\u611f\u5668\u80fd\u591f\u94fe\u63a5\u5230 MRAA \u3002 \u6bcf\u4e2a\u4f20\u611f\u5668\u90fd\u5305\u542b\u4e00\u4e2a\u5141\u8bb8\u4e0e\u5176\u8fdb\u884c\u8fde\u63a5\u7684\u7aef\u53e3\u3002\n\n\n\u5b89\u88c5\u548c\u66f4\u65b0\n\n\nMraa \u548c UPM \u5df2\u7ecf\u5b89\u88c5\u5728 BBGW \u7684\u7cfb\u7edf\u4e2d\uff0c\u6240\u4ee5 \n\u4f60\u4e0d\u9700\u8981\u5b89\u88c5\n \u4f46\u662f\uff0c\u5982\u679c\u8981\u66f4\u65b0\u5e93\u6216\u8981\u5347\u7ea7\u5e93\uff0c\u8bf7\u4f7f\u7528\u00a0\napt-get update\n\u00a0\u548c\napt-get upgrade\n\u00a0\u8bf7\u53c2\u8003 \nhttps://github.com/intel-iot-devkit/mraa\n\u00a0\u548c \nhttps://github.com/intel-iot-devkit/upm\n\u00a0\u3002\n\n\nMraa \u4f8b\u5b50\n\n\n\n\n\u70b9\u4eae\u4e00\u4e2aled\n\n\n\n\nimport mraa\nimport time\n#mraa.gpio60 = P9_14 = GPIO_50\nled = mraa.Gpio(60)\nled.dir(mraa.DIR_OUT)\n\nwhile True:\n    led.write(1)\n    time.sleep(1)\n    led.write(0)\n    time.sleep(1)\n\n\n\n\n\n\nGrove - PIR \u4f20\u611f\u5668\n\n\n\n\nimport mraa\nimport time\n#mraa.gpio73 = P9_27 = GPIO_115\npir = mraa.Gpio(73)\npir.dir(mraa.DIR_IN)\n\nwhile True:\n    print (pir.read())\n    time.sleep(1)\n\n\n\n\n\n\nGrove - Rotary Angle \u4f20\u611f\u5668\n\n\n\n\nimport mraa\nimport time\n#mraa.aio1 = AIN0\nrotary = mraa.Aio(1)\n\nwhile True:\n    print(rotary.read())\n    time.sleep(1)\n\n\n\n\n\n\n\u66f4\u591a\u6559\u7a0b\n\n\n\n\nGrove - 3-Axis Digital Accelerometer(\u00b116g)\n Grove - Variable Color LED\n\n\nGrove - Mini Fan\nGrove - PIR Motion Sensor\nGrove - Rotary Angle Sensor\n\n\n\nGrove - Relay\nGrove - Sound Sensor\n\n\n\nGrove - OLED Display 0.96\u201d\nGrove - Light Sensor\nGrove - Temperature Sensor\n\n\n\nGrove - GPS\nGrove - Button(P)\nGrove - Buzzer\nGrove - RTC v2.0\n\n\n\nMraa Map for BBGW\n\n\n\n\n\n\n\n\n\n\n\n\n\u53c2\u8003\u8d44\u6599\u548c\u8d44\u6e90\n\n\n\u53c2\u8003\n\n\n\n\n\u53c2\u8003\u8d44\u6599\u53ef\u4ee5\u5e2e\u52a9\u60a8\u83b7\u5f97\u6709\u5173\u677f\u5b50\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\n\n\n\nBeagleBoard Main Page\n\n\nBeagleBone Green Wireless info at BeagleBoard page\n\n\nBeagleBoard Getting Started\n\n\nTroubleshooting\n\n\nHardware documentation\n\n\nProjects of BeagleBoard\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\nBeagleBone_Green_Wireless Schematic(pdf)", 
            "title": "BeagleBone Green Wireless"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_1", 
            "text": "\u5b8c\u5168\u517c\u5bb9 BeagleBone Black  \u5904\u7406\u5668\uff1aAM335x 1GHzARM\u00aeCortex-A8  4GB 8\u4f4deMMC \u677f\u4e0a\u95ea\u5b58  3D \u56fe\u5f62\u52a0\u901f\u5668  NEON \u6d6e\u70b9\u52a0\u901f\u5668   2x PRU 32\u4f4d\u5fae\u63a7\u5236\u5668    \u8fde\u63a5\u7279\u6027   \u7528\u4e8e\u7535\u6e90\u548c\u901a\u4fe1\u7684 USB \u5ba2\u6237\u7aef  \u5e26 4 \u7aef\u53e3\u96c6\u7ebf\u5668\u7684 USB \u4e3b\u673a  WiFi 802.11 b / g / n 2.4GHz  \u84dd\u7259 4.1 \u4e0e BLE  2x 46 \u9488\u5934   2x Grove \u8fde\u63a5\u5668\uff08 I2C \u548c UART \uff09    \u8f6f\u4ef6\u517c\u5bb9\u6027   Debian  Android  Ubuntu  Cloud9 IDE on Node.js w/ BoneScript \u5e93  \u66f4\u591a", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570\u503c      \u5904\u7406\u5668  AM335x 1GHz ARMR Cortex-A8    \u5185\u5b58  512MB DDR3    \u677f\u8f7d\u95ea\u5b58  4GB eMMC    CPU\u652f\u6301  NEON \u6d6e\u70b9\u8fd0\u7b97\u548c 3D \u56fe\u5f62\u52a0\u901f\u5668    USB\u652f\u6301  \u4f9b\u7535\u4e0e\u901a\u4fe1    USB  USB2.0 \u4e3b\u673a x4    Grove \u8fde\u63a5\u53e3  2 (\u4e00\u4e2a I2C \u548c \u4e00\u4e2a UART)    GPIO  2 x 46 \u5f15\u811a    \u4ee5\u592a\u7f51  Wi-Fi 802.11b/g/n 2.4GHz \u548c\u84dd\u7259 4.1 LE    \u5de5\u4f5c\u6e29\u5ea6  0 ~ 75 \u2103", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_3", 
            "text": "\u7269\u8054\u7f51  \u667a\u6167\u4e4b\u5bb6  \u5de5\u4e1a  \u81ea\u52a8\u5316\u4e0e\u8fc7\u7a0b\u63a7\u5236  \u4eba\u673a\u63a5\u53e3  \u4f20\u611f\u5668\u4e2d\u5fc3  \u673a\u5668\u4eba", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#bbgw", 
            "text": "\u4ee5\u4e0b\u662f\u521d\u5b66\u8005\u4f7f\u7528\u4e00\u4e9b Grove \u6a21\u5757\u6765\u5b9e\u73b0\u4f7f\u7528 BeagleBone Green Wireless\uff08BBGW\uff09\u5b8c\u6210\u6709\u8da3\u7684\u60f3\u6cd5\u7684\u6559\u7a0b\u3002 \u672c\u6559\u7a0b\u57fa\u4e8e Python \u548c mraa / upm \u5e93\u3002     #1 The Breath LED  #2 Storm on your table  #3 Speak Louuuuuudly           \u89c2\u770b\u89c6\u9891  \u89c2\u770b\u89c6\u9891  \u89c2\u770b\u89c6\u9891        #4 How hot is it today?  #5 Where are you?  #6 My Little alarm clock           \u89c2\u770b\u89c6\u9891  \u89c2\u770b\u89c6\u9891  \u89c2\u770b\u89c6\u9891", 
            "title": "BBGW\u5165\u95e8\u6559\u7a0b"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_4", 
            "text": "Bluetooth Device Detection  Home Control Center  SAP HCP IoT Service           \u7acb\u5373\u53c2\u8003  \u7acb\u5373\u53c2\u8003  \u7acb\u5373\u53c2\u8003", 
            "title": "\u8da3\u5473\u9879\u76ee"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_5", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_6", 
            "text": "\u6bcf\u4e2a\u6570\u5b57 I / O \u5f15\u811a\u67098\u79cd\u53ef\u4ee5\u9009\u62e9\u7684\u4e0d\u540c\u6a21\u5f0f\uff0c\u5305\u62ec GPIO \u5f15\u811a", 
            "title": "\u5f15\u811a\u529f\u80fd"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#65-i-o", 
            "text": "Note   \u5728GPIO\u6a21\u5f0f\u4e0b\uff0c\u6bcf\u4e2a\u6570\u5b57I / O\u90fd\u53ef\u4ea7\u751f\u4e2d\u65ad", 
            "title": "65\u79cd\u53ef\u80fd\u7684\u6570\u5b57 I / O"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#pwm", 
            "text": "Note   \u591a\u8fbe8\u4e2a\u6570\u5b57 I / O \u5f15\u811a\u53ef\u914d\u7f6e\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u5668\uff08PWM\uff09\uff0c\u4ee5\u4ea7\u751f\u4fe1\u53f7\u63a7\u5236\u7535\u673a\u6216\u521b\u5efa\u4f2a\u6a21\u62df\u7535\u538b\u7535\u5e73\uff0c\u800c\u4e0d\u5360\u7528\u4efb\u4f55\u989d\u5916\u7684 CPU \u5468\u671f\u3002", 
            "title": "PWM \u548c\u5b9a\u65f6\u5668"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_7", 
            "text": "Note   \u786e\u4fdd\u6a21\u62df\u8f93\u5165\u5f15\u811a\u8f93\u5165\u4e0d\u591a\u4e8e 1.8 V\u3002 \u8fd9\u662f\u4e00\u4e2a\u5177\u6709 8 \u4e2a\u901a\u9053\u7684 12 \u4f4d\u6a21\u6570\u8f6c\u6362\u5668\uff0c\u5176\u4e2d 7 \u4e2a\u5728\u8fde\u63a5\u5934\u4e0a\u53ef\u7528\u3002", 
            "title": "\u6a21\u62df\u8f93\u5165"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#uart", 
            "text": "Note   \u6709\u4e00\u4e2a\u4e13\u7528\u8fde\u63a5\u5934\u7528\u4e8e\u8fde\u63a5 UART0 \u5f15\u811a\u5e76\u7528\u4e8e\u8fde\u63a5\u8c03\u8bd5\u3002 \u53e6\u5916\u8fd8\u6709\u4e94\u4e2a\u4e32\u884c\u6269\u5c55\u8fde\u63a5\u7aef\u53e3\uff0c\u4f46\u5176\u4e2d\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u662f\u5177\u6709\u65b9\u5411\u7684\u3002", 
            "title": "UART"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#i2c", 
            "text": "Note  \u7b2c\u4e00\u4e2a I2C \u603b\u7ebf\u7528\u4e8e\u8bfb\u53d6 Cape \u9644\u52a0\u677f\u4e0a\u7684 EEPROMS \uff0c\u4e0d\u80fd\u7528\u4e8e\u5176\u4ed6\u6570\u5b57 I / O \u7aef\u53e3\u64cd\u4f5c\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u8be5\u529f\u80fd\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4f7f\u7528\u5b83\u5728\u53ef\u7528\u5730\u5740\u4e2d\u6dfb\u52a0\u5176\u4ed6 I2C \u8bbe\u5907\u3002 \u7b2c\u4e8c\u4e2a I2C \u603b\u7ebf\u53ef\u4f9b\u60a8\u914d\u7f6e\u548c\u4f7f\u7528\u3002", 
            "title": "I2C \u7aef\u53e3"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#spi", 
            "text": "Note  \u4e3a\u4e86\u5feb\u901f\u79fb\u51fa\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a SPI \u7aef\u53e3\u3002", 
            "title": "SPI"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_8", 
            "text": "Note  \u672c\u7ae0\u6b63\u5728 Win10 \u4e0b\u7f16\u5199\u3002 \u8fd9\u4e9b\u6b65\u9aa4\u5bf9\u4e8e\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u662f\u9002\u7528\u7684\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#1-usb-bbgw", 
            "text": "\u4f7f\u7528\u63d0\u4f9b\u7684 USB \u6570\u636e\u7ebf\u5c06\u60a8\u7684 BBGW \u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u3002 \u8fd9\u5c06\u540c\u65f6\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u5e76\u63d0\u4f9b\u5f00\u53d1\u63a5\u53e3\u3002 BBGW \u5c06\u4ece  \u677f\u8f7d2GB  \u6216  4GB  \u7684eMMC \u542f\u52a8 Linux \u3002  BBGW \u5c06\u4f5c\u4e3a\u95ea\u5b58\u9a71\u52a8\u5668\u8fd0\u884c\uff0c\u4e3a\u60a8\u63d0\u4f9b\u6587\u6863\u548c\u9a71\u52a8\u7a0b\u5e8f\u7684\u672c\u5730\u526f\u672c\u3002 \u8bf7\u6ce8\u610f\uff0c\u6b64\u63a5\u53e3\u53ef\u80fd\u4e0d\u80fd\u7528\u4e8e\u91cd\u65b0\u914d\u7f6e\u5177\u6709\u65b0\u6620\u50cf\u7684 microSD \u5361\uff0c\u4f46\u53ef\u7528\u4e8e\u4f7f\u7528 uEnv.txt \u6587\u4ef6\u66f4\u65b0\u5f15\u5bfc\u53c2\u6570\u3002  \u60a8\u5c06\u770b\u5230 PWR LED \u7a33\u5b9a\u70b9\u4eae\u3002 \u572810\u79d2\u949f\u5185\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u5176\u4ed6LED\u5728\u5176\u9ed8\u8ba4\u914d\u7f6e\u4e2d\u95ea\u70c1\u3002   \u5728\u5f15\u5bfc\u65f6\u8bbe\u7f6e  D2  \u7aef\u53e3  \uff0c\u4ee5\u547c\u5438\u8282\u594f\u95ea\u70c1  \u5728 microSD \u5361\u8bbf\u95ee\u671f\u95f4\uff0c\u5c06  D3  \u7aef\u53e3\u8bbe\u7f6e\u4e3a\u542f\u52a8\u65f6\u4eae\u8d77  \u5728\u542f\u52a8\u65f6\uff0c\u5c06  D4  \u7aef\u53e3\u8bbe\u7f6e\u4e3a\u5728 CPU \u6d3b\u52a8\u671f\u95f4\u70b9\u4eae  \u5c06  D5  \u5728\u542f\u52a8\u65f6\u8bbe\u7f6e\u4e3a\u5728 eMMC \u8bbf\u95ee\u671f\u95f4\u70b9\u4eae", 
            "title": "\u6b65\u9aa41\uff1a \u901a\u8fc7 USB \u8fde\u63a5\u60a8\u7684 BBGW"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#2", 
            "text": "\u4e3a\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f7f\u60a8\u53ef\u4ee5\u901a\u8fc7 USB \u8bbf\u95ee Beagle \u3002 \u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u53ef\u8ba9\u60a8\u8fde\u7eed\u8bbf\u95ee\u60a8\u7684\u4e3b\u677f\u3002     \u64cd\u4f5c\u7cfb\u7edf  USB\u9a71\u52a8\u7a0b\u5e8f  \u5907\u6ce8      Windows (64-bit)  64-bit installer     Windows (32-bit)  32-bit installer     Mac OS X  Network   Serial  \u5b89\u88c5\u4e24\u5957\u9a71\u52a8\u7a0b\u5e8f.    Linux  mkudevrule.sh  \u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u51e0\u4e2a udev \u89c4\u5219\u6709\u7528.      Note  \u5bf9\u4e8e\u7a97\u53e3\u7cfb\u7edf\uff0c\u8bf7\u6ce8\u610f\uff1a   Windows Driver \u8ba4\u8bc1\u8b66\u544a\u53ef\u80fd\u5f39\u51fa\u4e24\u4e09\u6b21\u3002 \u70b9\u51fb\u201c\u5ffd\u7565\u201d\uff0c\u201c\u5b89\u88c5\u201d\u6216\u201c\u8fd0\u884c\u201d  \u68c0\u67e5\u60a8\u662f\u5426\u6b63\u5728\u8fd0\u884c32\u4f4d\u621664\u4f4dWindows  \u5728\u6ca1\u6709\u6700\u65b0\u670d\u52a1\u7248\u672c\u7684\u7cfb\u7edf\u4e0a\uff0c\u60a8\u53ef\u80fd\u4f1a\u6536\u5230\u9519\u8bef\uff080xc000007b\uff09\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8bf7  \u5b89\u88c5  \u5e76\u91cd\u8bd5:  \u60a8\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u542f\u52a8 Windows\u3002  \u8fd9\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u5df2\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u9002\u7528\u4e8e Windows 10", 
            "title": "\u6b65\u9aa42\uff1a \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#3-beagle", 
            "text": "\u4f7f\u7528 Chrome \u6216 Firefox\uff08\u5982\u679cInternet Explorer\u4e0d\u8d77\u4f5c\u7528\uff09\uff0c\u6d4f\u89c8\u60a8\u7684\u7535\u8def\u677f\u4e0a\u8fd0\u884c\u7684 Web \u670d\u52a1\u5668\u3002 \u5b83\u5c06\u52a0\u8f7d\u4e00\u4e2a\u6f14\u793a\u6587\u7a3f\uff0c\u5411\u60a8\u5c55\u793a\u7535\u8def\u677f\u7684\u529f\u80fd\u3002 \u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u5bfc\u822a\u5230\u6f14\u793a\u6587\u7a3f\u3002  \u5355\u51fb http://192.168.7.2  \u542f\u52a8\u60a8\u7684 BBGW \u3002\n\u8f83\u65e7\u7684\u8f6f\u4ef6\u4f1a\u8981\u6c42\u60a8\u4f7f\u7528 BEAGLE_BONE \u9a71\u52a8\u5668\u542f\u52a8\u7f51\u7edc\u3002 \u4f7f\u7528\u6700\u65b0\u7684\u8f6f\u4ef6\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u8be5\u6b65\u9aa4\u3002", 
            "title": "\u6b65\u9aa43\uff1a \u6d4f\u89c8\u4f60\u7684Beagle"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#4-cloud9-ide", 
            "text": "\u8981\u5f00\u59cb\u7f16\u8f91\u60a8\u7684\u4e3b\u677f\u4e0a\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5355\u51fb\u4f7f\u7528Cloud9 IDE", 
            "title": "\u6b65\u9aa44\uff1a Cloud9 IDE"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#5bbgwwi-fi", 
            "text": "\u4f7f\u7528\u667a\u80fd\u624b\u673a\u6216\u7535\u8111\u626b\u63cf\u672c\u5730 Wi-Fi \u7f51\u7edc\u5e76\u8fde\u63a5\u5230\u540d\u4e3a \u201cBeagleBone XXX\u201d \u7684 AP   \u8fde\u63a5\u6210\u529f\u540e\uff0c\u5c06\u81ea\u52a8\u8fdb\u5165\u767b\u5f55\u9875\u9762\u3002 \u9009\u62e9\u60a8\u7684 Wi-Fi \u7684 SSID \u5e76\u8f93\u5165\u5bc6\u7801\uff0c\u7136\u540e\u5355\u51fb\u786e\u5b9a\u3002   \u73b0\u5728\u60a8\u7684 BBGW \u5df2\u8fde\u63a5\u5230 Wifi \u3002", 
            "title": "\u6b65\u9aa45\uff1a\u5c06\u60a8\u7684BBGW\u8fde\u63a5\u5230Wi-Fi"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#6-bbgw", 
            "text": "\u8fde\u63a5\u5230 Cloud9 IDE \u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u3002\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u84dd\u7259\u914d\u7f6e\uff1a  bb-wl18x-bluetooth\nbluetoothctl   \u952e\u5165 scan on \u6765\u626b\u63cf\u672c\u5730\u84dd\u7259\u8bbe\u5907\u3002 \u6211\u7684\u8bbe\u5907\u540d\u4e3a\u201cjy\u201d\u3002   \u590d\u5236\u8bbe\u5907mac\u5730\u5740\uff0c\u7136\u540e\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5\u5230\u8bbe\u5907\uff1a  pair 0C:xx:xx:xx:xx:0B\ntrust 0C:xx:xx:xx:xx:0B\nconnect 0C:xx:xx:xx:xx:0B   \u73b0\u5728\u60a8\u7684 BBGW \u5df2\u8fde\u63a5\u5230\u84dd\u7259\u8bbe\u5907\u3002 \u952e\u5165 quit \u56de\u5230\u7ec8\u7aef\u3002\n\u5728 BBGW \u64ad\u653e\u97f3\u4e50\uff0c\u7136\u540e\u60a8\u4f1a\u542c\u5230\u84dd\u7259\u97f3\u7bb1\u4e0a\u7684\u97f3\u4e50\u3002", 
            "title": "\u6b65\u9aa46\uff1a\u5c06\u60a8\u7684 BBGW \u8fde\u63a5\u5230\u84dd\u7259\u8bbe\u5907"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_9", 
            "text": "\u60a8\u9700\u8981\u5c06\u4e3b\u677f\u66f4\u65b0\u5230\u6700\u65b0\u7684\u8f6f\u4ef6\u4ee5\u4fdd\u6301\u66f4\u597d\u7684\u6027\u80fd\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u9010\u6b65\u5b9e\u73b0\u3002", 
            "title": "\u66f4\u65b0\u5230\u6700\u65b0\u7684\u8f6f\u4ef6"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#1", 
            "text": "\u9996\u5148\uff0c\u60a8\u5fc5\u987b\u5728\u8fd9\u91cc\u4e0b\u8f7d\u5408\u9002\u7684\u56fe\u50cf\u3002    Note  \u7531\u4e8e\u6587\u4ef6\u8f83\u5927\uff0c\u6b64\u4e0b\u8f7d\u53ef\u80fd\u9700\u8981\u7ea630\u5206\u949f\u6216\u66f4\u957f\u65f6\u95f4\u3002   \u60a8\u4e0b\u8f7d\u7684\u6587\u4ef6\u5c06\u6709\u4e00\u4e2a  .img.xz  \u6269\u5c55\u540d\u3002 \u8fd9\u662fSD\u5361\u7684\u538b\u7f29\u6247\u533a\u56fe\u50cf\u3002", 
            "title": "\u6b65\u9aa41\uff1a\u4e0b\u8f7d\u6700\u65b0\u7684\u8f6f\u4ef6"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#2_1", 
            "text": "\u4e0b\u8f7d\u5e76\u5b89\u88c5  7-zip.   Note  \u9009\u62e9\u9002\u5408\u60a8\u7cfb\u7edf\u7684\u7248\u672c\u3002   \u4f7f\u75287-zip\u89e3\u538b\u7f29SD\u5361  .img file", 
            "title": "\u6b65\u9aa42\uff1a \u5b89\u88c5\u538b\u7f29\u5b9e\u7528\u7a0b\u5e8f\u5e76\u89e3\u538b\u7f29"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#3-sd", 
            "text": "\u4e0b\u8f7d\u5e76\u5b89\u88c5  Windows\u7684\u56fe\u50cf\u7f16\u5199\u5668 . \u786e\u4fdd\u4e0b\u8f7d\u7684\u7248\u672c\u6b63\u786e\u3002", 
            "title": "\u6b65\u9aa43\uff1a \u5b89\u88c5SD\u5361\u7f16\u7a0b\u5de5\u5177"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#4-sd", 
            "text": "\u9996\u5148\u9700\u8981\u4e00\u4e2a SD \u9002\u914d\u5668\u5c06 microSD \u5361\u8fde\u63a5\u5230\u7535\u8111\u3002 \u7136\u540e\u4f7f\u7528\u8f6f\u4ef6 Image Write for Windows \u5c06\u89e3\u538b\u7f29\u7684\u56fe\u50cf\u5199\u5165 SD \u5361\u3002   \u70b9\u51fb  \u5199  \u6309\u94ae\uff0c\u7136\u540e\u5f00\u59cb\u3002    Note  \u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u6709\u5173\u635f\u574f\u8bbe\u5907\u7684\u8b66\u544a\u3002 \u53ea\u8981\u4f60\u6307\u5b9a\u4e86\u4f60\u7684 SD \u5361\uff0c\u8fd9\u5c06\u4e0d\u662f\u95ee\u9898\u3002     * \u6b64\u65f6\u60a8\u4e0d\u5e94\u8be5\u5c06 BeagleBone \u8fde\u63a5\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u3002\n\u00a0\u00a0\u00a0\u00a0* \u6b64\u8fc7\u7a0b\u6700\u591a\u53ef\u80fd\u9700\u8981 10 \u5206\u949f\u3002", 
            "title": "\u6b65\u9aa44\uff1a \u5c06\u56fe\u50cf\u5199\u5165SD\u5361"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#5-sd", 
            "text": "\u5c06 SD\u5361\u63d2\u5165\uff08\u7b2c\u4e00\u7535\u6e90\uff09\u677f\u3002 \u7136\u540e\u677f\u5b50\u5c06\u4ece SD\u5361\u542f\u52a8\u3002   Note  \u5982\u679c\u60a8\u4e0d\u9700\u8981\u5c06\u56fe\u50cf\u5199\u5165\u60a8\u7684\u673a\u8f7d eMMC \uff0c\u5219\u65e0\u9700\u9605\u8bfb\u672c\u7ae0\u6700\u540e\u4e00\u7ae0\u3002 \u5426\u5219\u8bf7\u770b\u770b\u4e0b\u9762\u3002   \u5982\u679c\u60a8\u5e0c\u671b\u5c06\u56fe\u50cf\u5199\u5165\u60a8\u7684\u677f\u8f7d eMMC \uff0c\u5219\u9700\u8981\u542f\u52a8\u677f\u5e76\u4fee\u6539\u6587\u4ef6\u3002  \u5728  /boot/uEnv.txt :  ##enable Generic eMMC Flasher:\n##make sure, these tools are installed: dosfstools rsync\n#cmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh  \u6539\u53d8\u4e3a:  ##enable Generic eMMC Flasher:\n##make sure, these tools are installed: dosfstools rsync\ncmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh  \u90a3\u4e48\u4f60\u4f1a\u53d1\u73b0 4 \u4e2a\u7528\u6237\u7684 led \u706f\u5982\u4e0b\uff1a    Note  \u5982\u679c\u6ca1\u6709\u627e\u5230\u4e0a\u9762\u7684\u8ddf\u8e2a\u706f\uff0c\u8bf7\u5148\u5173\u95ed\u7535\u6e90\u518d\u91cd\u65b0\u6253\u5f00\u7535\u6e90\u3002   \u5f53\u95ea\u70c1\u5b8c\u6210\u65f6\uff0c\u6240\u6709 4\u4e2aUSRx LED\u5c06  \u7184\u706d  \u3002 \u6700\u65b0\u7684 Debian \u95ea\u5149\u706f\u5728\u5b8c\u6210\u95ea\u70c1\u540e\u5c06\u81ea\u52a8\u5173\u95ed\u7535\u8def\u677f\u3002 \u6700\u591a\u53ef\u80fd\u9700\u8981  10\u5206\u949f  \u3002 \u5173\u95ed\u7535\u6e90\uff0c\u53d6\u51faSD\u5361\uff0c\u518d\u6b21\u63a5\u901a\u7535\u6e90\u5373\u53ef\u5b8c\u6210\u3002", 
            "title": "\u6b65\u9aa45\uff1a \u4ece SD \u5361\u542f\u52a8\u60a8\u7684\u7535\u8def\u677f"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#grove-mraa-upm", 
            "text": "\u6211\u4eec\u63d0\u4f9b\u4e86 Mraa \u5e93\u548c UPM \u5e93\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u548c\u4f20\u611f\u5668\u5236\u9020\u5546\u80fd\u591f\u8f7b\u677e\u5730\u5c06\u5176\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\u5b89\u88c5\u5230\u652f\u6301\u7684\u786c\u4ef6\u4e4b\u4e0a\uff0c\u5e76\u5141\u8bb8\u901a\u8fc7\u9ad8\u7ea7\u8bed\u8a00\u548c\u7ed3\u6784\u63a7\u5236\u5b9e\u73b0\u901a\u4fe1\u3002", 
            "title": "\u7a0b\u5e8f Grove \u6a21\u5757\u4e0e Mraa \u548c UPM"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#mraa-upm", 
            "text": "Mraa \u662f\u4e00\u4e2a\u80fd\u591f\u4f7f\u7528 C / C ++ \u5e93\uff0c\u4e0e Python\uff0cJavascript \u548c Java \u7684\u5e73\u53f0\uff0c\u4f7fBBG\uff0cBBGW \u548c\u5176\u4ed6\u5e73\u53f0\u4e0a\u7684I / O\u63a5\u53e3\u80fd\u591f\u901a\u8fc7API\u517c\u5bb9\u3002 \u4f7f\u7528 Mraa \u5219\u4e0d\u9700\u8981\u60a8\u6307\u5b9a\u5230\u7279\u5b9a\u7684\u786c\u4ef6\uff0c\u5728\u8fd0\u884c\u65f6\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\u677f\u5b50\u7684\u68c0\u6d4b\uff0c\u60a8\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u521b\u5efa\u5728\u652f\u6301\u5e73\u53f0\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u3002\nUPM \u662f\u4f7f\u7528 MRAA \u7684\u4f20\u611f\u5668\u7684\u9ad8\u7ea7\u5b58\u50a8\u5e93\u3002\u5c3d\u7ba1\u6709\u4e9b\u4f20\u611f\u5668\u7ec4\u53ef\u80fd\u4e0d\u662f\u4e92\u8fde\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a\u4f20\u611f\u5668\u80fd\u591f\u94fe\u63a5\u5230 MRAA \u3002 \u6bcf\u4e2a\u4f20\u611f\u5668\u90fd\u5305\u542b\u4e00\u4e2a\u5141\u8bb8\u4e0e\u5176\u8fdb\u884c\u8fde\u63a5\u7684\u7aef\u53e3\u3002", 
            "title": "\u4ec0\u4e48\u662f Mraa \u548c UPM \uff1f"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_10", 
            "text": "Mraa \u548c UPM \u5df2\u7ecf\u5b89\u88c5\u5728 BBGW \u7684\u7cfb\u7edf\u4e2d\uff0c\u6240\u4ee5  \u4f60\u4e0d\u9700\u8981\u5b89\u88c5  \u4f46\u662f\uff0c\u5982\u679c\u8981\u66f4\u65b0\u5e93\u6216\u8981\u5347\u7ea7\u5e93\uff0c\u8bf7\u4f7f\u7528\u00a0 apt-get update \u00a0\u548c apt-get upgrade \u00a0\u8bf7\u53c2\u8003  https://github.com/intel-iot-devkit/mraa \u00a0\u548c  https://github.com/intel-iot-devkit/upm \u00a0\u3002", 
            "title": "\u5b89\u88c5\u548c\u66f4\u65b0"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#mraa", 
            "text": "\u70b9\u4eae\u4e00\u4e2aled   import mraa\nimport time\n#mraa.gpio60 = P9_14 = GPIO_50\nled = mraa.Gpio(60)\nled.dir(mraa.DIR_OUT)\n\nwhile True:\n    led.write(1)\n    time.sleep(1)\n    led.write(0)\n    time.sleep(1)   Grove - PIR \u4f20\u611f\u5668   import mraa\nimport time\n#mraa.gpio73 = P9_27 = GPIO_115\npir = mraa.Gpio(73)\npir.dir(mraa.DIR_IN)\n\nwhile True:\n    print (pir.read())\n    time.sleep(1)   Grove - Rotary Angle \u4f20\u611f\u5668   import mraa\nimport time\n#mraa.aio1 = AIN0\nrotary = mraa.Aio(1)\n\nwhile True:\n    print(rotary.read())\n    time.sleep(1)   \u66f4\u591a\u6559\u7a0b   Grove - 3-Axis Digital Accelerometer(\u00b116g)\n Grove - Variable Color LED  Grove - Mini Fan\nGrove - PIR Motion Sensor\nGrove - Rotary Angle Sensor  Grove - Relay\nGrove - Sound Sensor  Grove - OLED Display 0.96\u201d\nGrove - Light Sensor\nGrove - Temperature Sensor  Grove - GPS\nGrove - Button(P)\nGrove - Buzzer\nGrove - RTC v2.0", 
            "title": "Mraa \u4f8b\u5b50"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#mraa-map-for-bbgw", 
            "text": "", 
            "title": "Mraa Map for BBGW"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_11", 
            "text": "", 
            "title": "\u53c2\u8003\u8d44\u6599\u548c\u8d44\u6e90"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_12", 
            "text": "\u53c2\u8003\u8d44\u6599\u53ef\u4ee5\u5e2e\u52a9\u60a8\u83b7\u5f97\u6709\u5173\u677f\u5b50\u7684\u66f4\u591a\u4fe1\u606f\u3002   BeagleBoard Main Page  BeagleBone Green Wireless info at BeagleBoard page  BeagleBoard Getting Started  Troubleshooting  Hardware documentation  Projects of BeagleBoard", 
            "title": "\u53c2\u8003"
        }, 
        {
            "location": "/BeagleBone_Green_Wireless/#_13", 
            "text": "BeagleBone_Green_Wireless Schematic(pdf)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/", 
            "text": "BeagleBone Green HDMI Cape\n \u662f\u4e00\u5757 HDMI \u663e\u793a\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u63a5\u5230 BBG \u4e0a\uff0c\u4ece\u800c\u6781\u5927\u7684\u62d3\u5bbd BBG \u7684\u5e94\u7528\u573a\u666f\uff0c\u4f8b\u5982 DIY \u5c0f\u578b\u7535\u8111\uff0c\u6295\u5f71\u4eea\uff0c\u6570\u5b57\u7535\u89c6\u6216\u8005\u6570\u5b57\u97f3\u9891\u8bbe\u5907\u3002\u6b64\u6b3e\u6269\u5c55\u677f\u53ef\u4ee5\u8fde\u63a5\u5230\u4efb\u4f55\u6807\u51c6 HDMI \u63a5\u53e3\u7684\u663e\u793a\u8bbe\u5907\u3002\u652f\u6301\u6240\u6709\u7684\u9ad8\u6e05\u4fe1\u53f7\uff0c\u8f93\u51fa\u5206\u8fa8\u7387\u4e3a 1280x720\u3002\u540c\u65f6\uff0c\u8be5\u6269\u5c55\u677f\u4e5f\u53ef\u4ee5\u7528\u6765\u5355\u72ec\u4f20\u8f93\u97f3\u9891\u4fe1\u53f7\u3002\u8be5\u4ea7\u54c1\u5c06\u4f7f\u60a8\u57fa\u4e8e BeagleBone board \u7684\u5e94\u7528\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u5177\u6709\u66f4\u591a\u529f\u80fd\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5373\u63d2\u5373\u7528\u3002\n\n\n\u9002\u5e94\u4e0d\u540c\u7684\u8f93\u5165\u4fe1\u53f7\u3002\n\n\n720P(1280\u00d7720) \u8f93\u51fa\u5206\u8fa8\u7387\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\n\n\n5V/3.3V\n\n\n\n\n\n\n\u6700\u5927\u5de5\u4f5c\u7535\u6d41\n\n\n80 mA\n\n\n\n\n\n\nHDMI \u7248\u672c\n\n\nVersion 1.2\n\n\n\n\n\n\n\u6700\u5927\u8f93\u51fa\u5206\u8fa8\u7387\n\n\n1280x720 @60Hz\n\n\n\n\n\n\n\u97f3\u9891\u4f20\u8f93\n\n\nAvailable\n\n\n\n\n\n\n\u82af\u7247\u7ec4\n\n\nIT66121 HDMI Framer(\nDatasheet\n)\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u60a8\u53ef\u4ee5\u5c06 BeagleBone \u6269\u5c55\u5230\u66f4\u591a\u7684\u591a\u5a92\u4f53\u5916\u56f4\u8bbe\u5907\uff0c\u5982\u7535\u8111\u663e\u793a\u5668\uff0c\u89c6\u9891\u6295\u5f71\u4eea\uff0c\u6570\u5b57\u7535\u89c6\u6216\u6570\u5b57\u97f3\u9891\u8bbe\u5907\u3002\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nIT66121 HDMI Framer\n\n\n\n\nHDMI \u63a7\u5236 IC\n\n\n\n\nCape I2C address Switch\n\n\n\n\nI2C \u5730\u5740\u914d\u7f6e\u5f00\u5173\n\n\n\n\nCape EEPROM\n\n\n\n\n\u7f13\u5b58\u5668\n\n\n\n\nHDMI \u8fde\u63a5\u5668\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u96f6\u4ef6\u540d\n\n\n\u6570\u91cf\n\n\n\n\n\n\nBeagleBone Green HDMI Cape\n\n\n1\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u672c\u90e8\u5206\u5c06\u901a\u8fc7\u51e0\u4e2a\u6b65\u9aa4\u5411\u60a8\u4ecb\u7ecd\u5982\u4f55\u5f00\u59cb\u4f7f\u7528\u8be5\u4ea7\u54c1\u3002\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\n\nBeagleBone Green board (\u5e26 OS \n\u5b89\u88c5\n) \u00d7 1.\n\n\nUSB \u7ebf (type A to micro type B) \u00d7 1.\n\n\nStandard HDMI \u7ebf\u7f06 (type A to type A) \u00d7 1.\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\n\nNote\n\n\u5728\u672c\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f Windows 7 \u64cd\u4f5c\u7cfb\u7edf\u3002\u8fde\u63a5\u5de5\u4f5c\u5b8c\u6210\u540e\uff0c\u5c06\u7535\u8111\u9f20\u6807\u63d2\u5165 BeagleBone Green board \u4e0a\u7684 USB \u63a5\u53e3\u3002\n\n\n\n\n\u5c06 USB \u6570\u636e\u7ebf (C \u578b) \u8fde\u63a5\u5230\u7535\u8111\uff0c\u60a8\u4f1a\u53d1\u73b0\u8ba1\u7b97\u673a\u663e\u793a\u5668\u4e0a\u663e\u793a\u4e86 BeagleBone \u684c\u9762\u3002\n\n\n\u90a3\u4e48\u4f60\u53ef\u4ee5\u50cf\u4f7f\u7528 PC \u6216 Mac \u4e00\u6837\u4f7f\u7528 BeagleBone\u3002\n\n\n\n\n\u6545\u969c\u6392\u9664\n\n\n\n\n\n\n\u7535\u8111\u663e\u793a\u5668\u4e0a\u4e0d\u663e\u793a BeagleBone \u684c\u9762\u64cd\u4f5c\u7cfb\u7edf? \u5c1d\u8bd5\u4ee5\u4e0b\u6b65\u9aa4\u4e4b\u4e00\u3002\n\n\n\n\n\u5173\u95ed\u663e\u793a\u5668\u5e76\u91cd\u65b0\u542f\u52a8\u3002\n\n\n\u6309\u4e0b BeagleBone Green board \u4e0a\u7684 RESET \u6309\u94ae\u3002\n\n\n\u6309\u4e0b BeagleBone Green board \u4e0a\u7684\u7535\u6e90\u6309\u94ae\uff0c\u7136\u540e\u518d\u6b21\u6309\u4e0b\u3002\n\n\n\n\n\n\n\n\n\n\n\u7535\u8111\u9f20\u6807\u4e0d\u5de5\u4f5c (\u4e0d\u4f9b\u7535)\uff1f\n\n\n\n\n\u6309\u4e0b BeagleBone Green board \u4e0a\u7684 RESET \u6309\u94ae\uff0c\u7b49\u5f85\u542f\u52a8\u3002\n\n\n\n\n\n\n\n\n\u5982\u4f55\u5feb\u901f\u62c6\u5378  BeagleBone Green HDMI Cape?\n\n\n\n\n\u5148\u7528\u624b\u62c9\u51fa HDMI \u63d2\u5ea7\u7684\u4e00\u7aef\uff0c\u7136\u540e\u62c9\u51fa\u53e6\u4e00\u7aef\u3002\u5982\u679c\u6709\u5fc5\u8981\uff0c\u91cd\u590d\u524d\u4e24\u4e2a\u6b65\u9aa4\u3002\n\n\n\n\n\n\n\n\n\u6f14\u793a\n\n\n\n\n\u672c \n\u89c6\u9891\n \u6f14\u793a\u5982\u4f55\u4f7f\u7528   BeagleBone Green HDMI Cape \u4e0a\u7f51\u548c\u64ad\u653e\u97f3\u9891\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u539f\u7406\u56fe]\n \nSchematic files", 
            "title": "BeagleBone Green HDMI Cape"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_1", 
            "text": "\u5373\u63d2\u5373\u7528\u3002  \u9002\u5e94\u4e0d\u540c\u7684\u8f93\u5165\u4fe1\u53f7\u3002  720P(1280\u00d7720) \u8f93\u51fa\u5206\u8fa8\u7387\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_2", 
            "text": "\u53c2\u6570  \u503c      \u8f93\u5165\u7535\u538b  5V/3.3V    \u6700\u5927\u5de5\u4f5c\u7535\u6d41  80 mA    HDMI \u7248\u672c  Version 1.2    \u6700\u5927\u8f93\u51fa\u5206\u8fa8\u7387  1280x720 @60Hz    \u97f3\u9891\u4f20\u8f93  Available    \u82af\u7247\u7ec4  IT66121 HDMI Framer( Datasheet )", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_3", 
            "text": "\u60a8\u53ef\u4ee5\u5c06 BeagleBone \u6269\u5c55\u5230\u66f4\u591a\u7684\u591a\u5a92\u4f53\u5916\u56f4\u8bbe\u5907\uff0c\u5982\u7535\u8111\u663e\u793a\u5668\uff0c\u89c6\u9891\u6295\u5f71\u4eea\uff0c\u6570\u5b57\u7535\u89c6\u6216\u6570\u5b57\u97f3\u9891\u8bbe\u5907\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_4", 
            "text": "IT66121 HDMI Framer   HDMI \u63a7\u5236 IC   Cape I2C address Switch   I2C \u5730\u5740\u914d\u7f6e\u5f00\u5173   Cape EEPROM   \u7f13\u5b58\u5668   HDMI \u8fde\u63a5\u5668", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_5", 
            "text": "\u96f6\u4ef6\u540d  \u6570\u91cf    BeagleBone Green HDMI Cape  1", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_6", 
            "text": "\u672c\u90e8\u5206\u5c06\u901a\u8fc7\u51e0\u4e2a\u6b65\u9aa4\u5411\u60a8\u4ecb\u7ecd\u5982\u4f55\u5f00\u59cb\u4f7f\u7528\u8be5\u4ea7\u54c1\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_7", 
            "text": "BeagleBone Green board (\u5e26 OS  \u5b89\u88c5 ) \u00d7 1.  USB \u7ebf (type A to micro type B) \u00d7 1.  Standard HDMI \u7ebf\u7f06 (type A to type A) \u00d7 1.", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_8", 
            "text": "Note \n\u5728\u672c\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f Windows 7 \u64cd\u4f5c\u7cfb\u7edf\u3002\u8fde\u63a5\u5de5\u4f5c\u5b8c\u6210\u540e\uff0c\u5c06\u7535\u8111\u9f20\u6807\u63d2\u5165 BeagleBone Green board \u4e0a\u7684 USB \u63a5\u53e3\u3002  \u5c06 USB \u6570\u636e\u7ebf (C \u578b) \u8fde\u63a5\u5230\u7535\u8111\uff0c\u60a8\u4f1a\u53d1\u73b0\u8ba1\u7b97\u673a\u663e\u793a\u5668\u4e0a\u663e\u793a\u4e86 BeagleBone \u684c\u9762\u3002  \u90a3\u4e48\u4f60\u53ef\u4ee5\u50cf\u4f7f\u7528 PC \u6216 Mac \u4e00\u6837\u4f7f\u7528 BeagleBone\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_9", 
            "text": "\u7535\u8111\u663e\u793a\u5668\u4e0a\u4e0d\u663e\u793a BeagleBone \u684c\u9762\u64cd\u4f5c\u7cfb\u7edf? \u5c1d\u8bd5\u4ee5\u4e0b\u6b65\u9aa4\u4e4b\u4e00\u3002   \u5173\u95ed\u663e\u793a\u5668\u5e76\u91cd\u65b0\u542f\u52a8\u3002  \u6309\u4e0b BeagleBone Green board \u4e0a\u7684 RESET \u6309\u94ae\u3002  \u6309\u4e0b BeagleBone Green board \u4e0a\u7684\u7535\u6e90\u6309\u94ae\uff0c\u7136\u540e\u518d\u6b21\u6309\u4e0b\u3002      \u7535\u8111\u9f20\u6807\u4e0d\u5de5\u4f5c (\u4e0d\u4f9b\u7535)\uff1f   \u6309\u4e0b BeagleBone Green board \u4e0a\u7684 RESET \u6309\u94ae\uff0c\u7b49\u5f85\u542f\u52a8\u3002     \u5982\u4f55\u5feb\u901f\u62c6\u5378  BeagleBone Green HDMI Cape?   \u5148\u7528\u624b\u62c9\u51fa HDMI \u63d2\u5ea7\u7684\u4e00\u7aef\uff0c\u7136\u540e\u62c9\u51fa\u53e6\u4e00\u7aef\u3002\u5982\u679c\u6709\u5fc5\u8981\uff0c\u91cd\u590d\u524d\u4e24\u4e2a\u6b65\u9aa4\u3002", 
            "title": "\u6545\u969c\u6392\u9664"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_10", 
            "text": "\u672c  \u89c6\u9891  \u6f14\u793a\u5982\u4f55\u4f7f\u7528   BeagleBone Green HDMI Cape \u4e0a\u7f51\u548c\u64ad\u653e\u97f3\u9891\u3002", 
            "title": "\u6f14\u793a"
        }, 
        {
            "location": "/BeagleBone_Green_HDMI_Cape/#_11", 
            "text": "[\u539f\u7406\u56fe]   Schematic files", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/", 
            "text": "Grove Base Cape for BeagleBone\n v2 \u662f\u7528\u4e8e BeagleBone \u5e73\u53f0\u7684 \nGrove system\n \u6269\u5c55\u677f\u3002\u8fd9\u4e2a\u6269\u5c55\u677f\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06\u8bb8\u591a\u8f6c\u6362\u5668(\u4f20\u611f\u5668\u548c\u6267\u884c\u5668)\u4f5c\u4e3a Grove \u6a21\u5757\u4e0e BeagleBone \u5e73\u53f0\u8fde\u63a5\u3002\u8be5\u677f\u8fd8\u5305\u62ec\u4e00\u4e2a 256kb Serial EEPROM\u3002\u5728\u65e0\u710a\u8bbe\u8ba1\u548c\u7d27\u51d1\u7684\u5373\u63d2\u5373\u7528\u7aef\u53e3\u7684\u4ea7\u54c1\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u4e3a\u60a8\u8282\u7701\u5927\u91cf\u7684\u5de5\u4f5c\u91cf\u3002\n\n\n\u6269\u5c55\u677f\u63d0\u4f9b\u4e86 12 \u4e2a\u6613\u4e8e\u4f7f\u7528\u7684 Grove \u8fde\u63a5\u5668\uff0c\u53ef\u4e0e\u5e7f\u5927\u7684 Grove \u6a21\u5757\u5b9e\u73b0\u5373\u63d2\u5373\u7528\u3002\u8fde\u63a5\u5668\u5305\u62ec 2x UART\uff0c2x ADC\uff0c4x Digital I/O \u548c 4x I2C\uff0c\u5b83\u4eec\u4e0e Beaglebone \u677f\u4e0a\u7684\u5f15\u811a\u76f8\u8fde\uff0c\u63d0\u4f9b\u51e0\u4e4e\u6240\u6709\u4f60\u9700\u8981\u7684\u4e1c\u897f\u3002\u5728\u5730\u5740\u51b2\u7a81\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u4e24\u4e2a\u5f00\u5173\u7528\u4e8e\u91cd\u7f6e I2C \u5730\u5740\u3002\u8be5\u7535\u8def\u677f\u8fd8\u96c6\u6210\u4e86\u4e00\u4e2a\u7535\u538b\u8f6c\u6362\u5f00\u5173 - \u4ece 5V \u5230 3.3V\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nBeagleBone \u4e0e Grove \u6a21\u5757\u95f4\u7684\u8fde\u63a5\u66f4\u7b80\u5355\n\n\n\u65e0\u710a\n\n\n\u7701\u65f6\u7701\u94b1\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n \u8f93\u51fa\u7535\u538b \n\n\n 3.3 V or 5 V(switchable)\n\n\n\n\n\n  \u6700\u5927\u8f93\u51fa\u7535\u6d41 \n\n\n 500 mA at 3.3V, 500 mA at 5V\n\n\n\n\n\n \u6570\u5b57 Grove \u7aef\u53e3 \n\n\n 6 , \u4e0e UART1 \u548c UART4 \u5171\u7528\u5f15\u811a\n\n\n\n\n\n \u6a21\u62df Grove \u7aef\u53e3 \n\n\n 2\n\n\n\n\n\n I\n2\nC Grove \u7aef\u53e3 \n\n\n 4\n\n\n\n\n\n UART Grove \u7aef\u53e3 \n\n\n 2 (UART1, UART4)\n\n\n\n\n\n EEPROM \n\n\n 256kb (Model: CAT24C256WI)\n\n\n\n\n\n \u5c3a\u5bf8 \n\n\n 70 mm(Length) \u00d7 50 mm(width)\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\u4ea7\u54c1\u540d\u79f0   \n\n\n \u6570\u91cf\n\n\n\n\n\nGrove Base Cape for BeagleBone v2 \n\n\n 1 PCS\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nOutput voltage switch\n\uff0c\u63a7\u5236 Grove \u7aef\u53e3\u8f93\u51fa\u7535\u538b\u7684\u5f00\u5173\u3002\n\n\nUSER button\n\uff0c \u53ef\u7528\u4f5c BeagleBone \u7528\u6237\u81ea\u5b9a\u4e49\u6309\u952e\u3002\n\n\nCape address switch\n\uff0c\u662f\u4e00\u4e2a\u9009\u62e9\u6269\u5c55\u677f\u5730\u5740\u7684\u5f00\u5173(\u4f7f\u7528\u591a\u4e2a\u6269\u5c55\u677f\u65f6\u6709\u7528)\uff0c\u4ee5\u907f\u514d I2C \u5730\u5740\u51b2\u7a81\u3002 \u6709\u5173\u4f7f\u7528\u591a\u4e2a\u6269\u5c55\u677f\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee \nhttp://beagleboard.org/Support/bone101/#capes\n \u548c \nhttp://elinux.org/BeagleBone_Community#Capes\n\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u5f00\u5173\u9009\u62e9\u4ece \n00\n (\u4e8c\u8fdb\u5236) \u81f3 \n11\n (\u4e8c\u8fdb\u5236) \u7684\u5730\u5740\uff0c\u5bf9\u5e94\u4e8e\u6240\u6709\u6269\u5c55\u677f\u7684 0x54 \u5230 0x57\u3002\n\n\nWrite protection pin\n\uff0c\u5f15\u811a\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\u7981\u7528\u6269\u5c55\u677f\u7684 EEPROM \u7684\u5199\u5165\u4fdd\u62a4\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u6ca1\u6709\u8fde\u63a5\u3002\n\n\n**LMV324 operational amplifier **\uff0c\u662f\u4e00\u6b3e\u4f4e\u7535\u538b\u8f68\u5bf9\u8f68\u8f93\u51fa\u8fd0\u7b97\u653e\u5927\u5668\uff0c\u7528\u4e8e\u63a7\u5236\u6a21\u62df\u7535\u538b\u3002\n\u66f4\u591a\u4fe1\u606f\u70b9\u51fb\u8fd9\u91cc\n\n\nTXB0108PW\n\uff0c\u662f\u4e00\u4e2a 8 \u4f4d\u53cc\u5411\u7535\u538b\u7535\u5e73\u8f6c\u6362\u5668\u3002\n\u66f4\u591a\u4fe1\u606f\u70b9\u51fb\u8fd9\u91cc\n.\n\n\n\n\nNote\n\n\n\u60a8\u53ef\u4ee5\u5728 Grove Base Cape for BeagleBone v2.0 \u7684\u4e00\u7aef\u627e\u5230\u4e24\u4e2a\u51f9\u69fd(\u5e26\u5b54\u7684\u5706\u89d2)\u3002\u8fd9\u5bf9\u5e94\u4e8e BeagleBone Green \u4e0a\u7684\u76f8\u540c\u51f9\u69fd\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u51f9\u69fd\u6765\u786e\u4fdd\u6b63\u786e\u7684\u5b89\u88c5\u65b9\u5411\u3002\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u4f7f\u7528\u6b64\u677f\u7684\u57fa\u672c\u793a\u4f8b\u3002\u60a8\u53ef\u4ee5\u5728 \nBeagleBone Recipes\n \u9875\u9762\u627e\u5230\u66f4\u591a\u7684\u6f14\u793a\u3002\u53ea\u9700\u5c06 Grove Base Cape for BeagleBone v2 \u6dfb\u52a0\u5230\u8fd9\u4e9b\u9879\u76ee\u4e2d\uff0c\u4fbf\u4e8e\u8fde\u63a5\u7ebf\u7f06\u3002\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\n\n\nBeagleBone Green\n\n\n\n\n\n\nBeagleBone community\n\n\n\n\n\n\nBeagleBone 101\n\n\n\n\n\n\nBoneScript\n\n\n\n\n\n\n\u6240\u9700\u6750\u6599\n\n\n\n\n\n\nGrove Base Cape for BeagleBone v2 \u00d7 1\n\n\n\n\n\n\nGrove - Button\n \u00d7 1\n\n\n\n\n\n\nBeagleBone Green\n (\u65e0 HDMI \u8f93\u51fa\u4e0b\u5b8c\u5168\u4e0e BeagleBone Black \u517c\u5bb9)\n\n\n\n\n\n\nUSB \u7ebf\u7f06 (\u7528\u4e8e Arduino \u7684 A \u578b\u53e3 \u81f3 B\u578b\u53e3) \u00d7 1 \u6216 USB \u7ebf\u7f06 (\u7528\u4e8e Seeeduino \u7684 A\u578b\u53e3 \u81f3 micro B\u578b\u53e3) \u00d7 1\n\n\n\n\n\n\nGrove cable\n \u00d7 1\n\n\n\n\n\n\n\u7f16\u7a0b\u5de5\u4f5c\n\n\n1.\u901a\u8fc7 USB \u7ebf\u7f06\u5c06 BeagleBone Green \u8fde\u63a5\u5230\u60a8\u7684 PC \u6216 MAC\u3002 \u70b9\u51fb\nhttp://192.168.7.2:3000/ide.html\n \u6253\u5f00 Cloud9 IDE\u3002\n\n\n2.\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06 Grove - Button(P) \u8fde\u63a5\u5230 BeagleBone v2 \u7684 Grove Base Cape\u3002\u5c06 Grove \u7ebf\u7f06\u8fde\u63a5\u5230 GPIO \u5f15\u811a \n51\n\u3002\n\n\n\n\n\n3.\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Cloud9\uff0c\u5c06\u5176\u4fdd\u5b58\u4e3a \n.js\n \u6587\u4ef6\u3002\n\nvar b = require(\nbonescript\n);\nb.pinMode(\nP9_16\n, b.INPUT);//GPIO 51 correspond to P9_16. More details at http://beagleboard.org/Support/bone101/#headers\n\nsetInterval(check,1000);\n\nfunction check(){\n    b.digitalRead(\nP9_16\n, checkButton);\n}\n\nfunction checkButton(x) {\n    console.log(x.value);\n    if(x.value == 1){\n        console.log(\nyou are pressing Grove button\n);\n    }\n    else{\n        console.log(\nyou are not pressing Grove button\n);\n    }\n}\n\n\n\n4.\u5355\u51fb Cloud9 IDE \u4e2d\u7684 \nRun\n \u5728 BeagleBone Green \u4e0a\u8fd0\u884c\u8be5\u7a0b\u5e8f\u3002\n\n\n5.\u7b49\u5f85\u5927\u7ea6 10 \u79d2\u949f\uff0c\u67e5\u770b Cloud9 IDE \u7684\u8f93\u51fa\u3002\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u50cf\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe :\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nEAGLE Schematic \n PCB files and PDF format Schematic\n\n\n\n\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nTXB0108PW datasheet\n\n\n\n\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nLMV324 datasheet\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nBeagleBone Green\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nBeagleBone community\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nBeagleBone 101\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nBoneScript\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nCloud9\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n More demos at \nhttp://www.seeedstudio.com/recipe/index.php?query=beaglebone\n and \nhttp://www.seeedstudio.com/recipe/index.php?query=beaglebone", 
            "title": "Grove Base Cape for BeagleBone v2"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/#_1", 
            "text": "BeagleBone \u4e0e Grove \u6a21\u5757\u95f4\u7684\u8fde\u63a5\u66f4\u7b80\u5355  \u65e0\u710a  \u7701\u65f6\u7701\u94b1", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/#_2", 
            "text": "\u8f93\u51fa\u7535\u538b    3.3 V or 5 V(switchable)     \u6700\u5927\u8f93\u51fa\u7535\u6d41    500 mA at 3.3V, 500 mA at 5V    \u6570\u5b57 Grove \u7aef\u53e3    6 , \u4e0e UART1 \u548c UART4 \u5171\u7528\u5f15\u811a    \u6a21\u62df Grove \u7aef\u53e3    2    I 2 C Grove \u7aef\u53e3    4    UART Grove \u7aef\u53e3    2 (UART1, UART4)    EEPROM    256kb (Model: CAT24C256WI)    \u5c3a\u5bf8    70 mm(Length) \u00d7 50 mm(width)", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/#_3", 
            "text": "\u4ea7\u54c1\u540d\u79f0      \u6570\u91cf   Grove Base Cape for BeagleBone v2    1 PCS", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/#_4", 
            "text": "Output voltage switch \uff0c\u63a7\u5236 Grove \u7aef\u53e3\u8f93\u51fa\u7535\u538b\u7684\u5f00\u5173\u3002  USER button \uff0c \u53ef\u7528\u4f5c BeagleBone \u7528\u6237\u81ea\u5b9a\u4e49\u6309\u952e\u3002  Cape address switch \uff0c\u662f\u4e00\u4e2a\u9009\u62e9\u6269\u5c55\u677f\u5730\u5740\u7684\u5f00\u5173(\u4f7f\u7528\u591a\u4e2a\u6269\u5c55\u677f\u65f6\u6709\u7528)\uff0c\u4ee5\u907f\u514d I2C \u5730\u5740\u51b2\u7a81\u3002 \u6709\u5173\u4f7f\u7528\u591a\u4e2a\u6269\u5c55\u677f\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee  http://beagleboard.org/Support/bone101/#capes  \u548c  http://elinux.org/BeagleBone_Community#Capes \u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u5f00\u5173\u9009\u62e9\u4ece  00  (\u4e8c\u8fdb\u5236) \u81f3  11  (\u4e8c\u8fdb\u5236) \u7684\u5730\u5740\uff0c\u5bf9\u5e94\u4e8e\u6240\u6709\u6269\u5c55\u677f\u7684 0x54 \u5230 0x57\u3002  Write protection pin \uff0c\u5f15\u811a\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\u7981\u7528\u6269\u5c55\u677f\u7684 EEPROM \u7684\u5199\u5165\u4fdd\u62a4\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u6ca1\u6709\u8fde\u63a5\u3002  **LMV324 operational amplifier **\uff0c\u662f\u4e00\u6b3e\u4f4e\u7535\u538b\u8f68\u5bf9\u8f68\u8f93\u51fa\u8fd0\u7b97\u653e\u5927\u5668\uff0c\u7528\u4e8e\u63a7\u5236\u6a21\u62df\u7535\u538b\u3002 \u66f4\u591a\u4fe1\u606f\u70b9\u51fb\u8fd9\u91cc  TXB0108PW \uff0c\u662f\u4e00\u4e2a 8 \u4f4d\u53cc\u5411\u7535\u538b\u7535\u5e73\u8f6c\u6362\u5668\u3002 \u66f4\u591a\u4fe1\u606f\u70b9\u51fb\u8fd9\u91cc .   Note  \u60a8\u53ef\u4ee5\u5728 Grove Base Cape for BeagleBone v2.0 \u7684\u4e00\u7aef\u627e\u5230\u4e24\u4e2a\u51f9\u69fd(\u5e26\u5b54\u7684\u5706\u89d2)\u3002\u8fd9\u5bf9\u5e94\u4e8e BeagleBone Green \u4e0a\u7684\u76f8\u540c\u51f9\u69fd\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u51f9\u69fd\u6765\u786e\u4fdd\u6b63\u786e\u7684\u5b89\u88c5\u65b9\u5411\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/#_5", 
            "text": "\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u4f7f\u7528\u6b64\u677f\u7684\u57fa\u672c\u793a\u4f8b\u3002\u60a8\u53ef\u4ee5\u5728  BeagleBone Recipes  \u9875\u9762\u627e\u5230\u66f4\u591a\u7684\u6f14\u793a\u3002\u53ea\u9700\u5c06 Grove Base Cape for BeagleBone v2 \u6dfb\u52a0\u5230\u8fd9\u4e9b\u9879\u76ee\u4e2d\uff0c\u4fbf\u4e8e\u8fde\u63a5\u7ebf\u7f06\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/#_6", 
            "text": "BeagleBone Green    BeagleBone community    BeagleBone 101    BoneScript", 
            "title": "\u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/#_7", 
            "text": "Grove Base Cape for BeagleBone v2 \u00d7 1    Grove - Button  \u00d7 1    BeagleBone Green  (\u65e0 HDMI \u8f93\u51fa\u4e0b\u5b8c\u5168\u4e0e BeagleBone Black \u517c\u5bb9)    USB \u7ebf\u7f06 (\u7528\u4e8e Arduino \u7684 A \u578b\u53e3 \u81f3 B\u578b\u53e3) \u00d7 1 \u6216 USB \u7ebf\u7f06 (\u7528\u4e8e Seeeduino \u7684 A\u578b\u53e3 \u81f3 micro B\u578b\u53e3) \u00d7 1    Grove cable  \u00d7 1", 
            "title": "\u6240\u9700\u6750\u6599"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/#_8", 
            "text": "1.\u901a\u8fc7 USB \u7ebf\u7f06\u5c06 BeagleBone Green \u8fde\u63a5\u5230\u60a8\u7684 PC \u6216 MAC\u3002 \u70b9\u51fb http://192.168.7.2:3000/ide.html  \u6253\u5f00 Cloud9 IDE\u3002  2.\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06 Grove - Button(P) \u8fde\u63a5\u5230 BeagleBone v2 \u7684 Grove Base Cape\u3002\u5c06 Grove \u7ebf\u7f06\u8fde\u63a5\u5230 GPIO \u5f15\u811a  51 \u3002   3.\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Cloud9\uff0c\u5c06\u5176\u4fdd\u5b58\u4e3a  .js  \u6587\u4ef6\u3002 var b = require( bonescript );\nb.pinMode( P9_16 , b.INPUT);//GPIO 51 correspond to P9_16. More details at http://beagleboard.org/Support/bone101/#headers\n\nsetInterval(check,1000);\n\nfunction check(){\n    b.digitalRead( P9_16 , checkButton);\n}\n\nfunction checkButton(x) {\n    console.log(x.value);\n    if(x.value == 1){\n        console.log( you are pressing Grove button );\n    }\n    else{\n        console.log( you are not pressing Grove button );\n    }\n}  4.\u5355\u51fb Cloud9 IDE \u4e2d\u7684  Run  \u5728 BeagleBone Green \u4e0a\u8fd0\u884c\u8be5\u7a0b\u5e8f\u3002  5.\u7b49\u5f85\u5927\u7ea6 10 \u79d2\u949f\uff0c\u67e5\u770b Cloud9 IDE \u7684\u8f93\u51fa\u3002\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u50cf\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe :", 
            "title": "\u7f16\u7a0b\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove_Base_Cape_for_BeagleBone_v2/#_9", 
            "text": "[Eagle\u6587\u4ef6]   EAGLE Schematic   PCB files and PDF format Schematic    [\u82af\u7247\u6570\u636e\u624b\u518c]   TXB0108PW datasheet    [\u82af\u7247\u6570\u636e\u624b\u518c]   LMV324 datasheet    [\u5176\u4ed6\u8d44\u6e90]   BeagleBone Green    [\u5176\u4ed6\u8d44\u6e90]   BeagleBone community    [\u5176\u4ed6\u8d44\u6e90]   BeagleBone 101    [\u5176\u4ed6\u8d44\u6e90]   BoneScript    [\u5176\u4ed6\u8d44\u6e90]   Cloud9    [\u5176\u4ed6\u8d44\u6e90]  More demos at  http://www.seeedstudio.com/recipe/index.php?query=beaglebone  and  http://www.seeedstudio.com/recipe/index.php?query=beaglebone", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Raspberry/", 
            "text": "Raspberry Pi\u6700\u521d\u662f\u7531\u82f1\u56fd\u7684\u4e00\u4e2a\u975e\u8425\u5229\u7ec4\u7ec7\u8bbe\u8ba1\u548c\u521b\u5efa\u7684\uff0c\u65e8\u5728\u521b\u5efa\u8fd9\u4e2a\u5355\u677f\uff0c\u4ee5\u4fc3\u8fdb\u5b66\u6821\u548c\u53d1\u5c55\u4e2d\u56fd\u5bb6\u57fa\u7840\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6559\u5b66\u3002\u5b83\u662f\u4e00\u79cd\u4fe1\u7528\u5361\u5927\u5c0f\u7684\u8ba1\u7b97\u673a\uff0c\u53ef\u4ee5\u9884\u5b89\u88c5Linux\uff0c\u5c3d\u7ba1\u4f53\u79ef\u5c0f\u5de7\uff0c\u4f46\u5b83\u53ef\u4ee5\u5904\u7406\u4e0e\u684c\u9762PC\u5927\u90e8\u5206\u76f8\u540c\u7684\u4efb\u52a1\u3002\n\n\n\u6811\u8393\u6d3e\u8ddf\u65b0\u4e86\u51e0\u4ee3\u3002\u7b2c\u4e00\u4ee3\uff08Pi 1\uff09\u4e8e2012\u5e742\u6708\u53d1\u5e03\uff0c\u57fa\u672c\u578b\u53f7A\u548c\u66f4\u9ad8\u89c4\u683c\u7684\u578b\u53f7B.A +\u548cB +\u578b\u53f7\u4e00\u5e74\u540e\u53d1\u5e03\u3002 Raspberry Pi 2\u578b\u53f7B\u4e8e2015\u5e742\u6708\u53d1\u5e03\uff0c2016\u5e742\u6708\u53d1\u5e03\u4e86Raspberry Pi 3\u578b\u53f7B\u3002\n\n\n\u5728Seeed Studio\uff0c\u6211\u4eec\u4e0d\u4ec5\u63d0\u4f9b\u4e0a\u8ff0\u4e0d\u540c\u7684raspberry pi\u677f\uff0c\u8fd8\u63d0\u4f9b\u4e0d\u540c\u7684\u914d\u4ef6\u548c\u5165\u95e8\u5de5\u5177\u5305\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u521b\u5efaraspberry pi\u9879\u76ee\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5df2\u7ecf\u5728Seeed\u7684\u6811\u8393\u6d3e\u793e\u533a\u4e2d\u521b\u5efa\u4e86\u8bb8\u591a\u6559\u7a0b\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u6784\u5efa\u81ea\u5df1\u7684\u521b\u610f\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Raspberry Pi\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGrovePi_Plus\n\n\nGrove_Starter_Kit_for_IoT_based_on_Raspberry_Pi\n\n\nRaspberry_Pi_3_Model_B", 
            "title": "Raspberry"
        }, 
        {
            "location": "/Raspberry/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Raspberry Pi\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   GrovePi_Plus  Grove_Starter_Kit_for_IoT_based_on_Raspberry_Pi  Raspberry_Pi_3_Model_B", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Raspberry_Pi_3_Model_B/", 
            "text": "Raspberry Pi\u00ae\n \u662f \nRaspberry Pi Foundation\n \u57fa\u4e8e \nARM\n \u5236\u9020\u7684\u4fe1\u7528\u5361\u5927\u5c0f\u7684 \nSBC\n\uff08\u5355\u677f\u8ba1\u7b97\u673a\uff09\u3002\u6811\u8393\u6d3e\u8fd0\u884c\u57fa\u4e8e Debian \u7684 \nGNU / Linux\n \u64cd\u4f5c\u7cfb\u7edf \nRaspbian\n\uff0c\u5e76\u4e14\u5177\u6709\u5f88\u591a\u5176\u4ed6\u7cfb\u7edf\u4e0a\u4e0a\u7684\u7aef\u53e3\u3002\n\n\n\n\nRaspberry Pi Foundation \u5ba3\u5e03\u4e86\u65b0\u7248\u672c \nRaspberry Pi 3\n\uff0c\u8be6\u60c5\u8bf7\u67e5\u9605 \n\u8fd9\u91cc\n\u3002\u968f\u7740\u677f\u8f7d \nWiFi\n / \nBluetooth\n \u7684\u652f\u6301\u548c\u65b0\u7684 64 \u4f4d\u5904\u7406\u5668\uff0c\nRaspberry Pi v3\n \u5c06\u4f1a\u6210\u4e3a\u5236\u9020\u5546\uff0c\u5de5\u7a0b\u5e08\u548c\u5b66\u751f\u6700\u559c\u7231\u7684\u5f00\u53d1\u677f\u3002\n\n\n\n\nRaspberry Pi 3 \u66f4\u65b0\u5185\u5bb9\n\n\n\n\n\n\n\n\n \u5f00\u53d1\u677f\n\n\n\n Raspberry Pi 2 Model B\n\n\n\n \nRaspberry Pi 3 Model B\n\n\n\n\n\n\n \u5904\u7406\u5668\n\n\n\n Broadcom BCM2836\n\n\n\n Broadcom \nBCM2837\n\n\n\n\n\n\n CPU \u6838\u5fc3\n\n\n\n Quadcore ARM Cortex-A7, 32Bit\n\n\n\n Quadcore \nARM Cortex-A53, 64Bit\n\n\n\n\n\n\n \u65f6\u949f\u9891\u7387\n\n\n\n 900 MHz\n\n\n\n 1.2GHz (\u4f30\u8ba1\u6bd4 Pi2 \u5feb 50%)\n\n\n\n\n\n RAM\n\n\n\n 1 GB\n\n\n\n 1 GB\n\n\n\n\n\n GPU\n\n\n\n 250 MHz \u663e\u793a\u6838\u5fc3 IV\u00ae\n\n\n\n \n400 MHz\n \u663e\u793a\u6838\u5fc3 IV\u00ae\n\n\n\n\n\n \u7f51\u7edc\u63a5\u53e3\n\n\n\n 1 x 10 / 100 \u4ee5\u592a\u7f51 (RJ45 \u63a5\u53e3)\n\n\n\n 1 x 10 / 100 \u4ee5\u592a\u7f51 (RJ45 \u63a5\u53e3)\n\n\n\n\n\n \u65e0\u7ebf Wifi\n\n\n\n \u65e0\n\n\n\n \n802.11n wireless LAN (WiFi) \u548c Bluetooth 4.1\n\n\n\n\n\n\n USB \u63a5\u53e3\n\n\n\n 4 x USB 2.0\n\n\n\n 4 x USB 2.0\n\n\n\n\n\n GPIOs\n\n\n\n 2 x 20 Pin\n\n\n\n 2 x 20 Pin\n\n\n\n\n\n \u76f8\u673a\u63a5\u53e3\n\n\n\n 15-pin MIPI\n\n\n\n 15-pin MIPI\n\n\n\n\n\n \u663e\u793a\u5668\u63a5\u53e3\n\n\n\n DSI 15 Pin / HDMI \u8f93\u51fa / Composite RCA\n\n\n\n DSI 15 Pin / HDMI \u8f93\u51fa / Composite RCA\n\n\n\n\n\n \u7535\u6e90\u8f93\u5165 (\u7535\u6d41\u5927\u5c0f)\n\n\n\n 1.8 A\n\n\n\n \n2.5 A\n\n\n\n\n\n\n\u5f00\u53d1\u677f\n\n\n\n\n\n\n\n\nPi 2 \u548c Pi 3 \u7684\u5c3a\u5bf8\u76f8\u540c\u3002\n\n\n\n\n\n\n\u5143\u4ef6\u4f4d\u7f6e\u7565\u6709\u53d8\u5316\uff0c\u6765\u5bb9\u7eb3 WiFi / Bluetooth SoC\u3002\u589e\u52a0\u4e86\u82af\u7247\u5929\u7ebf\u3002\n\n\n\n\n\n\n\n\n\n\n\u7cfb\u7edf\u82af\u7247 (SoC)\n\n\n\n\nBroadcom BCM2837 SoC\n\n\n\n\n\n\n\u5e94\u7528\u5904\u7406\u5668\n\n\n\n\n\n\n64 bit\n\n\n\n\n\n\n\u56db\u6838\n\n\n\n\n\n\n1.2 GHz\n\n\n\n\n\n\nARM Cortex-A53 \u5904\u7406\u5668 (ARM V8 ISA)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGPU\n\n\n\n\n400 MHz\n\n\n\u56fe\u5f62\u6838\u5fc3 IV \u591a\u5a92\u4f53\u534f\u5904\u7406\u5668\n\n\n\n\n\n\n\n\n\n\n\u82af\u7247\u5929\u7ebf\n\n\n\n\nWiFi \u548c\u84dd\u72594.1 SoC BCM43438 \u4f7f\u7528\u9676\u74f7\u82af\u7247\u5929\u7ebf\u3002\u4e3a\u4e86\u5bb9\u7eb3\u82af\u7247\u5929\u7ebf\uff0c\u5c06 Pi 2 \u4e2d\u7684\u6307\u793a LED \u79fb\u52a8\u5230 PCB \u7684\u4e0b\u4fa7\u3002\n\n\n\n\nLED \u6539\u53d8\u4f4d\u7f6e\n\n\n\n\n\u4e0e Pi 2 \u76f8\u6bd4\uff0cACT \u548c\u7535\u6e90 LED \u79fb\u52a8\u4e86\u4f4d\u7f6e\uff0c\u5177\u4f53\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\nRUN \u5f15\u811a\u66f4\u6362\u4f4d\u7f6e\n\n\n\n\nRUN \u5f15\u811a\u7684\u4f4d\u7f6e\u4e5f\u88ab\u6539\u53d8\u4e86\n\n\n\n\nWiFi / Bluetooth SoC BCM43438\n\n\n\n\nWiFi \u548c \u84dd\u7259 4.1 (Classic \u548c LE) \u7531 Broadcom BCM43438 \u82af\u7247\u63d0\u4f9b\u3002\n\n\n\n\n\u8d2d\u4e70\u94fe\u63a5\uff1a\n\n\n\n\nRaspberry Pi 3 Preorder\n\n\n\n\n\u6240\u6709\u5546\u6807\u5747\u4e3a\u5176\u5404\u81ea\u6240\u6709\u8005\u7684\u8d22\u4ea7\u3002\n\n\n\u6811\u8393\u6d3e\u548c\u5b83\u7684\u6807\u5fd7\u662f\u6811\u8393\u6d3e\u57fa\u91d1\u4f1a\u7684\u5546\u6807\u3002", 
            "title": "Raspberry_Pi_3_Model_B"
        }, 
        {
            "location": "/Raspberry_Pi_3_Model_B/#raspberry-pi-3", 
            "text": "\u5f00\u53d1\u677f   Raspberry Pi 2 Model B    Raspberry Pi 3 Model B     \u5904\u7406\u5668   Broadcom BCM2836   Broadcom  BCM2837     CPU \u6838\u5fc3   Quadcore ARM Cortex-A7, 32Bit   Quadcore  ARM Cortex-A53, 64Bit     \u65f6\u949f\u9891\u7387   900 MHz   1.2GHz (\u4f30\u8ba1\u6bd4 Pi2 \u5feb 50%)    RAM   1 GB   1 GB    GPU   250 MHz \u663e\u793a\u6838\u5fc3 IV\u00ae    400 MHz  \u663e\u793a\u6838\u5fc3 IV\u00ae    \u7f51\u7edc\u63a5\u53e3   1 x 10 / 100 \u4ee5\u592a\u7f51 (RJ45 \u63a5\u53e3)   1 x 10 / 100 \u4ee5\u592a\u7f51 (RJ45 \u63a5\u53e3)    \u65e0\u7ebf Wifi   \u65e0    802.11n wireless LAN (WiFi) \u548c Bluetooth 4.1     USB \u63a5\u53e3   4 x USB 2.0   4 x USB 2.0    GPIOs   2 x 20 Pin   2 x 20 Pin    \u76f8\u673a\u63a5\u53e3   15-pin MIPI   15-pin MIPI    \u663e\u793a\u5668\u63a5\u53e3   DSI 15 Pin / HDMI \u8f93\u51fa / Composite RCA   DSI 15 Pin / HDMI \u8f93\u51fa / Composite RCA    \u7535\u6e90\u8f93\u5165 (\u7535\u6d41\u5927\u5c0f)   1.8 A    2.5 A", 
            "title": "Raspberry Pi 3 \u66f4\u65b0\u5185\u5bb9"
        }, 
        {
            "location": "/Raspberry_Pi_3_Model_B/#_1", 
            "text": "Pi 2 \u548c Pi 3 \u7684\u5c3a\u5bf8\u76f8\u540c\u3002    \u5143\u4ef6\u4f4d\u7f6e\u7565\u6709\u53d8\u5316\uff0c\u6765\u5bb9\u7eb3 WiFi / Bluetooth SoC\u3002\u589e\u52a0\u4e86\u82af\u7247\u5929\u7ebf\u3002", 
            "title": "\u5f00\u53d1\u677f"
        }, 
        {
            "location": "/Raspberry_Pi_3_Model_B/#soc", 
            "text": "Broadcom BCM2837 SoC    \u5e94\u7528\u5904\u7406\u5668    64 bit    \u56db\u6838    1.2 GHz    ARM Cortex-A53 \u5904\u7406\u5668 (ARM V8 ISA)        GPU   400 MHz  \u56fe\u5f62\u6838\u5fc3 IV \u591a\u5a92\u4f53\u534f\u5904\u7406\u5668", 
            "title": "\u7cfb\u7edf\u82af\u7247 (SoC)"
        }, 
        {
            "location": "/Raspberry_Pi_3_Model_B/#_2", 
            "text": "WiFi \u548c\u84dd\u72594.1 SoC BCM43438 \u4f7f\u7528\u9676\u74f7\u82af\u7247\u5929\u7ebf\u3002\u4e3a\u4e86\u5bb9\u7eb3\u82af\u7247\u5929\u7ebf\uff0c\u5c06 Pi 2 \u4e2d\u7684\u6307\u793a LED \u79fb\u52a8\u5230 PCB \u7684\u4e0b\u4fa7\u3002", 
            "title": "\u82af\u7247\u5929\u7ebf"
        }, 
        {
            "location": "/Raspberry_Pi_3_Model_B/#led", 
            "text": "\u4e0e Pi 2 \u76f8\u6bd4\uff0cACT \u548c\u7535\u6e90 LED \u79fb\u52a8\u4e86\u4f4d\u7f6e\uff0c\u5177\u4f53\u5982\u4e0b\u56fe\u6240\u793a\u3002", 
            "title": "LED \u6539\u53d8\u4f4d\u7f6e"
        }, 
        {
            "location": "/Raspberry_Pi_3_Model_B/#run", 
            "text": "RUN \u5f15\u811a\u7684\u4f4d\u7f6e\u4e5f\u88ab\u6539\u53d8\u4e86", 
            "title": "RUN \u5f15\u811a\u66f4\u6362\u4f4d\u7f6e"
        }, 
        {
            "location": "/Raspberry_Pi_3_Model_B/#wifi-bluetooth-soc-bcm43438", 
            "text": "WiFi \u548c \u84dd\u7259 4.1 (Classic \u548c LE) \u7531 Broadcom BCM43438 \u82af\u7247\u63d0\u4f9b\u3002   \u8d2d\u4e70\u94fe\u63a5\uff1a   Raspberry Pi 3 Preorder   \u6240\u6709\u5546\u6807\u5747\u4e3a\u5176\u5404\u81ea\u6240\u6709\u8005\u7684\u8d22\u4ea7\u3002  \u6811\u8393\u6d3e\u548c\u5b83\u7684\u6807\u5fd7\u662f\u6811\u8393\u6d3e\u57fa\u91d1\u4f1a\u7684\u5546\u6807\u3002", 
            "title": "WiFi / Bluetooth SoC BCM43438"
        }, 
        {
            "location": "/Wio/", 
            "text": "Wio\u5e73\u53f0\u57282015\u5e74\u5e95\u9996\u6b21\u5f15\u5165\u4e16\u754c\uff0c\u5f53\u65f6Wio Link\u5728Kickstarter\u4e0a\u6210\u7acb\u3002\u4f5c\u4e3a\u6211\u4eec\u5728Kickstarter\u63a8\u51fa\u7684\u7b2c\u4e8c\u6b3e\u4ea7\u54c1\uff0cWio Link\u7684\u7ed3\u679c\u8d85\u51fa\u4e86\u6211\u4eec\u7684\u9884\u671f\u3002\u6240\u4ee5\u4e0d\u4e45\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u5e03\u4e86Wio\u94fe\u63a5\u7684\u5144\u5f1f\u4ea7\u54c1--Wio Node\u3002\u4e24\u8005\u5177\u6709\u51e0\u4e4e\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4f46\u5c3a\u5bf8\u548c\u8fde\u63a5\u5668\u6570\u91cf\u4e0d\u540c\uff0c\u9002\u5e94\u4e0d\u540c\u7684\u60c5\u51b5\u3002\n\n\n\u5173\u4e8eWio\u6700\u6709\u5438\u5f15\u529b\u7684\u4e00\u4ef6\u4e8b\u662f\u4f7f\u7528\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7684RESTful API\u7684\u865a\u62df\u5316\u5373\u63d2\u5373\u7528\u6a21\u5757\uff0c\u901a\u8fc7\u4f7f\u7528\u54ea\u4e9b\u4eba\u771f\u6b63\u53ef\u4ee5\u6446\u8131\u710a\u63a5\uff0c\u8df3\u7ebf\u548c\u77e5\u8bc6\uff0c\u5982\u7535\u5b50\u5de5\u7a0b\uff0c\u5fae\u63a7\u5236\u5668\u7f16\u7a0b\uff0c\u7f51\u7edc\u7f16\u7a0b\uff0cIoT\u534f\u8bae\u5904\u7406\u3002\u6211\u4e0d\u662f\u8bf4\u8fd9\u4e9b\u5143\u7d20\u4e0d\u597d\uff0c\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u521d\u5b66\u8005\uff0c\u8fd9\u4e9b\u6b65\u9aa4\u548c\u77e5\u8bc6\u672c\u8d28\u4e0a\u662f\u7ec3\u4e60\uff0c\u4f46\u6709\u65f6\u5019\u6211\u4eec\u53ea\u662f\u60f3\u8981\u5feb\u901f\u7684\u539f\u578b\u548c\u5feb\u901f\u53cd\u5e94\uff0c\u8fd9\u5c31\u662fWio\u8bde\u751f\u7684\uff0c\u7b80\u5316\u4e86\u6240\u6709\u7684\u6b65\u9aa4\uff0c\u4f7f\u539f\u578b\u8bbe\u8ba1\u53d8\u5f97\u5bb9\u6613\uff0c\u5373\u4f7f\u60a8\u5bf9\u7535\u5b50\u4ea7\u54c1\u4e00\u65e0\u6240\u77e5\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u7ea65\u5206\u949f\u5185\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684IoT\u9879\u76ee\u662f\u4e0d\u5938\u5f20\u7684\u3002\n\n\n\u6211\u4eec\u5b89\u6392\u4e86\u8bb8\u591a\u6709\u8da3\u7684\u9879\u76ee\u6559\u7a0b\uff0c\u8ba9\u60a8\u5f00\u59cb\u4f7f\u7528Wio\uff0c\u60a8\u53ef\u4ee5\u8fdc\u7a0b\u4f9b\u6c34\u60a8\u7684\u690d\u7269\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e0d\u5728\u5bb6\u65f6\u5582\u72d7\uff0c\u60f3\u8981\u6316\u6398Wio\u53ef\u4ee5\u5236\u4f5c\u4ec0\u4e48\u5176\u4ed6\u7684\u4e1c\u897f\uff1f\u5f88\u5feb\u67e5\u770bWio\u94fe\u63a5\u548cWio\u8282\u70b9\u7684\u6587\u6863\uff0c\u73a9\u5f97\u5f00\u5fc3\uff01\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Wio\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nWio_Link\n\n\nWio_Link_Environment_Kit", 
            "title": "Wio"
        }, 
        {
            "location": "/Wio/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Wio\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Wio_Link  Wio_Link_Environment_Kit", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Wio_Link/", 
            "text": "\u5efa\u7acbIoT\u5e94\u7528\u7a0b\u5e8f\u6700\u56f0\u96be\u7684\u90e8\u5206\u662f\u4ec0\u4e48\uff1f \u6709\u4eba\u8bf4\u8ba8\u538c\u8df3\u7ebf\uff0c\u800c\u53e6\u4e00\u4e2a\u4eba\u8bf4\u4ed6\u6700\u8ba8\u538c\u710a\u63a5\u3002 \u751a\u81f3\u6709\u4e9b\u4eba\u4e0d\u559c\u6b22\u9762\u5305\u677f\u3002 \u4e5f\u8bb8\u4f60\u4e0d\u662f\u5176\u4e2d\u4e4b\u4e00\uff0c\u4f46\u7535\u5b50\u5de5\u7a0b\uff0c\u5fae\u63a7\u5236\u5668\u7f16\u7a0b\uff0c\u7f51\u7edc\u7f16\u7a0b\uff0cIoT \u534f\u8bae\u5904\u7406\u7684\u77e5\u8bc6, \u4ecd\u7136\u662f\u60a8\u6210\u529f\u642d\u5efa\u7269\u8054\u7f51\u9879\u76ee\u7684\u5de8\u5927\u8d1f\u62c5\u3002\u4e3a\u4e86\u7b80\u5316\u6240\u6709\u8fd9\u4e9b\u6b65\u9aa4\uff0c\u57282015\u5e74\u5e95\uff0cSeeed Studio \u542f\u52a8\u4e86 \nWio Link KickStarter\n, \u5b9a\u4e49\u4e86\u5f00\u53d1 IoT \u5e94\u7528\u7684\u65b0\u65b9\u5f0f\u3002 Wio Link \u662f\u4e00\u6b3e\u57fa\u4e8e ESP8266 SoC \u7684\u5f00\u6e90Wi-Fi\u5f00\u53d1\u677f\uff0c\u5176\u6700\u91cd\u8981\u7684\u90e8\u5206\u662f\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u4f7f\u7528\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u865a\u62df\u5316\u5373\u63d2\u5373\u7528\u6a21\u5757\uff0c\u7528 RESTful API \u6765\u521b\u5efa IoT \u5e94\u7528\u7a0b\u5e8f\u3002 \u8fd9\u610f\u5473\u7740\u53ea\u8981\u5728\u624b\u673a\u4e0a\u5b89\u88c5\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c31\u53ef\u4ee5\u57285\u5206\u949f\u5185\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 IoT \u9879\u76ee\uff0c\u5c31\u4e0d\u4f1a\u6709\u786c\u4ef6\u7f16\u7a0b\uff0c\u6ca1\u6709\u9762\u5305\u677f\uff0c\u6ca1\u6709\u8df3\u7ebf\uff0c\u4e5f\u6ca1\u6709\u710a\u63a5\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u5f81\n\n\n\n\n\u65e0\u786c\u4ef6\u7f16\u7a0b\uff0c\u65e0\u9762\u5305\u677f\uff0c\u65e0\u8df3\u7ebf\uff0c\u65e0\u9700\u710a\u63a5\u3002\n\n\n\u652f\u6301\u8bb8\u591aGrove\u6a21\u5757\uff08\u68c0\u67e5Mobile App\u4e2d\u7684\u5217\u8868\uff09\u3002\n\n\n\u5373\u63d2\u5373\u7528Grove\u6a21\u5757\n\n\n\u89c6\u89c9\u914d\u7f6e\u800c\u4e0d\u662f\u5fae\u63a7\u5236\u5668\u7f16\u7a0b\u3002\n\n\n\u901a\u8fc7\u4e91\u7aef\u7f16\u8bd1\u548cOTA\u81ea\u52a8\u66f4\u65b0\u3002\n\n\n\u5c06\u73b0\u5b9e\u4e16\u754c\u5e26\u5165\u865a\u62df\u5e73\u53f0\u3002 \u6240\u6709\u4f20\u611f\u5668\u90fd\u6210\u4e3a\u865a\u62dfRESTful API\u3002\n\n\nAndroid\u548ciOS Apps\u6765\u7ba1\u7406Wio Link\u3002\n\n\n\u652f\u6301IFTTT\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u63cf\u8ff0\n\n\n\u503c\n\n\n\u7535\u6e90\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n55mm * 48mm\n\n\n\u6bcf\u4e2aI/O\u7684\u76f4\u6d41\u7535\u6d41\n\n\n12mA\n\n\n\n\n\n\n\u6676\u632f\n\n\n26MHz\n\n\n\u8f93\u5165\u7535\u538b(Micro USB)\n\n\n5V\n\n\n\n\n\n\n\u95ea\u5b58\n\n\n4MBytes (W25Q32B)\n\n\n\u8f93\u5165\u7535\u538b(\u7535\u6c60\u63a5\u53e3)\n\n\n3.4~4.2V\n\n\n\n\n\n\nWi-Fi \u7f51\u7edc\u534f\u8bae\n\n\n802.11b/g/n\n\n\n\u8f93\u51fa\u76f4\u6d41\u7535\u6d41\n\n\n1000mA MAX\n\n\n\n\n\n\nWi-Fi \u52a0\u5bc6\u6280\u672f\n\n\nWEP/TKIP/AES\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3.3V\n\n\n\n\n\n\nGrove Connectors\n\n\n6\n\n\n\u5145\u7535\u7535\u6d41\n\n\n500mA MAX\n\n\n\n\n\n\nFlash\n\n\n4MB (W25Q32B)\n\n\n\n\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\nWio Link\u7cbe\u5fc3\u8bbe\u8ba1\uff0c\u4e3a\u4ee5\u4e0b\u9879\u76ee\u63d0\u4f9b\u7b80\u5355\u7684Wi-Fi\u89e3\u51b3\u65b9\u6848\uff1a\n\n\n\n\n\u667a\u80fd\u5bb6\u5c45\n\n\n\u667a\u80fd\u73af\u5883\u76d1\u6d4b\n\n\n\u641e\u7b11\u73a9\u5177\n\n\n\u7269\u8054\u7f51\n\n\n\u7269\u8054\u7f51\n\n\n\n\n\u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u8bbe\u8ba1\u4e86\u5f88\u591a\u9879\u76ee \nrecipe\n, \u6765\u53c2\u89c2\uff0c\u627e\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\uff0c\u751a\u81f3\u5206\u4eab\u4f60\u81ea\u5df1\u7684\u9879\u76ee\uff0c\u6211\u76f8\u4fe1\u4f1a\u4e3a\u4f60\u8d62\u5f97\u5f88\u591a\u7c89\u4e1d\u301c\n\n\n\n\n\n\n\n\n\u6d47\u704c\u7cfb\u7edf\n\n\nLED\u706f\u5149\u5899\n\n\n\u81ea\u52a8\u5582\u98df\u5668\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW\n\n\nMAKE IT NOW\n\n\nMAKE IT NOW\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKickstarter\u76d1\u63a7\n\n\n\u672a\u63a5\u6765\u7535\u76d1\u63a7\n\n\n\u76d1\u63a7\u8001\u677f\u7684\u7a81\u73b0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW\n\n\nMAKE IT NOW\n\n\nMAKE IT NOW\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u4e00\u4e9b\u5e94\u7528\u662f\u4e3aWio Node\u5236\u4f5c\u7684\uff0c\u4f46\u5b83\u4e5f\u9002\u7528\u4e8eWio Link\u3002\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\n\n\n\n\u63cf\u8ff0\n\n\n\u529f\u80fd\n\n\n\n\n\n\n\n\n\n\nMCU\n\n\nESP8266\n\n\n\n\n\n\n\u6570\u5b57Port 0\n\n\nGPIO 14\n\n\n\n\n\n\n\u6570\u5b57Port 1\n\n\nGPIO 12\n\n\n\n\n\n\n\u6570\u5b57Port 2\n\n\nGPIO 13\n\n\n\n\n\n\nAnalog Port\n\n\nA3\n\n\n\n\n\n\nUART Port\n\n\nPin 1 \n Pin 3\n\n\n\n\n\n\nI2C Port\n\n\nPin 4 \n Pin 5\n\n\n\n\n\n\nStatus Light\n\n\n\u84dd\u8272LED\u662fWiFi\u72b6\u6001\u6307\u793a\u706f\uff0c\u7ea2\u8272LED\u8868\u793a\u5de5\u4f5c\u72b6\u6001\n\n\n\n\n\n\nConfigure Button\n\n\n\u914d\u7f6e\u548c\u7ba1\u7406\u60a8\u7684Wio Link\n\n\n\n\n\n\nBattery Holder\n\n\nJST2.0\n\n\n\n\n\n\nMicro USB\n\n\n\u4e3a\u7535\u8def\u677f\u4f9b\u7535\u6216\u4e0ePC\u901a\u8baf\n\n\n\n\n\n\nReset Button\n\n\n\u590d\u4f4dMCU\n\n\n\n\n\n\n\n\nLEDs\u6307\u793a\u706f\n\n\n\u5728FUNCTION\u6309\u94ae\u9644\u8fd1\u67092\u4e2a\u72b6\u6001LED\uff0c\u4e00\u4e2a\u84dd\u8272\u548c\u4e00\u4e2a\u7ea2\u8272\u3002 \u84dd\u8272LED\u6307\u793a\u7f51\u7edc\u72b6\u6001\u3002 \u5b83\u6709\u4ee5\u4e0b\u95ea\u70c1\u6a21\u5f0f\uff1a\n\n\n\n\n\u547c\u5438\u914d\u7f6e\u6a21\u5f0f\u4e0b\n\n\n\u5feb\u901f\u95ea\u70c1\u4e24\u6b21\uff0c\u7136\u540e\u5173\u95ed1\u79d2\uff0c\u8bf7\u6c42\u8def\u7531\u5668\u7684IP\u5730\u5740\n\n\n\u5feb\u901f\u95ea\u70c1\u4e00\u6b21\uff0c\u7136\u540e\u5173\u95ed1s\uff0c\u8fde\u63a5\u5230\u670d\u52a1\u5668\n\n\n\u57281\u79d2\u540e\u5173\u95ed1s\uff0c\u5df2\u7ecf\u8fde\u63a5\u5230\u7f51\u7edc\n\n\n\u5feb\u901f\u95ea\u70c1\uff08100ms\u4eae100ms\u706d\uff09OTA\u6a21\u5f0f\n\n\n\n\n\n\nNote\n\n\n\n\n\u84dd\u8272LED\u662f\u8fde\u5230GPIO2\uff0c\u4e5f\u662fUART1\u7684TX\u5f15\u811a\u3002 \u5f53\u4e0b\u8f7d\u56fa\u4ef6\u65f6\uff0cUART1\u4f1a\u76f4\u63a5\u8f6c\u50a8UART0\u53d1\u9001\u7684\u6570\u636e\u3002 \u6240\u4ee5\u5728\u4e0b\u8f7d\u56fa\u4ef6\u65f6\uff0cBLUE LED\u4f1a\u95ea\u70c1\u3002 \u542f\u52a8\u540e\uff0cGPIO2\u5c06\u88ab\u914d\u7f6e\u4e3aGPIO, \u800c\u4e0d\u662fUART1\u7684\u4e0d\u662fTX\u3002\n\n\n\n\n\n\n\u7ea2\u8272LED\u662fGrove\u6a21\u5757\u7684\u7535\u6e90\u6307\u793a\u706f\u3002 \u6240\u6709\u516d\u4e2aGrove\u63a5\u53e3\u7684VCC\u6c47\u805a\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u901a\u8fc7GPIO 15\u8fdb\u884c\u63a7\u5236\u3002\u5f53\u8282\u70b9\u5904\u4e8e\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u65f6\uff0c\u6240\u6709Grove\u6a21\u5757\u90fd\u4f1a\u65ad\u7535\u3002 \u5f53Grove\u6a21\u5757\u901a\u7535\u65f6\uff0c\u7ea2\u8272LED\u5c06\u4eae\u8d77\uff0c\u5f53Grove\u6a21\u5757\u672a\u901a\u7535\u65f6\uff0c\u7ea2\u8272LED\u5c06\u7184\u706d\u3002\n\n\n\u5176\u4ed6\u529f\u80fd\n\n\nWio Link\u5177\u6709\u5185\u7f6e\u7684LiPo\u7535\u6c60\u5145\u7535\u5668\uff0c\u56e0\u6b64\u5f53USB\u8fde\u63a5\u65f6\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7JST 2.0\u7aef\u53e3\u4e3a3.7v LiPo\u7535\u6c60\u5145\u7535\u3002\n\n\n\n\n\n\nNote\n\n\n\n\n\u7535\u6c60\u9700\u8981\u72ec\u7acb\u8d2d\u4e70. \u8bf7\u8bbf\u95ee \nBazzar\n \u91c7\u8d2d\u3002\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u8ba9\u6211\u4eec\u7528Wio Link\u6784\u5efa\u4e00\u4e2a\u975e\u5e38\u57fa\u672c\u7684LED\u5e94\u7528\u7a0b\u5e8f\uff0c\u5728\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u60a8\u5c06\u80fd\u591f\u57285\u5206\u949f\u5185\u901a\u8fc7\u667a\u80fd\u624b\u673a\u63a7\u5236LED\u3002 \u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u6709\u4ee5\u4e0b\u7684\u4e1c\u897f\uff1a\n\n\n\n\n\n\n\n\nWio Link\n\n\nGrove - LED\n\n\nMicro USB Cable\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGET ONE NOW\n\n\nGET ONE NOW\n\n\nGET ONE NOW\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u8fd8\u9700\u8981\u667a\u80fd\u624b\u673a\uff08Android\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c4.1\u6216\u66f4\u9ad8\uff0ciOS\u7248\u672c7\u6216\u66f4\u9ad8\uff09\n\n\nGrove - LED \u5305\u62ec Grove cable\n\n\n\n\n\n\n\u6b65\u9aa41\n\uff1a \u5b89\u88c5Android / iOS\u5e94\u7528\u7a0b\u5e8f\n\n\n\u60a8\u9700\u8981\u5b89\u88c5Wio Link\u5e94\u7528\u7a0b\u5e8f\u6765\u7ba1\u7406\u548c\u914d\u7f6e\u60a8\u7684Wio Link\u8bbe\u5907\u3002\n\n\n\u4e0b\u8f7dAndroid\u6216iOS App\u5e76\u8fdb\u884c\u5b89\u88c5\u3002 \u6216\u8005\u4f60\u53ef\u4ee5\u53bbApple Store\u6216Google Market\u7684App Store\u641c\u7d22\u201cWio Link\u201d\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGet Android App\n\n\nGet iOS App\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u786e\u4fdd\u60a8\u7684Android\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u662f4.1\u6216\u66f4\u9ad8\uff0ciOS\u7248\u672c\u662f7\u6216\u66f4\u9ad8\u3002\n\n\n\n\n\n\n\u6b65\u9aa42\n\uff1a \u521b\u5efa\u60a8\u7684\u5e10\u6237\n\n\n\n\n\u5982\u679c\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528Wio APP\uff0c\u53ef\u80fd\u9700\u8981\u60a8\u540c\u610fGPS\u6388\u6743\uff0c\u7136\u540e\u624d\u80fd\u6ce8\u518c\u3002\n\n\n\u5982\u679c\u60a8\u5df2\u7ecf\u6709\u5e10\u6237\uff0c\u8bf7\u5728\u767b\u5f55\u4e4b\u524d\u68c0\u67e5\u670d\u52a1\u5668\u7684\u4f4d\u7f6e\u3002\n\n\n\n\n\n\nNote\n\n\n\n\n\u8bf7\u6ce8\u610f\u670d\u52a1\u5668\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u8fde\u63a5\u5230Wio Link\u65f6\u670d\u52a1\u5668\u4f4d\u7f6e\u9519\u8bef\u5c06\u5bfc\u81f4\u6545\u969c\u3002\u5982\u679c\u60a8\u5728\u4e2d\u56fd\uff0c\u8bf7\u9009\u62e9\u4e2d\u56fd\u670d\u52a1\u5668\u3002\n\n\n\n\n\n\n\n\n\u6b65\u9aa43\n\uff1a\u8fde\u63a5Wio Link Wi-Fi AP\n\n\n\n\n\u6309\u4f4fCONFIG\u6309\u94ae\uff0c\u76f4\u5230\u84dd\u8272LED\u53d8\u4e3a\u547c\u5438\u6a21\u5f0f\uff08\u5373\u95ea\u70c1\uff0c\u6de1\u5165\u6de1\u51fa\u6548\u679c\uff09\u3002 \u8fd9\u610f\u5473\u7740Wio Link\u5df2\u7ecf\u6210\u529f\u5730\u8f6c\u5230\u914d\u7f6e\u6a21\u5f0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u88abWio App\u68c0\u6d4b\u5230\u3002\n\n\n\n\n\n\n\n\n\u70b9\u51fb \"Add your first Device\".\n\n\n\u9009\u62e9 Wio Link\n\n\n\"Go to Wi-Fi list\" \u5e26\u60a8\u8fdb\u5165\u667a\u80fd\u624b\u673a\u7684Wi-Fi\u8bbe\u7f6e\u754c\u9762\u3002\n\n\n\n\n\n\n\n\n\u5982\u679c\u60a8\u5df2\u6210\u529f\u5c06\u84dd\u8272LED\u8f6c\u4e3a\u547c\u5438\u6a21\u5f0f\uff0c\u60a8\u5c06\u5728Wi-Fi\u5217\u8868\u4e2d\u627e\u5230Wio Link\uff0c\u5e76\u8fde\u63a5\u5230\u5b83\uff08\u901a\u5e38\u5728Wi-Fi\u5217\u8868\u4e2d\u901a\u5e38\u4e0d\u79f0\u4e3aWio Link\uff0c\u5728\u8be5\u793a\u4f8b\u4e2d\uff0c \u6211\u7684\u662fWio_8B2F12\uff0c\u60a8\u53ef\u4ee5\u5728\u5217\u8868\u4e2d\u627e\u5230\u4e00\u4e2a\u540d\u4e3awio_xxxxxx\u7684\u6587\u4ef6\u3002\uff09\n\n\n\u8fde\u63a5\u540e\uff0c\u60a8\u5c06\u6536\u5230\u901a\u77e5\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u56de\u5230\u5e94\u7528\u7a0b\u5e8f\u3002\n\n\n\u4e0b\u4e00\u6b65\u662f\u8fde\u63a5\u5230\u5bb6\u5ead\u6216\u516c\u53f8\u7684Wi-Fi\n\n\n\n\n\n\n\n\n\u5982\u679c\u60a8\u8981\u8fde\u63a5\u7684Wi-Fi\u6709\u5bc6\u7801\uff0c\u9700\u8981\u8f93\u5165\u5bc6\u7801\n\n\n\u8003\u8651\u5230\u5c06\u6765\u53ef\u80fd\u9700\u8981\u8fde\u63a5\u8d85\u8fc71\u4e2aWio\u8bbe\u5907\uff0c\u4e00\u4e2a\u7279\u6b8a\u7684\u540d\u79f0\u53ef\u4ee5\u8ba9\u60a8\u8f7b\u677e\u533a\u5206\u5b83\u4eec\u3002\n\n\n\n\n\n\n\u6b65\u9aa44\n\uff1a\u4f7f\u7528Wio Link\u5b9e\u73b0\u4e92\u8fde\u6a21\u5757\u548c\u66f4\u65b0\u56fa\u4ef6\n\n\n\n\n\u70b9\u51fbWio Link\uff0c\u4f60\u5c06\u8fdb\u5165\u4e3b\u754c\u9762\u3002\n\n\n\u67096\u4e2aGrove\u8fde\u63a5\u5668\uff0c\u9009\u62e9\u5de6\u8fb9\u7684\u7b2c\u4e00\u4e2a\u3002\n\n\n\u56e0\u4e3aLED\u662f\u8f93\u51fa\u8bbe\u5907\uff0c \u9009\u62e9\u8f93\u51fa\u7c7b\u522b\u3002\n\n\n\u627e\u5230\u770b\u8d77\u6765\u50cf\u706f\u6ce1\u7684\u56fe\u6807\uff0c\u9009\u62e9\u5b83\u3002\n\n\n\u7136\u540e\u60a8\u4f1a\u53d1\u73b0\u5e95\u90e8\u77e9\u5f62\u6309\u94ae\u53d8\u4e3a\u7ea2\u8272\uff0c\u201cView API\u201d\u53d8\u4e3a\u201cUpdate Firmware\u201d\uff0c \u9009\u62e9\u201cUpdate Firmware\u201d\n\n\n\n\n\n\n\n\n\u7531\u4e8e\u60a8\u5728APP\u4e2d\u9009\u62e9\u4e86\u6570\u5b570\u7aef\u53e3\u4e0eLED\u8fde\u63a5\uff0c\u6240\u4ee5\u60a8\u9700\u8981\u7269\u7406\u4e0a\u5c06Grove-LED\u8fde\u63a5\u5230Wio Link\u7684\u6570\u5b570\u7aef\u53e3\u3002\n\n\n\n\n\n\n\u6b65\u9aa45\n\uff1a\u4f7f\u7528API\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\n\n\n\n\n\u73b0\u5728\u60a8\u5df2\u7ecf\u5c06LED\u8fde\u63a5\u5230Wio Link\uff0c\u70b9\u51fb\u201cView API\u201d\u6765\u68c0\u67e5Wio Link\u7684API\n\n\n\u5728\u201cTest Request\u201d\u533a\u57df\u4e2d\u8f93\u5165\u201c1\u201d\u6216\u201c0\u201d\uff0c\u7136\u540e\u5355\u51fb\u201cPost\u201d\u6309\u94ae\uff0c\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\n\n\n\n\n\n\u5f00\u59cb\u4f7f\u7528IFTTT\uff06DoButton\n\n\n\n\n\u4e0d\u77e5\u9053\u5982\u4f55\u7f16\u7801\uff1f \u4e0d\u7528\u62c5\u5fc3\uff0c\u5728\nIFTTT\n \u5e2e\u52a9\u4e0b, \u5373\u4f7f\u60a8\u5bf9\u7f16\u7801\u4e00\u65e0\u6240\u77e5\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u6784\u5efa\u4e00\u4e9b\u7b80\u5355\u7684\u9879\u76ee\u3002\n\n\nIFTTT\u662f\u201cIf That Then That\u201d\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u79cd\u514d\u8d39\u7684\u57fa\u4e8eWeb\u7684\u670d\u52a1\uff0c\u5141\u8bb8\u7528\u6237\u521b\u5efa\u7b80\u5355\u6761\u4ef6\u8bed\u53e5\u94fe\uff0c\u79f0\u4e3a\u201crecipes\u201d\uff0c\u8fd9\u4e9b\u94fe\u63a5\u662f\u57fa\u4e8e\u5176\u4ed6Web\u670d\u52a1\uff08\u5982Gmail\uff0c Facebook\uff0cInstagram\u3002 IFTTT\u5982\u4f55\u4e0eWio Link\u5de5\u4f5c\uff1f \u5982\u4e0b\u56fe\u6240\u793a\uff0cSeeed\u5728wio.seeed.io\u63d0\u4f9b\u4e91\u670d\u52a1\uff0c\u53ef\u4ee5\u4ea4\u6362\u6570\u636e\u5e76\u5411IFTTT\u548cWio Link\u53d1\u9001\u6307\u4ee4\u3002 \u6240\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e9b\u7b80\u5355\u7684recipes\uff0c\u4f60\u53ef\u4ee5\u5728\u65e0\u9700\u7f16\u7801\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u642d\u5efa\u9879\u76ee\u3002\n\n\n\n\n\u5982\u679c\u4f60\u6ca1\u6709IFTTT\u8d26\u53f7, \u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u6765\u6ce8\u518c.\n\n\n\u5982\u679c\u4f60\u5df2\u7ecf\u6709IFTTT\u8d26\u53f7,\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u4e0eSeeed\u8fde\u63a5\uff0c\u6216\u5728IFTTT\u7f51\u7ad9\u4e0a\u641c\u7d22Seeed\u3002 \u5728\u90a3\u91cc\uff0c\u60a8\u4f1a\u53d1\u73b0Seeed\u76849\u79cdrecipes\u6559\u4f60\u5982\u4f55\u4f7f\u7528IFTTT\u3002\n\n\n\n\u4ec0\u4e48\u662fDoButton\uff1f DoButton\u662fIFTTT\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e00\uff0c\u5b83\u4f7f\u60a8\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u81ea\u5df1\u7684\u4e2a\u6027\u5316\u6309\u94ae\uff0c\u975e\u5e38\u9002\u5408\u6784\u5efaIoT\u9879\u76ee\u5e76\u901a\u8fc7\u667a\u80fd\u624b\u673a\u8fdb\u884c\u63a7\u5236\uff0c\u4e0b\u9762\u662f\u4e24\u4e2a\u793a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528IFTTT\u548cDoButton\u6765\u5236\u4f5c\u6709\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\n\n\u5e94\u7528:\n\n\n\n\n\n\n\n\nIFTTT\n\n\nDoButton\n\n\n\n\n\n\n\n\n\n\n[\nRecipe\n]\nDIY\u81ea\u52a8\u82b1\u56ed\u704c\u6e89\n\n\n[\nRecipe\n]\n\u5f53\u4f60\u4e0d\u5728\u5bb6\u65f6\uff0c\u5982\u4f55\u5582\u517b\u5ba0\u7269\n\n\n\n\n\n\n[\nVideo\n]\n\u5982\u4f55\u4f7f\u7528ITFFF\n\n\n[\nVideo\n]\n\u5982\u4f55\u4f7f\u7528DoButton\n\n\n\n\n\n\n\n\n\u9ad8\u7ea7\u7528\u6237\u6307\u5357\n\n\n\n\n\u611f\u89c9\u8fd9\u4e9b\u4f8b\u5b50\u592a\u7b80\u5355\u4e86\uff1f \u60f3\u505a\u66f4\u590d\u6742\u7684\u9879\u76ee\uff1f \u4ee5\u4e0b\u662f\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528Wio Link\u7684\u6700\u4f73\u6307\u5357\u3002 \u901a\u8fc7\u8fd9\u4e9b\u6307\u5357\uff0c\u9ad8\u7ea7\u7528\u6237\u80fd\u591f\u4e86\u89e3\u6709\u5173Wio Link\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u90e8\u7f72\u79c1\u6709\u670d\u52a1\u5668\uff0c\u751a\u81f3\u4e3aWio Link\u7f16\u5199\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\u3002\n\n\n\n\n\u6307\u5357\u6db5\u76d6\uff1a\n\n\n\n\nAPI\u53c2\u8003\n\n\n\u670d\u52a1\u5668\u90e8\u7f72\u6307\u5357\n\n\n\u9ad8\u7ea7\u7528\u6237\u6307\u5357\n\n\n\u5982\u4f55\u4e3aWio Link\u7f16\u5199\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\uff1f\n\n\n\n\n\u9ad8\u7ea7\u6559\u7a0b\n\n\n\u5982\u679c\u60a8\u7528\u667a\u80fd\u624b\u673a\u6210\u529f\u63a7\u5236\u4e86Grove\uff0c\u5e76\u5e0c\u671b\u5c1d\u8bd5\u66f4\u56f0\u96be\u800c\u4e0d\u662f\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5b66\u4e60\u672c\u6559\u7a0b\u540e\uff0c\u60a8\u5c06\u80fd\u591f\u6784\u5efa\u4e00\u4e2a\u6e29\u6e7f\u5ea6\u76d1\u6d4b\u5668\uff0c\u5e76\u70b9\u4eaeGrove RGB LED\u706f\u6761\u3002\n\n\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u68c0\u67e5\u60a8\u662f\u5426\u6709\u4ee5\u4e0b\u8bbe\u5907\u3002\n\n\n\n\n\n\n\n\nRGB Led strip\n\n\nGrove-Temperature and Humidity Sensor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGet One Now\n\n\nGet One Now\n\n\n\n\n\n\n\n\n\n\n\u6b65\u9aa41\uff1a\u5c06LED\u6761\u63d2\u5165Wio Link\uff0c\u7136\u540e\u5c06\u76f8\u540c\u7684\u6a21\u5757\u62d6\u81f3\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684Wio Link\u3002\u66f4\u65b0\u56fa\u4ef6\u3002\n\n\n\n\n\n\n\n\n\u6b65\u9aa42\uff1a\u5c06Grove\u6e29\u5ea6\u548c\u6e7f\u5ea6\u4f20\u611f\u5668\u63d2\u5165Wio Link\uff0c\u7136\u540e\u5c06\u76f8\u540c\u7684\u6a21\u5757\u62d6\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684Wio Link\u4e2d\u3002\u66f4\u65b0\u56fa\u4ef6\u3002\n\n\n\n\n\n\n\n\n\u6b65\u9aa43\uff1a\u901a\u8fc7\u67e5\u770bAPI\uff0c\u5e76\u67e5\u770b\u60a8\u5bb6\u4e2d\u7684\u6e29\u6e7f\u5ea6\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u7528\u624b\u63e1\u4f4f\u63e1\u6e29\u6e7f\u5ea6\u4f20\u611f\u5668\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u6e29\u5ea6\u53d8\u5316\u3002 \u6e29\u5ea6\u63d0\u9ad8\u4e861\u6444\u6c0f\u5ea6\u3002 \u5c1d\u8bd5\u770b\u770b\u6539\u53d8\u623f\u5b50\u7684\u6e29\u5ea6\u548c\u6e7f\u5ea6\u3002\n\n\n\n\n\n\n\n\n\u6b65\u9aa44\uff1a\u901a\u8fc7\u6539\u53d8RGB\u503c\u63a7\u5236LED\u6761\u7684\u5149\u7ebf\u3002\n\n\n\n\n\u56e0\u4e3aWio Link App\u8bfb\u53d6\u5341\u516d\u8fdb\u5236RGB\u503c\uff0c\u6240\u4ee5RGB\u503c\u9700\u8981\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u503c\u3002 \u5728\u8fd9\u91cc\u6211\u60f3\u63a8\u8350\u7f51\u7ad9\nRGB t0 Hex\n\u3002 \u53ea\u8981\u8f93\u51653\u4e2aRGB\u5143\u7d20\uff08\u7ea2\uff0c\u7eff\uff0c\u84dd\uff09\u7684RGB\u503c\uff0c\u7f51\u7ad9\u5c31\u4f1a\u5c06RGB\u503c\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u3002 \u6bd4\u5982\u8f93\u5165255\uff0c0\uff0c0\n\n\n\n\n\n\n\u7136\u540e\u4f60\u4f1a\u5f97\u5230\u5341\u516d\u8fdb\u5236\u503c\u4e3aFF0000\uff0c\u989c\u8272\u4e3a\u7ea2\u8272\u3002\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u60a8\u8f93\u5165\u7684RGB\u503c\u5e94\u4e3a0\u5230255\u4e4b\u95f4\u7684\u4efb\u4f55\u6570\u5b57\uff08\u5305\u62ec0\u548c255\uff09\n\n\n\n\n\n\n\u7136\u540e\u8f93\u5165\u60a8\u8981\u7684Leds\u6570\u91cf\u548c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5341\u516d\u8fdb\u5236\u503c\uff0c\u8fd9\u91cc\u6211\u7684Led Strip\u670930\u4e2aLeds\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u4e8630\u4e2a\u3002\n\n\n\n\n\u60a8\u8fd8\u53ef\u4ee5\u6307\u5b9a\u6761\u7eb9\u7684\u54ea\u4e00\u90e8\u5206\u88ab\u70b9\u4eae\uff0c\u5e76\u7ed9\u5b83\u4e00\u4e2a\u7279\u6b8a\u7684\u989c\u8272\uff0c\u6216\u751a\u81f3\u50cf\u5f69\u8679\u6a21\u5f0f\u4e2d\u7684\u95ea\u70c1\u3002 \u5f88\u591a\u60ca\u4eba\u7684\u529f\u80fd\u6b63\u5728\u7b49\u5f85\u4f60\u7684\u63a2\u7d22\uff01\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\u786c\u4ef6\n\n\n\n\nEAGLE Schematic files\n\n\nEAGLE PCB file\n\n\nSchematic files(pdf)\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\nSource Code on Github.\n\n\n\n\n\u5176\u4ed6\u6587\u6863\n\n\n\n\nAPI Reference\n\n\nServer Deployment Guide\n\n\nHow to write module driver for Wio Link\n\n\niot.seeed.cc\n \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002\n\n\n\n\nFAQ\n\n\n\n\n\u4ee5\u4e0b\u662f\u6211\u4eec\u4ece\u65b0\u7528\u6237\u90a3\u91cc\u5f97\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u3002 \u5982\u679c\u60a8\u5728\u4f7f\u7528Wio Link\u6216\u5176\u4ed6Wio\u4ea7\u54c1\u65f6\u9047\u5230\u4efb\u4f55\u5176\u4ed6\u95ee\u9898\uff0c\u6b22\u8fce\u6765\u5230\u6709\u8bb8\u591a\u4e13\u4e1a\u7528\u6237\u7684\nCommunity of Wio\n \u3002\n\n\n1. \u7535\u6e90\u548c\u7535\u6c60 - Wio Link\u662f\u5426\u914d\u6709Lipo\u7535\u6c60\uff1f\n\n\n\u4e0d\uff0c\u6bcf\u4e2aWio Link\u90fd\u914d\u6709\u5fae\u578bUSB\u7535\u7f06\u8fdb\u884c\u5145\u7535\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u4ece\u6211\u4eec\u7684\u6dd8\u5b9d\u8d2d\u4e703.7V\u7684Lipo\u7535\u6c60\u3002 \u4ee5\u4e0b\u662f\u60a8\u7684\u53c2\u8003\u8d44\u6599\uff1a\n- \u6700\u5927\u8f93\u5165\u7535\u538b\uff1a4.2V;\n- \u6700\u5927\u5145\u7535\u7535\u6d41\uff1a500mA\u3002\n\n\n2.\u7535\u6e90\u548c\u7535\u6c60 - \u6211\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709Wio Link\u7684\u7535\u6e90\u9002\u914d\u5668\u5417\uff1f\u54ea\u4e00\u79cd\uff1f\n\n\n\u6709\u4e24\u79cd\u65b9\u5f0f\u4e3aWio Link\u4f9b\u7535\uff0cMicro USB\u7535\u7f06\u62163.7V Lipo\u7535\u6c60\u4f9b\u7535\u3002\u5982\u679cMicro USB\u548c\u7535\u6c60\u90fd\u63d2\u5165\u7535\u8def\u677f\uff0cUSB\u7535\u6e90\u5c06\u4e3a\u7535\u6c60\u5145\u7535\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u53ef\u4ee5\u8fde\u63a5Micro USB\u7535\u7f06\u548c5Vdc\u8f93\u51fa\u7684\u5404\u79cd\u7535\u6e90\u9002\u914d\u5668\u3002\u7535\u6c60\u5ea7\u662fJST-2.0\u8fde\u63a5\u5668\u3002\n\n\n3.\u529f\u8017 - Wio Link\u7684\u529f\u8017\u662f\u591a\u5c11\uff1f\n\n\n\u5e73\u5747\u529f\u8017\u4e3a70mA\u3002\u4f7f\u7528700mAh\u7684\u7535\u6c60\uff0c\u53ef\u4ee5\u4fdd\u6301\u6d3b\u52a8\u957f\u8fbe10\u5c0f\u65f6\u3002\u6709\u4f4e\u529f\u8017\u7684API\u53ef\u4ee5\u8ba9Wio Link\u4ece\u5de5\u4f5c\u6a21\u5f0f\u66f4\u6539\u4e3a\u4f11\u7720\u6a21\u5f0f\u3002\u5c06\u5e73\u5747\u529f\u8017\u964d\u81f3150uA\u4ee5\u4e0b\u3002\n\n\n4.Grove\u7535\u7f06 - Groves\u662f\u5426\u5728\u6240\u6709\u5957\u4ef6\u4e2d\u914d\u5907\u4e86\u7535\u7f06\uff1f\n\n\n\u662f\u7684\uff0c\u6211\u4eec\u6bcf\u4e2aGrove\u6a21\u5757\u90fd\u88c5\u6709\u4e00\u4e2a\u6807\u51c6\u76844\u9488Grove\u7535\u7f06\u3002\n\n\n5.RESTful API - \u662f\u5426\u9700\u8981\u4e92\u8054\u7f51\u8fde\u63a5\uff0c\u6216\u8005\u53ef\u4ee5\u901a\u8fc7\u672c\u5730\u7f51\u7edc\u8fdb\u884c\u8fde\u63a5\uff1f\n\n\n\u6211\u4eec\u5c06REST API\u670d\u52a1\u5668\u90e8\u7f72\u5230iot.seeed.cc\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4eceiot.seeed.cc\u8bbf\u95ee\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\u3002\u76ee\u524d\uff0cWio Link\u5fc5\u987b\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5c06\u5f00\u6e90\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u7528\u6237\u4ee5\u975e\u5e38\u7b80\u5355\u7684Docker\u65b9\u5f0f\u90e8\u7f72\u672c\u5730\u670d\u52a1\u5668\u3002\u901a\u8fc7\u90e8\u7f72\u672c\u5730\u670d\u52a1\u5668\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u4f7f\u7528\u7f16\u8bd1\u548c\u6570\u636e\u4ea4\u6362\u670d\u52a1\uff0c\u800c\u4e0d\u7528\u4e0a\u7ebf\u3002\n\n\n6.\u652f\u6301\u7684\u7f16\u7a0b\u65b9\u6cd5 - \u662f\u5426\u652f\u6301\u5176\u4ed6\u7f16\u7a0b\u65b9\u6cd5\uff0c\u5982Arduino IDE\uff1f\n\n\nWio Link\u53ef\u4ee5\u4f7f\u7528Arduino IDE\u8fdb\u884c\u7f16\u7a0b\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u5931\u53bbRESTful API\u7684\u529f\u80fd\u3002\n\n\n\u5982\u679c\u60a8\u60f3\u4e0eArduino\u6216RPI\u8fdb\u884c\u4e92\u52a8\uff0c\u60a8\u53ef\u4ee5\u5f00\u53d1\u7b2c\u4e09\u65b9\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\uff0c\u53c2\u8003\n\u6307\u5357\n\u548c\n\u9a71\u52a8\n\u3002\n\n\n7. \u652f\u6301\u7684\u5e73\u53f0 - \u652f\u6301Windows\u5e73\u53f0\uff1f\n\n\n\u73b0\u5728\uff0cWio Link\u63d0\u4f9bAndroid\u548ciOS\u4e24\u6b3e\u79fb\u52a8\u5e94\u7528\u3002\u6211\u4eec\u5c06\u6240\u6709\u670d\u52a1\u90fd\u4f5c\u4e3aRESTful API\uff0c\u5982\u679c\u9075\u5faaAPI\u6587\u6863\uff0c\u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u6784\u5efa\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f8b\u5982Mobile Apps\u6216Desktop Apps\u3002\nWio Link\u662f\u4e00\u4e2a\u793e\u533a\u53cb\u597d\u7684\u9879\u76ee\u3002\u5b83\u4e0d\u4f1a\u5c40\u9650\u4e8e\u67d0\u4e2a\u5e73\u53f0\u3002\u6211\u4eec\u771f\u7684\u5e0c\u671b\u4eba\u4eec\u53ef\u4ee5\u548c\u4ed6\u4eec\u4e00\u8d77\u73a9Wio Link\u3002\n\n\n8. \u53ef\u4ee5\u4f7f\u7528Wio Link\u4e0e\u73b0\u6709\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u5417\uff1f\n\n\n\u662f. \u9996\u5148\uff0c\u5c06Wio Link\u7684\u4efb\u4f55GPIO\u8fde\u63a5\u5230\u5176\u4ed6\u7cfb\u7edf\uff0c\u5728\u79fb\u52a8\u5e94\u7528\u4e2d\u9009\u62e9\u201cGeneric Digital Input\u201d\u6216\u201cGeneric Digital Output\u201d Grove\u6a21\u5757\uff0c\u7136\u540e\u901a\u8fc7RESTful API\u8c03\u7528\u5411\u73b0\u6709\u7cfb\u7edf\u53d1\u9001/\u8bfb\u53d6\u4fe1\u53f7\u3002\u5176\u6b21\uff0c\u5c06Wio Link\u7684\u6a21\u62df\u7aef\u53e3\u8fde\u63a5\u5230\u5176\u4ed6\u7cfb\u7edf\uff0c\u5728\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u9009\u62e9\u201cGeneric Analog Input\u201d Grove\u6a21\u5757\uff0c\u7136\u540e\u8bfb\u53d6\u6a21\u62df\u6d4b\u91cf\uff0c\u4ee5\u83b7\u5f97\u73b0\u6709\u7cfb\u7edf\u7684\u4e00\u4e9b\u7269\u7406\u91cf\u3002\u7b2c\u4e09\uff0c\u4e3a\u4e86\u4e0e\u73b0\u6709\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u66f4\u7075\u6d3b\uff0c\u60a8\u53ef\u4ee5\u5f00\u53d1\u7b2c\u4e09\u65b9\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\uff0c\u901a\u8fc7I2C\u6216UART\u63a5\u53e3\u5c06\u8bf7\u6c42\u4ece\u4e92\u8054\u7f51\u53d1\u9001\u5230\u73b0\u6709\u7cfb\u7edf\u3002\u6211\u4eec\u6709\u5173\u4e8e\u5982\u4f55\u5f00\u53d1\u7b2c\u4e09\u65b9\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\u7684\n\u6307\u5bfc\n\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u4e3a\u60a8\u7684\u5f00\u53d1\u63d0\u4f9b\u6280\u672f\u652f\u6301\u3002\n\n\n9. Wio Link\u652f\u6301\u591a\u5c11\u4e2aGroves\uff1f\n\n\n\u73b0\u5728\u6709150\u591a\u79cd\u5373\u63d2\u5373\u7528\u7684Groves\u6a21\u5757\uff0c\u5176\u4e2dWio Link\u652f\u630136\u4e2a\u3002\n\n\nGrove \u6a21\u5757\u652f\u6301\u5217\u8868\n\n\n\n\n\n\n\n\n\u63cf\u8ff0\n\n\n\u63a5\u53e3\n\n\n\n\n\n\n\n\n\n\nGrove - Moisture Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Light Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Temperature Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Rotary Angle Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Light Sensor(P)\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Sound Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Electricity Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Slide Potentiometer\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - 80cm Infrared Proximity Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - UV Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Rotary Angle Sensor(P)\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Loudness Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Luminance Sensor\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Air quality sensor v1.3\n\n\n\u6a21\u62df\n\n\n\n\n\n\nGrove - Button\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Switch(P)\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Collision Sensor\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Line Finder\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Water Sensor\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - PIR Motion Sensor\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Tilt Switch\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Touch Sensor\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Magnetic Switch\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Hall Sensor\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Flame Sensor\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Button(P)\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Electromagnet\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Water Atomization v1.0\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Solid State Relay\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Relay\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - MOSFET\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - 2-Coil Latching Relay\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Dry-Reed Relay\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Variable Color LED\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Purple LED (3mm)\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - LED String Light\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Red LED\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Green LED\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - White LED\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Blue LED\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Multi Color Flash LED (5mm)\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Vibration Motor\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - EL Driver\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Buzzer\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Speaker\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - 3-Axis Digital Compass\n\n\nI2C\n\n\n\n\n\n\nGrove - 3-Axis Digital Accelerometer(\u00b11.5g)\n\n\nI2C\n\n\n\n\n\n\nGrove - 3-Axis Digital Gyro\n\n\nI2C\n\n\n\n\n\n\nGrove - Barometer Sensor (BMP180)\n\n\nI2C\n\n\n\n\n\n\nGrove - Gesture\n\n\nI2C\n\n\n\n\n\n\nGrove - Multichannel Gas Sensor\n\n\nI2C\n\n\n\n\n\n\nGrove - I2C ADC\n\n\nI2C\n\n\n\n\n\n\nGrove - OLED Display 1.12''\n\n\nI2C\n\n\n\n\n\n\nGrove - OLED Display 0.96''\n\n\nI2C\n\n\n\n\n\n\nGrove - I2C Motor Driver\n\n\nI2C\n\n\n\n\n\n\nGrove - I2C FM Receiver\n\n\nI2C\n\n\n\n\n\n\nGrove - Barometer(BMP280)\n\n\nI2C\n\n\n\n\n\n\nGrove - Temp\nHumi\nBarometer Sensor(BME280)\n\n\nI2C\n\n\n\n\n\n\nGrove - Ultrasonic Ranger\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Infrared Receiver\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Temperature\nHumidity Sensor Pro\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Infrared Emitter\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Infrared Reflective Sensor\n\n\nOthers\n\n\n\n\n\n\nGrove - Digital Light Sensor\n\n\nI2C\n\n\n\n\n\n\nGrove - IR Distance Interrupter\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - Recorder\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - LED Bar v2.0\n\n\nUART\n\n\n\n\n\n\nGrove - 4-Digit Display\n\n\nUART\n\n\n\n\n\n\nGrove - Servo\n\n\n\u6570\u5b57\n\n\n\n\n\n\nGrove - CO2 Sensor\n\n\nUART", 
            "title": "Wio Link"
        }, 
        {
            "location": "/Wio_Link/#_1", 
            "text": "\u65e0\u786c\u4ef6\u7f16\u7a0b\uff0c\u65e0\u9762\u5305\u677f\uff0c\u65e0\u8df3\u7ebf\uff0c\u65e0\u9700\u710a\u63a5\u3002  \u652f\u6301\u8bb8\u591aGrove\u6a21\u5757\uff08\u68c0\u67e5Mobile App\u4e2d\u7684\u5217\u8868\uff09\u3002  \u5373\u63d2\u5373\u7528Grove\u6a21\u5757  \u89c6\u89c9\u914d\u7f6e\u800c\u4e0d\u662f\u5fae\u63a7\u5236\u5668\u7f16\u7a0b\u3002  \u901a\u8fc7\u4e91\u7aef\u7f16\u8bd1\u548cOTA\u81ea\u52a8\u66f4\u65b0\u3002  \u5c06\u73b0\u5b9e\u4e16\u754c\u5e26\u5165\u865a\u62df\u5e73\u53f0\u3002 \u6240\u6709\u4f20\u611f\u5668\u90fd\u6210\u4e3a\u865a\u62dfRESTful API\u3002  Android\u548ciOS Apps\u6765\u7ba1\u7406Wio Link\u3002  \u652f\u6301IFTTT", 
            "title": "\u4ea7\u54c1\u7279\u5f81"
        }, 
        {
            "location": "/Wio_Link/#_2", 
            "text": "\u63cf\u8ff0  \u503c  \u7535\u6e90  \u503c      \u5c3a\u5bf8  55mm * 48mm  \u6bcf\u4e2aI/O\u7684\u76f4\u6d41\u7535\u6d41  12mA    \u6676\u632f  26MHz  \u8f93\u5165\u7535\u538b(Micro USB)  5V    \u95ea\u5b58  4MBytes (W25Q32B)  \u8f93\u5165\u7535\u538b(\u7535\u6c60\u63a5\u53e3)  3.4~4.2V    Wi-Fi \u7f51\u7edc\u534f\u8bae  802.11b/g/n  \u8f93\u51fa\u76f4\u6d41\u7535\u6d41  1000mA MAX    Wi-Fi \u52a0\u5bc6\u6280\u672f  WEP/TKIP/AES  \u5de5\u4f5c\u7535\u538b  3.3V    Grove Connectors  6  \u5145\u7535\u7535\u6d41  500mA MAX    Flash  4MB (W25Q32B)", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Wio_Link/#_3", 
            "text": "Wio Link\u7cbe\u5fc3\u8bbe\u8ba1\uff0c\u4e3a\u4ee5\u4e0b\u9879\u76ee\u63d0\u4f9b\u7b80\u5355\u7684Wi-Fi\u89e3\u51b3\u65b9\u6848\uff1a   \u667a\u80fd\u5bb6\u5c45  \u667a\u80fd\u73af\u5883\u76d1\u6d4b  \u641e\u7b11\u73a9\u5177  \u7269\u8054\u7f51  \u7269\u8054\u7f51   \u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u8bbe\u8ba1\u4e86\u5f88\u591a\u9879\u76ee  recipe , \u6765\u53c2\u89c2\uff0c\u627e\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u9879\u76ee\uff0c\u751a\u81f3\u5206\u4eab\u4f60\u81ea\u5df1\u7684\u9879\u76ee\uff0c\u6211\u76f8\u4fe1\u4f1a\u4e3a\u4f60\u8d62\u5f97\u5f88\u591a\u7c89\u4e1d\u301c     \u6d47\u704c\u7cfb\u7edf  LED\u706f\u5149\u5899  \u81ea\u52a8\u5582\u98df\u5668           MAKE IT NOW  MAKE IT NOW  MAKE IT NOW        Kickstarter\u76d1\u63a7  \u672a\u63a5\u6765\u7535\u76d1\u63a7  \u76d1\u63a7\u8001\u677f\u7684\u7a81\u73b0           MAKE IT NOW  MAKE IT NOW  MAKE IT NOW      Note   \u4e00\u4e9b\u5e94\u7528\u662f\u4e3aWio Node\u5236\u4f5c\u7684\uff0c\u4f46\u5b83\u4e5f\u9002\u7528\u4e8eWio Link\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Wio_Link/#_4", 
            "text": "\u63cf\u8ff0  \u529f\u80fd      MCU  ESP8266    \u6570\u5b57Port 0  GPIO 14    \u6570\u5b57Port 1  GPIO 12    \u6570\u5b57Port 2  GPIO 13    Analog Port  A3    UART Port  Pin 1   Pin 3    I2C Port  Pin 4   Pin 5    Status Light  \u84dd\u8272LED\u662fWiFi\u72b6\u6001\u6307\u793a\u706f\uff0c\u7ea2\u8272LED\u8868\u793a\u5de5\u4f5c\u72b6\u6001    Configure Button  \u914d\u7f6e\u548c\u7ba1\u7406\u60a8\u7684Wio Link    Battery Holder  JST2.0    Micro USB  \u4e3a\u7535\u8def\u677f\u4f9b\u7535\u6216\u4e0ePC\u901a\u8baf    Reset Button  \u590d\u4f4dMCU", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Wio_Link/#leds", 
            "text": "\u5728FUNCTION\u6309\u94ae\u9644\u8fd1\u67092\u4e2a\u72b6\u6001LED\uff0c\u4e00\u4e2a\u84dd\u8272\u548c\u4e00\u4e2a\u7ea2\u8272\u3002 \u84dd\u8272LED\u6307\u793a\u7f51\u7edc\u72b6\u6001\u3002 \u5b83\u6709\u4ee5\u4e0b\u95ea\u70c1\u6a21\u5f0f\uff1a   \u547c\u5438\u914d\u7f6e\u6a21\u5f0f\u4e0b  \u5feb\u901f\u95ea\u70c1\u4e24\u6b21\uff0c\u7136\u540e\u5173\u95ed1\u79d2\uff0c\u8bf7\u6c42\u8def\u7531\u5668\u7684IP\u5730\u5740  \u5feb\u901f\u95ea\u70c1\u4e00\u6b21\uff0c\u7136\u540e\u5173\u95ed1s\uff0c\u8fde\u63a5\u5230\u670d\u52a1\u5668  \u57281\u79d2\u540e\u5173\u95ed1s\uff0c\u5df2\u7ecf\u8fde\u63a5\u5230\u7f51\u7edc  \u5feb\u901f\u95ea\u70c1\uff08100ms\u4eae100ms\u706d\uff09OTA\u6a21\u5f0f    Note   \u84dd\u8272LED\u662f\u8fde\u5230GPIO2\uff0c\u4e5f\u662fUART1\u7684TX\u5f15\u811a\u3002 \u5f53\u4e0b\u8f7d\u56fa\u4ef6\u65f6\uff0cUART1\u4f1a\u76f4\u63a5\u8f6c\u50a8UART0\u53d1\u9001\u7684\u6570\u636e\u3002 \u6240\u4ee5\u5728\u4e0b\u8f7d\u56fa\u4ef6\u65f6\uff0cBLUE LED\u4f1a\u95ea\u70c1\u3002 \u542f\u52a8\u540e\uff0cGPIO2\u5c06\u88ab\u914d\u7f6e\u4e3aGPIO, \u800c\u4e0d\u662fUART1\u7684\u4e0d\u662fTX\u3002    \u7ea2\u8272LED\u662fGrove\u6a21\u5757\u7684\u7535\u6e90\u6307\u793a\u706f\u3002 \u6240\u6709\u516d\u4e2aGrove\u63a5\u53e3\u7684VCC\u6c47\u805a\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u901a\u8fc7GPIO 15\u8fdb\u884c\u63a7\u5236\u3002\u5f53\u8282\u70b9\u5904\u4e8e\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u65f6\uff0c\u6240\u6709Grove\u6a21\u5757\u90fd\u4f1a\u65ad\u7535\u3002 \u5f53Grove\u6a21\u5757\u901a\u7535\u65f6\uff0c\u7ea2\u8272LED\u5c06\u4eae\u8d77\uff0c\u5f53Grove\u6a21\u5757\u672a\u901a\u7535\u65f6\uff0c\u7ea2\u8272LED\u5c06\u7184\u706d\u3002", 
            "title": "LEDs\u6307\u793a\u706f"
        }, 
        {
            "location": "/Wio_Link/#_5", 
            "text": "Wio Link\u5177\u6709\u5185\u7f6e\u7684LiPo\u7535\u6c60\u5145\u7535\u5668\uff0c\u56e0\u6b64\u5f53USB\u8fde\u63a5\u65f6\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7JST 2.0\u7aef\u53e3\u4e3a3.7v LiPo\u7535\u6c60\u5145\u7535\u3002    Note   \u7535\u6c60\u9700\u8981\u72ec\u7acb\u8d2d\u4e70. \u8bf7\u8bbf\u95ee  Bazzar  \u91c7\u8d2d\u3002", 
            "title": "\u5176\u4ed6\u529f\u80fd"
        }, 
        {
            "location": "/Wio_Link/#_6", 
            "text": "\u8ba9\u6211\u4eec\u7528Wio Link\u6784\u5efa\u4e00\u4e2a\u975e\u5e38\u57fa\u672c\u7684LED\u5e94\u7528\u7a0b\u5e8f\uff0c\u5728\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u60a8\u5c06\u80fd\u591f\u57285\u5206\u949f\u5185\u901a\u8fc7\u667a\u80fd\u624b\u673a\u63a7\u5236LED\u3002 \u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u6709\u4ee5\u4e0b\u7684\u4e1c\u897f\uff1a     Wio Link  Grove - LED  Micro USB Cable           GET ONE NOW  GET ONE NOW  GET ONE NOW      Note   \u8fd8\u9700\u8981\u667a\u80fd\u624b\u673a\uff08Android\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c4.1\u6216\u66f4\u9ad8\uff0ciOS\u7248\u672c7\u6216\u66f4\u9ad8\uff09  Grove - LED \u5305\u62ec Grove cable", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Wio_Link/#1-android-ios", 
            "text": "\u60a8\u9700\u8981\u5b89\u88c5Wio Link\u5e94\u7528\u7a0b\u5e8f\u6765\u7ba1\u7406\u548c\u914d\u7f6e\u60a8\u7684Wio Link\u8bbe\u5907\u3002  \u4e0b\u8f7dAndroid\u6216iOS App\u5e76\u8fdb\u884c\u5b89\u88c5\u3002 \u6216\u8005\u4f60\u53ef\u4ee5\u53bbApple Store\u6216Google Market\u7684App Store\u641c\u7d22\u201cWio Link\u201d\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u3002           Get Android App  Get iOS App      Note   \u786e\u4fdd\u60a8\u7684Android\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u662f4.1\u6216\u66f4\u9ad8\uff0ciOS\u7248\u672c\u662f7\u6216\u66f4\u9ad8\u3002", 
            "title": "\u6b65\u9aa41\uff1a \u5b89\u88c5Android / iOS\u5e94\u7528\u7a0b\u5e8f"
        }, 
        {
            "location": "/Wio_Link/#2", 
            "text": "\u5982\u679c\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528Wio APP\uff0c\u53ef\u80fd\u9700\u8981\u60a8\u540c\u610fGPS\u6388\u6743\uff0c\u7136\u540e\u624d\u80fd\u6ce8\u518c\u3002  \u5982\u679c\u60a8\u5df2\u7ecf\u6709\u5e10\u6237\uff0c\u8bf7\u5728\u767b\u5f55\u4e4b\u524d\u68c0\u67e5\u670d\u52a1\u5668\u7684\u4f4d\u7f6e\u3002    Note   \u8bf7\u6ce8\u610f\u670d\u52a1\u5668\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u8fde\u63a5\u5230Wio Link\u65f6\u670d\u52a1\u5668\u4f4d\u7f6e\u9519\u8bef\u5c06\u5bfc\u81f4\u6545\u969c\u3002\u5982\u679c\u60a8\u5728\u4e2d\u56fd\uff0c\u8bf7\u9009\u62e9\u4e2d\u56fd\u670d\u52a1\u5668\u3002", 
            "title": "\u6b65\u9aa42\uff1a \u521b\u5efa\u60a8\u7684\u5e10\u6237"
        }, 
        {
            "location": "/Wio_Link/#3wio-link-wi-fi-ap", 
            "text": "\u6309\u4f4fCONFIG\u6309\u94ae\uff0c\u76f4\u5230\u84dd\u8272LED\u53d8\u4e3a\u547c\u5438\u6a21\u5f0f\uff08\u5373\u95ea\u70c1\uff0c\u6de1\u5165\u6de1\u51fa\u6548\u679c\uff09\u3002 \u8fd9\u610f\u5473\u7740Wio Link\u5df2\u7ecf\u6210\u529f\u5730\u8f6c\u5230\u914d\u7f6e\u6a21\u5f0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u88abWio App\u68c0\u6d4b\u5230\u3002     \u70b9\u51fb \"Add your first Device\".  \u9009\u62e9 Wio Link  \"Go to Wi-Fi list\" \u5e26\u60a8\u8fdb\u5165\u667a\u80fd\u624b\u673a\u7684Wi-Fi\u8bbe\u7f6e\u754c\u9762\u3002     \u5982\u679c\u60a8\u5df2\u6210\u529f\u5c06\u84dd\u8272LED\u8f6c\u4e3a\u547c\u5438\u6a21\u5f0f\uff0c\u60a8\u5c06\u5728Wi-Fi\u5217\u8868\u4e2d\u627e\u5230Wio Link\uff0c\u5e76\u8fde\u63a5\u5230\u5b83\uff08\u901a\u5e38\u5728Wi-Fi\u5217\u8868\u4e2d\u901a\u5e38\u4e0d\u79f0\u4e3aWio Link\uff0c\u5728\u8be5\u793a\u4f8b\u4e2d\uff0c \u6211\u7684\u662fWio_8B2F12\uff0c\u60a8\u53ef\u4ee5\u5728\u5217\u8868\u4e2d\u627e\u5230\u4e00\u4e2a\u540d\u4e3awio_xxxxxx\u7684\u6587\u4ef6\u3002\uff09  \u8fde\u63a5\u540e\uff0c\u60a8\u5c06\u6536\u5230\u901a\u77e5\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u56de\u5230\u5e94\u7528\u7a0b\u5e8f\u3002  \u4e0b\u4e00\u6b65\u662f\u8fde\u63a5\u5230\u5bb6\u5ead\u6216\u516c\u53f8\u7684Wi-Fi     \u5982\u679c\u60a8\u8981\u8fde\u63a5\u7684Wi-Fi\u6709\u5bc6\u7801\uff0c\u9700\u8981\u8f93\u5165\u5bc6\u7801  \u8003\u8651\u5230\u5c06\u6765\u53ef\u80fd\u9700\u8981\u8fde\u63a5\u8d85\u8fc71\u4e2aWio\u8bbe\u5907\uff0c\u4e00\u4e2a\u7279\u6b8a\u7684\u540d\u79f0\u53ef\u4ee5\u8ba9\u60a8\u8f7b\u677e\u533a\u5206\u5b83\u4eec\u3002", 
            "title": "\u6b65\u9aa43\uff1a\u8fde\u63a5Wio Link Wi-Fi AP"
        }, 
        {
            "location": "/Wio_Link/#4wio-link", 
            "text": "\u70b9\u51fbWio Link\uff0c\u4f60\u5c06\u8fdb\u5165\u4e3b\u754c\u9762\u3002  \u67096\u4e2aGrove\u8fde\u63a5\u5668\uff0c\u9009\u62e9\u5de6\u8fb9\u7684\u7b2c\u4e00\u4e2a\u3002  \u56e0\u4e3aLED\u662f\u8f93\u51fa\u8bbe\u5907\uff0c \u9009\u62e9\u8f93\u51fa\u7c7b\u522b\u3002  \u627e\u5230\u770b\u8d77\u6765\u50cf\u706f\u6ce1\u7684\u56fe\u6807\uff0c\u9009\u62e9\u5b83\u3002  \u7136\u540e\u60a8\u4f1a\u53d1\u73b0\u5e95\u90e8\u77e9\u5f62\u6309\u94ae\u53d8\u4e3a\u7ea2\u8272\uff0c\u201cView API\u201d\u53d8\u4e3a\u201cUpdate Firmware\u201d\uff0c \u9009\u62e9\u201cUpdate Firmware\u201d     \u7531\u4e8e\u60a8\u5728APP\u4e2d\u9009\u62e9\u4e86\u6570\u5b570\u7aef\u53e3\u4e0eLED\u8fde\u63a5\uff0c\u6240\u4ee5\u60a8\u9700\u8981\u7269\u7406\u4e0a\u5c06Grove-LED\u8fde\u63a5\u5230Wio Link\u7684\u6570\u5b570\u7aef\u53e3\u3002", 
            "title": "\u6b65\u9aa44\uff1a\u4f7f\u7528Wio Link\u5b9e\u73b0\u4e92\u8fde\u6a21\u5757\u548c\u66f4\u65b0\u56fa\u4ef6"
        }, 
        {
            "location": "/Wio_Link/#5api", 
            "text": "\u73b0\u5728\u60a8\u5df2\u7ecf\u5c06LED\u8fde\u63a5\u5230Wio Link\uff0c\u70b9\u51fb\u201cView API\u201d\u6765\u68c0\u67e5Wio Link\u7684API  \u5728\u201cTest Request\u201d\u533a\u57df\u4e2d\u8f93\u5165\u201c1\u201d\u6216\u201c0\u201d\uff0c\u7136\u540e\u5355\u51fb\u201cPost\u201d\u6309\u94ae\uff0c\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002", 
            "title": "\u6b65\u9aa45\uff1a\u4f7f\u7528API\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f"
        }, 
        {
            "location": "/Wio_Link/#iftttdobutton", 
            "text": "\u4e0d\u77e5\u9053\u5982\u4f55\u7f16\u7801\uff1f \u4e0d\u7528\u62c5\u5fc3\uff0c\u5728 IFTTT  \u5e2e\u52a9\u4e0b, \u5373\u4f7f\u60a8\u5bf9\u7f16\u7801\u4e00\u65e0\u6240\u77e5\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u6784\u5efa\u4e00\u4e9b\u7b80\u5355\u7684\u9879\u76ee\u3002  IFTTT\u662f\u201cIf That Then That\u201d\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u79cd\u514d\u8d39\u7684\u57fa\u4e8eWeb\u7684\u670d\u52a1\uff0c\u5141\u8bb8\u7528\u6237\u521b\u5efa\u7b80\u5355\u6761\u4ef6\u8bed\u53e5\u94fe\uff0c\u79f0\u4e3a\u201crecipes\u201d\uff0c\u8fd9\u4e9b\u94fe\u63a5\u662f\u57fa\u4e8e\u5176\u4ed6Web\u670d\u52a1\uff08\u5982Gmail\uff0c Facebook\uff0cInstagram\u3002 IFTTT\u5982\u4f55\u4e0eWio Link\u5de5\u4f5c\uff1f \u5982\u4e0b\u56fe\u6240\u793a\uff0cSeeed\u5728wio.seeed.io\u63d0\u4f9b\u4e91\u670d\u52a1\uff0c\u53ef\u4ee5\u4ea4\u6362\u6570\u636e\u5e76\u5411IFTTT\u548cWio Link\u53d1\u9001\u6307\u4ee4\u3002 \u6240\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e9b\u7b80\u5355\u7684recipes\uff0c\u4f60\u53ef\u4ee5\u5728\u65e0\u9700\u7f16\u7801\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u642d\u5efa\u9879\u76ee\u3002   \u5982\u679c\u4f60\u6ca1\u6709IFTTT\u8d26\u53f7, \u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u6765\u6ce8\u518c.  \u5982\u679c\u4f60\u5df2\u7ecf\u6709IFTTT\u8d26\u53f7,\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u4e0eSeeed\u8fde\u63a5\uff0c\u6216\u5728IFTTT\u7f51\u7ad9\u4e0a\u641c\u7d22Seeed\u3002 \u5728\u90a3\u91cc\uff0c\u60a8\u4f1a\u53d1\u73b0Seeed\u76849\u79cdrecipes\u6559\u4f60\u5982\u4f55\u4f7f\u7528IFTTT\u3002  \u4ec0\u4e48\u662fDoButton\uff1f DoButton\u662fIFTTT\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e00\uff0c\u5b83\u4f7f\u60a8\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u81ea\u5df1\u7684\u4e2a\u6027\u5316\u6309\u94ae\uff0c\u975e\u5e38\u9002\u5408\u6784\u5efaIoT\u9879\u76ee\u5e76\u901a\u8fc7\u667a\u80fd\u624b\u673a\u8fdb\u884c\u63a7\u5236\uff0c\u4e0b\u9762\u662f\u4e24\u4e2a\u793a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528IFTTT\u548cDoButton\u6765\u5236\u4f5c\u6709\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u3002", 
            "title": "\u5f00\u59cb\u4f7f\u7528IFTTT\uff06DoButton"
        }, 
        {
            "location": "/Wio_Link/#_7", 
            "text": "IFTTT  DoButton      [ Recipe ] DIY\u81ea\u52a8\u82b1\u56ed\u704c\u6e89  [ Recipe ] \u5f53\u4f60\u4e0d\u5728\u5bb6\u65f6\uff0c\u5982\u4f55\u5582\u517b\u5ba0\u7269    [ Video ] \u5982\u4f55\u4f7f\u7528ITFFF  [ Video ] \u5982\u4f55\u4f7f\u7528DoButton", 
            "title": "\u5e94\u7528:"
        }, 
        {
            "location": "/Wio_Link/#_8", 
            "text": "\u611f\u89c9\u8fd9\u4e9b\u4f8b\u5b50\u592a\u7b80\u5355\u4e86\uff1f \u60f3\u505a\u66f4\u590d\u6742\u7684\u9879\u76ee\uff1f \u4ee5\u4e0b\u662f\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528Wio Link\u7684\u6700\u4f73\u6307\u5357\u3002 \u901a\u8fc7\u8fd9\u4e9b\u6307\u5357\uff0c\u9ad8\u7ea7\u7528\u6237\u80fd\u591f\u4e86\u89e3\u6709\u5173Wio Link\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u90e8\u7f72\u79c1\u6709\u670d\u52a1\u5668\uff0c\u751a\u81f3\u4e3aWio Link\u7f16\u5199\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\u3002   \u6307\u5357\u6db5\u76d6\uff1a   API\u53c2\u8003  \u670d\u52a1\u5668\u90e8\u7f72\u6307\u5357  \u9ad8\u7ea7\u7528\u6237\u6307\u5357  \u5982\u4f55\u4e3aWio Link\u7f16\u5199\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\uff1f", 
            "title": "\u9ad8\u7ea7\u7528\u6237\u6307\u5357"
        }, 
        {
            "location": "/Wio_Link/#_9", 
            "text": "\u5982\u679c\u60a8\u7528\u667a\u80fd\u624b\u673a\u6210\u529f\u63a7\u5236\u4e86Grove\uff0c\u5e76\u5e0c\u671b\u5c1d\u8bd5\u66f4\u56f0\u96be\u800c\u4e0d\u662f\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5b66\u4e60\u672c\u6559\u7a0b\u540e\uff0c\u60a8\u5c06\u80fd\u591f\u6784\u5efa\u4e00\u4e2a\u6e29\u6e7f\u5ea6\u76d1\u6d4b\u5668\uff0c\u5e76\u70b9\u4eaeGrove RGB LED\u706f\u6761\u3002  \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u68c0\u67e5\u60a8\u662f\u5426\u6709\u4ee5\u4e0b\u8bbe\u5907\u3002     RGB Led strip  Grove-Temperature and Humidity Sensor          Get One Now  Get One Now      \u6b65\u9aa41\uff1a\u5c06LED\u6761\u63d2\u5165Wio Link\uff0c\u7136\u540e\u5c06\u76f8\u540c\u7684\u6a21\u5757\u62d6\u81f3\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684Wio Link\u3002\u66f4\u65b0\u56fa\u4ef6\u3002     \u6b65\u9aa42\uff1a\u5c06Grove\u6e29\u5ea6\u548c\u6e7f\u5ea6\u4f20\u611f\u5668\u63d2\u5165Wio Link\uff0c\u7136\u540e\u5c06\u76f8\u540c\u7684\u6a21\u5757\u62d6\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684Wio Link\u4e2d\u3002\u66f4\u65b0\u56fa\u4ef6\u3002     \u6b65\u9aa43\uff1a\u901a\u8fc7\u67e5\u770bAPI\uff0c\u5e76\u67e5\u770b\u60a8\u5bb6\u4e2d\u7684\u6e29\u6e7f\u5ea6\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u7528\u624b\u63e1\u4f4f\u63e1\u6e29\u6e7f\u5ea6\u4f20\u611f\u5668\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u6e29\u5ea6\u53d8\u5316\u3002 \u6e29\u5ea6\u63d0\u9ad8\u4e861\u6444\u6c0f\u5ea6\u3002 \u5c1d\u8bd5\u770b\u770b\u6539\u53d8\u623f\u5b50\u7684\u6e29\u5ea6\u548c\u6e7f\u5ea6\u3002     \u6b65\u9aa44\uff1a\u901a\u8fc7\u6539\u53d8RGB\u503c\u63a7\u5236LED\u6761\u7684\u5149\u7ebf\u3002   \u56e0\u4e3aWio Link App\u8bfb\u53d6\u5341\u516d\u8fdb\u5236RGB\u503c\uff0c\u6240\u4ee5RGB\u503c\u9700\u8981\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u503c\u3002 \u5728\u8fd9\u91cc\u6211\u60f3\u63a8\u8350\u7f51\u7ad9 RGB t0 Hex \u3002 \u53ea\u8981\u8f93\u51653\u4e2aRGB\u5143\u7d20\uff08\u7ea2\uff0c\u7eff\uff0c\u84dd\uff09\u7684RGB\u503c\uff0c\u7f51\u7ad9\u5c31\u4f1a\u5c06RGB\u503c\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u3002 \u6bd4\u5982\u8f93\u5165255\uff0c0\uff0c0    \u7136\u540e\u4f60\u4f1a\u5f97\u5230\u5341\u516d\u8fdb\u5236\u503c\u4e3aFF0000\uff0c\u989c\u8272\u4e3a\u7ea2\u8272\u3002     Note   \u60a8\u8f93\u5165\u7684RGB\u503c\u5e94\u4e3a0\u5230255\u4e4b\u95f4\u7684\u4efb\u4f55\u6570\u5b57\uff08\u5305\u62ec0\u548c255\uff09    \u7136\u540e\u8f93\u5165\u60a8\u8981\u7684Leds\u6570\u91cf\u548c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5341\u516d\u8fdb\u5236\u503c\uff0c\u8fd9\u91cc\u6211\u7684Led Strip\u670930\u4e2aLeds\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u4e8630\u4e2a\u3002   \u60a8\u8fd8\u53ef\u4ee5\u6307\u5b9a\u6761\u7eb9\u7684\u54ea\u4e00\u90e8\u5206\u88ab\u70b9\u4eae\uff0c\u5e76\u7ed9\u5b83\u4e00\u4e2a\u7279\u6b8a\u7684\u989c\u8272\uff0c\u6216\u751a\u81f3\u50cf\u5f69\u8679\u6a21\u5f0f\u4e2d\u7684\u95ea\u70c1\u3002 \u5f88\u591a\u60ca\u4eba\u7684\u529f\u80fd\u6b63\u5728\u7b49\u5f85\u4f60\u7684\u63a2\u7d22\uff01", 
            "title": "\u9ad8\u7ea7\u6559\u7a0b"
        }, 
        {
            "location": "/Wio_Link/#_10", 
            "text": "\u786c\u4ef6   EAGLE Schematic files  EAGLE PCB file  Schematic files(pdf)   \u8f6f\u4ef6   Source Code on Github.   \u5176\u4ed6\u6587\u6863   API Reference  Server Deployment Guide  How to write module driver for Wio Link  iot.seeed.cc  \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Wio_Link/#faq", 
            "text": "\u4ee5\u4e0b\u662f\u6211\u4eec\u4ece\u65b0\u7528\u6237\u90a3\u91cc\u5f97\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u3002 \u5982\u679c\u60a8\u5728\u4f7f\u7528Wio Link\u6216\u5176\u4ed6Wio\u4ea7\u54c1\u65f6\u9047\u5230\u4efb\u4f55\u5176\u4ed6\u95ee\u9898\uff0c\u6b22\u8fce\u6765\u5230\u6709\u8bb8\u591a\u4e13\u4e1a\u7528\u6237\u7684 Community of Wio  \u3002  1. \u7535\u6e90\u548c\u7535\u6c60 - Wio Link\u662f\u5426\u914d\u6709Lipo\u7535\u6c60\uff1f  \u4e0d\uff0c\u6bcf\u4e2aWio Link\u90fd\u914d\u6709\u5fae\u578bUSB\u7535\u7f06\u8fdb\u884c\u5145\u7535\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u4ece\u6211\u4eec\u7684\u6dd8\u5b9d\u8d2d\u4e703.7V\u7684Lipo\u7535\u6c60\u3002 \u4ee5\u4e0b\u662f\u60a8\u7684\u53c2\u8003\u8d44\u6599\uff1a\n- \u6700\u5927\u8f93\u5165\u7535\u538b\uff1a4.2V;\n- \u6700\u5927\u5145\u7535\u7535\u6d41\uff1a500mA\u3002  2.\u7535\u6e90\u548c\u7535\u6c60 - \u6211\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709Wio Link\u7684\u7535\u6e90\u9002\u914d\u5668\u5417\uff1f\u54ea\u4e00\u79cd\uff1f  \u6709\u4e24\u79cd\u65b9\u5f0f\u4e3aWio Link\u4f9b\u7535\uff0cMicro USB\u7535\u7f06\u62163.7V Lipo\u7535\u6c60\u4f9b\u7535\u3002\u5982\u679cMicro USB\u548c\u7535\u6c60\u90fd\u63d2\u5165\u7535\u8def\u677f\uff0cUSB\u7535\u6e90\u5c06\u4e3a\u7535\u6c60\u5145\u7535\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u53ef\u4ee5\u8fde\u63a5Micro USB\u7535\u7f06\u548c5Vdc\u8f93\u51fa\u7684\u5404\u79cd\u7535\u6e90\u9002\u914d\u5668\u3002\u7535\u6c60\u5ea7\u662fJST-2.0\u8fde\u63a5\u5668\u3002  3.\u529f\u8017 - Wio Link\u7684\u529f\u8017\u662f\u591a\u5c11\uff1f  \u5e73\u5747\u529f\u8017\u4e3a70mA\u3002\u4f7f\u7528700mAh\u7684\u7535\u6c60\uff0c\u53ef\u4ee5\u4fdd\u6301\u6d3b\u52a8\u957f\u8fbe10\u5c0f\u65f6\u3002\u6709\u4f4e\u529f\u8017\u7684API\u53ef\u4ee5\u8ba9Wio Link\u4ece\u5de5\u4f5c\u6a21\u5f0f\u66f4\u6539\u4e3a\u4f11\u7720\u6a21\u5f0f\u3002\u5c06\u5e73\u5747\u529f\u8017\u964d\u81f3150uA\u4ee5\u4e0b\u3002  4.Grove\u7535\u7f06 - Groves\u662f\u5426\u5728\u6240\u6709\u5957\u4ef6\u4e2d\u914d\u5907\u4e86\u7535\u7f06\uff1f  \u662f\u7684\uff0c\u6211\u4eec\u6bcf\u4e2aGrove\u6a21\u5757\u90fd\u88c5\u6709\u4e00\u4e2a\u6807\u51c6\u76844\u9488Grove\u7535\u7f06\u3002  5.RESTful API - \u662f\u5426\u9700\u8981\u4e92\u8054\u7f51\u8fde\u63a5\uff0c\u6216\u8005\u53ef\u4ee5\u901a\u8fc7\u672c\u5730\u7f51\u7edc\u8fdb\u884c\u8fde\u63a5\uff1f  \u6211\u4eec\u5c06REST API\u670d\u52a1\u5668\u90e8\u7f72\u5230iot.seeed.cc\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4eceiot.seeed.cc\u8bbf\u95ee\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\u3002\u76ee\u524d\uff0cWio Link\u5fc5\u987b\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5c06\u5f00\u6e90\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u7528\u6237\u4ee5\u975e\u5e38\u7b80\u5355\u7684Docker\u65b9\u5f0f\u90e8\u7f72\u672c\u5730\u670d\u52a1\u5668\u3002\u901a\u8fc7\u90e8\u7f72\u672c\u5730\u670d\u52a1\u5668\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u4f7f\u7528\u7f16\u8bd1\u548c\u6570\u636e\u4ea4\u6362\u670d\u52a1\uff0c\u800c\u4e0d\u7528\u4e0a\u7ebf\u3002  6.\u652f\u6301\u7684\u7f16\u7a0b\u65b9\u6cd5 - \u662f\u5426\u652f\u6301\u5176\u4ed6\u7f16\u7a0b\u65b9\u6cd5\uff0c\u5982Arduino IDE\uff1f  Wio Link\u53ef\u4ee5\u4f7f\u7528Arduino IDE\u8fdb\u884c\u7f16\u7a0b\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u5931\u53bbRESTful API\u7684\u529f\u80fd\u3002  \u5982\u679c\u60a8\u60f3\u4e0eArduino\u6216RPI\u8fdb\u884c\u4e92\u52a8\uff0c\u60a8\u53ef\u4ee5\u5f00\u53d1\u7b2c\u4e09\u65b9\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\uff0c\u53c2\u8003 \u6307\u5357 \u548c \u9a71\u52a8 \u3002  7. \u652f\u6301\u7684\u5e73\u53f0 - \u652f\u6301Windows\u5e73\u53f0\uff1f  \u73b0\u5728\uff0cWio Link\u63d0\u4f9bAndroid\u548ciOS\u4e24\u6b3e\u79fb\u52a8\u5e94\u7528\u3002\u6211\u4eec\u5c06\u6240\u6709\u670d\u52a1\u90fd\u4f5c\u4e3aRESTful API\uff0c\u5982\u679c\u9075\u5faaAPI\u6587\u6863\uff0c\u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u6784\u5efa\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f8b\u5982Mobile Apps\u6216Desktop Apps\u3002\nWio Link\u662f\u4e00\u4e2a\u793e\u533a\u53cb\u597d\u7684\u9879\u76ee\u3002\u5b83\u4e0d\u4f1a\u5c40\u9650\u4e8e\u67d0\u4e2a\u5e73\u53f0\u3002\u6211\u4eec\u771f\u7684\u5e0c\u671b\u4eba\u4eec\u53ef\u4ee5\u548c\u4ed6\u4eec\u4e00\u8d77\u73a9Wio Link\u3002  8. \u53ef\u4ee5\u4f7f\u7528Wio Link\u4e0e\u73b0\u6709\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u5417\uff1f  \u662f. \u9996\u5148\uff0c\u5c06Wio Link\u7684\u4efb\u4f55GPIO\u8fde\u63a5\u5230\u5176\u4ed6\u7cfb\u7edf\uff0c\u5728\u79fb\u52a8\u5e94\u7528\u4e2d\u9009\u62e9\u201cGeneric Digital Input\u201d\u6216\u201cGeneric Digital Output\u201d Grove\u6a21\u5757\uff0c\u7136\u540e\u901a\u8fc7RESTful API\u8c03\u7528\u5411\u73b0\u6709\u7cfb\u7edf\u53d1\u9001/\u8bfb\u53d6\u4fe1\u53f7\u3002\u5176\u6b21\uff0c\u5c06Wio Link\u7684\u6a21\u62df\u7aef\u53e3\u8fde\u63a5\u5230\u5176\u4ed6\u7cfb\u7edf\uff0c\u5728\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u9009\u62e9\u201cGeneric Analog Input\u201d Grove\u6a21\u5757\uff0c\u7136\u540e\u8bfb\u53d6\u6a21\u62df\u6d4b\u91cf\uff0c\u4ee5\u83b7\u5f97\u73b0\u6709\u7cfb\u7edf\u7684\u4e00\u4e9b\u7269\u7406\u91cf\u3002\u7b2c\u4e09\uff0c\u4e3a\u4e86\u4e0e\u73b0\u6709\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u66f4\u7075\u6d3b\uff0c\u60a8\u53ef\u4ee5\u5f00\u53d1\u7b2c\u4e09\u65b9\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\uff0c\u901a\u8fc7I2C\u6216UART\u63a5\u53e3\u5c06\u8bf7\u6c42\u4ece\u4e92\u8054\u7f51\u53d1\u9001\u5230\u73b0\u6709\u7cfb\u7edf\u3002\u6211\u4eec\u6709\u5173\u4e8e\u5982\u4f55\u5f00\u53d1\u7b2c\u4e09\u65b9\u6a21\u5757\u9a71\u52a8\u7a0b\u5e8f\u7684 \u6307\u5bfc \uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u4e3a\u60a8\u7684\u5f00\u53d1\u63d0\u4f9b\u6280\u672f\u652f\u6301\u3002  9. Wio Link\u652f\u6301\u591a\u5c11\u4e2aGroves\uff1f  \u73b0\u5728\u6709150\u591a\u79cd\u5373\u63d2\u5373\u7528\u7684Groves\u6a21\u5757\uff0c\u5176\u4e2dWio Link\u652f\u630136\u4e2a\u3002", 
            "title": "FAQ"
        }, 
        {
            "location": "/Wio_Link/#grove", 
            "text": "\u63cf\u8ff0  \u63a5\u53e3      Grove - Moisture Sensor  \u6a21\u62df    Grove - Light Sensor  \u6a21\u62df    Grove - Temperature Sensor  \u6a21\u62df    Grove - Rotary Angle Sensor  \u6a21\u62df    Grove - Light Sensor(P)  \u6a21\u62df    Grove - Sound Sensor  \u6a21\u62df    Grove - Electricity Sensor  \u6a21\u62df    Grove - Slide Potentiometer  \u6a21\u62df    Grove - 80cm Infrared Proximity Sensor  \u6a21\u62df    Grove - UV Sensor  \u6a21\u62df    Grove - Rotary Angle Sensor(P)  \u6a21\u62df    Grove - Loudness Sensor  \u6a21\u62df    Grove - Luminance Sensor  \u6a21\u62df    Grove - Air quality sensor v1.3  \u6a21\u62df    Grove - Button  \u6570\u5b57    Grove - Switch(P)  \u6570\u5b57    Grove - Collision Sensor  \u6570\u5b57    Grove - Line Finder  \u6570\u5b57    Grove - Water Sensor  \u6570\u5b57    Grove - PIR Motion Sensor  \u6570\u5b57    Grove - Tilt Switch  \u6570\u5b57    Grove - Touch Sensor  \u6570\u5b57    Grove - Magnetic Switch  \u6570\u5b57    Grove - Hall Sensor  \u6570\u5b57    Grove - Flame Sensor  \u6570\u5b57    Grove - Button(P)  \u6570\u5b57    Grove - Electromagnet  \u6570\u5b57    Grove - Water Atomization v1.0  \u6570\u5b57    Grove - Solid State Relay  \u6570\u5b57    Grove - Relay  \u6570\u5b57    Grove - MOSFET  \u6570\u5b57    Grove - 2-Coil Latching Relay  \u6570\u5b57    Grove - Dry-Reed Relay  \u6570\u5b57    Grove - Variable Color LED  \u6570\u5b57    Grove - Purple LED (3mm)  \u6570\u5b57    Grove - LED String Light  \u6570\u5b57    Grove - Red LED  \u6570\u5b57    Grove - Green LED  \u6570\u5b57    Grove - White LED  \u6570\u5b57    Grove - Blue LED  \u6570\u5b57    Grove - Multi Color Flash LED (5mm)  \u6570\u5b57    Grove - Vibration Motor  \u6570\u5b57    Grove - EL Driver  \u6570\u5b57    Grove - Buzzer  \u6570\u5b57    Grove - Speaker  \u6570\u5b57    Grove - 3-Axis Digital Compass  I2C    Grove - 3-Axis Digital Accelerometer(\u00b11.5g)  I2C    Grove - 3-Axis Digital Gyro  I2C    Grove - Barometer Sensor (BMP180)  I2C    Grove - Gesture  I2C    Grove - Multichannel Gas Sensor  I2C    Grove - I2C ADC  I2C    Grove - OLED Display 1.12''  I2C    Grove - OLED Display 0.96''  I2C    Grove - I2C Motor Driver  I2C    Grove - I2C FM Receiver  I2C    Grove - Barometer(BMP280)  I2C    Grove - Temp Humi Barometer Sensor(BME280)  I2C    Grove - Ultrasonic Ranger  \u6570\u5b57    Grove - Infrared Receiver  \u6570\u5b57    Grove - Temperature Humidity Sensor Pro  \u6570\u5b57    Grove - Infrared Emitter  \u6570\u5b57    Grove - Infrared Reflective Sensor  Others    Grove - Digital Light Sensor  I2C    Grove - IR Distance Interrupter  \u6570\u5b57    Grove - Recorder  \u6570\u5b57    Grove - LED Bar v2.0  UART    Grove - 4-Digit Display  UART    Grove - Servo  \u6570\u5b57    Grove - CO2 Sensor  UART", 
            "title": "Grove \u6a21\u5757\u652f\u6301\u5217\u8868"
        }, 
        {
            "location": "/LinkIt/", 
            "text": "\u60a8\u9700\u8981\u4e86\u89e3\u7684LinkIt\u7cfb\u5217\u7684\u7b2c\u4e00\u4e2a\u4ea7\u54c1\u662fLi\u200b\u200bnkIt One\uff0c\u56e0\u4e3a\u5b83\u5f88\u597d\u5730\u5b9a\u4e49\u4e86LinkIt\u5e73\u53f0\u6b63\u5728\u505a\u4ec0\u4e48\u3002 LinkIt\u5b83\u5fc5\u987b\u662f\u5730\u7403\u4e0a\u529f\u80fd\u6700\u4e30\u5bcc\u7684\u7535\u8def\u677f\u4e4b\u4e00\u3002\u5b83\u5728\u5355\u4e2a\u5f00\u53d1\u677f\u4e0a\u5305\u62ecARM7 EJ-S\u2122\uff0cGSM\uff0cGPRS\uff0cWi-Fi\uff0c\u84dd\u7259BR / EDR / BLE\uff0cGPS\uff0c\u97f3\u9891\u7f16\u89e3\u7801\u5668\u548cSD\u5361\u8fde\u63a5\u5668\u3002\u73b0\u5728\u4f60\u53ef\u80fd\u4f1a\u660e\u767d\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3aLinkIt One\u3002\u9664\u4e86\u6240\u6709\u8fd9\u4e9b\u529f\u80fd\uff0c\u5b83\u8fd8\u662f\u4e00\u4e2a\u5177\u6709\u4e30\u5bcc\u517c\u5bb9\u6027\u548c\u5f3a\u5927\u53ef\u6269\u5c55\u6027\u7684\u677f\uff0c\u901a\u8fc7\u4f7f\u7528LinkIt ONE\u4e0eMediaTek LinkIt SDK\uff08\u5bf9\u4e8eArduino\uff09\uff0c\u60a8\u5c06\u80fd\u591f\u8f7b\u677e\u5730\u5c06\u60a8\u7684\u60f3\u6cd5\u8f6c\u5316\u4e3a\u5b9e\u9645\u539f\u578b\uff0c\u5e76\u4f7f\u5176\u6210\u4e3a\u73b0\u5b9eSeeed\u4ea7\u54c1\u5316\u548c\u654f\u6377\u5236\u9020\u670d\u52a1\u3002\n\n\n\u5728LinkIt ONE\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u5e03\u4e86LinkIt Smart 7688\u548cLinkIt Smart 7688 Duo\uff0c\u5b83\u4eec\u90fd\u4e13\u4e3a\u667a\u80fd\u5bb6\u5c45\u548c\u529e\u516c\u5ba4\u7684Rich Application IoT\u8bbe\u5907\u7684\u539f\u578b\u8bbe\u8ba1\u800c\u8bbe\u8ba1\u3002\u4e3a\u4e86\u4f7f\u539f\u578b\u66f4\u52a0\u65b9\u4fbf\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u6211\u4eec\u8fd8\u53d1\u5e03\u4e86LinkIt Smart 7688\u548cLinkIt Smart 7688 Duo\u7684breakout\u677f\u5b50\uff0c\u4f8b\u5982LinkIt Smart 7688 Duo\u7684Arduino breakout board\u548cLinkIt Smart 7688 V2.0\u7684breakout board\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u677f\u5361\u52a0\u5165\u5230LinkIt\u7cfb\u5217\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728New Seeed Wiki\u4e2d\u627e\u5230\u6709\u5173\u5982\u4f55\u5f00\u59cb\u4f7f\u7528\u8fd9\u4e9b\u4e3b\u677f\u7684\u6240\u6709\u6559\u7a0b\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684LinkIt Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nArduino_Breakout_for_LinkIt_Smart_7688_Duo\n\n\nBreakout_for_LinkIt_Smart_7688_v2.0\n\n\nLinkIt_ONE\n\n\nLinkIt_Smart_7688\n\n\nLinkIt_Smart_7688_Duo", 
            "title": "LinkIt"
        }, 
        {
            "location": "/LinkIt/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684LinkIt Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Arduino_Breakout_for_LinkIt_Smart_7688_Duo  Breakout_for_LinkIt_Smart_7688_v2.0  LinkIt_ONE  LinkIt_Smart_7688  LinkIt_Smart_7688_Duo", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/LinkIt_Smart_7688/", 
            "text": "LinkIt Smart 7688 (\u4e00\u4e2a\u7d27\u51d1\u578b\u63a7\u5236\u5668\u677f) \u662f\u57fa\u4e8e MT7688 (\n\u82af\u7247\n)\uff0c \u5b83\u8fd0\u884c Linux \u7684 Open Wrt \u7cfb\u7edf\u3002\u8be5\u4e3b\u677f\u4e13\u4e3a\u7528\u4e8e\u667a\u80fd\u5bb6\u5c45\u7684 Rich Application IoT devices \u7684\u539f\u578b\u800c\u8bbe\u8ba1\u3002\u8be5\u677f\u63d0\u4f9b\u8db3\u591f\u7684\u5185\u5b58\uff0c\u80fd\u5b9e\u73b0\u5f3a\u5927\u7684\u89c6\u9891\u5904\u7406\u529f\u80fd\u3002 \u8be5\u5e73\u53f0\u8fd8\u63d0\u4f9b\u4e86\u80fd\u5728 Python, Node.js \u548c C \u7f16\u7a0b\u8bed\u8a00\u4e2d\u521b\u5efa\u8bbe\u5907\u5e94\u7528\u7a0b\u5e8f\u7684\u9009\u9879\u3002\n\u8be5\u677f\u53ea\u662f MediaTek LinkIt Smart 7688 \u5e73\u53f0\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e2a\u5e73\u53f0\u8fd8\u5305\u62ec\u5176\u4ed6\u5f00\u53d1\u677f\u3002\n\n\n\n\nNote\n\n\n\u672c\u9875\u4ec5\u5f15\u5bfc\u60a8\u5f00\u59cb\u4f7f\u7528\u6b64\u5f00\u53d1\u677f\u3002 \u6709\u5173\u5b8c\u6574\u7684\u6307\u5357\uff0c\u8bf7\u53c2\u9605 \n\u8d44\u6e90\u4e0b\u8f7d\n.\n\n\n\n\n  \n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5355\u8f93\u5165/\u8f93\u51fa Wi-Fi 802.11 b/g/n\u3002\n\n\n\u652f\u6301 GPIO, I\n2\nC, I\n2\nS, SPI, UART, PWM \u548c Ethernet \u5f15\u811a\u7aef\u53e3\u3002\n\n\n580 MHz MIPS CPU\u3002\n\n\n32MB \u95ea\u5b58\u548c 128MB DDR2 \u5185\u5b58\u3002\n\n\n\u4e30\u5bcc\u7684\u5916\u8bbe\u8fde\u63a5\u9009\u9879\u3002\n\n\n\u652f\u6301\u989d\u5916 SD \u5361\u50a8\u5b58\u3002\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u7528\u4e8e\u667a\u80fd\u5bb6\u5c45\u7684 Rich application IoT Devices\n\n\n\u673a\u5668\u4eba\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n \u7279\u5f81\n\n\n\n\u89c4\u683c\n\n\n\n\n\n MPU \n\n\n \u82af\u7247\u7ec4 \n\n\n MT7688AN\n\n\n\n\n\n \u6838\u5fc3 \n\n\n MIPS24KEc\n\n\n\n\n\n \u4e3b\u9891\n\n\n 580MHz\n\n\n\n\n\n \u5de5\u4f5c\u7535\u538b \n\n\n 3.3V\n\n\n\n\n\n PCB Size \n\n\n \u5c3a\u5bf8 \n\n\n 55.7 x 26 mm\n\n\n\n\n\n Memory   \n\n\n Flash \n\n\n 32MB\n\n\n\n\n\n  RAM\n\n\n 128MB DDR2\n\n\n\n\n\n Power Source  \n\n\n USB \u4f9b\u7535 \n\n\n 5V (USB micro-B)\n\n\n\n\n\n  VCC \u4f9b\u7535\n\n\n 3.3V (Pin Breakout)\n\n\n\n\n\n GPIO  \n\n\n \u5f15\u811a\u6570 \n\n\n 22 (MT7688AN)\n\n\n\n\n\n  \u7535\u538b \n\n\n 3.3V\n\n\n\n\n\n PWM  \n\n\n \u5f15\u811a\u6570\n\n\n 4 (MT7688AN)\n\n\n\n\n\n  \u7535\u538b \n\n\n 3.3V\n\n\n\n\n\n  \u6700\u5927\u5206\u8fa8\u7387 \n\n\n 7 \u4f4d (\u53ef\u81ea\u5b9a\u4e49)\n\n\n\n\n\n\u6700\u5927\u9891\u7387@\u5206\u8fa8\u7387 \n\n\n\n\n100kHz@1-bit,\n50kHz@2-bit,\n25kHz@3-bit,\n12.5kHz@4-bit,\n6.25kHz@5-bit,\n3.125kHz@6-bit,\n1.5625kHz@7-bit (Standard mode)\n\n\n\n\n\n\n\n\n40MHz@1-bit,\n20MHz@2-bit,\n10MHz@3-bit,\n5MHz@4-bit,\n2.5MHz@5-bit,\n1.25Mhz@6-bit,\n625kHz@7-bit\n(Fast mode)\n\n\n\n\n\n\n External Interrupts \n\n\n \u5f15\u811a\u6570 \n\n\n 22 (MT7688AN)\n\n\n\n\n\n SPI \n\n\n \u6570\u91cf \n\n\n 1 (MT7688AN)\n\n\n\n\n\n  \u5f15\u811a\u6570 \n\n\n P22, P23, P24 (Shared with on-board flash), P25\n\n\n\n\n\n  \u6700\u5927\u9891\u7387 \n\n\n 25 MHz\n\n\n\n\n\n SPI Slave \n\n\n \u6570\u91cf \n\n\n 1 (MT7688AN)\n\n\n\n\n\n  \u5f15\u811a\u6570 \n\n\n P28, P29, P30, P31\n\n\n\n\n\n  \u6700\u5927\u9891\u7387 \n\n\n 25 MHz\n\n\n\n\n\n I\n2\nS \n\n\n \u6570\u91cf \n\n\n 1 (MT7688AN)\n\n\n\n\n\n  \u5f15\u811a\u6570 \n\n\n P10, P11, P12, P13\n\n\n\n\n\n I\n2\nC \n\n\n \u6570\u91cf \n\n\n 1\n\n\n\n\n\n  \u5f15\u811a\u6570 \n\n\n P20, P21\n\n\n\n\n\n  \u901f\u5ea6 \n\n\n 120K/400K\n\n\n\n\n\n UART Lite \n\n\n \u6570\u91cf \n\n\n 3 (MT7688AN)\n\n\n\n\n\n  \u5f15\u811a\u6570 \n\n\n P8, P9, P16, P17, P18, P19\n\n\n\n\n\n  \u6700\u5927\u901f\u5ea6 \n\n\n 0.5Mbps\n\n\n\n\n\n USB Host \n\n\n \u6570\u91cf \n\n\n 1 (MT7688AN)\n\n\n\n\n\n  \u5f15\u811a\u6570 \n\n\n P6, P7\n\n\n\n\n\n  \u6570\u91cf \n\n\n Micro-AB\n\n\n\n\n\n ICommunication \n\n\n Wi-Fi \n\n\n 1T1R 802.11 b/g/n (2.4G)\n\n\n\n\n\n  Ethernet \n\n\n 1-port 10/100 FE PHY\n\n\n\n\n\n \u5f15\u811a\u6570 \n\n\n P2, P3, P4, P5\n\n\n\n\n\n User Storage \n\n\n SD Card \n\n\n Micro SD\nSDXC\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\u96f6\u4ef6\u540d   \n\n\n \u6570\u91cf\n\n\n\n\n\n LinkIt\nTM\n Smart 7688  \n\n\n 1PC\n\n\n\n\n\n \u4f7f\u7528\u624b\u518c \n\n\n 1PC\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u8fde\u63a5\u5230\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\n\n\n\n\nNote\n\n\n\u624b\u518c\u4e2d\u4ecb\u7ecd\u4e86\u4e24\u79cd\u65b9\u6cd5\u3002 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u5c55\u793a\u4e86\u96be\u5ea6\u66f4\u9ad8\u7684\u65b9\u5f0f\uff08\u4f7f\u7528 USB to Serial \u9002\u914d\u5668\uff09\u3002 \u4f46\u662f\uff0c\u4ece\u957f\u8fdc\u6765\u770b\u4f60\u4f1a\u53d7\u76ca\u532a\u6d45\u3002\n\n\n\n\n\u9700\u8981\u7684\u7d20\u6750\n\n\n\n\nLinkIt Smart 7688 \u00d7 1\n\n\nUSB cable (type A to micro type-B) \u00d7 2\n\n\nUSB to Serial adapter\u00d7 1\n\n\nJumper wires \u00d7 3\n\n\n\n\n\u5728 Windows \u7cfb\u7edf\u4e0a\n\n\n1.\n \u5b89\u88c5 \nPuTTy\n. PuTTY \u63d0\u4f9b\u4f7f\u7528 SSH ( Secure Socket Shell ) \u7684\u7cfb\u7edf\u63a7\u5236\u53f0\u73af\u5883\u6765\u8bbf\u95ee\u5f00\u53d1\u677f\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\n\n\n2.\n \u5b89\u88c5 \nBonjour\n \u6253\u5370\u670d\u52a1 (\u53ef\u7528\u4e8e Windows 7, Windows 8, Windows 10).\n\n\n3.\n \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f \u5982\u679c\u60a8\u4f7f\u7528\u57fa\u4e8e FTDI \u82af\u7247\u7684 USB \u7ebf\u7f06\uff0c\u8bf7\u4ece \n\u8fd9\u91cc\n \u4e0b\u8f7d\u5e76\u5b89\u88c5\u5176\u9a71\u52a8\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u9047\u5230\u6709\u5173\u6700\u65b0\u9a71\u52a8\u7a0b\u5e8f\u7684\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u5b89\u88c5 \n\u4ee5\u5f80\u7248\u672c\n\u3002\n\n\n4.\n \u63a5\u4e0b\u6765\uff0c\u60a8\u9700\u8981\u5c06 Serial-to-USB \u7ebf\u7f06\u8fde\u63a5\u5230 LinkIt Smart 7688 \u7684 UART \u5f15\u811a\uff0c\u5982\u4e0b\u8868\u6240\u793a :\n\n\n\n\n\n\n\n\nUSB \u9002\u914d\u5668\u4e0a\u7684\u5f15\u811a\n\n\nLinkIt Smart 7688 \u4e0a\u5bf9\u5e94\u7684\u5f15\u811a\n\n\n\n\n\n\n\n\n\n\nPin RX\n\n\nPin 8\n\n\n\n\n\n\nPin TX\n\n\nPin 9\n\n\n\n\n\n\nPin GND\n\n\nPin GND\n\n\n\n\n\n\n\n\n\n\n5.\n \u4e32\u53e3\u8fde\u63a5\u597d USB \u7ebf\u7f06\u540e\uff0c\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u5e76\u6ce8\u610f COM \u7aef\u53e3\u53f7\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u8fd9\u4e2a\u6570\u5b57\u4f1a\u56e0\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u800c\u5f02\u3002\n\n\n\n\n6.\n \u542f\u52a8 PuTTY \u7ec8\u7aef\uff0c\u8f93\u5165\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u4e2d\u627e\u5230\u7684 USB \u8bbe\u5907\u7684 COM \u7aef\u53e3\u53f7\uff0c\u5355\u51fb \nSerial\n \u5355\u9009\u6309\u94ae\uff0c\u5728 \nSpeed\n \u6846\u4e2d\u952e\u5165 57600\uff0c\u5355\u51fb \nOpen\n\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n7.\n \u73b0\u5728\uff0c\u60a8\u5c06\u4f1a\u770b\u5230\u5728 Linux \u63a7\u5236\u53f0\u4e2d\u6253\u5370\u6587\u672c\u3002\n\n\n\u5728 Mac \u7cfb\u7edf\u4e0a\n\n\n1.\n \u5982\u679c\u9700\u8981\uff0c\u8bf7\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u8bf7\u67e5\u9605\u7ebf\u7f06\u5236\u9020\u5546\u7684\u7f51\u7ad9\u4e86\u89e3 Mac \u4e0a\u7684\u9a71\u52a8\u7a0b\u5e8f\u8981\u6c42\u548c\u5b89\u88c5\u8bf4\u660e\u3002\n\n\n2.\n \u5c06\u7ebf\u7f06\u63d2\u5165 PC / \u7b14\u8bb0\u672c\u7535\u8111\uff0c\u5e76\u5c06\u7ebf\u7f06\u8fde\u63a5\u5230 LinkIt Smart 7688\u3002\n\n\n3.\n \u6253\u5f00\u7ec8\u7aef\u4f1a\u8bdd\u3002\n\n\n4.\n \u5728\u7ec8\u7aef\u4e2d\u952e\u5165 \nls /dev/cu*\n\u3002 \u60a8\u4f1a\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3c\u4e8e cu.usbserial-XXXXXXXX \u7684\u4e1c\u897f\uff0c\u5176\u4e2d XXXXXXXX \u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u4f8b\u5982 :\n\n\n$ls /dev/cu*\n\n/dev/cu.Bluetooth-Incoming-Port\n\n/dev/cu.Bluetooth-Modem\n\n/dev/cu.pablop-WirelessiAP\n\n/dev/cu.usbserial-A6YMCQBR\n\n\n\n\n5.\n \u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a 57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600\u3002 \u4f8b\u5982 :\n\n$screen /dev/cu.usbserial-XXXXXXXX 57600\n\n\n\n6.\n \u73b0\u5728\u60a8\u8981\u8fde\u63a5\u5230\u7cfb\u7edf\u63a7\u5236\u53f0\u3002\u5728\u7ec8\u7aef\u4e2d\u6309 ENTER \u952e\u663e\u793a\u63d0\u793a\u7b26\u3002\u60a8\u5c06\u6ce8\u610f\u5230\uff0c\u63d0\u793a\u7b26\u4e0e\u60a8\u7684 OS X \u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f\u7684\u63d0\u793a\u7b26\u4e0d\u540c\uff0c\u5b83\u662f LinkIt Smart 7688 \u63d0\u793a\u7b26\uff0c\u50cf\u4e0b\u9762\u8fd9\u6837 :\n\n  root@myLinkIt:/#\n\n\n\n7.\n \u60a8\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a7\u5236\u53f0\u66f4\u6539 LinkIt Smart 7688 \u7cfb\u7edf\u3002\n\n\n\u5728 Linux \u7cfb\u7edf\u4e0a\n\n\n1.\n \u5982\u679c\u9700\u8981\uff0c\u8bf7\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u8bf7\u67e5\u770b\u7ebf\u7f06\u5236\u9020\u5546\u7684\u7f51\u7ad9\u4e86\u89e3 Linux \u4e0a\u7684\u9a71\u52a8\u7a0b\u5e8f\u8981\u6c42\u548c\u5b89\u88c5\u8bf4\u660e\u3002\n\n\n2.\n \u63d2\u5165\u7ebf\u7f06\u5e76\u8fde\u63a5\u5230 LinkIt Smart 7688\u3002\n\n\n3.\n \u6253\u5f00\u7ec8\u7aef\u4f1a\u8bdd\u3002\n\n\n4.\n \u5728\u7ec8\u7aef\u4e2d\u952e\u5165 \nls /dev/ttyUSB*\n \u3002\u60a8\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3c\u4e8e cu.usbserial-XXXXXXXX \u7684\u4e1c\u897f\uff0c\u5176\u4e2d XXXXXXXX \u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u4f8b\u5982 :\n\n$ls /dev/ttyUSB*\n/dev/ttyUSB0\n\n\n\n5.\n \u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a 57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a 57600\u3002 \u4f8b\u5982 :\n\n$sudo screen /dev/ttyUSB0 57600\n\n\n\n6.**\u73b0\u5728\u60a8\u5e94\u8be5\u8fde\u63a5\u5230\u7cfb\u7edf\u63a7\u5236\u53f0\u3002\u5728\u7ec8\u7aef\u4e2d\u6309 ENTER \u952e\u663e\u793a\u63d0\u793a\u7b26\u3002 \u60a8\u5c06\u6ce8\u610f\u5230\uff0c\u63d0\u793a\u7b26\u5df2\u6210\u4e3a\u4e0d\u540c\u7684\u5e38\u89c4\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u662f LinkIt Smart 7688 \u63d0\u793a\u7b26\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9 :\n\n  root@myLinkIt:/#\n\n\n**7.\n \u60a8\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a7\u5236\u53f0\u66f4\u6539 LinkIt Smart 7688 \u7cfb\u7edf\u3002\n\n\n\u8fd0\u884c Blink \u793a\u4f8b\n\n\n\u9700\u8981\u7684\u7d20\u6750\n\n\n\n\nLinkIt Smart 7688 x 1\n\n\nUSB cable (type A to micro type-B) x 1\n\n\nUSB to Serial adapter x 1\n\n\nJumper wires x 3\n\n\n\n\n\u8fd0\u884c Blink\n\n\n1.\n \u4f7f\u7528 micro-USB \u7535\u7f06\u6253\u5f00\u7535\u8def\u677f(\u4ec5\u8fde\u63a5 USB \u7535\u6e90\u63a5\u53e3\uff0c\u800c\u4e0d\u662f USB \u4e3b\u673a\u63a5\u53e3)\u3002\n\n\n\n2.\n \u542f\u52a8 PuTTy \u5e76\u4f7f\u7528 USB \u4f7f\u4e32\u884c\u9002\u914d\u5668\u8fde\u63a5\u5230\u7cfb\u7edf\uff0c\u5982\u524d\u51e0\u8282\u6240\u793a\u3002\n\n\n3.\n \u8f93\u5165 \npython /IoT/examples/blink-gpio44.py\n \u7136\u540e\u6309 \nEnter\n \u6765\u8fd0\u884c Blink \u793a\u4f8b\u3002\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5728\u7b2c\u4e00\u4e2a\u5355\u8bcd \npython\n \u4e4b\u540e\u6709 1 \u4e2a\u7a7a\u683c\uff0c\u5426\u5219\u5c06\u627e\u4e0d\u5230\u5230\u8be5\u793a\u4f8b\u3002\n\n\n\n\n4.\n \u5927\u7ea6 2 \u79d2\u540e\uff0c\u60a8\u4f1a\u770b\u5230 Wi-Fi LED \u7a33\u5b9a\u5730\u95ea\u70c1\u3002\n\n\n5.\n \u5728\u7cfb\u7edf\u63a7\u5236\u53f0\u4e2d\u952e\u5165 \nCTRL + C\n \u5c06\u7ec8\u6b62\u8be5\u793a\u4f8b\u3002\n\n\n\u8fde\u63a5\u5230\u4e92\u8054\u7f51(\u5207\u6362\u5230\u7ad9\u6a21\u5f0f\uff09\n\n\n\u6709\u4e24\u79cd Wi-Fi \u6a21\u5f0f : AP \u6a21\u5f0f\u548c\u7ad9\u6a21\u5f0f\u3002\u8bf7\u53c2\u9605 \n\u8fd9\u91cc\n \u4e86\u89e3\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u3002\n\n\n1.\n \u901a\u8fc7 micro-USB \u7ebf\u7f06\u4e3a\u4e3b\u677f\u4e0a\u7535\u3002\n\n\n2.\n \u6253\u5f00\u8ba1\u7b97\u673a\u4e0a\u7684 Wi-Fi \u8fde\u63a5\u5b9e\u7528\u7a0b\u5e8f\uff0c\u5e76\u8fde\u63a5\u5230\u540d\u4e3a LinkIt_Smart_7688_XXXXXX \u7684\u63a5\u5165\u70b9\u3002XXXXXX \u662f\u4e00\u79cd\u786c\u4ef6\u6807\u8bc6\u7b26\uff0c\u4e0d\u540c\u7684\u5f00\u53d1\u677f\u53ef\u80fd\u4f1a\u6709\u6240\u5dee\u5f02\u3002\n\n\n\n\n3.\n \u901a\u8fc7 mylinkit.local/ \u6216 192.168.100.1 \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8bbe\u7f6e root \u7684\u5bc6\u7801\u5e76\u767b\u5f55\u3002\u5355\u51fb\u53f3\u4e0a\u89d2\u7684 \nNetwork\n\u3002\n\n\n\n\n4.\n \u9009\u62e9 \nStation mode\n \uff0c\u7136\u540e\u5355\u51fb\u53f3\u4fa7\u7684 \nRefresh\n \u6216\u5411\u4e0b\u6ed1\u52a8\u4ee5\u67e5\u627e\u8981\u8fde\u63a5\u7684 AP\u3002\u9009\u62e9 AP \u540e\uff0c\u5982\u679c\u6709\u9700\u8981\u8bf7\u8f93\u5165\u5bc6\u7801\u3002\u5355\u51fb \nConfigure \n Restart\n \u5b8c\u6210\uff0c\u5982\u4e0b\u6240\u793a\u3002\u7136\u540e\u7b49\u5f85\u7ea6 30 \u79d2\u949f\u6765\u5207\u6362\u6a21\u5f0f\u3002\n\n\n\n\n5.\n \u542f\u52a8 PuTTy \u5e76\u901a\u8fc7 USB \u628a\u7cfb\u7edf\u8fde\u63a5\u5230\u4e32\u884c\u9002\u914d\u5668\uff0c\u5982\u4e0a\u4e00\u8282\u6240\u793a\u3002\n\n\n6.\n \u8f93\u5165 ifconfig \u7136\u540e\u627e\u5230 inet addr \u7684 IP \u5730\u5740\uff0c\u5982\u4e0b\u6240\u793a :\n\n\n\n\n\n\nNote\n\n\n\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u540e\u4ecd\u5c06\u8fdb\u5165\u7ad9\u6a21\u5f0f\u3002 \u6309 Wi-Fi \u6309\u94ae\u81f3\u5c11 5 \u79d2\u949f\u53ef\u5207\u6362\u56de AP \u6a21\u5f0f\u3002\u6ce8\u610f : \u9700\u8981\u4f7f\u7528 reboot \u547d\u4ee4\u91cd\u542f\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\u3002\n\n\n\n\n7.\n \u5728\u6d4f\u89c8\u5668\u7684\u65b0 Tab \u4e2d\u952e\u5165 IP\uff0c\u60a8\u53ef\u4ee5\u767b\u5f55\u5230 Web \u7528\u6237\u754c\u9762\u914d\u7f6e\u7cfb\u7edf\u3002\n\n\n8.\n \u73b0\u5728\u4e3b\u673a\u548c LinkIt Smart 7688 \u90fd\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002 \u5728\u63a7\u5236\u53f0\u4e2d\u952e\u5165 \nping \nwww.mediatek.com\n\uff0c\u60a8\u5c06\u770b\u5230\uff1a\n\n\n\n9.\n \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e92\u8054\u7f51\u5728\u5f00\u53d1\u677f\u4e0a\u914d\u7f6e\u7cfb\u7edf\u3002\n\n\n\u6f14\u793a: \u4e00\u4e2a Hello world \u7684\u793a\u4f8b\n\n\n\n\n\n\nNote\n\n\n\u4e3a\u4e86\u907f\u514d\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4e2d\u7684\u5185\u5b58\u4e0d\u8db3\uff0c\u60a8\u5e94\u8be5\u5728\u66f4\u5f3a\u5927\u7684\u4e3b\u673a\u73af\u5883\u4e2d\u8bbe\u7f6e\u672c\u673a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u73af\u5883\uff0c\u4ece\u800c\u4f7f\u60a8\u80fd\u591f\u4ea4\u53c9\u7f16\u8bd1 LinkIt Smart 7688 \u76ee\u6807\u7684\u53ef\u6267\u884c\u683c\u5f0f\u3002 \u4e0b\u8868\u663e\u793a\u4e86 LinkIt Smart 7688 \u7f16\u7a0b\u8bed\u8a00\u548c\u4e3b\u673a\u4e0a\u76f8\u5173\u5f00\u53d1\u73af\u5883\u7684\u6982\u8ff0\u3002\n\n\n\n\n\n\n\n\n\n\nProgramming language\n\n\nTools and libraries\n\n\nApplications\n\n\nHost platforms supported\n\n\n\n\n\n\n\n\n\n\nC/C++\n\n\nCross compilation toolchain\n\n\nSystem programming\n\n\nOS X Linux\n\n\n\n\n\n\nPython\n\n\nPython runtime on LinkIt Smart 7688\n\n\nPrototyping Network Arduino bridge library\n\n\nOS X Linux Windows\n\n\n\n\n\n\nNode.js\n\n\nNode.js runtime on LinkIt Smart 7688\n\n\nPrototyping Network\n\n\nOS X Linux  Windows\n\n\n\n\n\n\n\n\nHello world \u793a\u4f8b\u5728 Python \u6f14\u793a\n\n\n1.\n \u4f7f\u7528 FileZilla \u5e76\u53c2\u8003\u8fd9\u4e2a \n\u6559\u7a0b\n\uff0c\u670d\u52a1\u5668 IP ( \u66ff\u6362 \n\u4e3b\u673a\u540d\n ) \u5730\u5740\u662f\u4ee5\u524d \nSwitch to Station mode\n \u90e8\u5206\u4e2d\u7684\u7684 inet addr\uff0c\u7528\u6237\u540d\u662f root\uff0c\u5bc6\u7801\u662f\u60a8\u5728\u8be5\u90e8\u5206\u4e2d\u8bbe\u7f6e\u7684\u5bc6\u7801\u3002\n\n\n2.\n \u6253\u5f00\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\uff0c\u590d\u5236\u5e76\u7c98\u8d34\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\u5e76\u4fdd\u5b58\u4e3a \nhelloworld.py\n\u3002\n\nprint \nHello World!\n\n\n\n\n3.\n Copy the file \nhelloworld.py\n into system on target development environment (LinkIt Smart 7688) with FileZilla, place it under the folder \nroot\n.\n\n\n4.\n \u542f\u52a8 PuTTy \u5e76\u4f7f\u7528 USB \u8fde\u63a5\u7cfb\u7edf\u5230\u4e32\u884c\u9002\u914d\u5668\u3002\n\n\n5.\n \u5c06\u5de5\u4f5c\u76ee\u5f55\u8bbe\u7f6e\u4e3a \n/root\n \u5e76\u8f93\u5165 \npython helloworld.py\n \u6765\u6267\u884c\u3002\n\n\n6.\n \u73b0\u5728\u60a8\u5c06\u4f1a\u770b\u5230 \nHello World!\n \u6253\u5370\u5728\u63a7\u5236\u53f0\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nLinkIt_Smart_7688\n\n\n[PCB\u56fePDF]\n \nLinkIt_Smart_7688 PCB\n\n\n[\u539f\u7406\u56fePDF]\n \nLinkIt_Smart_7688 Schematic\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nManual\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nOpenWrt\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nMediaTek LinkIt? Smart 7688 Resources:\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nFirmware_upgrade_Instruction\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nCertificates", 
            "title": "LinkIt Smart 7688"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_1", 
            "text": "\u5355\u8f93\u5165/\u8f93\u51fa Wi-Fi 802.11 b/g/n\u3002  \u652f\u6301 GPIO, I 2 C, I 2 S, SPI, UART, PWM \u548c Ethernet \u5f15\u811a\u7aef\u53e3\u3002  580 MHz MIPS CPU\u3002  32MB \u95ea\u5b58\u548c 128MB DDR2 \u5185\u5b58\u3002  \u4e30\u5bcc\u7684\u5916\u8bbe\u8fde\u63a5\u9009\u9879\u3002  \u652f\u6301\u989d\u5916 SD \u5361\u50a8\u5b58\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_2", 
            "text": "\u7528\u4e8e\u667a\u80fd\u5bb6\u5c45\u7684 Rich application IoT Devices  \u673a\u5668\u4eba", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_3", 
            "text": "\u9879\u76ee   \u7279\u5f81  \u89c4\u683c    MPU    \u82af\u7247\u7ec4    MT7688AN    \u6838\u5fc3    MIPS24KEc    \u4e3b\u9891   580MHz    \u5de5\u4f5c\u7535\u538b    3.3V    PCB Size    \u5c3a\u5bf8    55.7 x 26 mm    Memory      Flash    32MB     RAM   128MB DDR2    Power Source     USB \u4f9b\u7535    5V (USB micro-B)     VCC \u4f9b\u7535   3.3V (Pin Breakout)    GPIO     \u5f15\u811a\u6570    22 (MT7688AN)     \u7535\u538b    3.3V    PWM     \u5f15\u811a\u6570   4 (MT7688AN)     \u7535\u538b    3.3V     \u6700\u5927\u5206\u8fa8\u7387    7 \u4f4d (\u53ef\u81ea\u5b9a\u4e49)   \u6700\u5927\u9891\u7387@\u5206\u8fa8\u7387    100kHz@1-bit,\n50kHz@2-bit,\n25kHz@3-bit,\n12.5kHz@4-bit,\n6.25kHz@5-bit,\n3.125kHz@6-bit,\n1.5625kHz@7-bit (Standard mode)     40MHz@1-bit,\n20MHz@2-bit,\n10MHz@3-bit,\n5MHz@4-bit,\n2.5MHz@5-bit,\n1.25Mhz@6-bit,\n625kHz@7-bit\n(Fast mode)     External Interrupts    \u5f15\u811a\u6570    22 (MT7688AN)    SPI    \u6570\u91cf    1 (MT7688AN)     \u5f15\u811a\u6570    P22, P23, P24 (Shared with on-board flash), P25     \u6700\u5927\u9891\u7387    25 MHz    SPI Slave    \u6570\u91cf    1 (MT7688AN)     \u5f15\u811a\u6570    P28, P29, P30, P31     \u6700\u5927\u9891\u7387    25 MHz    I 2 S    \u6570\u91cf    1 (MT7688AN)     \u5f15\u811a\u6570    P10, P11, P12, P13    I 2 C    \u6570\u91cf    1     \u5f15\u811a\u6570    P20, P21     \u901f\u5ea6    120K/400K    UART Lite    \u6570\u91cf    3 (MT7688AN)     \u5f15\u811a\u6570    P8, P9, P16, P17, P18, P19     \u6700\u5927\u901f\u5ea6    0.5Mbps    USB Host    \u6570\u91cf    1 (MT7688AN)     \u5f15\u811a\u6570    P6, P7     \u6570\u91cf    Micro-AB    ICommunication    Wi-Fi    1T1R 802.11 b/g/n (2.4G)     Ethernet    1-port 10/100 FE PHY    \u5f15\u811a\u6570    P2, P3, P4, P5    User Storage    SD Card    Micro SD\nSDXC", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_4", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_5", 
            "text": "\u96f6\u4ef6\u540d      \u6570\u91cf    LinkIt TM  Smart 7688     1PC    \u4f7f\u7528\u624b\u518c    1PC", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_6", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_7", 
            "text": "Note  \u624b\u518c\u4e2d\u4ecb\u7ecd\u4e86\u4e24\u79cd\u65b9\u6cd5\u3002 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u5c55\u793a\u4e86\u96be\u5ea6\u66f4\u9ad8\u7684\u65b9\u5f0f\uff08\u4f7f\u7528 USB to Serial \u9002\u914d\u5668\uff09\u3002 \u4f46\u662f\uff0c\u4ece\u957f\u8fdc\u6765\u770b\u4f60\u4f1a\u53d7\u76ca\u532a\u6d45\u3002", 
            "title": "\u8fde\u63a5\u5230\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_8", 
            "text": "LinkIt Smart 7688 \u00d7 1  USB cable (type A to micro type-B) \u00d7 2  USB to Serial adapter\u00d7 1  Jumper wires \u00d7 3", 
            "title": "\u9700\u8981\u7684\u7d20\u6750"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#windows", 
            "text": "1.  \u5b89\u88c5  PuTTy . PuTTY \u63d0\u4f9b\u4f7f\u7528 SSH ( Secure Socket Shell ) \u7684\u7cfb\u7edf\u63a7\u5236\u53f0\u73af\u5883\u6765\u8bbf\u95ee\u5f00\u53d1\u677f\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002  2.  \u5b89\u88c5  Bonjour  \u6253\u5370\u670d\u52a1 (\u53ef\u7528\u4e8e Windows 7, Windows 8, Windows 10).  3.  \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f \u5982\u679c\u60a8\u4f7f\u7528\u57fa\u4e8e FTDI \u82af\u7247\u7684 USB \u7ebf\u7f06\uff0c\u8bf7\u4ece  \u8fd9\u91cc  \u4e0b\u8f7d\u5e76\u5b89\u88c5\u5176\u9a71\u52a8\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u9047\u5230\u6709\u5173\u6700\u65b0\u9a71\u52a8\u7a0b\u5e8f\u7684\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u5b89\u88c5  \u4ee5\u5f80\u7248\u672c \u3002  4.  \u63a5\u4e0b\u6765\uff0c\u60a8\u9700\u8981\u5c06 Serial-to-USB \u7ebf\u7f06\u8fde\u63a5\u5230 LinkIt Smart 7688 \u7684 UART \u5f15\u811a\uff0c\u5982\u4e0b\u8868\u6240\u793a :     USB \u9002\u914d\u5668\u4e0a\u7684\u5f15\u811a  LinkIt Smart 7688 \u4e0a\u5bf9\u5e94\u7684\u5f15\u811a      Pin RX  Pin 8    Pin TX  Pin 9    Pin GND  Pin GND      5.  \u4e32\u53e3\u8fde\u63a5\u597d USB \u7ebf\u7f06\u540e\uff0c\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u5e76\u6ce8\u610f COM \u7aef\u53e3\u53f7\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u8fd9\u4e2a\u6570\u5b57\u4f1a\u56e0\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u800c\u5f02\u3002   6.  \u542f\u52a8 PuTTY \u7ec8\u7aef\uff0c\u8f93\u5165\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u4e2d\u627e\u5230\u7684 USB \u8bbe\u5907\u7684 COM \u7aef\u53e3\u53f7\uff0c\u5355\u51fb  Serial  \u5355\u9009\u6309\u94ae\uff0c\u5728  Speed  \u6846\u4e2d\u952e\u5165 57600\uff0c\u5355\u51fb  Open \uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002  7.  \u73b0\u5728\uff0c\u60a8\u5c06\u4f1a\u770b\u5230\u5728 Linux \u63a7\u5236\u53f0\u4e2d\u6253\u5370\u6587\u672c\u3002", 
            "title": "\u5728 Windows \u7cfb\u7edf\u4e0a"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#mac", 
            "text": "1.  \u5982\u679c\u9700\u8981\uff0c\u8bf7\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u8bf7\u67e5\u9605\u7ebf\u7f06\u5236\u9020\u5546\u7684\u7f51\u7ad9\u4e86\u89e3 Mac \u4e0a\u7684\u9a71\u52a8\u7a0b\u5e8f\u8981\u6c42\u548c\u5b89\u88c5\u8bf4\u660e\u3002  2.  \u5c06\u7ebf\u7f06\u63d2\u5165 PC / \u7b14\u8bb0\u672c\u7535\u8111\uff0c\u5e76\u5c06\u7ebf\u7f06\u8fde\u63a5\u5230 LinkIt Smart 7688\u3002  3.  \u6253\u5f00\u7ec8\u7aef\u4f1a\u8bdd\u3002  4.  \u5728\u7ec8\u7aef\u4e2d\u952e\u5165  ls /dev/cu* \u3002 \u60a8\u4f1a\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3c\u4e8e cu.usbserial-XXXXXXXX \u7684\u4e1c\u897f\uff0c\u5176\u4e2d XXXXXXXX \u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u4f8b\u5982 :  $ls /dev/cu*\n\n/dev/cu.Bluetooth-Incoming-Port\n\n/dev/cu.Bluetooth-Modem\n\n/dev/cu.pablop-WirelessiAP\n\n/dev/cu.usbserial-A6YMCQBR  5.  \u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a 57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600\u3002 \u4f8b\u5982 : $screen /dev/cu.usbserial-XXXXXXXX 57600  6.  \u73b0\u5728\u60a8\u8981\u8fde\u63a5\u5230\u7cfb\u7edf\u63a7\u5236\u53f0\u3002\u5728\u7ec8\u7aef\u4e2d\u6309 ENTER \u952e\u663e\u793a\u63d0\u793a\u7b26\u3002\u60a8\u5c06\u6ce8\u610f\u5230\uff0c\u63d0\u793a\u7b26\u4e0e\u60a8\u7684 OS X \u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f\u7684\u63d0\u793a\u7b26\u4e0d\u540c\uff0c\u5b83\u662f LinkIt Smart 7688 \u63d0\u793a\u7b26\uff0c\u50cf\u4e0b\u9762\u8fd9\u6837 :   root@myLinkIt:/#  7.  \u60a8\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a7\u5236\u53f0\u66f4\u6539 LinkIt Smart 7688 \u7cfb\u7edf\u3002", 
            "title": "\u5728 Mac \u7cfb\u7edf\u4e0a"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#linux", 
            "text": "1.  \u5982\u679c\u9700\u8981\uff0c\u8bf7\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u8bf7\u67e5\u770b\u7ebf\u7f06\u5236\u9020\u5546\u7684\u7f51\u7ad9\u4e86\u89e3 Linux \u4e0a\u7684\u9a71\u52a8\u7a0b\u5e8f\u8981\u6c42\u548c\u5b89\u88c5\u8bf4\u660e\u3002  2.  \u63d2\u5165\u7ebf\u7f06\u5e76\u8fde\u63a5\u5230 LinkIt Smart 7688\u3002  3.  \u6253\u5f00\u7ec8\u7aef\u4f1a\u8bdd\u3002  4.  \u5728\u7ec8\u7aef\u4e2d\u952e\u5165  ls /dev/ttyUSB*  \u3002\u60a8\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3c\u4e8e cu.usbserial-XXXXXXXX \u7684\u4e1c\u897f\uff0c\u5176\u4e2d XXXXXXXX \u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u4f8b\u5982 : $ls /dev/ttyUSB*\n/dev/ttyUSB0  5.  \u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a 57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a 57600\u3002 \u4f8b\u5982 : $sudo screen /dev/ttyUSB0 57600  6.**\u73b0\u5728\u60a8\u5e94\u8be5\u8fde\u63a5\u5230\u7cfb\u7edf\u63a7\u5236\u53f0\u3002\u5728\u7ec8\u7aef\u4e2d\u6309 ENTER \u952e\u663e\u793a\u63d0\u793a\u7b26\u3002 \u60a8\u5c06\u6ce8\u610f\u5230\uff0c\u63d0\u793a\u7b26\u5df2\u6210\u4e3a\u4e0d\u540c\u7684\u5e38\u89c4\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u662f LinkIt Smart 7688 \u63d0\u793a\u7b26\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9 :   root@myLinkIt:/# \n**7.  \u60a8\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a7\u5236\u53f0\u66f4\u6539 LinkIt Smart 7688 \u7cfb\u7edf\u3002", 
            "title": "\u5728 Linux \u7cfb\u7edf\u4e0a"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#blink", 
            "text": "", 
            "title": "\u8fd0\u884c Blink \u793a\u4f8b"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_9", 
            "text": "LinkIt Smart 7688 x 1  USB cable (type A to micro type-B) x 1  USB to Serial adapter x 1  Jumper wires x 3", 
            "title": "\u9700\u8981\u7684\u7d20\u6750"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#blink_1", 
            "text": "1.  \u4f7f\u7528 micro-USB \u7535\u7f06\u6253\u5f00\u7535\u8def\u677f(\u4ec5\u8fde\u63a5 USB \u7535\u6e90\u63a5\u53e3\uff0c\u800c\u4e0d\u662f USB \u4e3b\u673a\u63a5\u53e3)\u3002  2.  \u542f\u52a8 PuTTy \u5e76\u4f7f\u7528 USB \u4f7f\u4e32\u884c\u9002\u914d\u5668\u8fde\u63a5\u5230\u7cfb\u7edf\uff0c\u5982\u524d\u51e0\u8282\u6240\u793a\u3002  3.  \u8f93\u5165  python /IoT/examples/blink-gpio44.py  \u7136\u540e\u6309  Enter  \u6765\u8fd0\u884c Blink \u793a\u4f8b\u3002   Note  \u8bf7\u6ce8\u610f\uff0c\u5728\u7b2c\u4e00\u4e2a\u5355\u8bcd  python  \u4e4b\u540e\u6709 1 \u4e2a\u7a7a\u683c\uff0c\u5426\u5219\u5c06\u627e\u4e0d\u5230\u5230\u8be5\u793a\u4f8b\u3002   4.  \u5927\u7ea6 2 \u79d2\u540e\uff0c\u60a8\u4f1a\u770b\u5230 Wi-Fi LED \u7a33\u5b9a\u5730\u95ea\u70c1\u3002  5.  \u5728\u7cfb\u7edf\u63a7\u5236\u53f0\u4e2d\u952e\u5165  CTRL + C  \u5c06\u7ec8\u6b62\u8be5\u793a\u4f8b\u3002", 
            "title": "\u8fd0\u884c Blink"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_10", 
            "text": "\u6709\u4e24\u79cd Wi-Fi \u6a21\u5f0f : AP \u6a21\u5f0f\u548c\u7ad9\u6a21\u5f0f\u3002\u8bf7\u53c2\u9605  \u8fd9\u91cc  \u4e86\u89e3\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u3002  1.  \u901a\u8fc7 micro-USB \u7ebf\u7f06\u4e3a\u4e3b\u677f\u4e0a\u7535\u3002  2.  \u6253\u5f00\u8ba1\u7b97\u673a\u4e0a\u7684 Wi-Fi \u8fde\u63a5\u5b9e\u7528\u7a0b\u5e8f\uff0c\u5e76\u8fde\u63a5\u5230\u540d\u4e3a LinkIt_Smart_7688_XXXXXX \u7684\u63a5\u5165\u70b9\u3002XXXXXX \u662f\u4e00\u79cd\u786c\u4ef6\u6807\u8bc6\u7b26\uff0c\u4e0d\u540c\u7684\u5f00\u53d1\u677f\u53ef\u80fd\u4f1a\u6709\u6240\u5dee\u5f02\u3002   3.  \u901a\u8fc7 mylinkit.local/ \u6216 192.168.100.1 \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8bbe\u7f6e root \u7684\u5bc6\u7801\u5e76\u767b\u5f55\u3002\u5355\u51fb\u53f3\u4e0a\u89d2\u7684  Network \u3002   4.  \u9009\u62e9  Station mode  \uff0c\u7136\u540e\u5355\u51fb\u53f3\u4fa7\u7684  Refresh  \u6216\u5411\u4e0b\u6ed1\u52a8\u4ee5\u67e5\u627e\u8981\u8fde\u63a5\u7684 AP\u3002\u9009\u62e9 AP \u540e\uff0c\u5982\u679c\u6709\u9700\u8981\u8bf7\u8f93\u5165\u5bc6\u7801\u3002\u5355\u51fb  Configure   Restart  \u5b8c\u6210\uff0c\u5982\u4e0b\u6240\u793a\u3002\u7136\u540e\u7b49\u5f85\u7ea6 30 \u79d2\u949f\u6765\u5207\u6362\u6a21\u5f0f\u3002   5.  \u542f\u52a8 PuTTy \u5e76\u901a\u8fc7 USB \u628a\u7cfb\u7edf\u8fde\u63a5\u5230\u4e32\u884c\u9002\u914d\u5668\uff0c\u5982\u4e0a\u4e00\u8282\u6240\u793a\u3002  6.  \u8f93\u5165 ifconfig \u7136\u540e\u627e\u5230 inet addr \u7684 IP \u5730\u5740\uff0c\u5982\u4e0b\u6240\u793a :    Note  \u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u540e\u4ecd\u5c06\u8fdb\u5165\u7ad9\u6a21\u5f0f\u3002 \u6309 Wi-Fi \u6309\u94ae\u81f3\u5c11 5 \u79d2\u949f\u53ef\u5207\u6362\u56de AP \u6a21\u5f0f\u3002\u6ce8\u610f : \u9700\u8981\u4f7f\u7528 reboot \u547d\u4ee4\u91cd\u542f\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\u3002   7.  \u5728\u6d4f\u89c8\u5668\u7684\u65b0 Tab \u4e2d\u952e\u5165 IP\uff0c\u60a8\u53ef\u4ee5\u767b\u5f55\u5230 Web \u7528\u6237\u754c\u9762\u914d\u7f6e\u7cfb\u7edf\u3002  8.  \u73b0\u5728\u4e3b\u673a\u548c LinkIt Smart 7688 \u90fd\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002 \u5728\u63a7\u5236\u53f0\u4e2d\u952e\u5165  ping  www.mediatek.com \uff0c\u60a8\u5c06\u770b\u5230\uff1a  9.  \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e92\u8054\u7f51\u5728\u5f00\u53d1\u677f\u4e0a\u914d\u7f6e\u7cfb\u7edf\u3002", 
            "title": "\u8fde\u63a5\u5230\u4e92\u8054\u7f51(\u5207\u6362\u5230\u7ad9\u6a21\u5f0f\uff09"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#hello-world", 
            "text": "Note  \u4e3a\u4e86\u907f\u514d\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4e2d\u7684\u5185\u5b58\u4e0d\u8db3\uff0c\u60a8\u5e94\u8be5\u5728\u66f4\u5f3a\u5927\u7684\u4e3b\u673a\u73af\u5883\u4e2d\u8bbe\u7f6e\u672c\u673a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u73af\u5883\uff0c\u4ece\u800c\u4f7f\u60a8\u80fd\u591f\u4ea4\u53c9\u7f16\u8bd1 LinkIt Smart 7688 \u76ee\u6807\u7684\u53ef\u6267\u884c\u683c\u5f0f\u3002 \u4e0b\u8868\u663e\u793a\u4e86 LinkIt Smart 7688 \u7f16\u7a0b\u8bed\u8a00\u548c\u4e3b\u673a\u4e0a\u76f8\u5173\u5f00\u53d1\u73af\u5883\u7684\u6982\u8ff0\u3002      Programming language  Tools and libraries  Applications  Host platforms supported      C/C++  Cross compilation toolchain  System programming  OS X Linux    Python  Python runtime on LinkIt Smart 7688  Prototyping Network Arduino bridge library  OS X Linux Windows    Node.js  Node.js runtime on LinkIt Smart 7688  Prototyping Network  OS X Linux  Windows", 
            "title": "\u6f14\u793a: \u4e00\u4e2a Hello world \u7684\u793a\u4f8b"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#hello-world-python", 
            "text": "1.  \u4f7f\u7528 FileZilla \u5e76\u53c2\u8003\u8fd9\u4e2a  \u6559\u7a0b \uff0c\u670d\u52a1\u5668 IP ( \u66ff\u6362  \u4e3b\u673a\u540d  ) \u5730\u5740\u662f\u4ee5\u524d  Switch to Station mode  \u90e8\u5206\u4e2d\u7684\u7684 inet addr\uff0c\u7528\u6237\u540d\u662f root\uff0c\u5bc6\u7801\u662f\u60a8\u5728\u8be5\u90e8\u5206\u4e2d\u8bbe\u7f6e\u7684\u5bc6\u7801\u3002  2.  \u6253\u5f00\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\uff0c\u590d\u5236\u5e76\u7c98\u8d34\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\u5e76\u4fdd\u5b58\u4e3a  helloworld.py \u3002 print  Hello World!   3.  Copy the file  helloworld.py  into system on target development environment (LinkIt Smart 7688) with FileZilla, place it under the folder  root .  4.  \u542f\u52a8 PuTTy \u5e76\u4f7f\u7528 USB \u8fde\u63a5\u7cfb\u7edf\u5230\u4e32\u884c\u9002\u914d\u5668\u3002  5.  \u5c06\u5de5\u4f5c\u76ee\u5f55\u8bbe\u7f6e\u4e3a  /root  \u5e76\u8f93\u5165  python helloworld.py  \u6765\u6267\u884c\u3002  6.  \u73b0\u5728\u60a8\u5c06\u4f1a\u770b\u5230  Hello World!  \u6253\u5370\u5728\u63a7\u5236\u53f0\u3002", 
            "title": "Hello world \u793a\u4f8b\u5728 Python \u6f14\u793a"
        }, 
        {
            "location": "/LinkIt_Smart_7688/#_11", 
            "text": "[Eagle\u6587\u4ef6]   LinkIt_Smart_7688  [PCB\u56fePDF]   LinkIt_Smart_7688 PCB  [\u539f\u7406\u56fePDF]   LinkIt_Smart_7688 Schematic  [\u5176\u4ed6\u8d44\u6e90]   Manual  [\u5176\u4ed6\u8d44\u6e90]   OpenWrt  [\u5176\u4ed6\u8d44\u6e90]   MediaTek LinkIt? Smart 7688 Resources:  [\u5176\u4ed6\u8d44\u6e90]   Firmware_upgrade_Instruction  [\u5176\u4ed6\u8d44\u6e90]   Certificates", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/", 
            "text": "LinkItTM Smart 7688 Duo\uff08\u8054\u53d1\u79d1\u7269\u8054\u7f51\u5f00\u53d1\u677f\uff09\u662f\u57fa\u4e8e MT7688 (\n\u8054\u53d1\u79d1\u7269\u8054\u7f51\u5f00\u53d1\u677f\n)\u548c ATmega32u4 \u7684\u5f00\u653e\u5f0f\u5f00\u53d1\u677f\u3002 \u677f\u4e0e Arduino Yun \u7f16\u8f91\u5668\u517c\u5bb9\uff0c\u5e76\u57fa\u4e8e OpenWrt Linux \u53d1\u884c\u7248\u3002 \u8be5\u677f\u53ef\u4ee5\u4e13\u95e8\u5b89\u88c5\u5728\u667a\u80fd\u5bb6\u5c45\u6216\u529e\u516c\u5ba4\u7684 Rich Application IoT \u8bbe\u5907\u8fdb\u884c\u8bbe\u8ba1\u3002 \u7531\u4e8e\u5b83\u4e0e Arduino \u517c\u5bb9\uff0c\u60a8\u53ef\u4ee5\u4ed6\u540c\u65f6\u4f7f\u7528 Arduino Yun \u548c LinkIt Smart 7688 Duo \u7684\u4e0d\u540c\u529f\u80fd \u3002 \u8fd9\u5c06\u5e2e\u52a9\u60a8\u5236\u4f5c\u5404\u79cd\u57fa\u4e8e Arduino Yun \u7684\u6709\u8da3\u9879\u76ee\u3002 \u8be5\u677f\u80fd\u591f\u4e3a\u60a8\u63d0\u4f9b\u8db3\u591f\u7684\u5185\u5b58\u548c\u5b58\u50a8\u7a7a\u95f4\uff0c\u6765\u5b9e\u73b0\u5f3a\u5927\u7684\u89c6\u9891\u5904\u7406\u529f\u80fd\u3002 \u53ef\u4ee5\u901a\u8fc7 Python\uff0cNode.js \u548c C \u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u7a0b\u5e8f\u7684\u7f16\u5199\u6765\u5b9e\u73b0\u5e94\u7528\u3002\n\n\n\n\nNote\n\n\n\u672c\u9875\u4ec5\u5f15\u5bfc\u60a8\u5982\u4f55\u4f7f\u7528\u6b64\u5f00\u53d1\u677f\u3002 \u6709\u5173\u5b8c\u6574\u7684\u6307\u5357\uff0c\u8bf7\u53c2\u9605 \n\u53c2\u8003\u8d44\u6599\n \u3002\n\u5e76\u4e14\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u5b83\u4e00\u6b21\u53ea\u80fd\u6709\u4e00\u4e2a\u63a7\u5236\u5668\u4f5c\u4e3a\u4e3b\u63a7\u5236\u5668\u3002\n\n\n\n\n\u8be5\u677f\u53ea\u662f\u8054\u53d1\u79d1 LinkItTM Smart 7688 \u5e73\u53f0\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u5e73\u53f0\u5305\u62ec\u5176\u4ed6\u5f00\u53d1\u677f\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n580 MHz MIPS CPU\n\n\n\u5355\u8f93\u5165\u3001\u5355\u8f93\u51fa\uff081T1R\uff09Wi-Fi 802.11 b / g / n\uff082.4G\uff09\n\n\n\u9488\u5bf9 GPIO\uff0cI2C\uff0cI2S\uff0cSPI\uff0cSPIS\uff0cUART\uff0cPWM \u548c\u4ee5\u592a\u7f51\u7aef\u53e3\u5f15\u811a\n\n\n32MB \u95ea\u5b58\u548c 128MB DDR2 RAM\n\n\n\u80fd\u591f\u901a\u8fc7 USB \u6570\u636e\u7ebf\u8fde\u63a5\u4e3b\u673a\n\n\n\u5177\u6709 Micro SD \u63d2\u69fd\n\n\n\u652f\u6301 Arduino API\uff08ATmega32U4\uff09\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\nIoT /\u7f51\u5173\u8bbe\u5907\n\n\n\u673a\u5668\u4eba\n\n\n\n\n\u89c4\u8303\n\n\n\n\nMPU\n\n\n\u82af\u7247\u7ec4\uff1aMT7688AN\n\n\n\u6838\u5fc3\uff1aMIPS24KEc\n\n\n\u65f6\u949f\u901f\u5ea6\uff1a580MHz\n\n\n\u5de5\u4f5c\u7535\u538b\uff1a3.3V\n\n\n\n\n\n\nMCU\n\n\n\u82af\u7247\u7ec4\uff1aATmega32U4\n\n\n\u6838\u5fc3\uff1aAtmel AVR\n\n\n\u65f6\u949f\u901f\u5ea6\uff1a8MHz\n\n\n\u5de5\u4f5c\u7535\u538b\uff1a3.3V\n\n\n\n\n\n\n\u5b58\u50a8\n\n\nFlash\uff1a32MB\n\n\nRAM\uff1a128MB DDR2\n\n\n\n\n\n\nGPIO\n\n\n\u9488\u6570\uff1a3\uff08MT7688AN\uff09\uff0c24\uff08ATmega32U4\uff09\n\n\n\u7535\u538b\uff1a3.3V\n\n\n\n\n\n\nPWM\n\n\n\u9488\u6570\uff1a8\uff08Atmega32U4\uff09\n\n\n\u7535\u538b\uff1a3.3V\n\n\n\u6700\u5927\u5206\u8fa8\u7387\uff1a16\u4f4d\uff08\u53ef\u5b9a\u5236\uff09\n\n\n\n\n\n\nADC\n\n\n\u9488\u657012\uff08ATmega32U4\uff09\n\n\n\u5206\u8fa8\u7387\uff1a10\u4f4d\n\n\n\n\n\n\n\u5916\u90e8\u4e2d\u65ad\uff1a8\n\n\nSPI / SPIS\n\n\n\u9488\u53f7\uff1aS0\uff0cS1\uff0cS2\uff0cS3\n\n\n\u6700\u5927\u901f\u5ea6\uff1a4MHz\n\n\n\n\n\n\nI2C\n\n\n\u9488\u6570\uff1aD2 / D3\n\n\n\u901f\u5ea6\uff1a400KHz\n\n\n\n\n\n\nUART Lite\n\n\n\u4e00\u4e2a\u4e3a ATmega32U4\uff0c\u53e6\u4e00\u4e2a\u4e3a MT7688AN\n\n\n\u9488\u53f7\uff1aP8 / P9\uff08MT7688AN\uff09\uff0cD\u200b\u200b0 / D1\uff08ATmega32U4\uff09\n\n\n\n\n\n\nUSB\u4e3b\u673a\n\n\n\u9488\u6570\uff1aP6 / P7\n\n\n\u8fde\u63a5\u5668\u7c7b\u578b\uff1aMicro-AB\n\n\n\n\n\n\n\u901a\u4fe1\n\n\nWi-Fi\uff1a1T1R 802.11 b / g / n\uff082.4G\uff09\n\n\n\u4ee5\u592a\u7f51\uff1a1\u7aef\u53e310/100 FE PHY\n\n\n\u9488\u6570\uff1aP2 / P3 / P4 / P5\n\n\n\n\n\n\n\u7528\u6237\u5b58\u50a8\uff1aSD\u5361Micro SD / SDXC\n\n\n\u5c3a\u5bf8\uff1a60.8x26.0mm\n\n\n\n\n\u786c\u4ef6\u6982\u51b5\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u8fde\u63a5\u5230\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\n\n\n\n\nNote\n\n\n\u624b\u518c\u4e2d\u4ecb\u7ecd\u4e86\u4e24\u79cd\u65b9\u6cd5\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u663e\u793a\u4e00\u4e2a\u5148\u8fdb\u7684\u65b9\u6cd5\uff08\u4f7f\u7528USB\u4e32\u884c\u5230\u9002\u914d\u5668\uff09\uff0c\u770b\u8d77\u6765\u6709\u70b9\u56f0\u96be\u3002 \u4f46\u662f\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u4f60\u4f1a\u53d7\u76ca\u532a\u6d45\u3002\n\n\n\n\n\u6240\u9700\u6750\u6599\n\n\n\n\nLinkIt Smart 7688 x 1\n\n\nUSB\u6570\u636e\u7ebf\uff08type A to micro type-B\uff09x 1\n\n\nUSB \u4e32\u884c\u63a5\u53e3x 1\n\n\n\u8df3\u7ebfx 3\n\n\n\n\n\u5728 Windows \u4e0a\n\n\n1\n \u5b89\u88c5 \nPuTTy\n\u3002 PuTTY \u63d0\u4f9b\u4f7f\u7528 SSH\uff08Secure Socket Shell\uff09\u7684\u7cfb\u7edf\u63a7\u5236\u53f0\u73af\u5883\u6765\u8bbf\u95ee\u5f00\u53d1\u677f\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\n\n\n2\n \u5b89\u88c5 \nBonjour\n  \u6253\u5370\u670d\u52a1\uff08\u9002\u7528\u4e8eWindows 7\uff0cWindows 8\uff0cWindows 10\uff09\u3002\n\n\n3\n \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f \u5982\u679c\u60a8\u4f7f\u7528\u57fa\u4e8e FTDI \u82af\u7247\u7684 USB \u6570\u636e\u7ebf\uff0c\u8bf7\u4ece \n\u8fd9\u91cc\n \u4e0b\u8f7d\u5e76\u5b89\u88c5\u5176\u9a71\u52a8\u7a0b\u5e8f\u3002 \u5982\u679c\u60a8\u9047\u5230\u6700\u65b0\u9a71\u52a8\u7a0b\u5e8f\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u5b89\u88c5\n \n\u65e7\u7248\u672c\n\u3002\n\n\n4\n \u63a5\u4e0b\u6765\uff0c\u60a8\u9700\u8981\u5c06 Serial-to-USB \u8fde\u63a5\u5230 LinkIt Smart 7688 \u7684UART\u5f15\u811a\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a\n\n\n\n\n\n\n\n\n\u5728USB\u9002\u914d\u5668\u4e0a\u7684\u5f15\u811a\n\n\n\u5728LinkIt Smart 7688\u4e0a\u8fde\u63a5\u76f8\u5e94\u7684\u5f15\u811a\n\n\n\n\n\n\n\n\n\n\n\u5f15\u811a RX\n\n\n\u5f15\u811a 8\n\n\n\n\n\n\n\u5f15\u811a TX\n\n\n\u5f15\u811a 9\n\n\n\n\n\n\n\u5f15\u811a GND\n\n\n\u5f15\u811a GND\n\n\n\n\n\n\n\n\n\n\n5\n \u8fde\u63a5\u4e32\u884c\u5230 USB \u6570\u636e\u7ebf\u540e\uff0c\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u5e76\u6ce8\u610f \nCOM\n \u7aef\u53e3\u53f7\uff0c\u5982\u56fe22\u6240\u793a\u3002\u8be5\u6570\u5b57\u53ef\u80fd\u56e0\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u800c\u5f02\u3002\n\n\n\n\n6\n \u542f\u52a8 PuTTY \u7ec8\u7aef\uff0c\u8f93\u5165\u8bbe\u5907\u7ba1\u7406\u5668\u4e2d USB \u8bbe\u5907\u7684 COM \u7aef\u53e3\u53f7\uff0c\u5355\u51fb\u201c\u4e32\u53e3\u201d\u6309\u94ae\uff0c\u5728\u201c\u901f\u5ea6\u201d\u6846\u4e2d\u8f93\u516557600\uff0c\u5355\u51fb\u201c\u6253\u5f00\u201d\uff0c\u5982\u56fe23\u6240\u793a\u3002\n\n\n\n\n7\n \u8981\u9000\u51fa\u7cfb\u7edf\u63a7\u5236\u53f0\uff0c\u8bf7\u5355\u51fb PuTTY \u7a97\u53e3\u53f3\u4e0a\u89d2\u7684\u5173\u95ed\u56fe\u6807\u3002\n\n\n\u5728 Mac \u4e0a\n\n\n1\n \u5982\u679c\u9700\u8981\uff0c\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u8bf7\u67e5\u9605\u6570\u636e\u7ebf\u5236\u9020\u5546\u7684\u7f51\u7ad9\u4e86\u89e3 Mac \u4e0a\u7684\u9a71\u52a8\u7a0b\u5e8f\u8981\u6c42\u548c\u5b89\u88c5\u8bf4\u660e\u3002\n\n\n2.\n \u5c06\u6570\u636e\u7ebf\u63d2\u5165PC /\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u5e76\u5c06\u8fde\u63a5\u7ebf\u8fde\u63a5\u5230 LinkIt Smart 7688\u3002\n\n\n3\n \u6253\u5f00\u7ec8\u7aef\u4f1a\u8bdd\u3002\n\n\n4\n \u5728\u7ec8\u7aef\u4e2d\u8f93\u5165 \nls / dev / cu*\n\u3002 \u60a8\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002 \u5bfb\u627e\u7c7b\u4f3c\u4e8e cu.usbserial-XXXXXXXX \u7684\u4e1c\u897f\uff0c\u5176\u4e2d XXXXXXXX \u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002 \u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\n\n\n\u4f8b\u5982:\n\n\n$ls /dev/cu*\n\n/dev/cu.Bluetooth-Incoming-Port\n\n/dev/cu.Bluetooth-Modem\n\n/dev/cu.pablop-WirelessiAP\n\n/dev/cu.usbserial-A6YMCQBR\n\n\n\n\n5.\n \u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600\u3002 \u4f8b\u5982\uff1a\n\n$screen /dev/cu.usbserial-XXXXXXXX 57600\n\n\n\n6.\n \u73b0\u5728\u60a8\u5e94\u8be5\u8fde\u63a5\u5230\u7cfb\u7edf\u63a7\u5236\u53f0\u3002 \u5728\u7ec8\u7aef\u4e2d\u6309 ENTER \u952e\u663e\u793a\u63d0\u793a\u3002 \u60a8\u5c06\u6ce8\u610f\u5230\uff0c\u63d0\u793a\u4e0e\u60a8\u7684 OSX \u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f\u4e0d\u540c\uff0c\u5b83\u662f LinkIt Smart 7688 \u63d0\u793a\u7b26\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n  root@myLinkIt:/#\n\n\n\n7.\n \u60a8\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a7\u5236\u53f0\u66f4\u6539 LinkIt Smart 7688 \u7cfb\u7edf\u3002\n\n\n\u5728 Linux \u4e0a\n\n\n1.\n \u5982\u679c\u9700\u8981\uff0c\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u8bf7\u67e5\u770b\u6570\u636e\u7ebf\u5236\u9020\u5546\u7684\u7f51\u7ad9\u4e86\u89e3 Linux \u4e0a\u7684\u9a71\u52a8\u7a0b\u5e8f\u8981\u6c42\u548c\u5b89\u88c5\u8bf4\u660e\u3002\n\n\n2.\n \u63d2\u5165\u6570\u636e\u7ebf\u5e76\u5c06\u7535\u7f06\u8fde\u63a5\u5230 LinkIt Smart 7688 Duo\u3002\n\n\n3.\n \u6253\u5f00\u7ec8\u7aef\u4f1a\u8bdd\u3002\n\n\n4.\n \u5728\u7ec8\u7aef\u4e2d\u8f93\u5165 \nls / dev / ttyUSB \n\u3002 \u60a8\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002 \u5bfb\u627e\u7c7b\u4f3c\u4e8e cu.usbserial-XXXXXXXX \u7684\u4e1c\u897f\uff0c\u5176\u4e2d XXXXXXXX \u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002 \u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002 \u4f8b\u5982\uff1a\n\n$ls /dev/ttyUSB*\n/dev/ttyUSB0\n\n\n**5.\n \u4f7f\u7528 **\u5c4f\u5e55*\n \u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u884c\u7aef\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a **57600\n\u3002 \u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600\u3002 \u4f8b\u5982\uff1a\n\n$sudo screen /dev/ttyUSB0 57600\n\n\n \n6.\n \u73b0\u5728\u60a8\u5e94\u8be5\u8fde\u63a5\u5230\u7cfb\u7edf\u63a7\u5236\u53f0\u3002 \u5728\u7ec8\u7aef\u4e2d\u6309 ENTER \u952e\u663e\u793a\u63d0\u793a\u3002 \u60a8\u5c06\u6ce8\u610f\u5230\uff0c\u63d0\u793a\u5df2\u6210\u4e3a\u4e0d\u540c\u7684\u5e38\u89c4\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u662f LinkIt Smart 7688 \u63d0\u793a\u7b26\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n  root@myLinkIt:/#\n\n\n\n7.\n \u60a8\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a7\u5236\u53f0\u66f4\u6539 LinkIt Smart 7688\u7cfb\u7edf\u3002\n\n\n\u8fd0\u884c Blink \u793a\u4f8b\n\n\n\u6240\u9700\u6750\u6599\n\n\n\n\nLinkIt Smart 7688 x 1\n\n\nUSB\u6570\u636e\u7ebf\uff08type A to micro type-B\uff09x 1\n\n\nUSB\u8fde\u63a5\u5230\u4e32\u884c\u9002\u914d\u5668x 1\n\n\n\u8df3\u7ebfx 3\n\n\n\n\n\u8fd0\u884c Blink\n\n\n1.\n \u4f7f\u7528 micro USB \u6570\u636e\u7ebf\u6253\u5f00\u7535\u8def\u677f\uff08\u4ec5\u8fde\u63a5 USB \u7535\u6e90\u63a5\u53e3\uff0c\u800c\u4e0d\u662f USB \u4e3b\u673a\u63a5\u53e3\uff09\u3002\n\n\n2.\n \u542f\u52a8 PuTTy \u5e76\u4f7f\u7528 USB \u6570\u636e\u7ebf\u8fde\u63a5\u81f3\u4e32\u884c\u9002\u914d\u5668\u518d\u8fde\u63a5\u5230\u7cfb\u7edf\uff0c\u5982\u524d\u51e0\u8282\u6240\u793a\u3002\n\n\n\n\n3.\n \u8f93\u5165 \npython /IoT/examples/blink-gpio44.py\n\uff0c\u7136\u540e\u6309 \nEnter\n \u4ee5\u8fd0\u884c Blink \u793a\u4f8b\u3002\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5728\u7b2c\u4e00\u4e2a\u5355\u8bcd\u201cpython\u201d\u4e4b\u540e\u67091\u4e2a\u7a7a\u683c\uff0c\u5426\u5219\u5c06\u4e0d\u4f1a\u627e\u5230\u8be5\u793a\u4f8b\u3002\n\n\n\n\n4.\n \u5927\u7ea62\u79d2\u949f\u540e\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230 Wifi LED \u7a33\u5b9a\u95ea\u70c1\u3002\n\n\n5.\n \u5728\u7cfb\u7edf\u63a7\u5236\u53f0\u4e2d\uff0c\u8f93\u5165 \nCTRL + C\n\uff0c\u8fd9\u5c06\u7ec8\u6b62\u793a\u4f8b\u3002\n\n\n\u8fde\u63a5\u5230\u4e92\u8054\u7f51\uff08\u5207\u6362\u5230\u7ad9\u6a21\u5f0f\uff09\n\n\n\u6709\u4e24\u79cd Wi-Fi \u6a21\u5f0f\uff1aAP\u6a21\u5f0f\u548c\u7ad9\u6a21\u5f0f\u3002 \u8bf7\u53c2\u8003\u8fd9\u91cc\u7684\u5dee\u5f02\u3002\n\n\n1.\n \u4f7f\u7528 micro USB \u6570\u636e\u7ebf\u6253\u5f00\u7535\u8def\u677f\u3002\n\n\n2.\n \u6253\u5f00\u8ba1\u7b97\u673a\u4e0a\u7684 Wi-Fi \u8fde\u63a5\u7684\u7a0b\u5e8f\uff0c\u5e76\u8fde\u63a5\u5230\u540d\u4e3a LinkIt_Smart_7688_XXXXXX \u7684\u63a5\u5165\u70b9\u3002 XXXXXX \u662f\u4e00\u79cd\u4e0d\u540c\u786c\u4ef6\u7684\u6807\u8bc6\u7b26\uff0c\u5404\u79cd\u677f\u6709\u5404\u79cd\u677f\u7684\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\u3002\n\n\n\n\n3.\n \u6253\u5f00\u5e26\u6709 mylinkit.local / \u6216 192.168.100.1 \u7f51\u5740\u7684\u6d4f\u89c8\u5668\uff0c\u8bbe\u7f6e root \u7684\u5bc6\u7801\u5e76\u767b\u5f55\u3002\u5355\u51fb\u53f3\u4e0a\u89d2\u7684\u201c\u7f51\u7edc\u201d\u3002\n\n\n\n\n4.\n \u9009\u62e9\u7ad9\u6a21\u5f0f\uff0c\u7136\u540e\u5355\u51fb\u53f3\u4fa7\u7684\u5237\u65b0\u6216\u5411\u4e0b\u7bad\u5934\u4ee5\u67e5\u627e\u8981\u8fde\u63a5\u7684 AP\u3002 \u9009\u62e9 AP \u540e\uff0c\u5982\u679c\u9700\u8981\uff0c\u8bf7\u8f93\u5165\u5bc6\u7801\u3002 \u5355\u51fb\u914d\u7f6e\u5e76\u91cd\u65b0\u542f\u52a8\u5b8c\u6210\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u7136\u540e\u7b49\u5f85\u7ea6 30 \u79d2\u949f\u53ef\u4ee5\u5207\u6362\u6a21\u5f0f\u3002\n\n\n\n\n5.\n \u542f\u52a8 PuTTy\uff0c\u5e76\u4f7f\u7528 USB \u4e32\u884c\u9002\u914d\u5668\u8fde\u63a5\u5230\u7cfb\u7edf\uff0c\u5982\u4e0a\u4e00\u8282\u6240\u793a\u3002\n\n\n6.\n \u952e\u5165 ifconfig \u5e76\u627e\u5230 inet addr \u7684IP\u5730\u5740\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n\n\nNote\n\n\n\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u540e\u4ecd\u5c06\u8fdb\u5165\u201c\u7ad9\u201d\u6a21\u5f0f\u3002 \u6309 Wi-Fi \u6309\u94ae\u81f3\u5c11 5 \u79d2\u949f\u5207\u6362\u56de AP\u6a21\u5f0f\u3002 \u6ce8\u610f\uff1a\u9700\u8981\u4f7f\u7528 reboot \u547d\u4ee4\u91cd\u542f\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\u3002\n\n\n\n\n7.\n \u5728\u6d4f\u89c8\u5668\u7684\u65b0 Tab \u4e2d\u8f93\u5165 IP\uff0c\u60a8\u53ef\u4ee5\u767b\u5f55\u5230 Web \u7528\u6237\u754c\u9762\u914d\u7f6e\u7cfb\u7edf\u3002\n\n\n8.\n \u73b0\u5728\u4e3b\u673a\u548c LinkIt Smart 7688 \u90fd\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002 \u5728\u63a7\u5236\u53f0\u4e2d\u8f93\u5165 ping \nwww.mediatek.com\n\uff0c\u60a8\u5c06\u5f97\u5230\uff1a\n\n\n\n\n9.\n \u73b0\u5728\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e92\u8054\u7f51\u5728\u5f00\u53d1\u677f\u4e0a\u914d\u7f6e\u7cfb\u7edf\u3002\n\n\n\u5b89\u88c5 Arduino \u7f16\u7a0b\u73af\u5883\n\n\n\u8be5\u5f00\u53d1\u677f\u5177\u6709\u4e0e Arduino \u517c\u5bb9\u7684\u529f\u80fd\u3002 \u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u5c06 Arduino \u4ee3\u7801\u5e94\u7528\u4e8e 7688 \u5e73\u53f0\uff0c\u4ece\u800c\u4f7f\u5f00\u53d1\u6d41\u7a0b\u66f4\u52a0\u5feb\u6377\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u6784\u5efa Arduino \u7f16\u7a0b\u73af\u5883\u3002\n\n\n\u4e0b\u8f7d\u5e76\u5b89\u88c5 Arduino IDE\n\n\n\u60a8\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Arduino IDE 1.6.5\u3002\n\n\n\u4e3a LinkIt Smart 7688 \u5e73\u53f0\u914d\u7f6e Arduino IDE\n\n\n\u5b89\u88c5\u5f00\u53d1\u677f\u652f\u6301\u5305\n\n\nArduino IDE 1.6.5\u652f\u6301\u4f7f\u7528 \nBoard Manager\n \u5de5\u5177\u8fdb\u884c\u7b2c\u4e09\u65b9\u677f\u96c6\u6210\u3002 LinkIt Smart 7688 \u5f00\u53d1\u677f\u662f Arduino IDE \u7684\u63d2\u4ef6\uff0c\u60a8\u9700\u8981\u5b89\u88c5\u677f\u5361\uff0c\u4ee5\u4fbf Arduino \u652f\u6301 LinkIt \u677f\u5361\u3002 \u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff1a\n\n\n1\n \u5728 Arduino IDE \u4e2d\uff0c\u5728\u6587\u4ef6\u83dc\u5355\u4e0a\u5355\u51fb\u9996\u9009\u9879\uff0c\u7136\u540e\u63d2\u5165\n\n\nhttp://download.labs.mediatek.com/package_mtk_linkit_smart_7688_test_index.json\n\n\n\n\n\u5230\u9644\u52a0\u677f\u7ba1\u7406\u5668 URL \u5b57\u6bb5\uff1a\n\n\n\n\n2.\n \u786e\u4fdd\u60a8\u7684\u8ba1\u7b97\u673a\u5df2\u8fde\u63a5\u5230\u4e92\u8054\u7f51 \n\u4e0b\u8f7d\n \nLinkIt\n\uff0c\u89e3\u538b\u7f29\u5b83\uff0c\u5e76\u5c06\u6587\u4ef6\u590d\u5236\u5230\u6587\u4ef6\u5939 \npackages\n\uff0c\u5b83\u83b7\u5f97\u76f8\u540c\u7684\u4f4d\u7f6e \u4e0e\u6587\u4ef6 \nPreferences.txt\n\u3002 \u70b9\u51fb\u4ee5\u4e0b\u7ea2\u8272\u77e9\u5f62\u6807\u8bb0\u90e8\u5206\u6253\u5f00 \nPreferences.txt\n \u7684\u6587\u4ef6\u4f4d\u7f6e\u3002\n\n\n\n\n3.\n \u5728Arduino \n\u5de5\u5177\n \u83dc\u5355\u4e2d\u6307\u5411 \n\u677f\n\u3002\n\n\n4.\n \u73b0\u5728\u5e94\u8be5\u6709\u4e00\u4e2a LinkIt Smart 7688 \u9879\u76ee\u51fa\u73b0\u5728 Boards Manager \u7684\u4e3b\u677f\u5217\u8868\u4e2d\uff0c\u5e76\u9009\u62e9\u5e26\u6709 \nCOMxx\n \uff08\nLinkIt Smart 7688 Duo\n\uff09\u7684\u7aef\u53e3\u3002\n\n\n\n\n5.\n \u5b89\u88c5\u5b8c\u6210\u3002\n\n\n\u5b89\u88c5 LinkIt Smart 7688 Duo COM \u7aef\u53e3\u9a71\u52a8\u7a0b\u5e8f\n\n\n\u5b89\u88c5\u677f\u5305\u4e4b\u540e\uff0c\u5c06 LinkIt Smart 7688 Duo \u8fde\u63a5\u5230\u8ba1\u7b97\u673a\uff0c\u60a8\u5e94\u8be5\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u4e2d\u770b\u5230\u4e00\u4e2a\u5e26\u6709\u4ee5\u4e0b\u7aef\u53e3 ID \u7684 USB \u4e32\u884c\u7aef\u53e3\uff1a\n\n\n\n\n\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8fCOM \u7aef\u53e3\uff1aVID = 0x0E8D\uff0cPID = 0xAB00\n\n\nArduino Sketch COM \u7aef\u53e3\uff1aVID = 0x0E8D\uff0cPID = 0xAB01\n\n\n\n\n\u63a5\u4e0b\u6765\uff0c\u60a8\u5c06\u9700\u8981\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u6b65\u9aa4\u662f\uff1a\n\n\n\n\nNote\n\n\n\u5bf9\u4e8e Windows 10\uff0c\u65e0\u9700\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u4f46\u662f\uff0c\u9700\u8981\u989d\u5916\u7684\u6b65\u9aa4\u6765\u786e\u4fdd Windows 10 \u8bc6\u522b\u51fa\u8be5\u677f\u3002 \u5c06 LinkIt Smart 7688 Duo \u8fde\u63a5\u5230 Windows 10 \u673a\u5668\uff0c\u7136\u540e\u5728 700 \u6beb\u79d2\u5185\u5feb\u901f\u6309\u4e0b MCU \u590d\u4f4d\u6309\u94ae\u4e24\u6b21\u3002 \u8be5\u7cfb\u7edf\u73b0\u5728\u5e94\u8be5\u5c06 LinkIt Smart 7688 Duo \u8bc6\u522b\u4e3a USB\u4e32\u884c\u8bbe\u5907\uff08COM5\uff09\u3002 \u4e0d\u540c\u673a\u5668\u4e0a\u7684\u6570\u5b575\u53ef\u80fd\u4e0d\u540c\u3002 \u60a8\u53ea\u9700\u8981\u7b2c\u4e00\u6b21\u5c06\u8be5\u7535\u8def\u677f\u8fde\u63a5\u5230 Windows \u673a\u5668\u4e0a\u5373\u53ef\u3002\n\n\n\n\n\n\nNote\n\n\n\u5bf9\u4e8e Windows 8\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u963b\u6b62\u9a71\u52a8\u7a0b\u5e8f\u7684\u5b89\u88c5\u3002 \u8bf7\u5728 Windows 8 \u4e0a\u7981\u7528\u9a71\u52a8\u7a0b\u5e8f\u7b7e\u540d\u5f3a\u5236\u3002\u7981\u7528\u7b7e\u540d\u5f3a\u5236\u540e\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b Windows 7 \u4e2d\u7684\u6b65\u9aa4\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002\n\n\n\n\n\n\nNote\n\n\n\u5bf9\u4e8eWindows 7\uff0c\u8bf7\u5728\u4ee5\u4e0b\u8def\u5f84\u4e2d\u627e\u5230\u4e32\u884cCOM\u7aef\u53e3INF\u9a71\u52a8\u7a0b\u5e8f\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4ece\u8fd9\u91cc\u5b89\u88c5\u3002\n\n\n\n\n{ARDUINO_IDE_PREFERENCE_LOCATION}Arduino15/packages/LinkIt/hardware/avr/0.1.5/driver/linkit_smart_7688.inf\n\n\n\u60a8\u5c06\u5728 \nFile\uff08\u6587\u4ef6\uff09 - \nPreferences\uff08\u9996\u9009\u9879\uff09\n \u4e2d\u627e\u5230 Arduino \u9996\u9009\u9879\u4f4d\u7f6e\uff0c\u8bf7\u53c2\u9605 \npreferences.txt\u8def\u5f84\n\u3002\n\n\n\n\n\u53f3\u952e\u5355\u51fb linkit_smart_7688.inf \u5e76\u9009\u62e9\u5b89\u88c5\uff0c\u51fa\u73b0\u5b89\u5168\u7a97\u53e3\uff0c\n\u5355\u51fb\u5b89\u88c5\u6b64\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6\n\u3002 \u8fd9\u5b8c\u6210\u4e86\u9a71\u52a8\u7a0b\u5e8f\u7684\u5b89\u88c5\u3002\n\n\n\n\n\n\n\u5bf9\u4e8eUbuntu Linux\uff0c\u5b83\u5e94\u8be5\u6ca1\u6709\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 LinkIt Smart 7688 \u5e94\u8be5\u5728/ dev\u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u5b89\u88c5\u4e3a ttyUSB0\u3002 \u6bcf\u4e2a Ubuntu \u673a\u5668\u4e0a\u7684 \n\u6570\u5b570\n \u53ef\u80fd\u4e0d\u540c\u3002\n\n\n\u5bf9\u4e8e OS X\uff0c\u4e5f\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0cLinkIt Smart 7688 Duo \u4f5c\u4e3a\u4e32\u884c\u8bbe\u5907\u5b89\u88c5\u5728/ dev / tty.usbmodem1413 \u4e0b\u3002 \u6bcf\u4e2aOS X \u673a\u5668\u4e0a\u7684\u53f7\u7801 1413 \u53ef\u80fd\u4e0d\u540c\u3002\n\n\n\n\n\u6f14\u793a: \u4e00\u4e2a\u8f93\u51fa Hello world \u7684\u4f8b\u5b50\n\n\n\n\nNote\n\n\n\u4e3a\u4e86\u907f\u514d\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4e2d\u7684\u5185\u5b58\u4e0d\u8db3\uff0c\u60a8\u5e94\u8be5\u5728\u66f4\u5f3a\u5927\u7684\u4e3b\u673a\u73af\u5883\u4e2d\u8bbe\u7f6e\u672c\u673a\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u5f00\u53d1\u73af\u5883\uff0c\u4ece\u800c\u4f7f\u60a8\u80fd\u591f\u4ea4\u53c9\u7f16\u8bd1 LinkIt Smart 7688 \u76ee\u6807\u7684\u53ef\u6267\u884c\u683c\u5f0f\u3002 \u4e0b\u8868\u663e\u793a\u4e86 LinkIt Smart 7688 \u7f16\u7a0b\u8bed\u8a00\u548c\u4e3b\u673a\u4e0a\u76f8\u5173\u5f00\u53d1\u73af\u5883\u7684\u6982\u8ff0\u3002\n\n\n\n\nPython\n\n\n1.\n \u4f7f\u7528 FileZilla \u53c2\u8003\u8fd9\u4e2a\ntutorial\n\uff0c\u670d\u52a1\u5668IP\uff08\u66ff\u6362 \n\u4e3b\u673a\u540d\n\uff09\u7684\u5730\u5740\u662f inet addr \u5728\u4ee5\u524d\u7684\n\u5207\u6362\u5230station\u6a21\u5f0f\n\u90e8\u5206\u4e2d\u627e\u5230\uff0c\u7528\u6237\u540d\u662f root\uff0c\u5bc6\u7801\u662f\u8be5\u90e8\u5206\u4e2d\u8bbe\u7f6e\u7684\u5bc6\u7801\u3002\n\n\n2.\n \u6253\u5f00\u6587\u672c\u7f16\u8f91\u5668\uff0c\u590d\u5236\u5e76\u7c98\u8d34\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\uff0c\u5e76\u5c06\u5176\u4fdd\u5b58\u4e3a \nhelloworld.py \n\u3002\n\nprint \nHello World!\n\n\n\n**3.\n \u4f7f\u7528 FileZilla \u5c06\u6587\u4ef6 **helloworld.py\n \u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u73af\u5883\uff08LinkIt Smart 7688\uff09\u7684\u7cfb\u7edf\u4e2d\uff0c\u5c06\u5176\u653e\u5728\u6587\u4ef6\u5939 \nroot\n \u4e0b\u3002\n\n\n4.\n \u542f\u52a8 PuTTy \u5e76\u4f7f\u7528 USB\u8fde\u63a5\u5230\u4e32\u884c\u9002\u914d\u5668\u8fde\u63a5\u5230\u7cfb\u7edf\u3002\n\n\n5.\n \u5c06\u5de5\u4f5c\u76ee\u5f55\u8bbe\u7f6e\u4e3a \n/ root\n\uff0c\u5e76\u8f93\u5165 \npython helloworld.py\n \u6765\u6267\u884c\u3002\n\n\n6.\n \u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230 \nHello World !\n  \u6253\u5370\u5728\u63a7\u5236\u53f0\u3002\n\n\nArduino\n\n\n\u5728\u4e3b\u673a\uff08Arduino side\uff09\n\n\nMCU side \u88ab\u4f5c\u4e3a Arduino \u7f16\u8f91\u9875\u9762\u8fdb\u884c\u7a0b\u5e8f\u7f16\u8f91\u3002 \u5728\u672c\u793a\u4f8b\u4e2d\uff0c\u7f16\u8f91\u5668\u4e0a\u7b80\u5355\u5730\u63a5\u6536\u5230\u4ece MPU (Linux) \u7aef\u53d1\u51fa\u7684\u547d\u4ee4\uff0c\u5e76\u76f8\u5e94\u5730\u70b9\u4eae\u677f\u5b50\u4e0a\u7684 LED\u3002\n\n\n1.\n \u9996\u5148\uff0c\u5c06 LinkIt Smart 7688 Duo \u8fde\u63a5\u5230 PC\uff0c\u7136\u540e\u6253\u5f00 Arduino IDE\uff0c\u5e76\u5c06\u4ee5\u4e0b\u4ee3\u7801\u7c98\u8d34\u5230IDE\u4e2d\uff1a\n\n\nvoid setup() {\n    Serial.begin(115200); // open serial connection to USB Serial port (connected to your computer)\n    Serial1.begin(57600); // open internal serial connection to MT7688\n    // in MT7688, this maps to device\n    pinMode(13, OUTPUT);\n}\nvoid loop() {\n    int c = Serial1.read(); // read from MT7688\n    if (c != -1) {\n        switch(c) {\n        case \n0\n: // turn off D13 when receiving \n0\n\n            digitalWrite(13, 0);\n            break;\n        case \n1\n: // turn off D13 when receiving \n1\n\n            digitalWrite(13, 1);\n            break;\n        }\n    }\n}\n\n\n\n\n2.\n \u7136\u540e\u4ece IDE \u4e2d\u9009\u62e9\u6b63\u786e\u7684 COM \u7aef\u53e3\uff08\u68c0\u67e5\u8bbe\u5907\u7ba1\u7406\u5668\uff09\uff0c\u65b9\u6cd5\u662f\u5355\u51fb \nTools(\u5de5\u5177) - \nport(\u7aef\u53e3)\n\u3002\n\n\n3.\n \u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u7535\u8def\u677f\u3002 \u8bf7\u6ce8\u610f\uff0c\u7535\u8def\u677f\u4e0a\u7684\u706f\u5c1a\u672a\u95ea\u70c1 - \u60a8\u9700\u8981\u5728 Linux \u7aef\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u4f7f\u5176\u95ea\u70c1\uff0c\u8fd9\u662f\u4e0b\u4e00\u6b65\u3002\n\n\n\n\n\u5728\u5f00\u53d1\u677f\uff08Linux\u7aef\uff09\n\n\n1.\n \u4f7f\u7528\u60a8\u9009\u62e9\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff08\u4e00\u4e2aPython\u6587\u4ef6\uff09\uff0c\u7136\u540e\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\u5e76\u4fdd\u5b58\u3002\n\n\nimport serial\nimport time\ns = None\ndef setup():\n    global s\n# open serial COM port to /dev/ttyS0, which maps to UART0(D0/D1)\n# the baudrate is set to 57600 and should be the same as the one\n# specified in the Arduino sketch uploaded to ATmega32U4.\ns = serial.Serial(\n/dev/ttyS0\n, 57600)\ndef loop():\n# send \n1\n to the Arduino sketch on ATmega32U4.\n# the sketch will turn on the LED attached to D13 on the board\ns.write(\n1\n)\ntime.sleep(1)\n# send \n0\n to the sketch to turn off the LED\ns.write(\n0\n)\ntime.sleep(1)\nif __name__ == \n__main__\n:\nsetup()\nwhile True:\nloop()\n\n\n\n\n2.\n \u5728\u7cfb\u7edf\u63a7\u5236\u53f0\u4e2d\u6267\u884c\u6b64 Python \u7a0b\u5e8f - \u8be5\u7a0b\u5e8f\u57fa\u672c\u4e0a\u5c06 1 \u548c 0 \u7684\u5b57\u7b26\u4e32\u5199\u5165\u5e76\u6620\u5c04\u5230 Arduino \u7684 Serial1 \u63a5\u53e3\u7684/ dev / ttyS0 \u7aef\u53e3\u4e0a\u3002 \u5728\u4e0a\u4e00\u8282\u4e2d\u4e0a\u4f20\u7684 Arduino \u4e32\u53e3\u754c\u9762\u4e0a\u5c06\u6536\u5230\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u76f8\u5e94\u5730\u8ba9\u677f\u4e0a\u7684 LED \u95ea\u70c1\u3002\n\n\n\u60a8\u73b0\u5728\u53ef\u4ee5\u6269\u5c55 Arduino \u7f16\u8f91\u9875\u9762\u6765\u9a71\u52a8\u5176\u4ed6\u8bbe\u5907\uff0c\u5982 PWM\uff0cI2C \u8bbe\u5907\uff0c\u5e76\u901a\u8fc7\u6269\u5c55 Arduino \u548c Linux \u7aef\u4e4b\u95f4\u7684\u547d\u4ee4\u6d88\u606f\u6765\u540c\u6b65\u72b6\u6001\u3002 \u5982\u679c\u9700\u8981\u66f4\u591a\u7684\u5916\u8bbe\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5916\u90e8\u5e93\u6765\u5b9e\u73b0\u901a\u4fe1\u534f\u8bae\u3002 \u8fd9\u6837\u7684\u534f\u8bae - Firmata \u5728\u4e0b\u9762\u7684\u90e8\u5206\u63cf\u8ff0\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nHardware Schematic files\n\n\nManual\n\n\nOpenWrt\n\n\nMediaTek LinkIt? Smart 7688 Resources:\n\n\nHow to flash the firmware via a USB drive\n\n\nCertificates", 
            "title": "LinkIt Smart 7688_Duo"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_1", 
            "text": "580 MHz MIPS CPU  \u5355\u8f93\u5165\u3001\u5355\u8f93\u51fa\uff081T1R\uff09Wi-Fi 802.11 b / g / n\uff082.4G\uff09  \u9488\u5bf9 GPIO\uff0cI2C\uff0cI2S\uff0cSPI\uff0cSPIS\uff0cUART\uff0cPWM \u548c\u4ee5\u592a\u7f51\u7aef\u53e3\u5f15\u811a  32MB \u95ea\u5b58\u548c 128MB DDR2 RAM  \u80fd\u591f\u901a\u8fc7 USB \u6570\u636e\u7ebf\u8fde\u63a5\u4e3b\u673a  \u5177\u6709 Micro SD \u63d2\u69fd  \u652f\u6301 Arduino API\uff08ATmega32U4\uff09", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_2", 
            "text": "IoT /\u7f51\u5173\u8bbe\u5907  \u673a\u5668\u4eba", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_3", 
            "text": "MPU  \u82af\u7247\u7ec4\uff1aMT7688AN  \u6838\u5fc3\uff1aMIPS24KEc  \u65f6\u949f\u901f\u5ea6\uff1a580MHz  \u5de5\u4f5c\u7535\u538b\uff1a3.3V    MCU  \u82af\u7247\u7ec4\uff1aATmega32U4  \u6838\u5fc3\uff1aAtmel AVR  \u65f6\u949f\u901f\u5ea6\uff1a8MHz  \u5de5\u4f5c\u7535\u538b\uff1a3.3V    \u5b58\u50a8  Flash\uff1a32MB  RAM\uff1a128MB DDR2    GPIO  \u9488\u6570\uff1a3\uff08MT7688AN\uff09\uff0c24\uff08ATmega32U4\uff09  \u7535\u538b\uff1a3.3V    PWM  \u9488\u6570\uff1a8\uff08Atmega32U4\uff09  \u7535\u538b\uff1a3.3V  \u6700\u5927\u5206\u8fa8\u7387\uff1a16\u4f4d\uff08\u53ef\u5b9a\u5236\uff09    ADC  \u9488\u657012\uff08ATmega32U4\uff09  \u5206\u8fa8\u7387\uff1a10\u4f4d    \u5916\u90e8\u4e2d\u65ad\uff1a8  SPI / SPIS  \u9488\u53f7\uff1aS0\uff0cS1\uff0cS2\uff0cS3  \u6700\u5927\u901f\u5ea6\uff1a4MHz    I2C  \u9488\u6570\uff1aD2 / D3  \u901f\u5ea6\uff1a400KHz    UART Lite  \u4e00\u4e2a\u4e3a ATmega32U4\uff0c\u53e6\u4e00\u4e2a\u4e3a MT7688AN  \u9488\u53f7\uff1aP8 / P9\uff08MT7688AN\uff09\uff0cD\u200b\u200b0 / D1\uff08ATmega32U4\uff09    USB\u4e3b\u673a  \u9488\u6570\uff1aP6 / P7  \u8fde\u63a5\u5668\u7c7b\u578b\uff1aMicro-AB    \u901a\u4fe1  Wi-Fi\uff1a1T1R 802.11 b / g / n\uff082.4G\uff09  \u4ee5\u592a\u7f51\uff1a1\u7aef\u53e310/100 FE PHY  \u9488\u6570\uff1aP2 / P3 / P4 / P5    \u7528\u6237\u5b58\u50a8\uff1aSD\u5361Micro SD / SDXC  \u5c3a\u5bf8\uff1a60.8x26.0mm", 
            "title": "\u89c4\u8303"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_4", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u51b5"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_6", 
            "text": "Note  \u624b\u518c\u4e2d\u4ecb\u7ecd\u4e86\u4e24\u79cd\u65b9\u6cd5\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u663e\u793a\u4e00\u4e2a\u5148\u8fdb\u7684\u65b9\u6cd5\uff08\u4f7f\u7528USB\u4e32\u884c\u5230\u9002\u914d\u5668\uff09\uff0c\u770b\u8d77\u6765\u6709\u70b9\u56f0\u96be\u3002 \u4f46\u662f\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u4f60\u4f1a\u53d7\u76ca\u532a\u6d45\u3002", 
            "title": "\u8fde\u63a5\u5230\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_7", 
            "text": "LinkIt Smart 7688 x 1  USB\u6570\u636e\u7ebf\uff08type A to micro type-B\uff09x 1  USB \u4e32\u884c\u63a5\u53e3x 1  \u8df3\u7ebfx 3", 
            "title": "\u6240\u9700\u6750\u6599"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#windows", 
            "text": "1  \u5b89\u88c5  PuTTy \u3002 PuTTY \u63d0\u4f9b\u4f7f\u7528 SSH\uff08Secure Socket Shell\uff09\u7684\u7cfb\u7edf\u63a7\u5236\u53f0\u73af\u5883\u6765\u8bbf\u95ee\u5f00\u53d1\u677f\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002  2  \u5b89\u88c5  Bonjour   \u6253\u5370\u670d\u52a1\uff08\u9002\u7528\u4e8eWindows 7\uff0cWindows 8\uff0cWindows 10\uff09\u3002  3  \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f \u5982\u679c\u60a8\u4f7f\u7528\u57fa\u4e8e FTDI \u82af\u7247\u7684 USB \u6570\u636e\u7ebf\uff0c\u8bf7\u4ece  \u8fd9\u91cc  \u4e0b\u8f7d\u5e76\u5b89\u88c5\u5176\u9a71\u52a8\u7a0b\u5e8f\u3002 \u5982\u679c\u60a8\u9047\u5230\u6700\u65b0\u9a71\u52a8\u7a0b\u5e8f\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u5b89\u88c5\n  \u65e7\u7248\u672c \u3002  4  \u63a5\u4e0b\u6765\uff0c\u60a8\u9700\u8981\u5c06 Serial-to-USB \u8fde\u63a5\u5230 LinkIt Smart 7688 \u7684UART\u5f15\u811a\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a     \u5728USB\u9002\u914d\u5668\u4e0a\u7684\u5f15\u811a  \u5728LinkIt Smart 7688\u4e0a\u8fde\u63a5\u76f8\u5e94\u7684\u5f15\u811a      \u5f15\u811a RX  \u5f15\u811a 8    \u5f15\u811a TX  \u5f15\u811a 9    \u5f15\u811a GND  \u5f15\u811a GND      5  \u8fde\u63a5\u4e32\u884c\u5230 USB \u6570\u636e\u7ebf\u540e\uff0c\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u5e76\u6ce8\u610f  COM  \u7aef\u53e3\u53f7\uff0c\u5982\u56fe22\u6240\u793a\u3002\u8be5\u6570\u5b57\u53ef\u80fd\u56e0\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u800c\u5f02\u3002   6  \u542f\u52a8 PuTTY \u7ec8\u7aef\uff0c\u8f93\u5165\u8bbe\u5907\u7ba1\u7406\u5668\u4e2d USB \u8bbe\u5907\u7684 COM \u7aef\u53e3\u53f7\uff0c\u5355\u51fb\u201c\u4e32\u53e3\u201d\u6309\u94ae\uff0c\u5728\u201c\u901f\u5ea6\u201d\u6846\u4e2d\u8f93\u516557600\uff0c\u5355\u51fb\u201c\u6253\u5f00\u201d\uff0c\u5982\u56fe23\u6240\u793a\u3002   7  \u8981\u9000\u51fa\u7cfb\u7edf\u63a7\u5236\u53f0\uff0c\u8bf7\u5355\u51fb PuTTY \u7a97\u53e3\u53f3\u4e0a\u89d2\u7684\u5173\u95ed\u56fe\u6807\u3002", 
            "title": "\u5728 Windows \u4e0a"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#mac", 
            "text": "1  \u5982\u679c\u9700\u8981\uff0c\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u8bf7\u67e5\u9605\u6570\u636e\u7ebf\u5236\u9020\u5546\u7684\u7f51\u7ad9\u4e86\u89e3 Mac \u4e0a\u7684\u9a71\u52a8\u7a0b\u5e8f\u8981\u6c42\u548c\u5b89\u88c5\u8bf4\u660e\u3002  2.  \u5c06\u6570\u636e\u7ebf\u63d2\u5165PC /\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u5e76\u5c06\u8fde\u63a5\u7ebf\u8fde\u63a5\u5230 LinkIt Smart 7688\u3002  3  \u6253\u5f00\u7ec8\u7aef\u4f1a\u8bdd\u3002  4  \u5728\u7ec8\u7aef\u4e2d\u8f93\u5165  ls / dev / cu* \u3002 \u60a8\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002 \u5bfb\u627e\u7c7b\u4f3c\u4e8e cu.usbserial-XXXXXXXX \u7684\u4e1c\u897f\uff0c\u5176\u4e2d XXXXXXXX \u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002 \u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002  \u4f8b\u5982:  $ls /dev/cu*\n\n/dev/cu.Bluetooth-Incoming-Port\n\n/dev/cu.Bluetooth-Modem\n\n/dev/cu.pablop-WirelessiAP\n\n/dev/cu.usbserial-A6YMCQBR  5.  \u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600\u3002 \u4f8b\u5982\uff1a $screen /dev/cu.usbserial-XXXXXXXX 57600  6.  \u73b0\u5728\u60a8\u5e94\u8be5\u8fde\u63a5\u5230\u7cfb\u7edf\u63a7\u5236\u53f0\u3002 \u5728\u7ec8\u7aef\u4e2d\u6309 ENTER \u952e\u663e\u793a\u63d0\u793a\u3002 \u60a8\u5c06\u6ce8\u610f\u5230\uff0c\u63d0\u793a\u4e0e\u60a8\u7684 OSX \u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f\u4e0d\u540c\uff0c\u5b83\u662f LinkIt Smart 7688 \u63d0\u793a\u7b26\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a   root@myLinkIt:/#  7.  \u60a8\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a7\u5236\u53f0\u66f4\u6539 LinkIt Smart 7688 \u7cfb\u7edf\u3002", 
            "title": "\u5728 Mac \u4e0a"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#linux", 
            "text": "1.  \u5982\u679c\u9700\u8981\uff0c\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u8bf7\u67e5\u770b\u6570\u636e\u7ebf\u5236\u9020\u5546\u7684\u7f51\u7ad9\u4e86\u89e3 Linux \u4e0a\u7684\u9a71\u52a8\u7a0b\u5e8f\u8981\u6c42\u548c\u5b89\u88c5\u8bf4\u660e\u3002  2.  \u63d2\u5165\u6570\u636e\u7ebf\u5e76\u5c06\u7535\u7f06\u8fde\u63a5\u5230 LinkIt Smart 7688 Duo\u3002  3.  \u6253\u5f00\u7ec8\u7aef\u4f1a\u8bdd\u3002  4.  \u5728\u7ec8\u7aef\u4e2d\u8f93\u5165  ls / dev / ttyUSB  \u3002 \u60a8\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002 \u5bfb\u627e\u7c7b\u4f3c\u4e8e cu.usbserial-XXXXXXXX \u7684\u4e1c\u897f\uff0c\u5176\u4e2d XXXXXXXX \u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002 \u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002 \u4f8b\u5982\uff1a $ls /dev/ttyUSB*\n/dev/ttyUSB0 \n**5.  \u4f7f\u7528 **\u5c4f\u5e55*  \u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u884c\u7aef\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a **57600 \u3002 \u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600\u3002 \u4f8b\u5982\uff1a $sudo screen /dev/ttyUSB0 57600 \n  6.  \u73b0\u5728\u60a8\u5e94\u8be5\u8fde\u63a5\u5230\u7cfb\u7edf\u63a7\u5236\u53f0\u3002 \u5728\u7ec8\u7aef\u4e2d\u6309 ENTER \u952e\u663e\u793a\u63d0\u793a\u3002 \u60a8\u5c06\u6ce8\u610f\u5230\uff0c\u63d0\u793a\u5df2\u6210\u4e3a\u4e0d\u540c\u7684\u5e38\u89c4\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u662f LinkIt Smart 7688 \u63d0\u793a\u7b26\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a   root@myLinkIt:/#  7.  \u60a8\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a7\u5236\u53f0\u66f4\u6539 LinkIt Smart 7688\u7cfb\u7edf\u3002", 
            "title": "\u5728 Linux \u4e0a"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#blink", 
            "text": "", 
            "title": "\u8fd0\u884c Blink \u793a\u4f8b"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_8", 
            "text": "LinkIt Smart 7688 x 1  USB\u6570\u636e\u7ebf\uff08type A to micro type-B\uff09x 1  USB\u8fde\u63a5\u5230\u4e32\u884c\u9002\u914d\u5668x 1  \u8df3\u7ebfx 3", 
            "title": "\u6240\u9700\u6750\u6599"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#blink_1", 
            "text": "1.  \u4f7f\u7528 micro USB \u6570\u636e\u7ebf\u6253\u5f00\u7535\u8def\u677f\uff08\u4ec5\u8fde\u63a5 USB \u7535\u6e90\u63a5\u53e3\uff0c\u800c\u4e0d\u662f USB \u4e3b\u673a\u63a5\u53e3\uff09\u3002  2.  \u542f\u52a8 PuTTy \u5e76\u4f7f\u7528 USB \u6570\u636e\u7ebf\u8fde\u63a5\u81f3\u4e32\u884c\u9002\u914d\u5668\u518d\u8fde\u63a5\u5230\u7cfb\u7edf\uff0c\u5982\u524d\u51e0\u8282\u6240\u793a\u3002   3.  \u8f93\u5165  python /IoT/examples/blink-gpio44.py \uff0c\u7136\u540e\u6309  Enter  \u4ee5\u8fd0\u884c Blink \u793a\u4f8b\u3002   Note  \u8bf7\u6ce8\u610f\uff0c\u5728\u7b2c\u4e00\u4e2a\u5355\u8bcd\u201cpython\u201d\u4e4b\u540e\u67091\u4e2a\u7a7a\u683c\uff0c\u5426\u5219\u5c06\u4e0d\u4f1a\u627e\u5230\u8be5\u793a\u4f8b\u3002   4.  \u5927\u7ea62\u79d2\u949f\u540e\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230 Wifi LED \u7a33\u5b9a\u95ea\u70c1\u3002  5.  \u5728\u7cfb\u7edf\u63a7\u5236\u53f0\u4e2d\uff0c\u8f93\u5165  CTRL + C \uff0c\u8fd9\u5c06\u7ec8\u6b62\u793a\u4f8b\u3002", 
            "title": "\u8fd0\u884c Blink"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_9", 
            "text": "\u6709\u4e24\u79cd Wi-Fi \u6a21\u5f0f\uff1aAP\u6a21\u5f0f\u548c\u7ad9\u6a21\u5f0f\u3002 \u8bf7\u53c2\u8003\u8fd9\u91cc\u7684\u5dee\u5f02\u3002  1.  \u4f7f\u7528 micro USB \u6570\u636e\u7ebf\u6253\u5f00\u7535\u8def\u677f\u3002  2.  \u6253\u5f00\u8ba1\u7b97\u673a\u4e0a\u7684 Wi-Fi \u8fde\u63a5\u7684\u7a0b\u5e8f\uff0c\u5e76\u8fde\u63a5\u5230\u540d\u4e3a LinkIt_Smart_7688_XXXXXX \u7684\u63a5\u5165\u70b9\u3002 XXXXXX \u662f\u4e00\u79cd\u4e0d\u540c\u786c\u4ef6\u7684\u6807\u8bc6\u7b26\uff0c\u5404\u79cd\u677f\u6709\u5404\u79cd\u677f\u7684\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\u3002   3.  \u6253\u5f00\u5e26\u6709 mylinkit.local / \u6216 192.168.100.1 \u7f51\u5740\u7684\u6d4f\u89c8\u5668\uff0c\u8bbe\u7f6e root \u7684\u5bc6\u7801\u5e76\u767b\u5f55\u3002\u5355\u51fb\u53f3\u4e0a\u89d2\u7684\u201c\u7f51\u7edc\u201d\u3002   4.  \u9009\u62e9\u7ad9\u6a21\u5f0f\uff0c\u7136\u540e\u5355\u51fb\u53f3\u4fa7\u7684\u5237\u65b0\u6216\u5411\u4e0b\u7bad\u5934\u4ee5\u67e5\u627e\u8981\u8fde\u63a5\u7684 AP\u3002 \u9009\u62e9 AP \u540e\uff0c\u5982\u679c\u9700\u8981\uff0c\u8bf7\u8f93\u5165\u5bc6\u7801\u3002 \u5355\u51fb\u914d\u7f6e\u5e76\u91cd\u65b0\u542f\u52a8\u5b8c\u6210\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u7136\u540e\u7b49\u5f85\u7ea6 30 \u79d2\u949f\u53ef\u4ee5\u5207\u6362\u6a21\u5f0f\u3002   5.  \u542f\u52a8 PuTTy\uff0c\u5e76\u4f7f\u7528 USB \u4e32\u884c\u9002\u914d\u5668\u8fde\u63a5\u5230\u7cfb\u7edf\uff0c\u5982\u4e0a\u4e00\u8282\u6240\u793a\u3002  6.  \u952e\u5165 ifconfig \u5e76\u627e\u5230 inet addr \u7684IP\u5730\u5740\uff0c\u5982\u4e0b\u6240\u793a\uff1a    Note  \u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u540e\u4ecd\u5c06\u8fdb\u5165\u201c\u7ad9\u201d\u6a21\u5f0f\u3002 \u6309 Wi-Fi \u6309\u94ae\u81f3\u5c11 5 \u79d2\u949f\u5207\u6362\u56de AP\u6a21\u5f0f\u3002 \u6ce8\u610f\uff1a\u9700\u8981\u4f7f\u7528 reboot \u547d\u4ee4\u91cd\u542f\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\u3002   7.  \u5728\u6d4f\u89c8\u5668\u7684\u65b0 Tab \u4e2d\u8f93\u5165 IP\uff0c\u60a8\u53ef\u4ee5\u767b\u5f55\u5230 Web \u7528\u6237\u754c\u9762\u914d\u7f6e\u7cfb\u7edf\u3002  8.  \u73b0\u5728\u4e3b\u673a\u548c LinkIt Smart 7688 \u90fd\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002 \u5728\u63a7\u5236\u53f0\u4e2d\u8f93\u5165 ping  www.mediatek.com \uff0c\u60a8\u5c06\u5f97\u5230\uff1a   9.  \u73b0\u5728\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e92\u8054\u7f51\u5728\u5f00\u53d1\u677f\u4e0a\u914d\u7f6e\u7cfb\u7edf\u3002", 
            "title": "\u8fde\u63a5\u5230\u4e92\u8054\u7f51\uff08\u5207\u6362\u5230\u7ad9\u6a21\u5f0f\uff09"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#arduino", 
            "text": "\u8be5\u5f00\u53d1\u677f\u5177\u6709\u4e0e Arduino \u517c\u5bb9\u7684\u529f\u80fd\u3002 \u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u5c06 Arduino \u4ee3\u7801\u5e94\u7528\u4e8e 7688 \u5e73\u53f0\uff0c\u4ece\u800c\u4f7f\u5f00\u53d1\u6d41\u7a0b\u66f4\u52a0\u5feb\u6377\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u6784\u5efa Arduino \u7f16\u7a0b\u73af\u5883\u3002", 
            "title": "\u5b89\u88c5 Arduino \u7f16\u7a0b\u73af\u5883"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#arduino-ide", 
            "text": "\u60a8\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Arduino IDE 1.6.5\u3002  \u4e3a LinkIt Smart 7688 \u5e73\u53f0\u914d\u7f6e Arduino IDE", 
            "title": "\u4e0b\u8f7d\u5e76\u5b89\u88c5 Arduino IDE"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_10", 
            "text": "Arduino IDE 1.6.5\u652f\u6301\u4f7f\u7528  Board Manager  \u5de5\u5177\u8fdb\u884c\u7b2c\u4e09\u65b9\u677f\u96c6\u6210\u3002 LinkIt Smart 7688 \u5f00\u53d1\u677f\u662f Arduino IDE \u7684\u63d2\u4ef6\uff0c\u60a8\u9700\u8981\u5b89\u88c5\u677f\u5361\uff0c\u4ee5\u4fbf Arduino \u652f\u6301 LinkIt \u677f\u5361\u3002 \u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff1a  1  \u5728 Arduino IDE \u4e2d\uff0c\u5728\u6587\u4ef6\u83dc\u5355\u4e0a\u5355\u51fb\u9996\u9009\u9879\uff0c\u7136\u540e\u63d2\u5165  http://download.labs.mediatek.com/package_mtk_linkit_smart_7688_test_index.json  \u5230\u9644\u52a0\u677f\u7ba1\u7406\u5668 URL \u5b57\u6bb5\uff1a   2.  \u786e\u4fdd\u60a8\u7684\u8ba1\u7b97\u673a\u5df2\u8fde\u63a5\u5230\u4e92\u8054\u7f51  \u4e0b\u8f7d   LinkIt \uff0c\u89e3\u538b\u7f29\u5b83\uff0c\u5e76\u5c06\u6587\u4ef6\u590d\u5236\u5230\u6587\u4ef6\u5939  packages \uff0c\u5b83\u83b7\u5f97\u76f8\u540c\u7684\u4f4d\u7f6e \u4e0e\u6587\u4ef6  Preferences.txt \u3002 \u70b9\u51fb\u4ee5\u4e0b\u7ea2\u8272\u77e9\u5f62\u6807\u8bb0\u90e8\u5206\u6253\u5f00  Preferences.txt  \u7684\u6587\u4ef6\u4f4d\u7f6e\u3002   3.  \u5728Arduino  \u5de5\u5177  \u83dc\u5355\u4e2d\u6307\u5411  \u677f \u3002  4.  \u73b0\u5728\u5e94\u8be5\u6709\u4e00\u4e2a LinkIt Smart 7688 \u9879\u76ee\u51fa\u73b0\u5728 Boards Manager \u7684\u4e3b\u677f\u5217\u8868\u4e2d\uff0c\u5e76\u9009\u62e9\u5e26\u6709  COMxx  \uff08 LinkIt Smart 7688 Duo \uff09\u7684\u7aef\u53e3\u3002   5.  \u5b89\u88c5\u5b8c\u6210\u3002", 
            "title": "\u5b89\u88c5\u5f00\u53d1\u677f\u652f\u6301\u5305"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#linkit-smart-7688-duo-com", 
            "text": "\u5b89\u88c5\u677f\u5305\u4e4b\u540e\uff0c\u5c06 LinkIt Smart 7688 Duo \u8fde\u63a5\u5230\u8ba1\u7b97\u673a\uff0c\u60a8\u5e94\u8be5\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u4e2d\u770b\u5230\u4e00\u4e2a\u5e26\u6709\u4ee5\u4e0b\u7aef\u53e3 ID \u7684 USB \u4e32\u884c\u7aef\u53e3\uff1a   \u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8fCOM \u7aef\u53e3\uff1aVID = 0x0E8D\uff0cPID = 0xAB00  Arduino Sketch COM \u7aef\u53e3\uff1aVID = 0x0E8D\uff0cPID = 0xAB01   \u63a5\u4e0b\u6765\uff0c\u60a8\u5c06\u9700\u8981\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u6b65\u9aa4\u662f\uff1a   Note  \u5bf9\u4e8e Windows 10\uff0c\u65e0\u9700\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 \u4f46\u662f\uff0c\u9700\u8981\u989d\u5916\u7684\u6b65\u9aa4\u6765\u786e\u4fdd Windows 10 \u8bc6\u522b\u51fa\u8be5\u677f\u3002 \u5c06 LinkIt Smart 7688 Duo \u8fde\u63a5\u5230 Windows 10 \u673a\u5668\uff0c\u7136\u540e\u5728 700 \u6beb\u79d2\u5185\u5feb\u901f\u6309\u4e0b MCU \u590d\u4f4d\u6309\u94ae\u4e24\u6b21\u3002 \u8be5\u7cfb\u7edf\u73b0\u5728\u5e94\u8be5\u5c06 LinkIt Smart 7688 Duo \u8bc6\u522b\u4e3a USB\u4e32\u884c\u8bbe\u5907\uff08COM5\uff09\u3002 \u4e0d\u540c\u673a\u5668\u4e0a\u7684\u6570\u5b575\u53ef\u80fd\u4e0d\u540c\u3002 \u60a8\u53ea\u9700\u8981\u7b2c\u4e00\u6b21\u5c06\u8be5\u7535\u8def\u677f\u8fde\u63a5\u5230 Windows \u673a\u5668\u4e0a\u5373\u53ef\u3002    Note  \u5bf9\u4e8e Windows 8\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u963b\u6b62\u9a71\u52a8\u7a0b\u5e8f\u7684\u5b89\u88c5\u3002 \u8bf7\u5728 Windows 8 \u4e0a\u7981\u7528\u9a71\u52a8\u7a0b\u5e8f\u7b7e\u540d\u5f3a\u5236\u3002\u7981\u7528\u7b7e\u540d\u5f3a\u5236\u540e\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b Windows 7 \u4e2d\u7684\u6b65\u9aa4\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002    Note  \u5bf9\u4e8eWindows 7\uff0c\u8bf7\u5728\u4ee5\u4e0b\u8def\u5f84\u4e2d\u627e\u5230\u4e32\u884cCOM\u7aef\u53e3INF\u9a71\u52a8\u7a0b\u5e8f\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4ece\u8fd9\u91cc\u5b89\u88c5\u3002   {ARDUINO_IDE_PREFERENCE_LOCATION}Arduino15/packages/LinkIt/hardware/avr/0.1.5/driver/linkit_smart_7688.inf  \u60a8\u5c06\u5728  File\uff08\u6587\u4ef6\uff09 -  Preferences\uff08\u9996\u9009\u9879\uff09  \u4e2d\u627e\u5230 Arduino \u9996\u9009\u9879\u4f4d\u7f6e\uff0c\u8bf7\u53c2\u9605  preferences.txt\u8def\u5f84 \u3002   \u53f3\u952e\u5355\u51fb linkit_smart_7688.inf \u5e76\u9009\u62e9\u5b89\u88c5\uff0c\u51fa\u73b0\u5b89\u5168\u7a97\u53e3\uff0c \u5355\u51fb\u5b89\u88c5\u6b64\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6 \u3002 \u8fd9\u5b8c\u6210\u4e86\u9a71\u52a8\u7a0b\u5e8f\u7684\u5b89\u88c5\u3002    \u5bf9\u4e8eUbuntu Linux\uff0c\u5b83\u5e94\u8be5\u6ca1\u6709\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 LinkIt Smart 7688 \u5e94\u8be5\u5728/ dev\u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u5b89\u88c5\u4e3a ttyUSB0\u3002 \u6bcf\u4e2a Ubuntu \u673a\u5668\u4e0a\u7684  \u6570\u5b570  \u53ef\u80fd\u4e0d\u540c\u3002  \u5bf9\u4e8e OS X\uff0c\u4e5f\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\uff0cLinkIt Smart 7688 Duo \u4f5c\u4e3a\u4e32\u884c\u8bbe\u5907\u5b89\u88c5\u5728/ dev / tty.usbmodem1413 \u4e0b\u3002 \u6bcf\u4e2aOS X \u673a\u5668\u4e0a\u7684\u53f7\u7801 1413 \u53ef\u80fd\u4e0d\u540c\u3002", 
            "title": "\u5b89\u88c5 LinkIt Smart 7688 Duo COM \u7aef\u53e3\u9a71\u52a8\u7a0b\u5e8f"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#hello-world", 
            "text": "Note  \u4e3a\u4e86\u907f\u514d\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4e2d\u7684\u5185\u5b58\u4e0d\u8db3\uff0c\u60a8\u5e94\u8be5\u5728\u66f4\u5f3a\u5927\u7684\u4e3b\u673a\u73af\u5883\u4e2d\u8bbe\u7f6e\u672c\u673a\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u5f00\u53d1\u73af\u5883\uff0c\u4ece\u800c\u4f7f\u60a8\u80fd\u591f\u4ea4\u53c9\u7f16\u8bd1 LinkIt Smart 7688 \u76ee\u6807\u7684\u53ef\u6267\u884c\u683c\u5f0f\u3002 \u4e0b\u8868\u663e\u793a\u4e86 LinkIt Smart 7688 \u7f16\u7a0b\u8bed\u8a00\u548c\u4e3b\u673a\u4e0a\u76f8\u5173\u5f00\u53d1\u73af\u5883\u7684\u6982\u8ff0\u3002", 
            "title": "\u6f14\u793a: \u4e00\u4e2a\u8f93\u51fa Hello world \u7684\u4f8b\u5b50"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#python", 
            "text": "1.  \u4f7f\u7528 FileZilla \u53c2\u8003\u8fd9\u4e2a tutorial \uff0c\u670d\u52a1\u5668IP\uff08\u66ff\u6362  \u4e3b\u673a\u540d \uff09\u7684\u5730\u5740\u662f inet addr \u5728\u4ee5\u524d\u7684 \u5207\u6362\u5230station\u6a21\u5f0f \u90e8\u5206\u4e2d\u627e\u5230\uff0c\u7528\u6237\u540d\u662f root\uff0c\u5bc6\u7801\u662f\u8be5\u90e8\u5206\u4e2d\u8bbe\u7f6e\u7684\u5bc6\u7801\u3002  2.  \u6253\u5f00\u6587\u672c\u7f16\u8f91\u5668\uff0c\u590d\u5236\u5e76\u7c98\u8d34\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\uff0c\u5e76\u5c06\u5176\u4fdd\u5b58\u4e3a  helloworld.py  \u3002 print  Hello World!  \n**3.  \u4f7f\u7528 FileZilla \u5c06\u6587\u4ef6 **helloworld.py  \u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u73af\u5883\uff08LinkIt Smart 7688\uff09\u7684\u7cfb\u7edf\u4e2d\uff0c\u5c06\u5176\u653e\u5728\u6587\u4ef6\u5939  root  \u4e0b\u3002  4.  \u542f\u52a8 PuTTy \u5e76\u4f7f\u7528 USB\u8fde\u63a5\u5230\u4e32\u884c\u9002\u914d\u5668\u8fde\u63a5\u5230\u7cfb\u7edf\u3002  5.  \u5c06\u5de5\u4f5c\u76ee\u5f55\u8bbe\u7f6e\u4e3a  / root \uff0c\u5e76\u8f93\u5165  python helloworld.py  \u6765\u6267\u884c\u3002  6.  \u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230  Hello World !   \u6253\u5370\u5728\u63a7\u5236\u53f0\u3002", 
            "title": "Python"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#arduino_1", 
            "text": "", 
            "title": "Arduino"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#arduino-side", 
            "text": "MCU side \u88ab\u4f5c\u4e3a Arduino \u7f16\u8f91\u9875\u9762\u8fdb\u884c\u7a0b\u5e8f\u7f16\u8f91\u3002 \u5728\u672c\u793a\u4f8b\u4e2d\uff0c\u7f16\u8f91\u5668\u4e0a\u7b80\u5355\u5730\u63a5\u6536\u5230\u4ece MPU (Linux) \u7aef\u53d1\u51fa\u7684\u547d\u4ee4\uff0c\u5e76\u76f8\u5e94\u5730\u70b9\u4eae\u677f\u5b50\u4e0a\u7684 LED\u3002  1.  \u9996\u5148\uff0c\u5c06 LinkIt Smart 7688 Duo \u8fde\u63a5\u5230 PC\uff0c\u7136\u540e\u6253\u5f00 Arduino IDE\uff0c\u5e76\u5c06\u4ee5\u4e0b\u4ee3\u7801\u7c98\u8d34\u5230IDE\u4e2d\uff1a  void setup() {\n    Serial.begin(115200); // open serial connection to USB Serial port (connected to your computer)\n    Serial1.begin(57600); // open internal serial connection to MT7688\n    // in MT7688, this maps to device\n    pinMode(13, OUTPUT);\n}\nvoid loop() {\n    int c = Serial1.read(); // read from MT7688\n    if (c != -1) {\n        switch(c) {\n        case  0 : // turn off D13 when receiving  0 \n            digitalWrite(13, 0);\n            break;\n        case  1 : // turn off D13 when receiving  1 \n            digitalWrite(13, 1);\n            break;\n        }\n    }\n}  2.  \u7136\u540e\u4ece IDE \u4e2d\u9009\u62e9\u6b63\u786e\u7684 COM \u7aef\u53e3\uff08\u68c0\u67e5\u8bbe\u5907\u7ba1\u7406\u5668\uff09\uff0c\u65b9\u6cd5\u662f\u5355\u51fb  Tools(\u5de5\u5177) -  port(\u7aef\u53e3) \u3002  3.  \u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u7535\u8def\u677f\u3002 \u8bf7\u6ce8\u610f\uff0c\u7535\u8def\u677f\u4e0a\u7684\u706f\u5c1a\u672a\u95ea\u70c1 - \u60a8\u9700\u8981\u5728 Linux \u7aef\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u4f7f\u5176\u95ea\u70c1\uff0c\u8fd9\u662f\u4e0b\u4e00\u6b65\u3002", 
            "title": "\u5728\u4e3b\u673a\uff08Arduino side\uff09"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#linux_1", 
            "text": "1.  \u4f7f\u7528\u60a8\u9009\u62e9\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff08\u4e00\u4e2aPython\u6587\u4ef6\uff09\uff0c\u7136\u540e\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\u5e76\u4fdd\u5b58\u3002  import serial\nimport time\ns = None\ndef setup():\n    global s\n# open serial COM port to /dev/ttyS0, which maps to UART0(D0/D1)\n# the baudrate is set to 57600 and should be the same as the one\n# specified in the Arduino sketch uploaded to ATmega32U4.\ns = serial.Serial( /dev/ttyS0 , 57600)\ndef loop():\n# send  1  to the Arduino sketch on ATmega32U4.\n# the sketch will turn on the LED attached to D13 on the board\ns.write( 1 )\ntime.sleep(1)\n# send  0  to the sketch to turn off the LED\ns.write( 0 )\ntime.sleep(1)\nif __name__ ==  __main__ :\nsetup()\nwhile True:\nloop()  2.  \u5728\u7cfb\u7edf\u63a7\u5236\u53f0\u4e2d\u6267\u884c\u6b64 Python \u7a0b\u5e8f - \u8be5\u7a0b\u5e8f\u57fa\u672c\u4e0a\u5c06 1 \u548c 0 \u7684\u5b57\u7b26\u4e32\u5199\u5165\u5e76\u6620\u5c04\u5230 Arduino \u7684 Serial1 \u63a5\u53e3\u7684/ dev / ttyS0 \u7aef\u53e3\u4e0a\u3002 \u5728\u4e0a\u4e00\u8282\u4e2d\u4e0a\u4f20\u7684 Arduino \u4e32\u53e3\u754c\u9762\u4e0a\u5c06\u6536\u5230\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u76f8\u5e94\u5730\u8ba9\u677f\u4e0a\u7684 LED \u95ea\u70c1\u3002  \u60a8\u73b0\u5728\u53ef\u4ee5\u6269\u5c55 Arduino \u7f16\u8f91\u9875\u9762\u6765\u9a71\u52a8\u5176\u4ed6\u8bbe\u5907\uff0c\u5982 PWM\uff0cI2C \u8bbe\u5907\uff0c\u5e76\u901a\u8fc7\u6269\u5c55 Arduino \u548c Linux \u7aef\u4e4b\u95f4\u7684\u547d\u4ee4\u6d88\u606f\u6765\u540c\u6b65\u72b6\u6001\u3002 \u5982\u679c\u9700\u8981\u66f4\u591a\u7684\u5916\u8bbe\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5916\u90e8\u5e93\u6765\u5b9e\u73b0\u901a\u4fe1\u534f\u8bae\u3002 \u8fd9\u6837\u7684\u534f\u8bae - Firmata \u5728\u4e0b\u9762\u7684\u90e8\u5206\u63cf\u8ff0\u3002", 
            "title": "\u5728\u5f00\u53d1\u677f\uff08Linux\u7aef\uff09"
        }, 
        {
            "location": "/LinkIt_Smart_7688_Duo/#_11", 
            "text": "Hardware Schematic files  Manual  OpenWrt  MediaTek LinkIt? Smart 7688 Resources:  How to flash the firmware via a USB drive  Certificates", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/", 
            "text": "Breakout for LinkIt Smart 7688 v2.0\n \u662f\u57fa\u4e8e LinkItTM Smart 7688 \u7684\u5f00\u53d1\u677f\uff0c\u5b83\u662f\u5177\u6709 Grove \u7aef\u53e3\u7684\u96c6\u6210\u6269\u5c55\u677f\u3002 \u8fd9\u79cd\u677f\u5b50\u5c06\u5e2e\u52a9\u521d\u5b66\u8005\u5feb\u901f\u5165\u95e8\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u5e76\u901a\u8fc7\u7b80\u5316\u5e03\u7ebf\u4f7f\u5236\u4f5c\u66f4\u5bb9\u6613\u3002 \u5b83\u914d\u6709 USB\uff0c\u4ee5\u592a\u7f51 \u548c 3.5mm \u97f3\u9891\u7aef\u53e3\uff0c\u5e76\u652f\u6301 I2C\uff0cUART \u7b49\u4e32\u884c\u603b\u7ebf\u3002\n\n\n\n\n\u7248\u672c\u66f4\u65b0\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\u652f\u6301\u72b6\u51b5\n\n\n\u5907\u6ce8\n\n\n\n\n\n\n\n\n\n\n\u7248\u672c 1.0\n\n\n2015\u5e7411\u6708\n\n\n\u652f\u6301\n\n\n\u65e0\n\n\n\n\n\n\n\u7248\u672c 2.0\n\n\n2016\u5e744\u6708\n\n\n\u652f\u6301\n\n\n\u53c2\u8003\u7279\u6027\u66f4\u65b0\n\n\n\n\n\n\n\n\n\u7279\u6027\u66f4\u65b0:\n\n\n\n\n\u652f\u6301\u5f55\u97f3\u529f\u80fd\u3002\n\n\n3.5mm \u624b\u673a\u8fde\u63a5\u5668\uff08\u97f3\u9891\u63d2\u5b54\uff09\uff0c\u652f\u6301 OMTP \u548c CTIA \u534f\u8bae\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u5207\u6362\u4ea4\u6362\u673a\u4f7f\u7528\u4efb\u4e00\u534f\u8bae\u3002 \u5173\u4e8e\u5982\u4f55\u5207\u6362\u534f\u8bae\uff0c\u8bf7\u4e0b\u62c9\u672c\u9875\u9762\u5e76\u9605\u8bfb \n\u5982\u4f55\u5728 OMTP \u548c CTIA \u4e4b\u95f4\u5207\u6362\u624b\u673a\u8fde\u63a5\u5668\u534f\u8bae\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u63a5\u53e3\u4f7f\u5e03\u7ebf\u66f4\u5bb9\u6613\uff0c\u5e76\u5141\u8bb8 Grove \u6a21\u5757\u6269\u5c55\u3002\n\n\nUSB\u4e3b\u673a\n\n\n\u97f3\u9891\u8f93\u51fa\n\n\n\u4ee5\u592a\u7f51\u7aef\u53e3\n\n\n\u6027\u4ef7\u6bd4\u9ad8\n\n\n\u652f\u6301\u5f55\u97f3\u529f\u80fd\n\n\n\u53ef\u5728 OMTP \u548c CTIA \u4e4b\u95f4\u5207\u6362\n\n\n\n\n\u521b\u65b0\u5e94\u7528\n\n\n\n\n\n\nIoT /\u7f51\u5173\u8bbe\u5907\u3002\n\n\n\u673a\u5668\u4eba\n\n\n\u667a\u80fd\u591a\u5a92\u4f53\u8bbe\u5907\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n\n\n\n\n\n\n5.0V\uff08\u5e26 USB \u7535\u6e90\u7aef\u53e3\uff09\n\n\n3.3V\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\u8c03\u8bd5\u5f15\u811a\uff0c\u4ee5\u592a\u7f51\u5f15\u811a \u548c USB A \u7c7b\u4e3b\u673a\u5f15\u811a\u4e0e MT7688 \u8fde\u63a5\uff0c\u5176\u4ed6\u5f15\u811a\u4e0e ATmega32U4 \u8fde\u63a5\u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\n\n\n\n\u786c\u4ef6\n\n\n\u6570\u91cf\n\n\n\u786c\u4ef6\n\n\n\u6570\u91cf\n\n\n\u786c\u4ef6\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\n\u8c03\u8bd5\u7aef\u53e3\n\n\n1\n\n\n\u8033\u673a\u7aef\u53e3\n\n\n1\n\n\n\u8f85\u52a9\u5f15\u811a\n\n\n2\n\n\n\n\n\n\n\u4ee5\u592a\u7f51\u7aef\u53e3\n\n\n1\n\n\n\u5f15\u811a\u5207\u6362\u534f\u8bae\n\n\n6\n\n\nGrove \u8fde\u63a5\u7ebf\n\n\n3\n\n\n\n\n\n\nUSB A\u578b\n\n\n1\n\n\n\u7acb\u4f53\u58f0\u626c\u58f0\u5668\u9a71\u52a8\u63a5\u53e3\n\n\n1\n\n\n\u8033\u673a\u7aef\u53e3\n\n\n1\n\n\n\n\n\n\n\n\n\u5173\u4e8eGrove\u754c\u9762\n\n\n\u5982\u679c\u60a8\u66fe\u7ecf\u4f7f\u7528\u8fc7Seeed\u7684 \nGrove\n \u4ea7\u54c1\uff0c\u90a3\u4e48\u60a8\u5c06\u4f1a\u7231\u4e0a\u8fd9\u79cd\u6a21\u5757\u3002 \u4f7f\u7528\u8fd9\u79cd\u7aef\u53e3\uff0c\u60a8\u53ef\u4ee5\u544a\u522b\u8df3\u7ebf\u548c\u710a\u63a5\u5de5\u4f5c\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u6a21\u5757\u6765\u5b9e\u73b0\u66f4\u5f3a\u5927\u7684\u5e94\u7528\u3002\n\n\n\u5982\u4f55\u5728 OMTP \u548c CTIA \u4e4b\u95f4\u5207\u6362\u624b\u673a\u8fde\u63a5\u5668\u534f\u8bae\n\n\n\n\n\u5982\u679c\u6bd4\u8f83 V1.0 \u548c V2.0 \u7248\u672c\uff0c\u60a8\u53ef\u4ee5\u6ce8\u610f\u5230\u53f3\u4e0b\u89d2\u6709\u516d\u4e2a\u5f15\u811a\u548c\u4e24\u4e2a\u8df3\u7ebf\u5e3d\u3002 \u8fd9\u4e9b\u5f15\u811a\u7528\u4e8e\u5207\u6362\u624b\u673a\u8fde\u63a5\u5668\u534f\u8bae\u3002 \u5f53\u60a8\u5c06\u5fae\u578b\u8df3\u7ebf\uff08\u4e24\u8005\uff09\u8bbe\u7f6e\u4e3a\u5de6\u8fb9\u56db\u4e2a\u5f15\u811a\u65f6\uff0c\u4f7f\u7528\u534f\u8bae OMTP \u3002 \u5f53\u60a8\u5c06\u5fae\u578b\u8df3\u7ebf\uff08\u4e24\u8005\uff09\u8bbe\u7f6e\u4e3a\u53f3\u8fb9\u56db\u4e2a\u5f15\u811a\uff08\u5982\u56fe\u6240\u793a\uff09\u65f6\uff0c\u4f7f\u7528\u534f\u8bae CTIA \u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff1a\nLinkIt Smart 7688 v2.0 \u7684 CTIA OMTP \u4ea4\u6362\u673a Manner.JPG\n\u8bf7\u6ce8\u610f\uff0c\u8981\u4f7f\u7528\u5f55\u97f3\u529f\u80fd\u65f6\uff0c\u60a8\u9700\u8981\u5c06\u677f\u8f7d\u56fa\u4ef6\u66f4\u65b0\u4e3a LinkIt Smart 7688 \u56fa\u4ef6\uff08\u7248\u672cv0.9.2\u4ee5\u4e0a\uff09\u3002\n\n\n\n\n\n\nNote\n\n\n\u7531\u4e8e\u677f\u8f7d\u95ea\u5b58\u7684\u5199\u5165/\u8bfb\u53d6\u901f\u5ea6\u6709\u9650\uff0c\u5efa\u8bae\u60a8\u4f7f\u7528\u5916\u90e8\u5b58\u50a8\u8bbe\u5907\u3002\n\n\n\n\n\u5165\u95e8\n\n\n\n\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c06\u7528 LinkIt Smart 7688 V2.0 \u5236\u4f5c\u4e00\u4e2a\u7b80\u5355MP3\u64ad\u653e\u5668\u3002\n\n\n\u6750\u6599\u51c6\u5907\n\n\n\u9664\u4e86 Linkit Smart 7688 V2.0 \u5916\uff0c\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8fd8\u9700\u8981\u7684\u5176\u4ed6\u6750\u6599\u3002 \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u51c6\u5907\u4e86\u4e00\u5207\uff0c\u6216\u8005\u8bbf\u95eeSeeed \n\u5546\u57ce\n \u6765\u83b7\u53d6\u5b83\u4eec\u3002\n\n\n\n\n\n\n\n\nLinkIt Smart 7688 \u00d7 1\n\n\nUSB\u8fde\u63a5\u7ebf\uff08A\u578b\u3001\u5fae\u578bB\uff09\u00d72\n\n\nUARTBee \u00d7 1\n\n\n\u675c\u90a6\u7ebf \u00d7 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u7acb\u5373\u8d2d\u4e70\n\n\n\u7acb\u5373\u8d2d\u4e70\n\n\n\u7acb\u5373\u8d2d\u4e70\n\n\n\u7acb\u5373\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u786e\u4fdd\u60a8\u51c6\u5907\u597d\u4e0b\u9762\u7684\u4e24\u4e2a\u6750\u6599\n- \u7acb\u4f53\u58f0\u626c\u58f0\u5668\uff083.5mm \u97f3\u9891\u8fde\u63a5\u7ebf\uff09\u00d71\n- USB \u95ea\u5b58\u76d8\uff08\u5185\u7f6e MP3 \u683c\u5f0f\u7684\u97f3\u9891\u6587\u4ef6\uff09\u00d71\n\n\n\u6b65\u9aa4\u4e00:\n  \u8bf7\u53c2\u9605\n\u8fd9\u91cc\n\u5c06 LinkIt Smart 7688 \u8fde\u63a5\u5230 Internet \u3002\n\n\n\n\nNote\n\n\n\u60a8\u53ef\u4ee5\u5c06\u8df3\u7ebf\u8fde\u63a5\u5230 MT7688 UART2 \u7aef\u53e3\uff0c\u800c\u4e0d\u7528\u5c06\u5176\u710a\u63a5\u5230\u5f15\u811a \n8\n \uff0c\u5f15\u811a \n9\n \u548c\u5f15\u811a \nGND\n \u3002\n\n\n\n\n\n\nNote\n\n\n\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u65e0\u6cd5\u6210\u529f\u8fde\u63a5\u5230Internet\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\u3002\n\n\n\n\n\u6b65\u9aa42\uff1a\n \u6253\u5f00 USB \u4e32\u53e3\u7684\u63a7\u5236\u53f0\u3002\n\n\n\u6b65\u9aa43\uff1a\n \u8fde\u63a5\u6240\u6709\u90e8\u4ef6\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n\n\nNote\n\n\n\u8fd9\u662f LinkIt Smart 7688\uff08v1.0\uff09\u7684 Breakout \u6570\u636e\u3002\n\n\n\n\n\u6b65\u9aa44\uff1a\n \u901a\u8fc7\u63a7\u5236\u53f0\u4e2d\u7684 \ncd /Media/USB-A1\n \u7c7b\u578b\u8f93\u5165\u6587\u4ef6\u3002\n\n\n\u6b65\u9aa45\uff1a\n \u901a\u8fc7\u5728\u63a7\u5236\u53f0\u4e2d\u8f93\u5165 \nmadplay filename.mp3\n\uff0c\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f \nMadplay\n \uff08\u5b89\u88c5\u5728 OpenWRT \u4e0a\uff09\u64ad\u653e\u97f3\u4e50\u3002\n\n\n\u6b65\u9aa46\uff1a\n \u73b0\u5728\u4f60\u4f1a\u542c\u5230\u97f3\u4e50\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\nSchematic files\n\n\nLinkIt smart 7688\n\n\nOpenWrt\n\n\nLink to buy a LinkIt Smart 7688", 
            "title": "Breakout for LinkIt Smart 7688 v2.0"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/#_1", 
            "text": "Grove \u63a5\u53e3\u4f7f\u5e03\u7ebf\u66f4\u5bb9\u6613\uff0c\u5e76\u5141\u8bb8 Grove \u6a21\u5757\u6269\u5c55\u3002  USB\u4e3b\u673a  \u97f3\u9891\u8f93\u51fa  \u4ee5\u592a\u7f51\u7aef\u53e3  \u6027\u4ef7\u6bd4\u9ad8  \u652f\u6301\u5f55\u97f3\u529f\u80fd  \u53ef\u5728 OMTP \u548c CTIA \u4e4b\u95f4\u5207\u6362", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/#_2", 
            "text": "IoT /\u7f51\u5173\u8bbe\u5907\u3002  \u673a\u5668\u4eba  \u667a\u80fd\u591a\u5a92\u4f53\u8bbe\u5907", 
            "title": "\u521b\u65b0\u5e94\u7528"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/#_3", 
            "text": "\u8f93\u5165\u7535\u538b  \u5de5\u4f5c\u7535\u538b      5.0V\uff08\u5e26 USB \u7535\u6e90\u7aef\u53e3\uff09  3.3V      Note  \u8c03\u8bd5\u5f15\u811a\uff0c\u4ee5\u592a\u7f51\u5f15\u811a \u548c USB A \u7c7b\u4e3b\u673a\u5f15\u811a\u4e0e MT7688 \u8fde\u63a5\uff0c\u5176\u4ed6\u5f15\u811a\u4e0e ATmega32U4 \u8fde\u63a5\u3002", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/#_4", 
            "text": "\u786c\u4ef6  \u6570\u91cf  \u786c\u4ef6  \u6570\u91cf  \u786c\u4ef6  \u6570\u91cf      \u8c03\u8bd5\u7aef\u53e3  1  \u8033\u673a\u7aef\u53e3  1  \u8f85\u52a9\u5f15\u811a  2    \u4ee5\u592a\u7f51\u7aef\u53e3  1  \u5f15\u811a\u5207\u6362\u534f\u8bae  6  Grove \u8fde\u63a5\u7ebf  3    USB A\u578b  1  \u7acb\u4f53\u58f0\u626c\u58f0\u5668\u9a71\u52a8\u63a5\u53e3  1  \u8033\u673a\u7aef\u53e3  1", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/#grove", 
            "text": "\u5982\u679c\u60a8\u66fe\u7ecf\u4f7f\u7528\u8fc7Seeed\u7684  Grove  \u4ea7\u54c1\uff0c\u90a3\u4e48\u60a8\u5c06\u4f1a\u7231\u4e0a\u8fd9\u79cd\u6a21\u5757\u3002 \u4f7f\u7528\u8fd9\u79cd\u7aef\u53e3\uff0c\u60a8\u53ef\u4ee5\u544a\u522b\u8df3\u7ebf\u548c\u710a\u63a5\u5de5\u4f5c\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u6a21\u5757\u6765\u5b9e\u73b0\u66f4\u5f3a\u5927\u7684\u5e94\u7528\u3002", 
            "title": "\u5173\u4e8eGrove\u754c\u9762"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/#omtp-ctia", 
            "text": "\u5982\u679c\u6bd4\u8f83 V1.0 \u548c V2.0 \u7248\u672c\uff0c\u60a8\u53ef\u4ee5\u6ce8\u610f\u5230\u53f3\u4e0b\u89d2\u6709\u516d\u4e2a\u5f15\u811a\u548c\u4e24\u4e2a\u8df3\u7ebf\u5e3d\u3002 \u8fd9\u4e9b\u5f15\u811a\u7528\u4e8e\u5207\u6362\u624b\u673a\u8fde\u63a5\u5668\u534f\u8bae\u3002 \u5f53\u60a8\u5c06\u5fae\u578b\u8df3\u7ebf\uff08\u4e24\u8005\uff09\u8bbe\u7f6e\u4e3a\u5de6\u8fb9\u56db\u4e2a\u5f15\u811a\u65f6\uff0c\u4f7f\u7528\u534f\u8bae OMTP \u3002 \u5f53\u60a8\u5c06\u5fae\u578b\u8df3\u7ebf\uff08\u4e24\u8005\uff09\u8bbe\u7f6e\u4e3a\u53f3\u8fb9\u56db\u4e2a\u5f15\u811a\uff08\u5982\u56fe\u6240\u793a\uff09\u65f6\uff0c\u4f7f\u7528\u534f\u8bae CTIA \u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff1a\nLinkIt Smart 7688 v2.0 \u7684 CTIA OMTP \u4ea4\u6362\u673a Manner.JPG\n\u8bf7\u6ce8\u610f\uff0c\u8981\u4f7f\u7528\u5f55\u97f3\u529f\u80fd\u65f6\uff0c\u60a8\u9700\u8981\u5c06\u677f\u8f7d\u56fa\u4ef6\u66f4\u65b0\u4e3a LinkIt Smart 7688 \u56fa\u4ef6\uff08\u7248\u672cv0.9.2\u4ee5\u4e0a\uff09\u3002    Note  \u7531\u4e8e\u677f\u8f7d\u95ea\u5b58\u7684\u5199\u5165/\u8bfb\u53d6\u901f\u5ea6\u6709\u9650\uff0c\u5efa\u8bae\u60a8\u4f7f\u7528\u5916\u90e8\u5b58\u50a8\u8bbe\u5907\u3002", 
            "title": "\u5982\u4f55\u5728 OMTP \u548c CTIA \u4e4b\u95f4\u5207\u6362\u624b\u673a\u8fde\u63a5\u5668\u534f\u8bae"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/#_5", 
            "text": "\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c06\u7528 LinkIt Smart 7688 V2.0 \u5236\u4f5c\u4e00\u4e2a\u7b80\u5355MP3\u64ad\u653e\u5668\u3002", 
            "title": "\u5165\u95e8"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/#_6", 
            "text": "\u9664\u4e86 Linkit Smart 7688 V2.0 \u5916\uff0c\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8fd8\u9700\u8981\u7684\u5176\u4ed6\u6750\u6599\u3002 \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u51c6\u5907\u4e86\u4e00\u5207\uff0c\u6216\u8005\u8bbf\u95eeSeeed  \u5546\u57ce  \u6765\u83b7\u53d6\u5b83\u4eec\u3002     LinkIt Smart 7688 \u00d7 1  USB\u8fde\u63a5\u7ebf\uff08A\u578b\u3001\u5fae\u578bB\uff09\u00d72  UARTBee \u00d7 1  \u675c\u90a6\u7ebf \u00d7 3            \u7acb\u5373\u8d2d\u4e70  \u7acb\u5373\u8d2d\u4e70  \u7acb\u5373\u8d2d\u4e70  \u7acb\u5373\u8d2d\u4e70     \u786e\u4fdd\u60a8\u51c6\u5907\u597d\u4e0b\u9762\u7684\u4e24\u4e2a\u6750\u6599\n- \u7acb\u4f53\u58f0\u626c\u58f0\u5668\uff083.5mm \u97f3\u9891\u8fde\u63a5\u7ebf\uff09\u00d71\n- USB \u95ea\u5b58\u76d8\uff08\u5185\u7f6e MP3 \u683c\u5f0f\u7684\u97f3\u9891\u6587\u4ef6\uff09\u00d71  \u6b65\u9aa4\u4e00:   \u8bf7\u53c2\u9605 \u8fd9\u91cc \u5c06 LinkIt Smart 7688 \u8fde\u63a5\u5230 Internet \u3002   Note  \u60a8\u53ef\u4ee5\u5c06\u8df3\u7ebf\u8fde\u63a5\u5230 MT7688 UART2 \u7aef\u53e3\uff0c\u800c\u4e0d\u7528\u5c06\u5176\u710a\u63a5\u5230\u5f15\u811a  8  \uff0c\u5f15\u811a  9  \u548c\u5f15\u811a  GND  \u3002    Note  \u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u65e0\u6cd5\u6210\u529f\u8fde\u63a5\u5230Internet\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\u3002   \u6b65\u9aa42\uff1a  \u6253\u5f00 USB \u4e32\u53e3\u7684\u63a7\u5236\u53f0\u3002  \u6b65\u9aa43\uff1a  \u8fde\u63a5\u6240\u6709\u90e8\u4ef6\uff0c\u5982\u4e0b\u6240\u793a\uff1a    Note  \u8fd9\u662f LinkIt Smart 7688\uff08v1.0\uff09\u7684 Breakout \u6570\u636e\u3002   \u6b65\u9aa44\uff1a  \u901a\u8fc7\u63a7\u5236\u53f0\u4e2d\u7684  cd /Media/USB-A1  \u7c7b\u578b\u8f93\u5165\u6587\u4ef6\u3002  \u6b65\u9aa45\uff1a  \u901a\u8fc7\u5728\u63a7\u5236\u53f0\u4e2d\u8f93\u5165  madplay filename.mp3 \uff0c\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f  Madplay  \uff08\u5b89\u88c5\u5728 OpenWRT \u4e0a\uff09\u64ad\u653e\u97f3\u4e50\u3002  \u6b65\u9aa46\uff1a  \u73b0\u5728\u4f60\u4f1a\u542c\u5230\u97f3\u4e50\u3002", 
            "title": "\u6750\u6599\u51c6\u5907"
        }, 
        {
            "location": "/Breakout_for_LinkIt_Smart_7688_v2.0/#_7", 
            "text": "Schematic files  LinkIt smart 7688  OpenWrt  Link to buy a LinkIt Smart 7688", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Arduino_Breakout_for_LinkIt_Smart_7688_Duo/", 
            "text": "Arduino Breakout for LinkIt Smart 7688 Duo\n \u662f LinkIt Smart 7688 Duo \u7684\u6269\u5c55\u677f\u3002\u548c Seeed \u751f\u4ea7\u7684\u5176\u4ed6\u6269\u5c55\u677f\u4e00\u6837\uff0c\u8be5\u4e3b\u677f\u96c6\u6210\u4e86 12 \u4e2a Grove \u63a5\u53e3\uff0c\u53ef\u4ee5\u8ba9\u60a8\u8f7b\u677e\u8fde\u63a5\u66f4\u591a\u7684 Grove \u6a21\u5757\u3002\u8fd9\u4e2a\u6269\u5c55\u677f\u7b80\u5316\u4e86\u9ebb\u70e6\u7684\u63a5\u7ebf\u8fc7\u7a0b\uff0c\u80fd\u591f\u8ba9\u521d\u5b66\u8005\u5feb\u901f\u5165\u95e8\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u5757\u677f\u5b50\u4e0e Arduino \u5171\u7528\u540c\u4e00\u4e2a MUC\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u7528 LinkIt Smart 7688 \u7684\u529f\u80fd\uff0c\u800c\u4e14\u53ef\u4ee5\u4f7f\u7528 ArduinoY\u00fan \u7684\u529f\u80fd\uff0c\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u4f7f\u7528\u5f3a\u5927\u7684 Arduino IDE \u7f16\u8bd1\u4e30\u5bcc\u7684 IoT \u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u4e3b\u677f\u4e0a\u6709 LinkIt Smart 7688 Duo \u7684\u9884\u7559\u63a5\u53e3\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u8fd8\u652f\u6301 I2C\uff0cUART \u7b49\u4e32\u884c\u603b\u7ebf\uff0c\u5e76\u5e26\u6709 USB \u548c\u4ee5\u592a\u7f51\u63a5\u53e3\u3002\n\n\n\n\nLinkIt Smart 7688 Duo\u662f\u57fa\u4e8e OpenWrt Linux \u5f00\u53d1\u677f\uff0cMT7688 \u548c ATmega32u4 \u7684\u5f00\u6e90\u6269\u5c55\u677f\u3002 \u8be5\u677f\u8bbe\u8ba1\u7528\u4e8e\u5b9e\u73b0\u667a\u80fd\u5bb6\u5c45\u7684\u4e30\u5bcc\u5e94\u7528\u3002 \u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e LinkIt Smart 7688 Duo \u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u517c\u5bb9 Arduino Shield\n\n\n\u53ef\u4ee5\u8fde\u63a5\u4e92\u8054\u7f51\n\n\nUSB 2.0 \u652f\u6301\u66f4\u591a\u5916\u8bbe\n\n\nGrove \u63a5\u53e3\uff1aI2C \u00d7 2, \u6a21\u62df\u63a5\u53e3 \u00d7 3, \u6570\u5b57\u63a5\u53e3\u00d7 6, UART \u00d7 1\n\n\n4-pin \u8c03\u8bd5\u63a5\u53e3 \u00d7 1, ICSP \u00d7 1\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7269\u8054\u7f51/\u7f51\u5173\u5e94\u7528\n\n\n\u673a\u5668\u4eba\n\n\n\u667a\u80fd\u591a\u5a92\u4f53\u8bbe\u5907\n\n\n\u6559\u5b66\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u8f93\u5165\u7535\u538b\n \uff1a5.0V (\u4f7f\u7528 USB \u63a5\u53e3\u4f9b\u7535)\n\n\n\u5de5\u4f5c\u7535\u538b\n \uff1a3.3V\n\n\n\n\n\n\nNote\n\n\n\u8c03\u8bd5\u5f15\u811a\u8fde\u63a5\u5230 MT7688, \u5176\u4ed6\u5f15\u811a\u8fde\u63a5\u5230 ATmega32U4.\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6570\u91cf\n\n\n\u9879\u76ee\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nArduino Shield\n\n\n1\n\n\nUSB Port(Type-A)\n\n\n1\n\n\n\n\n\n\nMT7688 UART2\n\n\n1\n\n\nUSB Port(Micro type-B)\n\n\n1\n\n\n\n\n\n\nICSP port\n\n\n1\n\n\nEthernet Port\n\n\n1\n\n\n\n\n\n\nReset Button(ATmega32u4)\n\n\n1\n\n\n\u8fde\u63a5 LinkIt Smart 7688 Duo \u7684\u7aef\u53e3\n\n\n1\n\n\n\n\n\n\n\n\n\u5f00\u59cb\u4f7f\u7528\n\n\n\u5728\u8fd9\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u4e2d\uff0c\u60a8\u5c06\u4f7f\u7528\u8702\u9e23\u5668\u6765\u53d1\u51fa\u4e0d\u540c\u7684\u58f0\u97f3\u3002\u5f00\u59cb\u4e4b\u524d\uff0c\u9664\u4e86 Arduino Breakout for LinkIt Smart 7688 Duo \u4e4b\u5916\uff0c\u8bf7\u68c0\u67e5\u4e0b\u9762\u662f\u5426\u6709\u4ee5\u4e0b\u6750\u6599\u3002\u4f60\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u5546\u57ce\u91cc\u8d2d\u4e70\u5b83\u4eec\u3002\n\n\n\n\n\n\n\n\nLinkIt Smart 7688 Duo\n\n\nUSB cable\n\n\nUARTBee\n\n\nJumper wires x 3\n\n\nGrove - Buzzer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u7b2c\u4e00\u6b65\uff1a\u8bf7\u53c2\u8003 \n\u8fd9\u91cc\n \u628a\u4f60\u7684 LinkIt Smart 7688 Duo \u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002\n\n\n\n\n\n\nNote\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728\u8fde\u63a5 LinkIt Smart 7688 \u7684\u7aef\u53e3\u9644\u8fd1\u627e\u5230 8\uff0c9 \u548c GND \u5f15\u811a\u3002\n\n\n\u60a8\u53ef\u4ee5\u7528\u8df3\u7ebf\u8fde\u63a5 MT7688 UART2 \u7aef\u53e3\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u710a\u63a5\u5230\u5f15\u811a 8\uff0c\u5f15\u811a 9 \u548c\u5f15\u811a GND\u3002\n\n\n\n\n\n\n\n\n\u7b2c\u4e8c\u6b65\uff1a\u5c06 USB to Serial adapter \u8fde\u63a5\u5230 LinkIt Smart 7688 Duo \u540e\u6253\u5f00\u63a7\u5236\u53f0\u3002\n\n\n\u7b2c\u4e09\u6b65\uff1a\u6309\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u5404\u90e8\u4ef6\uff1a\n\n\n\n\n\n\n\n\n\n\n\u7b2c\u56db\u6b65\uff1a\u628a Grove - Buzzer \u63d2\u5728 \nD4\n \u53e3\u4e0a\u3002\n\n\n\n\n\n\n\u7b2c\u4e94\u6b65\uff1a\u8fd9\u4e00\u6b65\u662f\u5728\u4e3b\u673a\u4e0a\u4e3a LinkIt Smart 7688 Duo \u5e73\u53f0\u642d\u5efa Arduino \u5f00\u53d1\u73af\u5883\u3002\u7531\u4e8e\u672c\u6559\u7a0b\u5df2\u7ecf\u5728 LinkIt Smart 7688 \u7684 Wiki \u4e2d\u7f16\u5199\uff0c\u5982\u6709\u9700\u8981\u8bf7\u53c2\u9605 \n\u8fd9\u91cc\n\u3002\n\n\n\n\n\u7b2c\u516d\u6b65\uff1a\u4e0b\u8f7d firmata.\n\n\n\u7b2c\u4e03\u6b65\uff1a\u53c2\u8003 \n\u8fd9\u91cc\n \u5b89\u88c5 Arduino IDE \u7684 LinkIt Smart 7688 \u5e73\u53f0\uff0c\u7136\u540e\u628a\u6587\u4ef6 firmata \u4fdd\u5b58\u5230\u5f00\u53d1\u677f\u3002\n\n\n\n\n\n\nNote\n\n\n\u4ee5\u4e0b\u6b65\u9aa4\u5e94\u5728\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\uff08OpenWRT\uff09\u4e0a\u6267\u884c\u3002 \u8bf7\u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u4e2d\u6709 Python\uff0c\u5e76\u4e14\u5b89\u88c5\u4e86 pip\u3002\n\n\n\n\n\n\n\u7b2c\u516b\u6b65\uff1a\u5728\u63a7\u5236\u53f0\u8f93\u5165 pip \u5b89\u88c5 pyfirmata\uff0c\u7136\u540e\u6309 Enter \u5b89\u88c5 python \u5e93 pyfirmata\u3002\n\n\n\u7b2c\u4e5d\u6b65\uff1a\u5728\u63a7\u5236\u53f0\u4e2d\u8f93\u5165 \nvi buzzer.py\n \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a \nbuzzer.py\n \u7684\u6587\u4ef6\uff0c\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u8fc7\u53bb\u3002\n\n\n\n\nfrom\n \npyfirmata\n \nimport\n \nArduino\n,\n \nutil\n\n\nfrom\n \ntime\n \nimport\n \nsleep\n\n\nboard\n \n=\n \nArduino\n(\n/dev/ttyS0\n)\n\n\nprint\n \nStart blinking D4\n\n\nwhile\n \nTrue\n:\n\n  \nboard\n.\ndigital\n[\n4\n]\n.\nwrite\n(\n1\n)\n\n  \nsleep\n(\n0.5\n)\n\n  \nboard\n.\ndigital\n[\n4\n]\n.\nwrite\n(\n0\n)\n\n  \nsleep\n(\n0.5\n)\n\n\n\n\n\n\n\n\u7b2c\u5341\u6b65\uff1a\u4fdd\u5b58 \nbuzzer.py\n \u5e76\u8f93\u5165 \npython buzzer.py\n \u6765\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\u3002\n\n\n\u7b2c\u5341\u4e00\u6b65\uff1a\u73b0\u5728\u4f60\u4f1a\u542c\u5230\u8702\u9e23\u5668\u7684\u58f0\u97f3\u3002\n\n\n\n\nMake It Now\n\n\nHave you successfully make the buzzer to buzz? Here are 2 more awesome projects that use LinkIt Smart 7688 Duo. Let's make them now!\n\n\n\n\n\n\n\n\nSmart Router With \nWiFi Connection Visualization\n\n\nFacebook Like Monitor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u539f\u7406\u56fe]\nSchematic files\n\n\n[Wiki]\nWiki link for LinkIt Smart 7688 Duo\n\n\n[\u6307\u5357]\nOpenWrt", 
            "title": "Arduino Breakout for LinkIt Smart 7688 Duo"
        }, 
        {
            "location": "/Arduino_Breakout_for_LinkIt_Smart_7688_Duo/#_1", 
            "text": "\u517c\u5bb9 Arduino Shield  \u53ef\u4ee5\u8fde\u63a5\u4e92\u8054\u7f51  USB 2.0 \u652f\u6301\u66f4\u591a\u5916\u8bbe  Grove \u63a5\u53e3\uff1aI2C \u00d7 2, \u6a21\u62df\u63a5\u53e3 \u00d7 3, \u6570\u5b57\u63a5\u53e3\u00d7 6, UART \u00d7 1  4-pin \u8c03\u8bd5\u63a5\u53e3 \u00d7 1, ICSP \u00d7 1", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Arduino_Breakout_for_LinkIt_Smart_7688_Duo/#_2", 
            "text": "\u7269\u8054\u7f51/\u7f51\u5173\u5e94\u7528  \u673a\u5668\u4eba  \u667a\u80fd\u591a\u5a92\u4f53\u8bbe\u5907  \u6559\u5b66", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Arduino_Breakout_for_LinkIt_Smart_7688_Duo/#_3", 
            "text": "\u8f93\u5165\u7535\u538b  \uff1a5.0V (\u4f7f\u7528 USB \u63a5\u53e3\u4f9b\u7535)  \u5de5\u4f5c\u7535\u538b  \uff1a3.3V    Note  \u8c03\u8bd5\u5f15\u811a\u8fde\u63a5\u5230 MT7688, \u5176\u4ed6\u5f15\u811a\u8fde\u63a5\u5230 ATmega32U4.", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Arduino_Breakout_for_LinkIt_Smart_7688_Duo/#_4", 
            "text": "\u9879\u76ee  \u6570\u91cf  \u9879\u76ee  \u6570\u91cf      Arduino Shield  1  USB Port(Type-A)  1    MT7688 UART2  1  USB Port(Micro type-B)  1    ICSP port  1  Ethernet Port  1    Reset Button(ATmega32u4)  1  \u8fde\u63a5 LinkIt Smart 7688 Duo \u7684\u7aef\u53e3  1", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Arduino_Breakout_for_LinkIt_Smart_7688_Duo/#_5", 
            "text": "\u5728\u8fd9\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u4e2d\uff0c\u60a8\u5c06\u4f7f\u7528\u8702\u9e23\u5668\u6765\u53d1\u51fa\u4e0d\u540c\u7684\u58f0\u97f3\u3002\u5f00\u59cb\u4e4b\u524d\uff0c\u9664\u4e86 Arduino Breakout for LinkIt Smart 7688 Duo \u4e4b\u5916\uff0c\u8bf7\u68c0\u67e5\u4e0b\u9762\u662f\u5426\u6709\u4ee5\u4e0b\u6750\u6599\u3002\u4f60\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u5546\u57ce\u91cc\u8d2d\u4e70\u5b83\u4eec\u3002     LinkIt Smart 7688 Duo  USB cable  UARTBee  Jumper wires x 3  Grove - Buzzer             \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70      \u7b2c\u4e00\u6b65\uff1a\u8bf7\u53c2\u8003  \u8fd9\u91cc  \u628a\u4f60\u7684 LinkIt Smart 7688 Duo \u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002    Note   \u60a8\u53ef\u4ee5\u5728\u8fde\u63a5 LinkIt Smart 7688 \u7684\u7aef\u53e3\u9644\u8fd1\u627e\u5230 8\uff0c9 \u548c GND \u5f15\u811a\u3002  \u60a8\u53ef\u4ee5\u7528\u8df3\u7ebf\u8fde\u63a5 MT7688 UART2 \u7aef\u53e3\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u710a\u63a5\u5230\u5f15\u811a 8\uff0c\u5f15\u811a 9 \u548c\u5f15\u811a GND\u3002     \u7b2c\u4e8c\u6b65\uff1a\u5c06 USB to Serial adapter \u8fde\u63a5\u5230 LinkIt Smart 7688 Duo \u540e\u6253\u5f00\u63a7\u5236\u53f0\u3002  \u7b2c\u4e09\u6b65\uff1a\u6309\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u5404\u90e8\u4ef6\uff1a      \u7b2c\u56db\u6b65\uff1a\u628a Grove - Buzzer \u63d2\u5728  D4  \u53e3\u4e0a\u3002    \u7b2c\u4e94\u6b65\uff1a\u8fd9\u4e00\u6b65\u662f\u5728\u4e3b\u673a\u4e0a\u4e3a LinkIt Smart 7688 Duo \u5e73\u53f0\u642d\u5efa Arduino \u5f00\u53d1\u73af\u5883\u3002\u7531\u4e8e\u672c\u6559\u7a0b\u5df2\u7ecf\u5728 LinkIt Smart 7688 \u7684 Wiki \u4e2d\u7f16\u5199\uff0c\u5982\u6709\u9700\u8981\u8bf7\u53c2\u9605  \u8fd9\u91cc \u3002   \u7b2c\u516d\u6b65\uff1a\u4e0b\u8f7d firmata.  \u7b2c\u4e03\u6b65\uff1a\u53c2\u8003  \u8fd9\u91cc  \u5b89\u88c5 Arduino IDE \u7684 LinkIt Smart 7688 \u5e73\u53f0\uff0c\u7136\u540e\u628a\u6587\u4ef6 firmata \u4fdd\u5b58\u5230\u5f00\u53d1\u677f\u3002    Note  \u4ee5\u4e0b\u6b65\u9aa4\u5e94\u5728\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\uff08OpenWRT\uff09\u4e0a\u6267\u884c\u3002 \u8bf7\u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u4e2d\u6709 Python\uff0c\u5e76\u4e14\u5b89\u88c5\u4e86 pip\u3002    \u7b2c\u516b\u6b65\uff1a\u5728\u63a7\u5236\u53f0\u8f93\u5165 pip \u5b89\u88c5 pyfirmata\uff0c\u7136\u540e\u6309 Enter \u5b89\u88c5 python \u5e93 pyfirmata\u3002  \u7b2c\u4e5d\u6b65\uff1a\u5728\u63a7\u5236\u53f0\u4e2d\u8f93\u5165  vi buzzer.py  \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a  buzzer.py  \u7684\u6587\u4ef6\uff0c\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u8fc7\u53bb\u3002   from   pyfirmata   import   Arduino ,   util  from   time   import   sleep  board   =   Arduino ( /dev/ttyS0 )  print   Start blinking D4  while   True : \n   board . digital [ 4 ] . write ( 1 ) \n   sleep ( 0.5 ) \n   board . digital [ 4 ] . write ( 0 ) \n   sleep ( 0.5 )    \u7b2c\u5341\u6b65\uff1a\u4fdd\u5b58  buzzer.py  \u5e76\u8f93\u5165  python buzzer.py  \u6765\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\u3002  \u7b2c\u5341\u4e00\u6b65\uff1a\u73b0\u5728\u4f60\u4f1a\u542c\u5230\u8702\u9e23\u5668\u7684\u58f0\u97f3\u3002", 
            "title": "\u5f00\u59cb\u4f7f\u7528"
        }, 
        {
            "location": "/Arduino_Breakout_for_LinkIt_Smart_7688_Duo/#make-it-now", 
            "text": "Have you successfully make the buzzer to buzz? Here are 2 more awesome projects that use LinkIt Smart 7688 Duo. Let's make them now!     Smart Router With  WiFi Connection Visualization  Facebook Like Monitor", 
            "title": "Make It Now"
        }, 
        {
            "location": "/Arduino_Breakout_for_LinkIt_Smart_7688_Duo/#_6", 
            "text": "[\u539f\u7406\u56fe] Schematic files  [Wiki] Wiki link for LinkIt Smart 7688 Duo  [\u6307\u5357] OpenWrt", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/LinkIt_ONE/", 
            "text": "LinkIt ONE \u5f00\u53d1\u5e73\u53f0\u662f\u4e00\u6b3e\u7528\u4e8e\u53ef\u7a7f\u6234\u8bbe\u5907\u548c IoT \u8bbe\u5907\u7684\u5f00\u6e90\u9ad8\u6027\u80fd\u677f\u3002 \u5b83\u662f\u57fa\u4e8e\u5168\u7403\u9886\u5148\u7684\u53ef\u7a7f\u6234\u670d\u88c5 SoC\uff0c\u8054\u53d1\u79d1\u6280\uff08ATS\uff09\uff08\nMT2502\n\uff09\u4e0e\u9ad8\u6027\u80fd Wi-Fi\uff08\nMT5931\n\uff09\u548c GPS\uff08\nMT3332\n\uff09\u82af\u7247\u7ec4\u76f8\u7ed3\u5408\uff0c\u4e3a\u60a8\u63d0\u4f9b\u8bbf\u95ee \u8054\u53d1\u79d1 LinkIt \u7684\u6240\u6709\u529f\u80fd\u3002 \u5b83\u8fd8\u4e3a Arduino \u677f\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u7684\u5f15\u811a\u529f\u80fd\uff0c\u53ef\u4ee5\u8f7b\u677e\u8fde\u63a5\u5404\u79cd\u4f20\u611f\u5668\uff0c\u5916\u56f4\u8bbe\u5907\u548c Arduino shields\u3002\n\n\nLinkIt One \u53ef\u4ee5\u7528\u4e8eIoT /\u53ef\u7a7f\u6234\u8bbe\u5907 \u7684\u4e00\u4f53\u5316\u539f\u578b\u8bbe\u8ba1\u677f\u3002 \u5c06 GSM\uff0cGPRS\uff0cWi-Fi\uff0cGPS\uff0c\u84dd\u7259\u529f\u80fd\u96c6\u6210\u5230\u57fa\u672c\u7684 Arduino \u5916\u5f62. LinkIt ONE \u662f\u7531 \nSeeed Studio\n \u548c \nMediaTek\n\u4e00\u8d77\u8bbe\u8ba1\u751f\u4ea7\u7684\u3002 \u5b83\u5c06\u53cc\u65b9\u7684\u6280\u672f\u7ed3\u5408\u5728\u5f00\u6e90\u786c\u4ef6\uff0c\u53ef\u7a7f\u6234\u8bbe\u5907\u548cIoT\u8bbe\u5907\u4e2d\uff0c\u4ee5\u8fd9\u4e9b\u4e3a\u53c2\u8003\u6765\u8bbe\u8ba1\u66f4\u52a0\u5f3a\u5927\u7684\u5f00\u53d1\u677f\u3002\n\n\n\n\n\n\nNote\n\n\nLinkIt ONE \u677f\u5177\u6709\u5f88\u591a\u529f\u80fd\uff0c\u5176 SDK\uff08\u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u5305\uff09\u975e\u5e38\u5168\u9762\u3002 \u5728\u4f7f\u7528\u8be5\u677f\u4e4b\u524d\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u672c\u6587\u6863\u4e00\u6b21\u3002 \u4f5c\u4e3a\u5171\u540c\u8bbe\u8ba1\u4ea7\u54c1\u57fa\u7840\u7ea7\u522b \nSeeedstudio LinkIt One Forum\n \u63d0\u4f9b\u786c\u4ef6\u6280\u672f\u652f\u6301\u3002\u9ad8\u7ea7\u6280\u672f\u652f\u6301\u53ef\u5728 \nMediaTek LinkIt \u8bba\u575b\n\u3002\u8fd9\u4e9b\u8bba\u575b\u4e2d\u6709\u5f88\u591a\u5173\u4e8e\u6b64\u677f\u7684\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u3002\u8bf7\u5148\u641c\u7d22\u60a8\u7684\u8981\u6c42/\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7136\u540e\u518d\u53d1\u5e03\u95ee\u9898\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u60a8\u7684\u65f6\u95f4\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5728\u8fd9\u4e2a\u5f00\u53d1\u677f\u4e0a\u5177\u6709 ARM7 EJ-S\u2122\uff0cGSM\uff0cGPRS\uff0cWi-Fi\uff0c\u84dd\u7259BR / EDR / BLE\uff0cGPS\uff0c\u97f3\u9891\u7f16\u89e3\u7801\u5668\u548c SD\u5361\u8fde\u63a5\u5668\u3002\n\n\n\u4e0e Arduino \u7c7b\u4f3c\u7684\u5f15\u811a\uff0c\u5305\u62ec\u4e0e Arduino \u517c\u5bb9\u7684\u6570\u5b57 I / O \u7aef\u53e3\uff0c\u6a21\u62dfI / O \u7aef\u53e3\uff0cPWM\uff0cI2C\uff0cSPI\uff0cUART\u548c\u7535\u6e90\u8fde\u63a5\u53e3\u3002\n\n\n\u63d0\u4f9b\u5404\u79cd\u63a5\u53e3\uff0c\u7528\u4e8e\u8fde\u63a5\u5927\u591a\u6570\u4f20\u611f\u5668\uff0c\u5916\u8bbe\uff0cGroves\u548c\u5176\u4ed6\u5c0f\u90e8\u4ef6\u3002\n\n\n\u4f7f\u7528 LinkIt ONE \u548c MediaTek LinkIt SDK\uff08\u5bf9\u4e8eArduino\uff09\u80fd\u591f\u8f7b\u677e\u7684\u5b9e\u73b0\u4f60\u7684\u60f3\u6cd5\uff0c\u4f7f\u5176\u6210\u4e3a\u73b0\u5b9e\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u82af\u7247\n\n\nMT2502A (Aster, ARM7 EJ-S (TM) )\n\n\n\n\n\n\n\u65f6\u949f\u901f\u5ea6\n\n\n260MHz\n\n\n\n\n\n\n\u5916\u5f62\u5c3a\u5bf8\n\n\n3.3x2.1\u82f1\u5bf8\n\n\n\n\n\n\n\u95ea\u5b58\n\n\n16MB\n\n\n\n\n\n\nRAM\n\n\n4MB\n\n\n\n\n\n\n\u6bcf\u4e2aI / O\u5f15\u811a\u7684\u76f4\u6d41\u7535\u6d41\n\n\n1mA\n\n\n\n\n\n\n\u6a21\u62df\u5f15\u811a\n\n\n3\n\n\n\n\n\n\n\u6570\u5b57\u8f93\u51fa\n\n\n3.3V\n\n\n\n\n\n\n\u6a21\u62df\u8f93\u5165\n\n\n5V\n\n\n\n\n\n\nUART\n\n\n\u8f6f\u4ef6\u4e32\u53e3\u57fa\u4e8e USB \u8c03\u5236\u89e3\u8c03\u5668\u7aef\u53e3\u548c\u786c\u4ef6\u4e32\u53e3 \nD0\n \u548c \nD1\n\n\n\n\n\n\nSD \u5361\n\n\n\u9ad8\u8fbe32GB\uff0810\u7ea7\uff09\n\n\n\n\n\n\n\u5b9a\u4f4d\n\n\nGPS(MT3332)\n\n\n\n\n\n\nGSM\n\n\n850/900/1800/1900 MHz\n\n\n\n\n\n\nGPRS\n\n\n12\u7ea7\n\n\n\n\n\n\nWi-Fi\n\n\n802.11 b/g/n\n\n\n\n\n\n\n\u84dd\u7259\n\n\nBR / EDR / BLE\uff08\u53cc\u6a21\uff09\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u7269\u8054\u7f51\n\n\n\u667a\u6167\u4e4b\u5bb6\n\n\n\u53ef\u7a7f\u6234\u8bbe\u8ba1\n\n\n\u5de5\u4e1a\n\n\n\u4f20\u611f\u5668\u4e2d\u5fc3\n\n\n\u81ea\u52a8\u5316\u4e0e\u8fd0\u8f93\n\n\n\n\n\u4ee5\u4e0b\u662f\u4e00\u4e9b\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\u3002 \u66f4\u68d2\u7684\u9879\u76ee \nRecipe\n \u548c \nInstructables\n.\n\n\n\n\n\n\n\n\nFacebook Like Monitor\n\n\nTexting Door Alarm\n\n\nSmart Bed Alarm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u5236\u4f5c\n\n\n\u9a6c\u4e0a\u5236\u4f5c\n\n\n\u9a6c\u4e0a\u5236\u4f5c\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAWS IoT Tutorial\n\n\nInstructables Indicator\n\n\nDIY an Acrylic Case\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u5236\u4f5c\n\n\n\u9a6c\u4e0a\u5236\u4f5c\n\n\n\u9a6c\u4e0a\u5236\u4f5c\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u51b5\n\n\n\n\n\n\n\u914d\u7f6e\u5f00\u5173\n\n\nLinkIt ONE\u4e0a\u67093\u4e2a\u6ed1\u52a8\u5f00\u5173\uff0c\u7528\u4e8e\u914d\u7f6e\u529f\u80fd/\u5de5\u4f5c\u6a21\u5f0f\uff1a\n\n\n\n\n\n\n\n\n\n\n\u5f00\u5173\u53f7\n\n\n\u529f\u80fd\n\n\n\u4f4d\u7f6e1 - \u529f\u80fd\n\n\n\u4f4d\u7f6e2 - \u529f\u80fd\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\u7a0b\u5f0f\u6a21\u5f0f\n\n\nMS\n\uff1a \u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0b\uff0c\u5f53\u8fde\u63a5\u5230PC\u65f6\uff0cLinkIt One \u677f\u5c06\u663e\u793a\u4e3a 10MB \u7684USB\u9a71\u52a8\u5668\u3002 \u7a0b\u5e8f\u5c06\u4e0d\u4f1a\u5728\u6b64\u6a21\u5f0f\u4e0b\u6267\u884c\u3002 \u4efb\u4f55\u590d\u5236\u5230\u6b64\u9a71\u52a8\u5668\u7684\u6587\u4ef6\u90fd\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u8bfb\u53d6\n\n\nUART\n\uff1a UART\uff1a\u8be5\u4f4d\u7f6e\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8bbe\u7f6e\u4e3a\u7f16\u7a0b\u6a21\u5f0f\u3002 \u53ef\u4ee5\u5728\u6b64\u6a21\u5f0f\u4e0b\u4e0a\u4f20\u56fa\u4ef6\u3002\n\n\n\n\n\n\n2\n\n\n\u7535\u6e90\n\n\nBAT\n\uff1a\u677f\u7531\u9502\u79bb\u5b50\u7535\u6c60\u4f9b\u7535\u3002 \u8981\u4e3a\u7535\u6c60\u5145\u7535\uff0c\u8bf7\u5c06\u5f00\u5173\u8bbe\u7f6e\u5230\u6b64\u4f4d\u7f6e\uff0c\u5e76\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230PC\u3002\n\n\nUSB\n\uff1a\u677f\u7531 USB \u7aef\u53e3\u4f9b\u7535\u3002 \u5f53\u6ca1\u6709\u7535\u6c60\u8fde\u63a5\u6765\u7f16\u7a0b\u7535\u8def\u677f\u65f6\uff0c\u5c06\u5f00\u5173\u7f6e\u4e8e\u6b64\u4f4d\u7f6e\u3002\n\n\n\n\n\n\n3\n\n\nSD/SPI\n\n\nSPI\n\uff1a\u6b64\u4f4d\u7f6e\u5141\u8bb8\u8bbf\u95ee\u5916\u90e8SPI\u5f15\u811a\uff08D10 - D13\uff09\n\n\nSD\n\uff1a\u6b64\u4f4d\u7f6e\u5141\u8bb8\u4ee3\u7801\u8bbf\u95ee SD \u5361\u3002 \u6b64\u6a21\u5f0f\u4e5f\u7981\u6b62 SPI \u5f15\u811a\uff08D10-D13\uff09\u7684\u8bbf\u95ee\u3002\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\u5f53\u60a8\u5904\u7406 USB micro type-B \u63d2\u5ea7\u65f6\uff0c\u8bf7\u5c0f\u5fc3\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5173\u95ed\u63d2\u5ea7\u3002\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\u5e8f\u53f7\n\n\n\u6b65\u9aa4\n\n\n\u9605\u8bfb\u66f4\u591a\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\u5b89\u88c5 Arduino IDE 1.5.7 Beta\uff08Windows\u6216MAC OS X\u7248\u672c\uff09\n\n\n \u8fd9\u91cc\n\n\n\n\n\n\n2\n\n\n \u5728 MediaTek \u5b9e\u9a8c\u5ba4\u4e2d\u6ce8\u518c\n.\n\n\n\n\n\n\n\n\n3\n\n\n\u4e0b\u8f7d\n Linkit\u5f00\u53d1\u4eba\u5458\u6307\u5357\n \u5e76\u4e14\u9605\u8bfb\u5b83\n\n\n\n\n\n\n\n\n4\n\n\n\u5b89\u88c5Arduino IDE\uff08Windows\u6216MAC OS X\uff09\u7684 \n LinkIt SDK\n\n\n \u8fd9\u91cc\n\n\n\n\n\n\n5\n\n\n\u5b89\u88c5 LinkIt ONE \u9a71\u52a8\u7a0b\u5e8f\u3002\n\n\n \u8fd9\u91cc\n\n\n\n\n\n\n6\n\n\n\u66f4\u65b0\u673a\u8f7d\u56fa\u4ef6\u7248\u672c\u3002\n\n\n \u8fd9\u91cc\n\n\n\n\n\n\n7\n\n\n\u6253\u5f00Arduino IDE\uff0c\u9009\u62e9LinkIt ONE\u677f\u5e76\u5f00\u59cb\u7f16\u7801\u3002\n\n\n \u8fd9\u91cc\n\n\n\n\n\n\n8\n\n\n\u5c06GSM\uff0cGPS\u548c WiFi / BT \u5929\u7ebf\u8fde\u63a5\u5230 LinkIt One \u677f\n\n\n \u8fd9\u91cc\n\n\n\n\n\n\n9\n\n\n\u63d2\u5165 SIM \u5361\u548c Micro SD \u5361\n\n\n \u8fd9\u91cc\n\n\n\n\n\n\n10\n\n\n\u63a2\u7d22\u66f4\u591a\u793a\u4f8b\u548c\u4eab\u53d7\u5236\u4f5c\u7684\u5feb\u4e50\u5427\uff01\n\n\n\n\n\n\n\n\n\n\n\u5b89\u88c5 Arduino IDE\n\n\n\u4e0b\u8f7d\u6700\u65b0\u7684 \nArduino IDE\n .\u6709\u5173\u66f4\u9ad8\u7ea7\u7684\u4e3b\u9898\uff0c\u8bf7\u6309\u7167 MediaTekTM\n  \u8bf4\u660e\n.\n\n\n\u5b89\u88c5Mediatek LinkIt ONE SDK\n\n\n\n\n\u4e0b\u8f7dArduino \u7684 \nLinkIt SDK\n \u5728\u7f16\u5199\u672c\u6307\u5357\u65f6\uff0c\u4f7f\u7528\u4e86 v1.1.11 \u7684 Windows SDK\uff08Beta\uff09\u3002 \u9605\u8bfb Windows OS \u548c MAC OS X \u5e73\u53f0\u7684\u89c6\u9891\u6307\u5357 \n \u70b9\u51fb\u8fd9\u91cc\n\n\n\u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u89e3\u538b\u7f29\u5230 Arduino IDE \u6587\u4ef6\u5939\u3002\n\n\n\u53cc\u51fb.EXE\u6587\u4ef6\u5e76\u5b89\u88c5\u3002\n\n\n\u901a\u8fc7\u5b89\u88c5LinkIt ONE SDK\uff0cArduino IDE\u53ef\u4ee5\u4f7f\u7528LinkIt ONE IDE\u3002\n\n\n\n\n\u5b89\u88c5\u9a71\u52a8\n\n\n\n\n\u7981\u7528 \n\u9a71\u52a8\u7a0b\u5e8f\u7b7e\u540d\u5f3a\u5236\n \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fWindows 8 / 8.1\u64cd\u4f5c\u7cfb\u7edf\u3002\n\n\n\u9605\u8bfb \n\u5982\u4f55\u5b89\u88c5\n\n\n\u5c06 MS / UART \u6ed1\u52a8\u5f00\u5173\u7f6e\u4e8e UART\u4f4d\u7f6e\uff0c\u5e76\u5c06 LinkIt ONE \u8fde\u63a5\u5230 PC\u3002\n\n\n\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\uff0c\u5c06\u663e\u793a\u4ee5\u4e0b COM \u7aef\u53e3\u3002\n\n\n\n\n\n\n\n\n\u4ece \n..  LinkIt_ONE_IDE  drivers  mtk\n \u6587\u4ef6\u5939\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002\n\n\n\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u540e\uff0cDevice Manger \u5e94\u663e\u793a\u4ee5\u4e0b\u4e24\u4e2a\u7aef\u53e3\uff1a\n\n\n\n\nMTK USB\u8c03\u8bd5\u7aef\u53e3\n \u7528\u4e8e\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\nMTK USB\u8c03\u5236\u89e3\u8c03\u5668\u7aef\u53e3\n \u7528\u4e8e\u6253\u5370\u6d88\u606f\uff0c\u5982Serial.println\uff08\uff09\n\n\n  \n\n\n\n\nNote\n\n\n\u8fd8\u6ca1\u6709\u5b98\u65b9\u7684 Windows 10\u9a71\u52a8\u7a0b\u5e8f\u3002 Windows 10 \u7528\u6237\u53ef\u4ee5\u4ece \n\u8bbe\u5907\u7ba1\u7406\u5668\n \u624b\u52a8\u4ece \n LinkIt_ONE_IDE  drivers  mtk\n \u4e2d\u9009\u62e9 Windows 7 \u9a71\u52a8\u7a0b\u5e8f\u6587\u4ef6\u3002 \u8fd9\u662f\u4f17\u6240\u5468\u77e5\u7684\u51e0\u53f0\u7535\u8111\u3002\n\n\n\n\n\u66f4\u65b0\u56fa\u4ef6\n\n\nLinkIt ONE \u4e3b\u677f\u7684\u56fa\u4ef6\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u66f4\u65b0\u4e00\u6b21\u3002 \u6700\u65b0\u7684 LinkIt ONE SDK \u9644\u5e26\u56fa\u4ef6\u7248\u672c\u3002\n\n\n\n\n\u5728\u542f\u52a8\u56fa\u4ef6\u66f4\u65b0\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u6ed1\u52a8\u5f00\u5173\u5904\u4e8e\u6b63\u786e\u7684\u4f4d\u7f6e\uff08 \nMS / UART\n \u5e94\u5904\u4e8e \nMS\n \u4f4d\u7f6e\u3002\nUSB / BAT\n \u5728 \nUSB\n \u4f4d\u7f6e\uff09\uff1a\n\n\n\n\n  \n\n\n\n\n\u4ece..  \n LinkIt_ONE_IDE  hardware  tools  mtk\n \u6587\u4ef6\u5939\u8fd0\u884c FirmwareUpdater.exe \u5e94\u7528\u7a0b\u5e8f\u3002\n\n\n\n\n  \n\n\n\n\n\u70b9\u51fb\u6309\u94ae\uff0c\u7136\u540e\u5c06 LinkIt ONE \u8fde\u63a5\u5230 PC\u3002 \u7b49\u5f851\u5206\u949f\uff0c\u66f4\u65b0\u6210\u529f\u5b8c\u6210\u3002\n\n\n\n\n  \n\n\n\u4e0a\u4f20\u4ee3\u7801\uff08Blinky\uff09\n\n\n\n\n\u5e94\u5c06\u6ed1\u52a8\u5f00\u5173\u914d\u7f6e\u4e3a\u56fa\u4ef6\u4e0a\u4f20\uff08\u5373\u5c06 MS / UART \u7f6e\u4e8e UART \u4f4d\u7f6e\uff0c\u7535\u6e90\u5f00\u5173\u4f4d\u4e8e USB \u4f4d\u7f6e\uff09\u3002\n\n\n\n\n\n\n\n\n\u6253\u5f00 \nFile\uff08\u6587\u4ef6\uff09 - \n Examples\uff08\u793a\u4f8b\uff09 - \n Basics - \n Blink\n\u3002\n\n\n\u5728 \nTools\uff08\u5de5\u5177\uff09\n - \n \nPort\uff08\u7aef\u53e3\uff09\n \u4e2d\u9009\u62e9\u5bf9\u5e94\u4e8e \nMTK USB \u8c03\u8bd5\u7aef\u53e3\n \u7684 COM \u7aef\u53e3\u53f7\u3002\n\n\n\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\nLED\u6807\u8bb0 \nL\n \u5e94\u95ea\u70c1\u3002\n\n\n\n\n\u8fde\u63a5\u5929\u7ebf\n\n\nLinkIt ONE \u63d0\u4f9b\u4e09\u4e2a\u5929\u7ebf\u3002 \u5b83\u4eec\u7528\u4e8e\uff1a\n\n\n\n\nGSM / GPRS\n\n\nWi-Fi / BT\n\n\n\u5168\u7403\u5b9a\u4f4d\u7cfb\u7edf\n\n\n\n\n\u8fde\u63a5\u5929\u7ebf\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\n\nNote\n\n\n\n\n\u4ece\u5929\u7ebf\u62c9\u51fa\u5929\u7ebf\u65f6\uff0c\u8bf7\u5c0f\u5fc3\u64cd\u4f5c\u3002 \u8bf7\u4e0d\u8981\u4f7f\u7528\u66b4\u529b\u3002\n\n\n\n\n\n\n- \u5c1d\u8bd5\u4f7f\u7528\u5782\u76f4\u4e8e\u7535\u8def\u677f\u65b9\u5411\u7684\u529b\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u635f\u574f\u5929\u7ebf\u57ab\u3002\n\n\n\u63d2\u5165SIM\u5361\u548cSD\u5361\n\n\nLinkIt ONE \u63a5\u53d7\u6807\u51c6\u5c3a\u5bf8\u7684 SIM \u5361\u548c Micro SD \u5361\u3002 \u6309\u7167\u4ee5\u4e0b\u56fe\u50cf\u63d2\u5165\u5b83\u4eec\uff1a\n\n\n\n\n\u63a2\u7d22 LinkIt ONE SDK \u793a\u4f8b\n\n\nLinkIt ONE SDK \u9644\u5e26\u8bb8\u591a\u793a\u4f8b/\u793a\u4f8b\u4ee3\u7801\uff0c\u4ee5\u4f7f\u7528\u50cf GSM\uff0cGPRS\uff0cWiFi\uff0cBT\uff0c Audio\uff0cGPS\u7b49\u5916\u56f4\u8bbe\u5907\u3002\u9996\u5148\u6d4f\u89c8\u5e76\u9605\u8bfb\u6709\u5173API\u6587\u6863\u3002 API\u6587\u6863\u53ef\u5728\n  \u7528\u6237\u6307\u5357 \n \u548c \n  API\u53c2\u8003\u7f51\u7ad9 \n\u4e2d\u627e\u5230\n\n\nLinkIt ONE \u517c\u5bb9\u7684 Groves \u548c Shields\n\n\n\n\n\u6211\u4eec\u751f\u4ea7\u7684\u4ea7\u54c1\u6709\u6570\u767e\u4e2a Groves \u548c Shields\uff0c\u5305\u62ec\u4f20\u611f\u5668\uff0c\u6267\u884c\u5668\uff0c\u663e\u793a\u5668\u548c\u5176\u4ed6\u6a21\u5757\u3002\n\n\n\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u4e0e Groves \u548c Shields \u5b9e\u73b0\u60a8\u7684\u60f3\u6cd5\u3002\n\n\n\u4f46\u662f\uff0cLinkIt ONE \u5e76\u4e0d\u5b8c\u5168\u652f\u6301\u6240\u6709\u7684\u8fd9\u4e9b\u3002\n\n\n\u6211\u4eec\u51c6\u5907\u4e86\u4e00\u4e2a\u517c\u5bb9\u7684 Groves \u548c Shields \u5217\u8868\uff1a\n\n\n\n\n\n\nLinkit ONE \u7684 Sidekick Basic Kit \u6559\u7a0b\n\n\n\n\nLinkIt ONE \u7684 Sidekick Basic Kit \u65e8\u5728\u4e0e\u60a8\u7684 LinkIt ONE \u677f\u4e00\u8d77\u4f7f\u7528\u3002 \u8be5\u5957\u4ef6\u5c06\u5e2e\u52a9\u60a8\u5feb\u901f\u4e0e LinkIt \u7684\u5e73\u53f0\u4fdd\u6301\u4e00\u81f4\u3002 \u5b83\u5305\u62ec\u8bb8\u591a\u6700\u53d7\u6b22\u8fce\u7684 DIY \u9879\u76ee\u914d\u4ef6\uff1a\u5982\u9762\u5305\u677f\uff0c\u8df3\u7ebf\uff0c\u5f69\u8272LED\uff0c\u7535\u963b\u5668\uff0c\u8702\u9e23\u5668\u7b49\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u4e00\u4e2a\u65b9\u4fbf\u7684\u76d2\u5b50\uff0c\u6613\u4e8e\u8fd0\u8f93\u548c\u6a21\u62df\u6742\u4e71\u3002 \u8be5\u5957\u4ef6\u5305\u542b\u4e00\u4e2a\u5b8c\u6574\u7684\u6307\u5357\uff0c\u53ef\u4ee5\u8ba9\u60a8\u719f\u6089\u5404\u79cd\u7535\u5b50\u5143\u4ef6\uff0c\u540c\u65f6\u521b\u5efa\u5c0f\u578b\uff0c\u7b80\u5355\uff0c\u6613\u4e8e\u7ec4\u88c5\u7684\u7535\u8def\u3002 \u8fd9\u91cc\u6982\u8ff0\u4e86 10 \u79cd\u4e0d\u540c\u7684\u8bfe\u7a0b\uff0c\u5c06\u4e3a\u521d\u5b66\u8005\u719f\u6089 LinkIt ONE \u63d0\u4f9b\u4e00\u4e2a\u6700\u4f73\u65b9\u5f0f\u3002\n\n\n\n\n\n\nThe Basics\n\n\nHello World\n\n\nPush Button\n\n\nMarquee\n\n\nColorful World\n\n\nAnalog Interface\n\n\nMini Servo\n\n\nLight Sensor\n\n\nSMS Control the LED\n\n\n\n\nGet Temperature with Webpage\n\n\n\n\n\n\nGithub Repo for Sidekick Basic Kit for LinkIt ONE\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\nSchematic / Design Files:\n\n\n\n\nLinkIt ONE V1.0 Eagle File\n\n\nLinkIt ONE V1.0 Schematic in PDF\n\n\n\n\nSoftware:\n\n\n\n\nMediaTek_LinkIt_SDK_for_Ardunio\n\n\n\n\nDatasheets and User Guides:\n\n\n\n\nLinkIt_ONE_Hardware_Reference_Design_v1_0\n\n\nLinkIt ONE_Pinout Diagram_v1.0\u3010PDF\u3011\n\n\nMediaTek_LinkIt_Developers_Guide_v1_0\u3010PDF\u3011\n\n\nMediaTek_MT2502A_SOC_Data_Sheet_v1_0\u3010PDF\u3011\n\n\nMediaTek_MT5931_Wi-Fi_Data_Sheet_v1_0\u3010PDF\u3011\n\n\nMediaTek_MT3332_GPS_Data_Sheet_v1_0\u3010PDF\u3011\n\n\n\n\nGetting Help\n\n\n\n\nSeeedstudio LinkIt ONE Forum\n\n\nMediaTek LinkIt ONE Forums\n\n\n\n\nMore\n\n\n\n\nSee Also: Sidekick Base Kit for LinkIt ONE", 
            "title": "LinkIt ONE"
        }, 
        {
            "location": "/LinkIt_ONE/#_1", 
            "text": "\u5728\u8fd9\u4e2a\u5f00\u53d1\u677f\u4e0a\u5177\u6709 ARM7 EJ-S\u2122\uff0cGSM\uff0cGPRS\uff0cWi-Fi\uff0c\u84dd\u7259BR / EDR / BLE\uff0cGPS\uff0c\u97f3\u9891\u7f16\u89e3\u7801\u5668\u548c SD\u5361\u8fde\u63a5\u5668\u3002  \u4e0e Arduino \u7c7b\u4f3c\u7684\u5f15\u811a\uff0c\u5305\u62ec\u4e0e Arduino \u517c\u5bb9\u7684\u6570\u5b57 I / O \u7aef\u53e3\uff0c\u6a21\u62dfI / O \u7aef\u53e3\uff0cPWM\uff0cI2C\uff0cSPI\uff0cUART\u548c\u7535\u6e90\u8fde\u63a5\u53e3\u3002  \u63d0\u4f9b\u5404\u79cd\u63a5\u53e3\uff0c\u7528\u4e8e\u8fde\u63a5\u5927\u591a\u6570\u4f20\u611f\u5668\uff0c\u5916\u8bbe\uff0cGroves\u548c\u5176\u4ed6\u5c0f\u90e8\u4ef6\u3002  \u4f7f\u7528 LinkIt ONE \u548c MediaTek LinkIt SDK\uff08\u5bf9\u4e8eArduino\uff09\u80fd\u591f\u8f7b\u677e\u7684\u5b9e\u73b0\u4f60\u7684\u60f3\u6cd5\uff0c\u4f7f\u5176\u6210\u4e3a\u73b0\u5b9e\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/LinkIt_ONE/#_2", 
            "text": "\u53c2\u6570  \u503c      \u82af\u7247  MT2502A (Aster, ARM7 EJ-S (TM) )    \u65f6\u949f\u901f\u5ea6  260MHz    \u5916\u5f62\u5c3a\u5bf8  3.3x2.1\u82f1\u5bf8    \u95ea\u5b58  16MB    RAM  4MB    \u6bcf\u4e2aI / O\u5f15\u811a\u7684\u76f4\u6d41\u7535\u6d41  1mA    \u6a21\u62df\u5f15\u811a  3    \u6570\u5b57\u8f93\u51fa  3.3V    \u6a21\u62df\u8f93\u5165  5V    UART  \u8f6f\u4ef6\u4e32\u53e3\u57fa\u4e8e USB \u8c03\u5236\u89e3\u8c03\u5668\u7aef\u53e3\u548c\u786c\u4ef6\u4e32\u53e3  D0  \u548c  D1    SD \u5361  \u9ad8\u8fbe32GB\uff0810\u7ea7\uff09    \u5b9a\u4f4d  GPS(MT3332)    GSM  850/900/1800/1900 MHz    GPRS  12\u7ea7    Wi-Fi  802.11 b/g/n    \u84dd\u7259  BR / EDR / BLE\uff08\u53cc\u6a21\uff09", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/LinkIt_ONE/#_3", 
            "text": "\u7269\u8054\u7f51  \u667a\u6167\u4e4b\u5bb6  \u53ef\u7a7f\u6234\u8bbe\u8ba1  \u5de5\u4e1a  \u4f20\u611f\u5668\u4e2d\u5fc3  \u81ea\u52a8\u5316\u4e0e\u8fd0\u8f93   \u4ee5\u4e0b\u662f\u4e00\u4e9b\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\u3002 \u66f4\u68d2\u7684\u9879\u76ee  Recipe  \u548c  Instructables .     Facebook Like Monitor  Texting Door Alarm  Smart Bed Alarm           \u9a6c\u4e0a\u5236\u4f5c  \u9a6c\u4e0a\u5236\u4f5c  \u9a6c\u4e0a\u5236\u4f5c        AWS IoT Tutorial  Instructables Indicator  DIY an Acrylic Case           \u9a6c\u4e0a\u5236\u4f5c  \u9a6c\u4e0a\u5236\u4f5c  \u9a6c\u4e0a\u5236\u4f5c", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/LinkIt_ONE/#_4", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u51b5"
        }, 
        {
            "location": "/LinkIt_ONE/#_5", 
            "text": "LinkIt ONE\u4e0a\u67093\u4e2a\u6ed1\u52a8\u5f00\u5173\uff0c\u7528\u4e8e\u914d\u7f6e\u529f\u80fd/\u5de5\u4f5c\u6a21\u5f0f\uff1a      \u5f00\u5173\u53f7  \u529f\u80fd  \u4f4d\u7f6e1 - \u529f\u80fd  \u4f4d\u7f6e2 - \u529f\u80fd      1  \u7a0b\u5f0f\u6a21\u5f0f  MS \uff1a \u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0b\uff0c\u5f53\u8fde\u63a5\u5230PC\u65f6\uff0cLinkIt One \u677f\u5c06\u663e\u793a\u4e3a 10MB \u7684USB\u9a71\u52a8\u5668\u3002 \u7a0b\u5e8f\u5c06\u4e0d\u4f1a\u5728\u6b64\u6a21\u5f0f\u4e0b\u6267\u884c\u3002 \u4efb\u4f55\u590d\u5236\u5230\u6b64\u9a71\u52a8\u5668\u7684\u6587\u4ef6\u90fd\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u8bfb\u53d6  UART \uff1a UART\uff1a\u8be5\u4f4d\u7f6e\u7528\u4e8e\u5c06\u7535\u8def\u677f\u8bbe\u7f6e\u4e3a\u7f16\u7a0b\u6a21\u5f0f\u3002 \u53ef\u4ee5\u5728\u6b64\u6a21\u5f0f\u4e0b\u4e0a\u4f20\u56fa\u4ef6\u3002    2  \u7535\u6e90  BAT \uff1a\u677f\u7531\u9502\u79bb\u5b50\u7535\u6c60\u4f9b\u7535\u3002 \u8981\u4e3a\u7535\u6c60\u5145\u7535\uff0c\u8bf7\u5c06\u5f00\u5173\u8bbe\u7f6e\u5230\u6b64\u4f4d\u7f6e\uff0c\u5e76\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230PC\u3002  USB \uff1a\u677f\u7531 USB \u7aef\u53e3\u4f9b\u7535\u3002 \u5f53\u6ca1\u6709\u7535\u6c60\u8fde\u63a5\u6765\u7f16\u7a0b\u7535\u8def\u677f\u65f6\uff0c\u5c06\u5f00\u5173\u7f6e\u4e8e\u6b64\u4f4d\u7f6e\u3002    3  SD/SPI  SPI \uff1a\u6b64\u4f4d\u7f6e\u5141\u8bb8\u8bbf\u95ee\u5916\u90e8SPI\u5f15\u811a\uff08D10 - D13\uff09  SD \uff1a\u6b64\u4f4d\u7f6e\u5141\u8bb8\u4ee3\u7801\u8bbf\u95ee SD \u5361\u3002 \u6b64\u6a21\u5f0f\u4e5f\u7981\u6b62 SPI \u5f15\u811a\uff08D10-D13\uff09\u7684\u8bbf\u95ee\u3002      Note  \u5f53\u60a8\u5904\u7406 USB micro type-B \u63d2\u5ea7\u65f6\uff0c\u8bf7\u5c0f\u5fc3\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5173\u95ed\u63d2\u5ea7\u3002", 
            "title": "\u914d\u7f6e\u5f00\u5173"
        }, 
        {
            "location": "/LinkIt_ONE/#_6", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/LinkIt_ONE/#_7", 
            "text": "\u5e8f\u53f7  \u6b65\u9aa4  \u9605\u8bfb\u66f4\u591a      1  \u5b89\u88c5 Arduino IDE 1.5.7 Beta\uff08Windows\u6216MAC OS X\u7248\u672c\uff09   \u8fd9\u91cc    2   \u5728 MediaTek \u5b9e\u9a8c\u5ba4\u4e2d\u6ce8\u518c .     3  \u4e0b\u8f7d  Linkit\u5f00\u53d1\u4eba\u5458\u6307\u5357  \u5e76\u4e14\u9605\u8bfb\u5b83     4  \u5b89\u88c5Arduino IDE\uff08Windows\u6216MAC OS X\uff09\u7684   LinkIt SDK   \u8fd9\u91cc    5  \u5b89\u88c5 LinkIt ONE \u9a71\u52a8\u7a0b\u5e8f\u3002   \u8fd9\u91cc    6  \u66f4\u65b0\u673a\u8f7d\u56fa\u4ef6\u7248\u672c\u3002   \u8fd9\u91cc    7  \u6253\u5f00Arduino IDE\uff0c\u9009\u62e9LinkIt ONE\u677f\u5e76\u5f00\u59cb\u7f16\u7801\u3002   \u8fd9\u91cc    8  \u5c06GSM\uff0cGPS\u548c WiFi / BT \u5929\u7ebf\u8fde\u63a5\u5230 LinkIt One \u677f   \u8fd9\u91cc    9  \u63d2\u5165 SIM \u5361\u548c Micro SD \u5361   \u8fd9\u91cc    10  \u63a2\u7d22\u66f4\u591a\u793a\u4f8b\u548c\u4eab\u53d7\u5236\u4f5c\u7684\u5feb\u4e50\u5427\uff01", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/LinkIt_ONE/#arduino-ide", 
            "text": "\u4e0b\u8f7d\u6700\u65b0\u7684  Arduino IDE  .\u6709\u5173\u66f4\u9ad8\u7ea7\u7684\u4e3b\u9898\uff0c\u8bf7\u6309\u7167 MediaTekTM   \u8bf4\u660e .", 
            "title": "\u5b89\u88c5 Arduino IDE"
        }, 
        {
            "location": "/LinkIt_ONE/#mediatek-linkit-one-sdk", 
            "text": "\u4e0b\u8f7dArduino \u7684  LinkIt SDK  \u5728\u7f16\u5199\u672c\u6307\u5357\u65f6\uff0c\u4f7f\u7528\u4e86 v1.1.11 \u7684 Windows SDK\uff08Beta\uff09\u3002 \u9605\u8bfb Windows OS \u548c MAC OS X \u5e73\u53f0\u7684\u89c6\u9891\u6307\u5357   \u70b9\u51fb\u8fd9\u91cc  \u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u89e3\u538b\u7f29\u5230 Arduino IDE \u6587\u4ef6\u5939\u3002  \u53cc\u51fb.EXE\u6587\u4ef6\u5e76\u5b89\u88c5\u3002  \u901a\u8fc7\u5b89\u88c5LinkIt ONE SDK\uff0cArduino IDE\u53ef\u4ee5\u4f7f\u7528LinkIt ONE IDE\u3002", 
            "title": "\u5b89\u88c5Mediatek LinkIt ONE SDK"
        }, 
        {
            "location": "/LinkIt_ONE/#_8", 
            "text": "\u7981\u7528  \u9a71\u52a8\u7a0b\u5e8f\u7b7e\u540d\u5f3a\u5236  \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fWindows 8 / 8.1\u64cd\u4f5c\u7cfb\u7edf\u3002  \u9605\u8bfb  \u5982\u4f55\u5b89\u88c5  \u5c06 MS / UART \u6ed1\u52a8\u5f00\u5173\u7f6e\u4e8e UART\u4f4d\u7f6e\uff0c\u5e76\u5c06 LinkIt ONE \u8fde\u63a5\u5230 PC\u3002  \u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\uff0c\u5c06\u663e\u793a\u4ee5\u4e0b COM \u7aef\u53e3\u3002     \u4ece  ..  LinkIt_ONE_IDE  drivers  mtk  \u6587\u4ef6\u5939\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002  \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u540e\uff0cDevice Manger \u5e94\u663e\u793a\u4ee5\u4e0b\u4e24\u4e2a\u7aef\u53e3\uff1a   MTK USB\u8c03\u8bd5\u7aef\u53e3  \u7528\u4e8e\u4e0a\u4f20\u4ee3\u7801\u3002  MTK USB\u8c03\u5236\u89e3\u8c03\u5668\u7aef\u53e3  \u7528\u4e8e\u6253\u5370\u6d88\u606f\uff0c\u5982Serial.println\uff08\uff09       Note  \u8fd8\u6ca1\u6709\u5b98\u65b9\u7684 Windows 10\u9a71\u52a8\u7a0b\u5e8f\u3002 Windows 10 \u7528\u6237\u53ef\u4ee5\u4ece  \u8bbe\u5907\u7ba1\u7406\u5668  \u624b\u52a8\u4ece   LinkIt_ONE_IDE  drivers  mtk  \u4e2d\u9009\u62e9 Windows 7 \u9a71\u52a8\u7a0b\u5e8f\u6587\u4ef6\u3002 \u8fd9\u662f\u4f17\u6240\u5468\u77e5\u7684\u51e0\u53f0\u7535\u8111\u3002", 
            "title": "\u5b89\u88c5\u9a71\u52a8"
        }, 
        {
            "location": "/LinkIt_ONE/#_9", 
            "text": "LinkIt ONE \u4e3b\u677f\u7684\u56fa\u4ef6\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u66f4\u65b0\u4e00\u6b21\u3002 \u6700\u65b0\u7684 LinkIt ONE SDK \u9644\u5e26\u56fa\u4ef6\u7248\u672c\u3002   \u5728\u542f\u52a8\u56fa\u4ef6\u66f4\u65b0\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u6ed1\u52a8\u5f00\u5173\u5904\u4e8e\u6b63\u786e\u7684\u4f4d\u7f6e\uff08  MS / UART  \u5e94\u5904\u4e8e  MS  \u4f4d\u7f6e\u3002 USB / BAT  \u5728  USB  \u4f4d\u7f6e\uff09\uff1a        \u4ece..    LinkIt_ONE_IDE  hardware  tools  mtk  \u6587\u4ef6\u5939\u8fd0\u884c FirmwareUpdater.exe \u5e94\u7528\u7a0b\u5e8f\u3002        \u70b9\u51fb\u6309\u94ae\uff0c\u7136\u540e\u5c06 LinkIt ONE \u8fde\u63a5\u5230 PC\u3002 \u7b49\u5f851\u5206\u949f\uff0c\u66f4\u65b0\u6210\u529f\u5b8c\u6210\u3002", 
            "title": "\u66f4\u65b0\u56fa\u4ef6"
        }, 
        {
            "location": "/LinkIt_ONE/#blinky", 
            "text": "\u5e94\u5c06\u6ed1\u52a8\u5f00\u5173\u914d\u7f6e\u4e3a\u56fa\u4ef6\u4e0a\u4f20\uff08\u5373\u5c06 MS / UART \u7f6e\u4e8e UART \u4f4d\u7f6e\uff0c\u7535\u6e90\u5f00\u5173\u4f4d\u4e8e USB \u4f4d\u7f6e\uff09\u3002     \u6253\u5f00  File\uff08\u6587\u4ef6\uff09 -   Examples\uff08\u793a\u4f8b\uff09 -   Basics -   Blink \u3002  \u5728  Tools\uff08\u5de5\u5177\uff09  -    Port\uff08\u7aef\u53e3\uff09  \u4e2d\u9009\u62e9\u5bf9\u5e94\u4e8e  MTK USB \u8c03\u8bd5\u7aef\u53e3  \u7684 COM \u7aef\u53e3\u53f7\u3002  \u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee3\u7801\u3002  LED\u6807\u8bb0  L  \u5e94\u95ea\u70c1\u3002", 
            "title": "\u4e0a\u4f20\u4ee3\u7801\uff08Blinky\uff09"
        }, 
        {
            "location": "/LinkIt_ONE/#_10", 
            "text": "LinkIt ONE \u63d0\u4f9b\u4e09\u4e2a\u5929\u7ebf\u3002 \u5b83\u4eec\u7528\u4e8e\uff1a   GSM / GPRS  Wi-Fi / BT  \u5168\u7403\u5b9a\u4f4d\u7cfb\u7edf   \u8fde\u63a5\u5929\u7ebf\u5982\u4e0b\u56fe\u6240\u793a\u3002    Note   \u4ece\u5929\u7ebf\u62c9\u51fa\u5929\u7ebf\u65f6\uff0c\u8bf7\u5c0f\u5fc3\u64cd\u4f5c\u3002 \u8bf7\u4e0d\u8981\u4f7f\u7528\u66b4\u529b\u3002    - \u5c1d\u8bd5\u4f7f\u7528\u5782\u76f4\u4e8e\u7535\u8def\u677f\u65b9\u5411\u7684\u529b\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u635f\u574f\u5929\u7ebf\u57ab\u3002", 
            "title": "\u8fde\u63a5\u5929\u7ebf"
        }, 
        {
            "location": "/LinkIt_ONE/#simsd", 
            "text": "LinkIt ONE \u63a5\u53d7\u6807\u51c6\u5c3a\u5bf8\u7684 SIM \u5361\u548c Micro SD \u5361\u3002 \u6309\u7167\u4ee5\u4e0b\u56fe\u50cf\u63d2\u5165\u5b83\u4eec\uff1a", 
            "title": "\u63d2\u5165SIM\u5361\u548cSD\u5361"
        }, 
        {
            "location": "/LinkIt_ONE/#linkit-one-sdk", 
            "text": "LinkIt ONE SDK \u9644\u5e26\u8bb8\u591a\u793a\u4f8b/\u793a\u4f8b\u4ee3\u7801\uff0c\u4ee5\u4f7f\u7528\u50cf GSM\uff0cGPRS\uff0cWiFi\uff0cBT\uff0c Audio\uff0cGPS\u7b49\u5916\u56f4\u8bbe\u5907\u3002\u9996\u5148\u6d4f\u89c8\u5e76\u9605\u8bfb\u6709\u5173API\u6587\u6863\u3002 API\u6587\u6863\u53ef\u5728   \u7528\u6237\u6307\u5357   \u548c    API\u53c2\u8003\u7f51\u7ad9  \u4e2d\u627e\u5230", 
            "title": "\u63a2\u7d22 LinkIt ONE SDK \u793a\u4f8b"
        }, 
        {
            "location": "/LinkIt_ONE/#linkit-one-groves-shields", 
            "text": "\u6211\u4eec\u751f\u4ea7\u7684\u4ea7\u54c1\u6709\u6570\u767e\u4e2a Groves \u548c Shields\uff0c\u5305\u62ec\u4f20\u611f\u5668\uff0c\u6267\u884c\u5668\uff0c\u663e\u793a\u5668\u548c\u5176\u4ed6\u6a21\u5757\u3002  \u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u4e0e Groves \u548c Shields \u5b9e\u73b0\u60a8\u7684\u60f3\u6cd5\u3002  \u4f46\u662f\uff0cLinkIt ONE \u5e76\u4e0d\u5b8c\u5168\u652f\u6301\u6240\u6709\u7684\u8fd9\u4e9b\u3002  \u6211\u4eec\u51c6\u5907\u4e86\u4e00\u4e2a\u517c\u5bb9\u7684 Groves \u548c Shields \u5217\u8868\uff1a", 
            "title": "LinkIt ONE \u517c\u5bb9\u7684 Groves \u548c Shields"
        }, 
        {
            "location": "/LinkIt_ONE/#linkit-one-sidekick-basic-kit", 
            "text": "LinkIt ONE \u7684 Sidekick Basic Kit \u65e8\u5728\u4e0e\u60a8\u7684 LinkIt ONE \u677f\u4e00\u8d77\u4f7f\u7528\u3002 \u8be5\u5957\u4ef6\u5c06\u5e2e\u52a9\u60a8\u5feb\u901f\u4e0e LinkIt \u7684\u5e73\u53f0\u4fdd\u6301\u4e00\u81f4\u3002 \u5b83\u5305\u62ec\u8bb8\u591a\u6700\u53d7\u6b22\u8fce\u7684 DIY \u9879\u76ee\u914d\u4ef6\uff1a\u5982\u9762\u5305\u677f\uff0c\u8df3\u7ebf\uff0c\u5f69\u8272LED\uff0c\u7535\u963b\u5668\uff0c\u8702\u9e23\u5668\u7b49\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u4e00\u4e2a\u65b9\u4fbf\u7684\u76d2\u5b50\uff0c\u6613\u4e8e\u8fd0\u8f93\u548c\u6a21\u62df\u6742\u4e71\u3002 \u8be5\u5957\u4ef6\u5305\u542b\u4e00\u4e2a\u5b8c\u6574\u7684\u6307\u5357\uff0c\u53ef\u4ee5\u8ba9\u60a8\u719f\u6089\u5404\u79cd\u7535\u5b50\u5143\u4ef6\uff0c\u540c\u65f6\u521b\u5efa\u5c0f\u578b\uff0c\u7b80\u5355\uff0c\u6613\u4e8e\u7ec4\u88c5\u7684\u7535\u8def\u3002 \u8fd9\u91cc\u6982\u8ff0\u4e86 10 \u79cd\u4e0d\u540c\u7684\u8bfe\u7a0b\uff0c\u5c06\u4e3a\u521d\u5b66\u8005\u719f\u6089 LinkIt ONE \u63d0\u4f9b\u4e00\u4e2a\u6700\u4f73\u65b9\u5f0f\u3002    The Basics  Hello World  Push Button  Marquee  Colorful World  Analog Interface  Mini Servo  Light Sensor  SMS Control the LED   Get Temperature with Webpage    Github Repo for Sidekick Basic Kit for LinkIt ONE", 
            "title": "Linkit ONE \u7684 Sidekick Basic Kit \u6559\u7a0b"
        }, 
        {
            "location": "/LinkIt_ONE/#_11", 
            "text": "Schematic / Design Files:   LinkIt ONE V1.0 Eagle File  LinkIt ONE V1.0 Schematic in PDF   Software:   MediaTek_LinkIt_SDK_for_Ardunio   Datasheets and User Guides:   LinkIt_ONE_Hardware_Reference_Design_v1_0  LinkIt ONE_Pinout Diagram_v1.0\u3010PDF\u3011  MediaTek_LinkIt_Developers_Guide_v1_0\u3010PDF\u3011  MediaTek_MT2502A_SOC_Data_Sheet_v1_0\u3010PDF\u3011  MediaTek_MT5931_Wi-Fi_Data_Sheet_v1_0\u3010PDF\u3011  MediaTek_MT3332_GPS_Data_Sheet_v1_0\u3010PDF\u3011   Getting Help   Seeedstudio LinkIt ONE Forum  MediaTek LinkIt ONE Forums   More   See Also: Sidekick Base Kit for LinkIt ONE", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/mbed/", 
            "text": "\u4ec0\u4e48\u662fmbed\uff1f mbed\u662f\u4e13\u4e3aARM\u8bbe\u8ba1\u7684\u539f\u578b\u5f00\u53d1\u5e73\u53f0\uff0c\u5b83\u51e0\u4e4e\u53ef\u4ee5\u63d0\u4f9b\u6240\u9700\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4f8b\u5982\u514d\u8d39\u7684SDK\uff0cHDK\u548c\u57fa\u4e8eWeb\u7684IDE\u6765\u5f00\u53d1IoT\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u662f\u7f16\u7801\u548c\u786c\u4ef6\u7684\u521d\u5b66\u8005\uff0cmbed\u53ef\u4ee5\u52a0\u5feb\u60a8\u7684\u5b66\u4e60\u548c\u539f\u578b\u8bbe\u8ba1\u3002\u5982\u679c\u60a8\u6b63\u5904\u4e8e\u786c\u4ef6\u539f\u578b\u8bbe\u8ba1\u7684\u4e2d\u95f4\u4f4d\u7f6e\uff0c\u5e76\u4e14\u5f88\u96be\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u677f\u5361\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u60a8\u7684\u5de5\u4f5c\u66f4\u8f7b\u677e\u3002\n\n\n\u4e16\u754c\u4e0a\u5df2\u7ecf\u6709\u8bb8\u591a\u5f00\u6e90\u5e73\u53f0\u677f\uff0c\u6bcf\u4e2a\u677f\u90fd\u58f0\u79f0\u5b83\u4eec\u529f\u80fd\u5f3a\u5927\uff0c\u6613\u4e8e\u4f7f\u7528\uff0c\u4e0e\u5176\u4ed6\u5e73\u53f0\u533a\u522b\u5f00\u6765\u7684\u72ec\u7279\u529f\u80fd\u662f\u4ec0\u4e48\uff1f\u9996\u5148\uff0cmbed\u4f7f\u7528CMSIS\uff08Cortex\u5fae\u63a7\u5236\u5668\u8f6f\u4ef6\u63a5\u53e3\u6807\u51c6\uff09\u6765\u6807\u51c6\u5316\u4e0d\u540c\u82af\u7247\u5236\u9020\u5546\u4e4b\u95f4\u7684\u63a5\u53e3\u5dee\u5f02\u3002\u5176\u6b21\uff0c\u57fa\u4e8eWeb\u7684IDE\u7b80\u5316\u4e86\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u65e0\u8bba\u60a8\u4f7f\u7528\u4ec0\u4e48\u7cfb\u7edf\uff0c\u60a8\u90fd\u4e0d\u9700\u8981\u5b89\u88c5\u989d\u5916\u7684IDE\uff0c\u60a8\u53ea\u9700\u6253\u5f00Web\u6d4f\u89c8\u5668\u5e76\u5f00\u59cb\u7f16\u7801\u3002\n\n\nSeeed Studio\u662f\u751f\u4ea7mbed\u677f\u7684\u6210\u5458\u4e4b\u4e00\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u53ef\u4ee5\u4eceSeeed\u83b7\u5f97\u8d85\u8fc710\u4e2ambed\uff0c\u5982Arch Max\uff0cArch Link\u548cArch BLE\u3002\u5b83\u4eec\u5927\u591a\u96c6\u6210\u4e86Arduino\u548cmbed\u677f\u7684\u4f18\u52bf\uff0c\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86Grove\u8fde\u63a5\u5668\uff0c\u4f7f\u5176\u4e0eGrove\u7cfb\u5217\u4f20\u611f\u5668\u517c\u5bb9\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684mbed\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nTiny_BLE", 
            "title": "mbed"
        }, 
        {
            "location": "/mbed/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684mbed\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Tiny_BLE", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Tiny_BLE/", 
            "text": "|\n\n\n|\n\n\n|\n\n\nTiny BLE \u662f\u4e00\u6b3e\u4f53\u79ef\u5c0f\u7684\u4f4e\u529f\u8017\u84dd\u7259\u5f00\u53d1\u677f\u3002\u5b83\u96c6\u6210\u4e86\u6d4b\u91cf\u6a21\u5757\uff0c\u4ee5\u63d0\u4f9b\u5b9e\u65f6\u7684\u80fd\u91cf\u6d88\u8017\u6570\u636e\uff0c\u8fd9\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u4f18\u5316\u8f6f\u4ef6\u4ee5\u8bbe\u8ba1\u957f\u7535\u6c60\u5bff\u547d\u8bbe\u5907\u81f3\u5173\u91cd\u8981\u3002\u5b83\u652f\u6301\u5e26\u6709\u4fbf\u4e8e\u4f7f\u7528\u7684 C/C++ SDK \u548c\u5927\u91cf\u7684\u5f00\u6e90\u5e93\u7684 ARM mbed cloud-based IDE\uff0c\u8fd9\u4f7f\u5f97\u539f\u578b\u5f00\u53d1\u975e\u5e38\u5bb9\u6613\u3002\n\n\n\u901a\u8fc7\u5176\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u4e3a\u4e24\u90e8\u5206 - CMSIS DAP \u63a5\u53e3\u90e8\u5206\u548c BLE \u90e8\u5206\u3002CMSIS DAP \u63a5\u53e3\u8bbe\u8ba1\u5c31\u50cf\u745e\u58eb\u519b\u5200\u591a\u529f\u80fd\u7ec4\u5408\u4e00\u6837\u3002\u5b83\u63d0\u4f9b\u6a21\u5757\u5316\u7f16\u7a0b\uff0cCMSIS DAP \u8c03\u8bd5\uff0cUSB \u865a\u62df\u4e32\u53e3\uff0c\u7535\u6d41\u6d4b\u91cf\u548c\u7535\u6c60\u5145\u7535\u3002BLE \u90e8\u5206\u5efa\u7acb\u5728 Nordic nRF51822 \u4e0a\uff0cNordic nRF51822 \u642d\u8f7d\u84dd\u7259\u4f4e\u529f\u8017 2.4GHz \u591a\u534f\u8bae\u65e0\u7ebf\u7535\uff0c\u8fd0\u884c 16MHz \u7684 32 \u4f4d ARM Cortex-M0 \u5185\u6838\uff0c\u548c\u5177\u6709 3D \u52a0\u901f\u5ea6\u8ba1\u548c 3D \u9640\u87ba\u4eea\u7684 6 \u81ea\u7531\u5ea6\u7684 MPU6050\u3002\u8fd9\u4e9b\u96c6\u6210\u5728\u4e00\u8d77\uff0c\u80fd\u63d0\u4f9b\u8fd0\u52a8\u68c0\u6d4b\u529f\u80fd\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\nnRF51822 : ARM Cortex-M0 + 2.4GHz \u65e0\u7ebf\u7535 (BLE \u6216 ANT+)\n\n\n\n\n\n\nMPU-6050 : 3d \u52a0\u901f\u5ea6\u8ba1 + 3d \u9640\u87ba\u4eea\n\n\n\n\n\n\nLPC11U35FHI33 : CMSIS DAP\n\n\n\n\n\n\n\u7535\u6d41\u6d4b\u5b9a\n\n\n\n\n\n\nCN3065 : USB\u90e8\u5206\u7684\u7535\u6c60\u5145\u7535\u7aef\n\n\n\n\n\n\n\u7535\u6e90 : USB/battery(3.5-4.2V)\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b:3.3V\n\n\n\n\n\n\n4\u4e2a I/O \u53e3, \u5168\u90e8\u53ef\u7528\u4f5c\u6a21\u62df\u8f93\u5165\uff0c\u6570\u5b57\u8f93\u5165/\u8f93\u51fa\uff0cI2C\uff0cSPI \u6216 UART\n\n\n\n\n\n\nVCC \u8f93\u51fa\u63a7\u5236\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n \u9879\u76ee\n\n\n\n \u503c\n\n\n\n\n\n \u5fae\u63a7\u5236\u5668\n\n\n\n nRF51822QFAA; LPC11U35FHI33\n\n\n\n\n\n \u5916\u5f62\u5c3a\u5bf8\n\n\n\n 43.3mm x 29.0mm x 4.3mm\n\n\n\n\n\n \u7535\u6e90\n\n\n\n USB/Battery (JST-1.0 \u7535\u6c60\u5ea7)\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb \n\u6b64\u94fe\u63a5\n \n\u6ce8\u518c\u6216\u767b\u5f55 mbed\n\u3002\n\n\n\n\n\n\n\u5bfc\u5165 mbed_blinky \u7a0b\u5e8f\n \u5e76\u66f4\u6539 main.cpp \u7684\u4ee3\u7801\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5355\u51fb\u9876\u90e8\u5de5\u5177\u680f\u7684**\u7f16\u8bd1**\u56fe\u6807\u7f16\u8bd1\u7a0b\u5e8f\uff0c\u7136\u540e\u4e0b\u8f7d\u4e00\u4e2a\u7f16\u8bd1\u7684\u5341\u516d\u8fdb\u5236\u6587\u4ef6\u3002\n\n\n\n\n\n\n\u5c06\u4e0b\u8f7d\u7684\u5341\u516d\u8fdb\u5236\u6587\u4ef6\u62d6\u653e\u5230 MBED \u78c1\u76d8\u4e2d\u3002\n\n\n\n\n\n\n\u84dd\u8272 LED \u5c06\u95ea\u70c1\u3002\n\n\n\n\n\n\n#include \nmbed.h\n\n\nDigitalOut red(p22);           // RED LED\nDigitalOut green(p21);         // GREEN LED\nDigitalOut blue(p23);          // BLUE LED\n\nint main()\n{\n    while (true) {\n        blue = !blue;\n        wait(0.1);\n    }\n}\n\n\n\n\nSeeed_Tiny_BLE_Get_Started program\n \u7a0b\u5e8f\u5305\u62ec\u68c0\u6d4b\u52a8\u4f5c\uff0c\u6309\u94ae\u548c\u7535\u6c60\u7535\u91cf\u3002\u8fd9\u5bf9\u4e8e\u5165\u95e8\u5927\u6709\u5e2e\u52a9\u3002\n\n\n\u8c03\u8bd5\n\n\n\u8981\u901a\u8fc7 USB Virtual Serial \u542f\u52a8 SWD \u8c03\u8bd5\u548c\u8c03\u8bd5\u6d88\u606f\uff0c\u8bf7\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f \nthe driver from mbed\n\u3002\n\n\n\u80fd\u91cf\u76d1\u6d4b\n\n\n\u5c06 USB \u865a\u62df\u4e32\u53e3\u7684\u6ce2\u7279\u7387\u66f4\u6539\u4e3a 4000000+ \u5c06\u89e6\u53d1\u7535\u6d41\u6d4b\u91cf\u3002 \u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5de5\u5177 - Tiny BLE MONITOR\u4f7f\u60a8\u53ef\u4ee5\u8f7b\u677e\u83b7\u53d6\u529f\u8017\u4fe1\u606f\u3002\n\n\n\n\n\n\n\u9002\u7528 Windows \u7684 Tiny BLE MONITOR\n\n\n\n\n\n\n\u9002\u7528 Linux/Mac OS \u7684 Tiny BLE MONITOR\n\uff0c\u9644\u52a0\u8981\u6c42 : pyqtgraph\n\n\n\n\n\n\n\n\n\u66f4\u65b0\u6216\u6062\u590d\u56fa\u4ef6\n\n\nArch BLE \u7684\u6700\u65b0\u56fa\u4ef6\u7248\u672c\u662f\u5efa\u4e8e 2015 \u5e74 2 \u6708 6 \u65e5\u7684 v0221\u3002\u8981\u68c0\u67e5\u56fa\u4ef6\u7248\u672c\u548c\u5efa\u7acb\u65e5\u671f\uff0c\u8bf7\u5728\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u6253\u5f00 MBED \u78c1\u76d8\u7684 MBED.HTM \u6216 DETAILS.TXT\u3002\n\n\n\u66f4\u65b0\u65e5\u5fd7 :\n\n\n\n\n2015-02-07 \u4fee\u590d Mac OS X 10.10 \u95ee\u9898\n\n\n\n\n\u56fa\u4ef6 :\n\n\n\n\n\u6700\u65b0\u7684\u754c\u9762\u56fa\u4ef6 v221 2015-02-06\n\n\n\n\nOver-The-Air\n\n\n\u6211\u4eec\u5b9a\u5236\u4e86\u4e00\u4e2a DFU \u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u901a\u8fc7 Over-The-Air ( OTA ) \u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u3002 \u5b83\u5728 \ngithub.com/Seeed-Studio/nrf51_dfu_bootloader\n\u3002\u53e6\u89c1 \nmbed.org FOTA\n\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nTiny BLE V1.0 eagle file\n\n\n\n\n\n\n[\u539f\u7406\u56fePDF]\n \nTiny BLE V1.0.pdf\n\n\n\n\n\n\n[\u5e93\u6587\u4ef6]\n \nMPU6050 library\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nResources on github\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nfrizting part", 
            "title": "Tiny BLE"
        }, 
        {
            "location": "/Tiny_BLE/#_1", 
            "text": "nRF51822 : ARM Cortex-M0 + 2.4GHz \u65e0\u7ebf\u7535 (BLE \u6216 ANT+)    MPU-6050 : 3d \u52a0\u901f\u5ea6\u8ba1 + 3d \u9640\u87ba\u4eea    LPC11U35FHI33 : CMSIS DAP    \u7535\u6d41\u6d4b\u5b9a    CN3065 : USB\u90e8\u5206\u7684\u7535\u6c60\u5145\u7535\u7aef    \u7535\u6e90 : USB/battery(3.5-4.2V)    \u8f93\u5165\u7535\u538b:3.3V    4\u4e2a I/O \u53e3, \u5168\u90e8\u53ef\u7528\u4f5c\u6a21\u62df\u8f93\u5165\uff0c\u6570\u5b57\u8f93\u5165/\u8f93\u51fa\uff0cI2C\uff0cSPI \u6216 UART    VCC \u8f93\u51fa\u63a7\u5236", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Tiny_BLE/#_2", 
            "text": "\u9879\u76ee   \u503c    \u5fae\u63a7\u5236\u5668   nRF51822QFAA; LPC11U35FHI33    \u5916\u5f62\u5c3a\u5bf8   43.3mm x 29.0mm x 4.3mm    \u7535\u6e90   USB/Battery (JST-1.0 \u7535\u6c60\u5ea7)", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Tiny_BLE/#_3", 
            "text": "\u70b9\u51fb  \u6b64\u94fe\u63a5   \u6ce8\u518c\u6216\u767b\u5f55 mbed \u3002    \u5bfc\u5165 mbed_blinky \u7a0b\u5e8f  \u5e76\u66f4\u6539 main.cpp \u7684\u4ee3\u7801\u5982\u4e0b\u3002    \u5355\u51fb\u9876\u90e8\u5de5\u5177\u680f\u7684**\u7f16\u8bd1**\u56fe\u6807\u7f16\u8bd1\u7a0b\u5e8f\uff0c\u7136\u540e\u4e0b\u8f7d\u4e00\u4e2a\u7f16\u8bd1\u7684\u5341\u516d\u8fdb\u5236\u6587\u4ef6\u3002    \u5c06\u4e0b\u8f7d\u7684\u5341\u516d\u8fdb\u5236\u6587\u4ef6\u62d6\u653e\u5230 MBED \u78c1\u76d8\u4e2d\u3002    \u84dd\u8272 LED \u5c06\u95ea\u70c1\u3002    #include  mbed.h \n\nDigitalOut red(p22);           // RED LED\nDigitalOut green(p21);         // GREEN LED\nDigitalOut blue(p23);          // BLUE LED\n\nint main()\n{\n    while (true) {\n        blue = !blue;\n        wait(0.1);\n    }\n}  Seeed_Tiny_BLE_Get_Started program  \u7a0b\u5e8f\u5305\u62ec\u68c0\u6d4b\u52a8\u4f5c\uff0c\u6309\u94ae\u548c\u7535\u6c60\u7535\u91cf\u3002\u8fd9\u5bf9\u4e8e\u5165\u95e8\u5927\u6709\u5e2e\u52a9\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Tiny_BLE/#_4", 
            "text": "\u8981\u901a\u8fc7 USB Virtual Serial \u542f\u52a8 SWD \u8c03\u8bd5\u548c\u8c03\u8bd5\u6d88\u606f\uff0c\u8bf7\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f  the driver from mbed \u3002", 
            "title": "\u8c03\u8bd5"
        }, 
        {
            "location": "/Tiny_BLE/#_5", 
            "text": "\u5c06 USB \u865a\u62df\u4e32\u53e3\u7684\u6ce2\u7279\u7387\u66f4\u6539\u4e3a 4000000+ \u5c06\u89e6\u53d1\u7535\u6d41\u6d4b\u91cf\u3002 \u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5de5\u5177 - Tiny BLE MONITOR\u4f7f\u60a8\u53ef\u4ee5\u8f7b\u677e\u83b7\u53d6\u529f\u8017\u4fe1\u606f\u3002    \u9002\u7528 Windows \u7684 Tiny BLE MONITOR    \u9002\u7528 Linux/Mac OS \u7684 Tiny BLE MONITOR \uff0c\u9644\u52a0\u8981\u6c42 : pyqtgraph", 
            "title": "\u80fd\u91cf\u76d1\u6d4b"
        }, 
        {
            "location": "/Tiny_BLE/#_6", 
            "text": "Arch BLE \u7684\u6700\u65b0\u56fa\u4ef6\u7248\u672c\u662f\u5efa\u4e8e 2015 \u5e74 2 \u6708 6 \u65e5\u7684 v0221\u3002\u8981\u68c0\u67e5\u56fa\u4ef6\u7248\u672c\u548c\u5efa\u7acb\u65e5\u671f\uff0c\u8bf7\u5728\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u6253\u5f00 MBED \u78c1\u76d8\u7684 MBED.HTM \u6216 DETAILS.TXT\u3002  \u66f4\u65b0\u65e5\u5fd7 :   2015-02-07 \u4fee\u590d Mac OS X 10.10 \u95ee\u9898   \u56fa\u4ef6 :   \u6700\u65b0\u7684\u754c\u9762\u56fa\u4ef6 v221 2015-02-06", 
            "title": "\u66f4\u65b0\u6216\u6062\u590d\u56fa\u4ef6"
        }, 
        {
            "location": "/Tiny_BLE/#over-the-air", 
            "text": "\u6211\u4eec\u5b9a\u5236\u4e86\u4e00\u4e2a DFU \u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u901a\u8fc7 Over-The-Air ( OTA ) \u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u3002 \u5b83\u5728  github.com/Seeed-Studio/nrf51_dfu_bootloader \u3002\u53e6\u89c1  mbed.org FOTA \u3002", 
            "title": "Over-The-Air"
        }, 
        {
            "location": "/Tiny_BLE/#_7", 
            "text": "[Eagle\u6587\u4ef6]   Tiny BLE V1.0 eagle file    [\u539f\u7406\u56fePDF]   Tiny BLE V1.0.pdf    [\u5e93\u6587\u4ef6]   MPU6050 library    [\u5176\u4ed6\u8d44\u6e90]   Resources on github    [\u5176\u4ed6\u8d44\u6e90]   frizting part", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Rephone/", 
            "text": "RePhone Kit\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u6a21\u5757\u5316\u624b\u673a\u5957\u4ef6\uff0c\u53ef\u4ee5\u6539\u53d8\u6211\u4eec\u5c06\u624b\u673a\u6295\u5165\u4f7f\u7528\u7684\u65b9\u5f0f\u3002 \u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u7684\u624b\u673a\u5b9a\u5236\u5f62\u5f0f\uff0c\u4e5f\u662f\u53ef\u7a7f\u6234/ IoT\u5f00\u53d1\u7684\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\n\u4f7f\u7528Rephone\uff0c\u60a8\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u4f7f\u7528slim MODULES\uff0c\u53ef\u8bbf\u95ee\u7684\u8f6f\u4ef6\u548c\u53ef\u81ea\u5b9a\u4e49\u7684\u6a21\u5757\u521b\u5efa\u81ea\u5df1\u7684\u624b\u673a\u3002 \u60a8\u8fd8\u53ef\u4ee5\u52ab\u6301\u60a8\u5468\u56f4\u7684\u4e8b\u7269\uff0c\u4f7f\u65e0\u751f\u547d\u7269\u4f53\u6210\u4e3a\u8702\u7a9d\u901a\u4fe1\u7684\u5f3a\u5927\u529f\u80fd\uff0c\u901a\u8fc7\u8702\u7a9d\u8fde\u63a5\u4e0e\u5ba0\u7269\uff0c\u690d\u7269\uff0c\u73a9\u5177\uff0c\u6469\u6258\u8f66\u5934\u76d4\uff0c\u673a\u5668\u4eba\u6216\u65e0\u4eba\u673a\u5bf9\u8bdd\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Rephone Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "Rephone"
        }, 
        {
            "location": "/Rephone/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Rephone Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Xadow_Audio/", 
            "text": "Xadow Audio \u5728\u4e00\u5757\u5355\u677f\u4e0a\u96c6\u6210\u4e86\u4e00\u4e2a\u626c\u58f0\u5668\u7bb1\u548c\u4e00\u4e2a\u9ea6\u514b\u98ce\u3002\u626c\u58f0\u5668\u5355\u5143\u989d\u5b9a\u529f\u7387\u4e3a 0.7 \u74e6\uff0c\u963b\u6297\u4e3a 8 \u6b27\u59c6\u3002\u4e0e\u5e38\u89c4\u7684\u9525\u578b\u626c\u58f0\u5668\u4e0d\u540c\uff0cXadow Audio \u4f7f\u7528\u7684\u626c\u58f0\u5668\u8868\u9762\u5e73\u5766\uff0c\u5e76\u5b89\u88c5\u5728\u77e9\u5f62\u5916\u58f3\u5185\uff0c\u4f7f\u5176\u80fd\u591f\u4ee5\u60ca\u4eba\u7684\u6548\u679c\u64ad\u653e\u58f0\u97f3\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5185\u7f6e\u626c\u58f0\u5668\u7684\u5916\u58f3\n\n\n\u677f\u8f7d\u626c\u58f0\u5668\u548c\u9ea6\u514b\u98ce\n\n\n\u5185\u7f6e Xadow \u8fde\u63a5\u5668\uff0c\u4fbf\u4e8e\u63d2\u62d4 FPC \u7535\u7f06\n\n\n\u517c\u5bb9\u5176\u4ed6 Xadow \u6a21\u5757\n\n\n\u81ea\u5236\u7535\u8bdd\u9879\u76ee\u4e2d\u8bdd\u7b52\u7684\u7406\u60f3\u9009\u62e9\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u626c\u58f0\u5668\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u5171\u632f\u9891\u7387\n\n\n900 Hz\n\n\n\n\n\n\n\u963b\u6297\n\n\n8 \u00b1 20% ohms\n\n\n\n\n\n\n\u989d\u5b9a\u529f\u7387\n\n\n0.7 W\n\n\n\n\n\n\n\u6700\u5927\u529f\u7387\n\n\n1 W\n\n\n\n\n\n\n\u9891\u7387\u8303\u56f4\n\n\n900 Hz to 20 kHz\n\n\n\n\n\n\n\n\n\u9ea6\u514b\u98ce\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u9ea6\u514b\u98ce\u7075\u654f\u5ea6\n\n\n-42dBV \u5178\u578b\u503c\n\n\n\n\n\n\n\u6700\u5927\u8f93\u5165\u58f0\u538b\n\n\n130dB \u6700\u5927\u8f93\u5165\u58f0\u538b\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u503c(mm)\n\n\n\u503c(Inch)\n\n\n\n\n\n\n\n\n\n\n\u626c\u58f0\u5668\n\n\n13mm \u00d7 18mm \u00d7 4.5mm\n\n\n0.51\u201d\u00d7 0.71\u201d \u00d7 0.18\u201d\n\n\n\n\n\n\n\u9ea6\u514b\u98ce\n\n\n2.95mm \u00d7 3.76mm\n\n\n0.12\u201d \u00d7 0.15\u201d\n\n\n\n\n\n\n\u4e3b\u677f\n\n\n25.37mm \u00d7 20.30mm\n\n\n1\u201d \u00d7 0.8\u201d\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nMake it now\n\n\n\n\nCheck on awesome RePhone projects that has been achieved with RePhone.\nA Traceable \nDog Collar\n. By using this collar, you are able to make a phone call to your dog.\n\n\n5 steps to make a traceable \nDog collar\n for your lovely puppy.\n\n\n\n\n\u6a21\u5757\u8fde\u63a5\n\n\n\n\n\u6309\u7167\u6307\u793a\u8fde\u63a5\u6a21\u5757\uff0c\u8bf7\u8bb0\u4f4f\uff0cUnfillde Corner \u5e94\u8be5\u5728\u53e6\u4e00\u4fa7\uff1a\n\n\n\n\nRePhone Community\n\n\n\n\n\n\nWe\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the \nRePhone Community\n.\n\n\nNow join us in the \nRePhone Community\n! Together we seek answers, make interesting stuff, care about each other, and share our experiences.\n\n\nFrequently Asked Questions\n\n\nSome frequently asked questions in \nRePhone Community\n are collected and answered to the topic \"Frequently Asked Questions of RePhone (FAQ)\" , the topic will be kept updating whenever a new FAQ comes out.\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u539f\u7406\u56fe]\nXadow Audio Schematic Files\n\n\n[\u6570\u636e\u624b\u518c]\nDatasheet for speaker box and microphone", 
            "title": "Xadow Audio"
        }, 
        {
            "location": "/Xadow_Audio/#_1", 
            "text": "\u5185\u7f6e\u626c\u58f0\u5668\u7684\u5916\u58f3  \u677f\u8f7d\u626c\u58f0\u5668\u548c\u9ea6\u514b\u98ce  \u5185\u7f6e Xadow \u8fde\u63a5\u5668\uff0c\u4fbf\u4e8e\u63d2\u62d4 FPC \u7535\u7f06  \u517c\u5bb9\u5176\u4ed6 Xadow \u6a21\u5757  \u81ea\u5236\u7535\u8bdd\u9879\u76ee\u4e2d\u8bdd\u7b52\u7684\u7406\u60f3\u9009\u62e9", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Xadow_Audio/#_2", 
            "text": "\u626c\u58f0\u5668     \u9879\u76ee  \u503c      \u5171\u632f\u9891\u7387  900 Hz    \u963b\u6297  8 \u00b1 20% ohms    \u989d\u5b9a\u529f\u7387  0.7 W    \u6700\u5927\u529f\u7387  1 W    \u9891\u7387\u8303\u56f4  900 Hz to 20 kHz     \u9ea6\u514b\u98ce     \u9879\u76ee  \u503c      \u9ea6\u514b\u98ce\u7075\u654f\u5ea6  -42dBV \u5178\u578b\u503c    \u6700\u5927\u8f93\u5165\u58f0\u538b  130dB \u6700\u5927\u8f93\u5165\u58f0\u538b     \u5c3a\u5bf8     \u9879\u76ee  \u503c(mm)  \u503c(Inch)      \u626c\u58f0\u5668  13mm \u00d7 18mm \u00d7 4.5mm  0.51\u201d\u00d7 0.71\u201d \u00d7 0.18\u201d    \u9ea6\u514b\u98ce  2.95mm \u00d7 3.76mm  0.12\u201d \u00d7 0.15\u201d    \u4e3b\u677f  25.37mm \u00d7 20.30mm  1\u201d \u00d7 0.8\u201d", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Xadow_Audio/#_3", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Xadow_Audio/#make-it-now", 
            "text": "Check on awesome RePhone projects that has been achieved with RePhone.\nA Traceable  Dog Collar . By using this collar, you are able to make a phone call to your dog.  5 steps to make a traceable  Dog collar  for your lovely puppy.", 
            "title": "Make it now"
        }, 
        {
            "location": "/Xadow_Audio/#_4", 
            "text": "\u6309\u7167\u6307\u793a\u8fde\u63a5\u6a21\u5757\uff0c\u8bf7\u8bb0\u4f4f\uff0cUnfillde Corner \u5e94\u8be5\u5728\u53e6\u4e00\u4fa7\uff1a", 
            "title": "\u6a21\u5757\u8fde\u63a5"
        }, 
        {
            "location": "/Xadow_Audio/#rephone-community", 
            "text": "We\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the  RePhone Community .  Now join us in the  RePhone Community ! Together we seek answers, make interesting stuff, care about each other, and share our experiences.  Frequently Asked Questions  Some frequently asked questions in  RePhone Community  are collected and answered to the topic \"Frequently Asked Questions of RePhone (FAQ)\" , the topic will be kept updating whenever a new FAQ comes out.", 
            "title": "RePhone Community"
        }, 
        {
            "location": "/Xadow_Audio/#_5", 
            "text": "[\u539f\u7406\u56fe] Xadow Audio Schematic Files  [\u6570\u636e\u624b\u518c] Datasheet for speaker box and microphone", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Xadow_GPS_V2/", 
            "text": "Xadow GPS v2 \u5185\u7f6e Quectel\u00ae \u7684 GPS L70 \u6a21\u5757\uff0c\u5e76\u4e14\u5c06\u5148\u8fdb\u7684 AGPS \u6280\u672f EASYTM(Embedded Assist System)\u4e0e AlwaysLocateTM \u6280\u672f\u76f8\u7ed3\u5408\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u3001\u66f4\u4f4e\u7684\u80fd\u8017\u4ee5\u53ca\u66f4\u5feb\u7684\u5b9a\u4f4d\u6548\u679c\uff08\u5373\u4f7f\u662f\u5904\u4e8e\u5ba4\u5185\u4e5f\u80fd\u68c0\u6d4b\u5230\uff09\u3002Xadow GPS v2 \u8fd8\u5185\u7f6e\u4e86\u9ad8\u7075\u654f\u5ea6\u7684\u4fe1\u53f7\u63a5\u6536\u5668\uff08-163dBm \u7684\u63a2\u6d4b\u6548\u679c\uff09\u548c\u4e00\u4e2a\u5185\u7f6e\u7684\u82af\u7247\u5929\u7ebf\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u4ea7\u54c1\u80fd\u591f\u5728 66 \u4e2a\u9891\u9053\u641c\u5bfb\u5230\u591a\u8fbe 22 \u4e2a\u5b9a\u4f4d\u536b\u661f\u7684\u4fe1\u53f7\uff0c\u8fd9\u4e9b\u7279\u70b9\u8ba9\u8fd9\u4e2a\u4ea7\u54c1\u6210\u4e3a\u4f60\u5f00\u53d1\u5bfc\u822a\u8bbe\u5907\u7684\u5173\u952e\u9009\u62e9\u3002Xadow GPS v2 \u8fd8\u91c7\u7528\u4e86 11 \u4e2a\u5f15\u811a\u7684 Xadow \u63a5\u53e3\uff0c\u6765\u65b9\u4fbf\u4e0e\u5176\u4ed6\u6a21\u5757\u8fdb\u884c\u5feb\u901f\u8fde\u63a5\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u91c7\u7528EASY\u2122\uff0c\u5148\u8fdb\u7684AGPS\u6280\u672f\uff0c\u800c\u4e0d\u9700\u8981\u5916\u90e8\u5b58\u50a8\u5668\n\n\n\u5177\u5907\u8d85\u4f4e\u529f\u8017\u7684\u641c\u5bfb\u6a21\u5f0f\n\n\n\u91c7\u7528AlwaysLocate\u2122\uff0c\u4e00\u6b3e\u53ef\u9009\u62e9\u5de5\u4f5c\u6a21\u5f0f\u7684\u667a\u80fd\u63a7\u5236\u5668\n\n\n\u9ad8\u7075\u654f\u5ea6\n\n\n\u652f\u6301QZSS\n\n\n\u652f\u6301 DGPS\uff0cSBAS\uff08WAAS / EGNOS / MSAS / GAGAN\uff09\n\n\nAnti-Jamming, Multi-tone \u6709\u6e90\u5e72\u6270\u62b5\u6d88\u5668\n\n\n\u5185\u7f6e\u82af\u7247\u5929\u7ebf\uff0c\u6548\u7387\u9ad8\u8fbe 83\uff05\n\n\n\u914d\u5907 11 \u4e2a\u5f15\u811a Xadow \u8fde\u63a5\u53e3\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6 Xadow \u6a21\u5757\u65b9\u4fbf\u7684\u8fdb\u884c\u8fde\u63a5\n\n\n\u53ef\u53e0\u52a0\u4f7f\u7528\uff0c\u8fde\u63a5\u6216\u710a\u63a5\u5230\u5176\u4ed6Xadow\u6a21\u5757\u4e0a\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u5fae\u63a7\u5236\u5668\n\n\nKinetis KL02\n\n\n\n\n\n\n\u5185\u6838\n\n\nARM\u00ae 32-bit Cortex\u00ae -M0+CPU\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\n\n\n3.3 ~ 6 V (\u901a\u8fc7\u6269\u5c55\u677f\u7684\u5f15\u811a\u8f93\u5165)\n\n\n\n\n\n\nFlash\n\n\n32 KB\n\n\n\n\n\n\nSRAM\n\n\n4 KB\n\n\n\n\n\n\n\u65f6\u949f\u9891\u7387\n\n\n48 MHz\n\n\n\n\n\n\n\u529f\u8017\n\n\n\u8ddf\u8e2a\u65f6 18ma\uff0c\u6355\u83b7\u65f6 21mA\n\n\n\n\n\n\n\u7701\u7535\u6a21\u5f0f\n\n\n\u5178\u578b\u503c\uff1a3mA@AlwaysLocateTM, 7uA@Backup\nMode, 180uA@Standby Mode\n\n\n\n\n\n\n\u9891\u9053\n\n\n22(\u8ddf\u8e2a\u65f6) / 66 (\u6355\u83b7\u65f6)\n\n\n\n\n\n\n\u66f4\u65b0\u9891\u7387\n\n\n1Hz(\u9ed8\u8ba4), \u6700\u5927 10Hz\n\n\n\n\n\n\n\u6c34\u5e73\u4f4d\u7f6e\u7cbe\u5ea6\n\n\n2.5m CEP\n\n\n\n\n\n\n\u901f\u5ea6\u7cbe\u5ea6\n\n\n0.1m/s\n\n\n\n\n\n\n\u6700\u5927\u901f\u5ea6\n\n\n\u6700\u5927 515m/s\n\n\n\n\n\n\nEASYTM \u51b7\u542f\u52a8/\u70ed\u542f\u52a8\u65f6\u95f4\n\n\n215s/5s\n\n\n\n\n\n\n\u6355\u83b7\u7075\u654f\u5ea6\n\n\n-145dBm\n\n\n\n\n\n\n\u8ddf\u8e2a\u7075\u654f\u5ea6\n\n\n-163dBm\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-40\u2103 to 85\u2103\n\n\n\n\n\n\nNMEA \u534f\u8bae\n\n\n0183/PMTK\n\n\n\n\n\n\n\u5929\u7ebf\u7c7b\u578b\n\n\n\u82af\u7247\u5929\u7ebf\n\n\n\n\n\n\n\u63a5\u53e3\n\n\n\u901a\u8fc7 I2C (7-bit \u5730\u5740 0x05) \u4e0e Xadow GSM+BLE \u8fde\u63a5\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n25.37mm X 20.30mm / 1\u201d \u00d7 0.8\u201d\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u89c8\n\n\n\n\n\n\n\u5173\u4e8e\u5168\u7403\u5b9a\u4f4d\u7cfb\u7edf\uff08GPS\uff09\n\n\n\n\n\u5168\u7403\u5b9a\u4f4d\u7cfb\u7edf\uff08GPS\uff09\u662f\u4e00\u79cd\u57fa\u4e8e\u7a7a\u95f4\u7684\u5bfc\u822a\u7cfb\u7edf\uff0c\u53ef\u4ee5\u63d0\u4f9b\u5b9e\u65f6\u548c\u5168\u5929\u5019\u7684\u5730\u7406\u4f4d\u7f6e\uff0c\u9ad8\u5ea6\uff0c\u884c\u9a76\u901f\u5ea6\u548c\u65f6\u95f4\u4fe1\u606f\uff0c\u65e0\u8bba\u5728\u5730\u7403\u4e0a\u8fd8\u662f\u5728\u5730\u7403\u9644\u8fd1\uff0c\u90fd\u53ef\u4ee5\u5728\u65e0\u969c\u788d\u73af\u5883\u4e0b\u627e\u5230\u81f3\u5c11 4 \u9897 GPS \u536b\u661f\u3002\u5b83\u4ee5\u524d\u53ea\u7528\u4e8e\u519b\u4e8b\u9879\u76ee\uff0c\u73b0\u5728\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528 GPS \u63a5\u6536\u673a\u3002GPS \u7684\u5178\u578b\u5e94\u7528\u5305\u62ec\u6c7d\u8f66\u5bfc\u822a\uff0c\u65f6\u95f4\u8f6c\u6362\uff0c\u4ea4\u901a\u4fe1\u53f7\u5b9a\u65f6\uff0c\u9632\u76d7\u548c\u8ddf\u8e2a\u88c5\u7f6e\u7b49\u3002\n\n\nRephone Community\n\n\n\n\n\n\nWe\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the \nRePhone Community\n.\n\n\nNow join us in the \nRePhone Community\n! Together we seek answers, make interesting stuff, care about each other, and share our experiences.\n\n\nFrequently Asked Questions\n\n\nSome frequently asked questions in \nRePhone Community\n are collected and answered to the topic \"Frequently Asked Questions of RePhone (FAQ)\" , the topic will be kept updating whenever a new FAQ comes out.\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u4ee3\u7801]\nSource Code for Xadow GPS v2\n\n\n[\u4ee3\u7801]\nTesting Code for Xadow GPS v2 based on Eclipse IDE\n\n\n[\u539f\u7406\u56fe]\nXadow GPS v2 Schematic Files\n\n\n[\u5165\u95e8\u6307\u5357]\nLearn how to burn new firmware with a mbed board\n\n\n[\u6570\u636e\u624b\u518c]\nSpecification for GPS L70 and the chip antenna", 
            "title": "Xadow GPS V2"
        }, 
        {
            "location": "/Xadow_GPS_V2/#_1", 
            "text": "\u91c7\u7528EASY\u2122\uff0c\u5148\u8fdb\u7684AGPS\u6280\u672f\uff0c\u800c\u4e0d\u9700\u8981\u5916\u90e8\u5b58\u50a8\u5668  \u5177\u5907\u8d85\u4f4e\u529f\u8017\u7684\u641c\u5bfb\u6a21\u5f0f  \u91c7\u7528AlwaysLocate\u2122\uff0c\u4e00\u6b3e\u53ef\u9009\u62e9\u5de5\u4f5c\u6a21\u5f0f\u7684\u667a\u80fd\u63a7\u5236\u5668  \u9ad8\u7075\u654f\u5ea6  \u652f\u6301QZSS  \u652f\u6301 DGPS\uff0cSBAS\uff08WAAS / EGNOS / MSAS / GAGAN\uff09  Anti-Jamming, Multi-tone \u6709\u6e90\u5e72\u6270\u62b5\u6d88\u5668  \u5185\u7f6e\u82af\u7247\u5929\u7ebf\uff0c\u6548\u7387\u9ad8\u8fbe 83\uff05  \u914d\u5907 11 \u4e2a\u5f15\u811a Xadow \u8fde\u63a5\u53e3\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6 Xadow \u6a21\u5757\u65b9\u4fbf\u7684\u8fdb\u884c\u8fde\u63a5  \u53ef\u53e0\u52a0\u4f7f\u7528\uff0c\u8fde\u63a5\u6216\u710a\u63a5\u5230\u5176\u4ed6Xadow\u6a21\u5757\u4e0a\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Xadow_GPS_V2/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570      \u5fae\u63a7\u5236\u5668  Kinetis KL02    \u5185\u6838  ARM\u00ae 32-bit Cortex\u00ae -M0+CPU    \u8f93\u5165\u7535\u538b  3.3 ~ 6 V (\u901a\u8fc7\u6269\u5c55\u677f\u7684\u5f15\u811a\u8f93\u5165)    Flash  32 KB    SRAM  4 KB    \u65f6\u949f\u9891\u7387  48 MHz    \u529f\u8017  \u8ddf\u8e2a\u65f6 18ma\uff0c\u6355\u83b7\u65f6 21mA    \u7701\u7535\u6a21\u5f0f  \u5178\u578b\u503c\uff1a3mA@AlwaysLocateTM, 7uA@Backup Mode, 180uA@Standby Mode    \u9891\u9053  22(\u8ddf\u8e2a\u65f6) / 66 (\u6355\u83b7\u65f6)    \u66f4\u65b0\u9891\u7387  1Hz(\u9ed8\u8ba4), \u6700\u5927 10Hz    \u6c34\u5e73\u4f4d\u7f6e\u7cbe\u5ea6  2.5m CEP    \u901f\u5ea6\u7cbe\u5ea6  0.1m/s    \u6700\u5927\u901f\u5ea6  \u6700\u5927 515m/s    EASYTM \u51b7\u542f\u52a8/\u70ed\u542f\u52a8\u65f6\u95f4  215s/5s    \u6355\u83b7\u7075\u654f\u5ea6  -145dBm    \u8ddf\u8e2a\u7075\u654f\u5ea6  -163dBm    \u5de5\u4f5c\u6e29\u5ea6  -40\u2103 to 85\u2103    NMEA \u534f\u8bae  0183/PMTK    \u5929\u7ebf\u7c7b\u578b  \u82af\u7247\u5929\u7ebf    \u63a5\u53e3  \u901a\u8fc7 I2C (7-bit \u5730\u5740 0x05) \u4e0e Xadow GSM+BLE \u8fde\u63a5    \u5c3a\u5bf8  25.37mm X 20.30mm / 1\u201d \u00d7 0.8\u201d", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Xadow_GPS_V2/#_3", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u89c8"
        }, 
        {
            "location": "/Xadow_GPS_V2/#gps", 
            "text": "\u5168\u7403\u5b9a\u4f4d\u7cfb\u7edf\uff08GPS\uff09\u662f\u4e00\u79cd\u57fa\u4e8e\u7a7a\u95f4\u7684\u5bfc\u822a\u7cfb\u7edf\uff0c\u53ef\u4ee5\u63d0\u4f9b\u5b9e\u65f6\u548c\u5168\u5929\u5019\u7684\u5730\u7406\u4f4d\u7f6e\uff0c\u9ad8\u5ea6\uff0c\u884c\u9a76\u901f\u5ea6\u548c\u65f6\u95f4\u4fe1\u606f\uff0c\u65e0\u8bba\u5728\u5730\u7403\u4e0a\u8fd8\u662f\u5728\u5730\u7403\u9644\u8fd1\uff0c\u90fd\u53ef\u4ee5\u5728\u65e0\u969c\u788d\u73af\u5883\u4e0b\u627e\u5230\u81f3\u5c11 4 \u9897 GPS \u536b\u661f\u3002\u5b83\u4ee5\u524d\u53ea\u7528\u4e8e\u519b\u4e8b\u9879\u76ee\uff0c\u73b0\u5728\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528 GPS \u63a5\u6536\u673a\u3002GPS \u7684\u5178\u578b\u5e94\u7528\u5305\u62ec\u6c7d\u8f66\u5bfc\u822a\uff0c\u65f6\u95f4\u8f6c\u6362\uff0c\u4ea4\u901a\u4fe1\u53f7\u5b9a\u65f6\uff0c\u9632\u76d7\u548c\u8ddf\u8e2a\u88c5\u7f6e\u7b49\u3002", 
            "title": "\u5173\u4e8e\u5168\u7403\u5b9a\u4f4d\u7cfb\u7edf\uff08GPS\uff09"
        }, 
        {
            "location": "/Xadow_GPS_V2/#rephone-community", 
            "text": "We\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the  RePhone Community .  Now join us in the  RePhone Community ! Together we seek answers, make interesting stuff, care about each other, and share our experiences.  Frequently Asked Questions  Some frequently asked questions in  RePhone Community  are collected and answered to the topic \"Frequently Asked Questions of RePhone (FAQ)\" , the topic will be kept updating whenever a new FAQ comes out.", 
            "title": "Rephone Community"
        }, 
        {
            "location": "/Xadow_GPS_V2/#_4", 
            "text": "[\u4ee3\u7801] Source Code for Xadow GPS v2  [\u4ee3\u7801] Testing Code for Xadow GPS v2 based on Eclipse IDE  [\u539f\u7406\u56fe] Xadow GPS v2 Schematic Files  [\u5165\u95e8\u6307\u5357] Learn how to burn new firmware with a mbed board  [\u6570\u636e\u624b\u518c] Specification for GPS L70 and the chip antenna", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Xadow_GSM_Breakout/", 
            "text": "\u677f\u5b50\u4ece 35 \u4e2a\u5f15\u811a\u7684 Xadow \u63a5\u5934\u4e2d\u5f15\u51fa 30 \u4e2a\u5f15\u811a\uff0c\u4ee5 0.1\u2019\u2019(2.54mm) \u4e3a\u95f4\u9694\u6392\u6210 5 \u884c\u3002\u5982\u679c\u628a\u5bfc\u7ebf\u6216\u6392\u9488\u710a\u63a5\u5728\u8fd9\u4e9b\u710a\u76d8\u4e0a\uff0c\u60a8\u5c31\u53ef\u4ee5\u8bbf\u95ee\uff1a\n- \u6700\u591a 16 \u8def\u901a\u7528\u8f93\u5165\u8f93\u51fa\u63a5\u53e3(GPIOs)\n- SPI\u3001I2C\u3001UART \u7b49\u63a5\u53e3\n- \u63a5\u626c\u58f0\u5668\u3001\u97f3\u54cd\u3001\u8033\u673a\u6216\u9ea6\u514b\u98ce\u7b49\u5916\u8bbe\u7684\u5f15\u811a\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\n\n\u5f15\u811a\u5b9a\u4e49\n\n\n\n\n\n\n\n\n\n\n\u5982\u679c\u60a8\u7684\u9879\u76ee\u662f\u4f7f\u7528Arduino IDE\u6784\u5efa\u7684\uff0c\u8bf7\u53c2\u8003\"Pin Definitions for Arduino IDE\"\u3002\n\n\n\u5982\u679c\u60a8\u7684\u9879\u76ee\u662f\u4f7f\u7528Eclipse IDE\u6784\u5efa\u7684\uff0c\"Pin Definitions for Eclipse IDE\"\u3002\n\n\n\n\n\u6ce8\u610f\n\n\n\n\n\n\n\u5f53\u901a\u4fe1\u6a21\u5757\u5de5\u4f5c\u65f6\u67d0\u4e9b\u5f15\u811a\u6709\u53ef\u80fd\u88ab\u5360\u7528\u3002\u8bf7\u5728\u4f7f\u7528\u4e4b\u524d\u68c0\u67e5Xadow GSM Breakout\u677f\u5f15\u811a\u7684\u53ef\u7528\u6027\u3002\n\n\n\u8bf7\u786e\u4fdd\u77e5\u9053\u6bcf\u4e2a\u5f15\u811a\u7684\u7535\u538b\uff082.8V\u8fd8\u662f1.8V\uff09\uff0c\u5982\u679c\u5de5\u4f5c\u7535\u538b\u8d85\u8fc7\u9650\u5b9a\u8303\u56f4\u5c06\u4f1a\u9020\u6210\u4e0d\u53ef\u6062\u590d\u7684\u635f\u574f\u3002\n\n\n\n\nRePhone Community\n\n\n\n\n\n\nWe\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the \nRePhone Community\n.\n\n\nNow join us in the \nRePhone Community\n! Together we seek answers, make interesting stuff, care about each other, and share our experiences.\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\nXadow_GSM+BLE eagle files", 
            "title": "Xadow GSM Breakout"
        }, 
        {
            "location": "/Xadow_GSM_Breakout/#_1", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Xadow_GSM_Breakout/#_2", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Xadow_GSM_Breakout/#_3", 
            "text": "\u5982\u679c\u60a8\u7684\u9879\u76ee\u662f\u4f7f\u7528Arduino IDE\u6784\u5efa\u7684\uff0c\u8bf7\u53c2\u8003\"Pin Definitions for Arduino IDE\"\u3002  \u5982\u679c\u60a8\u7684\u9879\u76ee\u662f\u4f7f\u7528Eclipse IDE\u6784\u5efa\u7684\uff0c\"Pin Definitions for Eclipse IDE\"\u3002", 
            "title": "\u5f15\u811a\u5b9a\u4e49"
        }, 
        {
            "location": "/Xadow_GSM_Breakout/#_4", 
            "text": "\u5f53\u901a\u4fe1\u6a21\u5757\u5de5\u4f5c\u65f6\u67d0\u4e9b\u5f15\u811a\u6709\u53ef\u80fd\u88ab\u5360\u7528\u3002\u8bf7\u5728\u4f7f\u7528\u4e4b\u524d\u68c0\u67e5Xadow GSM Breakout\u677f\u5f15\u811a\u7684\u53ef\u7528\u6027\u3002  \u8bf7\u786e\u4fdd\u77e5\u9053\u6bcf\u4e2a\u5f15\u811a\u7684\u7535\u538b\uff082.8V\u8fd8\u662f1.8V\uff09\uff0c\u5982\u679c\u5de5\u4f5c\u7535\u538b\u8d85\u8fc7\u9650\u5b9a\u8303\u56f4\u5c06\u4f1a\u9020\u6210\u4e0d\u53ef\u6062\u590d\u7684\u635f\u574f\u3002", 
            "title": "\u6ce8\u610f"
        }, 
        {
            "location": "/Xadow_GSM_Breakout/#rephone-community", 
            "text": "We\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the  RePhone Community .  Now join us in the  RePhone Community ! Together we seek answers, make interesting stuff, care about each other, and share our experiences.", 
            "title": "RePhone Community"
        }, 
        {
            "location": "/Xadow_GSM_Breakout/#_5", 
            "text": "[Eagle \u6587\u4ef6] Xadow_GSM+BLE eagle files", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/", 
            "text": "\u65e0\u8bba\u662f\u4f7f\u7528\u5916\u90e8\u626c\u58f0\u5668\u548c\u9ea6\u514b\u98ce\u62e8\u6253\u548c\u63a5\u542c\u7535\u8bdd\uff0c\u8fd8\u662f\u4f7f\u7528\u84dd\u7259\u77ed\u8ddd\u79bb\u4f20\u8f93\u6570\u636e\uff0c\u60a8\u90fd\u53ef\u4ee5\u4f7f\u7528 Xadow GSM + BLE \u6765\u5b9e\u73b0\u3002\n\n\n\u4f5c\u4e3a RePhone kit Create \u7684\u6838\u5fc3\uff0cXadow GSM + BLE \u91c7\u7528\u529f\u80fd\u5f3a\u5927\u7684 System-On-Chip (SOC) MT2502\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684\u901a\u4fe1\u534f\u8bae - GSM\uff0cGPRS \u548c\u84dd\u7259\uff08v4.0 \u548c 2.1 \u53cc\u6a21\u5f0f\uff09\u3002\u5b83\u652f\u6301\u8986\u76d6\u5168\u7403\u4efb\u4f55 GSM \u7f51\u7edc\u7684\u56db\u9891 850/900/1800/1900MHz\u3002\u4f7f\u7528\u65f6\u53ea\u9700\u63d2\u5165\u4e00\u5f20 2G Nano SIM \u5361\uff0c\u7136\u540e\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u8702\u7a9d\u7f51\u7edc\u901a\u4fe1\u4e86\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u57fa\u4e8e\u6700\u5c0f\u7684\u5546\u4e1a\u7cfb\u7edf\u7ea7\u82af\u7247\n\n\n\u5e02\u573a\u4e0a\u6700\u5c0f\u7684\u5c3a\u5bf8\uff085.4mm x 6.2mm\uff09\n\n\n\u5f00\u6e90\u548c\u6a21\u5757\u5316\u8bbe\u8ba1\n\n\n\u8d28\u91cf\u8f7b\uff0c\u4f53\u79ef\u5c0f\n\n\n\u5185\u7f6e Xadow \u8fde\u63a5\u5668\uff0c\u4fbf\u4e8e\u63d2\u62d4 FPC \u7535\u7f06  \n\n\n\u53ef\u4e0e\u5176\u4ed6 Xadow \u6a21\u5757\u548c\u5f00\u53d1\u677f\u8054\u5408\u4f7f\u7528\n\n\n\u5927\u591a\u6570 RePhone \u5957\u4ef6\u7684\u6838\u5fc3\u6a21\u5757\n\n\n\u957f\u9014\u548c\u77ed\u8ddd\u79bb\u901a\u4fe1\u7684\u5b8c\u7f8e\u9009\u62e9\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u5fae\u63a7\u5236\u5668\n\n\nMT2502\n\n\n\n\n\n\n\n\n\n\nMCU \u6838\u5fc3\n\n\n32-bit ARM7EJ-STM RISC \u5904\u7406\u5668\n\n\n\n\n\n\nRAM\n\n\n4 MB\n\n\n\n\n\n\nFlash Memory\n\n\n16 MB\n\n\n\n\n\n\n\u7535\u6e90\u8981\u6c42\n\n\n3.3 ~ 4.2V(\u65e0 SIM)/3.5 ~ 4.2V(\u6709  SIM)\n\n\n\n\n\n\n\u529f\u8017\n\n\n20mW/30mW/52mW @ \u5f85\u673a(\u65e0\u901a\u4fe1)/\u5f85\u673a(GSM)/\u5f85\u673a(BT)\n\n\n\n\n\n\n\u9891\u6bb5\n\n\n850/900/1800/1900 MHz\n\n\n\n\n\n\nGPRS\n\n\nClass 12 modem\n\n\n\n\n\n\n\u65f6\u949f\u9891\u7387\n\n\n260 MHz\n\n\n\n\n\n\n\u63a5\u53e3\n\n\n35 PIN \u63a5\u53e3 \n 11 PIN Xadow \u6a21\u5757\u63a5\u53e3; JST 1.0 \u7535\u6c60\u63a5\u53e3\n\n\n\n\n\n\n\u901a\u4fe1\u63a5\u53e3\n\n\nLCD, Audio, I2C, SPI, UART, \u548c GPIOs \u7b49\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n25.37mm \u00d7 20.30mm / 1\u201d \u00d7 0.8\u201d\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u4e0b\u9762\u7684\u56fe\u7247\u4ee5 \n\u4ece\u5de6\u5230\u53f3\n \u7684\u987a\u5e8f\u8bf4\u660e\u4e86 11 \u9488 Xadow \u63a5\u53e3\uff0c\u53ef\u710a\u63a5\u5f15\u811a\u548c 35 \u9488 Xadow \u63a5\u53e3\u7684\u9488\u811a\u5b9a\u4e49\u3002\n\n\n  \n\n\n\u5145\u7535\n\n\n\u7ed9 RePhone/Xadow GSM+BLE \u4f9b\u7535\u53ef\u4ee5\u4f7f\u7528 \n3.5V ~ 4.2V\n \u7684\u7535\u6c60\uff0c\u4f7f\u7528 \nJST 1.0 \u516c\u5934\n \u8fde\u63a5\uff0c\u6216\u8005\u7528\u7535\u7ebf\u8fde\u63a5 \n\u5f15\u811a3(VCC)\n \u548c \n\u5f15\u811a6(GND)\n \u8fdb\u884c\u4f9b\u7535\uff0c\u63a5\u53e3\u5982\u4e0a\u56fe\u6240\u793a\u3002\n\n\n\u7535\u6c60\u5145\u7535\n\n\nXadow GSM+BLE \u4f7f\u7528 JST 1.0 \u6bcd\u5934(\u6dd8\u5b9d\u65e0\u6b64\u4ea7\u54c1) \u8fde\u63a5\u7535\u6c60\uff0c\u4f7f\u7528\u4e00\u6839 USB \u7535\u7f06\u8fde\u63a5\u677f\u5b50\u5373\u53ef\u4e3a\u7535\u6c60\u5145\u7535\u3002\n\n\n\u64cd\u4f5c\u6a21\u5f0f\n\n\nXadow GSM + BLE \u6709\u4e24\u79cd\u5de5\u4f5c\u6a21\u5f0f\uff0c\u5f53\u60a8\u5f00\u673a\u5e76\u8fde\u63a5\u7535\u8111\u65f6\uff0c\n\u6309\u4f4f\u7535\u6e90\u952e2\u79d2\u949f\n \u5c06\u6a21\u5757 \nON\n \u6216 \nOFF\n \u8fdb\u5165 \n\u5927\u5bb9\u91cf\u5b58\u50a8\u6a21\u5f0f\n \u6216 \n\u95ea\u5b58/\u8c03\u8bd5\u6a21\u5f0f\n\u3002\n\n  \n\n\n\u5927\u5bb9\u91cf\u5b58\u50a8\u6a21\u5f0f\n\n\n\u5f53 Xadow GSM + BLE \u4e3a \nOFF\n \u65f6\uff0c\u901a\u8fc7 Micro USB \u7535\u7f06\u5c06\u7535\u8def\u677f\uff08\u8fde\u63a5\u7535\u6c60\uff09\u8fde\u63a5\u5230 PC\uff0c\u5373\u53ef\u5728 PC \u4e0a\u8bbf\u95ee\u677f\u8f7d 5MB \u201c\u5927\u5bb9\u91cf\u5b58\u50a8\u6a21\u5f0f\u201d\u3002\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\uff08vxp \u6587\u4ef6\uff09\u548c\u7cfb\u7edf\u8bbe\u7f6e\u90fd\u5b58\u50a8\u5728\u8fd9\u4e2a 5MB \u5b58\u50a8\u5668\u4e2d\u3002\n\n  \n\n\n\u95ea\u5b58/\u8c03\u8bd5\u6a21\u5f0f\n\n\nXadow GSM + BLE \u662f \nON\n \u65f6\uff0c\u901a\u8fc7 Micro USB \u7535\u7f06\u5c06\u7535\u8def\u677f\uff08\u8fde\u63a5\u7535\u6c60\uff09\u8fde\u63a5\u5230 PC\uff0c\u60a8\u53ef\u4ee5\u5728 \n\u8bbe\u5907\u7ba1\u7406\u5668\n \u91cc\u627e\u5230\u4e24\u4e2a \nCOM\u7aef\u53e3\n\uff1a\n\n\n\n\nMTK USB Debug Port(COM4)\n  \n\n\nMTK USB Modem Port(COM5)\n  \n\n\n\n\nCOM \u7aef\u53e3\u53f7\u53ef\u80fd\u4e0e\u60a8 PC \u4e0a\u770b\u5230\u7684\u4e0d\u540c\u3002 \u6bcf\u4e2a COM \u7aef\u53e3\u6839\u636e\u60a8\u4f7f\u7528\u7684\u5f00\u53d1\u73af\u5883\u5177\u6709\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u8bf7\u53c2\u9605\u5165\u95e8\u6307\u5bfc\u90e8\u5206\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\n\n\n\u6253\u5f00 \n\u8bbe\u5907\u7ba1\u7406\u5668\n\uff1a\u5728\u684c\u9762\u4e0a\u53f3\u952e\u70b9\u51fb \n\u6211\u7684\u7535\u8111\n\uff0c\u9009\u62e9 \n\u7ba1\u7406\n\uff0c\u5728\u5de6\u4fa7\u5217\u8868\u4e2d \n\u8bbe\u5907\u7ba1\u7406\u5668\n\uff0c\u5355\u51fb\u6253\u5f00\uff0c\u627e\u5230 \n\u7aef\u53e3\uff08COM \u548c LPT\uff09\n\uff0c\u70b9\u5f00\u770b\u5230\u5982\u4e0b\u6240\u793a\uff1a\n\n  \n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u6211\u4eec\u5f00\u53d1\u4e86\u4e30\u5bcc\u7684 Arduino IDE \u5e93\uff0cLua \u5e93\u548c JavaScript \u5e93\uff0c\u5e76\u9644\u6709\u8be6\u7ec6\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u5e2e\u52a9\u5165\u95e8\u7ea7\u7a0b\u5e8f\u5458\u8f7b\u677e\u5feb\u901f\u5730\u5f00\u53d1 RePhone \u6a21\u5757\u3002\n\n\n\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u4e8e Eclipse IDE \u7684\u529f\u80fd\u5f3a\u5927\u7684 SDK\uff0c\u4f7f C/C ++\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5f00\u53d1\u66f4\u667a\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\n  \n\n\n \n \n\n\n\n\n \n\n\n\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 RePhone \u4e3b\u9875\u4e0a\u7684 \nRePhone Development Environment\n  \u3002\n\n\nRelated Projects\n\n\nCheck on awesome RePhone projects that has been achieved with RePhone.\n\n\nA Traceable Dog Collar\n\n5 steps to make a traceable dog collar for your lovely puppy. \n\n\n  \n\n\nRePhone Community\n\n\n \n \n\nWe\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the RePhone Community.\n\n\nNow join us in the \nRePhone Community\n! Together we seek answers, make interesting stuff, care about each other, and share our experiences.\n\n\nFrequently Asked Questions\n\n\nSome frequently asked questions in RePhone Community are collected and answered to the topic \"\nFrequently Asked Questions of RePhone (FAQ)\n\" , the topic will be kept updating whenever a new FAQ comes out.  \n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n[Eagle \u6587\u4ef6]\nXadow_GSM+BLE eagle files \n  \n\n\n[\u6570\u636e\u624b\u518c]\nDatasheet for eagle files\n  \n\n\n[\u517c\u5bb9\u6027]\nCompatibility between GSM+BLE and Xadow 1.0 modules", 
            "title": "Xadow GSMPlusBLE"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_1", 
            "text": "\u57fa\u4e8e\u6700\u5c0f\u7684\u5546\u4e1a\u7cfb\u7edf\u7ea7\u82af\u7247  \u5e02\u573a\u4e0a\u6700\u5c0f\u7684\u5c3a\u5bf8\uff085.4mm x 6.2mm\uff09  \u5f00\u6e90\u548c\u6a21\u5757\u5316\u8bbe\u8ba1  \u8d28\u91cf\u8f7b\uff0c\u4f53\u79ef\u5c0f  \u5185\u7f6e Xadow \u8fde\u63a5\u5668\uff0c\u4fbf\u4e8e\u63d2\u62d4 FPC \u7535\u7f06    \u53ef\u4e0e\u5176\u4ed6 Xadow \u6a21\u5757\u548c\u5f00\u53d1\u677f\u8054\u5408\u4f7f\u7528  \u5927\u591a\u6570 RePhone \u5957\u4ef6\u7684\u6838\u5fc3\u6a21\u5757  \u957f\u9014\u548c\u77ed\u8ddd\u79bb\u901a\u4fe1\u7684\u5b8c\u7f8e\u9009\u62e9", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_2", 
            "text": "\u5fae\u63a7\u5236\u5668  MT2502      MCU \u6838\u5fc3  32-bit ARM7EJ-STM RISC \u5904\u7406\u5668    RAM  4 MB    Flash Memory  16 MB    \u7535\u6e90\u8981\u6c42  3.3 ~ 4.2V(\u65e0 SIM)/3.5 ~ 4.2V(\u6709  SIM)    \u529f\u8017  20mW/30mW/52mW @ \u5f85\u673a(\u65e0\u901a\u4fe1)/\u5f85\u673a(GSM)/\u5f85\u673a(BT)    \u9891\u6bb5  850/900/1800/1900 MHz    GPRS  Class 12 modem    \u65f6\u949f\u9891\u7387  260 MHz    \u63a5\u53e3  35 PIN \u63a5\u53e3   11 PIN Xadow \u6a21\u5757\u63a5\u53e3; JST 1.0 \u7535\u6c60\u63a5\u53e3    \u901a\u4fe1\u63a5\u53e3  LCD, Audio, I2C, SPI, UART, \u548c GPIOs \u7b49    \u5c3a\u5bf8  25.37mm \u00d7 20.30mm / 1\u201d \u00d7 0.8\u201d", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_3", 
            "text": "\u4e0b\u9762\u7684\u56fe\u7247\u4ee5  \u4ece\u5de6\u5230\u53f3  \u7684\u987a\u5e8f\u8bf4\u660e\u4e86 11 \u9488 Xadow \u63a5\u53e3\uff0c\u53ef\u710a\u63a5\u5f15\u811a\u548c 35 \u9488 Xadow \u63a5\u53e3\u7684\u9488\u811a\u5b9a\u4e49\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_4", 
            "text": "\u7ed9 RePhone/Xadow GSM+BLE \u4f9b\u7535\u53ef\u4ee5\u4f7f\u7528  3.5V ~ 4.2V  \u7684\u7535\u6c60\uff0c\u4f7f\u7528  JST 1.0 \u516c\u5934  \u8fde\u63a5\uff0c\u6216\u8005\u7528\u7535\u7ebf\u8fde\u63a5  \u5f15\u811a3(VCC)  \u548c  \u5f15\u811a6(GND)  \u8fdb\u884c\u4f9b\u7535\uff0c\u63a5\u53e3\u5982\u4e0a\u56fe\u6240\u793a\u3002", 
            "title": "\u5145\u7535"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_5", 
            "text": "Xadow GSM+BLE \u4f7f\u7528 JST 1.0 \u6bcd\u5934(\u6dd8\u5b9d\u65e0\u6b64\u4ea7\u54c1) \u8fde\u63a5\u7535\u6c60\uff0c\u4f7f\u7528\u4e00\u6839 USB \u7535\u7f06\u8fde\u63a5\u677f\u5b50\u5373\u53ef\u4e3a\u7535\u6c60\u5145\u7535\u3002", 
            "title": "\u7535\u6c60\u5145\u7535"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_6", 
            "text": "Xadow GSM + BLE \u6709\u4e24\u79cd\u5de5\u4f5c\u6a21\u5f0f\uff0c\u5f53\u60a8\u5f00\u673a\u5e76\u8fde\u63a5\u7535\u8111\u65f6\uff0c \u6309\u4f4f\u7535\u6e90\u952e2\u79d2\u949f  \u5c06\u6a21\u5757  ON  \u6216  OFF  \u8fdb\u5165  \u5927\u5bb9\u91cf\u5b58\u50a8\u6a21\u5f0f  \u6216  \u95ea\u5b58/\u8c03\u8bd5\u6a21\u5f0f \u3002", 
            "title": "\u64cd\u4f5c\u6a21\u5f0f"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_7", 
            "text": "\u5f53 Xadow GSM + BLE \u4e3a  OFF  \u65f6\uff0c\u901a\u8fc7 Micro USB \u7535\u7f06\u5c06\u7535\u8def\u677f\uff08\u8fde\u63a5\u7535\u6c60\uff09\u8fde\u63a5\u5230 PC\uff0c\u5373\u53ef\u5728 PC \u4e0a\u8bbf\u95ee\u677f\u8f7d 5MB \u201c\u5927\u5bb9\u91cf\u5b58\u50a8\u6a21\u5f0f\u201d\u3002\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\uff08vxp \u6587\u4ef6\uff09\u548c\u7cfb\u7edf\u8bbe\u7f6e\u90fd\u5b58\u50a8\u5728\u8fd9\u4e2a 5MB \u5b58\u50a8\u5668\u4e2d\u3002", 
            "title": "\u5927\u5bb9\u91cf\u5b58\u50a8\u6a21\u5f0f"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_8", 
            "text": "Xadow GSM + BLE \u662f  ON  \u65f6\uff0c\u901a\u8fc7 Micro USB \u7535\u7f06\u5c06\u7535\u8def\u677f\uff08\u8fde\u63a5\u7535\u6c60\uff09\u8fde\u63a5\u5230 PC\uff0c\u60a8\u53ef\u4ee5\u5728  \u8bbe\u5907\u7ba1\u7406\u5668  \u91cc\u627e\u5230\u4e24\u4e2a  COM\u7aef\u53e3 \uff1a   MTK USB Debug Port(COM4)     MTK USB Modem Port(COM5)      COM \u7aef\u53e3\u53f7\u53ef\u80fd\u4e0e\u60a8 PC \u4e0a\u770b\u5230\u7684\u4e0d\u540c\u3002 \u6bcf\u4e2a COM \u7aef\u53e3\u6839\u636e\u60a8\u4f7f\u7528\u7684\u5f00\u53d1\u73af\u5883\u5177\u6709\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u8bf7\u53c2\u9605\u5165\u95e8\u6307\u5bfc\u90e8\u5206\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002  \u6253\u5f00  \u8bbe\u5907\u7ba1\u7406\u5668 \uff1a\u5728\u684c\u9762\u4e0a\u53f3\u952e\u70b9\u51fb  \u6211\u7684\u7535\u8111 \uff0c\u9009\u62e9  \u7ba1\u7406 \uff0c\u5728\u5de6\u4fa7\u5217\u8868\u4e2d  \u8bbe\u5907\u7ba1\u7406\u5668 \uff0c\u5355\u51fb\u6253\u5f00\uff0c\u627e\u5230  \u7aef\u53e3\uff08COM \u548c LPT\uff09 \uff0c\u70b9\u5f00\u770b\u5230\u5982\u4e0b\u6240\u793a\uff1a", 
            "title": "\u95ea\u5b58/\u8c03\u8bd5\u6a21\u5f0f"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_9", 
            "text": "\u6211\u4eec\u5f00\u53d1\u4e86\u4e30\u5bcc\u7684 Arduino IDE \u5e93\uff0cLua \u5e93\u548c JavaScript \u5e93\uff0c\u5e76\u9644\u6709\u8be6\u7ec6\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u5e2e\u52a9\u5165\u95e8\u7ea7\u7a0b\u5e8f\u5458\u8f7b\u677e\u5feb\u901f\u5730\u5f00\u53d1 RePhone \u6a21\u5757\u3002  \u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u4e8e Eclipse IDE \u7684\u529f\u80fd\u5f3a\u5927\u7684 SDK\uff0c\u4f7f C/C ++\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5f00\u53d1\u66f4\u667a\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u3002              \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 RePhone \u4e3b\u9875\u4e0a\u7684  RePhone Development Environment   \u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#related-projects", 
            "text": "Check on awesome RePhone projects that has been achieved with RePhone.  A Traceable Dog Collar \n5 steps to make a traceable dog collar for your lovely puppy.", 
            "title": "Related Projects"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#rephone-community", 
            "text": "We\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the RePhone Community.  Now join us in the  RePhone Community ! Together we seek answers, make interesting stuff, care about each other, and share our experiences.", 
            "title": "RePhone Community"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#frequently-asked-questions", 
            "text": "Some frequently asked questions in RePhone Community are collected and answered to the topic \" Frequently Asked Questions of RePhone (FAQ) \" , the topic will be kept updating whenever a new FAQ comes out.", 
            "title": "Frequently Asked Questions"
        }, 
        {
            "location": "/Xadow_GSMPlusBLE/#_10", 
            "text": "[Eagle \u6587\u4ef6] Xadow_GSM+BLE eagle files      [\u6570\u636e\u624b\u518c] Datasheet for eagle files     [\u517c\u5bb9\u6027] Compatibility between GSM+BLE and Xadow 1.0 modules", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Xadow_Basic_Sensors/", 
            "text": "Xadow Basic Sensors \u5728\u4e00\u5757\u5355\u677f\u4e0a\u96c6\u6210\u4e86\u4e09\u79cd\u4e0d\u540c\u7684\u4f20\u611f\u5668\uff1a\n- 3\u8f74\u52a0\u901f\u5ea6\u8ba1\uff0c\u7528\u4e8e\u8fd0\u52a8\u68c0\u6d4b\uff0c\u6d3b\u52a8\u76d1\u6d4b\u548c\u901f\u5ea6\u8ddf\u8e2a\n- \u53cc\u4e8c\u6781\u7ba1\u6570\u5b57\u5149\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u5355\u72ec\u6d4b\u91cf\u7ea2\u5916\uff0c\u5168\u5149\u8c31\u6216\u4eba\u7c7b\u53ef\u89c1\u5149\n- \u7528\u4e8e\u6e29\u5ea6\u76d1\u6d4b\u7684\u6e29\u5ea6\u4f20\u611f\u5668\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u677f\u8f7d\u4e09\u79cd\u4f20\u611f\u5668\n\n\n\u914d\u5408 RePhone Kit Create \u4f7f\u7528\u65f6\u5373\u63d2\u5373\u7528\n\n\n\u5f00\u6e90\u548c\u6a21\u5757\u5316\u8bbe\u8ba1\n\n\n\u5c0f\u800c\u8584\n\n\n\u5185\u7f6e 11 PIN Xadow \u63a5\u53e3\uff0c\u53ef\u4e0e\u5176\u4ed6 Xadow \u6a21\u5757\u7075\u6d3b\u8fde\u63a5\n\n\n\u53ef\u5806\u53e0\uff0c\u53ef\u8fde\u63a5\u5e76\u53ef\u4e0e\u5176\u4ed6Xadow\u6a21\u5757\u710a\u63a5\u4f7f\u7528\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u6982\u8ff0\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u5fae\u63a7\u5236\u5668\n\n\nSTM32F030F4\n\n\n\n\n\n\n\u6838\u5fc3\n\n\nARM\u00ae 32-bit Cortex\u00ae -M0 CPU\n\n\n\n\n\n\n\u4f9b\u7535\n\n\n3.3 ~ 6 V (\u901a\u8fc7\u5916\u63a5\u5f15\u811a)\n\n\n\n\n\n\nFlash\n\n\n16 KB\n\n\n\n\n\n\nSRAM\n\n\n4 KB\n\n\n\n\n\n\n\u65f6\u949f\u9891\u7387\n\n\n48 MHz\n\n\n\n\n\n\n\u4f7f\u7528\u6e29\u5ea6\u8303\u56f4\n\n\n-30\u00b0C to 70\u00b0C\n\n\n\n\n\n\n\u901a\u4fe1\u63a5\u53e3\n\n\n\u4e0e Xadow GSM+BLE \u901a\u8fc7 I2C\u901a\u4fe1\uff087-bit \u5730\u5740 0x03\uff09\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n25.37mm \u00d7 20.30mm / 1\u201d \u00d7 0.8\u201d\n\n\n\n\n\n\n\n\n3 \u8f74\u52a0\u901f\u5ea6\u8ba1 (ADXL345)\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\ng \u503c\u6d4b\u91cf\u8303\u56f4\n\n\n\u00b12g (\u9ed8\u8ba4), \u00b14g, \u00b18g, or \u00b116g\n\n\n\n\n\n\n\u5206\u8fa8\u7387\n\n\n\u968f\u7740\u6d4b\u91cf g \u503c\u8303\u56f4\u7684\u589e\u52a0\uff0c\u5728\u6d4b\u91cf \u00b116g \u8303\u56f4\u65f6\u8fbe\u5230\u6700\u9ad8\u5206\u8fa8\u7387 13-bit\u3002\n\n\n\n\n\n\n\n\n\u6570\u5b57\u5149\u7ebf\u4f20\u611f\u5668 (TSL2561) -- \u63a5\u8fd1\u4eba\u773c\u7684\u8303\u56f4\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u52a8\u6001\u8303\u56f4 (Lux)\n\n\n0.1 \u5230 40,000 Lux\n\n\n\n\n\n\n\u53cc\u5149\u7535\u4e8c\u6781\u7ba1\n\n\n\u7ea2\u5916\u548c\u5168\u5149\u8c31\n\n\n\n\n\n\n\n\n\u6e29\u5ea6\u4f20\u611f\u5668 (LM75ADP)\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u6d4b\u91cf\u6e29\u5ea6\u8303\u56f4\n\n\n-55\u00b0C to 125 \u00b0C\n\n\n\n\n\n\n\u7cbe\u786e\u5ea6\n\n\n-25\u00b0C \u5230 100\u00b0C \u8303\u56f4\u65f6 \u00b1 2\u00b0C \n-55\u00b0C \u5230 25\u00b0C \u8303\u56f4\u548c 100 \u00b0C \u5230 125\u00b0C \u8303\u56f4\u65f6 \u00b1 3\u00b0C\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\u914d\u5408 RePhone Kit Create \u4f7f\u7528\n\n\n\n\n\u83b7\u53d6\u4f20\u611f\u5668\u6570\u636e\n\n\n\u5728\u6ca1\u7f16\u7a0b\u7684\u60c5\u51b5\u4e0b\u60a8\u53ef\u4ee5\u628a\u5b83\u8fde\u63a5\u5230\u201cRePhone Kit Create\u201d\u7684\u6838\u5fc3\u6a21\u5757(Xadow GSM+BLE)\u4e0a\u8bfb\u53d6\u4f20\u611f\u5668\u7684\u6570\u636e\u3002\n\n\n\n\n\u8bbe\u7f6e\u89e6\u53d1\u6761\u4ef6\n\n\n\u60a8\u8fd8\u53ef\u4ee5\u5c06\u4f20\u611f\u5668\u6570\u636e\u8bbe\u7f6e\u4e3a\u89e6\u53d1\u97f3\u9891\uff0cLED \u77e9\u9635\u548c LED \u706f\u6761\u7b49\u6267\u884c\u5668\u7684\u6761\u4ef6\uff0c\u6216\u89e6\u53d1\u6253\u7535\u8bdd\u548c\u53d1\u9001\u4fe1\u606f\u7b49\u64cd\u4f5c\u3002\n\n\n\n\nRePhone Community\n\n\n\n\n\n\nWe\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the \nRePhone Community\n.\n\n\nNow join us in the \nRePhone Community\n! Together we seek answers, make interesting stuff, care about each other, and share our experiences.\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u4ee3\u7801]\nSource Code for Xadow Basic Sensors\n\n\n[\u539f\u7406\u56fe]\nXadow Duino Schematic Files\n\n\n[\u6570\u636e\u624b\u518c]\nADXL345 - 3_Axis Acceserometer\n\n\n[\u6570\u636e\u624b\u518c]\nLM75A NXP - Temperature Sensor\n\n\n[\u6570\u636e\u624b\u518c]\nTSL2561 - Light Sensor\n\n\n[\u6570\u636e\u624b\u518c]\nSTM32F030F4", 
            "title": "Xadow Basic Sensors"
        }, 
        {
            "location": "/Xadow_Basic_Sensors/#_1", 
            "text": "\u677f\u8f7d\u4e09\u79cd\u4f20\u611f\u5668  \u914d\u5408 RePhone Kit Create \u4f7f\u7528\u65f6\u5373\u63d2\u5373\u7528  \u5f00\u6e90\u548c\u6a21\u5757\u5316\u8bbe\u8ba1  \u5c0f\u800c\u8584  \u5185\u7f6e 11 PIN Xadow \u63a5\u53e3\uff0c\u53ef\u4e0e\u5176\u4ed6 Xadow \u6a21\u5757\u7075\u6d3b\u8fde\u63a5  \u53ef\u5806\u53e0\uff0c\u53ef\u8fde\u63a5\u5e76\u53ef\u4e0e\u5176\u4ed6Xadow\u6a21\u5757\u710a\u63a5\u4f7f\u7528", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Xadow_Basic_Sensors/#_2", 
            "text": "\u6982\u8ff0     \u9879\u76ee  \u503c      \u5fae\u63a7\u5236\u5668  STM32F030F4    \u6838\u5fc3  ARM\u00ae 32-bit Cortex\u00ae -M0 CPU    \u4f9b\u7535  3.3 ~ 6 V (\u901a\u8fc7\u5916\u63a5\u5f15\u811a)    Flash  16 KB    SRAM  4 KB    \u65f6\u949f\u9891\u7387  48 MHz    \u4f7f\u7528\u6e29\u5ea6\u8303\u56f4  -30\u00b0C to 70\u00b0C    \u901a\u4fe1\u63a5\u53e3  \u4e0e Xadow GSM+BLE \u901a\u8fc7 I2C\u901a\u4fe1\uff087-bit \u5730\u5740 0x03\uff09    \u5c3a\u5bf8  25.37mm \u00d7 20.30mm / 1\u201d \u00d7 0.8\u201d     3 \u8f74\u52a0\u901f\u5ea6\u8ba1 (ADXL345)     \u9879\u76ee  \u503c      g \u503c\u6d4b\u91cf\u8303\u56f4  \u00b12g (\u9ed8\u8ba4), \u00b14g, \u00b18g, or \u00b116g    \u5206\u8fa8\u7387  \u968f\u7740\u6d4b\u91cf g \u503c\u8303\u56f4\u7684\u589e\u52a0\uff0c\u5728\u6d4b\u91cf \u00b116g \u8303\u56f4\u65f6\u8fbe\u5230\u6700\u9ad8\u5206\u8fa8\u7387 13-bit\u3002     \u6570\u5b57\u5149\u7ebf\u4f20\u611f\u5668 (TSL2561) -- \u63a5\u8fd1\u4eba\u773c\u7684\u8303\u56f4     \u9879\u76ee  \u503c      \u52a8\u6001\u8303\u56f4 (Lux)  0.1 \u5230 40,000 Lux    \u53cc\u5149\u7535\u4e8c\u6781\u7ba1  \u7ea2\u5916\u548c\u5168\u5149\u8c31     \u6e29\u5ea6\u4f20\u611f\u5668 (LM75ADP)     \u9879\u76ee  \u503c      \u6d4b\u91cf\u6e29\u5ea6\u8303\u56f4  -55\u00b0C to 125 \u00b0C    \u7cbe\u786e\u5ea6  -25\u00b0C \u5230 100\u00b0C \u8303\u56f4\u65f6 \u00b1 2\u00b0C  -55\u00b0C \u5230 25\u00b0C \u8303\u56f4\u548c 100 \u00b0C \u5230 125\u00b0C \u8303\u56f4\u65f6 \u00b1 3\u00b0C", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Xadow_Basic_Sensors/#_3", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Xadow_Basic_Sensors/#rephone-kit-create", 
            "text": "\u83b7\u53d6\u4f20\u611f\u5668\u6570\u636e  \u5728\u6ca1\u7f16\u7a0b\u7684\u60c5\u51b5\u4e0b\u60a8\u53ef\u4ee5\u628a\u5b83\u8fde\u63a5\u5230\u201cRePhone Kit Create\u201d\u7684\u6838\u5fc3\u6a21\u5757(Xadow GSM+BLE)\u4e0a\u8bfb\u53d6\u4f20\u611f\u5668\u7684\u6570\u636e\u3002   \u8bbe\u7f6e\u89e6\u53d1\u6761\u4ef6  \u60a8\u8fd8\u53ef\u4ee5\u5c06\u4f20\u611f\u5668\u6570\u636e\u8bbe\u7f6e\u4e3a\u89e6\u53d1\u97f3\u9891\uff0cLED \u77e9\u9635\u548c LED \u706f\u6761\u7b49\u6267\u884c\u5668\u7684\u6761\u4ef6\uff0c\u6216\u89e6\u53d1\u6253\u7535\u8bdd\u548c\u53d1\u9001\u4fe1\u606f\u7b49\u64cd\u4f5c\u3002", 
            "title": "\u914d\u5408 RePhone Kit Create \u4f7f\u7528"
        }, 
        {
            "location": "/Xadow_Basic_Sensors/#rephone-community", 
            "text": "We\u2019ve been looking for a better place where our backers (RePhone Users) can sit together, warmly and comfortably, have conversations about RePhone, discuss technical problems, share ideas/projects, and give feedback on the modules\u2019 development in the future. And then here we go, the  RePhone Community .  Now join us in the  RePhone Community ! Together we seek answers, make interesting stuff, care about each other, and share our experiences.", 
            "title": "RePhone Community"
        }, 
        {
            "location": "/Xadow_Basic_Sensors/#_4", 
            "text": "[\u4ee3\u7801] Source Code for Xadow Basic Sensors  [\u539f\u7406\u56fe] Xadow Duino Schematic Files  [\u6570\u636e\u624b\u518c] ADXL345 - 3_Axis Acceserometer  [\u6570\u636e\u624b\u518c] LM75A NXP - Temperature Sensor  [\u6570\u636e\u624b\u518c] TSL2561 - Light Sensor  [\u6570\u636e\u624b\u518c] STM32F030F4", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Respeaker/", 
            "text": "ReSpeaker\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u6a21\u5757\u5316\u8bed\u97f3\u754c\u9762\uff0c\u7528\u4e8e\u8fde\u63a5\u4f60\u5468\u56f4\u7684\u4e8b\u7269\u3002 \u8ba9\u60a8\u4e0e\u60a8\u7684\u5bb6\u7528\u7535\u5668\uff0c\u60a8\u7684\u5de5\u5382\uff0c\u529e\u516c\u5ba4\uff0c\u4e92\u8054\u7f51\u8bbe\u5907\u6216\u60a8\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u5176\u4ed6\u4efb\u4f55\u4e8b\u60c5\u8fdb\u884c\u4e92\u52a8\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Respeaker Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nRespeaker_2-Mics_Pi_HAT\n\n\nRespeaker_4-Mics_Pi_HAT\n\n\nRespeaker_Core\n\n\nRespeaker_Mic_Array", 
            "title": "Respeaker"
        }, 
        {
            "location": "/Respeaker/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Respeaker Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Respeaker_2-Mics_Pi_HAT  Respeaker_4-Mics_Pi_HAT  Respeaker_Core  Respeaker_Mic_Array", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Respeaker_Mic_Array/", 
            "text": "\u4ea7\u54c1\u7b80\u4ecb\n\n\nReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u8fdc\u573a\u8bed\u97f3\u6355\u83b7\n\n\n\u58f0\u6e90\u5b9a\u4f4d\n\n\n\u6ce2\u675f\u6210\u5f62\n\n\n\u566a\u58f0\u6291\u5236\n\n\n\u6d88\u6df7\u54cd\n\n\n\u56de\u97f3\u6d88\u9664\n\n\n\n\n\u6280\u672f\u89c4\u683c\n\n\n\n\n\n\nXVSM-2000\u5185\u7f6e16\u4e2a\u5185\u6838:\n\n\n\u57282\u4e2axCore titles\u4e0a\u768416\u4e2a\u5b9e\u65f6\u903b\u8f91\u5185\u6838\n\n\n\u6838\u5728dual issue mode\u4e0b\u5171\u4eab2000 MIPS\n\n\n\u5185\u90e8single cycle 512KB SRAM\u548c2MB\u5185\u7f6e\u95ea\u5b58\n\n\n16KB\u5185\u90e8OTP\uff08\u6700\u59278KB\u6bcftile\uff09\n\n\nUSB PHY\uff0c\u5b8c\u5168\u7b26\u5408USB 2.0\u89c4\u8303\n\n\n\u53ef\u7f16\u7a0b I/O.\n\n\n\u63d0\u4f9bDFU\u6a21\u5f0f.\n\n\n\n\n\n\n7 \u6570\u5b57\u9ea6\u514b\u98ce:\n\n\n\u7528\u4e8e\u8fdc\u573a\u8bed\u97f3\u8bc6\u522b\u6216\u58f0\u97f3\u5b9a\u4f4d.\n\n\nST MP34DT01-M.\n\n\n-26 dBFS \u7075\u654f\u5ea6.\n\n\n120 dBSPL \u58f0\u5b66\u8fc7\u8f7d\u70b9.\n\n\n61 dB \u4fe1\u566a\u6bd4.\n\n\n\u5168\u5411\u7075\u654f\u5ea6.\n\n\nPDM \u8f93\u51fa.\n\n\n\n\n\n\n12 RGB LEDs:\n\n\n256\u7ea7\u4eae\u5ea6.\n\n\n800kHz\u7ebf\u6570\u636e\u4f20\u8f93.\n\n\n\n\n\n\n\u97f3\u9891\u8f93\u51fa:\n\n\n\u677f\u8f7d3.5mmAUX\u8f93\u51fa.\n\n\nWOLFSON WM8960.\n\n\n24 or 16bit 16kHz\u7acb\u4f53\u58f0\u8f93\u51fa.\n\n\n40 mW \u8f93\u51fa\u529f\u7387 16 \u2126 @ 3.3 V.\n\n\n\n\n\n\n\u65f6\u949f\u540c\u6b65\uff1a\n\n\n\u677f\u8f7d PLL.\n\n\n\u7528\u4e8e DAC,MIC\u7684\u53ef\u7f16\u7a0b\u91c7\u6837\u65f6\u949f.\n(\u5982\u679c\u5728XVSM-2000\u4e2d\u4f7f\u7528DSP\uff0c\u5219\u7981\u7528).\n\n\n\n\n\n\n\u7535\u6e90:\n\n\nMicro USB\u6216\u6269\u5c55\u63a5\u5934\u63d0\u4f9b5V\u7535\u6e90.\n\n\n\n\n\n\n\u5c3a\u5bf8:\n\n\n\u76f4\u5f84 70mm.\n\n\n\n\n\n\n\u91cd\u91cf:\n\n\n15.25g\n\n\n\n\n\n\n\n\nReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\u9a71\u52a8\n\n\n\n\n\u5bf9\u4e8eWindows\u7528\u6237, \u8bf7\u5355\u51fb \n\u6b64\u5904\n \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\u5bf9\u4e8eLinux\u6216Mac\u7528\u6237\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\n\n\u7528ReSpeaker Core\u63d0\u53d6\u58f0\u97f3\n\n\n\u5f53\u9ea6\u514b\u98ce\u9635\u5217\u5806\u53e0\u5728ReSpeaker Core\u4e0a\u65f6\uff0c\u5c06\u81ea\u52a8\u68c0\u6d4b\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7aplay -l\u6765\u624b\u52a8\u68c0\u6d4b\uff09\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u53ef\u4ee5\u4f7f\u7528\nrespeaker_python_library\n\u6765\u5f00\u53d1\u8bed\u97f3\u4ea4\u4e92\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u60a8\u4e0d\u9700\u8981\u5173\u5fc3Mic Array\u662f\u5426\u6253\u5f00\u3002\u6211\u4eec\u7684\u5e93\u6587\u4ef6\u4f1a\u68c0\u67e5\u5e76\u9009\u62e9\u9ea6\u514b\u98ce\u9635\u5217\u3002\n\n\n\u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c\u57fa\u4e8ePyaudio\u7684\u9ea6\u514b\u98ce\u7c7b\u5177\u6709\u540d\u4e3alisten\u7684\u65b9\u6cd5\u6765\u63d0\u53d6\u8bed\u97f3\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u793a\u4f8b\u4ee3\u7801\u4ee5\u4f9b\u4f7f\u7528\u3002\n\n\n\u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c \nclass Microphone\n, \u57fa\u4e8e \nPyaudio\n, \u7528 \nlisten\n, \u6765\u63d0\u53d6\u58f0\u97f3. \u8bf7\u67e5\u9605 \nexample code\n \u5173\u4e8e\u5982\u4f55\u4f7f\u7528.\n\n\n\u5728PC\u6216Mac\u6216Linux\u6216Raspberry Pi\u4e0a\u63d0\u53d6\u8bed\u97f3\n\n\n\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8ePyaudio\u7684\u4f8b\u5b50\uff1a\n\n\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u6765\u83b7\u53d6Mic Array\u7684\u8bbe\u5907\u7d22\u5f15\u53f7\uff1a\n\n\nimport\n \npyaudio\n\n\n\np\n \n=\n \npyaudio\n.\nPyAudio\n()\n\n\ninfo\n \n=\n \np\n.\nget_host_api_info_by_index\n(\n0\n)\n\n\nnumdevices\n \n=\n \ninfo\n.\nget\n(\ndeviceCount\n)\n\n\n\nfor\n \ni\n \nin\n \nrange\n(\n0\n,\n \nnumdevices\n):\n\n        \nif\n \n(\np\n.\nget_device_info_by_host_api_device_index\n(\n0\n,\n \ni\n)\n.\nget\n(\nmaxInputChannels\n))\n \n \n0\n:\n\n            \nprint\n \nInput Device id \n,\n \ni\n,\n \n - \n,\n \np\n.\nget_device_info_by_host_api_device_index\n(\n0\n,\n \ni\n)\n.\nget\n(\nname\n)\n\n\n\n\n\n\u7136\u540e\uff0c\u66f4\u6539RESPEAKER_INDEX = 1\u4e3a\u60a8\u7684\u7d22\u5f15\u53f7\u3002\u8fd0\u884c\u811a\u672c\u6765\u5f55\u5236\u8bed\u97f3\u3002\n\n\nimport\n \npyaudio\n\n\nimport\n \nwave\n\n\n\nRESPEAKER_RATE\n \n=\n \n16000\n\n\nRESPEAKER_CHANNELS\n \n=\n \n2\n\n\nRESPEAKER_WIDTH\n \n=\n \n2\n\n\n# run getDeviceInfo.py to get index\n\n\nRESPEAKER_INDEX\n \n=\n \n1\n\n\nCHUNK\n \n=\n \n1024\n\n\nRECORD_SECONDS\n \n=\n \n5\n\n\nWAVE_OUTPUT_FILENAME\n \n=\n \noutput.wav\n\n\n\np\n \n=\n \npyaudio\n.\nPyAudio\n()\n\n\n\nstream\n \n=\n \np\n.\nopen\n(\n\n            \nrate\n=\nRESPEAKER_RATE\n,\n\n            \nformat\n=\np\n.\nget_format_from_width\n(\nRESPEAKER_WIDTH\n),\n\n            \nchannels\n=\nRESPEAKER_CHANNELS\n,\n\n            \ninput\n=\nTrue\n,\n\n            \ninput_device_index\n=\nRESPEAKER_INDEX\n,)\n\n\n\nprint\n(\n* recording\n)\n\n\n\nframes\n \n=\n \n[]\n\n\n\nfor\n \ni\n \nin\n \nrange\n(\n0\n,\n \nint\n(\nRESPEAKER_RATE\n \n/\n \nCHUNK\n \n*\n \nRECORD_SECONDS\n)):\n\n    \ndata\n \n=\n \nstream\n.\nread\n(\nCHUNK\n)\n\n    \nframes\n.\nappend\n(\ndata\n)\n\n\n\nprint\n(\n* done recording\n)\n\n\n\nstream\n.\nstop_stream\n()\n\n\nstream\n.\nclose\n()\n\n\np\n.\nterminate\n()\n\n\n\nwf\n \n=\n \nwave\n.\nopen\n(\nWAVE_OUTPUT_FILENAME\n,\n \nwb\n)\n\n\nwf\n.\nsetnchannels\n(\nRESPEAKER_CHANNELS\n)\n\n\nwf\n.\nsetsampwidth\n(\np\n.\nget_sample_size\n(\np\n.\nget_format_from_width\n(\nRESPEAKER_WIDTH\n)))\n\n\nwf\n.\nsetframerate\n(\nRESPEAKER_RATE\n)\n\n\nwf\n.\nwriteframes\n(\nb\n.\njoin\n(\nframes\n))\n\n\nwf\n.\nclose\n()\n\n\n\n\n\nReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6\n\n\n\u60a8\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n\u4e0b\u8f7d\u9002\u7528\u4e8eDFU\u7684ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7248\u672c\uff1a\n\n\n\n\nxvsm\u7248\u672c\n\uff1a\u521d\u59cb\u7248\u672c\uff0c\u652f\u6301dsp\u8f93\u51fa2\u901a\u9053\u6570\u636e\u3002\n\n\n\u539f\u59cb\u7248\u672c\n\uff1a\u8f93\u51fa8\u8def\u9ea6\u514b\u98ce\u539f\u59cb\u6570\u636e\uff0c\u6b64\u56fa\u4ef6\u4e0d\u652f\u6301xvsm dsp\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u67d0\u4e9b\u529f\u80fd\uff0c\u5982DOA\uff0cAEC\u7b49\u3002\n\n\n\n\n\u5173\u4e8e\u8bf7\u67e5\u9605\u5982\u4f55\u5728Mac\u6216Linux\u4e0a\u66f4\u65b0\u56fa\u4ef6\uff0c \u8bf7\u67e5\u9605 \n\u8fd9\u91cc\n \u3002\n\n\n\u7528\u4e8e\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684HID\n\n\n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7USB HID\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\n\u901a\u4fe1\u534f\u8bae\n.\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u4f7f\u7528 \n\u6700\u65b0\u7684\u539f\u59cb\u7248\u672c\n\uff0c\u5219\u53ea\u80fd\u63a7\u5236LED\u3002\n\n\n\u8fd9\u91cc\u662f\u4e00\u4e2apython\u4f8b\u5b50\uff1a\n\n\n#!/usr/bin/env python\n\n\n\nimport\n \nrespeaker.usb_hid\n \nas\n \nusb_hid\n\n\n\nclass\n \nMicArray\n:\n\n    \ndef\n \n__init__\n(\nself\n):\n\n        \nself\n.\nhid\n \n=\n \nusb_hid\n.\nget\n()\n\n\n    \ndef\n \nwrite\n(\nself\n,\n \naddress\n,\n \ndata\n):\n\n        \ndata\n \n=\n \nself\n.\nto_bytearray\n(\ndata\n)\n\n        \nlength\n \n=\n \nlen\n(\ndata\n)\n\n        \nif\n \nself\n.\nhid\n:\n\n            \npacket\n \n=\n \nbytearray\n([\naddress\n \n \n0xFF\n,\n \n(\naddress\n \n \n8\n)\n \n \n0x7F\n,\n \nlength\n \n \n0xFF\n,\n \n(\nlength\n \n \n8\n)\n \n \n0xFF\n])\n \n+\n \ndata\n\n            \npacket\n \n=\n \nlist\n(\npacket\n)\n\n            \nself\n.\nhid\n.\nwrite\n(\npacket\n)\n\n\n    \ndef\n \nread\n(\nself\n,\n \naddress\n,\n \nlength\n):\n\n        \nself\n.\nhid\n.\nwrite\n(\nlist\n(\nbytearray\n([\naddress\n \n \n0xFF\n,\n \n(\naddress\n \n \n8\n)\n \n \n0xFF\n \n|\n \n0x80\n,\n \nlength\n \n \n0xFF\n,\n \n(\nlength\n \n \n8\n)\n \n \n0xFF\n])))\n\n        \nfor\n \n_\n \nin\n \nrange\n(\n6\n):\n\n            \ndata\n \n=\n \nself\n.\nhid\n.\nread\n()\n\n            \n# print [int(x) for x in data]\n\n            \n# skip VAD data\n\n            \nif\n \nint\n(\ndata\n[\n0\n])\n \n!=\n \n0xFF\n \nand\n \nint\n(\ndata\n[\n1\n])\n \n!=\n \n0xFF\n:\n\n                \nreturn\n \ndata\n[\n4\n:(\n4\n \n+\n \nlength\n)]\n\n\n    \n@staticmethod\n\n    \ndef\n \nto_bytearray\n(\ndata\n):\n\n        \nif\n \ntype\n(\ndata\n)\n \nis\n \nint\n:\n\n            \narray\n \n=\n \nbytearray\n([\ndata\n \n \n0xFF\n])\n\n        \nelif\n \ntype\n(\ndata\n)\n \nis\n \nbytearray\n:\n\n            \narray\n \n=\n \ndata\n\n        \nelif\n \ntype\n(\ndata\n)\n \nis\n \nstr\n:\n\n            \narray\n \n=\n \nbytearray\n(\ndata\n)\n\n        \nelif\n \ntype\n(\ndata\n)\n \nis\n \nlist\n:\n\n            \narray\n \n=\n \nbytearray\n(\ndata\n)\n\n        \nelse\n:\n\n            \nraise\n \nTypeError\n(\n%s\n is not supported\n \n%\n \ntype\n(\ndata\n))\n\n        \nreturn\n \narray\n\n\n\ndef\n \nmain\n():\n\n    \nimport\n \nsys\n\n    \nimport\n \nstruct\n\n\n    \nmic\n \n=\n \nMicArray\n()\n\n\n    \nprint\n(\nUsing: \n%s\n \n%\n \nusb_hid\n.\nusb_backend\n)\n\n\n    \nif\n \nlen\n(\nsys\n.\nargv\n)\n \n \n3\n:\n\n        \nprint\n(\nUsage: python {} w 0x0 0x000003\n.\nformat\n(\nsys\n.\nargv\n[\n0\n]))\n\n        \nsys\n.\nexit\n(\n1\n)\n\n\n    \ntry\n:\n\n        \nif\n \nsys\n.\nargv\n[\n2\n]\n.\nstartswith\n(\n0x\n):\n\n            \naddress\n \n=\n \nint\n(\nsys\n.\nargv\n[\n2\n],\n \n16\n)\n\n        \nelse\n:\n\n            \naddress\n \n=\n \nint\n(\nsys\n.\nargv\n[\n2\n])\n\n\n        \nif\n \nsys\n.\nargv\n[\n1\n]\n \n==\n \nw\n:\n\n            \nif\n \nsys\n.\nargv\n[\n3\n]\n.\nstartswith\n(\n0x\n):\n\n                \ndata\n \n=\n \nint\n(\nsys\n.\nargv\n[\n3\n],\n \n16\n)\n\n            \nelse\n:\n\n                \ndata\n \n=\n \nint\n(\nsys\n.\nargv\n[\n3\n])\n\n\n            \nif\n \ndata\n \n \n0xFFFF\n:\n\n                \ndata\n \n=\n \nstruct\n.\npack\n(\nI\n,\n \ndata\n)\n\n            \nelif\n \ndata\n \n \n0xFF\n:\n\n                \ndata\n \n=\n \nstruct\n.\npack\n(\nH\n,\n \ndata\n)\n\n\n            \nmic\n.\nwrite\n(\naddress\n,\n \ndata\n)\n\n        \nelse\n:\n\n            \nprint\n \n[\nint\n(\nx\n)\n \nfor\n \nx\n \nin\n \nmic\n.\nread\n(\naddress\n,\n \n4\n)]\n\n    \nexcept\n \nException\n \nas\n \ne\n:\n\n        \nprint\n(\ne\n.\nmessage\n)\n\n\n\nif\n \n__name__\n \n==\n \n__main__\n:\n\n    \nmain\n()\n\n\n\n\n\nFAQ\n\n\nQ1\uff1a Respeaker Mic Array\u9a71\u52a8\u5b89\u88c5\u95ee\u9898\uff1f\n\n\nWindows\u9700\u8981\u5b89\u88c5\u9a71\u52a8\uff0clinux\uff08Ubuntu,Raspberry,MAC\u7b49\uff09\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u3002\u70b9\u51fb\n\u8fd9\u91cc\n\u4e0b\u8f7d\u9a71\u52a8\u3002\u5728windows\u7cfb\u7edf\u7684\u8bbe\u5907\u7ba1\u7406\u5668\uff0c\u770b\u5230\u9ea6\u514b\u98ce\u9635\u5217\u4e0d\u80fd\u88ab\u8bc6\u522b\uff0c\u8bf7\u5b89\u88c5\u4ee5\u4e0b\u6d41\u7a0b\u6765\u64cd\u4f5c\u3002\n\n\n\n\n\n\n\u5b89\u88c5\u9a71\u52a8\n\n\n\n\n\n\n\u6362USB\u7ebf\n\n\n\n\n\n\n\u7981\u7528\u6570\u5b57\u7b7e\u540d\n\n\n\n\n\n\n\u6362\u5176\u4ed6\u7535\u8111\u5c1d\u8bd5\n\n\n\n\n\n\nQ2\uff1a Respeaker Mic Array\u5982\u4f55\u91c7\u96c6\u97f3\u9891\uff1f\n\n\n\n\n\u4e0b\u8f7d\nAudacity\n\u8f6f\u4ef6\u6765\u91c7\u96c6, \u5728windows\u4e0b\u5177\u4f53\u53c2\u6570\u8bbe\u7f6e\uff0c\u8bf7\u53c2\u5361\n \u3002\n\n\n\n\n\u5982\u679c\u6309\u7167\u4ee5\u4e0a\u8bbe\u7f6e\u91c7\u96c6\u6570\u636e\u5931\u8d25\uff0c\u8bf7\u91cd\u65b0\u5b89\u88c5\u9a71\u52a8\u3002\n\n\n\n\n\n\n\u5229\u7528Python\u811a\u672c\u6765\u91c7\u96c6\u97f3\u9891\u6570\u636e\uff1a\n\n\n\n\n\n\nXVSM\u56fa\u4ef6\u91c7\u96c62\u901a\u9053\u97f3\u9891\uff1a \uff08\u652f\u6301Unbuntu/Raspberry/Mac\uff09\n\n\n\n\n\n\n\u9996\u5148\u7528\nXVSM_RecordAudio_Ubuntu_Raspberry_Mac_getDeviceInfo.py\n   \u68c0\u6d4b\u9ea6\u514b\u98ce\u9635\u5217\u7684\u8f93\u5165\u901a\u9053\u3002\n\n\n\n\n\n\n\u7136\u540e\u66f4\u6539\nXVSM_RecordAudio_Ubuntu_Raspberry_Mac_recordaudio.py\n \u7684 \nRESPEAKER_INDEX = 2\n \u7684 2\u4e3a\u68c0\u6d4b\u5230\u7684\u901a\u9053\uff0c \u8fd0\u884c\u7a0b\u5e8f\u6765\u91c7\u96c6\u97f3\u9891\u3002\n\n\n\n\n\n\n\n\n\n\nRAW\u56fa\u4ef6\u91c7\u96c68\u901a\u9053\u97f3\u9891\uff1a\uff08\u652f\u6301Unbuntu/Raspberry/Mac\uff09\n\n\n\n\n\n\n\u9996\u5148\u7528\nRaw_RecordAudio_Ubuntu_Raspberry_Mac_getDeviceInfo.py\n \u9ea6\u514b\u98ce\u9635\u5217\u7684\u8f93\u5165\u901a\u9053\u3002\n\n\n\n\n\n\n\u7136\u540e\u66f4\u6539\nRaw_RecordAudio_Ubuntu_Raspberry_Mac_recordaudio.py\n \u7684**RESPEAKER_INDEX = 2** \u7684 2\u4e3a\u68c0\u6d4b\u5230\u7684\u901a\u9053 \uff0c \u8fd0\u884c\u7a0b\u5e8f\u6765\u91c7\u96c6\u97f3\u9891\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQ3\uff1a Respeaker Mic Array\u5982\u4f55\u5b9a\u4f4d\uff1f\n\n\n\n\n\n\nXVSM\u56fa\u4ef6\u6765\u5b9a\u4f4d\uff1a \uff08\u652f\u6301Unbuntu/Raspberry/Mac\uff09\n\n\n\n\n\u8fd0\u884c\u811a\u672c\nXVSM_VAD_Ubuntu_Raspberry_Mac_get_direction.py\n \u6765\u5b9a\u4f4d\n\n\n\n\n\n\n\n\nRAW\u56fa\u4ef6\u6765\u5b9a\u4f4d\uff1a \uff08\u652f\u6301Unbuntu\uff09\n\n\n\n\n\u8fd0\u884c\u811a\u672c\nRaw_vad_doa_Ubuntu_get_direction.py\n \u6765\u5b9a\u4f4d\uff0c \u6ce8\u610f\u9700\u8981\u4e0b\u8f7d \ngcc_phat.py\n\uff0c \nmic_array.py\n\uff0c \npixel_ring.py\n3\u4e2a\u5e93\u6587\u4ef6\uff0c\u653e\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\u3002 \n\n\n\n\n\n\n\n\nQ4\uff1a Respeaker Mic Array Python\u7a0b\u5e8f\u4e0b\u8f7d\uff1f\n\n\n\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u4e0b\u8f7dPython\u91c7\u96c6\u97f3\u9891\u548c\u5b9a\u4f4d\u7684\u5168\u90e8\u7a0b\u5e8f\u3002\n\n\nQ5\uff1a Respeaker Mic Array\u54aa\u5934\u7684\u7269\u7406\u4f4d\u7f6e\u548cAudacity\u7684\u901a\u9053\u4f4d\u7f6e\uff1f\n\n\n\n\n\n\n\u54aa\u5934\u4f4d\u7f6e\u5982\u4e0b\u56fe\u6240\u793a\n\n\n\n\n\n\n\nAudacity\u7684\u901a\u9053\u4f4d\u7f6e\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle]\nReSpeaker Microphone Array SCH\n\n\n[Eagle]\nReSpeaker Microphone Array BRD\n\n\n[PDF]\n \nReSpeaker Microphone Array SCH\n\n\n[PDF]\n \nReSpeaker Microphone Array PCB", 
            "title": "Respeaker Mic Array"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_1", 
            "text": "ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\u3002", 
            "title": "\u4ea7\u54c1\u7b80\u4ecb"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_2", 
            "text": "\u8fdc\u573a\u8bed\u97f3\u6355\u83b7  \u58f0\u6e90\u5b9a\u4f4d  \u6ce2\u675f\u6210\u5f62  \u566a\u58f0\u6291\u5236  \u6d88\u6df7\u54cd  \u56de\u97f3\u6d88\u9664", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_3", 
            "text": "XVSM-2000\u5185\u7f6e16\u4e2a\u5185\u6838:  \u57282\u4e2axCore titles\u4e0a\u768416\u4e2a\u5b9e\u65f6\u903b\u8f91\u5185\u6838  \u6838\u5728dual issue mode\u4e0b\u5171\u4eab2000 MIPS  \u5185\u90e8single cycle 512KB SRAM\u548c2MB\u5185\u7f6e\u95ea\u5b58  16KB\u5185\u90e8OTP\uff08\u6700\u59278KB\u6bcftile\uff09  USB PHY\uff0c\u5b8c\u5168\u7b26\u5408USB 2.0\u89c4\u8303  \u53ef\u7f16\u7a0b I/O.  \u63d0\u4f9bDFU\u6a21\u5f0f.    7 \u6570\u5b57\u9ea6\u514b\u98ce:  \u7528\u4e8e\u8fdc\u573a\u8bed\u97f3\u8bc6\u522b\u6216\u58f0\u97f3\u5b9a\u4f4d.  ST MP34DT01-M.  -26 dBFS \u7075\u654f\u5ea6.  120 dBSPL \u58f0\u5b66\u8fc7\u8f7d\u70b9.  61 dB \u4fe1\u566a\u6bd4.  \u5168\u5411\u7075\u654f\u5ea6.  PDM \u8f93\u51fa.    12 RGB LEDs:  256\u7ea7\u4eae\u5ea6.  800kHz\u7ebf\u6570\u636e\u4f20\u8f93.    \u97f3\u9891\u8f93\u51fa:  \u677f\u8f7d3.5mmAUX\u8f93\u51fa.  WOLFSON WM8960.  24 or 16bit 16kHz\u7acb\u4f53\u58f0\u8f93\u51fa.  40 mW \u8f93\u51fa\u529f\u7387 16 \u2126 @ 3.3 V.    \u65f6\u949f\u540c\u6b65\uff1a  \u677f\u8f7d PLL.  \u7528\u4e8e DAC,MIC\u7684\u53ef\u7f16\u7a0b\u91c7\u6837\u65f6\u949f.\n(\u5982\u679c\u5728XVSM-2000\u4e2d\u4f7f\u7528DSP\uff0c\u5219\u7981\u7528).    \u7535\u6e90:  Micro USB\u6216\u6269\u5c55\u63a5\u5934\u63d0\u4f9b5V\u7535\u6e90.    \u5c3a\u5bf8:  \u76f4\u5f84 70mm.    \u91cd\u91cf:  15.25g", 
            "title": "\u6280\u672f\u89c4\u683c"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeaker", 
            "text": "\u5bf9\u4e8eWindows\u7528\u6237, \u8bf7\u5355\u51fb  \u6b64\u5904  \u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f  \u5bf9\u4e8eLinux\u6216Mac\u7528\u6237\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f", 
            "title": "ReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\u9a71\u52a8"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeaker-core", 
            "text": "\u5f53\u9ea6\u514b\u98ce\u9635\u5217\u5806\u53e0\u5728ReSpeaker Core\u4e0a\u65f6\uff0c\u5c06\u81ea\u52a8\u68c0\u6d4b\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7aplay -l\u6765\u624b\u52a8\u68c0\u6d4b\uff09\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u53ef\u4ee5\u4f7f\u7528 respeaker_python_library \u6765\u5f00\u53d1\u8bed\u97f3\u4ea4\u4e92\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u60a8\u4e0d\u9700\u8981\u5173\u5fc3Mic Array\u662f\u5426\u6253\u5f00\u3002\u6211\u4eec\u7684\u5e93\u6587\u4ef6\u4f1a\u68c0\u67e5\u5e76\u9009\u62e9\u9ea6\u514b\u98ce\u9635\u5217\u3002  \u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c\u57fa\u4e8ePyaudio\u7684\u9ea6\u514b\u98ce\u7c7b\u5177\u6709\u540d\u4e3alisten\u7684\u65b9\u6cd5\u6765\u63d0\u53d6\u8bed\u97f3\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u793a\u4f8b\u4ee3\u7801\u4ee5\u4f9b\u4f7f\u7528\u3002  \u6b64\u5916\uff0c\u5728\u8be5\u5e93\u4e2d\uff0c  class Microphone , \u57fa\u4e8e  Pyaudio , \u7528  listen , \u6765\u63d0\u53d6\u58f0\u97f3. \u8bf7\u67e5\u9605  example code  \u5173\u4e8e\u5982\u4f55\u4f7f\u7528.", 
            "title": "\u7528ReSpeaker Core\u63d0\u53d6\u58f0\u97f3"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#pcmaclinuxraspberry-pi", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8ePyaudio\u7684\u4f8b\u5b50\uff1a  \u9996\u5148\uff0c\u60a8\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u6765\u83b7\u53d6Mic Array\u7684\u8bbe\u5907\u7d22\u5f15\u53f7\uff1a  import   pyaudio  p   =   pyaudio . PyAudio ()  info   =   p . get_host_api_info_by_index ( 0 )  numdevices   =   info . get ( deviceCount )  for   i   in   range ( 0 ,   numdevices ): \n         if   ( p . get_device_info_by_host_api_device_index ( 0 ,   i ) . get ( maxInputChannels ))     0 : \n             print   Input Device id  ,   i ,    -  ,   p . get_device_info_by_host_api_device_index ( 0 ,   i ) . get ( name )   \u7136\u540e\uff0c\u66f4\u6539RESPEAKER_INDEX = 1\u4e3a\u60a8\u7684\u7d22\u5f15\u53f7\u3002\u8fd0\u884c\u811a\u672c\u6765\u5f55\u5236\u8bed\u97f3\u3002  import   pyaudio  import   wave  RESPEAKER_RATE   =   16000  RESPEAKER_CHANNELS   =   2  RESPEAKER_WIDTH   =   2  # run getDeviceInfo.py to get index  RESPEAKER_INDEX   =   1  CHUNK   =   1024  RECORD_SECONDS   =   5  WAVE_OUTPUT_FILENAME   =   output.wav  p   =   pyaudio . PyAudio ()  stream   =   p . open ( \n             rate = RESPEAKER_RATE , \n             format = p . get_format_from_width ( RESPEAKER_WIDTH ), \n             channels = RESPEAKER_CHANNELS , \n             input = True , \n             input_device_index = RESPEAKER_INDEX ,)  print ( * recording )  frames   =   []  for   i   in   range ( 0 ,   int ( RESPEAKER_RATE   /   CHUNK   *   RECORD_SECONDS )): \n     data   =   stream . read ( CHUNK ) \n     frames . append ( data )  print ( * done recording )  stream . stop_stream ()  stream . close ()  p . terminate ()  wf   =   wave . open ( WAVE_OUTPUT_FILENAME ,   wb )  wf . setnchannels ( RESPEAKER_CHANNELS )  wf . setsampwidth ( p . get_sample_size ( p . get_format_from_width ( RESPEAKER_WIDTH )))  wf . setframerate ( RESPEAKER_RATE )  wf . writeframes ( b . join ( frames ))  wf . close ()", 
            "title": "\u5728PC\u6216Mac\u6216Linux\u6216Raspberry Pi\u4e0a\u63d0\u53d6\u8bed\u97f3"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeaker_1", 
            "text": "\u60a8\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u9002\u7528\u4e8eDFU\u7684ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7248\u672c\uff1a   xvsm\u7248\u672c \uff1a\u521d\u59cb\u7248\u672c\uff0c\u652f\u6301dsp\u8f93\u51fa2\u901a\u9053\u6570\u636e\u3002  \u539f\u59cb\u7248\u672c \uff1a\u8f93\u51fa8\u8def\u9ea6\u514b\u98ce\u539f\u59cb\u6570\u636e\uff0c\u6b64\u56fa\u4ef6\u4e0d\u652f\u6301xvsm dsp\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u67d0\u4e9b\u529f\u80fd\uff0c\u5982DOA\uff0cAEC\u7b49\u3002   \u5173\u4e8e\u8bf7\u67e5\u9605\u5982\u4f55\u5728Mac\u6216Linux\u4e0a\u66f4\u65b0\u56fa\u4ef6\uff0c \u8bf7\u67e5\u9605  \u8fd9\u91cc  \u3002", 
            "title": "ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u56fa\u4ef6"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#respeakerhid", 
            "text": "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7USB HID\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684 \u901a\u4fe1\u534f\u8bae .  \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u4f7f\u7528  \u6700\u65b0\u7684\u539f\u59cb\u7248\u672c \uff0c\u5219\u53ea\u80fd\u63a7\u5236LED\u3002  \u8fd9\u91cc\u662f\u4e00\u4e2apython\u4f8b\u5b50\uff1a  #!/usr/bin/env python  import   respeaker.usb_hid   as   usb_hid  class   MicArray : \n     def   __init__ ( self ): \n         self . hid   =   usb_hid . get () \n\n     def   write ( self ,   address ,   data ): \n         data   =   self . to_bytearray ( data ) \n         length   =   len ( data ) \n         if   self . hid : \n             packet   =   bytearray ([ address     0xFF ,   ( address     8 )     0x7F ,   length     0xFF ,   ( length     8 )     0xFF ])   +   data \n             packet   =   list ( packet ) \n             self . hid . write ( packet ) \n\n     def   read ( self ,   address ,   length ): \n         self . hid . write ( list ( bytearray ([ address     0xFF ,   ( address     8 )     0xFF   |   0x80 ,   length     0xFF ,   ( length     8 )     0xFF ]))) \n         for   _   in   range ( 6 ): \n             data   =   self . hid . read () \n             # print [int(x) for x in data] \n             # skip VAD data \n             if   int ( data [ 0 ])   !=   0xFF   and   int ( data [ 1 ])   !=   0xFF : \n                 return   data [ 4 :( 4   +   length )] \n\n     @staticmethod \n     def   to_bytearray ( data ): \n         if   type ( data )   is   int : \n             array   =   bytearray ([ data     0xFF ]) \n         elif   type ( data )   is   bytearray : \n             array   =   data \n         elif   type ( data )   is   str : \n             array   =   bytearray ( data ) \n         elif   type ( data )   is   list : \n             array   =   bytearray ( data ) \n         else : \n             raise   TypeError ( %s  is not supported   %   type ( data )) \n         return   array  def   main (): \n     import   sys \n     import   struct \n\n     mic   =   MicArray () \n\n     print ( Using:  %s   %   usb_hid . usb_backend ) \n\n     if   len ( sys . argv )     3 : \n         print ( Usage: python {} w 0x0 0x000003 . format ( sys . argv [ 0 ])) \n         sys . exit ( 1 ) \n\n     try : \n         if   sys . argv [ 2 ] . startswith ( 0x ): \n             address   =   int ( sys . argv [ 2 ],   16 ) \n         else : \n             address   =   int ( sys . argv [ 2 ]) \n\n         if   sys . argv [ 1 ]   ==   w : \n             if   sys . argv [ 3 ] . startswith ( 0x ): \n                 data   =   int ( sys . argv [ 3 ],   16 ) \n             else : \n                 data   =   int ( sys . argv [ 3 ]) \n\n             if   data     0xFFFF : \n                 data   =   struct . pack ( I ,   data ) \n             elif   data     0xFF : \n                 data   =   struct . pack ( H ,   data ) \n\n             mic . write ( address ,   data ) \n         else : \n             print   [ int ( x )   for   x   in   mic . read ( address ,   4 )] \n     except   Exception   as   e : \n         print ( e . message )  if   __name__   ==   __main__ : \n     main ()", 
            "title": "\u7528\u4e8e\u63a7\u5236ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684HID"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#faq", 
            "text": "", 
            "title": "FAQ"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#q1-respeaker-mic-array", 
            "text": "Windows\u9700\u8981\u5b89\u88c5\u9a71\u52a8\uff0clinux\uff08Ubuntu,Raspberry,MAC\u7b49\uff09\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u3002\u70b9\u51fb \u8fd9\u91cc \u4e0b\u8f7d\u9a71\u52a8\u3002\u5728windows\u7cfb\u7edf\u7684\u8bbe\u5907\u7ba1\u7406\u5668\uff0c\u770b\u5230\u9ea6\u514b\u98ce\u9635\u5217\u4e0d\u80fd\u88ab\u8bc6\u522b\uff0c\u8bf7\u5b89\u88c5\u4ee5\u4e0b\u6d41\u7a0b\u6765\u64cd\u4f5c\u3002    \u5b89\u88c5\u9a71\u52a8    \u6362USB\u7ebf    \u7981\u7528\u6570\u5b57\u7b7e\u540d    \u6362\u5176\u4ed6\u7535\u8111\u5c1d\u8bd5", 
            "title": "Q1\uff1a Respeaker Mic Array\u9a71\u52a8\u5b89\u88c5\u95ee\u9898\uff1f"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#q2-respeaker-mic-array", 
            "text": "\u4e0b\u8f7d Audacity \u8f6f\u4ef6\u6765\u91c7\u96c6, \u5728windows\u4e0b\u5177\u4f53\u53c2\u6570\u8bbe\u7f6e\uff0c\u8bf7\u53c2\u5361  \u3002   \u5982\u679c\u6309\u7167\u4ee5\u4e0a\u8bbe\u7f6e\u91c7\u96c6\u6570\u636e\u5931\u8d25\uff0c\u8bf7\u91cd\u65b0\u5b89\u88c5\u9a71\u52a8\u3002    \u5229\u7528Python\u811a\u672c\u6765\u91c7\u96c6\u97f3\u9891\u6570\u636e\uff1a    XVSM\u56fa\u4ef6\u91c7\u96c62\u901a\u9053\u97f3\u9891\uff1a \uff08\u652f\u6301Unbuntu/Raspberry/Mac\uff09    \u9996\u5148\u7528 XVSM_RecordAudio_Ubuntu_Raspberry_Mac_getDeviceInfo.py    \u68c0\u6d4b\u9ea6\u514b\u98ce\u9635\u5217\u7684\u8f93\u5165\u901a\u9053\u3002    \u7136\u540e\u66f4\u6539 XVSM_RecordAudio_Ubuntu_Raspberry_Mac_recordaudio.py  \u7684  RESPEAKER_INDEX = 2  \u7684 2\u4e3a\u68c0\u6d4b\u5230\u7684\u901a\u9053\uff0c \u8fd0\u884c\u7a0b\u5e8f\u6765\u91c7\u96c6\u97f3\u9891\u3002      RAW\u56fa\u4ef6\u91c7\u96c68\u901a\u9053\u97f3\u9891\uff1a\uff08\u652f\u6301Unbuntu/Raspberry/Mac\uff09    \u9996\u5148\u7528 Raw_RecordAudio_Ubuntu_Raspberry_Mac_getDeviceInfo.py  \u9ea6\u514b\u98ce\u9635\u5217\u7684\u8f93\u5165\u901a\u9053\u3002    \u7136\u540e\u66f4\u6539 Raw_RecordAudio_Ubuntu_Raspberry_Mac_recordaudio.py  \u7684**RESPEAKER_INDEX = 2** \u7684 2\u4e3a\u68c0\u6d4b\u5230\u7684\u901a\u9053 \uff0c \u8fd0\u884c\u7a0b\u5e8f\u6765\u91c7\u96c6\u97f3\u9891\u3002", 
            "title": "Q2\uff1a Respeaker Mic Array\u5982\u4f55\u91c7\u96c6\u97f3\u9891\uff1f"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#q3-respeaker-mic-array", 
            "text": "XVSM\u56fa\u4ef6\u6765\u5b9a\u4f4d\uff1a \uff08\u652f\u6301Unbuntu/Raspberry/Mac\uff09   \u8fd0\u884c\u811a\u672c XVSM_VAD_Ubuntu_Raspberry_Mac_get_direction.py  \u6765\u5b9a\u4f4d     RAW\u56fa\u4ef6\u6765\u5b9a\u4f4d\uff1a \uff08\u652f\u6301Unbuntu\uff09   \u8fd0\u884c\u811a\u672c Raw_vad_doa_Ubuntu_get_direction.py  \u6765\u5b9a\u4f4d\uff0c \u6ce8\u610f\u9700\u8981\u4e0b\u8f7d  gcc_phat.py \uff0c  mic_array.py \uff0c  pixel_ring.py 3\u4e2a\u5e93\u6587\u4ef6\uff0c\u653e\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\u3002", 
            "title": "Q3\uff1a Respeaker Mic Array\u5982\u4f55\u5b9a\u4f4d\uff1f"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#q4-respeaker-mic-array-python", 
            "text": "\u8bf7\u70b9\u51fb \u8fd9\u91cc \u4e0b\u8f7dPython\u91c7\u96c6\u97f3\u9891\u548c\u5b9a\u4f4d\u7684\u5168\u90e8\u7a0b\u5e8f\u3002", 
            "title": "Q4\uff1a Respeaker Mic Array Python\u7a0b\u5e8f\u4e0b\u8f7d\uff1f"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#q5-respeaker-mic-arrayaudacity", 
            "text": "\u54aa\u5934\u4f4d\u7f6e\u5982\u4e0b\u56fe\u6240\u793a    Audacity\u7684\u901a\u9053\u4f4d\u7f6e", 
            "title": "Q5\uff1a Respeaker Mic Array\u54aa\u5934\u7684\u7269\u7406\u4f4d\u7f6e\u548cAudacity\u7684\u901a\u9053\u4f4d\u7f6e\uff1f"
        }, 
        {
            "location": "/Respeaker_Mic_Array/#_4", 
            "text": "[Eagle] ReSpeaker Microphone Array SCH  [Eagle] ReSpeaker Microphone Array BRD  [PDF]   ReSpeaker Microphone Array SCH  [PDF]   ReSpeaker Microphone Array PCB", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Respeaker_Core/", 
            "text": "ReSpeaker\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u6a21\u5757\u5316\u8bed\u97f3\u63a5\u53e3\uff0c\u7528\u4e8e\u63a5\u5165\u60a8\u5468\u56f4\u7684\u5404\u79cd\u4e8b\u7269\u3002\u8ba9\u60a8\u901a\u8fc7\u8bed\u97f3\u4e0e\u60a8\u7684\u5bb6\u7528\u7535\u5668\uff0c\u60a8\u7684\u5de5\u5382\uff0c\u529e\u516c\u5ba4\uff0c\u4e92\u8054\u7f51\u8bbe\u5907\u6216\u60a8\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u5176\u4ed6\u4efb\u4f55\u4e8b\u7269\u8fdb\u884c\u4e92\u52a8\u3002\n\n\n\n\n\u5b83\u662f\u60a8\u5468\u56f4\u7269\u4ef6\u7684\u8bed\u97f3\u6269\u5c55\n\n\n\n\nReSpeaker\u652f\u6301\u5728\u7ebf\u8bed\u4e49\u8bc6\u522b\u670d\u52a1\u5e76\u4e14\u62e5\u6709\u79bb\u7ebf\u8f7b\u91cf\u7ea7\u8bed\u97f3\u8bc6\u522b\u5f15\u64ce\u3002\u60a8\u53ef\u4ee5\u5c06ReSpeaker\u6dfb\u52a0\u5230\u60a8\u5468\u56f4\u7684\u4e8b\u7269\u4e2d\uff0c\u4f7f\u5176\u53d8\u5f97\u667a\u80fd\u6216\u66f4\u52a0\u667a\u80fd\u3002\n\n\n\n\n\u5b83\u662f\u4e00\u4e2a\u97f3\u9891\u6d41\u8bbe\u5907\n\n\n\n\n\u8bed\u97f3\u4ea4\u4e92\u4ece\u672a\u4e0e\u97f3\u4e50\u5a31\u4e50\u533a\u5206\u5f00\uff0cReSpeaker\u4e5f\u662f\u5982\u6b64\u3002ReSpeaker\u652f\u6301Airplay / DLNA\u65e0\u7ebf\u97f3\u4e50\u6d41\u3002\u53ea\u9700\u4f7f\u7528AUX\u7535\u7f06\u5c06ReSpeaker\u8fde\u63a5\u5230\u4efb\u4f55\u666e\u901a\u7684\u626c\u58f0\u5668\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5f00\u59cb\u4eab\u53d7\u60a8\u6240\u7231\u7684\u97f3\u4e50\uff0c\u800c\u65e0\u9700\u6309\u4efb\u4f55\u4e00\u4e2a\u6309\u94ae\u3002\n\n\n\n\n\u5b83\u662f\u5b69\u5b50\u4eec\u5b66\u4e60\u7684\u5de5\u5177\n\n\n\n\nReSpeaker\u63a7\u5236\u6a21\u5757\u662f\u57fa\u4e8eATmega32u4\u82af\u7247\uff0c\u8be5\u82af\u7247\u5b8c\u5168\u517c\u5bb9Arduino\u9a71\u52a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ReSpeaker\u4f5c\u4e3a\u5f3a\u5927\u7684Arduino\u5b66\u4e60\u677f\uff0c\u5e76\u505a\u4e86\u8bb8\u591a\u201cArduino\u201d\u5f00\u53d1\u677f\u80fd\u505a\u7684\u4e8b\u60c5\u3002\u8fd9\u662f\u4e3a\u4e86\u5b66\u4e60\uff0c\u8fd9\u662f\u4e3a\u4e86\u7ec3\u4e60\uff0c\u8fd9\u662f\u4e50\u8da3\uff01\uff01\uff01\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u89e3\u653e\u60a8\u7684\u53cc\u624b\uff1a\u79bb\u7ebf\u6216\u5728\u7ebf\u6a21\u5f0f\u4e0b\u7684\u8bed\u97f3\u8bc6\u522b\n\n\n\u65e0\u7ebf\u97f3\u9891\u6d41\u4f20\u8f93\uff1a \u901a\u8fc7Airplay/DLNA\u4f20\u8f93\u97f3\u9891\u6d41\n\n\n\u6613\u4e8e\u4f7f\u7528\u7684SDK\uff1a\u9002\u7528\u4e8ePython\u548cC / C ++\u5f00\u53d1\u4eba\u5458\n\n\n\u65e5\u76ca\u589e\u957f\u7684\u529f\u80fd\uff1a\u4e0b\u8f7d\u548c\u63d2\u4ef6\u4e0d\u65ad\u4e30\u5bcc\u5176\u529f\u80fd\u4e0e\u5e94\u7528\n\n\n\u5373\u63d2\u5373\u7528\u63d2\u4ef6\uff1a\u53ef\u6269\u5c55\u4f7f\u7528\u9ea6\u514b\u98ce\u9635\u5217\uff0cGrove\u6269\u5c55\u677f\uff0cGrove\u6a21\u5757\n\n\n\u514d\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff1a\u53ef\u57fa\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u6240\u6709\u529f\u80fd\u3001\u53c2\u6570\uff08\u6682\u65f6\u4e0d\u53ef\u7528\uff09\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u6280\u672f\u89c4\u683c\n\n\n\n\n\n\nAI7688 Wi-Fi \u6a21\u5757:\n\n\n\n\n\u64cd\u4f5c\u7cfb\u7edf: \u57fa\u4e8eGNU/Linux \u7684 OpenWrt\n\n\nwifi\u652f\u6301: \u652f\u6301802.11b/g and HT 802.11n \u6a21\u5f0f\n\n\n\u6269\u5c55\u6027:\u4e24\u6392\u6269\u5c55\u63a5\u53e3\uff0c\u62e5\u6709 I2C, GPIO \u548c USB 2.0\n\n\n\u63a5\u53e3: 3.5mm AUX \u97f3\u9891\u63a5\u53e3, Micro USB \u548c SD card \u5361\u69fd\n\n\n\n\n\n\n\n\nATMega32U4 \u5904\u7406\u5668:\n\n\n\n\nLinnux\u5e73\u53f0\u4e0b\u7684 USB CDC \u8f6f\u4e32\u53e3\n\n\n12\u4e2a\u53ef\u7f16\u7a0bLED \u6307\u793a\u706f\n\n\n8 \u4e2a\u7247\u4e0a\u89e6\u70b9\u63a5\u53e3\n\n\n\n\n\n\n\n\nCodec WM8960:\n\n\n\n\nDAC SNR 98dB (\u2018A\u2019 weighted), THD -84dB at 48kHz, 3.3V  \n\n\nADC SNR 94dB (\u2018A\u2019 weighted), THD -82dB at 48kHz, 3.3V  \n\n\nStereo Class D Speaker Driver with 87% efficiency (1W output)  \n\n\nOn-chip Headphone Driver  \n\n\n40mW output power into 16\u03a9 at 3.3V  \n\n\nTHD -75dB at 20mW, SNR 90dB with 16\u03a9 load  \n\n\nOn-chip PLL provides flexible clocking scheme  \n\n\nSample rates: 8, 11.025, 12, 16, 22.05, 24, 32, 44.1, 48 kHz\n\n\n\n\n\n\n\n\n\u4f9b\u7535\u7535\u538b: 5V DC  \n\n\n\n\n\n\n\u5c3a\u5bf8: \u76f4\u5f84 70mm   \n\n\n\n\n\n\n\u91cd\u91cf: 17g\n\n\n\n\n\n\n\u7ba1\u811a\u56fe\n\n\n\n\n\n\nGPIO0 / I2S_ADC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cADC\u4fe1\u53f7\n\n\nGPIO1 / I2S_DAC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cDAC\u4fe1\u53f7\n\n\nGPIO2 / I2S_LRCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u5de6/\u53f3\u901a\u9053\u91c7\u6837\u65f6\u949f\n\n\nGPIO3 / I2S_BCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u4f4d\u65f6\u949f\n\n\nMCLK_OUT\uff1a\u5916\u90e8\u8bbe\u5907\u7684\u4e3b\u65f6\u949f\n\n\nHP_SEL\uff1a\u8033\u673a\u9891\u9053\u9009\u62e9\u3002\u5982\u679c\u4f7f\u7528ReSpeaker Mic Array\u8f93\u51fa\u97f3\u9891\uff0c\u8bf7\u5c06HP_SEL\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\n\n\nHP_L\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u5de6\u58f0\u9053\n\n\nHP_R\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u53f3\u58f0\u9053\n\n\nAGND\uff1a\u97f3\u9891\u6a21\u62df\u5730\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u7b2c\u4e00\u6b21\u62ff\u5230Respeaker_Core\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f\n\n\n1. \u51c6\u5907\n\n\n\n\nReSpeaker\u6838\u5fc3\u677f\n\n\nPC\u6216Mac\n\n\nWi-Fi\u7f51\u7edc\n\n\nSD\u5361\n\n\n\n\n2. \u8fde\u63a5\u5230\u4e32\u884c\u63a7\u5236\u53f0\n\n\n\n\n\n\n\u5bf9\u4e8ewindow, \u63a8\u8350\u4f7f\u7528 \nputty\n\u3002\n\n\n\n\n\u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC\uff0c\u52fe\u9009COM\u8bbe\u5907\u7ba1\u7406\u5668\u3002\u8fd9\u91cc\u6211\u4eec\u7684ReSpeaker COM\u7aef\u53e3\u662fCOM31\u3002\n\n\n\n\n\n\n\n\n\u5728\u8fde\u63a5\u7c7b\u578b\u4e0b\u9009\u62e9Serial ,\u5728Serial line\u4e2d\uff0c\u8f93\u5165\u60a8\u7684ReSpeaker\u7684COM\u7aef\u53e3\u53f7\uff0c\u5728\u6ce2\u7279\u7387\u9009\u9879\u4e2d\uff0c\u952e\u516557600\u3002\n\n\n\n\n\n\n\n\n\u70b9\u51fb Open.\u7136\u540e\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u9ed1\u8272\u7684\u5c4f\u5e55\u754c\u9762\uff0c\u70b9\u51fb\u56de\u8f66\u952e\u3002\n\n\n\n\n\n\n\n\n\n\n\u5bf9\u4e8e Linux/Mac\n\n\n\n\n\n\n\u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC\n\n\n\n\n\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u4f1a\u8bdd\n\n\n\u5728\u7ec8\u7aef\u4e2d\u952e\u5165ls /dev/tty.usb*  \u6211\u4eec\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3ctty.usbmodemXXXXX\u7684\u4e1c\u897f\uff0c\u5176\u4e2dXXXXX\u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u7136\u540e\u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600\n\n\n\n\n$ ls /dev/tty.usb*\n/dev/tty.usbmodem14221\n$ screen /dev/tty.usbmodem14221 57600\n\n\n\n\n3. \u8bbe\u7f6e Wi-Fi\n\n\nReSpeaker\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a\u4e2d\u7ee7\u6a21\u5f0f\uff0c\u60a8\u5fc5\u987b\u5c06\u5176\u8fde\u63a5\u5230\u73b0\u6709\u7684\u65e0\u7ebfwifi\u7f51\u7edc\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528Internet\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\u3002\n\n\n\u5f53\u60a8\u9996\u6b21\u63a5\u901aReSpeaker\u7535\u6e90\u65f6\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201cReSpeakerXXXXXX\u201d\u7684Wi-Fi\u7f51\u7edc\u3002\u8fd9\u91cc\u201cXXXXXX\u201d\u662f\u60a8\u7684ReSpeaker MAC\u5730\u5740\u7684\u6700\u540e6\u4f4d\u3002\u5c06\u60a8\u7684\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\u3002\n\n\n\n\n\n\nNote\n\n\n\u5982\u679c\u201cReSpeakerXXXXXX\u201d\u672a\u51fa\u73b0\uff0c\u4f46\u627e\u5230\u201cLinkIt_Smart_7688_XXXXXX\u201d\u3002\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\n\n\u83b7\u53d6IP\u5730\u5740\u540e\uff0c\u6253\u5f00Web\u6d4f\u89c8\u5668\uff0c\u7136\u540e\u5728\u5730\u5740\u680f\u4e2d\u8f93\u5165192.168.100.1\u3002\u51e0\u79d2\u949f\u540e\uff0c\u4f1a\u51fa\u73b0\u4e0b\u56fe\u6240\u793a\u7f51\u9875\uff0c\u9700\u8981\u60a8\u8f93\u5165\u73b0\u6709Wi-Fi\u7f51\u7edc\u7684ssid\u548c\u5bc6\u7801\u3002\n\n\n\n\n\u9009\u62e9\u8981\u8fde\u63a5\u7684Wi-Fi\u5e76\u8f93\u5165\u5bc6\u7801\u3002\u5f53\u60a8\u6309OK\u6309\u94ae\u65f6\uff0cReSpeaker\u5c06\u52a0\u5165\u6307\u5b9a\u7684\u7f51\u7edc\u3002\n\n\n\u73b0\u5728\u60a8\u7684ReSpeaker\u80fd\u591f\u8bbf\u95ee\u4e92\u8054\u7f51\u3002\n\n\n\u5982\u679c\u60a8\u6ca1\u6709\u5f39\u51fawifi\u767b\u9646\u9875\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528putty\u4e32\u53e3\u6a21\u5f0f\u4e0b\u8fde\u63a5Respeaker_Core, \u5e76\u4e14\u5728putty\u4e2d\u4f7f\u7528wictl\u626b\u63cfwifi\u5e76\u8fde\u63a5\n\n\nroot@ReSpeaker:~# wictl\n0, SEEED-MKT\n1, Xiaomi_Youth\n2, ChinaNet-Z5C4\n3, STU-EE\n4, EMBEST_WIFI\n5, SEEED-MKT\n6, nobody\n7, SEEED-MKT\n8, se.VPN\n9, Moovent_HK_2G\n10, LinkIt_Smart_7688_1D917A\n11, SEEED-MKT\n12, SEEED-MKT\n13, zhongrixing\nPlease choose your wifi: 8\nPlease input the wifi password: 88888888\nudhcpc (v1.23.2) started\nSending discover...\nSending discover...\nSending select for 192.168.199.153...\nLease of 192.168.199.153 obtained, lease time 43200\nudhcpc: ifconfig apcli0 192.168.199.153 netmask 255.255.255.0 broadcast 192.168.199.255\nudhcpc: setting default routers: 192.168.199.1\nsuccess\nroot@ReSpeaker:~#\n\n\n\n\n!!!\u6ce8\u610f\n    \u5982\u679c\u60a8\u65e0\u6cd5\u4f7f\u7528\u4e0a\u8ff0\u65b9\u6cd5\u8fde\u63a5Wifi\uff0c\u8bf7\u901a\u8fc7\u8f93\u5165firstboot\u547d\u4ee4\u8fdb\u884c\u51fa\u5382\u8bbe\u7f6e\u3002\n\n\n\u542f\u7528Wifi\u529f\u80fd\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528SSH\u6a21\u5f0f\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5Respeaker\u3002\u6211\u4eec\u53ef\u4ee5\u4ecehttp://192.168.100.1/#!/overview WAN IP\u83b7\u53d6Respeaker IP\u5730\u5740\u3002\u5bc6\u7801\u662froot\u3002\n\n\nssh root@ssh *.*.*.*\n\n\n\n\n4. \u4f7f\u7528SD\u5361\u6765\u6269\u5c55\u5b58\u50a8\n\n\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5d4c\u5165\u5f0f\u8bbe\u5907\u53ef\u4ee5\u4f7f\u7528\u6709\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff08ReSpeaker\u4ec5\u4e3a\u7528\u6237\u63d0\u4f9b\u4e865M\u7684\u677f\u8f7dFlash\u5b58\u50a8\u7a7a\u95f4\uff09\u3002\u4e3a\u5e94\u7528\u6216\u8005\u6570\u636e\u63d0\u4f9b\u66f4\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u6fc0\u53d1ReSpeaker\u7684\u6f5c\u529b\uff0c\u6240\u4ee5\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u4f5c\u4e3aextroot\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u8fd8\u4e0d\u9519\u7684\u9009\u62e9\u54df\u3002\n\n\n\u901a\u8fc7\u4f7f\u7528extroot\uff0c\u6dfb\u52a0\u5916\u90e8SD\u5361\u5b58\u50a8\u8bbe\u5907\u6765\u5b9e\u73b0\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u5b58\u50a8\u5bb9\u91cf\u7684\u6269\u5c55\u3002\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u5916\u90e8\u5b58\u50a8\u7a7a\u95f4\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\u542f\u52a8\uff0c\u6216\u8005\u4ee5\u539f\u59cb\u6587\u4ef6\u7cfb\u7edf\u7684\u8986\u76d6\u914d\u7f6e\u8fdb\u884c\u542f\u52a8\u3002\n\n\n\n\n\u786e\u4fdd\u60a8\u7684SD\u5361\u5df2\u63d2\u5165ReSpeaker\uff0c\u5e76\u4e14/ dev / mmcblk0p1\u53ef\u4ee5\u901a\u8fc7df -h\u6216ls / dev\u8fdb\u884c\u68c0\u6d4b\u3002\n\n\n\n\nroot@ReSpeaker:/# df -h\nFilesystem                Size      Used Available Use% Mounted on\nrootfs                    1.8M    832.0K    960.0K  46% /\n/dev/root                29.0M     29.0M         0 100% /rom\ntmpfs                    61.7M    276.0K     61.5M   0% /tmp\n/dev/mtdblock6            1.8M    832.0K    960.0K  46% /overlay\noverlayfs:/overlay        1.8M    832.0K    960.0K  46% /\ntmpfs                   512.0K         0    512.0K   0% /dev\n/dev/mmcblk0p1            7.4G      2.5M      7.4G   0% /tmp/run/mountd/mmcblk0p1\n\n\n\n\n\n\n\u5c06SD\u5361\u683c\u5f0f\u5316\u4e3a\u4e24\u4e2a\u5206\u533a\uff0c\u4e00\u4e2a\u662fFAT32\uff0c\u53e6\u4e00\u4e2a\u662fEXT4\u3002EXT4\u6587\u4ef6\u7cfb\u7edf\u5c06\u4f5c\u4e3a\u4e00\u4e2a\u5916\u63a5\u7a0b\u5e8f\uff0c\u800cFAT32\u5c06\u4f5c\u4e3a\u6b63\u5e38\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u53ef\u4ee5\u5728ReSpeaker\u548cPC\u4e4b\u95f4\u4f20\u8f93\u6587\u4ef6\u3002\n\n\n\n\n    umount /dev/mmcblk0p1\n    fdisk /dev/mmcblk0\n     ------------------ fdisk ------------------------\n    \nCommand (m for help):o\n    \nCreated a new DOS disklabel\n    \nCommand (m for help):n\n    \nPartition type\n    p   primary (0 primary, 0 extended, 4 free)\n    e   extended (container for logical partitions)\n    \nSelect (default p):p\n    \nPartition number (1-4, default 1):1\n    \nFirst sector (2048-15523839, default 2048):\n    \nLast sector, +sectors or +size{K,M,G,T,P} (2048-15523839, default 15523839): +2G\n    \nCommand (m for help):n\n    \nPartition type\n    p   primary (1 primary, 0 extended, 3 free)\n    e   extended (container for logical partitions)\n    \nSelect (default p):p\n    \nPartition number (1-4, default 2):2\n    \nFirst sector (4196352-15523839, default 4196352):\n    \nLast sector, +sectors or +size{K,M,G,T,P} (4196352-15523839, default 15523839):\n    \nCommand (m for help):w\n    \nThe partition table has been altered.\n    \nCalling i[  292.010000]  mmcblk0: p1 p2\n    \noctl() to re-read partition table.\n    \nSyncing disks.\n     ------------------ end ------------------------\n\n    mkfs.fat /dev/mmcblk0p1\n    mkfs.ext4 /dev/mmcblk0p2\n\n    # reload mtk_sd kernel module\n    rmmod mtk_sd\n    insmod mtk_sd\n\n\n\n\n\n\n\u51c6\u5907\u60a8\u7684\u5916\u90e8\u5b58\u50a8root overlay\u3002\n\n\n\n\nmount /dev/mmcblk0p2 /mnt ; tar -C /overlay -cvf - . | tar -C /mnt -xf - ; umount /mnt\n\n\n\n\n\n\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efafstab\u3002\u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u542f\u7528\u6240\u6709\u5206\u533a\u5e76\u5c06'/ mnt / mmcblk0p2'\u5206\u533a\u8bbe\u7f6e\u4e3a'/ overlay'\u5206\u533a\u7684fstab\u6a21\u677f\n\n\n\n\n    block detect \n /etc/config/fstab;\n    sed -i s/option$\n\\t\nenabled$\n\\t\n\\\n0\\\n/option$\n\\t\nenabled$\n\\t\n\\\n1\\\n/ /etc/config/fstab;\n    sed -i s#/mnt/mmcblk0p2#/overlay# /etc/config/fstab;\n    cat /etc/config/fstab;\n\n\n\n\n\n\n\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u5230 overlay.\n\n\n\n\n    root@ReSpeaker:/# mount /dev/mmcblk0p2 /overlay/\n    root@ReSpeaker:/# df -h\n  Filesystem                Size      Used Available Use% Mounted on\n  rootfs                    1.8M    832.0K    960.0K  46% /\n  /dev/root                29.0M     29.0M         0 100% /rom\n  tmpfs                    61.7M    276.0K     61.5M   0% /tmp\n  /dev/mtdblock6            5.2G     11.8M      4.9G   0% /overlay\n  overlayfs:/overlay        1.8M    832.0K    960.0K  46% /\n  tmpfs                   512.0K         0    512.0K   0% /dev\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /tmp/run/mountd/mmcblk0p2\n  /dev/mmcblk0p1            2.0G      4.0K      2.0G   0% /tmp/run/mountd/mmcblk0p1\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /overlay\n\n\n\n\n\n\n\u91cd\u542fReSpeaker\u5e76\u91cd\u65b0\u68c0\u67e5\u3002\u5982\u679cSD\u5361\u5982\u4e0a\u81ea\u52a8\u52a0\u8f7d\uff0c\u5c31\u6210\u529f\u4e86\u3002\u66f4\u591a\u5173\u4e8eextroot\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\n\n5. \u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6\n\n\n\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u540e\uff0c\u6709\u8db3\u591f\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6\u3002\n\n\n\u5b89\u88c5git\n\n\n    opkg update\n    opkg install git git-http\n\n\n\n\n6. \u66f4\u65b0 Python \u5e93\n\n\ngit clone https://github.com/respeaker/respeaker_python_library.git\ncd respeaker_python_library\npython setup.py install\n\n\n\n\n\u4e0eRespeaker\u7684\u7b2c\u4e00\u6b21\u4e92\u52a8 - ReSpeaker, play music!\n\n\n\u4f7f\u7528Bing Speech API\uff0cReSpeaker\u53ef\u4ee5\u5b9e\u65f6\u6253\u5f00\u5e76\u8bc6\u522b\u6765\u81ea\u9ea6\u514b\u98ce\u7684\u97f3\u9891\uff0c\u6216\u4ece\u6587\u4ef6\u8bc6\u522b\u97f3\u9891\u3002\n\n\n\u8981\u4f7f\u7528Bing Speech API\uff0c\u9996\u5148\u5fc5\u987b\u4ece \n\u8fd9\u91cc\n \u83b7\u53d6Microsoft Cognitive Services\u7684\u5bc6\u94a5\uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230BING_KEY =\u201c'\uff0c\u7136\u540e\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4fdd\u5b58\u5728playmusic.py\u4e2d\u5e76\u8fd0\u884c\n\n\n//stop mopidy and alexa to avoid USB device occupation\n/etc/init.d/mopidy stop\n/etc/init.d/alexa stop\npython playmusic.py\n\n\n\n\n\n\nimport logging\nimport time\nimport os\nfrom threading import Thread, Event\nfrom respeaker import Microphone\nfrom respeaker.bing_speech_api import BingSpeechAPI\n\n# use madplay to play mp3 file     \nos.system(\nmadplay\n)               \n\n# get a key from https://www.microsoft.com/cognitive-services/en-us/speech-api\nBING_KEY = \n      \n\n\ndef task(quit_event):                                                         \n    mic = Microphone(quit_event=quit_event)                                   \n    bing = BingSpeechAPI(key=BING_KEY)                                        \n\n    while not quit_event.is_set():\n        if mic.wakeup(\nrespeaker\n):        \n            print(\nWake up\n)               \n            data = mic.listen()            \n            try:                      \n                text = bing.recognize(data)\n                if text:           \n                    print(\nRecognized %s\n % text)\n                    if \nplay music\n in text:\n                        print(\nI will play music!\n)\n                        os.system(\nmadplay Tchaikovsky_Concerto_No.1p.mp3\n)\n            except Exception as e:               \n                print(e.message)                 \n\ndef main():                                                              \n    logging.basicConfig(level=logging.DEBUG)                                                           \n    quit_event = Event()        \n    thread = Thread(target=task, args=(quit_event,))\n    thread.start()                          \n    while True:                             \n        try:                                \n            time.sleep(1)                           \n        except KeyboardInterrupt:                   \n            print(\nQuit\n)                           \n            quit_event.set()\n            break        \n    thread.join()                \n\nif __name__ == \n__main__\n:       \n    main()                  \n\n\n\n\n\u5728\"INFO:mic:Start Detecting\" \u51fa\u6765\u4e4b\u540e\uff0c\u5c1d\u8bd5\u8bf4\u201cReSpeaker\u201d\u5524\u9192\u7a0b\u5e8f\uff0c\u5524\u9192\u540e\u8bf4\u201cplaymusic\u201d\u8ba9\u5b83\u64ad\u653e\u97f3\u4e50\u3002\u7136\u540eReSpeaker\u5c06\u4f7f\u7528madplay\u5de5\u5177\u5728\u5f53\u524d\u8def\u5f84\u4e2d\u64ad\u653e\u201cTchaikovsky_Concerto_No.1p.mp3\u201d\n\n\n\n\n\u5982\u679c\u60a8\u770b\u5230\u4ee5\u4e0b\u9519\u8bef\u4ee3\u7801\uff0c\u90a3\u4e48mopidy\u6b63\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u5360\u7528USB\u8bbe\u5907\u3002\u6240\u4ee5\u5c1d\u8bd5\u8fd0\u884c /etc/init.d/mopidy\uff0c\u505c\u6b62mopidy\uff0c\u7136\u540e\u518d\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4\u3002\n\n\nroot@ReSpeaker:~# python playmusic.py\nUsage: madplay [OPTIONS] FILE [...]\nTry `madplay --help\n for more information.\nException in thread Thread-2:\nTraceback (most recent call last):\nFile \n/usr/lib/python2.7/threading.py\n, line 810, in __bootstrap_inner\n\n\n\n\n\u5e94\u7528\u5b9e\u4f8b\n\n\n\n\n\u6c34\u679c\u94a2\u7434\n\n\n\n\nReSpeaker\u63a7\u5236\u6a21\u5757\u662f\u57fa\u4e8eATmega32u4\u82af\u7247\uff0c\u8be5\u82af\u7247\u5b8c\u5168\u517c\u5bb9Arduino\u9a71\u52a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ReSpeaker\u4f5c\u4e3a\u5f3a\u5927\u7684Arduino\u5b66\u4e60\u677f\uff0c\u5e76\u505a\u4e86\u8bb8\u591a\u201cArduino\u201d\u5f00\u53d1\u677f\u80fd\u505a\u7684\u4e8b\u60c5\u3002\n\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Arduino IDE\u5bf9\u5176\u8fdb\u884c\u7f16\u7a0b\uff0c\u6765\u5b9e\u73b0\u521b\u610fDIY\u94a2\u7434\uff0c\u8be5\u94a2\u7434\u642d\u914d8\u4e2a\u6a31\u6843\u897f\u7ea2\u67ff\u8fde\u63a5\u5230ReSpeaker\u76848\u4e2a\u89e6\u6478\u4f20\u611f\u5668\u3002\n\n\n\n\n\n\n\n\n\n\n\u5728respeaker\u4e0a\u8f93\u5165 git clone \nhttps://github.com/respeaker/piano.git\n      \u4e0b\u8f7d\u5e93\n\n\n\n\n\n\n\n\n\n\n\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e2d\u4e0b\u8f7d\nReSpeaker Arduino Library\n\n\n\n\n\n\n\n\n\n\n\u4e0a\u4f20piano.ino\u5230ReSpeaker\u7684Arduino Leonardo\uff08ATmega32U4\uff09\n\n\n\n\n\n\n\n\n\n\n\u5728ReSpeaker\u7684\u4e32\u884c\u63a7\u5236\u53f0\u4e0a\u8fd0\u884cpython piano.py\n\n\n\n\n\n\n\n\n\u5929\u6c14\u4e91\n\n\n\n\n\u5929\u6c14\u4e91\u662f\u5f88\u68d2\u7684\u4e00\u4e2aReSpeaker\u9879\u76ee\u3002\u8fd9\u4e2a\u5f88\u9177\u7684\u521b\u610f\u5c06ReSpeaker\u53d8\u6210\u4e86\u4e00\u4e2a\u5929\u6c14\u4e91\uff0c\u5b83\u80fd\u591f\u663e\u793a\u51fa\u751f\u52a8\u7684\u5149\u7ebf\u548c\u58f0\u97f3\u3002\n\n\n\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0cOpenwrt\u8d1f\u8d23\u4ece\u4e92\u8054\u7f51\u83b7\u53d6\u5b9e\u65f6\u5929\u6c14\u4fe1\u606f\uff0c\u8fdb\u884c\u8bed\u97f3\u4ea4\u4e92\u548c\u97f3\u9891\u8f93\u51fa\uff0c\u800cArduino\u8d1f\u8d23\u63a7\u5236\u5f69\u8272RGB LED\u3002\n\n\n\n\n\u5728respeaker\u4e0a\u8f93\u5165 git clone \nhttps://github.com/jerryyip/WeatherCloud.git\n, \u4e0b\u8f7d\u9879\u76ee\u5e93\u6587\u4ef6\u3002\n\n\n\u70b9\u51fb\u4e0b\u8f7d \nReSpeaker Arduino Library\n \u5230\u60a8\u7684\u7535\u8111\u4e0a\uff0c\u5e76\u5b89\u88c5\u3002\n\n\n\u901a\u8fc7Arduino IDE\u5c06 \npixels_pattern.ino\n \u4e0a\u4f20\u5230respeaker\u3002\n\n\n\n\n\u4ece\u8fd9\u91cc\u83b7\u53d6OpenWeatherMap appid \uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230main.py\u4e2d\u7684appID =\u201c\u201d\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u60a8\u7684\u57ce\u5e02\u6dfb\u52a0\u5230city =\u201c\u201d\n\n\n\n\n\n\n\u5728\u4f7f\u7528SPI\u4e4b\u524d\u8bf7\u7ec8\u6b62mopidy service\u5728OpenWrt\u4e2d\u7684\u8fdb\u7a0b\uff0crespeaker\u5728\u63a7\u5236\u53f0\u4e0a\u952e\u5165\n/etc/init.d/mopidy stop\n\n\n\n\n\u8fd0\u884cpython main.py \u7136\u540e\u5bf9\u7740\u5b83\u558a \"ReSpeaker, what is the weather like?\"\n\n\n\u6709\u5173\u5982\u4f55\u5236\u4f5c\u5929\u6c14\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\n\nReSpeaker Mic Array\uff08ReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\uff09\n\n\n\n\nReSpeaker Mic Array\n\n\nReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\n\n\n\u5173\u4e8e\u8f6f\u4ef6\n\n\n\n\n\u60a8\u53ef\u9875\u9762\u4ee5\u70b9\u51fb\u4e0b\u5217\u6807\u9898\u6765\u8df3\u8f6c\u5230\u5bf9\u5e94\n\n\nReSpeaker Arduino \u5e93\n\n\nReSpeaker Arudino\u5e93\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a\n\n\n\n\n\u652f\u6301\u7535\u5bb9\u5f0f\u89e6\u6478\u611f\u5e94\n\n\n\u5b9e\u73b0\u4e86WS2812 RGB LED\u9a71\u52a8\n\n\n\u6784\u5efa\u4e86\u4eceArduino (ATmega32U4)\u5230\u57fa\u4e8eLinux\u7684OpenWrt (MT7688)\u4e4b\u95f4\u7684USB\u5230\u4e32\u53e3\u548cUSB\u5230SPI\u901a\u9053\u3002                           \n\n\n\n\nReSpeaker Python \u5e93\n\n\nReSpeaker\u662f\u4e00\u4e2a\u652f\u6301\u8bed\u97f3\u4ea4\u4e92\u7684\u5f00\u653e\u9879\u76ee\u3002ReSpeaker python\u5e93\u662f\u4e00\u4e2a\u5f00\u6e90\u7684python\u5e93\uff0c\u7528\u4e8e\u63d0\u4f9b\u8bed\u97f3\u4ea4\u4e92\u7684\u57fa\u672c\u529f\u80fd\u3002\n\u5b83\u4f7f\u7528PocketSphinx\u8fdb\u884c\u5173\u952e\u5b57\u67e5\u627e\uff0c\u5e76\u4f7f\u7528webrtcvad\u8fdb\u884c\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b\u3002\n\n\n\u66f4\u591a\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc\u67e5\u770b\u6211\u4eec\u7684github\u8d44\u6599\u5e93\n\n\nFAQ\n\n\n\n\nQ1: \u5982\u4f55\u6062\u590d\u51fa\u5382\u8bbe\u7f6e?\n\n\n\n\n\u6253\u5f00\u4e32\u884c\u63a7\u5236\u53f0\u6216ssh\u4f1a\u8bdd\u5e76\u8fd0\u884c firstboot. \n\u66f4\u591a\u7ec6\u8282\u70b9\u51fb\u8fd9\u91cc\n.\n\n\n\n\nQ2: \u5982\u679c\u5347\u7ea7\u5931\u8d25\u4e86\uff0c\u600e\u4e48\u62a2\u6551?\n\n\n\n\n\u5347\u7ea7\u5931\u8d25\u540e\uff0c\u5f53\u91cd\u65b0\u542f\u52a8\u8fdb\u5165openwrt\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u7ec8\u7aef\uff0cssh\u6216\u4e32\u884c\u63a7\u5236\u53f0\u8bbf\u95ee\u7cfb\u7edf\u3002\u6211\u4eec\u53ef\u4ee5\u6309\u7167\n\n\n\n\nRescue instruction\n \u6307\u4ee4\u8fdb\u884c\u6062\u590d\u3002\n\n\nQ3: ReSpeaker\u627e\u4e0d\u5230\u6211\u7684Wi-Fi\n\n\n\n\n\u8bf7\u5148\u5c1d\u8bd5 \n\u6062\u590d\u51fa\u5382\u8bbe\u7f6e\n \u3002\n\n\nReSpeaker\u4e0d\u652f\u6301Wi-Fi\u9891\u905312\u3002\u786e\u4fdd\u60a8\u7684\u8def\u7531\u5668\u6ca1\u6709\u4f7f\u7528\u8be5\u901a\u9053\u3002.\n\n\n\n\nQ4: \u5982\u4f55\u8fdb\u884cWifi\u914d\u7f6e\n\n\n\n\n\u6211\u4eec\u5efa\u8bae\u60a8\u901a\u8fc7\nWEB-UI\n\u914d\u7f6eWi-Fi \uff0c\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\uff0c\u8bf7\u5728\u63a7\u5236\u53f0\u4e0a\u5c1d\u8bd5\u547d\u4ee4\u884c\u5de5\u5177\nwictl\n \u3002\n\n\n\n\nQ5: \u5982\u4f55\u6539\u53d8BING Speech api \u7684\u8bc6\u522b\u8bed\u8a00\n\n\n\n\n\u5982\u679c\u60a8\u4e0d\u9700\u8981\u66f4\u6539\u5524\u9192\u5b57\uff0c\u53ea\u9700\u5c06text = bing.recognize\uff08data\uff09\u66f4\u6539\u4e3atext = bing.recognize\uff08data\uff0clanguage =\u201czh-CN\u201d\uff09\u5c31\u53ef\u4ee5\u4e86\u3002 \n\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc\n.\n\n\n\n\nQ6: \u6536\u5230SD\u5361\u8b66\u544a\u6d88\u606f\u201c\u5377\u672a\u6b63\u786e\u5378\u8f7d\u3002\u67d0\u4e9b\u6570\u636e\u53ef\u80fd\u5df2\u635f\u574f\u3002\u8bf7\u8fd0\u884cfsck\u201d\n\n\n\n\n\u5982\u679cSD\u5361\u4e0a\u7684\u6587\u4ef6\u6b63\u5e38\uff0c\u8bf7\u5ffd\u7565\u5b83\u3002\u5426\u5219\uff0c\u5c1d\u8bd5\u4f7f\u7528\nsd\u5361\u683c\u5f0f\u5316\u7a0b\u5e8f\u8fdb\u884c\u683c\u5f0f\u5316\n.\n\n\n\n\nQ7: \u9519\u8bef\u63d0\u793a \u201cBad flash from Arduino\u201d\n\n\n\n\n\u6309\u7167\u4e0b\u9762\u4ee3\u7801\uff0c\u5728openwrt\u4e2d\u91cd\u65b0\u70e7\u5199 bootloade\u3002\n\n\n\n\n/etc/init.d/mopidy stop  # stop mopidy if it\ns running, mopidy-hallo plugin will use SPI\n/etc/init.d/alexa stop      # stop alexa if it\ns running\nmt7688_pinmux set ephy gpio\ncd /etc/arduino\navrdude -c linuxgpio -p m32u4 -e -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xCB:m  -U flash:w:Caterina-ReSpeaker.hex -u -U lock:w:0xEF:m\n\n\n\n\nQ8: \u5fd8\u8bb0\u4e86WebUI\u7684\u5bc6\u7801\n\n\n\n\n\u91cd\u7f6e juci \u5bc6\u7801\n\n\n\n\norangectl passwd root 12345678  //replace 12345678 with the password you want to set\n\n\n\n\nQ9: \u5982\u4f55\u652f\u6301\u8c37\u6b4c\u8bed\u97f3\u6216\u5176\u4ed6Speach to Text\uff08STT\uff09\u5f15\u64ce?\n\n\n\n\n\u6309\u7167\n\u6307\u5357\n\u5b89\u88c5speech_recognition\u5e93\n\n\n\n\nQ10: \u8fd0\u884cAlexa \u9519\u8bef\uff0c\u63d0\u793a\"IOError: [Errno -9998] Invalid number of channels\"\n\n\n\n\n\u8fd8\u6709\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6216alexa\u5b9e\u4f8b\u4f7f\u7528\u97f3\u9891\u8f93\u5165\u8bbe\u5907\u3002\u8fd0\u884c/etc/init.d/alexa stop\u548c/etc/init.d/mopidy stop \u505c\u6b62\u5b83\u4eec\u3002\u8981\u7981\u7528mopidy\u542f\u52a8\uff0c\u8bf7\u8fd0\u884c/etc/init.d/mopidy disable\u3002\n\n\n\n\nQ11: \u65e0\u6cd5\u8fd0\u884cpython playmusic.py\n\n\n\n\n\u5e94\u8be5\u662fmopidy\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u4f7f\u7528USB\u8bbe\u5907\u3002\u5c1d\u8bd5\u8fd0\u884c/etc/init.d/mopidy stop, \u505c\u6b62mopidy\u5e76\u518d\u6b21\u8fd0\u884c\u60a8\u7684\u547d\u4ee4\u3002\n\n\n\n\nQ12: \u6ca1\u6709RPC\u8fde\u63a5\n\n\n\n\n\u60a8\u9700\u8981\u91cd\u65b0\u5237\u56fa\u4ef6\uff0c\u70b9\u51fb\u67e5\u770b \n\u6307\u5357\n\n\n\n\nQ13: SFTP \n FTP\n\n\n\n\n\u6211\u4eec\u6ca1\u6709FTP\uff0c\u53ea\u6709SFTP\u3002\n\n\n\n\nQ14: \u4e32\u53e3\u63a7\u5236\u53f0\u88ab\u9501\u5b9a\n\n\n\n\n\u5c1d\u8bd5\u66f4\u65b0 \narduino code\n\u3002\n\n\n\n\nQ15:\u5982\u4f55\u7981\u7528'ap'\u6a21\u5f0f\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u5728vi / etc / config / wireless \u4e2d\u4fee\u6539\u5982\u4e0b 'ssid' flag of the 'ap' interface to '' \u3002\u4e5f\u5c31\u662f\u5c06'ap'\u6539\u4e3a''\u3002\u7136\u540e\u5c31\u4f1a\u9690\u85cfap\u3002\n\n\n\n\nQ16: I2C\u58f0\u5361\u95ee\u9898\n\n\n\n\n\u6211\u4eec\u9700\u8981\u68c0\u67e5\u7f16\u89e3\u7801\u5668\u9a71\u52a8\u7a0b\u5e8f\u517c\u5bb9\u540d\u4ee5\u53ca\u7f16\u89e3\u7801\u5668i2c\u5730\u5740 \u7136\u540e\u91cd\u5efaimage\u56fa\u4ef6\u3002\n\n\n\n\nQ17: \u5373\u4f7f\u6ca1\u6709\u58f0\u97f3\uff0cRespeaker\u4e5f\u7ecf\u5e38\u88ab\u5524\u9192\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0keyword.txt\u4e2d\u7684\u9608\u503c\u6765\u51cf\u5c11\u8bef\u8bc6\u522b\u7387\uff0c\u4f46\u4e5f\u4f1a\u964d\u4f4e\u654f\u611f\u5ea6\u3002\n\n\n\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u60a8\u7684\u58f0\u97f3\u4e0e\u5f53\u524d\u7684\u58f0\u5b66\u6a21\u5757\u8fdb\u884c\u5339\u914d\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u53c2\u8003\u8fd9\u91cc \nhttp://cmusphinx.sourceforge.net/wiki/tutorialadapt\n\u3002\n\n\n\u8fd9\u79cd\u65b9\u6cd5\u5c06\u6709\u6548\u63d0\u9ad8\u4e2a\u4eba\u5173\u952e\u5b57\u8bc6\u522b\u7387\uff0c\u4f46\u53ef\u80fd\u8ba9\u5176\u4ed6\u4eba\u4e0d\u88ab\u8bc6\u522b\u3002\n\n\n\n\nQ18: \u5982\u4f55\u63a7\u5236Respeaker\u7684GPIO\u5f15\u811a\uff1f\n\n\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u91cc\u7684\u4ee3\u7801 \nhttps://github.com/respeaker/respeaker_python_library/blob/master/respeaker/gpio.py\n\n\n\u4ee5\u53ca\u7528\u8fd9\u91cc\u7684\u4f8b\u7a0b\u6765\u901a\u8fc7GPIO\u6a21\u62dfSPI \nhttps://github.com/respeaker/respeaker_python_library/blob/master/respeaker/spi.py\n\n\n\n\nQ19: \u5982\u4f55\u6539\u53d8\u5524\u9192\u8bcd\uff1f\n\n\n\n\n\n\n\u5728respeaker\u7684 /usr/lib/python2.7/site-packages/respeaker-0.6.0-py2.7.egg/respeaker/pocketsphinx-data  \u76ee\u5f55\u4e0b\u627e\u5230\u5e76\u6253\u5f00\nkeywords.txt\n\n\nrespeaker /1e-30/\nalexa /1e-30/\nplay music /1e-40/\n\n\n\n\nrespeaker \u662f\u5173\u952e\u8bcd, 1e-30 \u662f\u5176\u9608\u503c\u3002\u4e3a\u4e86\u63d0\u9ad8\u654f\u611f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u964d\u4f4e\u9608\u503c\uff0c\u4f8b\u59821e-20\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u63d0\u9ad8\u7075\u654f\u5ea6\u800c\u964d\u4f4e\u9608\u503c\u540c\u65f6\u4f1a\u589e\u52a0\u9519\u8bef\u63a5\u53d7\u7387\u3002\n\n\n\n\n\n\n\u5982\u679c\u8981\u6dfb\u52a0\u65b0\u7684\u5173\u952e\u5b57\uff0c\u5e94\u8be5\u9996\u5148\u5c06\u5173\u952e\u5b57\u6dfb\u52a0\u5230 \ndictionary.txt\n \u3002dictionary.txt \u91cc\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\n\n\n```\nrespeaker   R IY S P IY K ER\nalexa   AH L EH K S AH\nplay    P L EY\nmusic   M Y UW Z IH K\n```\n\n\u6bcf\u884c\u7684\u7b2c\u4e00\u90e8\u5206\u662f\u5173\u952e\u8bcd\u7684\u540d\u5b57 (respeaker, alexa or music), \u7b2c\u4e8c\u90e8\u5206\u662f\u5b83\u7684\u97f3\u7d20\u3002\u4f60\u53ef\u4ee5\u5728 [\u8fd9\u91cc](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt) \u7684\u5b57\u5178\u4e2d\u627e\u5230\u5355\u8bcd\u3002\n\n\n\n\n\n\n\n\n\n\u7136\u540e\u66f4\u6539\u4ee3\u7801\uff1a .\n\n\nif mic.wakeup(\nrespeaker\n):\n\n\n\n\n\n\n\n\n\u5c0f\u7ed3:\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u6309\u7167\u4e0b\u9762\u76843\u6b65\u3002\u6bd4\u5982\u6dfb\u52a0good morning  \n\n\n-  1\u3001\u5728[\u5b98\u65b9\u5b57\u5178](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt)\u4e2d\u67e5\u627e\u5e76\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684\u97f3\u7d20\u3002\n-  2\u3001\u5728keyword.txt\u4e2d\u7ed9 good morning\u8bbe\u7f6e\u4e00\u4e2a\u9608\u503c\n-  3\u3001\u5728\u60a8\u7684python\u4ee3\u7801\u4e2d\u6dfb\u52a0\u8c03\u7528if mic.wakeup(\ngood morning\n):\n\n\n\n\n\nQ20: \u901a\u8fc7\u51fa\u5382\u56fa\u4ef6\u6062\u590d\u7cfb\u7edf\n\n\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u66f4\u65b0\u60a8\u7684ReSpeaker\u6216\u65e0\u6cd5\u8bbf\u95eehttp://192.168.100.1/home.html \uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n \u3002\u8981\u5c06\u7535\u8111\u4e0a\u6700\u65b0\u7684\u56fa\u4ef6\u4e0b\u8f7d\u5230SD\u5361\u4e0a\uff0c\u5e76\u5c06SD\u5361\u63d2\u5165ReSpeaker\u3002\n\n\n\u8fde\u63a5\u5230respeaker\u7684 \n\u4e32\u884c\u63a7\u5236\u53f0\n \uff0c\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\u884c\u6765\u66f4\u65b0\u56fa\u4ef6\uff1a\n\n\nmount /dev/mmcblk0p1 /mnt\ncd /mnt\nsysupgrade -n -F ramips-openwrt-latest-LinkIt7688-squashfs-sysupgrade.bin\n\n\nReSpeaker\u5b89\u88c5\u56fa\u4ef6\u548c\u91cd\u542f\u5927\u7ea6\u9700\u89813\u5206\u949f\uff0c\u66f4\u65b0\u65f6**\u8bf7\u52ff\u5173\u95ed** ReSpeaker\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u539f\u7406\u56fe]\n \nReSpeaker Core v1.0 SCH\n\n\n[Eagle PCB\u56fe]\n \nReSpeaker Core v1.0 BRD\n\n\n[PDF \u539f\u7406\u56fe]\n \nReSpeaker Core v1.0 Schematic(pdf)\n\n\n[PDF PCB\u5e95\u677f\u56fe]\n \nReSpeaker Core v1.0 PCB bottom(pdf)\n\n\n[PDF PCB\u9876\u677f\u56fe]\n \nReSpeaker Core v1.0 PCB top(pdf)", 
            "title": "Respeaker Core"
        }, 
        {
            "location": "/Respeaker_Core/#_1", 
            "text": "\u89e3\u653e\u60a8\u7684\u53cc\u624b\uff1a\u79bb\u7ebf\u6216\u5728\u7ebf\u6a21\u5f0f\u4e0b\u7684\u8bed\u97f3\u8bc6\u522b  \u65e0\u7ebf\u97f3\u9891\u6d41\u4f20\u8f93\uff1a \u901a\u8fc7Airplay/DLNA\u4f20\u8f93\u97f3\u9891\u6d41  \u6613\u4e8e\u4f7f\u7528\u7684SDK\uff1a\u9002\u7528\u4e8ePython\u548cC / C ++\u5f00\u53d1\u4eba\u5458  \u65e5\u76ca\u589e\u957f\u7684\u529f\u80fd\uff1a\u4e0b\u8f7d\u548c\u63d2\u4ef6\u4e0d\u65ad\u4e30\u5bcc\u5176\u529f\u80fd\u4e0e\u5e94\u7528  \u5373\u63d2\u5373\u7528\u63d2\u4ef6\uff1a\u53ef\u6269\u5c55\u4f7f\u7528\u9ea6\u514b\u98ce\u9635\u5217\uff0cGrove\u6269\u5c55\u677f\uff0cGrove\u6a21\u5757  \u514d\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff1a\u53ef\u57fa\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u6240\u6709\u529f\u80fd\u3001\u53c2\u6570\uff08\u6682\u65f6\u4e0d\u53ef\u7528\uff09", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Respeaker_Core/#_2", 
            "text": "", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Respeaker_Core/#_3", 
            "text": "AI7688 Wi-Fi \u6a21\u5757:   \u64cd\u4f5c\u7cfb\u7edf: \u57fa\u4e8eGNU/Linux \u7684 OpenWrt  wifi\u652f\u6301: \u652f\u6301802.11b/g and HT 802.11n \u6a21\u5f0f  \u6269\u5c55\u6027:\u4e24\u6392\u6269\u5c55\u63a5\u53e3\uff0c\u62e5\u6709 I2C, GPIO \u548c USB 2.0  \u63a5\u53e3: 3.5mm AUX \u97f3\u9891\u63a5\u53e3, Micro USB \u548c SD card \u5361\u69fd     ATMega32U4 \u5904\u7406\u5668:   Linnux\u5e73\u53f0\u4e0b\u7684 USB CDC \u8f6f\u4e32\u53e3  12\u4e2a\u53ef\u7f16\u7a0bLED \u6307\u793a\u706f  8 \u4e2a\u7247\u4e0a\u89e6\u70b9\u63a5\u53e3     Codec WM8960:   DAC SNR 98dB (\u2018A\u2019 weighted), THD -84dB at 48kHz, 3.3V    ADC SNR 94dB (\u2018A\u2019 weighted), THD -82dB at 48kHz, 3.3V    Stereo Class D Speaker Driver with 87% efficiency (1W output)    On-chip Headphone Driver    40mW output power into 16\u03a9 at 3.3V    THD -75dB at 20mW, SNR 90dB with 16\u03a9 load    On-chip PLL provides flexible clocking scheme    Sample rates: 8, 11.025, 12, 16, 22.05, 24, 32, 44.1, 48 kHz     \u4f9b\u7535\u7535\u538b: 5V DC      \u5c3a\u5bf8: \u76f4\u5f84 70mm       \u91cd\u91cf: 17g", 
            "title": "\u6280\u672f\u89c4\u683c"
        }, 
        {
            "location": "/Respeaker_Core/#_4", 
            "text": "GPIO0 / I2S_ADC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cADC\u4fe1\u53f7  GPIO1 / I2S_DAC\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0cDAC\u4fe1\u53f7  GPIO2 / I2S_LRCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u5de6/\u53f3\u901a\u9053\u91c7\u6837\u65f6\u949f  GPIO3 / I2S_BCLK\uff1a\u9a71\u52a8\u5916\u90e8\u7f16\u7801\u5668/\u89e3\u7801\u5668\uff0c\u4f4d\u65f6\u949f  MCLK_OUT\uff1a\u5916\u90e8\u8bbe\u5907\u7684\u4e3b\u65f6\u949f  HP_SEL\uff1a\u8033\u673a\u9891\u9053\u9009\u62e9\u3002\u5982\u679c\u4f7f\u7528ReSpeaker Mic Array\u8f93\u51fa\u97f3\u9891\uff0c\u8bf7\u5c06HP_SEL\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73  HP_L\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u5de6\u58f0\u9053  HP_R\uff1aReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u7684\u6a21\u62df\u97f3\u9891\u53f3\u58f0\u9053  AGND\uff1a\u97f3\u9891\u6a21\u62df\u5730", 
            "title": "\u7ba1\u811a\u56fe"
        }, 
        {
            "location": "/Respeaker_Core/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker_core", 
            "text": "", 
            "title": "\u7b2c\u4e00\u6b21\u62ff\u5230Respeaker_Core\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f"
        }, 
        {
            "location": "/Respeaker_Core/#1", 
            "text": "ReSpeaker\u6838\u5fc3\u677f  PC\u6216Mac  Wi-Fi\u7f51\u7edc  SD\u5361", 
            "title": "1. \u51c6\u5907"
        }, 
        {
            "location": "/Respeaker_Core/#2", 
            "text": "\u5bf9\u4e8ewindow, \u63a8\u8350\u4f7f\u7528  putty \u3002   \u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC\uff0c\u52fe\u9009COM\u8bbe\u5907\u7ba1\u7406\u5668\u3002\u8fd9\u91cc\u6211\u4eec\u7684ReSpeaker COM\u7aef\u53e3\u662fCOM31\u3002     \u5728\u8fde\u63a5\u7c7b\u578b\u4e0b\u9009\u62e9Serial ,\u5728Serial line\u4e2d\uff0c\u8f93\u5165\u60a8\u7684ReSpeaker\u7684COM\u7aef\u53e3\u53f7\uff0c\u5728\u6ce2\u7279\u7387\u9009\u9879\u4e2d\uff0c\u952e\u516557600\u3002     \u70b9\u51fb Open.\u7136\u540e\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u9ed1\u8272\u7684\u5c4f\u5e55\u754c\u9762\uff0c\u70b9\u51fb\u56de\u8f66\u952e\u3002      \u5bf9\u4e8e Linux/Mac    \u901a\u8fc7USB\u5c06ReSpeaker\u8fde\u63a5\u5230PC   \u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u4f1a\u8bdd  \u5728\u7ec8\u7aef\u4e2d\u952e\u5165ls /dev/tty.usb*  \u6211\u4eec\u5e94\u8be5\u770b\u5230\u8bbe\u5907\u5217\u8868\u3002\u5bfb\u627e\u7c7b\u4f3ctty.usbmodemXXXXX\u7684\u4e1c\u897f\uff0c\u5176\u4e2dXXXXX\u901a\u5e38\u662f\u4e00\u4e2a\u968f\u673a\u6807\u8bc6\u7b26\u3002\u8fd9\u662f\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u4e32\u884c\u8bbe\u5907\u3002\u7136\u540e\u4f7f\u7528\u5c4f\u5e55\u5b9e\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4e32\u53e3\uff0c\u5e76\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a57600\uff0c\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u63a7\u5236\u53f0\u7684\u6ce2\u7279\u7387\u4e3a57600   $ ls /dev/tty.usb*\n/dev/tty.usbmodem14221\n$ screen /dev/tty.usbmodem14221 57600", 
            "title": "2. \u8fde\u63a5\u5230\u4e32\u884c\u63a7\u5236\u53f0"
        }, 
        {
            "location": "/Respeaker_Core/#3-wi-fi", 
            "text": "ReSpeaker\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a\u4e2d\u7ee7\u6a21\u5f0f\uff0c\u60a8\u5fc5\u987b\u5c06\u5176\u8fde\u63a5\u5230\u73b0\u6709\u7684\u65e0\u7ebfwifi\u7f51\u7edc\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528Internet\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\u3002  \u5f53\u60a8\u9996\u6b21\u63a5\u901aReSpeaker\u7535\u6e90\u65f6\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201cReSpeakerXXXXXX\u201d\u7684Wi-Fi\u7f51\u7edc\u3002\u8fd9\u91cc\u201cXXXXXX\u201d\u662f\u60a8\u7684ReSpeaker MAC\u5730\u5740\u7684\u6700\u540e6\u4f4d\u3002\u5c06\u60a8\u7684\u8ba1\u7b97\u673a\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\u3002    Note  \u5982\u679c\u201cReSpeakerXXXXXX\u201d\u672a\u51fa\u73b0\uff0c\u4f46\u627e\u5230\u201cLinkIt_Smart_7688_XXXXXX\u201d\u3002\u8bf7\u70b9\u51fb  \u8fd9\u91cc .   \u83b7\u53d6IP\u5730\u5740\u540e\uff0c\u6253\u5f00Web\u6d4f\u89c8\u5668\uff0c\u7136\u540e\u5728\u5730\u5740\u680f\u4e2d\u8f93\u5165192.168.100.1\u3002\u51e0\u79d2\u949f\u540e\uff0c\u4f1a\u51fa\u73b0\u4e0b\u56fe\u6240\u793a\u7f51\u9875\uff0c\u9700\u8981\u60a8\u8f93\u5165\u73b0\u6709Wi-Fi\u7f51\u7edc\u7684ssid\u548c\u5bc6\u7801\u3002   \u9009\u62e9\u8981\u8fde\u63a5\u7684Wi-Fi\u5e76\u8f93\u5165\u5bc6\u7801\u3002\u5f53\u60a8\u6309OK\u6309\u94ae\u65f6\uff0cReSpeaker\u5c06\u52a0\u5165\u6307\u5b9a\u7684\u7f51\u7edc\u3002  \u73b0\u5728\u60a8\u7684ReSpeaker\u80fd\u591f\u8bbf\u95ee\u4e92\u8054\u7f51\u3002  \u5982\u679c\u60a8\u6ca1\u6709\u5f39\u51fawifi\u767b\u9646\u9875\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528putty\u4e32\u53e3\u6a21\u5f0f\u4e0b\u8fde\u63a5Respeaker_Core, \u5e76\u4e14\u5728putty\u4e2d\u4f7f\u7528wictl\u626b\u63cfwifi\u5e76\u8fde\u63a5  root@ReSpeaker:~# wictl\n0, SEEED-MKT\n1, Xiaomi_Youth\n2, ChinaNet-Z5C4\n3, STU-EE\n4, EMBEST_WIFI\n5, SEEED-MKT\n6, nobody\n7, SEEED-MKT\n8, se.VPN\n9, Moovent_HK_2G\n10, LinkIt_Smart_7688_1D917A\n11, SEEED-MKT\n12, SEEED-MKT\n13, zhongrixing\nPlease choose your wifi: 8\nPlease input the wifi password: 88888888\nudhcpc (v1.23.2) started\nSending discover...\nSending discover...\nSending select for 192.168.199.153...\nLease of 192.168.199.153 obtained, lease time 43200\nudhcpc: ifconfig apcli0 192.168.199.153 netmask 255.255.255.0 broadcast 192.168.199.255\nudhcpc: setting default routers: 192.168.199.1\nsuccess\nroot@ReSpeaker:~#  !!!\u6ce8\u610f\n    \u5982\u679c\u60a8\u65e0\u6cd5\u4f7f\u7528\u4e0a\u8ff0\u65b9\u6cd5\u8fde\u63a5Wifi\uff0c\u8bf7\u901a\u8fc7\u8f93\u5165firstboot\u547d\u4ee4\u8fdb\u884c\u51fa\u5382\u8bbe\u7f6e\u3002  \u542f\u7528Wifi\u529f\u80fd\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528SSH\u6a21\u5f0f\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5Respeaker\u3002\u6211\u4eec\u53ef\u4ee5\u4ecehttp://192.168.100.1/#!/overview WAN IP\u83b7\u53d6Respeaker IP\u5730\u5740\u3002\u5bc6\u7801\u662froot\u3002  ssh root@ssh *.*.*.*", 
            "title": "3. \u8bbe\u7f6e Wi-Fi"
        }, 
        {
            "location": "/Respeaker_Core/#4-sd", 
            "text": "\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5d4c\u5165\u5f0f\u8bbe\u5907\u53ef\u4ee5\u4f7f\u7528\u6709\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff08ReSpeaker\u4ec5\u4e3a\u7528\u6237\u63d0\u4f9b\u4e865M\u7684\u677f\u8f7dFlash\u5b58\u50a8\u7a7a\u95f4\uff09\u3002\u4e3a\u5e94\u7528\u6216\u8005\u6570\u636e\u63d0\u4f9b\u66f4\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u6fc0\u53d1ReSpeaker\u7684\u6f5c\u529b\uff0c\u6240\u4ee5\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u4f5c\u4e3aextroot\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u8fd8\u4e0d\u9519\u7684\u9009\u62e9\u54df\u3002  \u901a\u8fc7\u4f7f\u7528extroot\uff0c\u6dfb\u52a0\u5916\u90e8SD\u5361\u5b58\u50a8\u8bbe\u5907\u6765\u5b9e\u73b0\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u5b58\u50a8\u5bb9\u91cf\u7684\u6269\u5c55\u3002\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u5916\u90e8\u5b58\u50a8\u7a7a\u95f4\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\u542f\u52a8\uff0c\u6216\u8005\u4ee5\u539f\u59cb\u6587\u4ef6\u7cfb\u7edf\u7684\u8986\u76d6\u914d\u7f6e\u8fdb\u884c\u542f\u52a8\u3002   \u786e\u4fdd\u60a8\u7684SD\u5361\u5df2\u63d2\u5165ReSpeaker\uff0c\u5e76\u4e14/ dev / mmcblk0p1\u53ef\u4ee5\u901a\u8fc7df -h\u6216ls / dev\u8fdb\u884c\u68c0\u6d4b\u3002   root@ReSpeaker:/# df -h\nFilesystem                Size      Used Available Use% Mounted on\nrootfs                    1.8M    832.0K    960.0K  46% /\n/dev/root                29.0M     29.0M         0 100% /rom\ntmpfs                    61.7M    276.0K     61.5M   0% /tmp\n/dev/mtdblock6            1.8M    832.0K    960.0K  46% /overlay\noverlayfs:/overlay        1.8M    832.0K    960.0K  46% /\ntmpfs                   512.0K         0    512.0K   0% /dev\n/dev/mmcblk0p1            7.4G      2.5M      7.4G   0% /tmp/run/mountd/mmcblk0p1   \u5c06SD\u5361\u683c\u5f0f\u5316\u4e3a\u4e24\u4e2a\u5206\u533a\uff0c\u4e00\u4e2a\u662fFAT32\uff0c\u53e6\u4e00\u4e2a\u662fEXT4\u3002EXT4\u6587\u4ef6\u7cfb\u7edf\u5c06\u4f5c\u4e3a\u4e00\u4e2a\u5916\u63a5\u7a0b\u5e8f\uff0c\u800cFAT32\u5c06\u4f5c\u4e3a\u6b63\u5e38\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u53ef\u4ee5\u5728ReSpeaker\u548cPC\u4e4b\u95f4\u4f20\u8f93\u6587\u4ef6\u3002       umount /dev/mmcblk0p1\n    fdisk /dev/mmcblk0\n     ------------------ fdisk ------------------------\n     Command (m for help):o\n     Created a new DOS disklabel\n     Command (m for help):n\n     Partition type\n    p   primary (0 primary, 0 extended, 4 free)\n    e   extended (container for logical partitions)\n     Select (default p):p\n     Partition number (1-4, default 1):1\n     First sector (2048-15523839, default 2048):\n     Last sector, +sectors or +size{K,M,G,T,P} (2048-15523839, default 15523839): +2G\n     Command (m for help):n\n     Partition type\n    p   primary (1 primary, 0 extended, 3 free)\n    e   extended (container for logical partitions)\n     Select (default p):p\n     Partition number (1-4, default 2):2\n     First sector (4196352-15523839, default 4196352):\n     Last sector, +sectors or +size{K,M,G,T,P} (4196352-15523839, default 15523839):\n     Command (m for help):w\n     The partition table has been altered.\n     Calling i[  292.010000]  mmcblk0: p1 p2\n     octl() to re-read partition table.\n     Syncing disks.\n     ------------------ end ------------------------\n\n    mkfs.fat /dev/mmcblk0p1\n    mkfs.ext4 /dev/mmcblk0p2\n\n    # reload mtk_sd kernel module\n    rmmod mtk_sd\n    insmod mtk_sd   \u51c6\u5907\u60a8\u7684\u5916\u90e8\u5b58\u50a8root overlay\u3002   mount /dev/mmcblk0p2 /mnt ; tar -C /overlay -cvf - . | tar -C /mnt -xf - ; umount /mnt   \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efafstab\u3002\u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u542f\u7528\u6240\u6709\u5206\u533a\u5e76\u5c06'/ mnt / mmcblk0p2'\u5206\u533a\u8bbe\u7f6e\u4e3a'/ overlay'\u5206\u533a\u7684fstab\u6a21\u677f       block detect   /etc/config/fstab;\n    sed -i s/option$ \\t enabled$ \\t \\ 0\\ /option$ \\t enabled$ \\t \\ 1\\ / /etc/config/fstab;\n    sed -i s#/mnt/mmcblk0p2#/overlay# /etc/config/fstab;\n    cat /etc/config/fstab;   \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u5230 overlay.       root@ReSpeaker:/# mount /dev/mmcblk0p2 /overlay/\n    root@ReSpeaker:/# df -h\n  Filesystem                Size      Used Available Use% Mounted on\n  rootfs                    1.8M    832.0K    960.0K  46% /\n  /dev/root                29.0M     29.0M         0 100% /rom\n  tmpfs                    61.7M    276.0K     61.5M   0% /tmp\n  /dev/mtdblock6            5.2G     11.8M      4.9G   0% /overlay\n  overlayfs:/overlay        1.8M    832.0K    960.0K  46% /\n  tmpfs                   512.0K         0    512.0K   0% /dev\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /tmp/run/mountd/mmcblk0p2\n  /dev/mmcblk0p1            2.0G      4.0K      2.0G   0% /tmp/run/mountd/mmcblk0p1\n  /dev/mmcblk0p2            5.2G     11.8M      4.9G   0% /overlay   \u91cd\u542fReSpeaker\u5e76\u91cd\u65b0\u68c0\u67e5\u3002\u5982\u679cSD\u5361\u5982\u4e0a\u81ea\u52a8\u52a0\u8f7d\uff0c\u5c31\u6210\u529f\u4e86\u3002\u66f4\u591a\u5173\u4e8eextroot\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "4. \u4f7f\u7528SD\u5361\u6765\u6269\u5c55\u5b58\u50a8"
        }, 
        {
            "location": "/Respeaker_Core/#5-respeaker", 
            "text": "\u4f7f\u7528SD\u5361\u6269\u5c55\u5b58\u50a8\u540e\uff0c\u6709\u8db3\u591f\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6\u3002  \u5b89\u88c5git      opkg update\n    opkg install git git-http", 
            "title": "5. \u5728ReSpeaker\u4e0a\u5b89\u88c5\u8f6f\u4ef6"
        }, 
        {
            "location": "/Respeaker_Core/#6-python", 
            "text": "git clone https://github.com/respeaker/respeaker_python_library.git\ncd respeaker_python_library\npython setup.py install", 
            "title": "6. \u66f4\u65b0 Python \u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-respeaker-play-music", 
            "text": "\u4f7f\u7528Bing Speech API\uff0cReSpeaker\u53ef\u4ee5\u5b9e\u65f6\u6253\u5f00\u5e76\u8bc6\u522b\u6765\u81ea\u9ea6\u514b\u98ce\u7684\u97f3\u9891\uff0c\u6216\u4ece\u6587\u4ef6\u8bc6\u522b\u97f3\u9891\u3002  \u8981\u4f7f\u7528Bing Speech API\uff0c\u9996\u5148\u5fc5\u987b\u4ece  \u8fd9\u91cc  \u83b7\u53d6Microsoft Cognitive Services\u7684\u5bc6\u94a5\uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230BING_KEY =\u201c'\uff0c\u7136\u540e\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4fdd\u5b58\u5728playmusic.py\u4e2d\u5e76\u8fd0\u884c  //stop mopidy and alexa to avoid USB device occupation\n/etc/init.d/mopidy stop\n/etc/init.d/alexa stop\npython playmusic.py   import logging\nimport time\nimport os\nfrom threading import Thread, Event\nfrom respeaker import Microphone\nfrom respeaker.bing_speech_api import BingSpeechAPI\n\n# use madplay to play mp3 file     \nos.system( madplay )               \n\n# get a key from https://www.microsoft.com/cognitive-services/en-us/speech-api\nBING_KEY =        \n\n\ndef task(quit_event):                                                         \n    mic = Microphone(quit_event=quit_event)                                   \n    bing = BingSpeechAPI(key=BING_KEY)                                        \n\n    while not quit_event.is_set():\n        if mic.wakeup( respeaker ):        \n            print( Wake up )               \n            data = mic.listen()            \n            try:                      \n                text = bing.recognize(data)\n                if text:           \n                    print( Recognized %s  % text)\n                    if  play music  in text:\n                        print( I will play music! )\n                        os.system( madplay Tchaikovsky_Concerto_No.1p.mp3 )\n            except Exception as e:               \n                print(e.message)                 \n\ndef main():                                                              \n    logging.basicConfig(level=logging.DEBUG)                                                           \n    quit_event = Event()        \n    thread = Thread(target=task, args=(quit_event,))\n    thread.start()                          \n    while True:                             \n        try:                                \n            time.sleep(1)                           \n        except KeyboardInterrupt:                   \n            print( Quit )                           \n            quit_event.set()\n            break        \n    thread.join()                \n\nif __name__ ==  __main__ :       \n    main()                    \u5728\"INFO:mic:Start Detecting\" \u51fa\u6765\u4e4b\u540e\uff0c\u5c1d\u8bd5\u8bf4\u201cReSpeaker\u201d\u5524\u9192\u7a0b\u5e8f\uff0c\u5524\u9192\u540e\u8bf4\u201cplaymusic\u201d\u8ba9\u5b83\u64ad\u653e\u97f3\u4e50\u3002\u7136\u540eReSpeaker\u5c06\u4f7f\u7528madplay\u5de5\u5177\u5728\u5f53\u524d\u8def\u5f84\u4e2d\u64ad\u653e\u201cTchaikovsky_Concerto_No.1p.mp3\u201d   \u5982\u679c\u60a8\u770b\u5230\u4ee5\u4e0b\u9519\u8bef\u4ee3\u7801\uff0c\u90a3\u4e48mopidy\u6b63\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u5360\u7528USB\u8bbe\u5907\u3002\u6240\u4ee5\u5c1d\u8bd5\u8fd0\u884c /etc/init.d/mopidy\uff0c\u505c\u6b62mopidy\uff0c\u7136\u540e\u518d\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4\u3002  root@ReSpeaker:~# python playmusic.py\nUsage: madplay [OPTIONS] FILE [...]\nTry `madplay --help  for more information.\nException in thread Thread-2:\nTraceback (most recent call last):\nFile  /usr/lib/python2.7/threading.py , line 810, in __bootstrap_inner", 
            "title": "\u4e0eRespeaker\u7684\u7b2c\u4e00\u6b21\u4e92\u52a8 - ReSpeaker, play music!"
        }, 
        {
            "location": "/Respeaker_Core/#_6", 
            "text": "", 
            "title": "\u5e94\u7528\u5b9e\u4f8b"
        }, 
        {
            "location": "/Respeaker_Core/#_7", 
            "text": "ReSpeaker\u63a7\u5236\u6a21\u5757\u662f\u57fa\u4e8eATmega32u4\u82af\u7247\uff0c\u8be5\u82af\u7247\u5b8c\u5168\u517c\u5bb9Arduino\u9a71\u52a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ReSpeaker\u4f5c\u4e3a\u5f3a\u5927\u7684Arduino\u5b66\u4e60\u677f\uff0c\u5e76\u505a\u4e86\u8bb8\u591a\u201cArduino\u201d\u5f00\u53d1\u677f\u80fd\u505a\u7684\u4e8b\u60c5\u3002  \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Arduino IDE\u5bf9\u5176\u8fdb\u884c\u7f16\u7a0b\uff0c\u6765\u5b9e\u73b0\u521b\u610fDIY\u94a2\u7434\uff0c\u8be5\u94a2\u7434\u642d\u914d8\u4e2a\u6a31\u6843\u897f\u7ea2\u67ff\u8fde\u63a5\u5230ReSpeaker\u76848\u4e2a\u89e6\u6478\u4f20\u611f\u5668\u3002      \u5728respeaker\u4e0a\u8f93\u5165 git clone  https://github.com/respeaker/piano.git       \u4e0b\u8f7d\u5e93      \u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e2d\u4e0b\u8f7d ReSpeaker Arduino Library      \u4e0a\u4f20piano.ino\u5230ReSpeaker\u7684Arduino Leonardo\uff08ATmega32U4\uff09      \u5728ReSpeaker\u7684\u4e32\u884c\u63a7\u5236\u53f0\u4e0a\u8fd0\u884cpython piano.py", 
            "title": "\u6c34\u679c\u94a2\u7434"
        }, 
        {
            "location": "/Respeaker_Core/#_8", 
            "text": "\u5929\u6c14\u4e91\u662f\u5f88\u68d2\u7684\u4e00\u4e2aReSpeaker\u9879\u76ee\u3002\u8fd9\u4e2a\u5f88\u9177\u7684\u521b\u610f\u5c06ReSpeaker\u53d8\u6210\u4e86\u4e00\u4e2a\u5929\u6c14\u4e91\uff0c\u5b83\u80fd\u591f\u663e\u793a\u51fa\u751f\u52a8\u7684\u5149\u7ebf\u548c\u58f0\u97f3\u3002  \u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0cOpenwrt\u8d1f\u8d23\u4ece\u4e92\u8054\u7f51\u83b7\u53d6\u5b9e\u65f6\u5929\u6c14\u4fe1\u606f\uff0c\u8fdb\u884c\u8bed\u97f3\u4ea4\u4e92\u548c\u97f3\u9891\u8f93\u51fa\uff0c\u800cArduino\u8d1f\u8d23\u63a7\u5236\u5f69\u8272RGB LED\u3002   \u5728respeaker\u4e0a\u8f93\u5165 git clone  https://github.com/jerryyip/WeatherCloud.git , \u4e0b\u8f7d\u9879\u76ee\u5e93\u6587\u4ef6\u3002  \u70b9\u51fb\u4e0b\u8f7d  ReSpeaker Arduino Library  \u5230\u60a8\u7684\u7535\u8111\u4e0a\uff0c\u5e76\u5b89\u88c5\u3002  \u901a\u8fc7Arduino IDE\u5c06  pixels_pattern.ino  \u4e0a\u4f20\u5230respeaker\u3002   \u4ece\u8fd9\u91cc\u83b7\u53d6OpenWeatherMap appid \uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230main.py\u4e2d\u7684appID =\u201c\u201d\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u60a8\u7684\u57ce\u5e02\u6dfb\u52a0\u5230city =\u201c\u201d    \u5728\u4f7f\u7528SPI\u4e4b\u524d\u8bf7\u7ec8\u6b62mopidy service\u5728OpenWrt\u4e2d\u7684\u8fdb\u7a0b\uff0crespeaker\u5728\u63a7\u5236\u53f0\u4e0a\u952e\u5165\n/etc/init.d/mopidy stop   \u8fd0\u884cpython main.py \u7136\u540e\u5bf9\u7740\u5b83\u558a \"ReSpeaker, what is the weather like?\"  \u6709\u5173\u5982\u4f55\u5236\u4f5c\u5929\u6c14\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "\u5929\u6c14\u4e91"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-mic-arrayrespeaker", 
            "text": "", 
            "title": "ReSpeaker Mic Array\uff08ReSpeaker \u9ea6\u514b\u98ce\u9635\u5217\uff09"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-mic-array", 
            "text": "ReSpeaker\u9ea6\u514b\u98ce\u9635\u5217\u53ef\u4ee5\u5806\u53e0\uff08\u8fde\u63a5\uff09\u5230ReSpeaker Core\u7684\u9876\u90e8\uff0c\u4ee5\u663e\u7740\u63d0\u9ad8\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u5b83\u662f\u57fa\u4e8eXMOS\u7684XVSM-2000\u667a\u80fd\u9ea6\u514b\u98ce\u5f00\u53d1\u7684\u3002\u8be5\u677f\u96c6\u6210\u4e867\u4e2aPDM\u9ea6\u514b\u98ce\uff0c\u4ee5\u5e2e\u52a9\u5c06ReSpeaker\u7684\u58f0\u5b66DSP\u6027\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u6c34\u5e73", 
            "title": "ReSpeaker Mic Array"
        }, 
        {
            "location": "/Respeaker_Core/#_9", 
            "text": "\u60a8\u53ef\u9875\u9762\u4ee5\u70b9\u51fb\u4e0b\u5217\u6807\u9898\u6765\u8df3\u8f6c\u5230\u5bf9\u5e94", 
            "title": "\u5173\u4e8e\u8f6f\u4ef6"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-arduino", 
            "text": "ReSpeaker Arudino\u5e93\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a   \u652f\u6301\u7535\u5bb9\u5f0f\u89e6\u6478\u611f\u5e94  \u5b9e\u73b0\u4e86WS2812 RGB LED\u9a71\u52a8  \u6784\u5efa\u4e86\u4eceArduino (ATmega32U4)\u5230\u57fa\u4e8eLinux\u7684OpenWrt (MT7688)\u4e4b\u95f4\u7684USB\u5230\u4e32\u53e3\u548cUSB\u5230SPI\u901a\u9053\u3002", 
            "title": "ReSpeaker Arduino \u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#respeaker-python", 
            "text": "ReSpeaker\u662f\u4e00\u4e2a\u652f\u6301\u8bed\u97f3\u4ea4\u4e92\u7684\u5f00\u653e\u9879\u76ee\u3002ReSpeaker python\u5e93\u662f\u4e00\u4e2a\u5f00\u6e90\u7684python\u5e93\uff0c\u7528\u4e8e\u63d0\u4f9b\u8bed\u97f3\u4ea4\u4e92\u7684\u57fa\u672c\u529f\u80fd\u3002\n\u5b83\u4f7f\u7528PocketSphinx\u8fdb\u884c\u5173\u952e\u5b57\u67e5\u627e\uff0c\u5e76\u4f7f\u7528webrtcvad\u8fdb\u884c\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b\u3002", 
            "title": "ReSpeaker Python \u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#github", 
            "text": "", 
            "title": "\u66f4\u591a\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc\u67e5\u770b\u6211\u4eec\u7684github\u8d44\u6599\u5e93"
        }, 
        {
            "location": "/Respeaker_Core/#faq", 
            "text": "", 
            "title": "FAQ"
        }, 
        {
            "location": "/Respeaker_Core/#q1", 
            "text": "\u6253\u5f00\u4e32\u884c\u63a7\u5236\u53f0\u6216ssh\u4f1a\u8bdd\u5e76\u8fd0\u884c firstboot.  \u66f4\u591a\u7ec6\u8282\u70b9\u51fb\u8fd9\u91cc .", 
            "title": "Q1: \u5982\u4f55\u6062\u590d\u51fa\u5382\u8bbe\u7f6e?"
        }, 
        {
            "location": "/Respeaker_Core/#q2", 
            "text": "\u5347\u7ea7\u5931\u8d25\u540e\uff0c\u5f53\u91cd\u65b0\u542f\u52a8\u8fdb\u5165openwrt\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u7ec8\u7aef\uff0cssh\u6216\u4e32\u884c\u63a7\u5236\u53f0\u8bbf\u95ee\u7cfb\u7edf\u3002\u6211\u4eec\u53ef\u4ee5\u6309\u7167   Rescue instruction  \u6307\u4ee4\u8fdb\u884c\u6062\u590d\u3002", 
            "title": "Q2: \u5982\u679c\u5347\u7ea7\u5931\u8d25\u4e86\uff0c\u600e\u4e48\u62a2\u6551?"
        }, 
        {
            "location": "/Respeaker_Core/#q3-respeakerwi-fi", 
            "text": "\u8bf7\u5148\u5c1d\u8bd5  \u6062\u590d\u51fa\u5382\u8bbe\u7f6e  \u3002  ReSpeaker\u4e0d\u652f\u6301Wi-Fi\u9891\u905312\u3002\u786e\u4fdd\u60a8\u7684\u8def\u7531\u5668\u6ca1\u6709\u4f7f\u7528\u8be5\u901a\u9053\u3002.", 
            "title": "Q3: ReSpeaker\u627e\u4e0d\u5230\u6211\u7684Wi-Fi"
        }, 
        {
            "location": "/Respeaker_Core/#q4-wifi", 
            "text": "\u6211\u4eec\u5efa\u8bae\u60a8\u901a\u8fc7 WEB-UI \u914d\u7f6eWi-Fi \uff0c\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\uff0c\u8bf7\u5728\u63a7\u5236\u53f0\u4e0a\u5c1d\u8bd5\u547d\u4ee4\u884c\u5de5\u5177 wictl  \u3002", 
            "title": "Q4: \u5982\u4f55\u8fdb\u884cWifi\u914d\u7f6e"
        }, 
        {
            "location": "/Respeaker_Core/#q5-bing-speech-api", 
            "text": "\u5982\u679c\u60a8\u4e0d\u9700\u8981\u66f4\u6539\u5524\u9192\u5b57\uff0c\u53ea\u9700\u5c06text = bing.recognize\uff08data\uff09\u66f4\u6539\u4e3atext = bing.recognize\uff08data\uff0clanguage =\u201czh-CN\u201d\uff09\u5c31\u53ef\u4ee5\u4e86\u3002  \u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc .", 
            "title": "Q5: \u5982\u4f55\u6539\u53d8BING Speech api \u7684\u8bc6\u522b\u8bed\u8a00"
        }, 
        {
            "location": "/Respeaker_Core/#q6-sdfsck", 
            "text": "\u5982\u679cSD\u5361\u4e0a\u7684\u6587\u4ef6\u6b63\u5e38\uff0c\u8bf7\u5ffd\u7565\u5b83\u3002\u5426\u5219\uff0c\u5c1d\u8bd5\u4f7f\u7528 sd\u5361\u683c\u5f0f\u5316\u7a0b\u5e8f\u8fdb\u884c\u683c\u5f0f\u5316 .", 
            "title": "Q6: \u6536\u5230SD\u5361\u8b66\u544a\u6d88\u606f\u201c\u5377\u672a\u6b63\u786e\u5378\u8f7d\u3002\u67d0\u4e9b\u6570\u636e\u53ef\u80fd\u5df2\u635f\u574f\u3002\u8bf7\u8fd0\u884cfsck\u201d"
        }, 
        {
            "location": "/Respeaker_Core/#q7-bad-flash-from-arduino", 
            "text": "\u6309\u7167\u4e0b\u9762\u4ee3\u7801\uff0c\u5728openwrt\u4e2d\u91cd\u65b0\u70e7\u5199 bootloade\u3002   /etc/init.d/mopidy stop  # stop mopidy if it s running, mopidy-hallo plugin will use SPI\n/etc/init.d/alexa stop      # stop alexa if it s running\nmt7688_pinmux set ephy gpio\ncd /etc/arduino\navrdude -c linuxgpio -p m32u4 -e -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xCB:m  -U flash:w:Caterina-ReSpeaker.hex -u -U lock:w:0xEF:m", 
            "title": "Q7: \u9519\u8bef\u63d0\u793a \u201cBad flash from Arduino\u201d"
        }, 
        {
            "location": "/Respeaker_Core/#q8-webui", 
            "text": "\u91cd\u7f6e juci \u5bc6\u7801   orangectl passwd root 12345678  //replace 12345678 with the password you want to set", 
            "title": "Q8: \u5fd8\u8bb0\u4e86WebUI\u7684\u5bc6\u7801"
        }, 
        {
            "location": "/Respeaker_Core/#q9-speach-to-textstt", 
            "text": "\u6309\u7167 \u6307\u5357 \u5b89\u88c5speech_recognition\u5e93", 
            "title": "Q9: \u5982\u4f55\u652f\u6301\u8c37\u6b4c\u8bed\u97f3\u6216\u5176\u4ed6Speach to Text\uff08STT\uff09\u5f15\u64ce?"
        }, 
        {
            "location": "/Respeaker_Core/#q10-alexa-ioerror-errno-9998-invalid-number-of-channels", 
            "text": "\u8fd8\u6709\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6216alexa\u5b9e\u4f8b\u4f7f\u7528\u97f3\u9891\u8f93\u5165\u8bbe\u5907\u3002\u8fd0\u884c/etc/init.d/alexa stop\u548c/etc/init.d/mopidy stop \u505c\u6b62\u5b83\u4eec\u3002\u8981\u7981\u7528mopidy\u542f\u52a8\uff0c\u8bf7\u8fd0\u884c/etc/init.d/mopidy disable\u3002", 
            "title": "Q10: \u8fd0\u884cAlexa \u9519\u8bef\uff0c\u63d0\u793a\"IOError: [Errno -9998] Invalid number of channels\""
        }, 
        {
            "location": "/Respeaker_Core/#q11-python-playmusicpy", 
            "text": "\u5e94\u8be5\u662fmopidy\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4e14\u6b63\u5728\u4f7f\u7528USB\u8bbe\u5907\u3002\u5c1d\u8bd5\u8fd0\u884c/etc/init.d/mopidy stop, \u505c\u6b62mopidy\u5e76\u518d\u6b21\u8fd0\u884c\u60a8\u7684\u547d\u4ee4\u3002", 
            "title": "Q11: \u65e0\u6cd5\u8fd0\u884cpython playmusic.py"
        }, 
        {
            "location": "/Respeaker_Core/#q12-rpc", 
            "text": "\u60a8\u9700\u8981\u91cd\u65b0\u5237\u56fa\u4ef6\uff0c\u70b9\u51fb\u67e5\u770b  \u6307\u5357", 
            "title": "Q12: \u6ca1\u6709RPC\u8fde\u63a5"
        }, 
        {
            "location": "/Respeaker_Core/#q13-sftp-ftp", 
            "text": "\u6211\u4eec\u6ca1\u6709FTP\uff0c\u53ea\u6709SFTP\u3002", 
            "title": "Q13: SFTP &amp; FTP"
        }, 
        {
            "location": "/Respeaker_Core/#q14", 
            "text": "\u5c1d\u8bd5\u66f4\u65b0  arduino code \u3002", 
            "title": "Q14: \u4e32\u53e3\u63a7\u5236\u53f0\u88ab\u9501\u5b9a"
        }, 
        {
            "location": "/Respeaker_Core/#q15ap", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u5728vi / etc / config / wireless \u4e2d\u4fee\u6539\u5982\u4e0b 'ssid' flag of the 'ap' interface to '' \u3002\u4e5f\u5c31\u662f\u5c06'ap'\u6539\u4e3a''\u3002\u7136\u540e\u5c31\u4f1a\u9690\u85cfap\u3002", 
            "title": "Q15:\u5982\u4f55\u7981\u7528'ap'\u6a21\u5f0f"
        }, 
        {
            "location": "/Respeaker_Core/#q16-i2c", 
            "text": "\u6211\u4eec\u9700\u8981\u68c0\u67e5\u7f16\u89e3\u7801\u5668\u9a71\u52a8\u7a0b\u5e8f\u517c\u5bb9\u540d\u4ee5\u53ca\u7f16\u89e3\u7801\u5668i2c\u5730\u5740 \u7136\u540e\u91cd\u5efaimage\u56fa\u4ef6\u3002", 
            "title": "Q16: I2C\u58f0\u5361\u95ee\u9898"
        }, 
        {
            "location": "/Respeaker_Core/#q17-respeaker", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0keyword.txt\u4e2d\u7684\u9608\u503c\u6765\u51cf\u5c11\u8bef\u8bc6\u522b\u7387\uff0c\u4f46\u4e5f\u4f1a\u964d\u4f4e\u654f\u611f\u5ea6\u3002  \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u60a8\u7684\u58f0\u97f3\u4e0e\u5f53\u524d\u7684\u58f0\u5b66\u6a21\u5757\u8fdb\u884c\u5339\u914d\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u53c2\u8003\u8fd9\u91cc  http://cmusphinx.sourceforge.net/wiki/tutorialadapt \u3002  \u8fd9\u79cd\u65b9\u6cd5\u5c06\u6709\u6548\u63d0\u9ad8\u4e2a\u4eba\u5173\u952e\u5b57\u8bc6\u522b\u7387\uff0c\u4f46\u53ef\u80fd\u8ba9\u5176\u4ed6\u4eba\u4e0d\u88ab\u8bc6\u522b\u3002", 
            "title": "Q17: \u5373\u4f7f\u6ca1\u6709\u58f0\u97f3\uff0cRespeaker\u4e5f\u7ecf\u5e38\u88ab\u5524\u9192"
        }, 
        {
            "location": "/Respeaker_Core/#q18-respeakergpio", 
            "text": "\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u91cc\u7684\u4ee3\u7801  https://github.com/respeaker/respeaker_python_library/blob/master/respeaker/gpio.py  \u4ee5\u53ca\u7528\u8fd9\u91cc\u7684\u4f8b\u7a0b\u6765\u901a\u8fc7GPIO\u6a21\u62dfSPI  https://github.com/respeaker/respeaker_python_library/blob/master/respeaker/spi.py", 
            "title": "Q18: \u5982\u4f55\u63a7\u5236Respeaker\u7684GPIO\u5f15\u811a\uff1f"
        }, 
        {
            "location": "/Respeaker_Core/#q19", 
            "text": "\u5728respeaker\u7684 /usr/lib/python2.7/site-packages/respeaker-0.6.0-py2.7.egg/respeaker/pocketsphinx-data  \u76ee\u5f55\u4e0b\u627e\u5230\u5e76\u6253\u5f00 keywords.txt  respeaker /1e-30/\nalexa /1e-30/\nplay music /1e-40/  respeaker \u662f\u5173\u952e\u8bcd, 1e-30 \u662f\u5176\u9608\u503c\u3002\u4e3a\u4e86\u63d0\u9ad8\u654f\u611f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u964d\u4f4e\u9608\u503c\uff0c\u4f8b\u59821e-20\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u63d0\u9ad8\u7075\u654f\u5ea6\u800c\u964d\u4f4e\u9608\u503c\u540c\u65f6\u4f1a\u589e\u52a0\u9519\u8bef\u63a5\u53d7\u7387\u3002    \u5982\u679c\u8981\u6dfb\u52a0\u65b0\u7684\u5173\u952e\u5b57\uff0c\u5e94\u8be5\u9996\u5148\u5c06\u5173\u952e\u5b57\u6dfb\u52a0\u5230  dictionary.txt  \u3002dictionary.txt \u91cc\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a  ```\nrespeaker   R IY S P IY K ER\nalexa   AH L EH K S AH\nplay    P L EY\nmusic   M Y UW Z IH K\n```\n\n\u6bcf\u884c\u7684\u7b2c\u4e00\u90e8\u5206\u662f\u5173\u952e\u8bcd\u7684\u540d\u5b57 (respeaker, alexa or music), \u7b2c\u4e8c\u90e8\u5206\u662f\u5b83\u7684\u97f3\u7d20\u3002\u4f60\u53ef\u4ee5\u5728 [\u8fd9\u91cc](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt) \u7684\u5b57\u5178\u4e2d\u627e\u5230\u5355\u8bcd\u3002    \u7136\u540e\u66f4\u6539\u4ee3\u7801\uff1a .  if mic.wakeup( respeaker ):    \u5c0f\u7ed3:\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u6309\u7167\u4e0b\u9762\u76843\u6b65\u3002\u6bd4\u5982\u6dfb\u52a0good morning    -  1\u3001\u5728[\u5b98\u65b9\u5b57\u5178](https://github.com/respeaker/pocketsphinx-data/blob/master/dictionary.txt)\u4e2d\u67e5\u627e\u5e76\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684\u97f3\u7d20\u3002\n-  2\u3001\u5728keyword.txt\u4e2d\u7ed9 good morning\u8bbe\u7f6e\u4e00\u4e2a\u9608\u503c\n-  3\u3001\u5728\u60a8\u7684python\u4ee3\u7801\u4e2d\u6dfb\u52a0\u8c03\u7528if mic.wakeup( good morning ):", 
            "title": "Q19: \u5982\u4f55\u6539\u53d8\u5524\u9192\u8bcd\uff1f"
        }, 
        {
            "location": "/Respeaker_Core/#q20", 
            "text": "\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u65e0\u6cd5\u901a\u8fc7\u7f51\u7edc\u66f4\u65b0\u60a8\u7684ReSpeaker\u6216\u65e0\u6cd5\u8bbf\u95eehttp://192.168.100.1/home.html \uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc  \u3002\u8981\u5c06\u7535\u8111\u4e0a\u6700\u65b0\u7684\u56fa\u4ef6\u4e0b\u8f7d\u5230SD\u5361\u4e0a\uff0c\u5e76\u5c06SD\u5361\u63d2\u5165ReSpeaker\u3002  \u8fde\u63a5\u5230respeaker\u7684  \u4e32\u884c\u63a7\u5236\u53f0  \uff0c\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\u884c\u6765\u66f4\u65b0\u56fa\u4ef6\uff1a  mount /dev/mmcblk0p1 /mnt\ncd /mnt\nsysupgrade -n -F ramips-openwrt-latest-LinkIt7688-squashfs-sysupgrade.bin \nReSpeaker\u5b89\u88c5\u56fa\u4ef6\u548c\u91cd\u542f\u5927\u7ea6\u9700\u89813\u5206\u949f\uff0c\u66f4\u65b0\u65f6**\u8bf7\u52ff\u5173\u95ed** ReSpeaker\u3002", 
            "title": "Q20: \u901a\u8fc7\u51fa\u5382\u56fa\u4ef6\u6062\u590d\u7cfb\u7edf"
        }, 
        {
            "location": "/Respeaker_Core/#_10", 
            "text": "[Eagle\u539f\u7406\u56fe]   ReSpeaker Core v1.0 SCH  [Eagle PCB\u56fe]   ReSpeaker Core v1.0 BRD  [PDF \u539f\u7406\u56fe]   ReSpeaker Core v1.0 Schematic(pdf)  [PDF PCB\u5e95\u677f\u56fe]   ReSpeaker Core v1.0 PCB bottom(pdf)  [PDF PCB\u9876\u677f\u56fe]   ReSpeaker Core v1.0 PCB top(pdf)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/", 
            "text": "ReSpeaker 2-Mics Pi HAT\u662f\u4e13\u4e3aAI\u548c\u8bed\u97f3\u5e94\u7528\u8bbe\u8ba1\u7684Raspberry Pi\u53cc\u9ea6\u514b\u98ce\u6269\u5c55\u677f\u3002 \u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u96c6\u6210Amazon Amazona\u8bed\u97f3\u670d\u52a1\uff0cGoogle\u52a9\u624b\u7b49\u7684\u529f\u80fd\u66f4\u5f3a\u5927\uff0c\u66f4\u7075\u6d3b\u7684\u8bed\u97f3\u4ea7\u54c1\u3002\n\n\n\u8be5\u677f\u662f\u57fa\u4e8eWM8960\u5f00\u53d1\u7684\u4f4e\u529f\u8017\u7acb\u4f53\u58f0\u7f16\u89e3\u7801\u5668\u3002 \u7535\u8def\u677f\u4e24\u4fa7\u6709\u4e24\u4e2a\u9ea6\u514b\u98ce\u91c7\u96c6\u58f0\u97f3\uff0c\u8fd8\u63d0\u4f9b3\u4e2aAPA102 RGB LED\uff0c1\u4e2a\u7528\u6237\u6309\u94ae\u548c2\u4e2a\u677f\u8f7dGrove\u63a5\u53e3\uff0c\u7528\u4e8e\u6269\u5c55\u5e94\u7528\u7a0b\u5e8f\u3002 \u6b64\u5916\uff0c3.5mm\u97f3\u9891\u63d2\u5b54\u6216JST 2.0\u626c\u58f0\u5668\u8f93\u51fa\u5747\u53ef\u7528\u4e8e\u97f3\u9891\u8f93\u51fa\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u5f81\n\n\n\n\nRaspberry Pi\u517c\u5bb9\uff08\u652f\u6301Raspberry Pi Zero\u548cZero W\uff0cRaspberry Pi B +\uff0cRaspberry Pi 2 B\u548cRaspberry Pi 3 B\uff09\n\n\n2\u4e2a\u9ea6\u514b\u98ce\n\n\n2\u4e2aGrove\u63a5\u53e3\n\n\n1\u4e2a\u81ea\u5b9a\u4e49\u6309\u94ae\n\n\n3.5mm\u97f3\u9891\u63a5\u53e3\n\n\nJST2.0\u97f3\u9891\u8f93\u51fa\u63a5\u53e3\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u58f0\u97f3\u4ea4\u4e92\u5e94\u7528\n\n\nAI\u52a9\u624b\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\u6309\u94ae\uff1a\u8fde\u63a5\u5230GPIO17\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u6309\u94ae\n\n\nMIC_L\uff06MIC_R\uff1a\u5de6\u8fb9\u53f3\u8fb9\u5404\u6709\u4e00\u4e2a\u9ea6\u514b\u98ce\n\n\nRGB LED\uff1a3\u4e2aAPA102 RGB LED\uff0c\u8fde\u63a5\u5230\u6811\u8393\u6d3e\u7684SPI\u63a5\u53e3\n\n\nWM8960\uff1a\u4f4e\u529f\u8017\u7acb\u4f53\u58f0\u7f16\u89e3\u7801\u5668\n\n\nRaspberry Pi 40\u9488\u5934\uff1a\u652f\u6301Raspberry Pi Zero\uff0cRaspberry Pi 1 B +\uff0cRaspberry Pi 2 B\u548cRaspberry Pi 3 B\n\n\nPOWER\uff1a\u7528\u4e8e\u4e3aReSpeaker 2-Mics Pi HAT\u4f9b\u7535\u7684Micro USB\u7aef\u53e3\uff0c\u8bf7\u5728\u4f7f\u7528\u626c\u58f0\u5668\u65f6\u4e3a\u7535\u8def\u677f\u4f9b\u7535\uff0c\u4ee5\u63d0\u4f9b\u8db3\u591f\u7684\u7535\u6d41\u3002\n\n\nI2C\uff1aGrove I2C\u7aef\u53e3\uff0c\u8fde\u63a5\u5230I2C-1\n\n\nGPIO12\uff1aGrove\u6570\u5b57\u7aef\u53e3\uff0c\u8fde\u63a5\u5230GPIO12\u548cGPIO13\n\n\nJST 2.0 SPEAKER OUT\uff1a\u7528\u4e8e\u8fde\u63a5\u626c\u58f0\u5668\uff0cJST 2.0\u8fde\u63a5\u5668\n\n\n3.5mm\u97f3\u9891\u63d2\u5b54\uff1a\u7528\u4e8e\u8fde\u63a5\u5e263.5mm\u97f3\u9891\u63d2\u5934\u7684\u8033\u673a\u6216\u626c\u58f0\u5668\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u628aReSpeaker 2-Mics Pi HAT\u63d2\u5165\u5230Raspberry Pi\n\n\n\u628a ReSpeaker 2-Mics Pi HAT \u63d2\u5165\u5230 Raspberry Pi, \u786e\u4fdd\u63d2\u5165Raspberry Pi\u7684\u65f6\u5019\u9488\u811a\u5bf9\u9f50\u3002\n\n\n\n\nNote\n\n\n\u4e0d\u8981\u5728\u4e0a\u7535\u7684\u65f6\u5019\uff0c\u70ed\u63d2\u62d4ReSpeaker 2-Mics Pi HAT.\n\n\n\n\n\n\n\n\n\n\n\u5b89\u88c5\u9a71\u52a8\n\n\n\u56e0\u4e3a\u5f53\u524d\u7684Pi\u5185\u6838\u76ee\u524d\u4e0d\u652f\u6301wm8960\u7f16\u89e3\u7801\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u6784\u5efa\u3002\n\n\n1. \u786e\u4fdd\u60a8\u6b63\u5728\u60a8\u7684Pi\u4e0a\u8fd0\u884c\n\u6700\u65b0\u7684Raspbian\u64cd\u4f5c\u7cfb\u7edf\uff08debian 9\uff09\n\u3002 \n\uff08\u66f4\u65b0\u4e8e2017.09.15\uff09\n\n\n2. \u6839\u636e\u4ee5\u4e0b\u6d41\u7a0b\u5b89\u88c5\u9a71\u52a8\uff1a\n\n\nsudo apt-get update\nsudo apt-get upgrade\ngit clone https://github.com/respeaker/seeed-voicecard.git\ncd seeed-voicecard\nsudo ./install.sh 2mic\nreboot\n\n\n\n\n3. \u68c0\u67e5\u58f0\u5361\u540d\u79f0\u662f\u5426\u4e0e\u6e90\u4ee3\u7801seeed-voicecard\u76f8\u5339\u914d.\n\n\npi@raspberrypi:~/seeed-voicecard $ aplay -l\n**** List of PLAYBACK Hardware Devices ****\ncard 0: ALSA [bcm2835 ALSA], device 0: bcm2835 ALSA [bcm2835 ALSA]\n  Subdevices: 8/8\n  Subdevice #0: subdevice #0\n  Subdevice #1: subdevice #1\n  Subdevice #2: subdevice #2\n  Subdevice #3: subdevice #3\n  Subdevice #4: subdevice #4\n  Subdevice #5: subdevice #5\n  Subdevice #6: subdevice #6\n  Subdevice #7: subdevice #7\ncard 0: ALSA [bcm2835 ALSA], device 1: bcm2835 ALSA [bcm2835 IEC958/HDMI]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 1: seeed2micvoicec [seeed-2mic-voicecard], device 0: bcm2835-i2s-wm8960-hifi wm8960-hifi-0 []\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\npi@raspberrypi:~/seeed-voicecard $ arecord -l\n**** List of CAPTURE Hardware Devices ****\ncard 1: seeed2micvoicec [seeed-2mic-voicecard], device 0: bcm2835-i2s-wm8960-hifi wm8960-hifi-0 []\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\npi@raspberrypi:~/seeed-voicecard $\n\n\n\n\n4. \u53ef\u4ee5\u7528\narecord\n\u5f55\u5236\uff0c\u7136\u540e\u7528\naplay\n\u64ad\u653e\uff1a(\u4e0d\u8981\u5fd8\u8bb0\u63d2\u8033\u673a\u6216\u8005\u5587\u53ed):\n\n\narecord -f cd -Dhw:1 | aplay -Dhw:1\n\n\n\n\n\u7528alsamixer\u914d\u7f6e\u58f0\u97f3\u8bbe\u7f6e\u548c\u8c03\u6574\u97f3\u91cf\n\n\nalsamixer\n \u662f\u7528\u4e8e\u914d\u7f6e\u58f0\u97f3\u8bbe\u7f6e\u548c\u8c03\u6574\u97f3\u91cf\uff0c\u9ad8\u7ea7Linux\u58f0\u97f3\u4f53\u7cfb\u7ed3\u6784\uff08ALSA\uff09\u7684\u56fe\u5f62\u6df7\u97f3\u5668\u7a0b\u5e8f\u3002\n\n\npi@raspberrypi:~ $ alsamixer\n\n\n\n\n\n\n\n\nNote\n\n\n\u9996\u5148\u8bf7\u7528F6\u9009\u62e9seeed-2mic\u7684\u58f0\u5361\u8bbe\u5907\u3002\n\n\n\n\n\u5de6\u548c\u53f3\u7bad\u5934\u952e\u7528\u4e8e\u9009\u62e9\u901a\u9053\u6216\u8bbe\u5907\uff0c\u201c\u5411\u4e0a\u548c\u5411\u4e0b\u7bad\u5934\u201d\u63a7\u5236\u5f53\u524d\u6240\u9009\u8bbe\u5907\u7684\u97f3\u91cf\u3002 \u9000\u51fa\u7a0b\u5e8f\u4f7f\u7528ALT + Q\u6216\u6309Esc\u952e\u3002 \nMore information\n\n\n\u8ba9\u6211\u4eec\u5f00\u59cb\u6765\u73a9 \nGoogle Assistant\n\n\n\n\nWarning\n\n\n\u56e0\u4e3a\u6211\u4eec\u5728\u4e2d\u56fd\uff0c\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528Google\u7684\u670d\u52a1\u3002\u5fc5\u987b\u642d\u5efa\u53ef\u4ee5\u8bbf\u95eegoogle\u7684\u8def\u7531\u5668\uff0c\u7136\u540e\u8fde\u63a5\u5230\u8def\u7531\u3002\n\n\n\n\n\u5728\u5f00\u59cb\u4f7f\u7528\nGoogle Assistant\n\u4e4b\u524d\uff0c\u9996\u5148\u60a8\u5e94\u8be5\u5c06Google Assistant Library\u6574\u5408\u5230\u60a8\u7684raspberry pi\u7cfb\u7edf\u4e2d\u3002 \u4ee5\u4e0b\u662f\nGoogle\u5b98\u65b9\u6307\u5bfc\n\u7684\u94fe\u63a5\u3002\n\n\n\u4ee5\u4e0b\u6307\u5357\u8fd8\u5c06\u5411\u60a8\u4ecb\u7ecd\u5982\u4f55\u5f00\u59cb\u4f7f\u7528Google\u52a9\u624b\u3002\n\n\n1. \u914d\u7f6e\u5f00\u53d1\u4eba\u5458\u9879\u76ee\uff0c\u5e76\u83b7\u53d6JSON\u6587\u4ef6\n\n\n\u8bf7\u6839\u636e\n\u6307\u5357\n \u7b2c\u4e00\u6b65\u5230\u7b2c\u56db\u6b65\u5728Google Cloud Platform\u4e0a\u914d\u7f6e\u9879\u76ee\uff0c\u5e76\u521b\u5efa\u4e00\u4e2aOAuth Client ID JSON\u6587\u4ef6\u3002 \u4e0d\u8981\u5fd8\u8bb0\u5c06JSON\u6587\u4ef6\u590d\u5236\u5230\u60a8\u7684Raspberry Pi\u3002\n\n\n2. \u4f7f\u7528Python\u865a\u62df\u73af\u5883\uff0c\u9694\u79bbSDK\u4e0e\u7cfb\u7edfPython\u5305\u5173\u7cfb\u3002\n\n\nsudo apt-get update\nsudo apt-get install python3-dev python3-venv # Use python3.4-venv if the package cannot be found.\npython3 -m venv env\nenv/bin/python -m pip install --upgrade pip setuptools\nsource env/bin/activate\n\n\n\n\n3. \u5b89\u88c5google-assistant-library\n\n\nGoogle Assistant SDK\u8f6f\u4ef6\u5305\uff0c\u5305\u542b\u5728\u8bbe\u5907\u4e0a\u8fd0\u884cGoogle Assistant\u6240\u9700\u7684\u6240\u6709\u4ee3\u7801\uff0c\u5305\u62ec\u5e93\u548c\u793a\u4f8b\u4ee3\u7801\u3002 \u4f7f\u7528pip\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684Python\u5305\uff1a\n\n\n(env) $ python -m pip install --upgrade google-assistant-library\n\n\n\n\n4. \u6388\u6743Google Assistant SDK\n\n\n\u6388\u6743Google Assistant SDK\uff0c\u4f7fGoogle Assistant\u5bf9\u7ed9\u5b9a\u7684Google\u5e10\u6237\u8fdb\u884c\u67e5\u8be2\u3002 \u628a\u6b65\u9aa41\u4e2d\u7684JSON\u6587\u4ef6\u590d\u5236\u5230\u6811\u8393\u6d3e/home/pi\u4e0b\u3002\n\n\npi@raspberrypi:~ $ google-oauthlib-tool --client-secrets /home/pi/client_secret_client-id.json --scope https://www.googleapis.com/auth/assistant-sdk-prototype --save --headless\n\n\n\n\n/home/pi/client_secret_client-id.json\n \u662f\u4f60\u7684JSON\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u786e\u4fddJson\u6587\u4ef6\u7684\u540d\u5b57\u5339\u914d\u3002 \u8fd0\u884c\u547d\u4ee4\u540e\uff0c\u5e94\u8be5\u663e\u793a\u5982\u4e0b\u6240\u793a\u3002 \u590d\u5236URL\u5e76\u5c06\u5176\u7c98\u8d34\u5230\u6d4f\u89c8\u5668\u4e2d\uff08\u8fd9\u53ef\u4ee5\u5728\u60a8\u7684\u6811\u8393\u6d3e\u6216\u4efb\u4f55\u5176\u4ed6\u7535\u8111\u4e0a\u5b8c\u6210\uff09\u3002 \u540c\u610f\u540e\uff0c\u60a8\u7684\u6d4f\u89c8\u5668\u5c06\u663e\u793a\u4ee3\u7801\uff0c\u4f8b\u5982\u201c4 / XXXX\u201d\u3002 \u590d\u5236\u5e76\u5c06\u6b64\u4ee3\u7801\u7c98\u8d34\u5230\u7ec8\u7aef\u4e2d\u3002\n\n\nPlease go to this URL: https://...\nEnter the authorization code:\n\n\n\n\n\u8fd9\u4e2a\u65f6\u5019\u5e94\u8be5\u663e\u793a: OAuth credentials initialized. \u5982\u679c\u663e\u793a: InvalidGrantError then an invalid code was entered. \u8bf7\u91cd\u8bd5, \u786e\u4fdd\u62f7\u8d1d\u6574\u4e2acode.\n\n\n5. \u5b89\u88c5 \npulseaudio\n \u5e76\u4e14\u8ba9\u4ed6\u5728\u540e\u53f0\u8fd0\u884c\n\n\npi@raspberrypi:~ $ sudo apt install pulseaudio\npi@raspberrypi:~ $ pulseaudio \n\n[1] 1244\npi@raspberrypi:~ $ W: [pulseaudio] server-lookup.c: Unable to contact D-Bus: org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11\nW: [pulseaudio] main.c: Unable to contact D-Bus: org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11\nE: [pulseaudio] bluez4-util.c: org.bluez.Manager.GetProperties() failed: org.freedesktop.DBus.Error.UnknownMethod: Method \nGetProperties\n with signature \n on interface \norg.bluez.Manager\n doesn\nt exist\n\n\n\n\n\n\nNote\n\n\n\u8bf7\u5ffd\u7565pulseaudio\u9519\u8bef\u4fe1\u606f\u3002\n\n\n\n\n6. \u5f00\u59cb\u4f7f\u7528Google Assistant\u793a\u4f8b\n\n\npi@raspberrypi:~ $ alsamixer    // To adjust the volume\npi@raspberrypi:~ $ source env/bin/activate\n(env) pi@raspberrypi:~ $ env/bin/google-assistant-demo\n\n\n\n\n7. \u5524\u9192Google Assistant\n\n\n\u5148\u8bf4 \nOk Google\n \u6216\u8005 \nHey Google\n, \u7136\u540e\u8bf4\u60a8\u7684\u8be2\u95ee. \u8bed\u97f3\u52a9\u624b\u5c31\u4f1a\u54cd\u5e94\u60a8\u7684\u95ee\u9898\u3002\u5982\u679c\u8bed\u97f3\u52a9\u624b\u6ca1\u6709\u54cd\u5e94\uff0c \u8bf7\u6309\u7167 \n\u7591\u96be\u89e3\u7b54\u8bf4\u660e\n.\n\n\n\n\n8. \u5e38\u89c1\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\n\n\n\u5982\u679c\u60a8\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u53c2\u8003 \n\u5e38\u89c1\u7591\u96be\u89e3\u7b54\u8bf4\u660e\n \u3002\n\n\n\u5982\u4f55\u4f7f\u7528\u677f\u8f7dAPA102 LED\n\n\n\u6bcf\u4e2a\u677f\u8f7dAPA102 LED\u90fd\u6709\u4e00\u4e2a\u989d\u5916\u7684\u9a71\u52a8\u82af\u7247\uff0c\u9a71\u52a8\u82af\u7247\u8bbe\u7f6eLED\u7684\u989c\u8272\uff0c\u7136\u540e\u4fdd\u6301\u8be5\u989c\u8272\uff0c\u76f4\u5230\u63a5\u6536\u5230\u65b0\u7684\u547d\u4ee4\u3002\n\n\n\n\n1. \u6253\u5f00SPI:\n\n\n- \u8f93\u5165\uff1a `sudo raspi-config`;\n- \u9009\u62e9 \nInterfacing Options\n;\n- \u9009\u62e9 \nSPI\n;\n- \u9009\u62e9 \u201cYes\u201d  \n- \u9009\u62e9 \u201cOK\u201d\n- \u9009\u62e9 \u201cFinish\u201d\n\n\n\n\n\n2. \u63a7\u5236APA102 LED\u7684\u793a\u4f8b\n\n\ncd ~/\ngit clone https://github.com/respeaker/mic_hat.git\nsudo pip install spidev\ncd mic_hat\npython pixels.py\n\n\n\n\n\u5982\u4f55\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u6309\u94ae\n\n\n\u677f\u5b50\u4e0a\u9762\u6709\u4e2a\u7528\u6237\u81ea\u5b9a\u4e49\u6309\u94ae\uff0c\u8fde\u63a5\u5230GPIO17. \u6211\u4eec\u53ef\u4ee5\u8c03\u7528python\u548cRPi.GPIO\u6765\u8bfb\u53d6\u72b6\u6001\u3002\n\n\nsudo pip install rpi.gpio    // install RPi.GPIO library\nnano button.py               // copy the following code in button.py\n\n\n\n\nimport RPi.GPIO as GPIO\nimport time\n\nBUTTON = 17\n\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(BUTTON, GPIO.IN)\n\nwhile True:\n    state = GPIO.input(BUTTON)\n    if state:\n        print(\noff\n)\n    else:\n        print(\non\n)\n    time.sleep(1)\n\n\n\n\nSave the code as button.py, then run it. It should display \"on\" when you press the button:\n\n\npi@raspberrypi:~ $ python button.py\noff\noff\non\non\noff\n\n\n\n\n\u7528\u6309\u94ae\u6765\u89e6\u53d1Google Assisant\n\n\n\u60a8\u53ef\u4ee5\u7528\u6309\u952e\u6765\u4ee3\u66ff\"ok google\"\u6765\u6fc0\u6d3bGoogle Assisant.\n\n\n\n\n\u66f4\u65b0  \npushtotalk.py\n\n\n\n\ncd /usr/local/lib/python2.7/dist-packages/googlesamples/assistant/grpc\nsudo nano pushtotalk.py\n\n\n\n\n\u8bf7\u5230\u6587\u4ef6\u7b2c301\u884c, \u7136\u540e\u6839\u636e\u4e0b\u9762\u7684code\u6765\u66f4\u65b0\u3002  \n\n\n    \nwith\n \nSampleAssistant\n(\nconversation_stream\n,\n\n                         \ngrpc_channel\n,\n \ngrpc_deadline\n)\n \nas\n \nassistant\n:\n\n        \n# If file arguments are supplied:\n\n        \n# exit after the first turn of the conversation.\n\n        \nif\n \ninput_audio_file\n \nor\n \noutput_audio_file\n:\n\n            \nassistant\n.\nconverse\n()\n\n            \nreturn\n\n\n        \n# If no file arguments supplied:\n\n        \n# keep recording voice requests using the microphone\n\n        \n# and playing back assistant response using the speaker.\n\n        \n# When the once flag is set, don\nt wait for a trigger. Otherwise, wait.\n\n        \nwait_for_user_trigger\n \n=\n \nnot\n \nonce\n\n        \nimport\n \nRPi.GPIO\n \nas\n \nGPIO\n\n        \nGPIO\n.\nsetmode\n(\nGPIO\n.\nBCM\n)\n\n        \nGPIO\n.\nsetup\n(\n17\n,\nGPIO\n.\nIN\n)\n\n        \nwhile\n \nTrue\n:\n\n            \nif\n \nwait_for_user_trigger\n:\n\n                \nstate\n \n=\n \nGPIO\n.\ninput\n(\n17\n)\n\n                \nlogging\n.\ninfo\n(\nPress the button to send a new request...\n)\n\n                \nif\n \nstate\n:\n\n                    \ncontinue\n\n                \nelse\n:\n\n                    \npass\n\n               \n# click.pause(info=\nPress Enter to send a new request...\n)\n\n            \ncontinue_conversation\n \n=\n \nassistant\n.\nconverse\n()\n\n            \n# wait for user trigger if there is no follow-up turn in\n\n            \n# the conversation.\n\n            \nwait_for_user_trigger\n \n=\n \nnot\n \ncontinue_conversation\n\n\n            \n# If we only want one conversation, break.\n\n            \nif\n \nonce\n \nand\n \n(\nnot\n \ncontinue_conversation\n):\n\n                \nbreak\n\n\n\n\nif\n \n__name__\n \n==\n \n__main__\n:\n\n    \nmain\n()\n\n\n\n\n\n\n\n\u8fd0\u884c\u4e0b\u9762\u7a0b\u5e8f\u6765\u8fdb\u884c\u6d4b\u8bd5:\n\n\n\n\n$ googlesamples-assistant-pushtotalk\n\n\n\n\n\n\n\u7a0b\u5e8f\u8fd0\u884c\u7684\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a:\n\n\n\n\n\n\n\u6811\u8393\u6d3e\u7cfb\u7edf\n\n\n\u7531\u4e8eRaspbian\u64cd\u4f5c\u7cfb\u7edf\u66f4\u65b0\u4e3aDebian 9\uff0c\u6211\u4eec\u5c06\u4e0d\u518d\u63d0\u4f9b\u6211\u4eec\u7684Raspbian\u7cfb\u7edf\u3002 \u70b9\u51fb\n\u8fd9\u91cc\n\u83b7\u5f97\u6700\u65b0\u7684Raspbian\u64cd\u4f5c\u7cfb\u7edf\u3002\n\n\n\n\n\u5982\u4f55\u5b89\u88c5\u6811\u8393\u6d3e\u7cfb\u7edf\u6307\u5357\n\n\n\n\nFAQ(\u7591\u95ee\u89e3\u7b54)\n\n\n1.\n\n\nQ:\u4e25\u683c\u6309\u7167\u672c wiki \u64cd\u4f5c\uff0c\u9a71\u52a8\u8fd8\u662f\u5b89\u88c5\u5931\u8d25\uff0c\u600e\u4e48\u529e\uff1f\n\n\nA:\u5982\u679c\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u5b89\u88c5\u9a71\u52a8\u5747\u5931\u8d25\uff0c\u8bf7\u70b9\u51fb\u4e0b\u9762\u56fa\u4ef6\u5b89\u88c5\n\n\n\u6211\u662f\u56fa\u4ef6\n\n\n\u4e0b\u8f7d\u5bc6\u7801\uff1acn78\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle]\n \nRespeaker_2_Mics_Pi_HAT_SCH\n\n\n[Eagle]\n \nRespeaker_2_Mics_Pi_HAT_PCB\n\n\n[PDF]\n \nRespeaker_2_Mics_Pi_HAT_SCH\n\n\n[PDF]\n \nRespeaker_2_Mics_Pi_HAT_PCB", 
            "title": "Respeaker 2-Mics Pi HAT"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#_1", 
            "text": "Raspberry Pi\u517c\u5bb9\uff08\u652f\u6301Raspberry Pi Zero\u548cZero W\uff0cRaspberry Pi B +\uff0cRaspberry Pi 2 B\u548cRaspberry Pi 3 B\uff09  2\u4e2a\u9ea6\u514b\u98ce  2\u4e2aGrove\u63a5\u53e3  1\u4e2a\u81ea\u5b9a\u4e49\u6309\u94ae  3.5mm\u97f3\u9891\u63a5\u53e3  JST2.0\u97f3\u9891\u8f93\u51fa\u63a5\u53e3", 
            "title": "\u4ea7\u54c1\u7279\u5f81"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#_2", 
            "text": "\u58f0\u97f3\u4ea4\u4e92\u5e94\u7528  AI\u52a9\u624b", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#_3", 
            "text": "\u6309\u94ae\uff1a\u8fde\u63a5\u5230GPIO17\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u6309\u94ae  MIC_L\uff06MIC_R\uff1a\u5de6\u8fb9\u53f3\u8fb9\u5404\u6709\u4e00\u4e2a\u9ea6\u514b\u98ce  RGB LED\uff1a3\u4e2aAPA102 RGB LED\uff0c\u8fde\u63a5\u5230\u6811\u8393\u6d3e\u7684SPI\u63a5\u53e3  WM8960\uff1a\u4f4e\u529f\u8017\u7acb\u4f53\u58f0\u7f16\u89e3\u7801\u5668  Raspberry Pi 40\u9488\u5934\uff1a\u652f\u6301Raspberry Pi Zero\uff0cRaspberry Pi 1 B +\uff0cRaspberry Pi 2 B\u548cRaspberry Pi 3 B  POWER\uff1a\u7528\u4e8e\u4e3aReSpeaker 2-Mics Pi HAT\u4f9b\u7535\u7684Micro USB\u7aef\u53e3\uff0c\u8bf7\u5728\u4f7f\u7528\u626c\u58f0\u5668\u65f6\u4e3a\u7535\u8def\u677f\u4f9b\u7535\uff0c\u4ee5\u63d0\u4f9b\u8db3\u591f\u7684\u7535\u6d41\u3002  I2C\uff1aGrove I2C\u7aef\u53e3\uff0c\u8fde\u63a5\u5230I2C-1  GPIO12\uff1aGrove\u6570\u5b57\u7aef\u53e3\uff0c\u8fde\u63a5\u5230GPIO12\u548cGPIO13  JST 2.0 SPEAKER OUT\uff1a\u7528\u4e8e\u8fde\u63a5\u626c\u58f0\u5668\uff0cJST 2.0\u8fde\u63a5\u5668  3.5mm\u97f3\u9891\u63d2\u5b54\uff1a\u7528\u4e8e\u8fde\u63a5\u5e263.5mm\u97f3\u9891\u63d2\u5934\u7684\u8033\u673a\u6216\u626c\u58f0\u5668", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#respeaker-2-mics-pi-hatraspberry-pi", 
            "text": "\u628a ReSpeaker 2-Mics Pi HAT \u63d2\u5165\u5230 Raspberry Pi, \u786e\u4fdd\u63d2\u5165Raspberry Pi\u7684\u65f6\u5019\u9488\u811a\u5bf9\u9f50\u3002   Note  \u4e0d\u8981\u5728\u4e0a\u7535\u7684\u65f6\u5019\uff0c\u70ed\u63d2\u62d4ReSpeaker 2-Mics Pi HAT.", 
            "title": "\u628aReSpeaker 2-Mics Pi HAT\u63d2\u5165\u5230Raspberry Pi"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#_5", 
            "text": "\u56e0\u4e3a\u5f53\u524d\u7684Pi\u5185\u6838\u76ee\u524d\u4e0d\u652f\u6301wm8960\u7f16\u89e3\u7801\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u6784\u5efa\u3002", 
            "title": "\u5b89\u88c5\u9a71\u52a8"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#1-piraspbiandebian-9-20170915", 
            "text": "", 
            "title": "1. \u786e\u4fdd\u60a8\u6b63\u5728\u60a8\u7684Pi\u4e0a\u8fd0\u884c\u6700\u65b0\u7684Raspbian\u64cd\u4f5c\u7cfb\u7edf\uff08debian 9\uff09\u3002 \uff08\u66f4\u65b0\u4e8e2017.09.15\uff09"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#2", 
            "text": "sudo apt-get update\nsudo apt-get upgrade\ngit clone https://github.com/respeaker/seeed-voicecard.git\ncd seeed-voicecard\nsudo ./install.sh 2mic\nreboot", 
            "title": "2. \u6839\u636e\u4ee5\u4e0b\u6d41\u7a0b\u5b89\u88c5\u9a71\u52a8\uff1a"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#3-seeed-voicecard", 
            "text": "pi@raspberrypi:~/seeed-voicecard $ aplay -l\n**** List of PLAYBACK Hardware Devices ****\ncard 0: ALSA [bcm2835 ALSA], device 0: bcm2835 ALSA [bcm2835 ALSA]\n  Subdevices: 8/8\n  Subdevice #0: subdevice #0\n  Subdevice #1: subdevice #1\n  Subdevice #2: subdevice #2\n  Subdevice #3: subdevice #3\n  Subdevice #4: subdevice #4\n  Subdevice #5: subdevice #5\n  Subdevice #6: subdevice #6\n  Subdevice #7: subdevice #7\ncard 0: ALSA [bcm2835 ALSA], device 1: bcm2835 ALSA [bcm2835 IEC958/HDMI]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 1: seeed2micvoicec [seeed-2mic-voicecard], device 0: bcm2835-i2s-wm8960-hifi wm8960-hifi-0 []\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\npi@raspberrypi:~/seeed-voicecard $ arecord -l\n**** List of CAPTURE Hardware Devices ****\ncard 1: seeed2micvoicec [seeed-2mic-voicecard], device 0: bcm2835-i2s-wm8960-hifi wm8960-hifi-0 []\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\npi@raspberrypi:~/seeed-voicecard $", 
            "title": "3. \u68c0\u67e5\u58f0\u5361\u540d\u79f0\u662f\u5426\u4e0e\u6e90\u4ee3\u7801seeed-voicecard\u76f8\u5339\u914d."
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#4-arecordaplay", 
            "text": "arecord -f cd -Dhw:1 | aplay -Dhw:1", 
            "title": "4. \u53ef\u4ee5\u7528arecord\u5f55\u5236\uff0c\u7136\u540e\u7528aplay\u64ad\u653e\uff1a(\u4e0d\u8981\u5fd8\u8bb0\u63d2\u8033\u673a\u6216\u8005\u5587\u53ed):"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#alsamixer", 
            "text": "alsamixer  \u662f\u7528\u4e8e\u914d\u7f6e\u58f0\u97f3\u8bbe\u7f6e\u548c\u8c03\u6574\u97f3\u91cf\uff0c\u9ad8\u7ea7Linux\u58f0\u97f3\u4f53\u7cfb\u7ed3\u6784\uff08ALSA\uff09\u7684\u56fe\u5f62\u6df7\u97f3\u5668\u7a0b\u5e8f\u3002  pi@raspberrypi:~ $ alsamixer    Note  \u9996\u5148\u8bf7\u7528F6\u9009\u62e9seeed-2mic\u7684\u58f0\u5361\u8bbe\u5907\u3002   \u5de6\u548c\u53f3\u7bad\u5934\u952e\u7528\u4e8e\u9009\u62e9\u901a\u9053\u6216\u8bbe\u5907\uff0c\u201c\u5411\u4e0a\u548c\u5411\u4e0b\u7bad\u5934\u201d\u63a7\u5236\u5f53\u524d\u6240\u9009\u8bbe\u5907\u7684\u97f3\u91cf\u3002 \u9000\u51fa\u7a0b\u5e8f\u4f7f\u7528ALT + Q\u6216\u6309Esc\u952e\u3002  More information", 
            "title": "\u7528alsamixer\u914d\u7f6e\u58f0\u97f3\u8bbe\u7f6e\u548c\u8c03\u6574\u97f3\u91cf"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#google-assistant", 
            "text": "Warning  \u56e0\u4e3a\u6211\u4eec\u5728\u4e2d\u56fd\uff0c\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528Google\u7684\u670d\u52a1\u3002\u5fc5\u987b\u642d\u5efa\u53ef\u4ee5\u8bbf\u95eegoogle\u7684\u8def\u7531\u5668\uff0c\u7136\u540e\u8fde\u63a5\u5230\u8def\u7531\u3002   \u5728\u5f00\u59cb\u4f7f\u7528 Google Assistant \u4e4b\u524d\uff0c\u9996\u5148\u60a8\u5e94\u8be5\u5c06Google Assistant Library\u6574\u5408\u5230\u60a8\u7684raspberry pi\u7cfb\u7edf\u4e2d\u3002 \u4ee5\u4e0b\u662f Google\u5b98\u65b9\u6307\u5bfc \u7684\u94fe\u63a5\u3002  \u4ee5\u4e0b\u6307\u5357\u8fd8\u5c06\u5411\u60a8\u4ecb\u7ecd\u5982\u4f55\u5f00\u59cb\u4f7f\u7528Google\u52a9\u624b\u3002", 
            "title": "\u8ba9\u6211\u4eec\u5f00\u59cb\u6765\u73a9 Google Assistant"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#1-json", 
            "text": "\u8bf7\u6839\u636e \u6307\u5357  \u7b2c\u4e00\u6b65\u5230\u7b2c\u56db\u6b65\u5728Google Cloud Platform\u4e0a\u914d\u7f6e\u9879\u76ee\uff0c\u5e76\u521b\u5efa\u4e00\u4e2aOAuth Client ID JSON\u6587\u4ef6\u3002 \u4e0d\u8981\u5fd8\u8bb0\u5c06JSON\u6587\u4ef6\u590d\u5236\u5230\u60a8\u7684Raspberry Pi\u3002", 
            "title": "1. \u914d\u7f6e\u5f00\u53d1\u4eba\u5458\u9879\u76ee\uff0c\u5e76\u83b7\u53d6JSON\u6587\u4ef6"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#2-pythonsdkpython", 
            "text": "sudo apt-get update\nsudo apt-get install python3-dev python3-venv # Use python3.4-venv if the package cannot be found.\npython3 -m venv env\nenv/bin/python -m pip install --upgrade pip setuptools\nsource env/bin/activate", 
            "title": "2. \u4f7f\u7528Python\u865a\u62df\u73af\u5883\uff0c\u9694\u79bbSDK\u4e0e\u7cfb\u7edfPython\u5305\u5173\u7cfb\u3002"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#3-google-assistant-library", 
            "text": "Google Assistant SDK\u8f6f\u4ef6\u5305\uff0c\u5305\u542b\u5728\u8bbe\u5907\u4e0a\u8fd0\u884cGoogle Assistant\u6240\u9700\u7684\u6240\u6709\u4ee3\u7801\uff0c\u5305\u62ec\u5e93\u548c\u793a\u4f8b\u4ee3\u7801\u3002 \u4f7f\u7528pip\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684Python\u5305\uff1a  (env) $ python -m pip install --upgrade google-assistant-library", 
            "title": "3. \u5b89\u88c5google-assistant-library"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#4-google-assistant-sdk", 
            "text": "\u6388\u6743Google Assistant SDK\uff0c\u4f7fGoogle Assistant\u5bf9\u7ed9\u5b9a\u7684Google\u5e10\u6237\u8fdb\u884c\u67e5\u8be2\u3002 \u628a\u6b65\u9aa41\u4e2d\u7684JSON\u6587\u4ef6\u590d\u5236\u5230\u6811\u8393\u6d3e/home/pi\u4e0b\u3002  pi@raspberrypi:~ $ google-oauthlib-tool --client-secrets /home/pi/client_secret_client-id.json --scope https://www.googleapis.com/auth/assistant-sdk-prototype --save --headless  /home/pi/client_secret_client-id.json  \u662f\u4f60\u7684JSON\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u786e\u4fddJson\u6587\u4ef6\u7684\u540d\u5b57\u5339\u914d\u3002 \u8fd0\u884c\u547d\u4ee4\u540e\uff0c\u5e94\u8be5\u663e\u793a\u5982\u4e0b\u6240\u793a\u3002 \u590d\u5236URL\u5e76\u5c06\u5176\u7c98\u8d34\u5230\u6d4f\u89c8\u5668\u4e2d\uff08\u8fd9\u53ef\u4ee5\u5728\u60a8\u7684\u6811\u8393\u6d3e\u6216\u4efb\u4f55\u5176\u4ed6\u7535\u8111\u4e0a\u5b8c\u6210\uff09\u3002 \u540c\u610f\u540e\uff0c\u60a8\u7684\u6d4f\u89c8\u5668\u5c06\u663e\u793a\u4ee3\u7801\uff0c\u4f8b\u5982\u201c4 / XXXX\u201d\u3002 \u590d\u5236\u5e76\u5c06\u6b64\u4ee3\u7801\u7c98\u8d34\u5230\u7ec8\u7aef\u4e2d\u3002  Please go to this URL: https://...\nEnter the authorization code:  \u8fd9\u4e2a\u65f6\u5019\u5e94\u8be5\u663e\u793a: OAuth credentials initialized. \u5982\u679c\u663e\u793a: InvalidGrantError then an invalid code was entered. \u8bf7\u91cd\u8bd5, \u786e\u4fdd\u62f7\u8d1d\u6574\u4e2acode.", 
            "title": "4. \u6388\u6743Google Assistant SDK"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#5-pulseaudio", 
            "text": "pi@raspberrypi:~ $ sudo apt install pulseaudio\npi@raspberrypi:~ $ pulseaudio  \n[1] 1244\npi@raspberrypi:~ $ W: [pulseaudio] server-lookup.c: Unable to contact D-Bus: org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11\nW: [pulseaudio] main.c: Unable to contact D-Bus: org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11\nE: [pulseaudio] bluez4-util.c: org.bluez.Manager.GetProperties() failed: org.freedesktop.DBus.Error.UnknownMethod: Method  GetProperties  with signature   on interface  org.bluez.Manager  doesn t exist   Note  \u8bf7\u5ffd\u7565pulseaudio\u9519\u8bef\u4fe1\u606f\u3002", 
            "title": "5. \u5b89\u88c5 pulseaudio \u5e76\u4e14\u8ba9\u4ed6\u5728\u540e\u53f0\u8fd0\u884c"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#6-google-assistant", 
            "text": "pi@raspberrypi:~ $ alsamixer    // To adjust the volume\npi@raspberrypi:~ $ source env/bin/activate\n(env) pi@raspberrypi:~ $ env/bin/google-assistant-demo", 
            "title": "6. \u5f00\u59cb\u4f7f\u7528Google Assistant\u793a\u4f8b"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#7-google-assistant", 
            "text": "\u5148\u8bf4  Ok Google  \u6216\u8005  Hey Google , \u7136\u540e\u8bf4\u60a8\u7684\u8be2\u95ee. \u8bed\u97f3\u52a9\u624b\u5c31\u4f1a\u54cd\u5e94\u60a8\u7684\u95ee\u9898\u3002\u5982\u679c\u8bed\u97f3\u52a9\u624b\u6ca1\u6709\u54cd\u5e94\uff0c \u8bf7\u6309\u7167  \u7591\u96be\u89e3\u7b54\u8bf4\u660e .", 
            "title": "7. \u5524\u9192Google Assistant"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#8", 
            "text": "\u5982\u679c\u60a8\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u53c2\u8003  \u5e38\u89c1\u7591\u96be\u89e3\u7b54\u8bf4\u660e  \u3002", 
            "title": "8. \u5e38\u89c1\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#apa102-led", 
            "text": "\u6bcf\u4e2a\u677f\u8f7dAPA102 LED\u90fd\u6709\u4e00\u4e2a\u989d\u5916\u7684\u9a71\u52a8\u82af\u7247\uff0c\u9a71\u52a8\u82af\u7247\u8bbe\u7f6eLED\u7684\u989c\u8272\uff0c\u7136\u540e\u4fdd\u6301\u8be5\u989c\u8272\uff0c\u76f4\u5230\u63a5\u6536\u5230\u65b0\u7684\u547d\u4ee4\u3002", 
            "title": "\u5982\u4f55\u4f7f\u7528\u677f\u8f7dAPA102 LED"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#1-spi", 
            "text": "- \u8f93\u5165\uff1a `sudo raspi-config`;\n- \u9009\u62e9  Interfacing Options ;\n- \u9009\u62e9  SPI ;\n- \u9009\u62e9 \u201cYes\u201d  \n- \u9009\u62e9 \u201cOK\u201d\n- \u9009\u62e9 \u201cFinish\u201d", 
            "title": "1. \u6253\u5f00SPI:"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#2-apa102-led", 
            "text": "cd ~/\ngit clone https://github.com/respeaker/mic_hat.git\nsudo pip install spidev\ncd mic_hat\npython pixels.py", 
            "title": "2. \u63a7\u5236APA102 LED\u7684\u793a\u4f8b"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#_6", 
            "text": "\u677f\u5b50\u4e0a\u9762\u6709\u4e2a\u7528\u6237\u81ea\u5b9a\u4e49\u6309\u94ae\uff0c\u8fde\u63a5\u5230GPIO17. \u6211\u4eec\u53ef\u4ee5\u8c03\u7528python\u548cRPi.GPIO\u6765\u8bfb\u53d6\u72b6\u6001\u3002  sudo pip install rpi.gpio    // install RPi.GPIO library\nnano button.py               // copy the following code in button.py  import RPi.GPIO as GPIO\nimport time\n\nBUTTON = 17\n\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(BUTTON, GPIO.IN)\n\nwhile True:\n    state = GPIO.input(BUTTON)\n    if state:\n        print( off )\n    else:\n        print( on )\n    time.sleep(1)  Save the code as button.py, then run it. It should display \"on\" when you press the button:  pi@raspberrypi:~ $ python button.py\noff\noff\non\non\noff", 
            "title": "\u5982\u4f55\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u6309\u94ae"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#google-assisant", 
            "text": "\u60a8\u53ef\u4ee5\u7528\u6309\u952e\u6765\u4ee3\u66ff\"ok google\"\u6765\u6fc0\u6d3bGoogle Assisant.   \u66f4\u65b0   pushtotalk.py   cd /usr/local/lib/python2.7/dist-packages/googlesamples/assistant/grpc\nsudo nano pushtotalk.py  \u8bf7\u5230\u6587\u4ef6\u7b2c301\u884c, \u7136\u540e\u6839\u636e\u4e0b\u9762\u7684code\u6765\u66f4\u65b0\u3002         with   SampleAssistant ( conversation_stream , \n                          grpc_channel ,   grpc_deadline )   as   assistant : \n         # If file arguments are supplied: \n         # exit after the first turn of the conversation. \n         if   input_audio_file   or   output_audio_file : \n             assistant . converse () \n             return \n\n         # If no file arguments supplied: \n         # keep recording voice requests using the microphone \n         # and playing back assistant response using the speaker. \n         # When the once flag is set, don t wait for a trigger. Otherwise, wait. \n         wait_for_user_trigger   =   not   once \n         import   RPi.GPIO   as   GPIO \n         GPIO . setmode ( GPIO . BCM ) \n         GPIO . setup ( 17 , GPIO . IN ) \n         while   True : \n             if   wait_for_user_trigger : \n                 state   =   GPIO . input ( 17 ) \n                 logging . info ( Press the button to send a new request... ) \n                 if   state : \n                     continue \n                 else : \n                     pass \n                # click.pause(info= Press Enter to send a new request... ) \n             continue_conversation   =   assistant . converse () \n             # wait for user trigger if there is no follow-up turn in \n             # the conversation. \n             wait_for_user_trigger   =   not   continue_conversation \n\n             # If we only want one conversation, break. \n             if   once   and   ( not   continue_conversation ): \n                 break  if   __name__   ==   __main__ : \n     main ()    \u8fd0\u884c\u4e0b\u9762\u7a0b\u5e8f\u6765\u8fdb\u884c\u6d4b\u8bd5:   $ googlesamples-assistant-pushtotalk   \u7a0b\u5e8f\u8fd0\u884c\u7684\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a:", 
            "title": "\u7528\u6309\u94ae\u6765\u89e6\u53d1Google Assisant"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#_7", 
            "text": "\u7531\u4e8eRaspbian\u64cd\u4f5c\u7cfb\u7edf\u66f4\u65b0\u4e3aDebian 9\uff0c\u6211\u4eec\u5c06\u4e0d\u518d\u63d0\u4f9b\u6211\u4eec\u7684Raspbian\u7cfb\u7edf\u3002 \u70b9\u51fb \u8fd9\u91cc \u83b7\u5f97\u6700\u65b0\u7684Raspbian\u64cd\u4f5c\u7cfb\u7edf\u3002   \u5982\u4f55\u5b89\u88c5\u6811\u8393\u6d3e\u7cfb\u7edf\u6307\u5357", 
            "title": "\u6811\u8393\u6d3e\u7cfb\u7edf"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#faq", 
            "text": "1.  Q:\u4e25\u683c\u6309\u7167\u672c wiki \u64cd\u4f5c\uff0c\u9a71\u52a8\u8fd8\u662f\u5b89\u88c5\u5931\u8d25\uff0c\u600e\u4e48\u529e\uff1f  A:\u5982\u679c\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u5b89\u88c5\u9a71\u52a8\u5747\u5931\u8d25\uff0c\u8bf7\u70b9\u51fb\u4e0b\u9762\u56fa\u4ef6\u5b89\u88c5  \u6211\u662f\u56fa\u4ef6  \u4e0b\u8f7d\u5bc6\u7801\uff1acn78", 
            "title": "FAQ(\u7591\u95ee\u89e3\u7b54)"
        }, 
        {
            "location": "/Respeaker_2-Mics_Pi_HAT/#_8", 
            "text": "[Eagle]   Respeaker_2_Mics_Pi_HAT_SCH  [Eagle]   Respeaker_2_Mics_Pi_HAT_PCB  [PDF]   Respeaker_2_Mics_Pi_HAT_SCH  [PDF]   Respeaker_2_Mics_Pi_HAT_PCB", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/", 
            "text": "\u57fa\u4e8eRaspberry Pi\u7684ReSpeaker 4-Mic\u9635\u5217\u662f\u4e00\u6b3e\u9002\u7528\u4e8eAI\u548c\u8bed\u97f3\u5e94\u7528\u7684Raspberry Pi\u7684\u56db\u901a\u9053\u9ea6\u514b\u98ce\u6269\u5c55\u677f\u3002 \u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u501f\u52a9\u5b83\u6784\u5efa\u4e00\u4e2a\u96c6\u6210Amazon Alexa\u8bed\u97f3\u670d\u52a1\uff0cGoogle\u52a9\u624b\u7b49\uff0c\u529f\u80fd\u66f4\u5f3a\u5927\uff0c\u66f4\u7075\u6d3b\u7684\u8bed\u97f3\u4ea7\u54c1\u3002\n\n\n\u533a\u522b\u4e8e \nReSpeaker 2-Mics Pi HAT\n, \u8be5\u677f\u662f\u57fa\u4e8eAC108\u5f00\u53d1\u7684\uff0c\u8fd9\u662f\u4e00\u6b3e\u9ad8\u5ea6\u96c6\u6210\u56db\u901a\u9053ADC\uff0c\u5177\u6709\u7528\u4e8e\u9ad8\u6e05\u6670\u5ea6\u8bed\u97f3\u6355\u83b7\uff0cI2S / TDM\u8f93\u51fa\uff0c\u62fe\u53d63\u7c73\u534a\u5f84\u7684\u58f0\u97f3\u7684\u8bed\u97f3\u8bbe\u5907\u3002 \u6b64\u5916\uff0c\u8fd9\u6b3e4-Mics\u7248\u672c\u63d0\u4f9b\u4e86\u8d85\u9177LED\u73af\uff0c\u5176\u4e2d\u5305\u542b12\u4e2aAPA102\u53ef\u7f16\u7a0bLED\u3002 \u5c31\u50cfAmazon Echo\u6216 Google assist\u4e00\u6837\uff0c \u4f7f\u75284\u4e2a\u9ea6\u514b\u98ce\u548cLED\u73af\uff0cRaspberry Pi\u5177\u6709VAD\uff08\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b\uff09\uff0cDOA\uff08\u5230\u8fbe\u65b9\u5411\uff09\uff0cKWS\uff08\u5173\u952e\u5b57\u641c\u7d22\uff09\uff0c\u5e76\u901a\u8fc7LED\u73af\u663e\u793a\u65b9\u5411\u706f\u529f\u80fd\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u5f81\n\n\n\n\nRaspberry Pi\u517c\u5bb9\uff08\u652f\u6301Raspberry Pi Zero\u548cZero W\uff0cRaspberry Pi B +\uff0cRaspberry Pi 2 B\u548cRaspberry Pi 3 B\uff09\n\n\n4\u4e2a\u9ea6\u514b\u98ce\n\n\n3\u7c73\u534a\u5f84\u7684\u8bed\u97f3\u6355\u6349\n\n\n2\u4e2aGrove\u63a5\u53e3\n\n\n12\u4e2aAPA102\u677f\u8f7d\u6307\u793a\u706f\n\n\n\u8f6f\u4ef6\u7b97\u6cd5\uff1aVAD\uff08\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b\uff09\uff0cDOA\uff08\u5230\u8fbe\u65b9\u5411\uff09\u548cKWS\uff08\u5173\u952e\u8bcd\u641c\u7d22\uff09\n\n\n\n\n\n\nNote\nReSpeaker 4-Mic Array\u6ca1\u6709\u4efb\u4f55\u97f3\u9891\u8f93\u51fa\u63a5\u53e3, \u5b83\u53ea\u7528\u4e8e\u8bed\u97f3\u6355\u83b7\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528Raspberry Pi\u4e0a\u7684\n\u8033\u673a\u63d2\u5b54\n\u8fdb\u884c\u97f3\u9891\u8f93\u51fa\u3002\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u58f0\u97f3\u4ea4\u4e92\u5e94\u7528\n\n\nAI\u52a9\u624b\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nMIC\uff1a4\u4e2a\u6a21\u62df\u9ea6\u514b\u98ce\n\n\nLED\uff1a12\u4e2aAPA102\u53ef\u7f16\u7a0bRGB LED\uff0c\u8fde\u63a5\u5230SPI\u63a5\u53e3\n\n\nRaspberry Pi 40\u9488\u5934\uff1a\u652f\u6301Raspberry Pi Zero\uff0cRaspberry Pi 1 B +\uff0cRaspberry Pi 2 B\u548cRaspberry Pi 3 B\n\n\nAC108\uff1a\u5177\u6709I2S / TDM\u8f93\u51fa\u8f6c\u6362\u529f\u80fd\u7684\u9ad8\u5ea6\u96c6\u6210\u7684\u56db\u901a\u9053ADC\n\n\nI2C\uff1aGrove I2C\u7aef\u53e3\uff0c\u8fde\u63a5\u5230I2C-1\n\n\nGPIO12\uff1aGrove\u6570\u5b57\u7aef\u53e3\uff0c\u8fde\u63a5\u5230GPIO12\u548cGPIO13\n\n\n\n\n\n\nNote\n\u5982\u679c\u8981\u4f7f\u7528APA102 RGB LED\uff0c\u8bf7\u5148\u5c06\u9ad8\u7535\u5e73\u5199\u5165\u201cGPIO5\u201d\uff0c\u7ed9LED\u7684VCC\u4f9b\u7535\u3002\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u628a ReSpeaker 4-Mic Array \u63d2\u5165\u5230 Raspberry Pi\n\n\n\u628a ReSpeaker 4-Mic Array \u63d2\u5165\u5230 Raspberry Pi, \u786e\u4fdd\u63d2\u5165Raspberry Pi\u7684\u65f6\u5019\u9488\u811a\u5bf9\u9f50\u3002\n\n\n\n\nNote\n\u4e0d\u8981\u5728\u4e0a\u7535\u7684\u65f6\u5019\uff0c\u70ed\u63d2\u62d4ReSpeaker 4-Mic Array\n\n\n\n\n\n\n\n\n\n\n\u5b89\u88c5\u9a71\u52a8\n\n\n\u56e0\u4e3a\u5f53\u524d\u7684Pi\u5185\u6838\u76ee\u524d\u4e0d\u652f\u6301AC108\u7f16\u89e3\u7801\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u6784\u5efa\u3002\n\n\n1. \u786e\u4fdd\u60a8\u6b63\u5728\u60a8\u7684Pi\u4e0a\u8fd0\u884c\n\u6700\u65b0\u7684Raspbian\u64cd\u4f5c\u7cfb\u7edf\uff08debian 9\uff09\n\u3002 \n\uff08\u66f4\u65b0\u4e8e2017.09.15\uff09\n\n\n2. \u6839\u636e\u4ee5\u4e0b\u6d41\u7a0b\u5b89\u88c5\u9a71\u52a8\uff1a\n\n\nsudo apt-get update\nsudo apt-get upgrade\ngit clone https://github.com/respeaker/seeed-voicecard.git\ncd seeed-voicecard\nsudo ./install.sh 4mic\nreboot\n\n\n\n\n3. \u9009\u62e9Raspberry Pi\u4e0a\u7684\u8033\u673a\u63d2\u5b54\u8fdb\u884c\u97f3\u9891\u8f93\u51fa\uff1a\n\n\nsudo raspi-config\n# Select 7 Advanced Options\n# Select A4 Audio\n# Select 1 Force 3.5mm (\nheadphone\n) jack\n# Select Finish\n\n\n\n\n4. \u68c0\u67e5\u58f0\u5361\u540d\u79f0\u5982\u4e0b\u6240\u793a\uff1a\n\n\npi@raspberrypi:~/seeed-voicecard $ arecord -L\nnull\n    Discard all samples (playback) or generate zero samples (capture)\nplayback\ncapture\ndmixed\narray\nac108\ndefault:CARD=seeed4micvoicec\n    seeed-4mic-voicecard,\n    Default Audio Device\nsysdefault:CARD=seeed4micvoicec\n    seeed-4mic-voicecard,\n    Default Audio Device\ndmix:CARD=seeed4micvoicec,DEV=0\n    seeed-4mic-voicecard,\n    Direct sample mixing device\ndsnoop:CARD=seeed4micvoicec,DEV=0\n    seeed-4mic-voicecard,\n    Direct sample snooping device\nhw:CARD=seeed4micvoicec,DEV=0\n    seeed-4mic-voicecard,\n    Direct hardware device without any conversions\nplughw:CARD=seeed4micvoicec,DEV=0\n    seeed-4mic-voicecard,\n    Hardware device with all software conversions\n\n\n\n\n\u5982\u679c\u8981\u66f4\u6539alsa\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528\nsudo alsactl --file=ac108_asound.state store\n\u4fdd\u5b58\u3002 \u5f53\u4f60\u9700\u8981\u518d\u6b21\u4f7f\u7528\u8fd9\u4e9b\u8bbe\u7f6e\u65f6\uff0c\u5c06\u5b83\u590d\u5236\u5230\uff1a\nsudo cp ./ac108_asound.state /var/lib/alsa/asound.state\n\n\n5. \u6253\u5f00Audacity\uff0c\u9009\u62e9 \nAC108\u548c4\u901a\u9053\n \u4f5c\u4e3a\u8f93\u5165\uff0c\nbcm2835 alsa: - (hw\uff1a0\uff0c0)\n \u4f5c\u4e3a\u8f93\u51fa\u6765\u6d4b\u8bd5\uff1a\n\n\n$ sudo apt update\n$ sudo apt install audacity\n$ audacity                      // \u8fd0\u884c audacity\n\n\n\n\n\n\n6. \u6216\u8005\u4f60\u53ef\u4ee5\u7528\narecord\n\u5f55\u5236\uff0c\u7136\u540e\u7528\naplay\n\u64ad\u653e\uff1a\n\n\narecord -Dac108 -f S32_LE -r 16000 -c 4 hello.wav    // \u53ea\u652f\u63014\u901a\u9053\naplay hello.wav                                      // \u786e\u4fdd\u9009\u62e9\u9ed8\u8ba4\u8bbe\u5907\n                                                     // \u58f0\u97f3\u901a\u8fc7\u6811\u8393\u6d3e\u7684aux\u8f93\u51fa\n\n\n\n\n\u5982\u4f55\u4f7f\u7528\u677f\u8f7dAPA102 LED\n\n\n\u6bcf\u4e2a\u677f\u8f7dAPA102 LED\u90fd\u6709\u4e00\u4e2a\u989d\u5916\u7684\u9a71\u52a8\u82af\u7247\uff0c\u9a71\u52a8\u82af\u7247\u8bbe\u7f6eLED\u7684\u989c\u8272\uff0c\u7136\u540e\u4fdd\u6301\u8be5\u989c\u8272\uff0c\u76f4\u5230\u63a5\u6536\u5230\u65b0\u7684\u547d\u4ee4\u3002\n\n\n\n\n1. \u6253\u5f00SPI:\n\n\n- \u8f93\u5165\uff1a `sudo raspi-config`;\n- \u9009\u62e9 \nInterfacing Options\n;\n- \u9009\u62e9 \nSPI\n;\n- \u9009\u62e9 \u201cYes\u201d  \n- \u9009\u62e9 \u201cOK\u201d\n- \u9009\u62e9 \u201cFinish\u201d\n\n\n\n\n\n2. \u63a7\u5236APA102 LED\u7684\u793a\u4f8b\n\n\npi@raspberrypi:~ $ cd /home/pi\npi@raspberrypi:~ $ git clone https://github.com/respeaker/4mics_hat.git\npi@raspberrypi:~ $ cd /home/pi/4mics_hat\npi@raspberrypi:~ $ sudo apt install python-virtualenv          # \u5b89\u88c5 python \u865a\u62df\u73af\u5883\npi@raspberrypi:~ $ virtualenv --system-site-packages ~/env     # \u521b\u5efa python \u865a\u62df\u73af\u5883\npi@raspberrypi:~ $ source ~/env/bin/activate                   # \u6fc0\u6d3b python \u865a\u62df\u73af\u5883\n(env) pi@raspberrypi:~ $ pip install spidev gpiozero           # \u5b89\u88c5 spidev \u548c gpiozero\n\n\n\n\n\n\n\u5728\u865a\u62df\u73af\u5883\u4e0b\u8fd0\u884c \npython pixels.py\n, \u4f60\u53ef\u4ee5\u770b\u5230LED\u50cfGoogle Assistant\u706f\u5149\u4e00\u6837\u95ea\u70c1\u3002\n\n\n\n\nReSpeaker 4-Mic Array\u7684DOA\u529f\u80fd\n\n\n\u4f7f\u7528DoA\uff08\u5230\u8fbe\u65b9\u5411\uff09\u529f\u80fd\uff0cReSpeaker 4-Mic Array\u80fd\u591f\u627e\u5230\u58f0\u6e90\u6240\u5728\u7684\u65b9\u5411\u3002\n\n\n1. \u914d\u7f6eVoice engine\n\n\npi@raspberrypi:~ $ source ~/env/bin/activate                    # \u6fc0\u6d3bPython\u865a\u62df\u73af\u5883, \u5982\u679c\u5df2\u7ecf\u6fc0\u6d3b\uff0c\u8c03\u5230\u4e0b\u4e00\u6b65\u3002\n(env) pi@raspberrypi:~ $ cd ~/4mics_hat\n(env) pi@raspberrypi:~ $ sudo apt install libatlas-base-dev     # \u5b89\u88c5 snowboy dependencies\n(env) pi@raspberrypi:~ $ sudo apt install python-pyaudio\n(env) pi@raspberrypi:~ $ pip install ./snowboy*.whl             # \u5b89\u88c5 snowboy for KWS\n(env) pi@raspberrypi:~ $ pip install ./webrtc*.whl              # \u5b89\u88c5 webrtc for DoA\n(env) pi@raspberrypi:~ $ cd ~/\n(env) pi@raspberrypi:~ $ git clone https://github.com/voice-engine/voice-engine\n(env) pi@raspberrypi:~ $ cd voice-engine/\n(env) pi@raspberrypi:~ $ python setup.py install\n(env) pi@raspberrypi:~ $ cd examples\n(env) pi@raspberrypi:~ $ nano kws_doa.py\n\n\n\n\n2. \u4fee\u6539\nkws_doa.py\n\u7684\u7b2c14-21\u884c\uff0c\u4ee5\u9002\u5e944-Mics\uff1a\n\n\nfrom voice_engine.doa_respeaker_4mic_array import DOA\n\n\ndef main():\n    src = Source(rate=16000, channels=4)\n    ch1 = ChannelPicker(channels=4, pick=1)\n    kws = KWS()\n    doa = DOA(rate=16000)\n\n\n\n\n3. \u4fdd\u5b58\uff0c\u9000\u51fa\uff0c\u7136\u540e\u5728\u865a\u62df\u73af\u5883\u4e0b\u8fd0\u884c \npython kws_doa.py\n\u3002\u8bf7\u7528snowboy\u6765\u5524\u9192\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u65b9\u4f4d\u7684\u4fe1\u606f\u3002\n\n\n\u7528\u767e\u5ea6\u6765\u8fdb\u884c\u8bed\u97f3\u4e92\u52a8\n\n\n1. \u767e\u5ea6\u6388\u6743\n\n\npi@raspberrypi:~ $ source ~/env/bin/activate                    # activate the virtual, if we have already activated, skip this step\n(env) pi@raspberrypi:~ $ cd ~/\n(env) pi@raspberrypi:~ $ git clone https://github.com/respeaker/avs\n(env) pi@raspberrypi:~ $ cd avs                                 # install Requirements\n(env) pi@raspberrypi:~ $ python setup.py install                               \n(env) pi@raspberrypi:~/avs $ sudo apt install gstreamer1.0 gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly\n(env) pi@raspberrypi:~/avs $ sudo apt install python-gi gir1.2-gstreamer-1.0\n(env) pi@raspberrypi:~/avs $ pip install tornado\n\n\n\u7528 \nVNC\n\u8fde\u63a5\u6811\u8393\u6d3e, \u5728\u7ec8\u7aef\u8fd0\u884c \nalexa-auth\n \uff0c\u7136\u540e\u767b\u9646\u83b7\u53d6alexa\u7684\u6388\u6743\uff0c \u6216\u8005\u8fd0\u884c \ndueros-auth\n \u83b7\u53d6\u767e\u5ea6\u7684\u6388\u6743\u3002 \u6388\u6743\u7684\u6587\u4ef6\u4fdd\u5b58\u5728\n/home/pi/.avs.json\n\u3002\n\n\n\n\n\n\nNote\n\n\n\u5982\u679c\u6211\u4eec\u5728 \nalexa-auth\n \u548c \ndueros-auth\n\u4e4b\u95f4\u5207\u6362, \u8bf7\u5148\u5220\u9664 \n/home/pi/.avs.json\n \u3002 \u8fd9\u4e2a\u662f\u9690\u85cf\u6587\u4ef6\uff0c\u8bf7\u7528 \nls -la\n \u663e\u793a\u6587\u4ef6\u3002\n\n\n\n\n2. \u914d\u7f6e\n\n\n(env) pi@raspberrypi:~ $ cd /home/pi\n(env) pi@raspberrypi:~ $ git clone https://github.com/respeaker/respeaker_v2_eval.git\n(env) pi@raspberrypi:~ $ cd respeaker_v2_eval/alexa\n(env) pi@raspberrypi:~/respeaker_v2_eval/alexa $ cp ~/4mics_hat/pixels.py ./pixels.py\n(env) pi@raspberrypi:~/respeaker_v2_eval/alexa $ nano ns_kws_doa_alexa.py\n\n\n\u6309\u7167\u4e0b\u9762\u7684\u4fe1\u606f\u66f4\u65b0\u7b2c15-50\u884c\u7684\u8bbe\u7f6e:\n\n\n    from voice_engine.kws import KWS\n    #from voice_engine.ns import NS\n    #from voice_engine.doa_respeaker_4mic_array import DOA\n    from avs.alexa import Alexa\n    from pixels import pixels\n\n    def main():\n        logging.basicConfig(level=logging.DEBUG)\n\n        src = Source(rate=16000, channels=4, frames_size=800)\n        ch1 = ChannelPicker(channels=4, pick=1)\n        #ns = NS(rate=16000, channels=1)\n        kws = KWS(model=\nsnowboy\n)\n        #doa = DOA(rate=16000)\n        alexa = Alexa()\n\n        alexa.state_listener.on_listening = pixels.listen\n        alexa.state_listener.on_thinking = pixels.think\n        alexa.state_listener.on_speaking = pixels.speak\n        alexa.state_listener.on_finished = pixels.off\n\n        src.link(ch1)\n        ch1.link(kws)\n        #ch1.link(ns)\n        #ns.link(kws)\n        kws.link(alexa)\n\n        #src.link(doa)\n        def on_detected(keyword):\n            #logging.info(\ndetected {} at direction {}\n.format(keyword, doa.get_direction()))\n            logging.info(\ndetected {}\n.format(keyword))\n            alexa.listen()\n\n        kws.set_callback(on_detected)\n\n\n\n\n\n3. \u8ba9\u6211\u4eecHigh\u8d77\u6765!\n\n\n\u73b0\u5728\u8bf7\u5728\u865a\u62df\u73af\u5883\u4e0b\u8fd0\u884c \npython ns_kws_doa_alexa.py\n , \u6211\u4eec\u4f1a\u5728\u7ec8\u7aef\u770b\u5230\u5f88\u591adebug\u7684\u6d88\u606f. \u5f53\u6211\u4eec\u770b\u5230 **status code: 204**\u7684\u65f6\u5019, \u8bf7\u8bf4 \nsnowboy\n\u6765\u5524\u9192respeaker\u3002\u63a5\u4e0b\u6765respeaker\u4e0a\u7684led\u706f\u4eae\u8d77\u6765, \u6211\u4eec\u53ef\u4ee5\u8ddf\u4ed6\u5bf9\u8bdd, \u6bd4\u5982\u95ee\uff0c\"\u8c01\u662f\u6700\u5e05\u7684?\" \u6216\u8005 \"\u64ad\u653e\u5218\u5fb7\u534e\u7684\u7537\u4eba\u54ed\u5427\u54ed\u5427\u4e0d\u662f\u7f6a\"\u3002\u5c0f\u4f19\u4f34\uff0c\u5c3d\u60c5\u7684High\u8d77\u6765\u5427\u3002\n\n\nFAQ(\u7591\u95ee\u89e3\u7b54)\n\n\n1.\n\n\nQ:\u4e25\u683c\u6309\u7167\u672c wiki \u64cd\u4f5c\uff0c\u9a71\u52a8\u8fd8\u662f\u5b89\u88c5\u5931\u8d25\uff0c\u600e\u4e48\u529e\uff1f\n\n\nA:\u5982\u679c\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u5b89\u88c5\u9a71\u52a8\u5747\u5931\u8d25\uff0c\u8bf7\u70b9\u51fb\u4e0b\u9762\u56fa\u4ef6\u5b89\u88c5\n\n\n\u6211\u662f\u56fa\u4ef6\n\n\n\u4e0b\u8f7d\u5bc6\u7801\uff1at1m7\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[PDF \u539f\u7406\u56fe]\n \nReSpeaker 4-Mic Array for Raspberry Pi(PDF)", 
            "title": "Respeaker 4-Mics Pi HAT"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#_1", 
            "text": "Raspberry Pi\u517c\u5bb9\uff08\u652f\u6301Raspberry Pi Zero\u548cZero W\uff0cRaspberry Pi B +\uff0cRaspberry Pi 2 B\u548cRaspberry Pi 3 B\uff09  4\u4e2a\u9ea6\u514b\u98ce  3\u7c73\u534a\u5f84\u7684\u8bed\u97f3\u6355\u6349  2\u4e2aGrove\u63a5\u53e3  12\u4e2aAPA102\u677f\u8f7d\u6307\u793a\u706f  \u8f6f\u4ef6\u7b97\u6cd5\uff1aVAD\uff08\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b\uff09\uff0cDOA\uff08\u5230\u8fbe\u65b9\u5411\uff09\u548cKWS\uff08\u5173\u952e\u8bcd\u641c\u7d22\uff09    Note ReSpeaker 4-Mic Array\u6ca1\u6709\u4efb\u4f55\u97f3\u9891\u8f93\u51fa\u63a5\u53e3, \u5b83\u53ea\u7528\u4e8e\u8bed\u97f3\u6355\u83b7\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528Raspberry Pi\u4e0a\u7684 \u8033\u673a\u63d2\u5b54 \u8fdb\u884c\u97f3\u9891\u8f93\u51fa\u3002", 
            "title": "\u4ea7\u54c1\u7279\u5f81"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#_2", 
            "text": "\u58f0\u97f3\u4ea4\u4e92\u5e94\u7528  AI\u52a9\u624b", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#_3", 
            "text": "MIC\uff1a4\u4e2a\u6a21\u62df\u9ea6\u514b\u98ce  LED\uff1a12\u4e2aAPA102\u53ef\u7f16\u7a0bRGB LED\uff0c\u8fde\u63a5\u5230SPI\u63a5\u53e3  Raspberry Pi 40\u9488\u5934\uff1a\u652f\u6301Raspberry Pi Zero\uff0cRaspberry Pi 1 B +\uff0cRaspberry Pi 2 B\u548cRaspberry Pi 3 B  AC108\uff1a\u5177\u6709I2S / TDM\u8f93\u51fa\u8f6c\u6362\u529f\u80fd\u7684\u9ad8\u5ea6\u96c6\u6210\u7684\u56db\u901a\u9053ADC  I2C\uff1aGrove I2C\u7aef\u53e3\uff0c\u8fde\u63a5\u5230I2C-1  GPIO12\uff1aGrove\u6570\u5b57\u7aef\u53e3\uff0c\u8fde\u63a5\u5230GPIO12\u548cGPIO13    Note \u5982\u679c\u8981\u4f7f\u7528APA102 RGB LED\uff0c\u8bf7\u5148\u5c06\u9ad8\u7535\u5e73\u5199\u5165\u201cGPIO5\u201d\uff0c\u7ed9LED\u7684VCC\u4f9b\u7535\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#respeaker-4-mic-array-raspberry-pi", 
            "text": "\u628a ReSpeaker 4-Mic Array \u63d2\u5165\u5230 Raspberry Pi, \u786e\u4fdd\u63d2\u5165Raspberry Pi\u7684\u65f6\u5019\u9488\u811a\u5bf9\u9f50\u3002   Note \u4e0d\u8981\u5728\u4e0a\u7535\u7684\u65f6\u5019\uff0c\u70ed\u63d2\u62d4ReSpeaker 4-Mic Array", 
            "title": "\u628a ReSpeaker 4-Mic Array \u63d2\u5165\u5230 Raspberry Pi"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#_5", 
            "text": "\u56e0\u4e3a\u5f53\u524d\u7684Pi\u5185\u6838\u76ee\u524d\u4e0d\u652f\u6301AC108\u7f16\u89e3\u7801\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u6784\u5efa\u3002", 
            "title": "\u5b89\u88c5\u9a71\u52a8"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#1-piraspbiandebian-9-20170915", 
            "text": "", 
            "title": "1. \u786e\u4fdd\u60a8\u6b63\u5728\u60a8\u7684Pi\u4e0a\u8fd0\u884c\u6700\u65b0\u7684Raspbian\u64cd\u4f5c\u7cfb\u7edf\uff08debian 9\uff09\u3002 \uff08\u66f4\u65b0\u4e8e2017.09.15\uff09"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#2", 
            "text": "sudo apt-get update\nsudo apt-get upgrade\ngit clone https://github.com/respeaker/seeed-voicecard.git\ncd seeed-voicecard\nsudo ./install.sh 4mic\nreboot", 
            "title": "2. \u6839\u636e\u4ee5\u4e0b\u6d41\u7a0b\u5b89\u88c5\u9a71\u52a8\uff1a"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#3-raspberry-pi", 
            "text": "sudo raspi-config\n# Select 7 Advanced Options\n# Select A4 Audio\n# Select 1 Force 3.5mm ( headphone ) jack\n# Select Finish", 
            "title": "3. \u9009\u62e9Raspberry Pi\u4e0a\u7684\u8033\u673a\u63d2\u5b54\u8fdb\u884c\u97f3\u9891\u8f93\u51fa\uff1a"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#4", 
            "text": "pi@raspberrypi:~/seeed-voicecard $ arecord -L\nnull\n    Discard all samples (playback) or generate zero samples (capture)\nplayback\ncapture\ndmixed\narray\nac108\ndefault:CARD=seeed4micvoicec\n    seeed-4mic-voicecard,\n    Default Audio Device\nsysdefault:CARD=seeed4micvoicec\n    seeed-4mic-voicecard,\n    Default Audio Device\ndmix:CARD=seeed4micvoicec,DEV=0\n    seeed-4mic-voicecard,\n    Direct sample mixing device\ndsnoop:CARD=seeed4micvoicec,DEV=0\n    seeed-4mic-voicecard,\n    Direct sample snooping device\nhw:CARD=seeed4micvoicec,DEV=0\n    seeed-4mic-voicecard,\n    Direct hardware device without any conversions\nplughw:CARD=seeed4micvoicec,DEV=0\n    seeed-4mic-voicecard,\n    Hardware device with all software conversions  \u5982\u679c\u8981\u66f4\u6539alsa\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528 sudo alsactl --file=ac108_asound.state store \u4fdd\u5b58\u3002 \u5f53\u4f60\u9700\u8981\u518d\u6b21\u4f7f\u7528\u8fd9\u4e9b\u8bbe\u7f6e\u65f6\uff0c\u5c06\u5b83\u590d\u5236\u5230\uff1a sudo cp ./ac108_asound.state /var/lib/alsa/asound.state", 
            "title": "4. \u68c0\u67e5\u58f0\u5361\u540d\u79f0\u5982\u4e0b\u6240\u793a\uff1a"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#5-audacity-ac1084-bcm2835-alsa-hw00", 
            "text": "$ sudo apt update\n$ sudo apt install audacity\n$ audacity                      // \u8fd0\u884c audacity", 
            "title": "5. \u6253\u5f00Audacity\uff0c\u9009\u62e9 AC108\u548c4\u901a\u9053 \u4f5c\u4e3a\u8f93\u5165\uff0cbcm2835 alsa: - (hw\uff1a0\uff0c0) \u4f5c\u4e3a\u8f93\u51fa\u6765\u6d4b\u8bd5\uff1a"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#6-arecordaplay", 
            "text": "arecord -Dac108 -f S32_LE -r 16000 -c 4 hello.wav    // \u53ea\u652f\u63014\u901a\u9053\naplay hello.wav                                      // \u786e\u4fdd\u9009\u62e9\u9ed8\u8ba4\u8bbe\u5907\n                                                     // \u58f0\u97f3\u901a\u8fc7\u6811\u8393\u6d3e\u7684aux\u8f93\u51fa", 
            "title": "6. \u6216\u8005\u4f60\u53ef\u4ee5\u7528arecord\u5f55\u5236\uff0c\u7136\u540e\u7528aplay\u64ad\u653e\uff1a"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#apa102-led", 
            "text": "\u6bcf\u4e2a\u677f\u8f7dAPA102 LED\u90fd\u6709\u4e00\u4e2a\u989d\u5916\u7684\u9a71\u52a8\u82af\u7247\uff0c\u9a71\u52a8\u82af\u7247\u8bbe\u7f6eLED\u7684\u989c\u8272\uff0c\u7136\u540e\u4fdd\u6301\u8be5\u989c\u8272\uff0c\u76f4\u5230\u63a5\u6536\u5230\u65b0\u7684\u547d\u4ee4\u3002", 
            "title": "\u5982\u4f55\u4f7f\u7528\u677f\u8f7dAPA102 LED"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#1-spi", 
            "text": "- \u8f93\u5165\uff1a `sudo raspi-config`;\n- \u9009\u62e9  Interfacing Options ;\n- \u9009\u62e9  SPI ;\n- \u9009\u62e9 \u201cYes\u201d  \n- \u9009\u62e9 \u201cOK\u201d\n- \u9009\u62e9 \u201cFinish\u201d", 
            "title": "1. \u6253\u5f00SPI:"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#2-apa102-led", 
            "text": "pi@raspberrypi:~ $ cd /home/pi\npi@raspberrypi:~ $ git clone https://github.com/respeaker/4mics_hat.git\npi@raspberrypi:~ $ cd /home/pi/4mics_hat\npi@raspberrypi:~ $ sudo apt install python-virtualenv          # \u5b89\u88c5 python \u865a\u62df\u73af\u5883\npi@raspberrypi:~ $ virtualenv --system-site-packages ~/env     # \u521b\u5efa python \u865a\u62df\u73af\u5883\npi@raspberrypi:~ $ source ~/env/bin/activate                   # \u6fc0\u6d3b python \u865a\u62df\u73af\u5883\n(env) pi@raspberrypi:~ $ pip install spidev gpiozero           # \u5b89\u88c5 spidev \u548c gpiozero   \u5728\u865a\u62df\u73af\u5883\u4e0b\u8fd0\u884c  python pixels.py , \u4f60\u53ef\u4ee5\u770b\u5230LED\u50cfGoogle Assistant\u706f\u5149\u4e00\u6837\u95ea\u70c1\u3002", 
            "title": "2. \u63a7\u5236APA102 LED\u7684\u793a\u4f8b"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#respeaker-4-mic-arraydoa", 
            "text": "\u4f7f\u7528DoA\uff08\u5230\u8fbe\u65b9\u5411\uff09\u529f\u80fd\uff0cReSpeaker 4-Mic Array\u80fd\u591f\u627e\u5230\u58f0\u6e90\u6240\u5728\u7684\u65b9\u5411\u3002", 
            "title": "ReSpeaker 4-Mic Array\u7684DOA\u529f\u80fd"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#1-voice-engine", 
            "text": "pi@raspberrypi:~ $ source ~/env/bin/activate                    # \u6fc0\u6d3bPython\u865a\u62df\u73af\u5883, \u5982\u679c\u5df2\u7ecf\u6fc0\u6d3b\uff0c\u8c03\u5230\u4e0b\u4e00\u6b65\u3002\n(env) pi@raspberrypi:~ $ cd ~/4mics_hat\n(env) pi@raspberrypi:~ $ sudo apt install libatlas-base-dev     # \u5b89\u88c5 snowboy dependencies\n(env) pi@raspberrypi:~ $ sudo apt install python-pyaudio\n(env) pi@raspberrypi:~ $ pip install ./snowboy*.whl             # \u5b89\u88c5 snowboy for KWS\n(env) pi@raspberrypi:~ $ pip install ./webrtc*.whl              # \u5b89\u88c5 webrtc for DoA\n(env) pi@raspberrypi:~ $ cd ~/\n(env) pi@raspberrypi:~ $ git clone https://github.com/voice-engine/voice-engine\n(env) pi@raspberrypi:~ $ cd voice-engine/\n(env) pi@raspberrypi:~ $ python setup.py install\n(env) pi@raspberrypi:~ $ cd examples\n(env) pi@raspberrypi:~ $ nano kws_doa.py", 
            "title": "1. \u914d\u7f6eVoice engine"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#2-kws_doapy14-214-mics", 
            "text": "from voice_engine.doa_respeaker_4mic_array import DOA\n\n\ndef main():\n    src = Source(rate=16000, channels=4)\n    ch1 = ChannelPicker(channels=4, pick=1)\n    kws = KWS()\n    doa = DOA(rate=16000)", 
            "title": "2. \u4fee\u6539kws_doa.py\u7684\u7b2c14-21\u884c\uff0c\u4ee5\u9002\u5e944-Mics\uff1a"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#3-python-kws_doapysnowboy", 
            "text": "", 
            "title": "3. \u4fdd\u5b58\uff0c\u9000\u51fa\uff0c\u7136\u540e\u5728\u865a\u62df\u73af\u5883\u4e0b\u8fd0\u884c python kws_doa.py\u3002\u8bf7\u7528snowboy\u6765\u5524\u9192\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u65b9\u4f4d\u7684\u4fe1\u606f\u3002"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#_6", 
            "text": "", 
            "title": "\u7528\u767e\u5ea6\u6765\u8fdb\u884c\u8bed\u97f3\u4e92\u52a8"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#1", 
            "text": "pi@raspberrypi:~ $ source ~/env/bin/activate                    # activate the virtual, if we have already activated, skip this step\n(env) pi@raspberrypi:~ $ cd ~/\n(env) pi@raspberrypi:~ $ git clone https://github.com/respeaker/avs\n(env) pi@raspberrypi:~ $ cd avs                                 # install Requirements\n(env) pi@raspberrypi:~ $ python setup.py install                               \n(env) pi@raspberrypi:~/avs $ sudo apt install gstreamer1.0 gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly\n(env) pi@raspberrypi:~/avs $ sudo apt install python-gi gir1.2-gstreamer-1.0\n(env) pi@raspberrypi:~/avs $ pip install tornado \n\u7528  VNC \u8fde\u63a5\u6811\u8393\u6d3e, \u5728\u7ec8\u7aef\u8fd0\u884c  alexa-auth  \uff0c\u7136\u540e\u767b\u9646\u83b7\u53d6alexa\u7684\u6388\u6743\uff0c \u6216\u8005\u8fd0\u884c  dueros-auth  \u83b7\u53d6\u767e\u5ea6\u7684\u6388\u6743\u3002 \u6388\u6743\u7684\u6587\u4ef6\u4fdd\u5b58\u5728 /home/pi/.avs.json \u3002    Note  \u5982\u679c\u6211\u4eec\u5728  alexa-auth  \u548c  dueros-auth \u4e4b\u95f4\u5207\u6362, \u8bf7\u5148\u5220\u9664  /home/pi/.avs.json  \u3002 \u8fd9\u4e2a\u662f\u9690\u85cf\u6587\u4ef6\uff0c\u8bf7\u7528  ls -la  \u663e\u793a\u6587\u4ef6\u3002", 
            "title": "1. \u767e\u5ea6\u6388\u6743"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#2_1", 
            "text": "(env) pi@raspberrypi:~ $ cd /home/pi\n(env) pi@raspberrypi:~ $ git clone https://github.com/respeaker/respeaker_v2_eval.git\n(env) pi@raspberrypi:~ $ cd respeaker_v2_eval/alexa\n(env) pi@raspberrypi:~/respeaker_v2_eval/alexa $ cp ~/4mics_hat/pixels.py ./pixels.py\n(env) pi@raspberrypi:~/respeaker_v2_eval/alexa $ nano ns_kws_doa_alexa.py \n\u6309\u7167\u4e0b\u9762\u7684\u4fe1\u606f\u66f4\u65b0\u7b2c15-50\u884c\u7684\u8bbe\u7f6e:      from voice_engine.kws import KWS\n    #from voice_engine.ns import NS\n    #from voice_engine.doa_respeaker_4mic_array import DOA\n    from avs.alexa import Alexa\n    from pixels import pixels\n\n    def main():\n        logging.basicConfig(level=logging.DEBUG)\n\n        src = Source(rate=16000, channels=4, frames_size=800)\n        ch1 = ChannelPicker(channels=4, pick=1)\n        #ns = NS(rate=16000, channels=1)\n        kws = KWS(model= snowboy )\n        #doa = DOA(rate=16000)\n        alexa = Alexa()\n\n        alexa.state_listener.on_listening = pixels.listen\n        alexa.state_listener.on_thinking = pixels.think\n        alexa.state_listener.on_speaking = pixels.speak\n        alexa.state_listener.on_finished = pixels.off\n\n        src.link(ch1)\n        ch1.link(kws)\n        #ch1.link(ns)\n        #ns.link(kws)\n        kws.link(alexa)\n\n        #src.link(doa)\n        def on_detected(keyword):\n            #logging.info( detected {} at direction {} .format(keyword, doa.get_direction()))\n            logging.info( detected {} .format(keyword))\n            alexa.listen()\n\n        kws.set_callback(on_detected)", 
            "title": "2. \u914d\u7f6e"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#3-high", 
            "text": "\u73b0\u5728\u8bf7\u5728\u865a\u62df\u73af\u5883\u4e0b\u8fd0\u884c  python ns_kws_doa_alexa.py  , \u6211\u4eec\u4f1a\u5728\u7ec8\u7aef\u770b\u5230\u5f88\u591adebug\u7684\u6d88\u606f. \u5f53\u6211\u4eec\u770b\u5230 **status code: 204**\u7684\u65f6\u5019, \u8bf7\u8bf4  snowboy \u6765\u5524\u9192respeaker\u3002\u63a5\u4e0b\u6765respeaker\u4e0a\u7684led\u706f\u4eae\u8d77\u6765, \u6211\u4eec\u53ef\u4ee5\u8ddf\u4ed6\u5bf9\u8bdd, \u6bd4\u5982\u95ee\uff0c\"\u8c01\u662f\u6700\u5e05\u7684?\" \u6216\u8005 \"\u64ad\u653e\u5218\u5fb7\u534e\u7684\u7537\u4eba\u54ed\u5427\u54ed\u5427\u4e0d\u662f\u7f6a\"\u3002\u5c0f\u4f19\u4f34\uff0c\u5c3d\u60c5\u7684High\u8d77\u6765\u5427\u3002", 
            "title": "3. \u8ba9\u6211\u4eecHigh\u8d77\u6765!"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#faq", 
            "text": "1.  Q:\u4e25\u683c\u6309\u7167\u672c wiki \u64cd\u4f5c\uff0c\u9a71\u52a8\u8fd8\u662f\u5b89\u88c5\u5931\u8d25\uff0c\u600e\u4e48\u529e\uff1f  A:\u5982\u679c\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u5b89\u88c5\u9a71\u52a8\u5747\u5931\u8d25\uff0c\u8bf7\u70b9\u51fb\u4e0b\u9762\u56fa\u4ef6\u5b89\u88c5  \u6211\u662f\u56fa\u4ef6  \u4e0b\u8f7d\u5bc6\u7801\uff1at1m7", 
            "title": "FAQ(\u7591\u95ee\u89e3\u7b54)"
        }, 
        {
            "location": "/Respeaker_4-Mics_Pi_HAT/#_7", 
            "text": "[PDF \u539f\u7406\u56fe]   ReSpeaker 4-Mic Array for Raspberry Pi(PDF)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Shield/", 
            "text": "\u672c\u8282\u5305\u62ec\u7531Seeed\u521b\u5efa\u7684\u6269\u5c55\u677f\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u6269\u5c55\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nBase_Shield_V2\n\n\nBluetooth_Shield_V2\n\n\nCAN-BUS_Shield_V1.2\n\n\nCAN-BUS_Shield_V2.0\n\n\nHow_to_edit_Wiki\n\n\nMusic_Shield_V2.2\n\n\nRelay_Shield_v3\n\n\nSolar_Charger_Shield_V2.2\n\n\nW5500_Ethernet_Shield_v1.0\n\n\nXBee_Shield_V2.0", 
            "title": "Shield"
        }, 
        {
            "location": "/Shield/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u6269\u5c55\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Base_Shield_V2  Bluetooth_Shield_V2  CAN-BUS_Shield_V1.2  CAN-BUS_Shield_V2.0  How_to_edit_Wiki  Music_Shield_V2.2  Relay_Shield_v3  Solar_Charger_Shield_V2.2  W5500_Ethernet_Shield_v1.0  XBee_Shield_V2.0", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Base_Shield_V2/", 
            "text": "\u4f5c\u4e3a\u6269\u5c55\u677f\uff0cBase Shield v2\u6709\u8bb8\u591aGrove\u8fde\u63a5\u63a5\u53e3\uff0c\u65b9\u4fbf\u60a8\u5c06\u591a\u4e2aGrove\u4ea7\u54c1\u4e00\u8d77\u4f7f\u7528\u3002\u5b83\u4e0e\u4e00\u7cfb\u5217Arduino\u4ea7\u54c1\u517c\u5bb9\u3002\n\n\n\n\nNote\n\n\n\n\n\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f \nGrove System\n.\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u7535\u6e90\u517c\u5bb9\uff1a\u6bcf\u4e2aGrove\u8fde\u63a5\u5668\u90fd\u6709\u56db\u6839\u7535\u7ebf\uff0c\u5176\u4e2d\u4e00\u6839\u662fVcc\u3002\u4f46\u662f\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u5fae\u63a7\u5236\u5668\u4e3b\u677f\u90fd\u9700\u89815V\u7684\u7535\u6e90\u7535\u538b\uff0c\u6709\u4e9b\u9700\u89813.3V\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728Base Shield v2\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u7535\u6e90\u5f00\u5173\u3002\u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8be5\u5f00\u5173\u8c03\u8282Vcc\u7684\u7535\u538b\uff0c\u786e\u4fddVcc\u7684\u7535\u538b\u4e0e\u4e3b\u677f\u7684\u7535\u6e90\u76f8\u540c\u3002\n\n\n\u6240\u4ee5\u5728\u4f7f\u7528Arduino UNO\u4e0eBase Shield v2\u65f6\uff0c\u8bf7\u5c06\u5f00\u5173\u8f6c\u52305v\u4f4d\u7f6e; \u5728\u4f7f\u7528\u5e26\u6709Base Shield v2\u7684Seeeduino Arch\u65f6\uff0c\u8bf7\u5c06\u5f00\u5173\u8f6c\u52303.3v\u3002\n\n\n\n\n\n\n\u5f00\u53d1\u677f\u517c\u5bb9\uff1a\u5f15\u811a\u6570\u4e0eArduino UNO R3\u76f8\u540c\u3002\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u5982\u679c\u4f7f\u7528\u5e26\u6709Seeeduino V3\u7684Base Shield v2\uff0c\u8bf7\u710a\u63a5P1\uff0cP2\u3002\n\n\n\n\n\n\nGrove \u8fde\u63a5\u5668: Base Shield v2 \u670916\u4e2aGrove \u8fde\u63a5\u5934.\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nAnalog port\n\n\nA0/A1/A2/A3\n\n\n4\n\n\n\n\n\n\nDigital port\n\n\nD2/D3/D4/D5/D6/D7/D8\n\n\n7\n\n\n\n\n\n\nUART port\n\n\nUART\n\n\n1\n\n\n\n\n\n\n2C port\n\n\nI2C\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8: 2.1 * 2.7 \u82f1\u5bf8\n\n\nLED \u6307\u793a: \u4f9b\u7535\u65f6\u7eff\u8272LED\u6307\u793a\u706f\u4eae\u8d77\u3002\n\n\n\n\n\u517c\u5bb9\u6027\n\n\n\u6211\u4eec\u5df2\u7ecf\u751f\u4ea7\u4e86\u5927\u91cf\u7684\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u7684\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u8fd9\u4e9b\u677f\u4e0e\u5e73\u53f0\u677f\u7684\u517c\u5bb9\u6027\u3002\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0c\u4e0b\u8868\u4e2d\u6807\u8bc6\u7684\"Not recommended\"\u5e76\u4e0d\u4ee3\u8868\u4e00\u5b9a\u5c31\u4e0d\u80fd\u517c\u5bb9\uff0c\u53ef\u80fd\u60a8\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8df3\u7ebf\u3001\u710a\u63a5\u3002\u5982\u6b64\uff0c\u90e8\u5206\u6807\u8bc6\u4e0d\u517c\u5bb9\u7684\u4e5f\u662f\u53ef\u80fd\u6b63\u5e38\u4f7f\u7528\u7684\u3002\u66f4\u591a\u517c\u5bb9\u6027\u4fe1\u606f\u8bf7\u8054\u7cfb\u6211\u4eec\u7684\u6280\u672f\u652f\u6301\n\u3002\n\n\n\n\n\u70b9\u51fb\u67e5\u770b\u5927\u56fe\n\n\n\n\n\u5e94\u7528\n\n\n\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86Grove - LED\u548cGrove - Button\u4e0eBase Shield v2\u3002\u6240\u6709Grove\u4ea7\u54c1\u90fd\u6709Grove\u8fde\u63a5\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165Base Shield\u3002\n\n\n\n\n/*\n The circuit:\n* LED attached from pin 3 to ground\n* Button attached to pin 2 from +5V\n* 10K resistor attached to pin 2 from ground\n* Button Control An LED\n*/\n\nconst int button = 2;       // the Grove port No. you attached a button to\nconst int LED    = 3;       // the Grove port No. you attached an LED to\nvoid setup()\n{\n    pinMode(button, INPUT); //set button as an INPUT device\n    pinMode(LED, OUTPUT);   //set LED as an OUTPUT device\n}\nvoid loop()\n{\n    int btn = digitalRead(button); //read the status of the button\n    digitalWrite(LED, btn);\n    delay(10);\n}\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Easyeda\u539f\u7406\u56fe]\n \nSchematic at Easyeda\n\n\n[Base Shield\u539f\u7406\u56fe]\n \nSchematic of Base Shield v2\n\n\n[Base Shield\u539f\u7406\u56fe pdf\u7248]\n \nSchematics PDF of Base Shield V2", 
            "title": "Base Shield V2"
        }, 
        {
            "location": "/Base_Shield_V2/#_1", 
            "text": "\u7535\u6e90\u517c\u5bb9\uff1a\u6bcf\u4e2aGrove\u8fde\u63a5\u5668\u90fd\u6709\u56db\u6839\u7535\u7ebf\uff0c\u5176\u4e2d\u4e00\u6839\u662fVcc\u3002\u4f46\u662f\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u5fae\u63a7\u5236\u5668\u4e3b\u677f\u90fd\u9700\u89815V\u7684\u7535\u6e90\u7535\u538b\uff0c\u6709\u4e9b\u9700\u89813.3V\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728Base Shield v2\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u7535\u6e90\u5f00\u5173\u3002\u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8be5\u5f00\u5173\u8c03\u8282Vcc\u7684\u7535\u538b\uff0c\u786e\u4fddVcc\u7684\u7535\u538b\u4e0e\u4e3b\u677f\u7684\u7535\u6e90\u76f8\u540c\u3002  \u6240\u4ee5\u5728\u4f7f\u7528Arduino UNO\u4e0eBase Shield v2\u65f6\uff0c\u8bf7\u5c06\u5f00\u5173\u8f6c\u52305v\u4f4d\u7f6e; \u5728\u4f7f\u7528\u5e26\u6709Base Shield v2\u7684Seeeduino Arch\u65f6\uff0c\u8bf7\u5c06\u5f00\u5173\u8f6c\u52303.3v\u3002    \u5f00\u53d1\u677f\u517c\u5bb9\uff1a\u5f15\u811a\u6570\u4e0eArduino UNO R3\u76f8\u540c\u3002     Note   \u5982\u679c\u4f7f\u7528\u5e26\u6709Seeeduino V3\u7684Base Shield v2\uff0c\u8bf7\u710a\u63a5P1\uff0cP2\u3002    Grove \u8fde\u63a5\u5668: Base Shield v2 \u670916\u4e2aGrove \u8fde\u63a5\u5934.     \u53c2\u6570  \u540d\u79f0  \u6570\u91cf      Analog port  A0/A1/A2/A3  4    Digital port  D2/D3/D4/D5/D6/D7/D8  7    UART port  UART  1    2C port  I2C  1      \u5c3a\u5bf8: 2.1 * 2.7 \u82f1\u5bf8  LED \u6307\u793a: \u4f9b\u7535\u65f6\u7eff\u8272LED\u6307\u793a\u706f\u4eae\u8d77\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Base_Shield_V2/#_2", 
            "text": "\u6211\u4eec\u5df2\u7ecf\u751f\u4ea7\u4e86\u5927\u91cf\u7684\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u7684\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u8fd9\u4e9b\u677f\u4e0e\u5e73\u53f0\u677f\u7684\u517c\u5bb9\u6027\u3002   Note  \u8bf7\u6ce8\u610f\uff0c\u4e0b\u8868\u4e2d\u6807\u8bc6\u7684\"Not recommended\"\u5e76\u4e0d\u4ee3\u8868\u4e00\u5b9a\u5c31\u4e0d\u80fd\u517c\u5bb9\uff0c\u53ef\u80fd\u60a8\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8df3\u7ebf\u3001\u710a\u63a5\u3002\u5982\u6b64\uff0c\u90e8\u5206\u6807\u8bc6\u4e0d\u517c\u5bb9\u7684\u4e5f\u662f\u53ef\u80fd\u6b63\u5e38\u4f7f\u7528\u7684\u3002\u66f4\u591a\u517c\u5bb9\u6027\u4fe1\u606f\u8bf7\u8054\u7cfb\u6211\u4eec\u7684\u6280\u672f\u652f\u6301 \u3002   \u70b9\u51fb\u67e5\u770b\u5927\u56fe", 
            "title": "\u517c\u5bb9\u6027"
        }, 
        {
            "location": "/Base_Shield_V2/#_3", 
            "text": "\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86Grove - LED\u548cGrove - Button\u4e0eBase Shield v2\u3002\u6240\u6709Grove\u4ea7\u54c1\u90fd\u6709Grove\u8fde\u63a5\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165Base Shield\u3002   /*\n The circuit:\n* LED attached from pin 3 to ground\n* Button attached to pin 2 from +5V\n* 10K resistor attached to pin 2 from ground\n* Button Control An LED\n*/\n\nconst int button = 2;       // the Grove port No. you attached a button to\nconst int LED    = 3;       // the Grove port No. you attached an LED to\nvoid setup()\n{\n    pinMode(button, INPUT); //set button as an INPUT device\n    pinMode(LED, OUTPUT);   //set LED as an OUTPUT device\n}\nvoid loop()\n{\n    int btn = digitalRead(button); //read the status of the button\n    digitalWrite(LED, btn);\n    delay(10);\n}", 
            "title": "\u5e94\u7528"
        }, 
        {
            "location": "/Base_Shield_V2/#_4", 
            "text": "[Easyeda\u539f\u7406\u56fe]   Schematic at Easyeda  [Base Shield\u539f\u7406\u56fe]   Schematic of Base Shield v2  [Base Shield\u539f\u7406\u56fe pdf\u7248]   Schematics PDF of Base Shield V2", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/", 
            "text": "CAN-BUS\n \u662f\u4e00\u79cd\u666e\u901a\u7684\u5de5\u4e1a\u603b\u7ebf\uff0c\u7531\u4e8e\u5176\u957f\u8ddd\u79bb\uff0c\u4e2d\u7b49\u901a\u4fe1\u901f\u5ea6\u548c\u9ad8\u53ef\u9760\u6027\u3002\u5b83\u901a\u5e38\u5728\u73b0\u4ee3\u673a\u5e8a\u4e0a\u5e94\u7528\uff0c\u4f8b\u5982\u6c7d\u8f66\u8bca\u65ad\u603b\u7ebf\u3002\n\n\n\u8be5CAN\u603b\u7ebf\u6269\u5c55\u677f\u91c7\u7528MCP2515 CAN\u603b\u7ebf\u63a7\u5236\u5668\u4e0eSPI\u63a5\u53e3\u548cMCP2551 CAN\u6536\u53d1\u5668\uff0c\u4e3a\u60a8\u63d0\u4f9bArduino / Seeeduino CAN-BUS\u51fd\u6570\u3002\u901a\u8fc7\u6dfb\u52a0OBD-II\u8f6c\u6362\u5668\u7535\u7f06\u5e76\u5bfc\u5165OBD-II\u5e93\uff0c\u5c31\u53ef\u4ee5\u6784\u5efa\u677f\u8f7d\u8bca\u65ad\u8bbe\u5907\u6216\u6570\u636e\u8bb0\u5f55\u5668\u3002\n\n\n\u7248\u672c\n\n\n\u672c\u6587\u6863\u9002\u7528\u4e8e\u4ee5\u4e0b\u7248\u672c\u7684\u4ea7\u54c1\uff1a:\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nCAN BUS Shield V1.0\n\n\nOct 14, 2012\n\n\n \u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nCAN BUS Shield V1.1\n\n\nAug 10, 2013\n\n\n \u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nCAN BUS Shield V1.2\n\n\nJan 5, 2015\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\nCAN BUS Shield V1.2\u7684\u65b0\u7279\u6027\n\n\n\n\n\u5728PCB\u80cc\u9762\u710a\u63a5\n\n\n\u5c06\u7aef\u5b50\u7535\u963b\u66f4\u6539\u4e3a120\u6b27\u59c6\n\n\n\n\n\u5982\u679c\u6211\u60f3\u5c06\u8fd9\u4e2a\u6269\u5c55\u677f\u8fde\u63a5\u5230\u6211\u7684\u8f66\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\n\n\u5982\u679c\u60a8\u60f3\u8981\u8bfb\u53d6\u6570\u636e\u6216\u63a7\u5236\u6c7d\u8f66\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528OBD\n DB9\u7535\u7f06\uff0c\u8be5\u7535\u7f06\u5c06\u8f7b\u677e\u5b8c\u6210OBD\u8fde\u63a5\u5668\u5230DB9\u8fde\u63a5\u5668\u7684\u8f6c\u6362\u3002\u8be5\u7535\u7f06\u4e5f\u53ef\u4ee5\u8fde\u63a5\u5230\u5177\u6709OBD\u8fde\u63a5\u5668\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u6211\u4eec\u5728\u7535\u7f06\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5f00\u5173\uff0c\u65b9\u4fbf\u60a8\u7684\u63a7\u5236\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u6807\u8d2d\u4e70\u8be5\u7535\u7f06\u3002\n\n\n\n\nUSB-CAN\u5206\u6790\u4eea\n\n\n\u5982\u679c\u60a8\u9700\u8981\u4e00\u4e2aCAN\u603b\u7ebf\u5206\u6790\u4eea\u6765\u68c0\u6d4b\u60a8\u7684CAN\u603b\u7ebf\uff0c\u6211\u4eec\u63a8\u8350\u4e0b\u9762\u7684 \nUSB-CAN Analyzer\n \u3002(\u540c\u6837\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u7247\u8d2d\u4e70)\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nCAN V2.0B\u901f\u5ea6\u9ad8\u8fbe1 Mb / s\n\n\nSPI\u63a5\u53e3\u901f\u5ea6\u9ad8\u8fbe10 MHz\n\n\n\u652f\u6301\u6807\u51c6\uff0811\u4f4d\uff09\u548c\u6269\u5c55\uff0829\u4f4d\uff09\u6570\u636e\u4ee5\u53ca\u8fdc\u7a0b\u5e27\n\n\n\u4e24\u4e2a\u5177\u6709\u4f18\u5148\u6d88\u606f\u5b58\u50a8\u7684\u63a5\u6536\u7f13\u51b2\u533a\n\n\n\u5de5\u4e1a\u6807\u51c6DB-9\u8fde\u63a5\u5668\n\n\nLED\u6307\u793a\u706f\n\n\n\n\n\n\nNote\n\n\nCAN BUS \u53ef\u4ee5\u826f\u597d\u5730\u517c\u5bb9Arduino UNO (ATmega328), Arduino Mega (ATmega1280/2560) \u3001 Arduino Leonardo (ATmega32U4).\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\nDB9 Interface\n - to connect to OBDII Interface via a DBG-OBD Cable.\n\n\nV_OBD\n - It gets power from OBDII Interface (from DB9)\n\n\nLed Indicator\n:\n\n\nPWR\n: power\n\n\nTX\n: blink when the data is sending\n\n\nRX\n: blink when there's data receiving\n\n\nINT\n: data interrupt\n\n\n\n\n\n\nTerminal\n - CAN_H and CAN_L\n\n\nArduino UNO pin out\n\n\nSerial Grove connector\n\n\nI2C Grove connector\n\n\nICSP pins\n\n\nIC\n - MCP2551, a high-speed CAN transceiver (\ndatasheet\n)\n\n\nIC\n - MCP2515, stand-alone CAN controller with SPI interface (\ndatasheet\n)\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5f53\u60a8\u5728\u4e00\u4e2a\u7f51\u7edc\u4e2d\u4f7f\u7528\u4e24\u4e2a\u4ee5\u4e0a\u7684CAN\u603b\u7ebf\u6269\u5c55\u677f\u65f6\uff0c\u5e94\u8003\u8651\u963b\u6297\u3002\u60a8\u5e94\u8be5\u7528\u5200\u5207\u5272PCB\u4e2d\u7684P1\uff0c\u6216\u8005\u5e72\u8106\u53d6\u4e0bPCB\u4e0a\u7684R3\u3002\n\n\n\n\n\n\n\u7ba1\u811a\u56fe\n\n\n\n\n\n\nNote\n\n\n\n\n\u7a7a\u95f2\u9488\u53ef\u7528\u4e8e\u5176\u4ed6\u7528\u9014\u3002\n\n\n\n\n\n\nDB9\nOBDii \u63a5\u53e3\n\n\n\n\nCS \u5f15\u811a\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cV1.2\u7684SPI_CS\u5f15\u811a\u8fde\u63a5\u5230D9\u3002\u5982\u679c\u8981\u66f4\u6539\u4e3aD10\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\n\n\n\u6b65\u9aa41\uff1a\u67e5\u770bPCB\u7684\u80cc\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u540d\u4e3aCS\u7684\u710a\u76d8\u3002\n\n\n\n\n\n\n\n\n\u6b65\u9aa42: \u5272\u65ad\u710a\u76d89\u548c\u4e2d\u95f4\u710a\u76d8\u4e4b\u95f4\u7684\u5bfc\u7ebf\n\n\n\n\n\n\n\n\n\u6b65\u9aa43: \u5c06\u4e2d\u95f4\u710a\u76d8\u548c\u710a\u76d810\u710a\u63a5\u5728\u4e00\u8d77\u3002\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002\n\n\n\n\n\n\nSPI \u5f15\u811a\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSPI\u5f15\u811a\uff08SCK\uff0cMISO\uff0cMOSI\uff09\u88ab\u8fde\u63a5\u5230ICSP\u5f15\u811a\u3002\u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u6838\u5fc3\u677f\uff0cSPI\u5f15\u811a\u4f4d\u4e8eD11\u301cD13\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u9700\u8981\u5bf9PCB\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u3002\u770b\u770bPCB\u7684\u80cc\u9762\uff0c\u6709\u4e09\u4e2a\u710a\u76d8\uff0cMOSI\uff0cMISO\u548cSCK\uff0c\u5b83\u4eec\u9ed8\u8ba4\u8fde\u63a5\u5230A\u3002\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u66f4\u6539\u4e3aB\u3002\n\n\n\n\nNote\n\n\n\n\n\u5bf9\u4e8eArduino UNO, Arduino Mega, Arduino Leonardo \u4ee5\u53ca\u4efb\u4f55\u5176\u4ed6\u57fa\u4e8eAVR \u7684Arduino \u6838\u5fc3\u677f, \u6211\u4eec\u63a8\u8350\u521d\u59cb\u8bbe\u7f6e\u3002\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5357\n\n\n\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660eCAN-BUS Shield\u7684\u5de5\u4f5c\u539f\u7406\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u89812\u5757CAN-BUS\u6269\u5c55\u677f\u4ee5\u53caArduino\u6216Seeeduino\u3002\n\n\n\n\nNote\n\n\n\u6b64\u793a\u4f8b\u57fa\u4e8e \nArduino IDE version 1.6.9\n.\n\n\n\n\n\u6b65\u9aa41: \u6211\u4eec\u9700\u8981\u51c6\u5907\u4e9b\u5565\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u529f\u80fd\n\n\n\u6570\u91cf\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nCAN-BUS Shield\n\n\nCAN \u603b\u7ebf\u901a\u4fe1\n\n\n2\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\nSeeeduino V4.2\n\n\n\u63a7\u5236\u5668\n\n\n2\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\u8df3\u7ebf\n\n\n\u8fde\u63a5\n\n\n2\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\u6b65\u9aa42: \u786c\u4ef6\u8fde\u63a5\n\n\n\u5c06\u6bcf\u5757CAN-BUS \u6269\u5c55\u677f\u90fd\u63d2\u5728Seeeduino V4.2\u4e0a\uff0c\u7136\u540e\u5982\u4e0b\u56fe\u6240\u793a\u4f7f\u7528\u4e24\u6839\u8df3\u7ebf\u5c06\u4e24\u5757CAN-BUS \u6269\u5c55\u677f\u8fde\u63a5\u8d77\u6765\u3002\n\n\n\n\n\n\nNote\n\n\n\n\nCAN_H \u8fde\u63a5\u5230 CAN_H, CAN_L \u8fde\u63a5\u5230 CAN_L\n\n\n\n\n\n\n\u6b65\u9aa43: \u8f6f\u4ef6\n\n\n\u8bf7\u9075\u5faa \n\u5982\u4f55\u5b89\u88c5Arduino\u5e93\n \u6765\u5b89\u88c5 CAN BUS shield library.\n\n\n\u70b9\u51fb\u4e0b\u9762\u56fe\u6807\u6765\u4e0b\u8f7dCAN BUS shield library\n\n\n\n\n\u4e0b\u8f7d\u5b8c\u6210\u540e\u5b89\u88c5\u5e93\u6587\u4ef6\u5230\u60a8\u7684Arduino\u3002\n\n\n\u4e00\u4e2a\u8282\u70b9(\u6b64\u5904\u4ee3\u8868Seeeduino + CAN_BUS \u6269\u5c55\u677f) \u4f5c\u4e3a\u4e3b\u673a\uff0c\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u4ece\u673a\u3002 \u4e3b\u673a\u5c06\u6301\u7eed\u5730\u5411\u4ece\u673a\u53d1\u9001\u6570\u636e\u3002\n\n\n\n\nNote\n\n\n\u5728\u4e0a\u4f20\u4ee3\u7801\u524d\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u673a\u3002\n\n\n\n\n\u6253\u5f00\u53d1\u9001\u793a\u4f8b\uff08\u6587\u4ef6\n\u793a\u4f8b\n CAN_BUS_Shield-master\n\u53d1\u9001\uff09\u5e76\u4e0a\u4f20\u5230\u4e3b\u673a\u3002\n\n\n\n\n\u6253\u5f00receive_check\u793a\u4f8b\uff08\u6587\u4ef6\n\u793a\u4f8b\n CAN_BUS_Shield-master\n receive_check\uff09\u5e76\u4e0a\u4f20\u5230\u4ece\u673a\u3002\n\n\n\n\n\u6b65\u9aa44: \u67e5\u770b\u7ed3\u679c\n\n\n\u6253\u5f00Arduino IDE\uff08\u4ece\u673a\uff09\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u5c06\u83b7\u5f97\u4ece\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\u3002\n\n\n\n\nAPIs\n\n\n\n\n1. \u8bbe\u7f6e\u6ce2\u7279\u7387\n\n\n\u8be5\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316CAN\u603b\u7ebf\u7cfb\u7edf\u7684\u6ce2\u7279\u7387\u3002\n\n\n\u53ef\u7528\u7684\u6ce2\u7279\u7387\u5217\u8868\u5982\u4e0b\uff1a\n\n\n#define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31K25BPS 5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83K3BPS  10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666kbps  17\n#define CAN_1000KBPS 18\n\n\n\n\n\n2. \u8bbe\u7f6e\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u8fc7\u6ee4\u5bc4\u5b58\u5668\n\n\n\u63a7\u5236\u5668\u82af\u7247\u4e0a\u67092\u4e2a\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c5\u4e2a\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4fdd\u8bc1\u4ece\u76ee\u6807\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002\u5b83\u4eec\u7279\u522b\u9002\u7528\u4e8e\u7531\u8bb8\u591a\u8282\u70b9\u7ec4\u6210\u7684\u5927\u578b\u7f51\u7edc\u3002\n\n\n\u6211\u4eec\u63d0\u4f9b\u4e24\u79cd\u51fd\u6570\u6765\u5229\u7528\u8fd9\u4e9b\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\u3002\u4ed6\u4eec\u662f\uff1a\n\n\nMask:\n\n\ninit_Mask(unsigned char num, unsigned char ext, unsigned char ulData);\n\n\n\n\n\nFilter:\n\n\ninit_Filt(unsigned char num, unsigned char ext, unsigned char ulData);\n\n\n\n\n\n\n\nnum\n num\u8868\u793a\u8981\u4f7f\u7528\u54ea\u4e2a\u5bc4\u5b58\u5668\u3002\u60a8\u53ef\u4ee5\u8bbe\u7f6e0\u62161\u9009\u62e9\u5c4f\u853d\u5bc4\u5b58\u5668\uff0c0\u81f35\u9009\u62e9\u8fc7\u6ee4\u5bc4\u5b58\u5668\u3002\n\n\next\n \u8868\u793a\u5e27\u7684\u72b6\u6001\u30020\u8868\u793a\u5b83\u662f\u6807\u51c6\u5e27\u30021\u8868\u793a\u5b83\u662f\u4e00\u4e2a\u6269\u5c55\u5e27\u3002\n\n\nulData\n \u4ee3\u8868\u5c4f\u853d\u5e27\u6216\u8fc7\u6ee4\u5e27\u7684\u5185\u5bb9\u3002\n\n\n\n\n3. \u6821\u9a8c\u63a5\u6536\n\n\nMCP2515\u53ef\u4ee5\u5728\u8f6e\u8be2\u6a21\u5f0f\u4e0b\u5de5\u4f5c\uff0c\u5176\u4e2d\u8f6f\u4ef6\u68c0\u67e5\u63a5\u6536\u5230\u7684\u5e27\uff0c\u6216\u4f7f\u7528\u9644\u52a0\u5f15\u811a\u6765\u53d1\u4fe1\u53f7\u901a\u77e5\u5e27\u5df2\u88ab\u63a5\u6536\u6216\u53d1\u9001\u5b8c\u6210\u3002\n\n\n\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8f6e\u8be2\u63a5\u6536\u5230\u7684\u5e27\u3002\n\n\nINT8U MCP_CAN::checkReceive(void);\n\n\n\n\n\n\u5982\u679c\u5e27\u5230\u8fbe\uff0c\u8be5\u51fd\u6570\u5c06\u8fd4\u56de1\uff0c\u5982\u679c\u6ca1\u6709\u5230\u8fbe\uff0c\u5219\u8fd4\u56de0\u3002\n\n\n4. \u83b7\u53d6 CAN ID\n\n\n\u5f53\u67d0\u4e9b\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u83b7\u53d6\u201c\u53d1\u9001\u201d\u8282\u70b9\u7684CAN ID\u3002\n\n\nINT32U MCP_CAN::getCanId(void)\n\n\n\n\n\n5. \u53d1\u9001\u6570\u636e\n\n\nCAN.sendMsgBuf(INT8U id, INT8U ext, INT8U len, data_buf);\n\n\n\n\n\n\u8fd9\u662f\u5c06\u6570\u636e\u53d1\u9001\u5230\u603b\u7ebf\u4e0a\u7684\u51fd\u6570\u3002\u5176\u4e2d\uff1a\n* \nid\n \u8868\u793a\u6570\u636e\u6765\u6e90\n* \next\n \u8868\u793a\u5e27\u7684\u72b6\u6001\u3002'0'\u8868\u793a\u6807\u51c6\u5e27\u3002'1'\u8868\u793a\u6269\u5c55\u5e27\u3002\n* \nlen\n \u8868\u793a\u6b64\u5e27\u7684\u957f\u5ea6\u3002\n* \ndata_buf\n \u662f\u6b64\u6d88\u606f\u7684\u5185\u5bb9\u3002\n\n\n\u4f8b\u5982\uff0c\u5728\u201c\u53d1\u9001\u201d\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6709\uff1a\n\n\nunsigned char stmp[8] = {0, 1, 2, 3, 4, 5, 6, 7};\nCAN.sendMsgBuf(0x00, 0, 8, stmp); //send out the message \nstmp\n to the bus and tell other devices this is a standard frame from 0x00.\n\n\n\n\n\n6. \u63a5\u6536\u6570\u636e\n\n\n\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u5728\u201c\u63a5\u6536\u201d\u8282\u70b9\u4e0a\u63a5\u6536\u6570\u636e\uff1a\n\n\nCAN.readMsgBuf(unsigned char len, unsigned char buf);\n\n\n\n\n\n\u5728\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u90fd\u8bbe\u7f6e\u597d\u7684\u6761\u4ef6\u4e0b\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u4f1a\u63a5\u6536\u6ee1\u8db3\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u7b5b\u9009\u6761\u4ef6\u7684\u6570\u636e\u5e27\u3002\n\n\n\n\nlen\n \u8868\u793a\u6570\u636e\u957f\u5ea6\u3002\n\n\nbuf\n \u662f\u5b58\u50a8\u6570\u636e\u7684\u4f4d\u7f6e\u3002\n\n\n\n\n\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6ce2\u7279\u7387\n\n\n\u6211\u4eec\u63d0\u4f9b\u4e86\u8bb8\u591a\u9891\u7e41\u4f7f\u7528\u7684\u6ce2\u7279\u7387\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n\n#define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31KBPS   5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83KBPS   10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666KBPS  17\n#define CAN_1000KBPS 18\n\n\n\n\n\n\u7136\u800c\uff0c\u60a8\u4ecd\u7136\u53ef\u80fd\u627e\u4e0d\u5230\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8f6f\u4ef6\u6765\u5e2e\u52a9\u60a8\u8ba1\u7b97\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002\n\n\n\u70b9\u51fb \n\u8fd9\u91cc\n \u6765\u4e0b\u8f7d\u8be5\u8f6f\u4ef6\u3002\n\n\n\n\n\n\nNote\n\n\n\u8fd9\u4e2a\u8f6f\u4ef6\u4ec5\u4ec5\u652f\u6301Windows\u7cfb\u7edf\uff0c\u5982\u679c\u60a8\u65e0\u6cd5\u6253\u5f00\u5b83\uff0c\u6b22\u8fce\u968f\u65f6\u901a\u8fc7\u90ae\u4ef6\u8054\u7cfb \n \u6765\u83b7\u53d6\u6280\u672f\u652f\u6301\u3002\n\n\n\n\n\u6253\u5f00\u8f6f\u4ef6\uff0c\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u8bbe\u7f6e\u4f60\u60f3\u8981\u7684\u6ce2\u7279\u7387\uff0c\u7136\u540e\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u7136\u540e\u70b9\u51fb\u8ba1\u7b97\u3002\n\n\n\u7136\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e9b\u6570\u636e\uff0ccfg1\uff0ccfg2\u548ccfg3\u3002\n\n\n\u60a8\u9700\u8981\u5728\u5e93\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u4ee3\u7801\u3002\n\n\n\u6253\u5f00 \nmcp_can_dfs.h\n, \u4f60\u9700\u8981\u5c06\u4e0b\u5217\u4ee3\u7801\u6dfb\u52a0\u5230\u7b2c272\u884c\u5de6\u53f3\u3002\n\n\n#define MCP_16MHz_xxxkBPS_CFG1 (cfg1)    // xxx is the baud rate you need\n#define MCP_16MHz_xxxkBPS_CFG2 (cfg2)\n#define MCP_16MHz_xxxkBPS_CFG3 (cfg2)\n\n\n\n\n\n\u7136\u540e\u8ba9\u6211\u4eec\u8df3\u8f6c\u5230\u7b2c390\u884c, \u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a\n\n\n#define CAN_xxxKBPS NUM       // xxx is the baudrate you need, and NUM is a number, you need to get a different from the other rates.\n\n\n\n\n\n\u6253\u5f00 \nmcp_can.cpp\n, \u8df3\u8f6c\u5230\u51fd\u6570**mcp2515_configRate**(\u5927\u81f4\u5728\u7b2c190\u884c), \u7136\u540e\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801:\n\n\ncase (CAN_xxxKBPS):\n    cfg1 = MCP_16MHz_xxxkBPS_CFG1;\n    cfg2 = MCP_16MHz_xxxkBPS_CFG2;\n    cfg3 = MCP_16MHz_xxxkBPS_CFG3;\n    break;\n\n\n\n\n\n\u7136\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u60a8\u9700\u8981\u7684\u6ce2\u7279\u7387\u4e86\u3002\u5f53\u60a8\u4f7f\u7528\u7684\u6ce2\u7279\u7387\u65f6\uff0c\u8bf7\u7ed9\u6211\u4eec\u4e00\u4e2agithub\u7684\u8bf7\u6c42\uff0c\u8fd9\u6837\u6211\u53ef\u4ee5\u6dfb\u52a0\u5230\u5e93\u6765\u5e2e\u52a9\u5176\u4ed6\u4eba\u3002\u611f\u8c22\uff01\n\n\n\u9879\u76ee\u5de5\u7a0b\n\n\n\n\n\u5982\u679c\u60a8\u60f3\u4f7f\u7528CAN-BUS \u6269\u5f20\u677f\u505a\u4e00\u4e9b\u9177\u70ab\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u53ef\u4f9b\u53c2\u8003\u3002\n\n\n\u5927\u4f17 CAN BUS \u6e38\u620f\n\n\n\n\nEver wanted to play a car/truck simulator with a real dashboard on your PC? Me too! I'm trying to control a VW Polo 6R dashboard via CAN Bus with an Arduino Uno and a Seeed CAN Bus Shield. Inspired by Silas Parker. Thanks Sepp and Is0-Mick for their great support!\n\n\n\n\n\u9ed1\u8fdb\u8f66\u8f7d CAN-BUS\n\n\n\n\nModern Vehicles all come equipped with a CAN-BUS Controller Area Network, Instead of having a million wires running back and forth from various devices in your car to the battery, its making use of a more clever system.\n\n\nAll electronic functions are connected to the TIPM, (Totally integrated Power Module), such as solenoids/relays to lock the doors or mini motors to wind the windows etc.\n\n\nFrom each node (IE Switch pod that controls your windows or electric door locks) it broadcasts a message across the CAN. When the TIPM detects a valid message it will react accordingly like, lock the doors, switch on lights and so on.\n\n\n\n\nFAQ\n\n\n\n\nQ1: \u6211\u65e0\u6cd5\u4ece\u5176\u4ed6CAN\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002\n\n\n\n\n\u68c0\u67e5\u8fde\u63a5\u662f\u5426\u6b63\u786e\n\n\n\u68c0\u67e5\u6ce2\u7279\u7387\u8bbe\u7f6e\u662f\u5426\u6b63\u786e\n\n\n\n\nQ2: \u4e32\u884c\u76d1\u89c6\u5668\u6253\u5370\u5931\u8d25\u3002\n\n\n*\u68c0\u67e5CS\u5f15\u811a\u8bbe\u7f6e\u662f\u5426\u4e0e\u4ee3\u7801\u5339\u914d\u3002\u5bf9\u4e8eCAN\u603b\u7ebf\u6269\u5c55\u677fV1.1 / 1.2\uff0cCS\u5f15\u811a\u8fde\u63a5\u5230D9\uff0c\u5176\u4ed6\u5219\u4e3aD10\u3002\n\n\nQ3. \u5982\u679c\u6211\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u6280\u672f\u652f\u6301\u3002\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728 Seeed \u8bba\u575b \nSeeed Forum\n \u7559\u8a00\u6216\u8005or \u7ed9\u4e0b\u5217\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6\u81f3 \n.\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\u3010PDF\u3011\nCAN-BUS Shield V1.2 Schmatics\n\n\n\u3010Eagle\u539f\u7406\u56fe\u3011\nSchematic of CAN-BUS Shield V1.2\n\n\n\u3010CAN_BUS_Shield\u5e93\u3011\nArduino Library for CAN-BUS Shield\n\n\n\u3010MCP2515\u6570\u636e\u624b\u518c\u3011\nMCP2515 datasheet\n\n\n\u3010MCP2551\u6570\u636e\u624b\u518c\u3011\nMCP2551 datasheet\n\n\n\u3010\u793a\u4f8b\u7a0b\u5e8f\u3011\nAn OBD Demo\n\n\n\u3010MCP2515\u6ce2\u7279\u7387\u8ba1\u7b97\u5de5\u5177\u3011\nMCP2515 Baud Rate Tool\n\n\n\u3010USB-CAN\u5206\u6790\u5668\u3011\nUSB-CAN Analyzer\n\n\n\u3010\u7ebf\u7f06DB9\u8f6cOBD2\u3011\nDB9 to OBD2 Cable", 
            "title": "CAN-BUS Shield V1.2"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_1", 
            "text": "CAN V2.0B\u901f\u5ea6\u9ad8\u8fbe1 Mb / s  SPI\u63a5\u53e3\u901f\u5ea6\u9ad8\u8fbe10 MHz  \u652f\u6301\u6807\u51c6\uff0811\u4f4d\uff09\u548c\u6269\u5c55\uff0829\u4f4d\uff09\u6570\u636e\u4ee5\u53ca\u8fdc\u7a0b\u5e27  \u4e24\u4e2a\u5177\u6709\u4f18\u5148\u6d88\u606f\u5b58\u50a8\u7684\u63a5\u6536\u7f13\u51b2\u533a  \u5de5\u4e1a\u6807\u51c6DB-9\u8fde\u63a5\u5668  LED\u6307\u793a\u706f    Note  CAN BUS \u53ef\u4ee5\u826f\u597d\u5730\u517c\u5bb9Arduino UNO (ATmega328), Arduino Mega (ATmega1280/2560) \u3001 Arduino Leonardo (ATmega32U4).", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_2", 
            "text": "DB9 Interface  - to connect to OBDII Interface via a DBG-OBD Cable.  V_OBD  - It gets power from OBDII Interface (from DB9)  Led Indicator :  PWR : power  TX : blink when the data is sending  RX : blink when there's data receiving  INT : data interrupt    Terminal  - CAN_H and CAN_L  Arduino UNO pin out  Serial Grove connector  I2C Grove connector  ICSP pins  IC  - MCP2551, a high-speed CAN transceiver ( datasheet )  IC  - MCP2515, stand-alone CAN controller with SPI interface ( datasheet )    Warning   \u5f53\u60a8\u5728\u4e00\u4e2a\u7f51\u7edc\u4e2d\u4f7f\u7528\u4e24\u4e2a\u4ee5\u4e0a\u7684CAN\u603b\u7ebf\u6269\u5c55\u677f\u65f6\uff0c\u5e94\u8003\u8651\u963b\u6297\u3002\u60a8\u5e94\u8be5\u7528\u5200\u5207\u5272PCB\u4e2d\u7684P1\uff0c\u6216\u8005\u5e72\u8106\u53d6\u4e0bPCB\u4e0a\u7684R3\u3002    \u7ba1\u811a\u56fe    Note   \u7a7a\u95f2\u9488\u53ef\u7528\u4e8e\u5176\u4ed6\u7528\u9014\u3002    DB9 OBDii \u63a5\u53e3   CS \u5f15\u811a  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cV1.2\u7684SPI_CS\u5f15\u811a\u8fde\u63a5\u5230D9\u3002\u5982\u679c\u8981\u66f4\u6539\u4e3aD10\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002   \u6b65\u9aa41\uff1a\u67e5\u770bPCB\u7684\u80cc\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u540d\u4e3aCS\u7684\u710a\u76d8\u3002     \u6b65\u9aa42: \u5272\u65ad\u710a\u76d89\u548c\u4e2d\u95f4\u710a\u76d8\u4e4b\u95f4\u7684\u5bfc\u7ebf     \u6b65\u9aa43: \u5c06\u4e2d\u95f4\u710a\u76d8\u548c\u710a\u76d810\u710a\u63a5\u5728\u4e00\u8d77\u3002     Warning   \u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002    SPI \u5f15\u811a  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSPI\u5f15\u811a\uff08SCK\uff0cMISO\uff0cMOSI\uff09\u88ab\u8fde\u63a5\u5230ICSP\u5f15\u811a\u3002\u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u6838\u5fc3\u677f\uff0cSPI\u5f15\u811a\u4f4d\u4e8eD11\u301cD13\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u9700\u8981\u5bf9PCB\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u3002\u770b\u770bPCB\u7684\u80cc\u9762\uff0c\u6709\u4e09\u4e2a\u710a\u76d8\uff0cMOSI\uff0cMISO\u548cSCK\uff0c\u5b83\u4eec\u9ed8\u8ba4\u8fde\u63a5\u5230A\u3002\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u66f4\u6539\u4e3aB\u3002   Note   \u5bf9\u4e8eArduino UNO, Arduino Mega, Arduino Leonardo \u4ee5\u53ca\u4efb\u4f55\u5176\u4ed6\u57fa\u4e8eAVR \u7684Arduino \u6838\u5fc3\u677f, \u6211\u4eec\u63a8\u8350\u521d\u59cb\u8bbe\u7f6e\u3002     Warning   \u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_3", 
            "text": "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660eCAN-BUS Shield\u7684\u5de5\u4f5c\u539f\u7406\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u89812\u5757CAN-BUS\u6269\u5c55\u677f\u4ee5\u53caArduino\u6216Seeeduino\u3002   Note  \u6b64\u793a\u4f8b\u57fa\u4e8e  Arduino IDE version 1.6.9 .   \u6b65\u9aa41: \u6211\u4eec\u9700\u8981\u51c6\u5907\u4e9b\u5565     \u540d\u79f0  \u529f\u80fd  \u6570\u91cf  \u8d2d\u4e70\u94fe\u63a5      CAN-BUS Shield  CAN \u603b\u7ebf\u901a\u4fe1  2  \u8d2d\u4e70\u94fe\u63a5    Seeeduino V4.2  \u63a7\u5236\u5668  2  \u8d2d\u4e70\u94fe\u63a5    \u8df3\u7ebf  \u8fde\u63a5  2  \u8d2d\u4e70\u94fe\u63a5     \u6b65\u9aa42: \u786c\u4ef6\u8fde\u63a5  \u5c06\u6bcf\u5757CAN-BUS \u6269\u5c55\u677f\u90fd\u63d2\u5728Seeeduino V4.2\u4e0a\uff0c\u7136\u540e\u5982\u4e0b\u56fe\u6240\u793a\u4f7f\u7528\u4e24\u6839\u8df3\u7ebf\u5c06\u4e24\u5757CAN-BUS \u6269\u5c55\u677f\u8fde\u63a5\u8d77\u6765\u3002    Note   CAN_H \u8fde\u63a5\u5230 CAN_H, CAN_L \u8fde\u63a5\u5230 CAN_L    \u6b65\u9aa43: \u8f6f\u4ef6  \u8bf7\u9075\u5faa  \u5982\u4f55\u5b89\u88c5Arduino\u5e93  \u6765\u5b89\u88c5 CAN BUS shield library.  \u70b9\u51fb\u4e0b\u9762\u56fe\u6807\u6765\u4e0b\u8f7dCAN BUS shield library   \u4e0b\u8f7d\u5b8c\u6210\u540e\u5b89\u88c5\u5e93\u6587\u4ef6\u5230\u60a8\u7684Arduino\u3002  \u4e00\u4e2a\u8282\u70b9(\u6b64\u5904\u4ee3\u8868Seeeduino + CAN_BUS \u6269\u5c55\u677f) \u4f5c\u4e3a\u4e3b\u673a\uff0c\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u4ece\u673a\u3002 \u4e3b\u673a\u5c06\u6301\u7eed\u5730\u5411\u4ece\u673a\u53d1\u9001\u6570\u636e\u3002   Note  \u5728\u4e0a\u4f20\u4ee3\u7801\u524d\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u673a\u3002   \u6253\u5f00\u53d1\u9001\u793a\u4f8b\uff08\u6587\u4ef6 \u793a\u4f8b  CAN_BUS_Shield-master \u53d1\u9001\uff09\u5e76\u4e0a\u4f20\u5230\u4e3b\u673a\u3002   \u6253\u5f00receive_check\u793a\u4f8b\uff08\u6587\u4ef6 \u793a\u4f8b  CAN_BUS_Shield-master  receive_check\uff09\u5e76\u4e0a\u4f20\u5230\u4ece\u673a\u3002   \u6b65\u9aa44: \u67e5\u770b\u7ed3\u679c  \u6253\u5f00Arduino IDE\uff08\u4ece\u673a\uff09\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u5c06\u83b7\u5f97\u4ece\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\u3002", 
            "title": "\u5165\u95e8\u6307\u5357"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#apis", 
            "text": "", 
            "title": "APIs"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#1", 
            "text": "\u8be5\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316CAN\u603b\u7ebf\u7cfb\u7edf\u7684\u6ce2\u7279\u7387\u3002  \u53ef\u7528\u7684\u6ce2\u7279\u7387\u5217\u8868\u5982\u4e0b\uff1a  #define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31K25BPS 5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83K3BPS  10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666kbps  17\n#define CAN_1000KBPS 18", 
            "title": "1. \u8bbe\u7f6e\u6ce2\u7279\u7387"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#2", 
            "text": "\u63a7\u5236\u5668\u82af\u7247\u4e0a\u67092\u4e2a\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c5\u4e2a\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4fdd\u8bc1\u4ece\u76ee\u6807\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002\u5b83\u4eec\u7279\u522b\u9002\u7528\u4e8e\u7531\u8bb8\u591a\u8282\u70b9\u7ec4\u6210\u7684\u5927\u578b\u7f51\u7edc\u3002  \u6211\u4eec\u63d0\u4f9b\u4e24\u79cd\u51fd\u6570\u6765\u5229\u7528\u8fd9\u4e9b\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\u3002\u4ed6\u4eec\u662f\uff1a  Mask:  init_Mask(unsigned char num, unsigned char ext, unsigned char ulData);  Filter:  init_Filt(unsigned char num, unsigned char ext, unsigned char ulData);   num  num\u8868\u793a\u8981\u4f7f\u7528\u54ea\u4e2a\u5bc4\u5b58\u5668\u3002\u60a8\u53ef\u4ee5\u8bbe\u7f6e0\u62161\u9009\u62e9\u5c4f\u853d\u5bc4\u5b58\u5668\uff0c0\u81f35\u9009\u62e9\u8fc7\u6ee4\u5bc4\u5b58\u5668\u3002  ext  \u8868\u793a\u5e27\u7684\u72b6\u6001\u30020\u8868\u793a\u5b83\u662f\u6807\u51c6\u5e27\u30021\u8868\u793a\u5b83\u662f\u4e00\u4e2a\u6269\u5c55\u5e27\u3002  ulData  \u4ee3\u8868\u5c4f\u853d\u5e27\u6216\u8fc7\u6ee4\u5e27\u7684\u5185\u5bb9\u3002", 
            "title": "2. \u8bbe\u7f6e\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u8fc7\u6ee4\u5bc4\u5b58\u5668"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#3", 
            "text": "MCP2515\u53ef\u4ee5\u5728\u8f6e\u8be2\u6a21\u5f0f\u4e0b\u5de5\u4f5c\uff0c\u5176\u4e2d\u8f6f\u4ef6\u68c0\u67e5\u63a5\u6536\u5230\u7684\u5e27\uff0c\u6216\u4f7f\u7528\u9644\u52a0\u5f15\u811a\u6765\u53d1\u4fe1\u53f7\u901a\u77e5\u5e27\u5df2\u88ab\u63a5\u6536\u6216\u53d1\u9001\u5b8c\u6210\u3002  \u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8f6e\u8be2\u63a5\u6536\u5230\u7684\u5e27\u3002  INT8U MCP_CAN::checkReceive(void);  \u5982\u679c\u5e27\u5230\u8fbe\uff0c\u8be5\u51fd\u6570\u5c06\u8fd4\u56de1\uff0c\u5982\u679c\u6ca1\u6709\u5230\u8fbe\uff0c\u5219\u8fd4\u56de0\u3002", 
            "title": "3. \u6821\u9a8c\u63a5\u6536"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#4-can-id", 
            "text": "\u5f53\u67d0\u4e9b\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u83b7\u53d6\u201c\u53d1\u9001\u201d\u8282\u70b9\u7684CAN ID\u3002  INT32U MCP_CAN::getCanId(void)", 
            "title": "4. \u83b7\u53d6 CAN ID"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#5", 
            "text": "CAN.sendMsgBuf(INT8U id, INT8U ext, INT8U len, data_buf);  \u8fd9\u662f\u5c06\u6570\u636e\u53d1\u9001\u5230\u603b\u7ebf\u4e0a\u7684\u51fd\u6570\u3002\u5176\u4e2d\uff1a\n*  id  \u8868\u793a\u6570\u636e\u6765\u6e90\n*  ext  \u8868\u793a\u5e27\u7684\u72b6\u6001\u3002'0'\u8868\u793a\u6807\u51c6\u5e27\u3002'1'\u8868\u793a\u6269\u5c55\u5e27\u3002\n*  len  \u8868\u793a\u6b64\u5e27\u7684\u957f\u5ea6\u3002\n*  data_buf  \u662f\u6b64\u6d88\u606f\u7684\u5185\u5bb9\u3002  \u4f8b\u5982\uff0c\u5728\u201c\u53d1\u9001\u201d\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6709\uff1a  unsigned char stmp[8] = {0, 1, 2, 3, 4, 5, 6, 7};\nCAN.sendMsgBuf(0x00, 0, 8, stmp); //send out the message  stmp  to the bus and tell other devices this is a standard frame from 0x00.", 
            "title": "5. \u53d1\u9001\u6570\u636e"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#6", 
            "text": "\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u5728\u201c\u63a5\u6536\u201d\u8282\u70b9\u4e0a\u63a5\u6536\u6570\u636e\uff1a  CAN.readMsgBuf(unsigned char len, unsigned char buf);  \u5728\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u90fd\u8bbe\u7f6e\u597d\u7684\u6761\u4ef6\u4e0b\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u4f1a\u63a5\u6536\u6ee1\u8db3\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u7b5b\u9009\u6761\u4ef6\u7684\u6570\u636e\u5e27\u3002   len  \u8868\u793a\u6570\u636e\u957f\u5ea6\u3002  buf  \u662f\u5b58\u50a8\u6570\u636e\u7684\u4f4d\u7f6e\u3002", 
            "title": "6. \u63a5\u6536\u6570\u636e"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_4", 
            "text": "\u6211\u4eec\u63d0\u4f9b\u4e86\u8bb8\u591a\u9891\u7e41\u4f7f\u7528\u7684\u6ce2\u7279\u7387\uff0c\u5982\u4e0b\u6240\u793a\uff1a  #define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31KBPS   5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83KBPS   10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666KBPS  17\n#define CAN_1000KBPS 18  \u7136\u800c\uff0c\u60a8\u4ecd\u7136\u53ef\u80fd\u627e\u4e0d\u5230\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8f6f\u4ef6\u6765\u5e2e\u52a9\u60a8\u8ba1\u7b97\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002  \u70b9\u51fb  \u8fd9\u91cc  \u6765\u4e0b\u8f7d\u8be5\u8f6f\u4ef6\u3002    Note  \u8fd9\u4e2a\u8f6f\u4ef6\u4ec5\u4ec5\u652f\u6301Windows\u7cfb\u7edf\uff0c\u5982\u679c\u60a8\u65e0\u6cd5\u6253\u5f00\u5b83\uff0c\u6b22\u8fce\u968f\u65f6\u901a\u8fc7\u90ae\u4ef6\u8054\u7cfb   \u6765\u83b7\u53d6\u6280\u672f\u652f\u6301\u3002   \u6253\u5f00\u8f6f\u4ef6\uff0c\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u8bbe\u7f6e\u4f60\u60f3\u8981\u7684\u6ce2\u7279\u7387\uff0c\u7136\u540e\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u7136\u540e\u70b9\u51fb\u8ba1\u7b97\u3002  \u7136\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e9b\u6570\u636e\uff0ccfg1\uff0ccfg2\u548ccfg3\u3002  \u60a8\u9700\u8981\u5728\u5e93\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u4ee3\u7801\u3002  \u6253\u5f00  mcp_can_dfs.h , \u4f60\u9700\u8981\u5c06\u4e0b\u5217\u4ee3\u7801\u6dfb\u52a0\u5230\u7b2c272\u884c\u5de6\u53f3\u3002  #define MCP_16MHz_xxxkBPS_CFG1 (cfg1)    // xxx is the baud rate you need\n#define MCP_16MHz_xxxkBPS_CFG2 (cfg2)\n#define MCP_16MHz_xxxkBPS_CFG3 (cfg2)  \u7136\u540e\u8ba9\u6211\u4eec\u8df3\u8f6c\u5230\u7b2c390\u884c, \u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a  #define CAN_xxxKBPS NUM       // xxx is the baudrate you need, and NUM is a number, you need to get a different from the other rates.  \u6253\u5f00  mcp_can.cpp , \u8df3\u8f6c\u5230\u51fd\u6570**mcp2515_configRate**(\u5927\u81f4\u5728\u7b2c190\u884c), \u7136\u540e\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801:  case (CAN_xxxKBPS):\n    cfg1 = MCP_16MHz_xxxkBPS_CFG1;\n    cfg2 = MCP_16MHz_xxxkBPS_CFG2;\n    cfg3 = MCP_16MHz_xxxkBPS_CFG3;\n    break;  \u7136\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u60a8\u9700\u8981\u7684\u6ce2\u7279\u7387\u4e86\u3002\u5f53\u60a8\u4f7f\u7528\u7684\u6ce2\u7279\u7387\u65f6\uff0c\u8bf7\u7ed9\u6211\u4eec\u4e00\u4e2agithub\u7684\u8bf7\u6c42\uff0c\u8fd9\u6837\u6211\u53ef\u4ee5\u6dfb\u52a0\u5230\u5e93\u6765\u5e2e\u52a9\u5176\u4ed6\u4eba\u3002\u611f\u8c22\uff01", 
            "title": "\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6ce2\u7279\u7387"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_5", 
            "text": "\u5982\u679c\u60a8\u60f3\u4f7f\u7528CAN-BUS \u6269\u5f20\u677f\u505a\u4e00\u4e9b\u9177\u70ab\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u53ef\u4f9b\u53c2\u8003\u3002", 
            "title": "\u9879\u76ee\u5de5\u7a0b"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#can-bus", 
            "text": "Ever wanted to play a car/truck simulator with a real dashboard on your PC? Me too! I'm trying to control a VW Polo 6R dashboard via CAN Bus with an Arduino Uno and a Seeed CAN Bus Shield. Inspired by Silas Parker. Thanks Sepp and Is0-Mick for their great support!", 
            "title": "\u5927\u4f17 CAN BUS \u6e38\u620f"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#can-bus_1", 
            "text": "Modern Vehicles all come equipped with a CAN-BUS Controller Area Network, Instead of having a million wires running back and forth from various devices in your car to the battery, its making use of a more clever system.  All electronic functions are connected to the TIPM, (Totally integrated Power Module), such as solenoids/relays to lock the doors or mini motors to wind the windows etc.  From each node (IE Switch pod that controls your windows or electric door locks) it broadcasts a message across the CAN. When the TIPM detects a valid message it will react accordingly like, lock the doors, switch on lights and so on.", 
            "title": "\u9ed1\u8fdb\u8f66\u8f7d CAN-BUS"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#faq", 
            "text": "Q1: \u6211\u65e0\u6cd5\u4ece\u5176\u4ed6CAN\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002   \u68c0\u67e5\u8fde\u63a5\u662f\u5426\u6b63\u786e  \u68c0\u67e5\u6ce2\u7279\u7387\u8bbe\u7f6e\u662f\u5426\u6b63\u786e   Q2: \u4e32\u884c\u76d1\u89c6\u5668\u6253\u5370\u5931\u8d25\u3002  *\u68c0\u67e5CS\u5f15\u811a\u8bbe\u7f6e\u662f\u5426\u4e0e\u4ee3\u7801\u5339\u914d\u3002\u5bf9\u4e8eCAN\u603b\u7ebf\u6269\u5c55\u677fV1.1 / 1.2\uff0cCS\u5f15\u811a\u8fde\u63a5\u5230D9\uff0c\u5176\u4ed6\u5219\u4e3aD10\u3002  Q3. \u5982\u679c\u6211\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u6280\u672f\u652f\u6301\u3002   \u60a8\u53ef\u4ee5\u5728 Seeed \u8bba\u575b  Seeed Forum  \u7559\u8a00\u6216\u8005or \u7ed9\u4e0b\u5217\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6\u81f3  .", 
            "title": "FAQ"
        }, 
        {
            "location": "/CAN-BUS_Shield_V1.2/#_6", 
            "text": "\u3010PDF\u3011 CAN-BUS Shield V1.2 Schmatics  \u3010Eagle\u539f\u7406\u56fe\u3011 Schematic of CAN-BUS Shield V1.2  \u3010CAN_BUS_Shield\u5e93\u3011 Arduino Library for CAN-BUS Shield  \u3010MCP2515\u6570\u636e\u624b\u518c\u3011 MCP2515 datasheet  \u3010MCP2551\u6570\u636e\u624b\u518c\u3011 MCP2551 datasheet  \u3010\u793a\u4f8b\u7a0b\u5e8f\u3011 An OBD Demo  \u3010MCP2515\u6ce2\u7279\u7387\u8ba1\u7b97\u5de5\u5177\u3011 MCP2515 Baud Rate Tool  \u3010USB-CAN\u5206\u6790\u5668\u3011 USB-CAN Analyzer  \u3010\u7ebf\u7f06DB9\u8f6cOBD2\u3011 DB9 to OBD2 Cable", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/", 
            "text": "CAN-BUS\n \u662f\u4e00\u79cd\u666e\u901a\u7684\u5de5\u4e1a\u603b\u7ebf\uff0c\u7531\u4e8e\u5176\u957f\u8ddd\u79bb\uff0c\u4e2d\u7b49\u901a\u4fe1\u901f\u5ea6\u548c\u9ad8\u53ef\u9760\u6027\u3002\u5b83\u901a\u5e38\u5728\u73b0\u4ee3\u673a\u5e8a\u4e0a\u5e94\u7528\uff0c\u4f8b\u5982\u6c7d\u8f66\u8bca\u65ad\u603b\u7ebf\u3002\n\n\n\u8be5CAN\u603b\u7ebf\u6269\u5c55\u677f\u91c7\u7528MCP2515 CAN\u603b\u7ebf\u63a7\u5236\u5668\u4e0eSPI\u63a5\u53e3\u548cMCP2551 CAN\u6536\u53d1\u5668\uff0c\u4e3a\u60a8\u63d0\u4f9bArduino / Seeeduino CAN-BUS\u51fd\u6570\u3002\u901a\u8fc7\u6dfb\u52a0OBD-II\u8f6c\u6362\u5668\u7535\u7f06\u5e76\u5bfc\u5165OBD-II\u5e93\uff0c\u5c31\u53ef\u4ee5\u6784\u5efa\u677f\u8f7d\u8bca\u65ad\u8bbe\u5907\u6216\u6570\u636e\u8bb0\u5f55\u5668\u3002\n\n\n\u4e4b\u524d\uff0c\u6211\u4eec\u5236\u4f5c\u4e86\u4e24\u4e2a\u7248\u672c\u7684CAN-BUS Shield\uff0c\u5373V1.0\u548cV1.2\u3002 \u5b83\u4eec\u90fd\u5e7f\u53d7\u6211\u4eec\u7528\u6237\u7684\u597d\u8bc4\u3002 \u4e3a\u4e86\u505a\u5f97\u66f4\u597d\uff0c\u51e0\u4e2a\u6708\u524d\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u5173\u4e8eCAN-BUS Shield V1.2\u7684\u8c03\u7814\uff0c\u6536\u5230\u4e86\u8bb8\u591a\u6709\u4ef7\u503c\u7684\u5efa\u8bae\uff08\u611f\u8c22\u6240\u6709\u53cd\u9988\u7ed9\u6211\u4eec\u7684\u7528\u6237\uff09\u3002\u6211\u4eec\u5341\u5206\u91cd\u89c6\u8fd9\u4e9b\u7528\u6237\u7684\u610f\u89c1\uff0c\u6211\u4eec\u51b3\u5b9a\u8fdb\u884c\u66f4\u65b0\u3002\u4e8e\u662f\uff0c\u65b0\u4e00\u4ee3\u4ea7\u54c1\u5c31\u6b64\u5b55\u80b2\u800c\u751f \u2014\u2014 \nCAN-BUS Shield V2\n\n\n\u7248\u672c\n\n\n\u672c\u6587\u6863\u9002\u7528\u4e8e\u4ee5\u4e0b\u7248\u672c\u7684\u4ea7\u54c1\uff1a:\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nCAN BUS Shield V1.0\n\n\n2012 11\u6708 14\u53f7\n\n\n \u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nCAN BUS Shield V1.1\n\n\n2013 8\u670810\u53f7\n\n\n \u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nCAN BUS Shield V1.2\n\n\n2015 2\u67085\u53f7\n\n\n  \u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\nCAN BUS Shield V2.0\n\n\n2017 8\u67081\u53f7\n\n\n  \u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u7248\u672c\u5bf9\u6bd4\n\n\n\n\n\n\n\n\n\u7279\u6027\n\n\nV1.2\n\n\nV2.0\n\n\n\n\n\n\n\n\n\n\nCAN-BUS \u63a7\u5236\u82af\u7247\n\n\nMCP2515\n\n\nMCP2515\n\n\n\n\n\n\nCAN \u6536\u53d1\u82af\u7247\n\n\nMCP2551\n\n\nMCP2551\n\n\n\n\n\n\n\u9ed8\u8ba4 OBD \u5f15\u811a\u63a5\u53e3\n\n\n\u6807\u51c6 OBD-II\n\n\n\u6807\u51c6 OBD-II\n\n\n\n\n\n\n\u6807\u51c6 CAN \u5f15\u811a\u63a5\u53e3\n\n\n\u4e0d\u517c\u5bb9\n\n\n\u517c\u5bb9 (\u8df3\u7ebf)\n\n\n\n\n\n\nINT Pin\n\n\n\u4e0d\u53ef\u6539\u53d8\n\n\nD2 \u6216\u8005 D3 (\u8df3\u7ebf)\n\n\n\n\n\n\nTF card \u5957\u7684CS\u5f15\u811a\n\n\n\u6ca1\u6709 TF card \u5361\u5957\n\n\nD4 \u6216\u8005 D5 (\u8df3\u7ebf)\n\n\n\n\n\n\nGrove \u4e32\u884c\u63a5\u53e3\n\n\nD0/D1\n\n\nA0/A1\n\n\n\n\n\n\nI2C Grove\n\n\nA4/A5\n\n\nSDA/SCL\n\n\n\n\n\n\nGrove \u63a5\u53e3\u65b9\u5411\n\n\n\u5782\u76f4\n\n\n\u6c34\u5e73\n\n\n\n\n\n\nP1 \u710a\u76d8\n\n\n\u6269\u5c55\u677f\u6b63\u9762\n\n\n\u6269\u5c55\u677f\u53cd\u9762\n\n\n\n\n\n\n\n\nCAN BUS Shield V2.0 \u7684\u65b0\u7279\u6027\n\n\n\u786c\u4ef6\n\n\n\n\n\u539f\u672cDB9\u63a5\u53e3\u662fOBD\u6807\u51c6\uff0c\u901a\u8fc7\u589e\u52a0\u8df3\u7ebf\uff0c\u517c\u5bb9CAN OPEN\u6807\u51c6\n\n\nINT\u901a\u8fc7\u4e00\u4e2a\u8df3\u7ebf\u9009\u62e9D2\u6216\u8005D3\n\n\n\u589e\u52a0SD\u5361\u5ea7\u5b50\uff0cCS\u9ed8\u8ba4\u63a5\u5230D4\uff0c\u53ef\u4ee5\u901a\u8fc7\u8df3\u7ebf\u5230D5\uff08\u4f7f\u7528stalker\u7684sd\u5ea7\u5b50\uff09\n\n\nSerial\u7684Grove\u5ea7\u5b50\u6539\u5230A0/A1 \uff08\u8003\u8651\u5230D0/D1\u901a\u5e38\u9700\u8981\u7528\u6765\u4e0b\u8f7d\u4ee3\u7801\uff0c\u6ca1\u6709\u529e\u6cd5\u63a5\u5176\u4ed6\u6a21\u5757\uff0cA0/A1\u65e2\u53ef\u4ee5\u5f53\u505a\u6a21\u62df\u53e3\uff0c\u4e5f\u53ef\u4ee5\u5f53\u505a\u6570\u5b57\u53e3\uff0c\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u65b9\u4fbf\uff09\n\n\nI2C\u7684\u8fde\u7ebf\u4e0d\u518d\u63a5\u5230A4/A5\uff0c\u6539\u5230\u6807\u51c6\u5f15\u811a\u7684SDA/SCL\n\n\n\u4e24\u4e2aGrove\u5ea7\u5b50\u8eba\u7740\uff0cICSP\u4e24\u8fb9\u5404\u4e00\u4e2a\n\n\nP1\u653e\u5230\u677f\u5b50\u5e95\u4e0b\uff0c\u65b9\u4fbf\u5207\u5272\u548c\u710a\u63a5\n\n\n\u5176\u4ed6\u57fa\u4e8e\u7535\u5b50/\u6210\u672c\u65b9\u9762\u7684\u4f18\u5316\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u589e\u52a0\u8bfb\u53d6\u6c7d\u8f66\u6570\u636e\u7684\u51fd\u6570\u53caexamples\n\n\n\u589e\u52a0SD\u5361\u7684\u8bfb\u53d6\n\n\n\u5176\u4ed6bug\u4fee\u590d\u4ee5\u53ca\u4f18\u5316\n\n\n\u589e\u52a0\u628a\u6c7d\u8f66\u6570\u636e\u5b58\u50a8\u5230SD\u5361\u7684example\n\n\n\n\nD-Sub CANbus \u5f15\u811a\u63a5\u53e3\n\n\n\n\n\n\n\n\npin#\n\n\n\u4fe1\u53f7\u540d\u79f0\n\n\n\u4fe1\u53f7\u63cf\u8ff0\n\n\n\n\n\n\n\n\n\n\n1\n\n\nReserved\n\n\nUpgrade Path\n\n\n\n\n\n\n2\n\n\nCAN_L\n\n\nDominant Low\n\n\n\n\n\n\n3\n\n\nCAN_GND\n\n\n\u5730\n\n\n\n\n\n\n4\n\n\nReserved\n\n\nUpgrade Path\n\n\n\n\n\n\n5\n\n\nCAN_SHLD\n\n\n\u6269\u5c55\u677f, \u53ef\u9009\n\n\n\n\n\n\n6\n\n\nGND\n\n\n\u5730\uff0c\u53ef\u9009\n\n\n\n\n\n\n7\n\n\nCAN_H\n\n\nDominant High\n\n\n\n\n\n\n8\n\n\nReserved\n\n\nUpgrade Path\n\n\n\n\n\n\n9\n\n\nCAN_V+\n\n\nPower, \u53ef\u9009\n\n\n\n\n\n\n\n\n\u66ff\u4ee3\u65b9\u6848\n\n\n\u5982\u679c\u60a8\u7684\u9879\u76ee\u662f\u7a7a\u95f4\u6709\u9650\u7684\uff0c\u9664\u4e86CAN-BUS \u4e4b\u5916\uff0c\u4e0d\u9700\u8981\u5176\u4ed6\u529f\u80fd\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2aGrove CAN-BUS\u6a21\u5757\uff0c\u4e0eArduino\u517c\u5bb9\uff0c\u66f4\u7d27\u51d1\uff0c\u6027\u4ef7\u6bd4\u66f4\u9ad8\uff0c\u53c2\u8003\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u3002\n\n\n\n\n\u5982\u679c\u6211\u60f3\u5c06\u8fd9\u4e2a\u6269\u5c55\u677f\u8fde\u63a5\u5230\u6211\u7684\u8f66\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\n\n\u5982\u679c\u60a8\u60f3\u8981\u8bfb\u53d6\u6570\u636e\u6216\u63a7\u5236\u6c7d\u8f66\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528OBD\n DB9\u7535\u7f06\uff0c\u8be5\u7535\u7f06\u5c06\u8f7b\u677e\u5b8c\u6210OBD\u8fde\u63a5\u5668\u5230DB9\u8fde\u63a5\u5668\u7684\u8f6c\u6362\u3002\u8be5\u7535\u7f06\u4e5f\u53ef\u4ee5\u8fde\u63a5\u5230\u5177\u6709OBD\u8fde\u63a5\u5668\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u6211\u4eec\u5728\u7535\u7f06\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5f00\u5173\uff0c\u65b9\u4fbf\u60a8\u7684\u63a7\u5236\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u6807\u8d2d\u4e70\u8be5\u7535\u7f06\u3002\n\n\n\n\nUSB-CAN\u5206\u6790\u4eea\n\n\n\u5982\u679c\u60a8\u9700\u8981\u4e00\u4e2aCAN\u603b\u7ebf\u5206\u6790\u4eea\u6765\u68c0\u6d4b\u60a8\u7684CAN\u603b\u7ebf\uff0c\u6211\u4eec\u63a8\u8350\u4e0b\u9762\u7684 \nUSB-CAN Analyzer\n \u3002(\u540c\u6837\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u7247\u8d2d\u4e70)\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nCAN V2.0 \u901f\u5ea6\u9ad8\u8fbe1 Mb / s\n\n\nSPI\u63a5\u53e3\u901f\u5ea6\u9ad8\u8fbe10 MHz\n\n\n\u652f\u6301\u6807\u51c6\uff0811\u4f4d\uff09\u548c\u6269\u5c55\uff0829\u4f4d\uff09\u6570\u636e\u4ee5\u53ca\u8fdc\u7a0b\u5e27\n\n\n\u4e24\u4e2a\u5177\u6709\u4f18\u5148\u6d88\u606f\u5b58\u50a8\u7684\u63a5\u6536\u7f13\u51b2\u533a\n\n\n\u5de5\u4e1a\u6807\u51c6DB-9\u8fde\u63a5\u5668\n\n\nOBD-II\u548c\u6807\u51c6CAN\u5f15\u811a\u517c\u5bb9\u53ef\u9009\n\n\n\u53ef\u9009TF card CS\u5f15\u811a\n\n\n\u53ef\u9009\u62e9INT\u5f15\u811a\n\n\n\u65b0\u578b\u6309\u538b\u63a5\u7ebf\u7aef\u5b50\u6613\u4e8e\u8fde\u63a5CAN_H \u548c CAN_L\n\n\n\u4e24\u4e2aGrove\u8fde\u63a5\u5668\uff08I2C\u548cUART\uff09\n\n\nLED\u6307\u793a\u706f\n\n\n\n\n\n\nNote\n\n\nCAN BUS \u53ef\u4ee5\u826f\u597d\u5730\u517c\u5bb9Arduino UNO (ATmega328), Arduino Mega (ATmega1280/2560) \u3001 Arduino Leonardo (ATmega32U4).\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\nDB9 \u63a5\u53e3\n - \u901a\u8fc7DBG-OBD\u7ebf\u7f06\u6765\u8fde\u63a5OBDII \u63a5\u53e3\u3002\n\n\nV_OBD\n - \u901a\u8fc7OBDII \u63a5\u53e3\u83b7\u53d6\u7535\u6e90 (\u6765\u7740 DB9)\n\n\nLed \u6307\u793a\u5668\n:\n\n\nPWR\n: \u7535\u6e90\n\n\nTX\n: \u53d1\u9001\u6570\u636e\u65f6\u95ea\u70c1\n\n\nRX\n: \u63a5\u6536\u6570\u636e\u65f6\u95ea\u70c1\n\n\nINT\n: \u6570\u636e\u4e2d\u65ad\n\n\n\n\n\n\n\u63a5\u7ebf\u7aef\u5b50\n - CAN_H \u548c CAN_L\n\n\nArduino UNO \u5f15\u811a\u63a5\u53e3\n\n\nGrove \u4e32\u884c\u8fde\u63a5\u5668\n\n\n**Grove I2C\u8fde\u63a5\u5668 **\n\n\nICSP \u5f15\u811a\n\n\n\u82af\u7247\n - MCP2551, \u9ad8\u901f CAN \u6536\u53d1\u5668 (\ndatasheet\n)\n\n\n\u82af\u7247\n - MCP2515, \u5e26\u6709 SPI \u63a5\u53e3\u7684\u6807\u51c6 CAN \u603b\u7ebf\u63a7\u5236\u5668 (\ndatasheet\n)\n\n\nSD\u5361\u5361\u5ea7\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5f53\u60a8\u5728\u4e00\u4e2a\u7f51\u7edc\u4e2d\u4f7f\u7528\u4e24\u4e2a\u4ee5\u4e0a\u7684CAN\u603b\u7ebf\u6269\u5c55\u677f\u65f6\uff0c\u5e94\u8003\u8651\u963b\u6297\u3002\u60a8\u5e94\u8be5\u7528\u5200\u5207\u5272PCB\u4e2d\u7684P1\uff0c\u6216\u8005\u5e72\u8106\u53d6\u4e0bPCB\u4e0a\u7684R3\u3002\n\n\n\n\n\n\n\u7ba1\u811a\u56fe\n\n\n\n\n\n\nNote\n\n\n\n\n\u7a7a\u95f2\u9488\u53ef\u7528\u4e8e\u5176\u4ed6\u7528\u9014\u3002\n\n\n\n\n\n\nDB9\nOBDii \u63a5\u53e3\n\n\n\n\nCS_CAN \u5f15\u811a\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cV2.0\u7684SPI_CS\u5f15\u811a\u8fde\u63a5\u5230 \nD9\n\u3002\u5982\u679c\u8981\u66f4\u6539\u4e3a \nD10\n \uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\n\n\n\u6b65\u9aa41\uff1a\u67e5\u770bPCB\u7684\u80cc\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u540d\u4e3a CS_CAN \u7684\u710a\u76d8\u3002\n\n\n\n\n\n\n\n\n\u6b65\u9aa42: \u5272\u65ad\u710a\u76d89\u548c\u4e2d\u95f4\u710a\u76d8\u4e4b\u95f4\u7684\u5bfc\u7ebf\n\n\n\n\n\n\n\n\n\u6b65\u9aa43: \u5c06\u4e2d\u95f4\u710a\u76d8\u548c\u710a\u76d810\u710a\u63a5\u5728\u4e00\u8d77\u3002\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002\n\n\n\n\n\n\nINT pin \u5f15\u811a\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cV2.0\u7684INT\u5f15\u811a\u8fde\u63a5\u5230**D2**\u3002\u5982\u679c\u8981\u66f4\u6539\u4e3a**D3**\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\n- \u6b65\u9aa41\uff1a\u67e5\u770bPCB\u7684\u80cc\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u540d\u4e3a INT \u7684\u710a\u76d8\u3002\n\n\n\n\n\n\n\n - \u6b65\u9aa42: \u5272\u65ad\u710a\u76d82\u548c\u4e2d\u95f4\u710a\u76d8\u4e4b\u95f4\u7684\u5bfc\u7ebf\n\n\n\n\n\n\n\n - \u6b65\u9aa43: \u5c06\u4e2d\u95f4\u710a\u76d8\u548c\u710a\u76d83\u710a\u63a5\u5728\u4e00\u8d77\u3002\n\n\n\n\n\n\n\nSPI \u5f15\u811a\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSPI\u5f15\u811a\uff08SCK\uff0cMISO\uff0cMOSI\uff09\u88ab\u8fde\u63a5\u5230ICSP\u5f15\u811a\u3002\u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u6838\u5fc3\u677f\uff0cSPI\u5f15\u811a\u4f4d\u4e8eD11\u301cD13\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u9700\u8981\u5bf9PCB\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u3002\u770b\u770bPCB\u7684\u80cc\u9762\uff0c\u6709\u4e09\u4e2a\u710a\u76d8\uff0cMOSI\uff0cMISO\u548cSCK\uff0c\u5b83\u4eec\u9ed8\u8ba4\u8fde\u63a5\u5230A\u3002\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u66f4\u6539\u4e3aB\u3002\n\n\n\n\nNote\n\n\n\n\n\u5bf9\u4e8eArduino UNO, Arduino Mega, Arduino Leonardo \u4ee5\u53ca\u4efb\u4f55\u5176\u4ed6\u57fa\u4e8eAVR \u7684Arduino \u6838\u5fc3\u677f, \u6211\u4eec\u63a8\u8350\u521d\u59cb\u8bbe\u7f6e\u3002\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5357\n\n\n\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660eCAN-BUS Shield\u7684\u5de5\u4f5c\u539f\u7406\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u89812\u5757CAN-BUS\u6269\u5c55\u677f\u4ee5\u53caArduino\u6216Seeeduino\u3002\n\n\n\n\nNote\n\n\n\u6b64\u793a\u4f8b\u57fa\u4e8e \nArduino IDE version 1.6.9\n.\n\n\n\n\n\u6b65\u9aa41: \u6211\u4eec\u9700\u8981\u51c6\u5907\u4e9b\u5565\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u529f\u80fd\n\n\n\u6570\u91cf\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nCAN-BUS Shield\n\n\nCAN \u603b\u7ebf\u901a\u4fe1\n\n\n2\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\nSeeeduino V4.2\n\n\n\u63a7\u5236\u5668\n\n\n2\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\u8df3\u7ebf\n\n\n\u8fde\u63a5\n\n\n2\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\u6b65\u9aa42: \u786c\u4ef6\u8fde\u63a5\n\n\n\u5c06\u6bcf\u5757CAN-BUS \u6269\u5c55\u677f\u90fd\u63d2\u5728Seeeduino V4.2\u4e0a\uff0c\u7136\u540e\u5982\u4e0b\u56fe\u6240\u793a\u4f7f\u7528\u4e24\u6839\u8df3\u7ebf\u5c06\u4e24\u5757CAN-BUS \u6269\u5c55\u677f\u8fde\u63a5\u8d77\u6765\u3002\n\n\n\n\n\n\nNote\n\n\n\n\nCAN_H \u8fde\u63a5\u5230 CAN_H, CAN_L \u8fde\u63a5\u5230 CAN_L\n\n\n\n\n\n\n\u6b65\u9aa43: \u8f6f\u4ef6\n\n\n\u8bf7\u9075\u5faa \n\u5982\u4f55\u5b89\u88c5Arduino\u5e93\n \u6765\u5b89\u88c5 CAN BUS shield library.\n\n\n\u70b9\u51fb\u4e0b\u9762\u56fe\u6807\u6765\u4e0b\u8f7dCAN BUS shield library\n\n\n\n\n\u4e0b\u8f7d\u5b8c\u6210\u540e\u5b89\u88c5\u5e93\u6587\u4ef6\u5230\u60a8\u7684Arduino\u3002\n\n\n\u4e00\u4e2a\u8282\u70b9(\u6b64\u5904\u4ee3\u8868Seeeduino + CAN_BUS \u6269\u5c55\u677f) \u4f5c\u4e3a\u4e3b\u673a\uff0c\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u4ece\u673a\u3002 \u4e3b\u673a\u5c06\u6301\u7eed\u5730\u5411\u4ece\u673a\u53d1\u9001\u6570\u636e\u3002\n\n\n\n\nNote\n\n\n\u5728\u4e0a\u4f20\u4ee3\u7801\u524d\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u673a\u3002\n\n\n\n\n\u6253\u5f00\u53d1\u9001\u793a\u4f8b\uff08\u6587\u4ef6\n\u793a\u4f8b\n CAN_BUS_Shield-master\n\u53d1\u9001\uff09\u5e76\u4e0a\u4f20\u5230\u4e3b\u673a\u3002\n\n\n\n\n\u6253\u5f00receive_check\u793a\u4f8b\uff08\u6587\u4ef6\n\u793a\u4f8b\n CAN_BUS_Shield-master\n receive_check\uff09\u5e76\u4e0a\u4f20\u5230\u4ece\u673a\u3002\n\n\n\n\n\u6b65\u9aa44: \u67e5\u770b\u7ed3\u679c\n\n\n\u6253\u5f00Arduino IDE\uff08\u4ece\u673a\uff09\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u5c06\u83b7\u5f97\u4ece\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\u3002\n\n\n\n\nAPIs\n\n\n\n\n1. \u8bbe\u7f6e\u6ce2\u7279\u7387\n\n\n\u8be5\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316CAN\u603b\u7ebf\u7cfb\u7edf\u7684\u6ce2\u7279\u7387\u3002\n\n\n\u53ef\u7528\u7684\u6ce2\u7279\u7387\u5217\u8868\u5982\u4e0b\uff1a\n\n\n#define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31K25BPS 5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83K3BPS  10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666kbps  17\n#define CAN_1000KBPS 18\n\n\n\n\n\n2. \u8bbe\u7f6e\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u8fc7\u6ee4\u5bc4\u5b58\u5668\n\n\n\u63a7\u5236\u5668\u82af\u7247\u4e0a\u67092\u4e2a\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c5\u4e2a\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4fdd\u8bc1\u4ece\u76ee\u6807\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002\u5b83\u4eec\u7279\u522b\u9002\u7528\u4e8e\u7531\u8bb8\u591a\u8282\u70b9\u7ec4\u6210\u7684\u5927\u578b\u7f51\u7edc\u3002\n\n\n\u6211\u4eec\u63d0\u4f9b\u4e24\u79cd\u51fd\u6570\u6765\u5229\u7528\u8fd9\u4e9b\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\u3002\u4ed6\u4eec\u662f\uff1a\n\n\nMask:\n\n\ninit_Mask(unsigned char num, unsigned char ext, unsigned char ulData);\n\n\n\n\n\nFilter:\n\n\ninit_Filt(unsigned char num, unsigned char ext, unsigned char ulData);\n\n\n\n\n\n\n\nnum\n num\u8868\u793a\u8981\u4f7f\u7528\u54ea\u4e2a\u5bc4\u5b58\u5668\u3002\u60a8\u53ef\u4ee5\u8bbe\u7f6e0\u62161\u9009\u62e9\u5c4f\u853d\u5bc4\u5b58\u5668\uff0c0\u81f35\u9009\u62e9\u8fc7\u6ee4\u5bc4\u5b58\u5668\u3002\n\n\next\n \u8868\u793a\u5e27\u7684\u72b6\u6001\u30020\u8868\u793a\u5b83\u662f\u6807\u51c6\u5e27\u30021\u8868\u793a\u5b83\u662f\u4e00\u4e2a\u6269\u5c55\u5e27\u3002\n\n\nulData\n \u4ee3\u8868\u5c4f\u853d\u5e27\u6216\u8fc7\u6ee4\u5e27\u7684\u5185\u5bb9\u3002\n\n\n\n\n3. \u6821\u9a8c\u63a5\u6536\n\n\nMCP2515\u53ef\u4ee5\u5728\u8f6e\u8be2\u6a21\u5f0f\u4e0b\u5de5\u4f5c\uff0c\u5176\u4e2d\u8f6f\u4ef6\u68c0\u67e5\u63a5\u6536\u5230\u7684\u5e27\uff0c\u6216\u4f7f\u7528\u9644\u52a0\u5f15\u811a\u6765\u53d1\u4fe1\u53f7\u901a\u77e5\u5e27\u5df2\u88ab\u63a5\u6536\u6216\u53d1\u9001\u5b8c\u6210\u3002\n\n\n\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8f6e\u8be2\u63a5\u6536\u5230\u7684\u5e27\u3002\n\n\nINT8U MCP_CAN::checkReceive(void);\n\n\n\n\n\n\u5982\u679c\u5e27\u5230\u8fbe\uff0c\u8be5\u51fd\u6570\u5c06\u8fd4\u56de1\uff0c\u5982\u679c\u6ca1\u6709\u5230\u8fbe\uff0c\u5219\u8fd4\u56de0\u3002\n\n\n4. \u83b7\u53d6 CAN ID\n\n\n\u5f53\u67d0\u4e9b\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u83b7\u53d6\u201c\u53d1\u9001\u201d\u8282\u70b9\u7684CAN ID\u3002\n\n\nINT32U MCP_CAN::getCanId(void)\n\n\n\n\n\n5. \u53d1\u9001\u6570\u636e\n\n\nCAN.sendMsgBuf(INT8U id, INT8U ext, INT8U len, data_buf);\n\n\n\n\n\n\u8fd9\u662f\u5c06\u6570\u636e\u53d1\u9001\u5230\u603b\u7ebf\u4e0a\u7684\u51fd\u6570\u3002\u5176\u4e2d\uff1a\n* \nid\n \u8868\u793a\u6570\u636e\u6765\u6e90\n* \next\n \u8868\u793a\u5e27\u7684\u72b6\u6001\u3002'0'\u8868\u793a\u6807\u51c6\u5e27\u3002'1'\u8868\u793a\u6269\u5c55\u5e27\u3002\n* \nlen\n \u8868\u793a\u6b64\u5e27\u7684\u957f\u5ea6\u3002\n* \ndata_buf\n \u662f\u6b64\u6d88\u606f\u7684\u5185\u5bb9\u3002\n\n\n\u4f8b\u5982\uff0c\u5728\u201c\u53d1\u9001\u201d\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6709\uff1a\n\n\nunsigned char stmp[8] = {0, 1, 2, 3, 4, 5, 6, 7};\nCAN.sendMsgBuf(0x00, 0, 8, stmp); //send out the message \nstmp\n to the bus and tell other devices this is a standard frame from 0x00.\n\n\n\n\n\n6. \u63a5\u6536\u6570\u636e\n\n\n\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u5728\u201c\u63a5\u6536\u201d\u8282\u70b9\u4e0a\u63a5\u6536\u6570\u636e\uff1a\n\n\nCAN.readMsgBuf(unsigned char len, unsigned char buf);\n\n\n\n\n\n\u5728\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u90fd\u8bbe\u7f6e\u597d\u7684\u6761\u4ef6\u4e0b\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u4f1a\u63a5\u6536\u6ee1\u8db3\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u7b5b\u9009\u6761\u4ef6\u7684\u6570\u636e\u5e27\u3002\n\n\n\n\nlen\n \u8868\u793a\u6570\u636e\u957f\u5ea6\u3002\n\n\nbuf\n \u662f\u5b58\u50a8\u6570\u636e\u7684\u4f4d\u7f6e\u3002\n\n\n\n\n\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6ce2\u7279\u7387\n\n\n\u6211\u4eec\u63d0\u4f9b\u4e86\u8bb8\u591a\u9891\u7e41\u4f7f\u7528\u7684\u6ce2\u7279\u7387\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n\n#define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31KBPS   5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83KBPS   10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666KBPS  17\n#define CAN_1000KBPS 18\n\n\n\n\n\n\u7136\u800c\uff0c\u60a8\u4ecd\u7136\u53ef\u80fd\u627e\u4e0d\u5230\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8f6f\u4ef6\u6765\u5e2e\u52a9\u60a8\u8ba1\u7b97\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002\n\n\n\u70b9\u51fb \n\u8fd9\u91cc\n \u6765\u4e0b\u8f7d\u8be5\u8f6f\u4ef6\u3002\n\n\n\n\n\n\nNote\n\n\n\u8fd9\u4e2a\u8f6f\u4ef6\u4ec5\u4ec5\u652f\u6301Windows\u7cfb\u7edf\uff0c\u5982\u679c\u60a8\u65e0\u6cd5\u6253\u5f00\u5b83\uff0c\u6b22\u8fce\u968f\u65f6\u901a\u8fc7\u90ae\u4ef6\u8054\u7cfb \n \u6765\u83b7\u53d6\u6280\u672f\u652f\u6301\u3002\n\n\n\n\n\u6253\u5f00\u8f6f\u4ef6\uff0c\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u8bbe\u7f6e\u4f60\u60f3\u8981\u7684\u6ce2\u7279\u7387\uff0c\u7136\u540e\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u7136\u540e\u70b9\u51fb\u8ba1\u7b97\u3002\n\n\n\u7136\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e9b\u6570\u636e\uff0ccfg1\uff0ccfg2\u548ccfg3\u3002\n\n\n\u60a8\u9700\u8981\u5728\u5e93\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u4ee3\u7801\u3002\n\n\n\u6253\u5f00 \nmcp_can_dfs.h\n, \u4f60\u9700\u8981\u5c06\u4e0b\u5217\u4ee3\u7801\u6dfb\u52a0\u5230\u7b2c272\u884c\u5de6\u53f3\u3002\n\n\n#define MCP_16MHz_xxxkBPS_CFG1 (cfg1)    // xxx is the baud rate you need\n#define MCP_16MHz_xxxkBPS_CFG2 (cfg2)\n#define MCP_16MHz_xxxkBPS_CFG3 (cfg2)\n\n\n\n\n\n\u7136\u540e\u8ba9\u6211\u4eec\u8df3\u8f6c\u5230\u7b2c390\u884c, \u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a\n\n\n#define CAN_xxxKBPS NUM       // xxx is the baudrate you need, and NUM is a number, you need to get a different from the other rates.\n\n\n\n\n\n\u6253\u5f00 \nmcp_can.cpp\n, \u8df3\u8f6c\u5230\u51fd\u6570**mcp2515_configRate**(\u5927\u81f4\u5728\u7b2c190\u884c), \u7136\u540e\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801:\n\n\ncase (CAN_xxxKBPS):\n    cfg1 = MCP_16MHz_xxxkBPS_CFG1;\n    cfg2 = MCP_16MHz_xxxkBPS_CFG2;\n    cfg3 = MCP_16MHz_xxxkBPS_CFG3;\n    break;\n\n\n\n\n\n\u7136\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u60a8\u9700\u8981\u7684\u6ce2\u7279\u7387\u4e86\u3002\u5f53\u60a8\u4f7f\u7528\u7684\u6ce2\u7279\u7387\u65f6\uff0c\u8bf7\u7ed9\u6211\u4eec\u4e00\u4e2agithub\u7684\u8bf7\u6c42\uff0c\u8fd9\u6837\u6211\u53ef\u4ee5\u6dfb\u52a0\u5230\u5e93\u6765\u5e2e\u52a9\u5176\u4ed6\u4eba\u3002\u611f\u8c22\uff01\n\n\n\u9879\u76ee\u5de5\u7a0b\n\n\n\n\n\u5982\u679c\u60a8\u60f3\u4f7f\u7528CAN-BUS \u6269\u5c55\u677f\u505a\u4e00\u4e9b\u9177\u70ab\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u53ef\u4f9b\u53c2\u8003\u3002\n\n\n\u5927\u4f17 CAN BUS \u5c0f\u6e38\u620f\n\n\n\n\nEver wanted to play a car/truck simulator with a real dashboard on your PC? Me too! I'm trying to control a VW Polo 6R dashboard via CAN Bus with an Arduino Uno and a Seeed CAN Bus Shield. Inspired by Silas Parker. Thanks Sepp and Is0-Mick for their great support!\n\n\n\n\n\u9ed1\u8fdb\u8f66\u8f7d CAN-BUS\n\n\n\n\nModern Vehicles all come equipped with a CAN-BUS Controller Area Network, Instead of having a million wires running back and forth from various devices in your car to the battery, its making use of a more clever system.\n\n\nAll electronic functions are connected to the TIPM, (Totally integrated Power Module), such as solenoids/relays to lock the doors or mini motors to wind the windows etc.\n\n\nFrom each node (IE Switch pod that controls your windows or electric door locks) it broadcasts a message across the CAN. When the TIPM detects a valid message it will react accordingly like, lock the doors, switch on lights and so on.\n\n\n\n\nFAQ\n\n\n\n\nQ1: \u6211\u65e0\u6cd5\u4ece\u5176\u4ed6CAN\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002\n\n\n\n\n\u68c0\u67e5\u8fde\u63a5\u662f\u5426\u6b63\u786e\n\n\n\u68c0\u67e5\u6ce2\u7279\u7387\u8bbe\u7f6e\u662f\u5426\u6b63\u786e\n\n\n\n\nQ2: \u4e32\u884c\u76d1\u89c6\u5668\u6253\u5370\u5931\u8d25\u3002\n\n\n*\u68c0\u67e5CS\u5f15\u811a\u8bbe\u7f6e\u662f\u5426\u4e0e\u4ee3\u7801\u5339\u914d\u3002\u5bf9\u4e8eCAN\u603b\u7ebf\u6269\u5c55\u677fV1.1 / 1.2 /2.0 CS \u5f15\u811a\u9ed8\u8ba4\u8fde\u63a5\u5230 D9\uff0c\u5176\u4ed6\u5219\u4e3a D10\u3002\n\n\nQ3. \u5982\u679c\u6211\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u6280\u672f\u652f\u6301\u3002\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728 Seeed \u8bba\u575b \nSeeed Forum\n \u7559\u8a00\u6216\u8005or \u7ed9\u4e0b\u5217\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6\u81f3 \n.\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\u3010PDF\u3011\nCAN-BUS Shield V2.0 Schmatics\n\n\n\u3010Eagle\u539f\u7406\u56fe\u3011\nSchematic \n PCB of CAN-BUS Shield V2.0\n\n\n\u3010CAN_BUS_Shield\u5e93\u3011\nArduino Library for CAN-BUS Shield\n\n\n\u3010MCP2515\u6570\u636e\u624b\u518c\u3011\nMCP2515 datasheet\n\n\n\u3010MCP2551\u6570\u636e\u624b\u518c\u3011\nMCP2551 datasheet\n\n\n\u3010\u793a\u4f8b\u7a0b\u5e8f\u3011\nAn OBD Demo\n\n\n\u3010MCP2515\u6ce2\u7279\u7387\u8ba1\u7b97\u5de5\u5177\u3011\nMCP2515 Baud Rate Tool\n\n\n\u3010USB-CAN\u5206\u6790\u5668\u3011\nUSB-CAN Analyzer\n\n\n\u3010\u7ebf\u7f06DB9\u8f6cOBD2\u3011\nDB9 to OBD2 Cable", 
            "title": "CAN-BUS Shield V2.0"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#_1", 
            "text": "\u539f\u672cDB9\u63a5\u53e3\u662fOBD\u6807\u51c6\uff0c\u901a\u8fc7\u589e\u52a0\u8df3\u7ebf\uff0c\u517c\u5bb9CAN OPEN\u6807\u51c6  INT\u901a\u8fc7\u4e00\u4e2a\u8df3\u7ebf\u9009\u62e9D2\u6216\u8005D3  \u589e\u52a0SD\u5361\u5ea7\u5b50\uff0cCS\u9ed8\u8ba4\u63a5\u5230D4\uff0c\u53ef\u4ee5\u901a\u8fc7\u8df3\u7ebf\u5230D5\uff08\u4f7f\u7528stalker\u7684sd\u5ea7\u5b50\uff09  Serial\u7684Grove\u5ea7\u5b50\u6539\u5230A0/A1 \uff08\u8003\u8651\u5230D0/D1\u901a\u5e38\u9700\u8981\u7528\u6765\u4e0b\u8f7d\u4ee3\u7801\uff0c\u6ca1\u6709\u529e\u6cd5\u63a5\u5176\u4ed6\u6a21\u5757\uff0cA0/A1\u65e2\u53ef\u4ee5\u5f53\u505a\u6a21\u62df\u53e3\uff0c\u4e5f\u53ef\u4ee5\u5f53\u505a\u6570\u5b57\u53e3\uff0c\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u65b9\u4fbf\uff09  I2C\u7684\u8fde\u7ebf\u4e0d\u518d\u63a5\u5230A4/A5\uff0c\u6539\u5230\u6807\u51c6\u5f15\u811a\u7684SDA/SCL  \u4e24\u4e2aGrove\u5ea7\u5b50\u8eba\u7740\uff0cICSP\u4e24\u8fb9\u5404\u4e00\u4e2a  P1\u653e\u5230\u677f\u5b50\u5e95\u4e0b\uff0c\u65b9\u4fbf\u5207\u5272\u548c\u710a\u63a5  \u5176\u4ed6\u57fa\u4e8e\u7535\u5b50/\u6210\u672c\u65b9\u9762\u7684\u4f18\u5316", 
            "title": "\u786c\u4ef6"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#_2", 
            "text": "\u589e\u52a0\u8bfb\u53d6\u6c7d\u8f66\u6570\u636e\u7684\u51fd\u6570\u53caexamples  \u589e\u52a0SD\u5361\u7684\u8bfb\u53d6  \u5176\u4ed6bug\u4fee\u590d\u4ee5\u53ca\u4f18\u5316  \u589e\u52a0\u628a\u6c7d\u8f66\u6570\u636e\u5b58\u50a8\u5230SD\u5361\u7684example   D-Sub CANbus \u5f15\u811a\u63a5\u53e3     pin#  \u4fe1\u53f7\u540d\u79f0  \u4fe1\u53f7\u63cf\u8ff0      1  Reserved  Upgrade Path    2  CAN_L  Dominant Low    3  CAN_GND  \u5730    4  Reserved  Upgrade Path    5  CAN_SHLD  \u6269\u5c55\u677f, \u53ef\u9009    6  GND  \u5730\uff0c\u53ef\u9009    7  CAN_H  Dominant High    8  Reserved  Upgrade Path    9  CAN_V+  Power, \u53ef\u9009     \u66ff\u4ee3\u65b9\u6848  \u5982\u679c\u60a8\u7684\u9879\u76ee\u662f\u7a7a\u95f4\u6709\u9650\u7684\uff0c\u9664\u4e86CAN-BUS \u4e4b\u5916\uff0c\u4e0d\u9700\u8981\u5176\u4ed6\u529f\u80fd\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2aGrove CAN-BUS\u6a21\u5757\uff0c\u4e0eArduino\u517c\u5bb9\uff0c\u66f4\u7d27\u51d1\uff0c\u6027\u4ef7\u6bd4\u66f4\u9ad8\uff0c\u53c2\u8003\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u3002   \u5982\u679c\u6211\u60f3\u5c06\u8fd9\u4e2a\u6269\u5c55\u677f\u8fde\u63a5\u5230\u6211\u7684\u8f66\uff0c\u8be5\u600e\u4e48\u529e\uff1f  \u5982\u679c\u60a8\u60f3\u8981\u8bfb\u53d6\u6570\u636e\u6216\u63a7\u5236\u6c7d\u8f66\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528OBD  DB9\u7535\u7f06\uff0c\u8be5\u7535\u7f06\u5c06\u8f7b\u677e\u5b8c\u6210OBD\u8fde\u63a5\u5668\u5230DB9\u8fde\u63a5\u5668\u7684\u8f6c\u6362\u3002\u8be5\u7535\u7f06\u4e5f\u53ef\u4ee5\u8fde\u63a5\u5230\u5177\u6709OBD\u8fde\u63a5\u5668\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u6211\u4eec\u5728\u7535\u7f06\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5f00\u5173\uff0c\u65b9\u4fbf\u60a8\u7684\u63a7\u5236\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u6807\u8d2d\u4e70\u8be5\u7535\u7f06\u3002   USB-CAN\u5206\u6790\u4eea  \u5982\u679c\u60a8\u9700\u8981\u4e00\u4e2aCAN\u603b\u7ebf\u5206\u6790\u4eea\u6765\u68c0\u6d4b\u60a8\u7684CAN\u603b\u7ebf\uff0c\u6211\u4eec\u63a8\u8350\u4e0b\u9762\u7684  USB-CAN Analyzer  \u3002(\u540c\u6837\u60a8\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u7247\u8d2d\u4e70)", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#_3", 
            "text": "CAN V2.0 \u901f\u5ea6\u9ad8\u8fbe1 Mb / s  SPI\u63a5\u53e3\u901f\u5ea6\u9ad8\u8fbe10 MHz  \u652f\u6301\u6807\u51c6\uff0811\u4f4d\uff09\u548c\u6269\u5c55\uff0829\u4f4d\uff09\u6570\u636e\u4ee5\u53ca\u8fdc\u7a0b\u5e27  \u4e24\u4e2a\u5177\u6709\u4f18\u5148\u6d88\u606f\u5b58\u50a8\u7684\u63a5\u6536\u7f13\u51b2\u533a  \u5de5\u4e1a\u6807\u51c6DB-9\u8fde\u63a5\u5668  OBD-II\u548c\u6807\u51c6CAN\u5f15\u811a\u517c\u5bb9\u53ef\u9009  \u53ef\u9009TF card CS\u5f15\u811a  \u53ef\u9009\u62e9INT\u5f15\u811a  \u65b0\u578b\u6309\u538b\u63a5\u7ebf\u7aef\u5b50\u6613\u4e8e\u8fde\u63a5CAN_H \u548c CAN_L  \u4e24\u4e2aGrove\u8fde\u63a5\u5668\uff08I2C\u548cUART\uff09  LED\u6307\u793a\u706f    Note  CAN BUS \u53ef\u4ee5\u826f\u597d\u5730\u517c\u5bb9Arduino UNO (ATmega328), Arduino Mega (ATmega1280/2560) \u3001 Arduino Leonardo (ATmega32U4).", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#_4", 
            "text": "DB9 \u63a5\u53e3  - \u901a\u8fc7DBG-OBD\u7ebf\u7f06\u6765\u8fde\u63a5OBDII \u63a5\u53e3\u3002  V_OBD  - \u901a\u8fc7OBDII \u63a5\u53e3\u83b7\u53d6\u7535\u6e90 (\u6765\u7740 DB9)  Led \u6307\u793a\u5668 :  PWR : \u7535\u6e90  TX : \u53d1\u9001\u6570\u636e\u65f6\u95ea\u70c1  RX : \u63a5\u6536\u6570\u636e\u65f6\u95ea\u70c1  INT : \u6570\u636e\u4e2d\u65ad    \u63a5\u7ebf\u7aef\u5b50  - CAN_H \u548c CAN_L  Arduino UNO \u5f15\u811a\u63a5\u53e3  Grove \u4e32\u884c\u8fde\u63a5\u5668  **Grove I2C\u8fde\u63a5\u5668 **  ICSP \u5f15\u811a  \u82af\u7247  - MCP2551, \u9ad8\u901f CAN \u6536\u53d1\u5668 ( datasheet )  \u82af\u7247  - MCP2515, \u5e26\u6709 SPI \u63a5\u53e3\u7684\u6807\u51c6 CAN \u603b\u7ebf\u63a7\u5236\u5668 ( datasheet )  SD\u5361\u5361\u5ea7    Warning   \u5f53\u60a8\u5728\u4e00\u4e2a\u7f51\u7edc\u4e2d\u4f7f\u7528\u4e24\u4e2a\u4ee5\u4e0a\u7684CAN\u603b\u7ebf\u6269\u5c55\u677f\u65f6\uff0c\u5e94\u8003\u8651\u963b\u6297\u3002\u60a8\u5e94\u8be5\u7528\u5200\u5207\u5272PCB\u4e2d\u7684P1\uff0c\u6216\u8005\u5e72\u8106\u53d6\u4e0bPCB\u4e0a\u7684R3\u3002    \u7ba1\u811a\u56fe    Note   \u7a7a\u95f2\u9488\u53ef\u7528\u4e8e\u5176\u4ed6\u7528\u9014\u3002    DB9 OBDii \u63a5\u53e3   CS_CAN \u5f15\u811a  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cV2.0\u7684SPI_CS\u5f15\u811a\u8fde\u63a5\u5230  D9 \u3002\u5982\u679c\u8981\u66f4\u6539\u4e3a  D10  \uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002   \u6b65\u9aa41\uff1a\u67e5\u770bPCB\u7684\u80cc\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u540d\u4e3a CS_CAN \u7684\u710a\u76d8\u3002     \u6b65\u9aa42: \u5272\u65ad\u710a\u76d89\u548c\u4e2d\u95f4\u710a\u76d8\u4e4b\u95f4\u7684\u5bfc\u7ebf     \u6b65\u9aa43: \u5c06\u4e2d\u95f4\u710a\u76d8\u548c\u710a\u76d810\u710a\u63a5\u5728\u4e00\u8d77\u3002     Warning   \u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002    INT pin \u5f15\u811a  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cV2.0\u7684INT\u5f15\u811a\u8fde\u63a5\u5230**D2**\u3002\u5982\u679c\u8981\u66f4\u6539\u4e3a**D3**\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002  - \u6b65\u9aa41\uff1a\u67e5\u770bPCB\u7684\u80cc\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u540d\u4e3a INT \u7684\u710a\u76d8\u3002    - \u6b65\u9aa42: \u5272\u65ad\u710a\u76d82\u548c\u4e2d\u95f4\u710a\u76d8\u4e4b\u95f4\u7684\u5bfc\u7ebf    - \u6b65\u9aa43: \u5c06\u4e2d\u95f4\u710a\u76d8\u548c\u710a\u76d83\u710a\u63a5\u5728\u4e00\u8d77\u3002   SPI \u5f15\u811a  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSPI\u5f15\u811a\uff08SCK\uff0cMISO\uff0cMOSI\uff09\u88ab\u8fde\u63a5\u5230ICSP\u5f15\u811a\u3002\u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u6838\u5fc3\u677f\uff0cSPI\u5f15\u811a\u4f4d\u4e8eD11\u301cD13\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u9700\u8981\u5bf9PCB\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u3002\u770b\u770bPCB\u7684\u80cc\u9762\uff0c\u6709\u4e09\u4e2a\u710a\u76d8\uff0cMOSI\uff0cMISO\u548cSCK\uff0c\u5b83\u4eec\u9ed8\u8ba4\u8fde\u63a5\u5230A\u3002\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u66f4\u6539\u4e3aB\u3002   Note   \u5bf9\u4e8eArduino UNO, Arduino Mega, Arduino Leonardo \u4ee5\u53ca\u4efb\u4f55\u5176\u4ed6\u57fa\u4e8eAVR \u7684Arduino \u6838\u5fc3\u677f, \u6211\u4eec\u63a8\u8350\u521d\u59cb\u8bbe\u7f6e\u3002     Warning   \u5207\u5272\u7684\u65f6\u5019\u8bf7\u60a8\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4f24\u5230\u81ea\u5df1\u6216\u8005\u5272\u574fPCB\u677f\u5b50\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#_5", 
            "text": "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660eCAN-BUS Shield\u7684\u5de5\u4f5c\u539f\u7406\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u89812\u5757CAN-BUS\u6269\u5c55\u677f\u4ee5\u53caArduino\u6216Seeeduino\u3002   Note  \u6b64\u793a\u4f8b\u57fa\u4e8e  Arduino IDE version 1.6.9 .   \u6b65\u9aa41: \u6211\u4eec\u9700\u8981\u51c6\u5907\u4e9b\u5565     \u540d\u79f0  \u529f\u80fd  \u6570\u91cf  \u8d2d\u4e70\u94fe\u63a5      CAN-BUS Shield  CAN \u603b\u7ebf\u901a\u4fe1  2  \u8d2d\u4e70\u94fe\u63a5    Seeeduino V4.2  \u63a7\u5236\u5668  2  \u8d2d\u4e70\u94fe\u63a5    \u8df3\u7ebf  \u8fde\u63a5  2  \u8d2d\u4e70\u94fe\u63a5     \u6b65\u9aa42: \u786c\u4ef6\u8fde\u63a5  \u5c06\u6bcf\u5757CAN-BUS \u6269\u5c55\u677f\u90fd\u63d2\u5728Seeeduino V4.2\u4e0a\uff0c\u7136\u540e\u5982\u4e0b\u56fe\u6240\u793a\u4f7f\u7528\u4e24\u6839\u8df3\u7ebf\u5c06\u4e24\u5757CAN-BUS \u6269\u5c55\u677f\u8fde\u63a5\u8d77\u6765\u3002    Note   CAN_H \u8fde\u63a5\u5230 CAN_H, CAN_L \u8fde\u63a5\u5230 CAN_L    \u6b65\u9aa43: \u8f6f\u4ef6  \u8bf7\u9075\u5faa  \u5982\u4f55\u5b89\u88c5Arduino\u5e93  \u6765\u5b89\u88c5 CAN BUS shield library.  \u70b9\u51fb\u4e0b\u9762\u56fe\u6807\u6765\u4e0b\u8f7dCAN BUS shield library   \u4e0b\u8f7d\u5b8c\u6210\u540e\u5b89\u88c5\u5e93\u6587\u4ef6\u5230\u60a8\u7684Arduino\u3002  \u4e00\u4e2a\u8282\u70b9(\u6b64\u5904\u4ee3\u8868Seeeduino + CAN_BUS \u6269\u5c55\u677f) \u4f5c\u4e3a\u4e3b\u673a\uff0c\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u4ece\u673a\u3002 \u4e3b\u673a\u5c06\u6301\u7eed\u5730\u5411\u4ece\u673a\u53d1\u9001\u6570\u636e\u3002   Note  \u5728\u4e0a\u4f20\u4ee3\u7801\u524d\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u673a\u3002   \u6253\u5f00\u53d1\u9001\u793a\u4f8b\uff08\u6587\u4ef6 \u793a\u4f8b  CAN_BUS_Shield-master \u53d1\u9001\uff09\u5e76\u4e0a\u4f20\u5230\u4e3b\u673a\u3002   \u6253\u5f00receive_check\u793a\u4f8b\uff08\u6587\u4ef6 \u793a\u4f8b  CAN_BUS_Shield-master  receive_check\uff09\u5e76\u4e0a\u4f20\u5230\u4ece\u673a\u3002   \u6b65\u9aa44: \u67e5\u770b\u7ed3\u679c  \u6253\u5f00Arduino IDE\uff08\u4ece\u673a\uff09\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u5c06\u83b7\u5f97\u4ece\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\u3002", 
            "title": "\u5165\u95e8\u6307\u5357"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#apis", 
            "text": "", 
            "title": "APIs"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#1", 
            "text": "\u8be5\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316CAN\u603b\u7ebf\u7cfb\u7edf\u7684\u6ce2\u7279\u7387\u3002  \u53ef\u7528\u7684\u6ce2\u7279\u7387\u5217\u8868\u5982\u4e0b\uff1a  #define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31K25BPS 5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83K3BPS  10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666kbps  17\n#define CAN_1000KBPS 18", 
            "title": "1. \u8bbe\u7f6e\u6ce2\u7279\u7387"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#2", 
            "text": "\u63a7\u5236\u5668\u82af\u7247\u4e0a\u67092\u4e2a\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c5\u4e2a\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4fdd\u8bc1\u4ece\u76ee\u6807\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002\u5b83\u4eec\u7279\u522b\u9002\u7528\u4e8e\u7531\u8bb8\u591a\u8282\u70b9\u7ec4\u6210\u7684\u5927\u578b\u7f51\u7edc\u3002  \u6211\u4eec\u63d0\u4f9b\u4e24\u79cd\u51fd\u6570\u6765\u5229\u7528\u8fd9\u4e9b\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u6ee4\u6ce2\u5668\u5bc4\u5b58\u5668\u3002\u4ed6\u4eec\u662f\uff1a  Mask:  init_Mask(unsigned char num, unsigned char ext, unsigned char ulData);  Filter:  init_Filt(unsigned char num, unsigned char ext, unsigned char ulData);   num  num\u8868\u793a\u8981\u4f7f\u7528\u54ea\u4e2a\u5bc4\u5b58\u5668\u3002\u60a8\u53ef\u4ee5\u8bbe\u7f6e0\u62161\u9009\u62e9\u5c4f\u853d\u5bc4\u5b58\u5668\uff0c0\u81f35\u9009\u62e9\u8fc7\u6ee4\u5bc4\u5b58\u5668\u3002  ext  \u8868\u793a\u5e27\u7684\u72b6\u6001\u30020\u8868\u793a\u5b83\u662f\u6807\u51c6\u5e27\u30021\u8868\u793a\u5b83\u662f\u4e00\u4e2a\u6269\u5c55\u5e27\u3002  ulData  \u4ee3\u8868\u5c4f\u853d\u5e27\u6216\u8fc7\u6ee4\u5e27\u7684\u5185\u5bb9\u3002", 
            "title": "2. \u8bbe\u7f6e\u63a5\u6536\u5c4f\u853d\u5bc4\u5b58\u5668\u548c\u8fc7\u6ee4\u5bc4\u5b58\u5668"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#3", 
            "text": "MCP2515\u53ef\u4ee5\u5728\u8f6e\u8be2\u6a21\u5f0f\u4e0b\u5de5\u4f5c\uff0c\u5176\u4e2d\u8f6f\u4ef6\u68c0\u67e5\u63a5\u6536\u5230\u7684\u5e27\uff0c\u6216\u4f7f\u7528\u9644\u52a0\u5f15\u811a\u6765\u53d1\u4fe1\u53f7\u901a\u77e5\u5e27\u5df2\u88ab\u63a5\u6536\u6216\u53d1\u9001\u5b8c\u6210\u3002  \u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8f6e\u8be2\u63a5\u6536\u5230\u7684\u5e27\u3002  INT8U MCP_CAN::checkReceive(void);  \u5982\u679c\u5e27\u5230\u8fbe\uff0c\u8be5\u51fd\u6570\u5c06\u8fd4\u56de1\uff0c\u5982\u679c\u6ca1\u6709\u5230\u8fbe\uff0c\u5219\u8fd4\u56de0\u3002", 
            "title": "3. \u6821\u9a8c\u63a5\u6536"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#4-can-id", 
            "text": "\u5f53\u67d0\u4e9b\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u83b7\u53d6\u201c\u53d1\u9001\u201d\u8282\u70b9\u7684CAN ID\u3002  INT32U MCP_CAN::getCanId(void)", 
            "title": "4. \u83b7\u53d6 CAN ID"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#5", 
            "text": "CAN.sendMsgBuf(INT8U id, INT8U ext, INT8U len, data_buf);  \u8fd9\u662f\u5c06\u6570\u636e\u53d1\u9001\u5230\u603b\u7ebf\u4e0a\u7684\u51fd\u6570\u3002\u5176\u4e2d\uff1a\n*  id  \u8868\u793a\u6570\u636e\u6765\u6e90\n*  ext  \u8868\u793a\u5e27\u7684\u72b6\u6001\u3002'0'\u8868\u793a\u6807\u51c6\u5e27\u3002'1'\u8868\u793a\u6269\u5c55\u5e27\u3002\n*  len  \u8868\u793a\u6b64\u5e27\u7684\u957f\u5ea6\u3002\n*  data_buf  \u662f\u6b64\u6d88\u606f\u7684\u5185\u5bb9\u3002  \u4f8b\u5982\uff0c\u5728\u201c\u53d1\u9001\u201d\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6709\uff1a  unsigned char stmp[8] = {0, 1, 2, 3, 4, 5, 6, 7};\nCAN.sendMsgBuf(0x00, 0, 8, stmp); //send out the message  stmp  to the bus and tell other devices this is a standard frame from 0x00.", 
            "title": "5. \u53d1\u9001\u6570\u636e"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#6", 
            "text": "\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u5728\u201c\u63a5\u6536\u201d\u8282\u70b9\u4e0a\u63a5\u6536\u6570\u636e\uff1a  CAN.readMsgBuf(unsigned char len, unsigned char buf);  \u5728\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u90fd\u8bbe\u7f6e\u597d\u7684\u6761\u4ef6\u4e0b\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u4f1a\u63a5\u6536\u6ee1\u8db3\u5c4f\u853d\u5668\u548c\u8fc7\u6ee4\u5668\u7b5b\u9009\u6761\u4ef6\u7684\u6570\u636e\u5e27\u3002   len  \u8868\u793a\u6570\u636e\u957f\u5ea6\u3002  buf  \u662f\u5b58\u50a8\u6570\u636e\u7684\u4f4d\u7f6e\u3002", 
            "title": "6. \u63a5\u6536\u6570\u636e"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#_6", 
            "text": "\u6211\u4eec\u63d0\u4f9b\u4e86\u8bb8\u591a\u9891\u7e41\u4f7f\u7528\u7684\u6ce2\u7279\u7387\uff0c\u5982\u4e0b\u6240\u793a\uff1a  #define CAN_5KBPS    1\n#define CAN_10KBPS   2\n#define CAN_20KBPS   3\n#define CAN_25KBPS   4\n#define CAN_31KBPS   5\n#define CAN_33KBPS   6\n#define CAN_40KBPS   7\n#define CAN_50KBPS   8\n#define CAN_80KBPS   9\n#define CAN_83KBPS   10\n#define CAN_95KBPS   11\n#define CAN_100KBPS  12\n#define CAN_125KBPS  13\n#define CAN_200KBPS  14\n#define CAN_250KBPS  15\n#define CAN_500KBPS  16\n#define CAN_666KBPS  17\n#define CAN_1000KBPS 18  \u7136\u800c\uff0c\u60a8\u4ecd\u7136\u53ef\u80fd\u627e\u4e0d\u5230\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8f6f\u4ef6\u6765\u5e2e\u52a9\u60a8\u8ba1\u7b97\u6240\u9700\u7684\u6ce2\u7279\u7387\u3002  \u70b9\u51fb  \u8fd9\u91cc  \u6765\u4e0b\u8f7d\u8be5\u8f6f\u4ef6\u3002    Note  \u8fd9\u4e2a\u8f6f\u4ef6\u4ec5\u4ec5\u652f\u6301Windows\u7cfb\u7edf\uff0c\u5982\u679c\u60a8\u65e0\u6cd5\u6253\u5f00\u5b83\uff0c\u6b22\u8fce\u968f\u65f6\u901a\u8fc7\u90ae\u4ef6\u8054\u7cfb   \u6765\u83b7\u53d6\u6280\u672f\u652f\u6301\u3002   \u6253\u5f00\u8f6f\u4ef6\uff0c\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u8bbe\u7f6e\u4f60\u60f3\u8981\u7684\u6ce2\u7279\u7387\uff0c\u7136\u540e\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u7136\u540e\u70b9\u51fb\u8ba1\u7b97\u3002  \u7136\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e9b\u6570\u636e\uff0ccfg1\uff0ccfg2\u548ccfg3\u3002  \u60a8\u9700\u8981\u5728\u5e93\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u4ee3\u7801\u3002  \u6253\u5f00  mcp_can_dfs.h , \u4f60\u9700\u8981\u5c06\u4e0b\u5217\u4ee3\u7801\u6dfb\u52a0\u5230\u7b2c272\u884c\u5de6\u53f3\u3002  #define MCP_16MHz_xxxkBPS_CFG1 (cfg1)    // xxx is the baud rate you need\n#define MCP_16MHz_xxxkBPS_CFG2 (cfg2)\n#define MCP_16MHz_xxxkBPS_CFG3 (cfg2)  \u7136\u540e\u8ba9\u6211\u4eec\u8df3\u8f6c\u5230\u7b2c390\u884c, \u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a  #define CAN_xxxKBPS NUM       // xxx is the baudrate you need, and NUM is a number, you need to get a different from the other rates.  \u6253\u5f00  mcp_can.cpp , \u8df3\u8f6c\u5230\u51fd\u6570**mcp2515_configRate**(\u5927\u81f4\u5728\u7b2c190\u884c), \u7136\u540e\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801:  case (CAN_xxxKBPS):\n    cfg1 = MCP_16MHz_xxxkBPS_CFG1;\n    cfg2 = MCP_16MHz_xxxkBPS_CFG2;\n    cfg3 = MCP_16MHz_xxxkBPS_CFG3;\n    break;  \u7136\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u60a8\u9700\u8981\u7684\u6ce2\u7279\u7387\u4e86\u3002\u5f53\u60a8\u4f7f\u7528\u7684\u6ce2\u7279\u7387\u65f6\uff0c\u8bf7\u7ed9\u6211\u4eec\u4e00\u4e2agithub\u7684\u8bf7\u6c42\uff0c\u8fd9\u6837\u6211\u53ef\u4ee5\u6dfb\u52a0\u5230\u5e93\u6765\u5e2e\u52a9\u5176\u4ed6\u4eba\u3002\u611f\u8c22\uff01", 
            "title": "\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6ce2\u7279\u7387"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#_7", 
            "text": "\u5982\u679c\u60a8\u60f3\u4f7f\u7528CAN-BUS \u6269\u5c55\u677f\u505a\u4e00\u4e9b\u9177\u70ab\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u53ef\u4f9b\u53c2\u8003\u3002", 
            "title": "\u9879\u76ee\u5de5\u7a0b"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#can-bus", 
            "text": "Ever wanted to play a car/truck simulator with a real dashboard on your PC? Me too! I'm trying to control a VW Polo 6R dashboard via CAN Bus with an Arduino Uno and a Seeed CAN Bus Shield. Inspired by Silas Parker. Thanks Sepp and Is0-Mick for their great support!", 
            "title": "\u5927\u4f17 CAN BUS \u5c0f\u6e38\u620f"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#can-bus_1", 
            "text": "Modern Vehicles all come equipped with a CAN-BUS Controller Area Network, Instead of having a million wires running back and forth from various devices in your car to the battery, its making use of a more clever system.  All electronic functions are connected to the TIPM, (Totally integrated Power Module), such as solenoids/relays to lock the doors or mini motors to wind the windows etc.  From each node (IE Switch pod that controls your windows or electric door locks) it broadcasts a message across the CAN. When the TIPM detects a valid message it will react accordingly like, lock the doors, switch on lights and so on.", 
            "title": "\u9ed1\u8fdb\u8f66\u8f7d CAN-BUS"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#faq", 
            "text": "Q1: \u6211\u65e0\u6cd5\u4ece\u5176\u4ed6CAN\u8bbe\u5907\u83b7\u53d6\u6570\u636e\u3002   \u68c0\u67e5\u8fde\u63a5\u662f\u5426\u6b63\u786e  \u68c0\u67e5\u6ce2\u7279\u7387\u8bbe\u7f6e\u662f\u5426\u6b63\u786e   Q2: \u4e32\u884c\u76d1\u89c6\u5668\u6253\u5370\u5931\u8d25\u3002  *\u68c0\u67e5CS\u5f15\u811a\u8bbe\u7f6e\u662f\u5426\u4e0e\u4ee3\u7801\u5339\u914d\u3002\u5bf9\u4e8eCAN\u603b\u7ebf\u6269\u5c55\u677fV1.1 / 1.2 /2.0 CS \u5f15\u811a\u9ed8\u8ba4\u8fde\u63a5\u5230 D9\uff0c\u5176\u4ed6\u5219\u4e3a D10\u3002  Q3. \u5982\u679c\u6211\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u6280\u672f\u652f\u6301\u3002   \u60a8\u53ef\u4ee5\u5728 Seeed \u8bba\u575b  Seeed Forum  \u7559\u8a00\u6216\u8005or \u7ed9\u4e0b\u5217\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6\u81f3  .", 
            "title": "FAQ"
        }, 
        {
            "location": "/CAN-BUS_Shield_V2.0/#_8", 
            "text": "\u3010PDF\u3011 CAN-BUS Shield V2.0 Schmatics  \u3010Eagle\u539f\u7406\u56fe\u3011 Schematic   PCB of CAN-BUS Shield V2.0  \u3010CAN_BUS_Shield\u5e93\u3011 Arduino Library for CAN-BUS Shield  \u3010MCP2515\u6570\u636e\u624b\u518c\u3011 MCP2515 datasheet  \u3010MCP2551\u6570\u636e\u624b\u518c\u3011 MCP2551 datasheet  \u3010\u793a\u4f8b\u7a0b\u5e8f\u3011 An OBD Demo  \u3010MCP2515\u6ce2\u7279\u7387\u8ba1\u7b97\u5de5\u5177\u3011 MCP2515 Baud Rate Tool  \u3010USB-CAN\u5206\u6790\u5668\u3011 USB-CAN Analyzer  \u3010\u7ebf\u7f06DB9\u8f6cOBD2\u3011 DB9 to OBD2 Cable", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Music_Shield_V2.2/", 
            "text": "\u662f\u65f6\u5019\u5efa\u7acb\u60a8\u7684\u5b9e\u65f6 MIDI \u4e50\u5668/\u97f3\u4e50\u64ad\u653e\u5668\u4e86\uff01 \u5b83\u53ef\u4ee5\u64ad\u653e\u591a\u79cd\u683c\u5f0f\uff0c\u5305\u62ec MP3\uff0cWMA\uff0cWAV\uff0cAAC\uff0cMIDI\uff0cOgg Vorbis \u3002 Music Shield \u662f\u4e0e Arduino\uff0cSeeeduino\uff0cSeeeduino Mega \u548c Arduino Mega \u517c\u5bb9\u7684\u97f3\u9891\u7f16\u7801\u5668/\u89e3\u7801\u5668\u3002 \u5b83\u57fa\u4e8e VC1053B \u82af\u7247\uff0c\u4f7f\u5176\u80fd\u591f\u4ece SD \u5361\u64ad\u653e\u97f3\u9891\u6587\u4ef6\uff0c\u5e76\u8fdb\u884c\u77ed\u65f6\u8bb0\u5f55\u3002 \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5b83\u8f7b\u677e\u66f4\u6539\u5176\u786c\u4ef6\u5b89\u88c5\u6765\u64ad\u653e MIDI \u97f3\u7b26\u3002 \u7531\u4e8e SPI \u901a\u4fe1\u6a21\u5f0f\uff0c\u5b83\u4fdd\u7559\u4e86 IO \u7aef\u53e3\u7684\u6700\u5c0f\u6570\u91cf\uff0c\u4fbf\u4e8e\u7528\u6237\u81ea\u5df1\u5f00\u53d1\u6b64\u8bbe\u5907\u3002 \u6b64\u5916\uff0c\u65b0\u7684\u591a\u529f\u80fd\u6309\u94ae\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u66f4\u5927\u7684\u4fbf\u5229\u3002\n\n\n\n\n\n\n\u6ce8\u610f\n\n\u5f55\u97f3\u529f\u80fd\u4ec5\u9002\u7528\u4e8e Seeeduino Mega \u548c Arduino Mega \u3002 \u800c\u60a8\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u5bb9\u91cf SD \u5361\u662f 2GB \u3002\n\n\n\n\n\u517c\u5bb9\u6027\n\n\n\u6211\u4eec\u751f\u4ea7\u4e86\u5927\u91cf\u7684\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u8fd9\u4e9b\u677f\u4e0e\u5e73\u53f0\u677f\u7684\u517c\u5bb9\u6027\u3002\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0c\u201c\u4e0d\u63a8\u8350\u201d\u610f\u5473\u7740\u5b83\u53ef\u80fd\u6709\u673a\u4f1a\u4e0e\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\uff0c\u5982\u8df3\u7ebf\u6216\u91cd\u5199\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u6709\u5174\u8da3\u4e86\u89e3\u66f4\u591a\uff0c\u6b22\u8fce\u4e0etechsupport@seeed.cc\u8054\u7cfb\u3002\n\n\n\n\n\u70b9\u51fb\u67e5\u770b\u5b8c\u6574\u56fe\u7247\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\u591a\u529f\u80fd\u6309\u94ae\uff1a\n \u66f4\u6539\u97f3\u91cf\u5e76\u9009\u62e9\u6b4c\u66f2\u3002\n\n\n\u64ad\u653e/\u6682\u505c\u6307\u793a\u706f\uff08\u7eff\u8272\uff09\uff1a\n \u64ad\u653e\u65f6\u95ea\u70c1\u3002\n\n\n\u8033\u673a\u63a5\u53e3\uff1a\n \u53ef\u9a71\u52a8 16 ohm \u6216 32ohm \u8033\u673a\uff0c\u53ef\u4f5c\u4e3a\u5916\u90e8\u97f3\u9891\u8f93\u5165\u7aef\u53e3\u3002\n\n\nMicro SD\u5361\n\uff1a\u53ef\u4ee5\u662f FAT16 \u6216 FAT32 \uff0c\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u5bb9\u91cf SD \u5361\u662f 2GB\u3002\n\n\nU2\uff1a\n VS1053B IC\uff0cOgg Vorbis / MP3 / AAC / WMA / FLAC / MIDI \u97f3\u9891\u7f16\u89e3\u7801\u5668\u3002\n\n\nU3\uff0cU7\uff1a\n 74VHC125 IC\uff0cQuad Buffer\n\n\nI2S\uff1a\n \u7528\u4e8e\u6570\u5b57\u97f3\u9891\u8f93\u5165/\u8f93\u51fa\u3002\n\n\nISP\u63a5\u53e3\n\uff1a\u7528\u4e8e\u5728\u4e0e Mega \u7cfb\u5217\u4ea7\u54c1\u4e00\u8d77\u4f7f\u7528\u65f6\u5e26\u6765 SPI \u7aef\u53e3\u3002\n\n\nArduino \u4e0a\u5f15\u811a\u7684\u4f7f\u7528\n\n\n\u7528\u4e8e\u64ad\u653e\u63a7\u5236\u7684\u5f15\u811a\uff1a\n\n\nD3 - \u63a5\u6536\u589e\u52a0\u97f3\u91cf\u6309\u94ae\u7684\u4fe1\u53f7\u3002\n\n\nD4 - \u63a5\u6536\u4e0b\u4e00\u9996\u6b4c\u66f2\u529f\u80fd\u6309\u94ae\u7684\u4fe1\u53f7\u3002\n\n\nD5 - \u63a5\u6536\u7528\u4e8e\u64ad\u653e\u548c\u505c\u6b62\u548c\u5f55\u5236\u529f\u80fd\u6309\u94ae\u7684\u4fe1\u53f7\u3002\n\n\nD6 - \u63a5\u6536\u4e0a\u4e00\u9996\u6b4c\u66f2\u529f\u80fd\u6309\u94ae\u7684\u4fe1\u53f7\u3002\n\n\nD7 - \u63a5\u6536\u964d\u4f4e\u97f3\u91cf\u6309\u94ae\u7684\u4fe1\u53f7\u3002\n\n\nD8 - \u7eff\u8272\u6307\u793a\u3002\n\n\n\u7528\u4e8e SPI \u63a5\u53e3\u7684\u5f15\u811a:\n\n\nD10 - SPI \u7247\u9009\n\n\nD11 - SPI MOSI\n\n\nD12 - SPI MISO\n\n\nD13 - SPI SCK\n\n\n\u7528\u4e8eVS1053\u63a5\u53e3\u7684\u5f15\u811a:\n\n\nA0 - VS1053 \u7684\u590d\u4f4d\n\n\nA1 - VS1053 \u7684\u6570\u636e\u8981\u6c42\n\n\nA2 - VS1053 \u7684\u6570\u636e\u9009\u62e9\n\n\nA3 - VS1053 \u7684\u82af\u7247\u9009\u62e9\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\n\n\n\u6ce8\u610f\n\n\n\u5982\u679c\u8981\u4f7f\u7528 MIDI \u529f\u80fd\uff0c\u5219\u9700\u8981\u66f4\u6539\u786c\u4ef6\u5b89\u88c5\u3002\n\n\n\u5982\u679c\u60a8\u66f4\u6539\u4e86\u786c\u4ef6\u5b89\u88c5\u6765\u4f7f\u7528 MIDI \u529f\u80fd\uff0c\u5219\u5c06\u5176\u6062\u590d\u5230\u539f\u59cb\u72b6\u6001\u4e4b\u524d\uff0c\u60a8\u5c06\u65e0\u6cd5\u4f7f\u7528\u64ad\u653e\u548c\u5f55\u5236\u529f\u80fd\u3002\n\n\n\n\n\n**\u00a0\u97f3\u4e50\u64ad\u653e**\n\n\n\n\n\u786e\u4fdd micro SD \u5361\u4e2d\u6709\u6b4c\u66f2\u3002\n\n\n\u4e0b\u8f7d \nMusic shield V2.0 \u5e93\n\n\n\u5c06\u6587\u4ef6\u5939\u89e3\u538b\u7f29\u5e76\u590d\u5236\u5230 Arduino \u7684\u5e93\u8def\u5f84\uff1a\n..  arduino-1.0  libraries\n\u3002\n\n\n\n\n\n\n\u6ce8\u610f\n\n\n\u5982\u679c Arduino \u5728\u52a0\u8f7d\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u8bf7\u66f4\u6539\u63d0\u53d6\u7684\u5e93\u7684\u6587\u4ef6\u5939\u540d\u79f0\u3002\n\n\n\u5982\u679c\u5728\u7f16\u8bd1\u65f6\u5b58\u5728\n'arduino.h\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55'\n\u9519\u8bef\uff0c\u8bf7\u66f4\u6539\u793a\u4f8b\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u6807\u9898\uff08to Arduino.h\uff09\u3002\n\n\n\n\n\n\u6f14\u793a1\uff1a\u64ad\u653e\u6b4c\u66f2\uff08\u4f8b\u5982\u4ee5\u968f\u673a\u64ad\u653e\u6a21\u5f0f\u64ad\u653e\uff09\n\n\n\u4e3a\u4e86\u4f7f\u7528\u64ad\u653e\u529f\u80fd\uff0c\u60a8\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a\u64ad\u653e\u5217\u8868\u3002\n\n\n\n\n\n\n\u91cd\u65b0\u542f\u52a8 Arduino IDE \u3002 \u901a\u8fc7\u8def\u5f84\u6253\u5f00 \u201ccreatList\u201d \u793a\u4f8b : \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n MusicPlayer \n creatList as below\n.\n\n\n\u00a0\n\n\n\n\n\n\n\u8bbe\u7f6e\u64ad\u653e\u6a21\u5f0f\u3002 \u5728 \u201ccreatList\u201d \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u529f\u80fd\u63cf\u8ff0\u5982\u4e0b\u3002\n\n\n\u540d\u79f0:\n setPlayMode(unsigned char playmode);\n\n\n\u529f\u80fd:\n \u8bbe\u7f6e\u64ad\u653e\u6a21\u5f0f\u3002 \u53ef\u4ee5\u8bbe\u7f6e\u56db\u79cd\u6a21\u5f0f\uff1a MODE_NORMAL\uff0cMODE_SHUFFLE\uff0cMODE_REPEAT_LIST\uff0cMODE_REPEAT_ONE\u3002  \u6bcf\u79cd\u6a21\u5f0f\u4ee3\u8868\u4e0d\u540c\u7684\u64ad\u653e\u987a\u5e8f\u3002\n\n\n\n\n\n\n\n\n\u9009\u62e9\u60a8\u6b63\u5728\u4f7f\u7528\u8def\u5f84\u7684 Arduino \u677f\u7684\u7c7b\u578b\uff1a \nTools\uff08\u5de5\u5177\uff09 \n Board\uff08\u677f\uff09 \n Arduino UNO.\n\n\n\n\n\u9009\u62e9\u8def\u5f84\u6b63\u5728\u4f7f\u7528\u7684\u6b63\u786e\u7684\u4e32\u53e3: \nTools\uff08\u5de5\u5177\uff09 \n Serial Port\uff08\u4e32\u884c\u7aef\u53e3\uff09 \n  COM3.\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002\u5f53\u201c\u5b8c\u6210\u4e0a\u4f20\u201d\u51fa\u73b0\u65f6\uff0c\u70b9\u51fb\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u4f1a\u53d1\u73b0\u6b4c\u66f2\u7684\u987a\u5e8f\u662f\u5728\u5217\u8868\u4e2d\u968f\u673a\u5316\u7684\u3002\n\n\n\n\n\n\n\n\n\u5f53\u6309\u4e0b\u591a\u529f\u80fd\u6309\u94ae\u65f6\uff0c\u97f3\u91cf\u5c06\u4f1a\u6539\u53d8\u3002 \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u522b\u7684\u64ad\u653e\u6a21\u5f0f\u3002\n\n\n\u6f14\u793a2\uff1a\u64ad\u653e\u6240\u9009\u6b4c\u66f2\n\n\n\n\n\n\n\u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u64ad\u653e SD \u5361\u4e2d\u6240\u6709\u6b4c\u66f2\u7684\u90e8\u5206\u6b4c\u66f2\u3002 \u901a\u8fc7\u8def\u5f84\u6253\u5f00 \u201caddToList\u201d \u793a\u4f8b\uff1a \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n MusicPlayer \n  addToList .\n\n\n\n\n\n\n\n\n\u4ece\u64ad\u653e\u5217\u8868\u4e2d\u9009\u62e9\u6b4c\u66f2\u3002\u60a8\u53ea\u9700\u8981\u5728\u51fd\u6570 addToPlayList\uff08char * songName\uff09 \u4e2d\u6309\u540d\u79f0\u6b63\u786e\u5217\u51fa\u8981\u64ad\u653e\u7684\u6b4c\u66f2\u3002\n\u4f46\u60a8\u5fc5\u987b\u786e\u4fdd\u8be5\u6b4c\u66f2\u5df2\u5b58\u50a8\u5728SD\u5361\u4e2d\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6b4c\u66f2\u7684\u683c\u5f0f\u5fc5\u987b\u662f MP3\uff0cWMA\uff0cWAV\uff0cAAC\uff0cMIDI\uff0cOgg Vorbis \u4e4b\u4e00\u3002\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002 \u5b8c\u6210\u4e0a\u4f20\u540e\uff0c\u5c06\u64ad\u653e\u65b0\u7684\u6dfb\u52a0\u6b4c\u66f2\u3002\n\n\n\n\n\n\n\u6f14\u793a3\uff1a\u4ece\u6a21\u62df\u7aef\u53e3\u63a7\u5236\u97f3\u91cf\n\n\n\n\n\n\n\u5c06 Grove-Base Shield \u8fde\u63a5\u5230 Music shield \u4e0a\uff0c\u4f7f\u7528 Grove \u8fde\u63a5\u7ebf\u8fde\u63a5 Rotary \u7684 Grove \u7aef\u53e3\u548c Base Shield \u7684\u6a21\u62df\u7aef\u53e3 \n4\n \u3002 \u60a8\u4e5f\u53ef\u4ee5\u66f4\u6539\u4e3a\u6570\u5b57\u7aef\u53e3\u3002 \u4f46\u662f\u4e0d\u8981\u5fd8\u4e86\u5728\u6f14\u793a\u4ee3\u7801\u7684\u5b9a\u4e49\u4e2d\u540c\u65f6\u66f4\u6539\u7aef\u53e3\u53f7\u3002\n\n\n\n\n\n\n\n\n\u6253\u5f00 \u201canalogInputControl\u201d \u793a\u4f8b\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684 Arduino \u677f\u4e0a\u3002\n\n\n\n\n\n\n\u65cb\u8f6c\u65cb\u94ae\u66f4\u6539\u97f3\u4e50\u97f3\u91cf\u3002\n\n\n\n\n\n\n\u6f14\u793a4\uff1a\u5f55\u97f3\uff1a\uff08\u4ec5\u652f\u6301 ATmega1280 \u548c ATmega2560 \uff09\n\n\n\n\n\u5728 Music Shield \u5e93\u4e2d\u4e0a\u4f20\u7a0b\u5e8f\uff0c\u4f8b\u5982\u7a0b\u5e8f \u201ccreatList\u201d \u3002 \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5b83\u5c06\u5728 SD \u5361\u4e0a\u64ad\u653e\u97f3\u9891\u6587\u4ef6\u3002\n\n\n\u6309\u4e0b\u591a\u529f\u80fd\u6309\u94ae 5 \u79d2\u949f\uff0c\u7136\u540e\u6307\u793a\u706f\u5c06\u7184\u706d\u3002\n\n\n\u518d\u6b21\u6309\u4e0b\u591a\u529f\u80fd\u6309\u94ae 5 \u79d2\u949f\uff0c\u7136\u540e\u97f3\u4e50\u5c4f\u5e55\u5f00\u59cb\u5f55\u5236\uff0c\u7eff\u8272\u6307\u793a\u706f\u5c06\u95ea\u70c1\u3002\n\n\n\u518d\u6b21\u5feb\u901f\u6309\u4e0b\u591a\u529f\u80fd\u6309\u94ae\uff0c\u5c06\u505c\u6b62\u5f55\u5236\u3002\n\n\n\u8bb0\u5f55\u5c06\u5728\u6700\u540e\u4e00\u4e2a\u5730\u65b9\u64ad\u653e\u3002\n\n\n\n\n\u4f7f\u7528 MIDI \uff0c\u65e0\u9700\u4fee\u6539\u786c\u4ef6\n\n\nVS1058X \u7684\u5b9e\u65f6 MIDI \u6a21\u5f0f\uff1a\n\n\n\u901a\u8fc7 SPI \u6216 UART \u53d1\u9001\u7684 MIDI \u547d\u4ee4\u5373\u53ef\u5b9e\u73b0\u201c\u5b9e\u65f6 MIDI \u6a21\u5f0f\u201d\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u542f\u7528\uff1a\n\n\n\u65b9\u6cd5\uff1a\u4e00\u5f00\u59cb\uff0c\u901a\u8fc7 SPI \u7aef\u53e3\u53d1\u9001\u4e00\u4e2a\u5c0f\u7684\u8f6f\u4ef6\u8865\u4e01\u3002\n\n\n    /*software patch for MIDI Play*/\nconst unsigned short gVS1053_MIDI_Patch[28]={\n    /*if you don\nt let GPIO1 = H,please send this patch by spi*/\n    0x0007, 0x0001, 0x8050, 0x0006, 0x0014, 0x0030, 0x0715, 0xb080, /* 0 */\n    0x3400, 0x0007, 0x9255, 0x3d00, 0x0024, 0x0030, 0x0295, 0x6890, /* 8 */\n    0x3400, 0x0030, 0x0495, 0x3d00, 0x0024, 0x2908, 0x4d40, 0x0030, /* 10 */\n    0x0200, 0x000a, 0x0001, 0x0050,\n};\nusing that function to load:\n    /*\n    **@ function name: loadMidiPatch\n    **@ usage:load a software patch for vs10xx\n    **@ input:none\n    **@ retval:none\n    */\nvoid VS10XX::loadMidiPlugin(void)\n{\n    int i=0;\n    Serial.print(\nload MIDI Plugin...\\r\\n\n);\n    while(i \n sizeof(gVS1053_MIDI_Patch)/sizeof(gVS1053_MIDI_Patch[0]))\n    {\n        unsigned short addr, n, val;\n        addr = gVS1053_MIDI_Patch[i++];\n        n = gVS1053_MIDI_Patch[i++];\n        while(n--)\n        {\n            val = gVS1053_MIDI_Patch[i++];\n            writeRegister(addr, val \n 8, val\n0xff);\n        }\n    }\n    Serial.print(\ndone\\r\\n\n);\n}\n\n\n\n\n\u60a8\u9700\u8981\u77e5\u9053\u7684\u662f\uff0c\u6709\u4e00\u4e2a\u540d\u4e3a jdksmidi \u7684\u5f00\u653e\u6e90\u7801\u5e93\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5c0f\u7684\u66f4\u6539\u6765\u5236\u4f5c\u81ea\u5df1\u7684 MIDI \u89e3\u7801\u5668\u3002 \njdksmidi git-hub page\n \u4e3a\u60a8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5b9e\u65f6\u6a21\u5f0f\u7684 MIDI API \uff08MusicPlayer.cpp\uff09\uff1a\n\n     midiNoteOn()\n     midiNoteOff()\n     midiWriteData()\n\n\n\u73b0\u5728\u662f\u4ee5\u4efb\u4f55\u6a21\u5f0f\uff08\u5355\u901a\u9053\u6216\u591a\u901a\u9053\uff09\u6784\u5efa\u60a8\u7684\u5b9e\u65f6 MIDI \u4e50\u5668/\u97f3\u4e50\u64ad\u653e\u5668\u7684\u65f6\u5019\u4e86\u3002 \u5bf9\u4e8e\u60a8\u7684\u8d21\u732e\u6211\u4eec\u5c06\u4e0d\u80dc\u611f\u6fc0\u3002 \u6f14\u793a MIDI \u64ad\u653e\u5668\u88ab\u6dfb\u52a0\u5230\u6700\u65b0\u7684\u5e93\u3002  MIDI \u6f14\u793a\uff08\u4e0a\u4f20\u4ee3\u7801\uff0c\u5b8c\u6210\u540e\uff0c\u60a8\u5c06\u542c\u5230 Fancy MIDI \u97f3\u4e50\uff09\uff1a\n\n\n\n\n\u4f9b\u53c2\u8003\n\n\nMIDI \u53f7\u7801\u5907\u6ce8\u53c2\u8003\u5217\u8868\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\nMusic Shield V2.2 Eagle Files\n\n\nMusic Shield V2.2 Schematic.pdf\n\n\nVS1053 Datasheet\n\n\nMusic Shield libraries", 
            "title": "Music Shield V2.2"
        }, 
        {
            "location": "/Music_Shield_V2.2/#_1", 
            "text": "\u6211\u4eec\u751f\u4ea7\u4e86\u5927\u91cf\u7684\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u8fd9\u4e9b\u677f\u4e0e\u5e73\u53f0\u677f\u7684\u517c\u5bb9\u6027\u3002   Note  \u8bf7\u6ce8\u610f\uff0c\u201c\u4e0d\u63a8\u8350\u201d\u610f\u5473\u7740\u5b83\u53ef\u80fd\u6709\u673a\u4f1a\u4e0e\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\uff0c\u5982\u8df3\u7ebf\u6216\u91cd\u5199\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u6709\u5174\u8da3\u4e86\u89e3\u66f4\u591a\uff0c\u6b22\u8fce\u4e0etechsupport@seeed.cc\u8054\u7cfb\u3002   \u70b9\u51fb\u67e5\u770b\u5b8c\u6574\u56fe\u7247", 
            "title": "\u517c\u5bb9\u6027"
        }, 
        {
            "location": "/Music_Shield_V2.2/#_2", 
            "text": "\u591a\u529f\u80fd\u6309\u94ae\uff1a  \u66f4\u6539\u97f3\u91cf\u5e76\u9009\u62e9\u6b4c\u66f2\u3002  \u64ad\u653e/\u6682\u505c\u6307\u793a\u706f\uff08\u7eff\u8272\uff09\uff1a  \u64ad\u653e\u65f6\u95ea\u70c1\u3002  \u8033\u673a\u63a5\u53e3\uff1a  \u53ef\u9a71\u52a8 16 ohm \u6216 32ohm \u8033\u673a\uff0c\u53ef\u4f5c\u4e3a\u5916\u90e8\u97f3\u9891\u8f93\u5165\u7aef\u53e3\u3002  Micro SD\u5361 \uff1a\u53ef\u4ee5\u662f FAT16 \u6216 FAT32 \uff0c\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u5bb9\u91cf SD \u5361\u662f 2GB\u3002  U2\uff1a  VS1053B IC\uff0cOgg Vorbis / MP3 / AAC / WMA / FLAC / MIDI \u97f3\u9891\u7f16\u89e3\u7801\u5668\u3002  U3\uff0cU7\uff1a  74VHC125 IC\uff0cQuad Buffer  I2S\uff1a  \u7528\u4e8e\u6570\u5b57\u97f3\u9891\u8f93\u5165/\u8f93\u51fa\u3002  ISP\u63a5\u53e3 \uff1a\u7528\u4e8e\u5728\u4e0e Mega \u7cfb\u5217\u4ea7\u54c1\u4e00\u8d77\u4f7f\u7528\u65f6\u5e26\u6765 SPI \u7aef\u53e3\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Music_Shield_V2.2/#arduino", 
            "text": "\u7528\u4e8e\u64ad\u653e\u63a7\u5236\u7684\u5f15\u811a\uff1a  D3 - \u63a5\u6536\u589e\u52a0\u97f3\u91cf\u6309\u94ae\u7684\u4fe1\u53f7\u3002  D4 - \u63a5\u6536\u4e0b\u4e00\u9996\u6b4c\u66f2\u529f\u80fd\u6309\u94ae\u7684\u4fe1\u53f7\u3002  D5 - \u63a5\u6536\u7528\u4e8e\u64ad\u653e\u548c\u505c\u6b62\u548c\u5f55\u5236\u529f\u80fd\u6309\u94ae\u7684\u4fe1\u53f7\u3002  D6 - \u63a5\u6536\u4e0a\u4e00\u9996\u6b4c\u66f2\u529f\u80fd\u6309\u94ae\u7684\u4fe1\u53f7\u3002  D7 - \u63a5\u6536\u964d\u4f4e\u97f3\u91cf\u6309\u94ae\u7684\u4fe1\u53f7\u3002  D8 - \u7eff\u8272\u6307\u793a\u3002  \u7528\u4e8e SPI \u63a5\u53e3\u7684\u5f15\u811a:  D10 - SPI \u7247\u9009  D11 - SPI MOSI  D12 - SPI MISO  D13 - SPI SCK  \u7528\u4e8eVS1053\u63a5\u53e3\u7684\u5f15\u811a:  A0 - VS1053 \u7684\u590d\u4f4d  A1 - VS1053 \u7684\u6570\u636e\u8981\u6c42  A2 - VS1053 \u7684\u6570\u636e\u9009\u62e9  A3 - VS1053 \u7684\u82af\u7247\u9009\u62e9", 
            "title": "Arduino \u4e0a\u5f15\u811a\u7684\u4f7f\u7528"
        }, 
        {
            "location": "/Music_Shield_V2.2/#_3", 
            "text": "\u6ce8\u610f  \u5982\u679c\u8981\u4f7f\u7528 MIDI \u529f\u80fd\uff0c\u5219\u9700\u8981\u66f4\u6539\u786c\u4ef6\u5b89\u88c5\u3002  \u5982\u679c\u60a8\u66f4\u6539\u4e86\u786c\u4ef6\u5b89\u88c5\u6765\u4f7f\u7528 MIDI \u529f\u80fd\uff0c\u5219\u5c06\u5176\u6062\u590d\u5230\u539f\u59cb\u72b6\u6001\u4e4b\u524d\uff0c\u60a8\u5c06\u65e0\u6cd5\u4f7f\u7528\u64ad\u653e\u548c\u5f55\u5236\u529f\u80fd\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Music_Shield_V2.2/#_4", 
            "text": "\u786e\u4fdd micro SD \u5361\u4e2d\u6709\u6b4c\u66f2\u3002  \u4e0b\u8f7d  Music shield V2.0 \u5e93  \u5c06\u6587\u4ef6\u5939\u89e3\u538b\u7f29\u5e76\u590d\u5236\u5230 Arduino \u7684\u5e93\u8def\u5f84\uff1a ..  arduino-1.0  libraries \u3002    \u6ce8\u610f  \u5982\u679c Arduino \u5728\u52a0\u8f7d\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u8bf7\u66f4\u6539\u63d0\u53d6\u7684\u5e93\u7684\u6587\u4ef6\u5939\u540d\u79f0\u3002  \u5982\u679c\u5728\u7f16\u8bd1\u65f6\u5b58\u5728 'arduino.h\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55' \u9519\u8bef\uff0c\u8bf7\u66f4\u6539\u793a\u4f8b\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u6807\u9898\uff08to Arduino.h\uff09\u3002   \u6f14\u793a1\uff1a\u64ad\u653e\u6b4c\u66f2\uff08\u4f8b\u5982\u4ee5\u968f\u673a\u64ad\u653e\u6a21\u5f0f\u64ad\u653e\uff09  \u4e3a\u4e86\u4f7f\u7528\u64ad\u653e\u529f\u80fd\uff0c\u60a8\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a\u64ad\u653e\u5217\u8868\u3002    \u91cd\u65b0\u542f\u52a8 Arduino IDE \u3002 \u901a\u8fc7\u8def\u5f84\u6253\u5f00 \u201ccreatList\u201d \u793a\u4f8b :  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   MusicPlayer   creatList as below .  \u00a0    \u8bbe\u7f6e\u64ad\u653e\u6a21\u5f0f\u3002 \u5728 \u201ccreatList\u201d \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u529f\u80fd\u63cf\u8ff0\u5982\u4e0b\u3002  \u540d\u79f0:  setPlayMode(unsigned char playmode);  \u529f\u80fd:  \u8bbe\u7f6e\u64ad\u653e\u6a21\u5f0f\u3002 \u53ef\u4ee5\u8bbe\u7f6e\u56db\u79cd\u6a21\u5f0f\uff1a MODE_NORMAL\uff0cMODE_SHUFFLE\uff0cMODE_REPEAT_LIST\uff0cMODE_REPEAT_ONE\u3002  \u6bcf\u79cd\u6a21\u5f0f\u4ee3\u8868\u4e0d\u540c\u7684\u64ad\u653e\u987a\u5e8f\u3002     \u9009\u62e9\u60a8\u6b63\u5728\u4f7f\u7528\u8def\u5f84\u7684 Arduino \u677f\u7684\u7c7b\u578b\uff1a  Tools\uff08\u5de5\u5177\uff09   Board\uff08\u677f\uff09   Arduino UNO.   \u9009\u62e9\u8def\u5f84\u6b63\u5728\u4f7f\u7528\u7684\u6b63\u786e\u7684\u4e32\u53e3:  Tools\uff08\u5de5\u5177\uff09   Serial Port\uff08\u4e32\u884c\u7aef\u53e3\uff09    COM3.   \u4e0a\u4f20\u4ee3\u7801\u3002\u5f53\u201c\u5b8c\u6210\u4e0a\u4f20\u201d\u51fa\u73b0\u65f6\uff0c\u70b9\u51fb\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u4f1a\u53d1\u73b0\u6b4c\u66f2\u7684\u987a\u5e8f\u662f\u5728\u5217\u8868\u4e2d\u968f\u673a\u5316\u7684\u3002     \u5f53\u6309\u4e0b\u591a\u529f\u80fd\u6309\u94ae\u65f6\uff0c\u97f3\u91cf\u5c06\u4f1a\u6539\u53d8\u3002 \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u522b\u7684\u64ad\u653e\u6a21\u5f0f\u3002  \u6f14\u793a2\uff1a\u64ad\u653e\u6240\u9009\u6b4c\u66f2    \u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u64ad\u653e SD \u5361\u4e2d\u6240\u6709\u6b4c\u66f2\u7684\u90e8\u5206\u6b4c\u66f2\u3002 \u901a\u8fc7\u8def\u5f84\u6253\u5f00 \u201caddToList\u201d \u793a\u4f8b\uff1a  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   MusicPlayer    addToList .     \u4ece\u64ad\u653e\u5217\u8868\u4e2d\u9009\u62e9\u6b4c\u66f2\u3002\u60a8\u53ea\u9700\u8981\u5728\u51fd\u6570 addToPlayList\uff08char * songName\uff09 \u4e2d\u6309\u540d\u79f0\u6b63\u786e\u5217\u51fa\u8981\u64ad\u653e\u7684\u6b4c\u66f2\u3002\n\u4f46\u60a8\u5fc5\u987b\u786e\u4fdd\u8be5\u6b4c\u66f2\u5df2\u5b58\u50a8\u5728SD\u5361\u4e2d\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6b4c\u66f2\u7684\u683c\u5f0f\u5fc5\u987b\u662f MP3\uff0cWMA\uff0cWAV\uff0cAAC\uff0cMIDI\uff0cOgg Vorbis \u4e4b\u4e00\u3002    \u4e0a\u4f20\u4ee3\u7801\u3002 \u5b8c\u6210\u4e0a\u4f20\u540e\uff0c\u5c06\u64ad\u653e\u65b0\u7684\u6dfb\u52a0\u6b4c\u66f2\u3002    \u6f14\u793a3\uff1a\u4ece\u6a21\u62df\u7aef\u53e3\u63a7\u5236\u97f3\u91cf    \u5c06 Grove-Base Shield \u8fde\u63a5\u5230 Music shield \u4e0a\uff0c\u4f7f\u7528 Grove \u8fde\u63a5\u7ebf\u8fde\u63a5 Rotary \u7684 Grove \u7aef\u53e3\u548c Base Shield \u7684\u6a21\u62df\u7aef\u53e3  4  \u3002 \u60a8\u4e5f\u53ef\u4ee5\u66f4\u6539\u4e3a\u6570\u5b57\u7aef\u53e3\u3002 \u4f46\u662f\u4e0d\u8981\u5fd8\u4e86\u5728\u6f14\u793a\u4ee3\u7801\u7684\u5b9a\u4e49\u4e2d\u540c\u65f6\u66f4\u6539\u7aef\u53e3\u53f7\u3002     \u6253\u5f00 \u201canalogInputControl\u201d \u793a\u4f8b\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684 Arduino \u677f\u4e0a\u3002    \u65cb\u8f6c\u65cb\u94ae\u66f4\u6539\u97f3\u4e50\u97f3\u91cf\u3002    \u6f14\u793a4\uff1a\u5f55\u97f3\uff1a\uff08\u4ec5\u652f\u6301 ATmega1280 \u548c ATmega2560 \uff09   \u5728 Music Shield \u5e93\u4e2d\u4e0a\u4f20\u7a0b\u5e8f\uff0c\u4f8b\u5982\u7a0b\u5e8f \u201ccreatList\u201d \u3002 \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5b83\u5c06\u5728 SD \u5361\u4e0a\u64ad\u653e\u97f3\u9891\u6587\u4ef6\u3002  \u6309\u4e0b\u591a\u529f\u80fd\u6309\u94ae 5 \u79d2\u949f\uff0c\u7136\u540e\u6307\u793a\u706f\u5c06\u7184\u706d\u3002  \u518d\u6b21\u6309\u4e0b\u591a\u529f\u80fd\u6309\u94ae 5 \u79d2\u949f\uff0c\u7136\u540e\u97f3\u4e50\u5c4f\u5e55\u5f00\u59cb\u5f55\u5236\uff0c\u7eff\u8272\u6307\u793a\u706f\u5c06\u95ea\u70c1\u3002  \u518d\u6b21\u5feb\u901f\u6309\u4e0b\u591a\u529f\u80fd\u6309\u94ae\uff0c\u5c06\u505c\u6b62\u5f55\u5236\u3002  \u8bb0\u5f55\u5c06\u5728\u6700\u540e\u4e00\u4e2a\u5730\u65b9\u64ad\u653e\u3002", 
            "title": "**\u00a0\u97f3\u4e50\u64ad\u653e**"
        }, 
        {
            "location": "/Music_Shield_V2.2/#midi", 
            "text": "VS1058X \u7684\u5b9e\u65f6 MIDI \u6a21\u5f0f\uff1a  \u901a\u8fc7 SPI \u6216 UART \u53d1\u9001\u7684 MIDI \u547d\u4ee4\u5373\u53ef\u5b9e\u73b0\u201c\u5b9e\u65f6 MIDI \u6a21\u5f0f\u201d\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u542f\u7528\uff1a  \u65b9\u6cd5\uff1a\u4e00\u5f00\u59cb\uff0c\u901a\u8fc7 SPI \u7aef\u53e3\u53d1\u9001\u4e00\u4e2a\u5c0f\u7684\u8f6f\u4ef6\u8865\u4e01\u3002      /*software patch for MIDI Play*/\nconst unsigned short gVS1053_MIDI_Patch[28]={\n    /*if you don t let GPIO1 = H,please send this patch by spi*/\n    0x0007, 0x0001, 0x8050, 0x0006, 0x0014, 0x0030, 0x0715, 0xb080, /* 0 */\n    0x3400, 0x0007, 0x9255, 0x3d00, 0x0024, 0x0030, 0x0295, 0x6890, /* 8 */\n    0x3400, 0x0030, 0x0495, 0x3d00, 0x0024, 0x2908, 0x4d40, 0x0030, /* 10 */\n    0x0200, 0x000a, 0x0001, 0x0050,\n};\nusing that function to load:\n    /*\n    **@ function name: loadMidiPatch\n    **@ usage:load a software patch for vs10xx\n    **@ input:none\n    **@ retval:none\n    */\nvoid VS10XX::loadMidiPlugin(void)\n{\n    int i=0;\n    Serial.print( load MIDI Plugin...\\r\\n );\n    while(i   sizeof(gVS1053_MIDI_Patch)/sizeof(gVS1053_MIDI_Patch[0]))\n    {\n        unsigned short addr, n, val;\n        addr = gVS1053_MIDI_Patch[i++];\n        n = gVS1053_MIDI_Patch[i++];\n        while(n--)\n        {\n            val = gVS1053_MIDI_Patch[i++];\n            writeRegister(addr, val   8, val 0xff);\n        }\n    }\n    Serial.print( done\\r\\n );\n}  \u60a8\u9700\u8981\u77e5\u9053\u7684\u662f\uff0c\u6709\u4e00\u4e2a\u540d\u4e3a jdksmidi \u7684\u5f00\u653e\u6e90\u7801\u5e93\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5c0f\u7684\u66f4\u6539\u6765\u5236\u4f5c\u81ea\u5df1\u7684 MIDI \u89e3\u7801\u5668\u3002  jdksmidi git-hub page  \u4e3a\u60a8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5b9e\u65f6\u6a21\u5f0f\u7684 MIDI API \uff08MusicPlayer.cpp\uff09\uff1a      midiNoteOn()\n     midiNoteOff()\n     midiWriteData() \n\u73b0\u5728\u662f\u4ee5\u4efb\u4f55\u6a21\u5f0f\uff08\u5355\u901a\u9053\u6216\u591a\u901a\u9053\uff09\u6784\u5efa\u60a8\u7684\u5b9e\u65f6 MIDI \u4e50\u5668/\u97f3\u4e50\u64ad\u653e\u5668\u7684\u65f6\u5019\u4e86\u3002 \u5bf9\u4e8e\u60a8\u7684\u8d21\u732e\u6211\u4eec\u5c06\u4e0d\u80dc\u611f\u6fc0\u3002 \u6f14\u793a MIDI \u64ad\u653e\u5668\u88ab\u6dfb\u52a0\u5230\u6700\u65b0\u7684\u5e93\u3002  MIDI \u6f14\u793a\uff08\u4e0a\u4f20\u4ee3\u7801\uff0c\u5b8c\u6210\u540e\uff0c\u60a8\u5c06\u542c\u5230 Fancy MIDI \u97f3\u4e50\uff09\uff1a", 
            "title": "\u4f7f\u7528 MIDI \uff0c\u65e0\u9700\u4fee\u6539\u786c\u4ef6"
        }, 
        {
            "location": "/Music_Shield_V2.2/#_5", 
            "text": "MIDI \u53f7\u7801\u5907\u6ce8\u53c2\u8003\u5217\u8868", 
            "title": "\u4f9b\u53c2\u8003"
        }, 
        {
            "location": "/Music_Shield_V2.2/#_6", 
            "text": "Music Shield V2.2 Eagle Files  Music Shield V2.2 Schematic.pdf  VS1053 Datasheet  Music Shield libraries", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/W5500_Ethernet_Shield_v1.0/", 
            "text": "The W5500 Ethernet Shield v1.0 \u53ef\u4ee5\u4e3a\u60a8\u7684\u9879\u76ee\u63d0\u4f9b\u4e92\u8054\u7f51\u8fde\u63a5\u3002W5500 \u4f7f\u7528\u6237\u80fd\u591f\u901a\u8fc7\u4f7f\u7528\u5355\u82af\u7247(\u5176\u4e2d\u6709 TCP/IP stack, 10 / 100 Ethernet MAC \u548c PHY embedded)\u6765\u5b9e\u73b0\u5e94\u7528\u4e2d\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3002The W5500 Ethernet Shield v1.0 \u8fd8\u5177\u6709\u4e24\u4e2a Grove \u8fde\u63a5\u5668\u548c\u4e00\u4e2a microSD \u5361\u63d2\u69fd\uff0c\u7528\u4e8e\u652f\u6301\u9700\u6c42\u5728 Grove \u4f20\u611f\u5668\u4e2d\u5b58\u50a8\u5927\u91cf\u6570\u636e\u7684\u9879\u76ee\u3002 RJ45 \u7aef\u53e3\uff08\u4ee5\u592a\u7f51\u7ebf\u7f06\u8fde\u63a5\u5230\u7684\u4f4d\u7f6e\uff09\u8db3\u591f\u4f4e\u4f7f\u5f97\u60a8\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7684 shield\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u652f\u6301\u56fa\u7ebf\u5f0f TCP/IP \u534f\u8bae\u00a0: TCP, UDP, ICMP, IPv4, ARP, IGMP, PPPoE\n\n\n\u540c\u65f6\u652f\u6301 8 \u4e2a\u72ec\u7acb\u63d2\u5ea7\n\n\n\u652f\u6301\u6389\u7535\u6a21\u5f0f\n\n\n\u652f\u6301\u901a\u8fc7 UDP \u5524\u9192 LAN\n\n\n\u652f\u6301\u9ad8\u901f\u4e32\u884c\u5916\u8bbe\u63a5\u53e3 (SPI \u6a21\u5f0f 0, 3)\n\n\n\u7528\u4e8e TX/RX \u7f13\u51b2\u5668\u5185\u90e8 32K \u7684\u5b57\u8282\u5185\u5b58\n\n\n10BaseT/100BaseTX \u4ee5\u592a\u7f51 PHY \u5d4c\u5165\u5f0f\n\n\n\u652f\u6301\u81ea\u534f\u5546(\u5168\u53cc\u5de5\u548c\u534a\u53cc\u5de5\uff0c10 \u548c 100* based)\n\n\n\u4e0d\u652f\u6301 IP \u5206\u6bb5\n\n\n3.3V \u64cd\u4f5c\uff0c\u5177\u6709 5V I/O \u4fe1\u53f7\u5bb9\u5dee\n\n\nLED \u8f93\u51fa (\u5168/\u534a\u53cc\u5de5,Link,\u901f\u5ea6,\u6709\u6548)\n\n\nMicro-SD \u5361\u63d2\u69fd\n\n\n\u7528\u4e8e I2C \u548c UART \u7684 Grove \u8fde\u63a5\u5668\n\n\n\n\n\u517c\u5bb9\u6027\n\n\n\u6211\u4eec\u5df2\u7ecf\u751f\u4ea7\u4e86\u5927\u91cf\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u6269\u5c55\u677f\u548c\u5e73\u53f0\u677f\u4e4b\u95f4\u7684\u517c\u5bb9\u6027\u3002\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0c\u201c\u4e0d\u63a8\u8350\u201d\u610f\u5473\u7740\u5b83\u53ef\u80fd\u4e0e\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\uff0c\u5982\u8df3\u7ebf\u6216\u91cd\u5199\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u6709\u5174\u8da3\u53d1\u6398\u66f4\u591a\u4fe1\u606f\uff0c\u6b22\u8fce\u4e0e \n. \u8054\u7cfb\u3002\n\n\n\n\n\u70b9\u51fb\u67e5\u770b\u5168\u56fe\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\u786c\u4ef6\u914d\u7f6e\n\n\n\n\nRJ45: \u4ee5\u592a\u7f51\u7aef\u53e3;\n\n\nIC W5500: \u56fa\u7ebf TCP/IP \u4ee5\u592a\u7f51\u63a7\u5236\u5668;\n\n\nReset Button: \u91cd\u7f6e Ethernet shield\u00a0;\n\n\nSD Card Socket: \u652f\u6301 FAT16 \u6216 FAT32 \u4e2d\u7684 Micro SD\u5361; \u6700\u5927\u5b58\u50a8\u7a7a\u95f4\u4e3a 2GB\u3002\n\n\nI2C \u63a5\u53e3\n\n\nUART \u63a5\u53e3\n\n\n\n\nArduino\u4e0a\u7684\u5f15\u811a\u7528\u9014\n\n\n\n\nD4\uff1a  SD card \u82af\u7247\u9009\u62e9\n\n\nD10\uff1a W5200 \u82af\u7247\u9009\u62e9\n\n\nD11\uff1a SPI MOSI\n\n\nD12\uff1a SPI MISO\n\n\nD13\uff1a SPI SCK\n\n\n\n\n\n\nNote\n\nW5500 \u548c SD \u5361\u90fd\u901a\u8fc7 SPI \u603b\u7ebf\u4e0e Arduino \u8fdb\u884c\u901a\u4fe1\u3002 \u5f15\u811a **10** \u548c\u5f15\u811a **4** \u662f\u7528\u4e8e W5500 \u548c SD \u63d2\u69fd\u7684\u82af\u7247\u9009\u62e9\u5f15\u811a\u3002\u5b83\u4eec\u4e0d\u80fd\u7528\u4f5c\u901a\u7528 I/O \u53e3\u3002\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u4f8b\u5b50\u3002\u8be5\u793a\u4f8b\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u7f51\u9875\uff0c\u5e76\u5c06\u4f20\u611f\u5668\u6570\u636e\u5b58\u50a8\u5230 SD \u5361\u3002\n\n\n\u8f6f\u4ef6\u90e8\u5206\n\n\n\u96f6\u4ef6\u8868 :\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u529f\u80fd\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nW5500 Ethernet Shield\n\n\n\u63d0\u4f9b\u4ee5\u592a\u7f51\u8fde\u63a5\n\n\n1\n\n\n\n\n\n\nSeeeduino V4.2\n\n\n\u63a7\u5236\u5668\n\n\n1\n\n\n\n\n\n\nGrove-Temp\nHumi Sensor\n\n\n\u4f20\u611f\u5668\n\n\n1\n\n\n\n\n\n\nBase Shield V2\n\n\nBase Shield\n\n\n1\n\n\n\n\n\n\nMicro SD Card\n\n\n\u5b58\u50a8\u6570\u636e\n\n\n1\n\n\n\n\n\n\n\n\n\u6b65\u9aa4 :\n\n\n\n\n\u5728Arduino\u4e0a\u5b89\u88c5 W5500 Ethernet Shield v1.0\uff0c\u5728 Ethernet Shield \u4e0a\u5b89\u88c5 Base Shield V2\uff0c\u5e76\u5c06 Grove-Temp\nHumi \u4f20\u611f\u5668\u8fde\u63a5\u5230 Base Shield \nD5\n Grove \u7aef\u53e3\uff0c\u5e76\u9644\u4e0aSD\u5361\u3002\n\n\n\u4f7f\u7528\u6807\u51c6\u4ee5\u592a\u7f51\u7ebf\u7f06 Ethernet shield \u8fde\u63a5\u5230\u7f51\u7edc;\n\n\n\u901a\u8fc7 USB \u7ebf\u7f06\u5c06 Arduino \u8fde\u63a5\u5230 PC;\n\n\n\n\n\n\u8f6f\u4ef6\u90e8\u5206\n\n\n\n\n\u8bf7\u6309 \n\u600e\u6837\u5b89\u88c5Arduino\u5e93\n \u4e2d\u7684\u6b65\u9aa4\u6765\u5b89\u88c5\u5e93\u6587\u4ef6\u3002\n\n\n\n\n\u70b9\u51fb\u4e0b\u9762\u7684\u6309\u94ae\u4ee5\u4e0b\u8f7d SD \u548c W5500 Ethernet Shield \u5e93\u3002\n\n\n\n\n\n\n\n\n\n\u4e0b\u8f7d\u5b8c\u6210\u540e\u5c06\u5e93\u5b89\u88c5\u5230 Arduino IDE \u4e2d\u3002\n\n\n\n\n\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino IDE \u4e2d\uff0c\u7136\u540e\u4e0a\u4f20 :\n\n\n\n\n//This sketch uses W5500 Ethernet Shield,Seeeduino V4.2,Grove-Temp\nHumi,\n//Base Shield V2 Sensor and Micro SD Card to design a temperature and humidity collection station.\n//attach the temperature and humidity sensor to base shield D5 grove port.\n//It publishes the temperature and humidity data to webpage\n//and refresh every 5 seconds, store the data into SD card datalog.txt file.\n\n#include \nSD.h\n\n#include \nSPI.h\n\n#include \nEthernet.h\n\n#include \ndht11.h\n\ndht11 DHT;\n#define DHT11_PIN 5\nconst int chipSelect = 4;\n\n// Please update IP address according to your local network\n#if defined(WIZ550io_WITH_MACADDRESS) // Use assigned MAC address of WIZ550io\n;\n#else\nbyte mac[] = {0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED};\n#endif  \nIPAddress ip(192,168,0,177);\n\n// Initialize the Ethernet server library\n// with the IP address and port you want to use\n// (port 80 is default for HTTP):\nEthernetServer server(80);\n\nvoid setup() {\n // Open serial communications and wait for port to open:\n  Serial.begin(9600);\n   while (!Serial) {\n    ; // wait for serial port to connect. Needed for Leonardo only\n  }\n\n  // start the Ethernet connection and the server:\n#if defined(WIZ550io_WITH_MACADDRESS)\n  Ethernet.begin(ip);\n#else\n  Ethernet.begin(mac, ip);\n#endif  \n  server.begin();\n  Serial.print(\nserver is at \n);\n  Serial.println(Ethernet.localIP());\n\n  //initializing the SD card\n  Serial.print(\nInitializing SD card...\n);\n\n  // see if the card is present and can be initialized:\n  if (!SD.begin(chipSelect)) {\n    Serial.println(\nCard failed, or not present\n);\n    // don\nt do anything more:\n    return;\n  }\n  Serial.println(\ncard initialized.\n);\n}\n\n\nvoid loop() {\n  // listen for incoming clients\n  EthernetClient client = server.available();\n  if (client) {\n    Serial.println(\nnew client\n);\n    // an http request ends with a blank line\n    boolean currentLineIsBlank = true;\n    while (client.connected()) {\n      if (client.available()) {\n        char c = client.read();\n        Serial.write(c);\n        // if you\nve gotten to the end of the line (received a newline\n        // character) and the line is blank, the http request has ended,\n        // so you can send a reply\n        if (c == \n\\n\n \n currentLineIsBlank) {\n          // send a standard http response header\n          client.println(\nHTTP/1.1 200 OK\n);\n          client.println(\nContent-Type: text/html\n);\n          client.println(\nConnection: close\n);  // the connection will be closed after completion of the response\n      client.println(\nRefresh: 5\n);  // refresh the page automatically every 5 sec\n          client.println();\n          client.println(\n!DOCTYPE HTML\n);\n          client.println(\nhtml\n);\n\n          // output the value of input pin on web\n          int chk;\n          chk = DHT.read(DHT11_PIN);    // READ DATA\n          client.print(\nHumidity: \n);\n          client.print(DHT.humidity);\n          client.println(\nbr /\n);\n          client.print(\nTemperature: \n);\n          client.print(DHT.temperature);   \n\n          //write value of input pin into SD card\n          // make a string for assembling the data to log:\n          String dataString = \n;\n          // read the humidity and temperature and append to the string:\n          dataString = String(DHT.humidity) + String(DHT.temperature);\n          // open the file. note that only one file can be open at a time,\n          // so you have to close this one before opening another.\n          File dataFile = SD.open(\ndatalog.txt\n, FILE_WRITE);\n          // if the file is available, write to it:\n          if (dataFile) {\n          dataFile.println(dataString);\n          dataFile.close();\n          // print to the serial port too:\n          Serial.println(dataString);\n          }\n          // if the file isn\nt open, pop up an error:\n          else {\n          Serial.println(\nerror opening datalog.txt\n);\n          }\n          break;\n        }\n        if (c == \n\\n\n) {\n          // you\nre starting a new line\n          currentLineIsBlank = true;\n        }\n        else if (c != \n\\r\n) {\n          // you\nve gotten a character on the current line\n          currentLineIsBlank = false;\n        }\n      }\n    }\n    // give the web browser time to receive the data\n    delay(1);\n    // close the connection:\n    client.stop();\n    Serial.println(\nclient disconnected\n);\n  }\n}\n\n\n\n\n\u7ed3\u679c\u5c55\u793a\n\n\n\u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u7ed3\u679c\u3002\n\n\n\n\n\u628a\u60a8\u7684 SD \u5361\u653e\u5165\u7535\u8111\uff0c\u60a8\u4f1a\u770b\u5230\u4e00\u4e9b\u6e29\u3001\u6e7f\u5ea6\u7684\u4fe1\u606f\u3002\n\n\n\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u7f51\u7edc\u4e0a\u67e5\u770b\u4fe1\u606f\u3002\n\n\n\n\n\n\n\u53ef\u89c1\u4f7f\u7528\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u60a8\u4e5f\u8bd5\u8bd5\u5427\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle\u6587\u4ef6]\nW5500 Ethernet Shield in Eagle format\n\n\n[\u539f\u7406\u56fePDF]\nW5500 Ethernet Shield Schematic in PDF format\n\n\n[PCB\u56fePDF]\nW5500 Ethernet Shield PCB in PDF format\n\n\n[\u5e93\u6587\u4ef6]\nW5500 Ethernet Shield Library\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\nW5500 Ethernet Shield Datasheet.pdf", 
            "title": "W5500 Ethernet Shield v1.0"
        }, 
        {
            "location": "/W5500_Ethernet_Shield_v1.0/#_1", 
            "text": "\u652f\u6301\u56fa\u7ebf\u5f0f TCP/IP \u534f\u8bae\u00a0: TCP, UDP, ICMP, IPv4, ARP, IGMP, PPPoE  \u540c\u65f6\u652f\u6301 8 \u4e2a\u72ec\u7acb\u63d2\u5ea7  \u652f\u6301\u6389\u7535\u6a21\u5f0f  \u652f\u6301\u901a\u8fc7 UDP \u5524\u9192 LAN  \u652f\u6301\u9ad8\u901f\u4e32\u884c\u5916\u8bbe\u63a5\u53e3 (SPI \u6a21\u5f0f 0, 3)  \u7528\u4e8e TX/RX \u7f13\u51b2\u5668\u5185\u90e8 32K \u7684\u5b57\u8282\u5185\u5b58  10BaseT/100BaseTX \u4ee5\u592a\u7f51 PHY \u5d4c\u5165\u5f0f  \u652f\u6301\u81ea\u534f\u5546(\u5168\u53cc\u5de5\u548c\u534a\u53cc\u5de5\uff0c10 \u548c 100* based)  \u4e0d\u652f\u6301 IP \u5206\u6bb5  3.3V \u64cd\u4f5c\uff0c\u5177\u6709 5V I/O \u4fe1\u53f7\u5bb9\u5dee  LED \u8f93\u51fa (\u5168/\u534a\u53cc\u5de5,Link,\u901f\u5ea6,\u6709\u6548)  Micro-SD \u5361\u63d2\u69fd  \u7528\u4e8e I2C \u548c UART \u7684 Grove \u8fde\u63a5\u5668", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/W5500_Ethernet_Shield_v1.0/#_2", 
            "text": "\u6211\u4eec\u5df2\u7ecf\u751f\u4ea7\u4e86\u5927\u91cf\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u6269\u5c55\u677f\u548c\u5e73\u53f0\u677f\u4e4b\u95f4\u7684\u517c\u5bb9\u6027\u3002   Note  \u8bf7\u6ce8\u610f\uff0c\u201c\u4e0d\u63a8\u8350\u201d\u610f\u5473\u7740\u5b83\u53ef\u80fd\u4e0e\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\uff0c\u5982\u8df3\u7ebf\u6216\u91cd\u5199\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u6709\u5174\u8da3\u53d1\u6398\u66f4\u591a\u4fe1\u606f\uff0c\u6b22\u8fce\u4e0e  . \u8054\u7cfb\u3002   \u70b9\u51fb\u67e5\u770b\u5168\u56fe", 
            "title": "\u517c\u5bb9\u6027"
        }, 
        {
            "location": "/W5500_Ethernet_Shield_v1.0/#_3", 
            "text": "\u786c\u4ef6\u914d\u7f6e   RJ45: \u4ee5\u592a\u7f51\u7aef\u53e3;  IC W5500: \u56fa\u7ebf TCP/IP \u4ee5\u592a\u7f51\u63a7\u5236\u5668;  Reset Button: \u91cd\u7f6e Ethernet shield\u00a0;  SD Card Socket: \u652f\u6301 FAT16 \u6216 FAT32 \u4e2d\u7684 Micro SD\u5361; \u6700\u5927\u5b58\u50a8\u7a7a\u95f4\u4e3a 2GB\u3002  I2C \u63a5\u53e3  UART \u63a5\u53e3   Arduino\u4e0a\u7684\u5f15\u811a\u7528\u9014   D4\uff1a  SD card \u82af\u7247\u9009\u62e9  D10\uff1a W5200 \u82af\u7247\u9009\u62e9  D11\uff1a SPI MOSI  D12\uff1a SPI MISO  D13\uff1a SPI SCK    Note \nW5500 \u548c SD \u5361\u90fd\u901a\u8fc7 SPI \u603b\u7ebf\u4e0e Arduino \u8fdb\u884c\u901a\u4fe1\u3002 \u5f15\u811a **10** \u548c\u5f15\u811a **4** \u662f\u7528\u4e8e W5500 \u548c SD \u63d2\u69fd\u7684\u82af\u7247\u9009\u62e9\u5f15\u811a\u3002\u5b83\u4eec\u4e0d\u80fd\u7528\u4f5c\u901a\u7528 I/O \u53e3\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/W5500_Ethernet_Shield_v1.0/#_4", 
            "text": "\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u4f8b\u5b50\u3002\u8be5\u793a\u4f8b\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u7f51\u9875\uff0c\u5e76\u5c06\u4f20\u611f\u5668\u6570\u636e\u5b58\u50a8\u5230 SD \u5361\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/W5500_Ethernet_Shield_v1.0/#_5", 
            "text": "\u96f6\u4ef6\u8868 :     \u540d\u79f0  \u529f\u80fd  \u6570\u91cf      W5500 Ethernet Shield  \u63d0\u4f9b\u4ee5\u592a\u7f51\u8fde\u63a5  1    Seeeduino V4.2  \u63a7\u5236\u5668  1    Grove-Temp Humi Sensor  \u4f20\u611f\u5668  1    Base Shield V2  Base Shield  1    Micro SD Card  \u5b58\u50a8\u6570\u636e  1     \u6b65\u9aa4 :   \u5728Arduino\u4e0a\u5b89\u88c5 W5500 Ethernet Shield v1.0\uff0c\u5728 Ethernet Shield \u4e0a\u5b89\u88c5 Base Shield V2\uff0c\u5e76\u5c06 Grove-Temp Humi \u4f20\u611f\u5668\u8fde\u63a5\u5230 Base Shield  D5  Grove \u7aef\u53e3\uff0c\u5e76\u9644\u4e0aSD\u5361\u3002  \u4f7f\u7528\u6807\u51c6\u4ee5\u592a\u7f51\u7ebf\u7f06 Ethernet shield \u8fde\u63a5\u5230\u7f51\u7edc;  \u901a\u8fc7 USB \u7ebf\u7f06\u5c06 Arduino \u8fde\u63a5\u5230 PC;", 
            "title": "\u8f6f\u4ef6\u90e8\u5206"
        }, 
        {
            "location": "/W5500_Ethernet_Shield_v1.0/#_6", 
            "text": "\u8bf7\u6309  \u600e\u6837\u5b89\u88c5Arduino\u5e93  \u4e2d\u7684\u6b65\u9aa4\u6765\u5b89\u88c5\u5e93\u6587\u4ef6\u3002   \u70b9\u51fb\u4e0b\u9762\u7684\u6309\u94ae\u4ee5\u4e0b\u8f7d SD \u548c W5500 Ethernet Shield \u5e93\u3002     \u4e0b\u8f7d\u5b8c\u6210\u540e\u5c06\u5e93\u5b89\u88c5\u5230 Arduino IDE \u4e2d\u3002   \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino IDE \u4e2d\uff0c\u7136\u540e\u4e0a\u4f20 :   //This sketch uses W5500 Ethernet Shield,Seeeduino V4.2,Grove-Temp Humi,\n//Base Shield V2 Sensor and Micro SD Card to design a temperature and humidity collection station.\n//attach the temperature and humidity sensor to base shield D5 grove port.\n//It publishes the temperature and humidity data to webpage\n//and refresh every 5 seconds, store the data into SD card datalog.txt file.\n\n#include  SD.h \n#include  SPI.h \n#include  Ethernet.h \n#include  dht11.h \ndht11 DHT;\n#define DHT11_PIN 5\nconst int chipSelect = 4;\n\n// Please update IP address according to your local network\n#if defined(WIZ550io_WITH_MACADDRESS) // Use assigned MAC address of WIZ550io\n;\n#else\nbyte mac[] = {0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED};\n#endif  \nIPAddress ip(192,168,0,177);\n\n// Initialize the Ethernet server library\n// with the IP address and port you want to use\n// (port 80 is default for HTTP):\nEthernetServer server(80);\n\nvoid setup() {\n // Open serial communications and wait for port to open:\n  Serial.begin(9600);\n   while (!Serial) {\n    ; // wait for serial port to connect. Needed for Leonardo only\n  }\n\n  // start the Ethernet connection and the server:\n#if defined(WIZ550io_WITH_MACADDRESS)\n  Ethernet.begin(ip);\n#else\n  Ethernet.begin(mac, ip);\n#endif  \n  server.begin();\n  Serial.print( server is at  );\n  Serial.println(Ethernet.localIP());\n\n  //initializing the SD card\n  Serial.print( Initializing SD card... );\n\n  // see if the card is present and can be initialized:\n  if (!SD.begin(chipSelect)) {\n    Serial.println( Card failed, or not present );\n    // don t do anything more:\n    return;\n  }\n  Serial.println( card initialized. );\n}\n\n\nvoid loop() {\n  // listen for incoming clients\n  EthernetClient client = server.available();\n  if (client) {\n    Serial.println( new client );\n    // an http request ends with a blank line\n    boolean currentLineIsBlank = true;\n    while (client.connected()) {\n      if (client.available()) {\n        char c = client.read();\n        Serial.write(c);\n        // if you ve gotten to the end of the line (received a newline\n        // character) and the line is blank, the http request has ended,\n        // so you can send a reply\n        if (c ==  \\n    currentLineIsBlank) {\n          // send a standard http response header\n          client.println( HTTP/1.1 200 OK );\n          client.println( Content-Type: text/html );\n          client.println( Connection: close );  // the connection will be closed after completion of the response\n      client.println( Refresh: 5 );  // refresh the page automatically every 5 sec\n          client.println();\n          client.println( !DOCTYPE HTML );\n          client.println( html );\n\n          // output the value of input pin on web\n          int chk;\n          chk = DHT.read(DHT11_PIN);    // READ DATA\n          client.print( Humidity:  );\n          client.print(DHT.humidity);\n          client.println( br / );\n          client.print( Temperature:  );\n          client.print(DHT.temperature);   \n\n          //write value of input pin into SD card\n          // make a string for assembling the data to log:\n          String dataString =  ;\n          // read the humidity and temperature and append to the string:\n          dataString = String(DHT.humidity) + String(DHT.temperature);\n          // open the file. note that only one file can be open at a time,\n          // so you have to close this one before opening another.\n          File dataFile = SD.open( datalog.txt , FILE_WRITE);\n          // if the file is available, write to it:\n          if (dataFile) {\n          dataFile.println(dataString);\n          dataFile.close();\n          // print to the serial port too:\n          Serial.println(dataString);\n          }\n          // if the file isn t open, pop up an error:\n          else {\n          Serial.println( error opening datalog.txt );\n          }\n          break;\n        }\n        if (c ==  \\n ) {\n          // you re starting a new line\n          currentLineIsBlank = true;\n        }\n        else if (c !=  \\r ) {\n          // you ve gotten a character on the current line\n          currentLineIsBlank = false;\n        }\n      }\n    }\n    // give the web browser time to receive the data\n    delay(1);\n    // close the connection:\n    client.stop();\n    Serial.println( client disconnected );\n  }\n}", 
            "title": "\u8f6f\u4ef6\u90e8\u5206"
        }, 
        {
            "location": "/W5500_Ethernet_Shield_v1.0/#_7", 
            "text": "\u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u7ed3\u679c\u3002   \u628a\u60a8\u7684 SD \u5361\u653e\u5165\u7535\u8111\uff0c\u60a8\u4f1a\u770b\u5230\u4e00\u4e9b\u6e29\u3001\u6e7f\u5ea6\u7684\u4fe1\u606f\u3002  \u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u7f51\u7edc\u4e0a\u67e5\u770b\u4fe1\u606f\u3002    \u53ef\u89c1\u4f7f\u7528\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u60a8\u4e5f\u8bd5\u8bd5\u5427\u3002", 
            "title": "\u7ed3\u679c\u5c55\u793a"
        }, 
        {
            "location": "/W5500_Ethernet_Shield_v1.0/#_8", 
            "text": "[Eagle\u6587\u4ef6] W5500 Ethernet Shield in Eagle format  [\u539f\u7406\u56fePDF] W5500 Ethernet Shield Schematic in PDF format  [PCB\u56fePDF] W5500 Ethernet Shield PCB in PDF format  [\u5e93\u6587\u4ef6] W5500 Ethernet Shield Library  [\u82af\u7247\u6570\u636e\u624b\u518c] W5500 Ethernet Shield Datasheet.pdf", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove_Shield_for_Intel_Joule/", 
            "text": "\u5728 2016 \u5e74\u82f1\u7279\u5c14\u5f00\u53d1\u8005\u8bba\u575b\u4e0a\uff0c\u82f1\u7279\u5c14\u5ba3\u5e03\u63a8\u51fa\u4e86 Joule \u6a21\u5757\uff0c\u8be5\u6a21\u5757\u662f\u63d0\u4f9b\u9ad8\u8ba1\u7b97\u80fd\u529b\uff0cRAM \u548c\u5b58\u50a8\u7684 Linux \u7cfb\u7edf\u6a21\u5757\u3002 \u8be5 Grove Shield \u4f7f\u5f3a\u5927\u7684\u82f1\u7279\u5c14 JouleTM \u589e\u52a0\u4e86 Grove \u6a21\u5757\u7cfb\u5217\u63a5\u53e3\uff0c\u5b83\u65e8\u5728\u5e2e\u52a9\u521b\u4f5c\u8005\u548c IoT \u5f00\u53d1\u4eba\u5458\u66f4\u65b9\u4fbf\u5feb\u6377\u5730\u521b\u5efa\u9879\u76ee\u3002\n\n\n\u901a\u8fc7\u7b80\u5355\u5730\u5c06\u5176\u63d2\u5165\u5230 Joule board \u4e0a\uff0c\u5b83\u5c06\u62e5\u6709 8 \u4e2a\u575a\u56fa\u6613\u7528\u7684 Grove \u8fde\u63a5\u5668\uff0c\u5176\u4e2d\u5305\u62ec\u63a5\u53e3\uff0c\u5982I2C\uff0cUART\uff0cdigital I/Os \u548c \u6a21\u62df\u8f93\u5165\u3002 \u9664\u4e86\u4e30\u5bcc\u7684 Grove \u8fde\u63a5\u5668\u5916\uff0c\u5b83\u8fd8\u4fdd\u7559\u6709 2x20 \u9488\u5934\u6765\u5e94\u5bf9\u60a8\u60f3\u8981\u66f4\u591a\u7684 GPIO \u7528\u4e8e\u9879\u76ee\u3002 \u677f\u4e0a\u7684\u96c6\u6210\u5f00\u5173\u5141\u8bb8\u60a8\u9009\u62e9 5V \u6216 3.3V \u7684\u5de5\u4f5c\u7535\u538b\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u63a5\u53e3 : 8 \u4e2a Grove \u63a5\u53e3\n\n\n\n\n\n\n\u5373\u63d2\u5373\u7528\n\n\n\n\n\n\n\u63a5\u53e3\u8be6\u7ec6\u4fe1\u606f : I2C x 3, UART x 1, \u6570\u5b57 x 2, \u6a21\u62df x 2\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b : 5V/3.3V\n\n\n\n\n\n\n\u7528\u4e8e\u9009\u62e9\u5de5\u4f5c\u7535\u538b\u7684\u5f00\u5173\u3002\n\n\n\n\n\n\n4 \u901a\u9053\u6a21\u62df\u63a5\u53e3\uff0c\u5206\u8fa8\u7387: 12 \u4f4d\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6 : -40 - 85\u2103\n\n\n\n\n\n\n\u5c3a\u5bf8 : 84.9*51.7mm\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\nGrove Analog \u7aef\u53e3 : \u2465/\u2468\n\n\n\n\n\n\nGrove Digital \u7aef\u53e3 : \u2467/\u2469\n\n\n\n\n\n\nGrove UART \u7aef\u53e3 : \u2466\n\n\n\n\n\n\nGrove I2C \u7aef\u53e3 : \u2462/\u2463/\u2464\n\n\n\n\n\n\nIntel Joule \u7684 1 / J12 \u88f8\u677f : \u2460\n\n\n\n\n\n\nIntel Joule \u7684 2 / J13 \u88f8\u677f : \u2461\n\n\n\n\n\n\n3.3V \n 5V \u7535\u6e90\u5f00\u5173 : \u246a\n\n\n\n\n\n\n\u5f15\u811a\u5bf9\u5f15\u811a\u56fe\n\n\n\n\n\n\n\n\nGrove Shield \u8fde\u63a5\u5668/\u5f15\u811a\n\n\nSOC (\u7535\u8def\u56fe) \u4fe1\u53f7\n\n\nTuChuck \u8fde\u63a5\u5668/\u5f15\u811a\n\n\n\n\n\n\n\n\n\n\nJ1\n\n\nBreakout1\n\n\nJ12\n\n\n\n\n\n\nJ2\n\n\nBreakout2\n\n\nJ13\n\n\n\n\n\n\nJ3-1\n\n\nI2C_0_SCL_H\n\n\nJ12-13\n\n\n\n\n\n\nJ3-2\n\n\nI2C_0_SDA_H\n\n\nJ12-11\n\n\n\n\n\n\nJ4-1\n\n\nI2C_1_SCL_H\n\n\nJ13-33\n\n\n\n\n\n\nJ4-2\n\n\nI2C_1_SDA_H\n\n\nJ13-31\n\n\n\n\n\n\nJ5-1\n\n\nI2C_2_SCL_H\n\n\nJ13-37\n\n\n\n\n\n\nJ5-2\n\n\nI2C_2_SDA_H\n\n\nJ13-35\n\n\n\n\n\n\nJ6-1\n\n\nAIN2\n\n\n/\n\n\n\n\n\n\nJ6-2\n\n\nAIN3\n\n\n/\n\n\n\n\n\n\nJ7-1\n\n\nUART_0_TXD\n\n\nJ12-7\n\n\n\n\n\n\nJ7-2\n\n\nUART_0_RXD\n\n\nJ13-28\n\n\n\n\n\n\nJ8-1\n\n\nDigital_1_PWM_0\n\n\nJ12-26\n\n\n\n\n\n\nJ8-2\n\n\nDigital_1_PWM_1\n\n\nJ12-28\n\n\n\n\n\n\nJ9-1\n\n\nAIN0\n\n\n/\n\n\n\n\n\n\nJ9-2\n\n\nAIN01\n\n\n/\n\n\n\n\n\n\nJ10-1\n\n\nDigital_2_PWM_2\n\n\nJ12-30\n\n\n\n\n\n\nJ10-2\n\n\nDigital_2_PWM_3\n\n\nJ12-32\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u5f53\u60a8\u63d2\u4e0a shield \u65f6\uff0c\u8bf7\u6ce8\u610f\u65b9\u5411\u3002\n\n\nLibmraa \u6682\u65f6\u4e0d\u652f\u6301 Joule \u7684 UART \u5f15\u811a\u3002 \u6240\u4ee5 UART \u63a5\u53e3\u4e0d\u53ef\u7528\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove Shield for Intel Joule Schematic files", 
            "title": "Grove Shield for Intel Joule"
        }, 
        {
            "location": "/Grove_Shield_for_Intel_Joule/#_1", 
            "text": "\u63a5\u53e3 : 8 \u4e2a Grove \u63a5\u53e3    \u5373\u63d2\u5373\u7528    \u63a5\u53e3\u8be6\u7ec6\u4fe1\u606f : I2C x 3, UART x 1, \u6570\u5b57 x 2, \u6a21\u62df x 2    \u5de5\u4f5c\u7535\u538b : 5V/3.3V    \u7528\u4e8e\u9009\u62e9\u5de5\u4f5c\u7535\u538b\u7684\u5f00\u5173\u3002    4 \u901a\u9053\u6a21\u62df\u63a5\u53e3\uff0c\u5206\u8fa8\u7387: 12 \u4f4d    \u5de5\u4f5c\u6e29\u5ea6 : -40 - 85\u2103    \u5c3a\u5bf8 : 84.9*51.7mm", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove_Shield_for_Intel_Joule/#_2", 
            "text": "Grove Analog \u7aef\u53e3 : \u2465/\u2468    Grove Digital \u7aef\u53e3 : \u2467/\u2469    Grove UART \u7aef\u53e3 : \u2466    Grove I2C \u7aef\u53e3 : \u2462/\u2463/\u2464    Intel Joule \u7684 1 / J12 \u88f8\u677f : \u2460    Intel Joule \u7684 2 / J13 \u88f8\u677f : \u2461    3.3V   5V \u7535\u6e90\u5f00\u5173 : \u246a", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove_Shield_for_Intel_Joule/#_3", 
            "text": "Grove Shield \u8fde\u63a5\u5668/\u5f15\u811a  SOC (\u7535\u8def\u56fe) \u4fe1\u53f7  TuChuck \u8fde\u63a5\u5668/\u5f15\u811a      J1  Breakout1  J12    J2  Breakout2  J13    J3-1  I2C_0_SCL_H  J12-13    J3-2  I2C_0_SDA_H  J12-11    J4-1  I2C_1_SCL_H  J13-33    J4-2  I2C_1_SDA_H  J13-31    J5-1  I2C_2_SCL_H  J13-37    J5-2  I2C_2_SDA_H  J13-35    J6-1  AIN2  /    J6-2  AIN3  /    J7-1  UART_0_TXD  J12-7    J7-2  UART_0_RXD  J13-28    J8-1  Digital_1_PWM_0  J12-26    J8-2  Digital_1_PWM_1  J12-28    J9-1  AIN0  /    J9-2  AIN01  /    J10-1  Digital_2_PWM_2  J12-30    J10-2  Digital_2_PWM_3  J12-32      Note   \u5f53\u60a8\u63d2\u4e0a shield \u65f6\uff0c\u8bf7\u6ce8\u610f\u65b9\u5411\u3002  Libmraa \u6682\u65f6\u4e0d\u652f\u6301 Joule \u7684 UART \u5f15\u811a\u3002 \u6240\u4ee5 UART \u63a5\u53e3\u4e0d\u53ef\u7528\u3002", 
            "title": "\u5f15\u811a\u5bf9\u5f15\u811a\u56fe"
        }, 
        {
            "location": "/Grove_Shield_for_Intel_Joule/#_4", 
            "text": "[Eagle\u6587\u4ef6]   Grove Shield for Intel Joule Schematic files", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Mega_Shield/", 
            "text": "Grove - Mega Shield \u662f Arduino Mega \u548c Google ADK \u7684\u6269\u5c55\u677f\u3002\u6211\u4eec\u5c06\u6240\u6709\u8fde\u63a5\u5668\u6807\u51c6\u5316\u4e3a 4pin\uff08\u4fe1\u53f7 1\uff0c\u4fe1\u53f7 2\uff0cVCC \u548c GND\uff09\u7684 2mm \u63a5\u53e3\uff0c\u5e76\u4fdd\u7559 3pin\uff08\u4fe1\u53f7\uff0cVCC \u548c GND\uff09\u7684 2.54mm \u63d2\u5934\u7528\u4e8e\u9a71\u52a8\u8235\u673a\u548c\u7535\u5b50\u79ef\u6728\uff0c\u8fd9\u6837\u7b80\u5316\u4e86\u7535\u5b50\u7ebf\u8def\u7684\u63a5\u7ebf\u96be\u5ea6\u30024pin \u63a5\u53e3\u4e5f\u4f7f\u63a5\u7ebf\u66f4\u52a0\u53ef\u9760\u3002Mega Shield \u4f7f\u7528\u4e86\u6570\u5b57\u7aef\u53e3 0 - 21 \u548c\u6a21\u62df\u7aef\u53e3 0 - 15 \u3002\u4e3a\u4e86\u66f4\u65b9\u4fbf\u5730\u628a Mega Shield \u5b89\u88c5\u5728 Xduino Mega \u6216 Google ADK \u4e0a\uff0c\u6570\u5b57\u7aef\u53e3 22 - 53 \u6ca1\u6709\u88ab\u4f7f\u7528\u3002\n\n\n\n\n\u4ea7\u54c1\u53c2\u6570\n\n\n\n\n\n\n\u517c\u5bb9 Arduino Mega1280/2560\n\n\n\u517c\u5bb9 Grove\n\n\n\u517c\u5bb9 Google ADK\n\n\n\u5c3a\u5bf8: 92.8 mm X 57.2 mm.\n\n\n\n\n\u529f\u80fd\u6a21\u5757\n\n\n\n\nGrove - Mega Shield \u7684\u76ee\u7684\u662f\u628a Arduino Mega \u6216 Google ADK \u7684\u8f93\u5165\u548c\u8f93\u51fa\u5f15\u811a\u8f7b\u677e\u8fde\u63a5\u5230 Grove \u8bbe\u5907\u3002\n\n\n\u6bcf\u4e2a\u63d2\u5ea7\u90fd\u6709\u5176\u5339\u914d\u7684 I/O \u5f15\u811a\u3002 Grove-Mega Shield \u53ef\u4ee5\u5206\u4e3a\u56db\u4e2a\u90e8\u5206\uff1a\u590d\u4f4d\u6309\u94ae\uff0c\u6a21\u62df\u4fe1\u53f7\u533a\uff0c\u6570\u5b57\u4fe1\u53f7\u533a\u548c\u7535\u6e90\u533a\u3002\n\n\n\u8bf7\u53c2\u8003\u4e0b\u56fe\uff1a\n\n\n\n\n\u6839\u636e GPIO : IIC\uff083\u4e2a\u63a5\u53e3\uff09\uff0cUART\uff08UART0-3\uff09\uff0cPWM\uff08PWM 2-13\uff09\u548c ICSP\uff08\u4e0d\u662f\u63a5\u53e3\uff09\u7684\u4e0d\u540c\u529f\u80fd\uff0cGrove - Mega Shield \u7684\u6570\u5b57\u4fe1\u53f7\u533a\u4e5f\u5206\u4e3a\u56db\u4e2a\u90e8\u5206\u3002\u8bf7\u6ce8\u610f\uff0cPWM\u6709\u4e24\u79cd\u63a5\u53e3\uff1a3Pin 2.54mm \u63a5\u5934\u548c\u6211\u4eec\u6807\u51c6\u7684 4Pin 2mm \u63a5\u53e3\u3002 \u8fd9\u4e24\u79cd\u5f62\u5f0f\u7684\u5916\u89c2\u4e0d\u540c\uff0c4Pin 2mm \u63a5\u53e3\u53ef\u4ee5\u8fde\u63a5\u5230\u6211\u4eec\u7684\u6807\u51c6 Groves\uff0c\u800c 3Pin 2.54mm \u63a5\u5934\u53ef\u8fde\u63a5\u5230\u8235\u673a\uff0c\u8d85\u58f0\u6ce2\u6d4b\u8ddd\u6a21\u5757\u548c\u7535\u5b50\u79ef\u6728\u3002\u8bf7\u6ce8\u610f\uff0c\u540c\u65f6\u4f7f\u7528 3pin \u548c 4pin \u7684 PWM \u65f6\uff0c\u4e00\u5b9a\u8981\u786e\u4fdd\u4e0d\u8981\u4f7f\u7528\u540c\u4e00\u4e2a GPIO \u7aef\u53e3\u3002\u63a5\u53e3\u5206\u5e03\u8bf7\u53c2\u8003\u4e0b\u56fe\u3002\n\n\n\n\n\u8d44\u6599\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\nEagle File of Grove - Mega Shield.\n\n\n[Eagle \u6587\u4ef6]\nEagle File of Grove - Mega Shield v1.1.", 
            "title": "Grove Mega Shield"
        }, 
        {
            "location": "/Grove-Mega_Shield/#_1", 
            "text": "\u517c\u5bb9 Arduino Mega1280/2560  \u517c\u5bb9 Grove  \u517c\u5bb9 Google ADK  \u5c3a\u5bf8: 92.8 mm X 57.2 mm.", 
            "title": "\u4ea7\u54c1\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Mega_Shield/#_2", 
            "text": "Grove - Mega Shield \u7684\u76ee\u7684\u662f\u628a Arduino Mega \u6216 Google ADK \u7684\u8f93\u5165\u548c\u8f93\u51fa\u5f15\u811a\u8f7b\u677e\u8fde\u63a5\u5230 Grove \u8bbe\u5907\u3002  \u6bcf\u4e2a\u63d2\u5ea7\u90fd\u6709\u5176\u5339\u914d\u7684 I/O \u5f15\u811a\u3002 Grove-Mega Shield \u53ef\u4ee5\u5206\u4e3a\u56db\u4e2a\u90e8\u5206\uff1a\u590d\u4f4d\u6309\u94ae\uff0c\u6a21\u62df\u4fe1\u53f7\u533a\uff0c\u6570\u5b57\u4fe1\u53f7\u533a\u548c\u7535\u6e90\u533a\u3002  \u8bf7\u53c2\u8003\u4e0b\u56fe\uff1a   \u6839\u636e GPIO : IIC\uff083\u4e2a\u63a5\u53e3\uff09\uff0cUART\uff08UART0-3\uff09\uff0cPWM\uff08PWM 2-13\uff09\u548c ICSP\uff08\u4e0d\u662f\u63a5\u53e3\uff09\u7684\u4e0d\u540c\u529f\u80fd\uff0cGrove - Mega Shield \u7684\u6570\u5b57\u4fe1\u53f7\u533a\u4e5f\u5206\u4e3a\u56db\u4e2a\u90e8\u5206\u3002\u8bf7\u6ce8\u610f\uff0cPWM\u6709\u4e24\u79cd\u63a5\u53e3\uff1a3Pin 2.54mm \u63a5\u5934\u548c\u6211\u4eec\u6807\u51c6\u7684 4Pin 2mm \u63a5\u53e3\u3002 \u8fd9\u4e24\u79cd\u5f62\u5f0f\u7684\u5916\u89c2\u4e0d\u540c\uff0c4Pin 2mm \u63a5\u53e3\u53ef\u4ee5\u8fde\u63a5\u5230\u6211\u4eec\u7684\u6807\u51c6 Groves\uff0c\u800c 3Pin 2.54mm \u63a5\u5934\u53ef\u8fde\u63a5\u5230\u8235\u673a\uff0c\u8d85\u58f0\u6ce2\u6d4b\u8ddd\u6a21\u5757\u548c\u7535\u5b50\u79ef\u6728\u3002\u8bf7\u6ce8\u610f\uff0c\u540c\u65f6\u4f7f\u7528 3pin \u548c 4pin \u7684 PWM \u65f6\uff0c\u4e00\u5b9a\u8981\u786e\u4fdd\u4e0d\u8981\u4f7f\u7528\u540c\u4e00\u4e2a GPIO \u7aef\u53e3\u3002\u63a5\u53e3\u5206\u5e03\u8bf7\u53c2\u8003\u4e0b\u56fe\u3002", 
            "title": "\u529f\u80fd\u6a21\u5757"
        }, 
        {
            "location": "/Grove-Mega_Shield/#_3", 
            "text": "[Eagle \u6587\u4ef6] Eagle File of Grove - Mega Shield.  [Eagle \u6587\u4ef6] Eagle File of Grove - Mega Shield v1.1.", 
            "title": "\u8d44\u6599\u4e0b\u8f7d"
        }, 
        {
            "location": "/XBee_Shield_V2.0/", 
            "text": "\u65b0\u7248\u672c\u7684 XBee Shield \u662f\u4e0e Arduino \u517c\u5bb9\u7684\u6807\u51c6\u5316\u548c\u53ef\u5806\u53e0\u7684 shield\u3002\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06 Bee \u7cfb\u5217\u4e2d\u7684\u4efb\u4f55\u6a21\u5757\u5806\u53e0\u5230\u5176\u4e0a\uff0c\u5e76\u4e3a\u60a8\u7684\u9879\u76ee\u6784\u5efa\u65e0\u7ebf\u7f51\u7edc\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u5b83\u8fd8\u5177\u6709\u53ef\u5b9e\u73b0\u9ad8\u4e0e\u4f4e\u7535\u5e73\u4e4b\u95f4\u7684\u53cc\u5411\u8f6c\u6362\u7684\u7535\u5e73\u8f6c\u6362\u529f\u80fd\uff1b\u4f4e IO \u7ea7\u522b\uff0c\u4fdd\u7559\u7684\u6570\u5b57\u5f15\u811a\u65b9\u4fbf\u7528\u6237\u4f7f\u7528\u8df3\u7ebf\u5e3d\u9009\u62e9 TX/RX \u7aef\u53e3\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u6807\u51c6\u5316\u5f62\u72b6\u8bbe\u8ba1\n\n\n\u53ef\u4ee5\u901a\u8fc7\u7531 UartSBee \u6a21\u5757\u8fde\u63a5\u5230 USB \u8fdb\u884c\u914d\u7f6e\n\n\nDIN\n \u548c \nDOUT\n \u5f15\u811a\u53ef\u4ee5\u8fde\u63a5 \nUART\n \u548c\u5176\u4ed6\u6570\u5b57\u5f15\u811a( \nD2\n~\nD12\n )\n\n\n\u4e3a\u60a8\u7684\u9879\u76ee\u589e\u52a0\u53ef\u4f7f\u7528\u7a7a\u95f4\n\n\nLED \u6307\u793a\u706f\n\n\n\n\n\u517c\u5bb9\u6027\n\n\n\n\n\u6211\u4eec\u5df2\u7ecf\u751f\u4ea7\u4e86\u5927\u91cf\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u6269\u5c55\u677f\u548c\u5e73\u53f0\u677f\u4e4b\u95f4\u7684\u517c\u5bb9\u6027\u3002\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0c\u201c\u4e0d\u63a8\u8350\u201d\u610f\u5473\u7740\u5b83\u53ef\u80fd\u4e0e\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\uff0c\u5982\u8df3\u7ebf\u6216\u91cd\u5199\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u6709\u5174\u8da3\u53d1\u6398\u66f4\u591a\u4fe1\u606f\uff0c\u6b22\u8fce\u4e0e \n. \u8054\u7cfb\u3002\n\n\n\n\n\u70b9\u51fb\u67e5\u770b\u5168\u56fe\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\nU2\uff1a\nCJT1117 \u82af\u7247\n \u4e3a XBee \u6a21\u5757\u63d0\u4f9b 3.3V \u7684\u7535\u538b\u3002\n\n\nU3\uff1a\nSN74LVC1G125 \u82af\u7247\n \u5b9e\u73b0\u677f\u4e0a Xbee RX \u7ba1\u811a\u548c Arduino \u7ba1\u811a\u7684\u7535\u5e73\u8f6c\u6362\u3002\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u8fd9\u6b3e XBee Shield V2.0 \u4e0e RF Bee \u7684\u914d\u5408\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528 Bluetooth Bee \u6216\u5176\u4ed6\u6a21\u5757\u6765\u914d\u5408\u3002\n\n\n\n\n\n\n\n\nXBee Shield V2.0\n\n\nRF Bee\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u5c06 RF Bee \u63d2\u5165 Xbee Sheild V2.0\u3002\n\n\n\n\n\n\n\n\n\u4f7f\u7528\u8df3\u7ebf\u5e3d**\u8fde\u63a5 XB_TX \u548c\u6570\u5b57 4**\u3002\u53e6\u5916\uff0c\u4f7f\u7528\u8df3\u7ebf\u5e3d\u8fde\u63a5**XB_RX \u548c\u6570\u5b57 5**\u3002\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u66f4\u6539\u6570\u5b57\u7aef\u53e3\u3002\u4f46\u662f\u4e0d\u8981\u5fd8\u4e86\u5728\u6f14\u793a\u4ee3\u7801\u7684\u5b9a\u4e49\u4e2d\u540c\u65f6\u66f4\u6539\u7aef\u53e3\u53f7\u3002\n\n\n\n\n\n\nNote\n\u4ee5\u4e0b\u662f\u5df2\u77e5\u7684\u9650\u5236 :\n\n\n\n\n\u5982\u679c\u4f7f\u7528\u591a\u4e2a\u8f6f\u4ef6\u4e32\u884c\u7aef\u53e3\uff0c\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7aef\u53e3\u80fd\u63a5\u6536\u6570\u636e\u3002\n\n\n\u5e76\u975e\u6240\u6709 Mega \u548c Mega 2560 \u7684\u5f15\u811a\u90fd\u652f\u6301\u66f4\u6539\u4e2d\u65ad\uff0c\u56e0\u6b64\u53ea\u6709\u4ee5\u4e0b\u53ef\u7528\u4e8e RX : 10, 11, 12, 13, 50, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69\u3002\n\n\n\u5e76\u4e0d\u662f\u6240\u6709 Leonardo \u4e0a\u7684\u5f15\u811a\u90fd\u652f\u6301\u66f4\u6539\u4e2d\u65ad\uff0c\u53ea\u6709\u4ee5\u4e0b\u53ef\u4ee5\u7528\u4e8e RX : 8, 9, 10, 11, 14 (MISO), 15 (SCK), 16 (MOSI)\u3002\n\n\n\n\n\n\n\n\n\u5982\u679c\u60a8\u9700\u8981\u6709\u5173\u5982\u4f55\u901a\u4fe1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u76f8\u5173\u6a21\u5757\u7684 Wiki \u9875\u9762\u3002\n\n\nResource\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nXBee Shield V2.0 Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nXBee Shield V2.0b Schematics File\n\n\n[PCB\u56fePDF]\n \nXBee Shield V2.0b PCB File\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nCJT1117 Datasheet\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nSN74LVC1G125 Datasheet", 
            "title": "XBee Shield V2.0"
        }, 
        {
            "location": "/XBee_Shield_V2.0/#_1", 
            "text": "\u6807\u51c6\u5316\u5f62\u72b6\u8bbe\u8ba1  \u53ef\u4ee5\u901a\u8fc7\u7531 UartSBee \u6a21\u5757\u8fde\u63a5\u5230 USB \u8fdb\u884c\u914d\u7f6e  DIN  \u548c  DOUT  \u5f15\u811a\u53ef\u4ee5\u8fde\u63a5  UART  \u548c\u5176\u4ed6\u6570\u5b57\u5f15\u811a(  D2 ~ D12  )  \u4e3a\u60a8\u7684\u9879\u76ee\u589e\u52a0\u53ef\u4f7f\u7528\u7a7a\u95f4  LED \u6307\u793a\u706f", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/XBee_Shield_V2.0/#_2", 
            "text": "\u6211\u4eec\u5df2\u7ecf\u751f\u4ea7\u4e86\u5927\u91cf\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u8868\u683c\u6765\u8bf4\u660e\u6269\u5c55\u677f\u548c\u5e73\u53f0\u677f\u4e4b\u95f4\u7684\u517c\u5bb9\u6027\u3002   Note  \u8bf7\u6ce8\u610f\uff0c\u201c\u4e0d\u63a8\u8350\u201d\u610f\u5473\u7740\u5b83\u53ef\u80fd\u4e0e\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\uff0c\u5982\u8df3\u7ebf\u6216\u91cd\u5199\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u6709\u5174\u8da3\u53d1\u6398\u66f4\u591a\u4fe1\u606f\uff0c\u6b22\u8fce\u4e0e  . \u8054\u7cfb\u3002   \u70b9\u51fb\u67e5\u770b\u5168\u56fe", 
            "title": "\u517c\u5bb9\u6027"
        }, 
        {
            "location": "/XBee_Shield_V2.0/#_3", 
            "text": "U2\uff1a CJT1117 \u82af\u7247  \u4e3a XBee \u6a21\u5757\u63d0\u4f9b 3.3V \u7684\u7535\u538b\u3002  U3\uff1a SN74LVC1G125 \u82af\u7247  \u5b9e\u73b0\u677f\u4e0a Xbee RX \u7ba1\u811a\u548c Arduino \u7ba1\u811a\u7684\u7535\u5e73\u8f6c\u6362\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/XBee_Shield_V2.0/#_4", 
            "text": "\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u8fd9\u6b3e XBee Shield V2.0 \u4e0e RF Bee \u7684\u914d\u5408\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528 Bluetooth Bee \u6216\u5176\u4ed6\u6a21\u5757\u6765\u914d\u5408\u3002     XBee Shield V2.0  RF Bee          \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70      \u5c06 RF Bee \u63d2\u5165 Xbee Sheild V2.0\u3002     \u4f7f\u7528\u8df3\u7ebf\u5e3d**\u8fde\u63a5 XB_TX \u548c\u6570\u5b57 4**\u3002\u53e6\u5916\uff0c\u4f7f\u7528\u8df3\u7ebf\u5e3d\u8fde\u63a5**XB_RX \u548c\u6570\u5b57 5**\u3002\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u66f4\u6539\u6570\u5b57\u7aef\u53e3\u3002\u4f46\u662f\u4e0d\u8981\u5fd8\u4e86\u5728\u6f14\u793a\u4ee3\u7801\u7684\u5b9a\u4e49\u4e2d\u540c\u65f6\u66f4\u6539\u7aef\u53e3\u53f7\u3002    Note \u4ee5\u4e0b\u662f\u5df2\u77e5\u7684\u9650\u5236 :   \u5982\u679c\u4f7f\u7528\u591a\u4e2a\u8f6f\u4ef6\u4e32\u884c\u7aef\u53e3\uff0c\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7aef\u53e3\u80fd\u63a5\u6536\u6570\u636e\u3002  \u5e76\u975e\u6240\u6709 Mega \u548c Mega 2560 \u7684\u5f15\u811a\u90fd\u652f\u6301\u66f4\u6539\u4e2d\u65ad\uff0c\u56e0\u6b64\u53ea\u6709\u4ee5\u4e0b\u53ef\u7528\u4e8e RX : 10, 11, 12, 13, 50, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69\u3002  \u5e76\u4e0d\u662f\u6240\u6709 Leonardo \u4e0a\u7684\u5f15\u811a\u90fd\u652f\u6301\u66f4\u6539\u4e2d\u65ad\uff0c\u53ea\u6709\u4ee5\u4e0b\u53ef\u4ee5\u7528\u4e8e RX : 8, 9, 10, 11, 14 (MISO), 15 (SCK), 16 (MOSI)\u3002     \u5982\u679c\u60a8\u9700\u8981\u6709\u5173\u5982\u4f55\u901a\u4fe1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u76f8\u5173\u6a21\u5757\u7684 Wiki \u9875\u9762\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/XBee_Shield_V2.0/#resource", 
            "text": "[Eagle\u6587\u4ef6]   XBee Shield V2.0 Eagle File  [\u539f\u7406\u56fePDF]   XBee Shield V2.0b Schematics File  [PCB\u56fePDF]   XBee Shield V2.0b PCB File  [\u82af\u7247\u6570\u636e\u624b\u518c]   CJT1117 Datasheet  [\u82af\u7247\u6570\u636e\u624b\u518c]   SN74LVC1G125 Datasheet", 
            "title": "Resource"
        }, 
        {
            "location": "/Grove-XBee_Carrier/", 
            "text": "Grove - XBee Carrier \u662f\u4e3a Bee \u7cfb\u5217\u548c Grove \u90e8\u4ef6\u8bbe\u8ba1\u7684\u65e0\u7ebf\u4f20\u611f\u5668\u7f51\u7edc (WSN) \u57fa\u677f\u3002\u5b83\u4e3b\u8981\u9002\u7528\u4e8e\u72ec\u7acb\u7684 Bee Nodes \uff0c\u5982\u5176\u4e2d\u6709 ATMega328 \u677f\u8f7d\u548c XBee (Zigbee) \u6a21\u5757\u7684 RFBee\uff0cWifi Bee \u3002\u5b83\u4e0e \nRFBee\n, \nWifi Bee\n, \nXBee\n \u548c \nBluetooth Bee\n \u517c\u5bb9\u3002\u9664\u4e86 Bee \u63d2\u5ea7\uff0c\u8fd8\u6709\u4e24\u4e2a Grove \u8fde\u63a5\u5668\u3002\u8be5\u677f\u53ef\u4ee5\u7531\u9502\u7535\u6c60\u6216 USB \u7ebf\u7f06\u4f9b\u7535\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u65e0\u7ebf\u5145\u7535\u5668\uff0c\u592a\u9633\u80fd\u7535\u6c60\u677f\u6216 USB \u7ebf\u7f06\u4e3a\u7535\u6c60\u5145\u7535\u3002FT232RL \u82af\u7247\u6709\u52a9\u4e8e\u5c06\u7a0b\u5e8f\u76f4\u63a5\u4e0b\u8f7d\u5230 Bee \u6a21\u5757\u4e2d\u3002\n\n\n\u6ca1\u6709 ATMega328 \u7684 Bees (\u5982 Bluetooth Bee ) \u53ea\u80fd\u901a\u8fc7\u4f7f\u7528\u677f\u8f7d FT232RL ( USB \u81f3 UART ) \u8fdb\u884c\u914d\u7f6e\u3002 \u8fd9\u4e9b Bees \u4e0d\u9002\u5408\u5355\u72ec\u5e94\u7528\u3002\n\n\n\u677f\u8f7d FT232RL \u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6 3.3V USB \u81f3 UART \u63a5\u53e3\u4e00\u6837\u4f7f\u7528\uff0c\u4e0d\u8fde\u63a5\u5230\u4efb\u4f55\u8702\u6a21\u5757\u3002\u8fd9\u5bf9\u4e8e\u901a\u8fc7\u4e32\u884c\u7aef\u53e3\u7f16\u7a0b 3.3V MCU \u975e\u5e38\u6709\u7528\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\nBees \u517c\u5bb9\u63d2\u5ea7\n\n\n\n\n\n\n\u4e24\u4e2a Grove \u8fde\u63a5\u5668\n\n\n\n\n\n\n\u4e24\u4e2a Grove \u53cc\u6392\u63d2\u5ea7\n\n\n\n\n\n\n\u7528\u4e8e PWR\uff0c\u5145\u7535\u6307\u793a\u548c UART \u4f20\u8f93\u7684 LED\u3002\n\n\n\n\n\n\n\u7535\u6e90\u5f00\u5173\n\n\n\n\n\n\n\u590d\u4f4d\u6309\u94ae\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\n\n\u5e26\u6709\u50cf \nWifi Bee\n \u7684\u72ec\u7acb Bee Node \u7684\u65e0\u7ebf\u4f20\u611f\u5668\u7f51\u7edc\u3002\n\n\n\n\n\n\n\u4e3a\u57fa\u4e8e FT232RL \u7684 Bees \u7ec4\u4ef6\u505a\u8f85\u52a9\u914d\u7f6e\u3002\n\n\n\n\n\n\n\u4f7f\u7528\u8f66\u8f7d\u5145\u7535\u63a7\u5236\u5668\u4e3a\u9502\u79bb\u5b50\u7535\u6c60\u5145\u7535\u3002\n\n\n\n\n\n\n\u4f5c\u4e3a\u57fa\u4e8e FT232RL \u82af\u7247\u7684 3.3v USB\u8f6cUART\u9002\u914d\u5668\u3002\n\n\n\n\n\n\n\u8b66\u544a\n\n\n\n\n\n\n\n\n\n\n\u5c06 Bees \u63d2\u5165\u6b63\u786e\u7684\u65b9\u5411\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e1d\u5370\u5c42\u4e0a\u7684\u4fe1\u606f\u6765\u5224\u5b9a\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n \u9879\u76ee\n\n\n\n \u6700\u5c0f\u503c\n\n\n\n \u5178\u578b\u503c\n\n\n\n \u6700\u5927\u503c\n\n\n\n \u5355\u4f4d\n\n\n\n\n\n \u7535\u538b\n\n\n\n 3.0\n\n\n\n 3.3\n\n\n\n 3.6\n\n\n\n VDC\n\n\n\n\n\n \u63a7\u5236\u5668\n\n\n\n CN3063\n\n\n\n\n\n \u5145\u7535\u5668 ( LiPo \u7535\u6c60\u5145\u7535\u7535\u538b)\n\n\n\n 4.4V to 6V (\u6839\u636e CN3063 \u89c4\u683c)\n\n\n\n\n\n \u5145\u7535\u7535\u6d41\n\n\n\n \u6700\u5927 500mA\n\n\n\n\n\n  3.3V LDO\n\n\n\n \u4f4e\u566a\u58f0\u548c\u5fae\u529f\u7387\u578b\u3002\u9002\u7528\u4e8e\u7535\u6c60\u5e94\u7528\u3002\n\n\n\n\n\n I/O Logic\n\n\n\n 3.3V Logic\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n\n\n\n\nU2:\n RT9167A_33PB IC, 3.3V LDO \u4f4e\u566a\u5fae\u529f\u7387\u7a33\u538b\u5668\n\n\nU3:\n CN3083 IC\uff0c\u9502\u7535\u6c60\u5145\u7535\u63a7\u5236\u5668 ( \u4f7f\u7528\u592a\u9633\u80fd\u7535\u6c60\u677f\u5145\u7535 )\n\n\nU4:\n FT232RL IC\uff0cUSB \u5230\u4e32\u884c UART \u63a5\u53e3\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4f7f\u7528 RFBee \u65f6\uff0cRFBee \u4e0a\u7684 ATmage168 \u7684\u4ee5\u4e0b\u5f15\u811a\u6392\u5217\u8bf7\u6c42\u4f7f\u7528Arduino IDE\n\n\n\n\n\u5f15\u811a 5 \u662f\u7528\u4e8e I/O \u7684 Grove \u8fde\u63a5\u5668 - \u9ec4\u7ebf\n\n\n\u5f15\u811a 6 \u662f\u7528\u4e8e I/O \u7684 Grove \u8fde\u63a5\u5668 - \u767d\u7ebf\n\n\n\u5f15\u811a 16 \u53ef\u80fd\u9700\u8981\u88ab\u4f4e\u7535\u5e73\u9a71\u52a8\u4ee5\u5411 I/O Grove \u63d0\u4f9b\u8db3\u591f\u7684\u529f\u7387[\u901a\u8fc7 mosfet]\n\n\n\u5f15\u811a 17 \u53ef\u80fd\u9700\u8981\u88ab\u4f4e\u7535\u5e73\u9a71\u52a8\u4ee5\u5411 I2C Grove \u63d0\u4f9b\u8db3\u591f\u7684\u529f\u7387[\u901a\u8fc7 mosfet]\n\n\n\n\n\n\nNote\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u767d\u8272\u548c\u9ec4\u8272\u5bfc\u7ebf\u4e8c\u5408\u4e00\u7684 x2 Grove \u7ebf\u7f06\u4ee5\u8bbf\u95ee\u8fd9\u4e24\u4e2a I/O\u3002\n\n\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\u5145\u7535\n\n\n\u60a8\u53ef\u4ee5\u4ece \nSeeedStudio\n \nBatteries and Chargers\n\u4e3a\u60a8\u7684\u5e94\u7528\u9009\u62e9\u5408\u9002\u7684\u7535\u6c60\u3002\n\n\n\n\n\n\n\u5c06 3.7v LiPo \u7535\u6c60\u8fde\u63a5\u5230 \nBAT\n JST-socket\u3002\n\n\n\n\n\n\n\u5c06\u7535\u6e90\u5982\u592a\u9633\u80fd\u7535\u6c60\u677f\u8fde\u63a5\u5230 \nCHARGER\n JST-Socket\u3002\n\n\n\n\n\n\n\u7535\u6c60\u5c06\u6301\u7eed\u5145\u7535\u3002\u5145\u7535\u7ed3\u675f\u5c06\u7531\u6807\u6709 'OK' \u7684 LED \u6307\u793a\u3002\n\n\n\n\n\n\n\n\n\u4e0e\u72ec\u7acb Bee Nodes \u4e00\u8d77\u4f7f\u7528\n\n\nBee Nodes \u662f\u72ec\u7acb\u7684 Arduino \u517c\u5bb9\u65e0\u7ebf\u8282\u70b9\u3002\nSeeedStudio\n \u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u8282\u70b9 \nWifi Bee\n \u548c \nRFBee\n\u3002\n\n\n\n\n\n\n\u4ee5\u4e0b\u56fe\u7247\u8bf4\u660e\u4e86 \nWiFi Bee\n \u4e0e \nGrove - XBee Carrier\n \u7684\u8fde\u63a5\u3002\n\n\n\n\n\n\n\u4efb\u4f55 Grove \u90fd\u53ef\u4ee5\u8fde\u63a5\u5230\u63d0\u4f9b\u7684 Grove \u63d2\u5ea7\u3002\n\n\n\n\n\n\nWiFi Bee \u7684\u677f\u8f7d \nAtMega328P\n \u7684\u7f16\u7a0b\u662f\u901a\u8fc7 USB \u7aef\u53e3\u8fde\u63a5\u5230 PC \u8fdb\u884c\u7684\u3002( \u4f7f\u7528 FT232RL )\n\n\n\n\n\n\n\n\n\n\n\u53c2\u9605 \nWifi Bee \u4f7f\u7528\u65b9\u6cd5\u7684\u7f16\u7a0b\u793a\u4f8b\u6587\u6863\n\n\n\n\n\n\n\u4e0e Bee Modules \u4e00\u8d77\u4f7f\u7528\n\n\n\u8fd9\u90e8\u5206\u662f\u5173\u4e8e\u6ca1\u6709\u901a\u8fc7 Arduino \u5f15\u5bfc\u7a0b\u5e8f\u9884\u7f16\u7a0b\u7684 MCU \u7684 Bee \u6a21\u5757\u3002\u5b83\u4eec\u5927\u591a\u6570\u7684\u884c\u4e3a\u5c31\u50cf\u4e00\u4e2a\u65e0\u7ebf\u63a5\u6536\u5668\u3002 \u8fd9\u4e9b \nBee Modules\n \u50cf Bluetooth Bee \u7b49\u53ef\u4ee5\u4e0e PC \u901a\u4fe1\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c \nGrove - XBee Carrier\n \u4f5c\u4e3a\u8fd9\u4e9b\u4e3a Bees \u63d0\u4f9b\u5fc5\u8981\u7535\u6e90\u7684\u8f7d\u4f53\uff0c\u901a\u8fc7 FT232RL USB \u81f3 UART \u8fde\u63a5 PC \u7684\u901a\u4fe1\u63a5\u53e3\u3002\n\n\n\n\n\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\nBluetooth Bee\n \u4f7f\u7528 USB-UART \u8fde\u63a5\u5230 \nGrove - XBee Carrier\n\u3002\n\n\n\n\n\n\n\n\n\n\n\u901a\u8fc7\u4e32\u53e3\u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f\u6355\u83b7 Bluetooth Bee \u548c PC \u7684\u901a\u4fe1\u3002\n\n\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u4e2d\u770b\u5230\u547d\u4ee4\u53ca\u5176\u56de\u590d\u3002\n\n\n\n\n\n\nBluetooth Bee \u88ab\u7f6e\u4e8e INQ \u6a21\u5f0f\uff0c\u751a\u81f3\u5df2\u7ecf\u5728\u9644\u8fd1\u68c0\u6d4b\u5230\u84dd\u7259\u8bbe\u5907\u3002\n\n\n\n\n\n\n\n\n\n\n\u5173\u4e8e\u4f7f\u7528 \nBluetooth Bee\n \u7684\u66f4\u591a\u4fe1\u606f, \u8bf7\u53c2\u9605 \nBluetooth Bee Commands documentation\n\u3002\n\n\n\n\n\u7f16\u7a0b\n\n\n/*\n  Test code for use with an XBee Carrier \n an RF Bee\n\n  Turns on PD5 (eg: grove relay) on for one second, then off for one second, repeatedly.\n*/\n\nvoid setup()\n{\n    // initialize the digital pin as an output [Pin 5 is the Grove connector for I/O\n    pinMode(5, OUTPUT);\n\n    // These lines are needed to ensure that the relay will pull in [provides power to the Grove]\n    pinMode(16, OUTPUT);\n    digitalWrite(16, LOW);\n}\n\nvoid loop() {\n    digitalWrite(5, HIGH);   // set the LED on\n    delay(1000);              // wait for a second\n    digitalWrite(5, LOW);    // set the LED off\n    delay(1000);              // wait for a second\n}\n\n\n\n\n\u66f4\u65b0\u65e5\u5fd7\n\n\n\n\n\n\n\n\n \u4fee\u8ba2\u7248\n\n\n\n \u8bf4\u660e\n\n\n\n \u53d1\u5e03\u65e5\u671f\n\n\n\n\n\n v0.9b\n\n\n\n \u9996\u6b21\u516c\u5f00\u53d1\u884c\n\n\n\n 2011 \u5e74 7 \u6708 13 \u65e5\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\n \nGrove - XBee Carrier  Eagle Files\n\n\n\n\n\n\n[\u539f\u7406\u56fe PDF]\n \nGrove - XBee Carrier PDF schematics file\n\n\n\n\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nCN3063\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nRT9167A_33PB", 
            "title": "Grove XBee Carrier"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_1", 
            "text": "Bees \u517c\u5bb9\u63d2\u5ea7    \u4e24\u4e2a Grove \u8fde\u63a5\u5668    \u4e24\u4e2a Grove \u53cc\u6392\u63d2\u5ea7    \u7528\u4e8e PWR\uff0c\u5145\u7535\u6307\u793a\u548c UART \u4f20\u8f93\u7684 LED\u3002    \u7535\u6e90\u5f00\u5173    \u590d\u4f4d\u6309\u94ae", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_2", 
            "text": "\u5e26\u6709\u50cf  Wifi Bee  \u7684\u72ec\u7acb Bee Node \u7684\u65e0\u7ebf\u4f20\u611f\u5668\u7f51\u7edc\u3002    \u4e3a\u57fa\u4e8e FT232RL \u7684 Bees \u7ec4\u4ef6\u505a\u8f85\u52a9\u914d\u7f6e\u3002    \u4f7f\u7528\u8f66\u8f7d\u5145\u7535\u63a7\u5236\u5668\u4e3a\u9502\u79bb\u5b50\u7535\u6c60\u5145\u7535\u3002    \u4f5c\u4e3a\u57fa\u4e8e FT232RL \u82af\u7247\u7684 3.3v USB\u8f6cUART\u9002\u914d\u5668\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_3", 
            "text": "\u5c06 Bees \u63d2\u5165\u6b63\u786e\u7684\u65b9\u5411\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e1d\u5370\u5c42\u4e0a\u7684\u4fe1\u606f\u6765\u5224\u5b9a\u3002", 
            "title": "\u8b66\u544a"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_4", 
            "text": "\u9879\u76ee   \u6700\u5c0f\u503c   \u5178\u578b\u503c   \u6700\u5927\u503c   \u5355\u4f4d    \u7535\u538b   3.0   3.3   3.6   VDC    \u63a7\u5236\u5668   CN3063    \u5145\u7535\u5668 ( LiPo \u7535\u6c60\u5145\u7535\u7535\u538b)   4.4V to 6V (\u6839\u636e CN3063 \u89c4\u683c)    \u5145\u7535\u7535\u6d41   \u6700\u5927 500mA     3.3V LDO   \u4f4e\u566a\u58f0\u548c\u5fae\u529f\u7387\u578b\u3002\u9002\u7528\u4e8e\u7535\u6c60\u5e94\u7528\u3002    I/O Logic   3.3V Logic", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_5", 
            "text": "U2:  RT9167A_33PB IC, 3.3V LDO \u4f4e\u566a\u5fae\u529f\u7387\u7a33\u538b\u5668  U3:  CN3083 IC\uff0c\u9502\u7535\u6c60\u5145\u7535\u63a7\u5236\u5668 ( \u4f7f\u7528\u592a\u9633\u80fd\u7535\u6c60\u677f\u5145\u7535 )  U4:  FT232RL IC\uff0cUSB \u5230\u4e32\u884c UART \u63a5\u53e3", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_6", 
            "text": "\u4f7f\u7528 RFBee \u65f6\uff0cRFBee \u4e0a\u7684 ATmage168 \u7684\u4ee5\u4e0b\u5f15\u811a\u6392\u5217\u8bf7\u6c42\u4f7f\u7528Arduino IDE   \u5f15\u811a 5 \u662f\u7528\u4e8e I/O \u7684 Grove \u8fde\u63a5\u5668 - \u9ec4\u7ebf  \u5f15\u811a 6 \u662f\u7528\u4e8e I/O \u7684 Grove \u8fde\u63a5\u5668 - \u767d\u7ebf  \u5f15\u811a 16 \u53ef\u80fd\u9700\u8981\u88ab\u4f4e\u7535\u5e73\u9a71\u52a8\u4ee5\u5411 I/O Grove \u63d0\u4f9b\u8db3\u591f\u7684\u529f\u7387[\u901a\u8fc7 mosfet]  \u5f15\u811a 17 \u53ef\u80fd\u9700\u8981\u88ab\u4f4e\u7535\u5e73\u9a71\u52a8\u4ee5\u5411 I2C Grove \u63d0\u4f9b\u8db3\u591f\u7684\u529f\u7387[\u901a\u8fc7 mosfet]    Note  \u60a8\u53ef\u4ee5\u4f7f\u7528\u767d\u8272\u548c\u9ec4\u8272\u5bfc\u7ebf\u4e8c\u5408\u4e00\u7684 x2 Grove \u7ebf\u7f06\u4ee5\u8bbf\u95ee\u8fd9\u4e24\u4e2a I/O\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_7", 
            "text": "", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_8", 
            "text": "\u60a8\u53ef\u4ee5\u4ece  SeeedStudio   Batteries and Chargers \u4e3a\u60a8\u7684\u5e94\u7528\u9009\u62e9\u5408\u9002\u7684\u7535\u6c60\u3002    \u5c06 3.7v LiPo \u7535\u6c60\u8fde\u63a5\u5230  BAT  JST-socket\u3002    \u5c06\u7535\u6e90\u5982\u592a\u9633\u80fd\u7535\u6c60\u677f\u8fde\u63a5\u5230  CHARGER  JST-Socket\u3002    \u7535\u6c60\u5c06\u6301\u7eed\u5145\u7535\u3002\u5145\u7535\u7ed3\u675f\u5c06\u7531\u6807\u6709 'OK' \u7684 LED \u6307\u793a\u3002", 
            "title": "\u5145\u7535"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#bee-nodes", 
            "text": "Bee Nodes \u662f\u72ec\u7acb\u7684 Arduino \u517c\u5bb9\u65e0\u7ebf\u8282\u70b9\u3002 SeeedStudio  \u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u8282\u70b9  Wifi Bee  \u548c  RFBee \u3002    \u4ee5\u4e0b\u56fe\u7247\u8bf4\u660e\u4e86  WiFi Bee  \u4e0e  Grove - XBee Carrier  \u7684\u8fde\u63a5\u3002    \u4efb\u4f55 Grove \u90fd\u53ef\u4ee5\u8fde\u63a5\u5230\u63d0\u4f9b\u7684 Grove \u63d2\u5ea7\u3002    WiFi Bee \u7684\u677f\u8f7d  AtMega328P  \u7684\u7f16\u7a0b\u662f\u901a\u8fc7 USB \u7aef\u53e3\u8fde\u63a5\u5230 PC \u8fdb\u884c\u7684\u3002( \u4f7f\u7528 FT232RL )      \u53c2\u9605  Wifi Bee \u4f7f\u7528\u65b9\u6cd5\u7684\u7f16\u7a0b\u793a\u4f8b\u6587\u6863", 
            "title": "\u4e0e\u72ec\u7acb Bee Nodes \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#bee-modules", 
            "text": "\u8fd9\u90e8\u5206\u662f\u5173\u4e8e\u6ca1\u6709\u901a\u8fc7 Arduino \u5f15\u5bfc\u7a0b\u5e8f\u9884\u7f16\u7a0b\u7684 MCU \u7684 Bee \u6a21\u5757\u3002\u5b83\u4eec\u5927\u591a\u6570\u7684\u884c\u4e3a\u5c31\u50cf\u4e00\u4e2a\u65e0\u7ebf\u63a5\u6536\u5668\u3002 \u8fd9\u4e9b  Bee Modules  \u50cf Bluetooth Bee \u7b49\u53ef\u4ee5\u4e0e PC \u901a\u4fe1\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c  Grove - XBee Carrier  \u4f5c\u4e3a\u8fd9\u4e9b\u4e3a Bees \u63d0\u4f9b\u5fc5\u8981\u7535\u6e90\u7684\u8f7d\u4f53\uff0c\u901a\u8fc7 FT232RL USB \u81f3 UART \u8fde\u63a5 PC \u7684\u901a\u4fe1\u63a5\u53e3\u3002   \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c Bluetooth Bee  \u4f7f\u7528 USB-UART \u8fde\u63a5\u5230  Grove - XBee Carrier \u3002      \u901a\u8fc7\u4e32\u53e3\u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f\u6355\u83b7 Bluetooth Bee \u548c PC \u7684\u901a\u4fe1\u3002    \u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u4e2d\u770b\u5230\u547d\u4ee4\u53ca\u5176\u56de\u590d\u3002    Bluetooth Bee \u88ab\u7f6e\u4e8e INQ \u6a21\u5f0f\uff0c\u751a\u81f3\u5df2\u7ecf\u5728\u9644\u8fd1\u68c0\u6d4b\u5230\u84dd\u7259\u8bbe\u5907\u3002      \u5173\u4e8e\u4f7f\u7528  Bluetooth Bee  \u7684\u66f4\u591a\u4fe1\u606f, \u8bf7\u53c2\u9605  Bluetooth Bee Commands documentation \u3002", 
            "title": "\u4e0e Bee Modules \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_9", 
            "text": "/*\n  Test code for use with an XBee Carrier   an RF Bee\n\n  Turns on PD5 (eg: grove relay) on for one second, then off for one second, repeatedly.\n*/\n\nvoid setup()\n{\n    // initialize the digital pin as an output [Pin 5 is the Grove connector for I/O\n    pinMode(5, OUTPUT);\n\n    // These lines are needed to ensure that the relay will pull in [provides power to the Grove]\n    pinMode(16, OUTPUT);\n    digitalWrite(16, LOW);\n}\n\nvoid loop() {\n    digitalWrite(5, HIGH);   // set the LED on\n    delay(1000);              // wait for a second\n    digitalWrite(5, LOW);    // set the LED off\n    delay(1000);              // wait for a second\n}", 
            "title": "\u7f16\u7a0b"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_10", 
            "text": "\u4fee\u8ba2\u7248   \u8bf4\u660e   \u53d1\u5e03\u65e5\u671f    v0.9b   \u9996\u6b21\u516c\u5f00\u53d1\u884c   2011 \u5e74 7 \u6708 13 \u65e5", 
            "title": "\u66f4\u65b0\u65e5\u5fd7"
        }, 
        {
            "location": "/Grove-XBee_Carrier/#_11", 
            "text": "[Eagle \u6587\u4ef6]   Grove - XBee Carrier  Eagle Files    [\u539f\u7406\u56fe PDF]   Grove - XBee Carrier PDF schematics file    [\u82af\u7247\u6570\u636e\u624b\u518c]   CN3063    [\u5176\u4ed6\u8d44\u6e90]   RT9167A_33PB", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Relay_Shield_v3/", 
            "text": "Relay Shield \u662f\u4e00\u79cd\u80fd\u901a\u8fc7\u9ad8\u7535\u538b\u548c\u5927\u7535\u6d41\u7684\u7535\u5b50\u5668\u4ef6\uff0c\u5b83\u89e3\u51b3\u4e86 Arduino \u65e0\u6cd5\u7528\u81ea\u8eab I/O \u53e3\u63a7\u5236\u9ad8\u7535\u538b\u6216\u5927\u7535\u6d41\u7684\u95ee\u9898\u3002\n\n\nRelay Shield \u6709\u56db\u4e2a\u9ad8\u54c1\u8d28\u7ee7\u7535\u5668\uff0c\u63d0\u4f9b NO\uff08\u5e38\u5f00\uff09/ NC\uff08\u5e38\u95ed\uff09 \u63a5\u53e3\uff0c\u6709\u56db\u4e2a\u52a8\u6001 LED \u6307\u793a\u706f\u7528\u4e8e\u663e\u793a\u6bcf\u4e2a\u7ee7\u7535\u5668\u7684\u5f00/\u5173\u72b6\u6001\uff0c\u4ee5\u53ca\u6807\u51c6\u5316\u5916\u5f62\u5c3a\u5bf8\uff0c\u80fd\u4e0e Arduino / Seeeduino \u677f\u6216\u5176\u4ed6 Arduino \u5f00\u53d1\u677f\u7ec4\u88c5\u5728\u4e00\u8d77\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u517c\u5bb9 Arudino Uno / Leonardo / Seeeduino\uff1b\u5176\u4ed6\u677f\u6216\u5fae\u63a7\u5236\u5668\u901a\u8fc7\u8df3\u7ebf\u6765\u8fde\u63a5\n\n\n\u4f7f\u7528\u4e86\u6570\u5b57 4,5,6 \u548c 7 I/O \u7aef\u53e3\n\n\n\u7ee7\u7535\u5668\u91c7\u7528\u87ba\u4e1d\u7aef\u5b50\n\n\n\u6807\u51c6\u5316\u5c4f\u853d\u58f3\u548c\u8bbe\u8ba1\n\n\n\u6bcf\u4e2a\u7ee7\u7535\u5668\u90fd\u6709 LED \u5de5\u4f5c\u72b6\u6001\u6307\u793a\u706f\n\n\n\u9ad8\u54c1\u8d28\u7ee7\u7535\u5668\n\n\n\u6bcf\u4e2a\u7ee7\u7535\u5668\u90fd\u6709 COM, NO (\u5e38\u5f00), \u548c NC (\u5e38\u95ed)\n\n\n\u66f4\u65b0\u5f15\u811a SCL, SDA, IOREF, NC\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n4.75\n\n\n5\n\n\n5.25\n\n\nVDC\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n8\n\n\n-\n\n\n250\n\n\nmA\n\n\n\n\n\n\n\u5141\u8bb8\u5f00\u5173\u7535\u538b\n\n\n-\n\n\n-\n\n\n35\n\n\nVDC\n\n\n\n\n\n\n\u5141\u8bb8\u5f00\u5173\u7535\u6d41\n\n\n-\n\n\n-\n\n\n8\n\n\nA\n\n\n\n\n\n\n\u5f00\u5173\u9891\u7387\n\n\n-\n\n\n1\n\n\n-\n\n\nHZ\n\n\n\n\n\n\n\u5141\u8bb8\u901a\u8fc7\u529f\u7387\n\n\n-\n\n\n-\n\n\n70\n\n\nW\n\n\n\n\n\n\n\u4f7f\u7528\u5bff\u547d\n\n\n100,000\n\n\n-\n\n\n-\n\n\n\u5468\u671f\n\n\n\n\n\n\n\u63a5\u89e6\u9759\u7535\u653e\u7535\n\n\n-\n\n\n\u00b14\n\n\n-\n\n\nKV\n\n\n\n\n\n\n\u7a7a\u6c14\u9759\u7535\u653e\u7535\n\n\n-\n\n\n\u00b18\n\n\n-\n\n\nKV\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n-\n\n\n68.7X53.5X30.8\n\n\n-\n\n\nmm\n\n\n\n\n\n\n\u51c0\u91cd\n\n\n-\n\n\n55\u00b12\n\n\n-\n\n\ng\n\n\n\n\n\n\n\n\n\n\nCautions\n\n\n\n\n\u8bf7\u5728 Arduino \u7684 USB \u7aef\u53e3\u4e0a\u90e8\u653e\u4e24\u5c42\u7edd\u7f18\u80f6\u5e26\uff0c\u9632\u6b62\u6a21\u5757\u77ed\u8def\u3002\n\n\n\u8bf7\u4e0d\u8981\u5728\u6a21\u5757\u4e0a\u63a5\u5165\u8d85\u8fc7 \n35V DC\n \u7684\u7535\u538b\u3002\n\n\n\n\n\n\n\u517c\u5bb9\u6027\n\n\n\u6211\u4eec\u751f\u4ea7\u4e86\u5927\u91cf\u7684\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5217\u4e86\u8868\u683c\u6765\u8bf4\u660e\u8fd9\u4e9b\u677f\u4e0e\u5e73\u53f0\u677f\u7684\u517c\u5bb9\u6027\u3002\n\n\n\n\nNote\n\u8bf7\u6ce8\u610f\uff0c\u201cNot recommended\u201d\u610f\u5473\u7740\u5b83\u6709\u53ef\u80fd\u53ef\u4ee5\u4e0e\u5e73\u53f0\u677f\u5de5\u4f5c\uff0c\u4f46\u9700\u8981\u505a\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u5982\u8df3\u7ebf\u6216\u91cd\u5199\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u6709\u5174\u8da3\u6316\u6398\u66f4\u591a\uff0c\u6b22\u8fce\u4e0e \n \u8054\u7cfb\u3002\n\n\n\n\n\n\n\u70b9\u51fb\u67e5\u770b\u5927\u56fe\n\n\n\n\n\u6269\u5c55\u677f\u63a5\u53e3\u8bf4\u660e\n\n\n\n\n\n\n\n\n\u6570\u5b57\u63a5\u53e3 \n4\n \u2013 \u63a7\u5236 RELAY4 \u7684 \nCOM4\n \u63a5\u53e3 (\u4f4d\u4e8e \nJ4\n )\n\n\n\u6570\u5b57\u63a5\u53e3 \n5\n \u2013 \u63a7\u5236 RELAY3 \u7684 \nCOM3\n \u63a5\u53e3 (\u4f4d\u4e8e \nJ3\n )\n\n\n\u6570\u5b57\u63a5\u53e3 \n6\n \u2013 \u63a7\u5236 RELAY2 \u7684 \nCOM2\n \u63a5\u53e3 (\u4f4d\u4e8e \nJ2\n )\n\n\n\u6570\u5b57\u63a5\u53e3 \n7\n \u2013 \u63a7\u5236 RELAY1 \u7684 \nCOM1\n \u63a5\u53e3 (\u4f4d\u4e8e \nJ1\n )\n\n\n\n\nJ1\u63a5\u53e3/\u7aef\u5b50\u5f15\u811a\u8bf4\u660e\uff1a\n\n\n\n\n\n\nCOM1 (\u516c\u5171\u7aef)\n : \u7ee7\u7535\u5668\u7684\u5f00\u5173\u8f93\u5165\u7aef\u53e3\uff0c\u53d7\u6570\u5b57\u7aef\u53e3\u63a7\u5236\u3002\n\n\n\n\n\n\nNC1 (\u5e38\u95ed)\n: \u5f53 RELAY1 \u63a7\u5236\u5f15\u811a\uff08\u6570\u5b57 \n7\n I/O \u5f15\u811a\uff09\u7f6e\u4e3a \n\u4f4e\u7535\u5e73\n \u4e14 RELAY1 \u63a7\u5236\u5f15\u811a\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u8be5\u7aef\u5b50\u5c06\u8fde\u63a5\u5230 COM1 \u3002\n\n\n\n\n\n\nNO1 (\u5e38\u5f00)\n: \u5f53 RELAY1 \u63a7\u5236\u5f15\u811a\uff08\u6570\u5b57 \n7\n I/O \u5f15\u811a\uff09\u7f6e\u4e3a \n\u9ad8\u7535\u5e73\n \u4e14 RELAY1 \u63a7\u5236\u5f15\u811a\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u8be5\u7aef\u5b50\u5c06\u8fde\u63a5\u5230 COM1 \u3002\n\n\n\n\n\n\n\u7aef\u5b50 J2-4 \u4e0e J1 \u7c7b\u4f3c\uff0c\u9664\u4e86\u5b83\u4eec\u5206\u522b\u63a7\u5236 RELAY2-RELAY4 \u3002\n\n\n\n\nNote\n\n\n\u9700\u8981\u56db\u4e2a Arduino \u6570\u5b57 I/O \u5f15\u811a\uff08 \n\u5f15\u811a 4-7\n \uff09\u6765\u63a7\u5236\u56db\u4e2a\u4e0d\u540c\u7684\u7ee7\u7535\u5668\u3002 \u53e6\u5916\u8fd8\u9700\u8981 \n5V\n \u548c\u4e24\u4e2a \nGND\n Arduino \u5f15\u811a\u4e3a Relay Shield \u4f9b\u7535\u3002\n\n\n\n\n\u7ee7\u7535\u5668\u5de5\u4f5c\u539f\u7406\n\n\n\n\n\u7ee7\u7535\u5668\u57fa\u672c\u4e0a\u5c31\u662f\u7535\u78c1\u5f00\u5173\uff1a\u5f53\u7ee7\u7535\u5668\u7531\u63a7\u5236\u7535\u8def\u901a\u7535\u65f6\uff08\u5373\u5f53\u5bf9\u7ebf\u5708\u65bd\u52a0\u7535\u538b\u548c\u7535\u6d41\u65f6\uff09\uff0c\u7535\u6d41\u548c\u7ebf\u5708\u4ea7\u751f\u78c1\u573a\u5c06 COM \u7aef\u5b50\u5438\u5f15\u5230 NO \u7aef\u5b50\uff0c \u5f53\u63a7\u5236\u7535\u8def\u53bb\u9664\u65bd\u52a0\u7684\u7535\u538b\u548c\u7535\u6d41\u65f6\uff0cCOM \u7aef\u5b50\u7531\u4e8e\u673a\u68b0\u529b\uff08\u901a\u5e38\u662f\u5f39\u7c27\uff09\u800c\u8fd4\u56de\u4e0e NC \u7aef\u5b50\u63a5\u89e6\u3002\n\n\n\u4e00\u4e9b\u5b9e\u7528\u7684\u7ee7\u7535\u5668\u5e94\u7528\u5305\u62ec\uff1a\u4f7f\u7528\u4f4e\u7535\u538b\u63a7\u5236\u9ad8\u538b\uff0c\u7535\u673a\u63a7\u5236\uff0c\u9065\u63a7\uff0c\u81ea\u52a8\u6e29\u5ea6\u62a5\u8b66\uff0c\u5b75\u5316\u5668\u7b49\u7b49\u3002\n\n\n\u7528\u4e00\u4e2a\u7ee7\u7535\u5668\u63a7\u5236\u4e00\u4e2a\u7535\u673a\u7684\u7535\u673a\u63a7\u5236\u5e94\u7528\u5982\u4e0b\u6240\u793a:\n\n\n\n\n\n\u5728 Relay Shield \u4e2d\uff0c\u56db\u4e2a\u7ee7\u7535\u5668\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7684\u4e24\u4e2a\u201cControl Circuit\u201d\u7aef\u5b50\u4ec5\u7531\u4e00\u4e2a Arduino \u6570\u5b57 I/O \u5f15\u811a\u63a7\u5236\u3002 \n\u5f15\u811a 4,5,6 \u548c 7 \u5206\u522b\u63a7\u5236\u7ee7\u7535\u5668 4,3,2 \u548c 1\n \u3002\n\n\nRelay Shield \u793a\u4f8b\u548c\u7528\u6cd5\n\n\n\u4f60\u77e5\u9053\u7ee7\u7535\u5668\u5185\u90e8\u5982\u4f55\u5de5\u4f5c\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u544a\u8bc9\u4f60\u5982\u4f55\u4f7f\u7528 Relay Shield\u3002\n\n\n\u793a\u4f8b #1: \u63a7\u5236\u76f4\u6d41\u7535\u673a\n\n\n1.\u628a Relay Shield \u7ec4\u88c5\u5728 Arduino \u6269\u5c55\u677f\u4e0a\u3002\n\n\n2.\u7528 USB \u7535\u7f06\u628a Arduino \u8fde\u63a5\u5230\u7535\u8111\u3002\n\n\n3.\u6211\u4eec\u5c06\u4f7f\u7528 RELAY3 \u6765\u63a7\u5236\u76f4\u6d41\u7535\u673a\u3002\u6309\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u76f4\u6d41\u7535\u673a\u548c Relay Shield \uff0c\u7535\u6e90\u7ebf\u63a5\u5728 \nCOM3\n \u4e0a\uff0c\u7535\u673a\u63a5\u5728 \nNO3\n \u4e0a\u3002\n\n\n\n\n\n\n\n\nNote\n\n\n\u4e0a\u56fe\u4e2d\u7684\u5916\u90e8\u7535\u6e90\u53ef\u4ee5\u662f\u7535\u6c60\u6216\u7535\u6e90\u3002 \u5916\u90e8\u7535\u6e90\u5fc5\u987b\u80fd\u591f\u63d0\u4f9b\u8db3\u591f\u7684\u7535\u6d41\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7535\u673a\u7684\u6b63\u5e38\u5de5\u4f5c\u7535\u538b\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9502\u7535\u6c60\u4f5c\u4e3a\u7535\u673a\u7684\u5916\u90e8\u7535\u6e90\u3002\n\n\n\n\n4.\u6253\u5f00 Arduino IDE \u5e76\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u4e0b\u8f7d\u5230 Arduino \u4e2d\u3002\n\nint MotorControl = 5;    // \u8bbe\u7f6e MotorControl \u4e3a\u7535\u673a\u63a7\u5236\u5f15\u811a\n\n// the setup routine runs once when you press reset:\nvoid setup()  {\n  // \u58f0\u660e\u5f15\u811a 5 \u4e3a\u8f93\u51fa\n  pinMode(MotorControl, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop()  {\n  digitalWrite(MotorControl,HIGH); // NO3 \u548c COM3 \u8fde\u901a (\u7535\u673a\u8fd0\u8f6c)\n  delay(1000);                     // \u7b49\u5f85 1000 \u6beb\u79d2 (1 \u79d2)\n  digitalWrite(MotorControl,LOW);  // NO3 \u548c COM3 \u65ad\u5f00 (\u7535\u673a\u505c\u8f6c)\n  delay(1000);\n}\n\n\n\n\u5f53\u4f60\u628a\u7a0b\u5e8f\u4e0b\u8f7d\u5230 Arduino/Seeeduino \u677f\u540e\uff0c\u7535\u673a\u5e94\u8be5\u662f\u8fd0\u884c\u4e00\u79d2\u505c\u8f6c\u4e00\u79d2\uff0c\u5e76\u5faa\u73af\u5f80\u590d\u3002\u5f53\u7535\u673a\u8fd0\u8f6c\u65f6\uff08NO3 \u548c COM3 \u8fde\u901a\uff09\uff0cNO3 LED \u6307\u793a\u706f\u5e94\u8be5\u4f1a\u4eae\u8d77\u3002\n\n\n\u793a\u4f8b #2: \u5982\u4f55\u4f7f\u7528\u4e00\u4e2a Arduino/Seeeduino \u63a7\u5236\u591a\u4e2a\u7ee7\u7535\u5668\n\n\n\u7531\u4e8e Relay Shield \u4f7f\u7528 Arduino \u4e0a\u7684\u5355\u72ec\u6570\u5b57\u5f15\u811a\u6765\u63a7\u5236\u6bcf\u4e2a\u7ee7\u7535\u5668\uff0c\u56e0\u6b64\u63a7\u5236\u591a\u4e2a Relay Shield \uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684Arduino\u677f\uff0c\u53ea\u9700\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a\n\n\n1.\u628a\u4e00\u4e2a Relay Shields\uff08\u79f0\u8fd9\u4e2a\u4e3a \nRelay Shield #1\n\uff09\u63d2\u5728 Arduino \u5f00\u53d1\u677f\u4e0a\u3002\n\n\n2.\u628a\u53e6\u4e00\u4e2a Relay Shield (\u79f0\u8fd9\u4e2a\u4e3a \nRelay Shield #2\n) \u6309\u4e0b\u56fe\u6240\u793a\u7528\u8df3\u7ebf\u8fde\u63a5 \nRelay Shield #1\n\u3002\n\n\n\n\n\n\n\u628a Relay Shield #1 \nGND\n \u5f15\u811a\u8fde\u63a5\u5230 Relay Shield #2 \u7684 \nGND\n \u5f15\u811a\n\n\n\u628a Relay Shield #1 \n5V\n \u5f15\u811a\u8fde\u63a5\u5230 Relay Shield #2 \u7684 \n5V\n \u5f15\u811a\n\n\n\u628a Relay Shield #1 \u7684\u6570\u5b57\u5f15\u811a \n8, 9, 10, \u548c 11\n \u5206\u522b\u8fde\u63a5\u5230 Relay Shield #2 \u7684\u6570\u5b57\u5f15\u811a \n7, 6, 5, \u548c 4\n \u3002\n\n\n\n\n3.\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Arduino \u7684\u5f15\u811a 8 , 9 , 10 \u548c 11 \u6765\u63a7\u5236 Relay Shield \uff032 \u4e2d\u7684\u7ee7\u7535\u5668 1\uff0c2\uff0c3 \u548c 4\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u662f\u7528\u4e8e\u63a7\u5236 Relay Shield #2 \u4e2d\u7684 RELAY1\u3002\n\n\nint relay1inShield2 = 8;    //Arduino \u7684\u6570\u5b57 8 \u5f15\u811a\u63a7\u5236 Relay Shield #2 \u7684 RELAY1\n\n// the setup routine runs once when you press reset:\nvoid setup()  {\n  // \u58f0\u660e\u5f15\u811a 8 \u4e3a\u8f93\u51fa\n  pinMode(relay1inShield2, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop()  {\n  digitalWrite(relay1inShield2,HIGH); // \u7ee7\u7535\u5668\u63a5\u901a (NO \u8fde\u63a5\u5230 COM)\n  delay(1000);                        // \u7b49\u5f85 1000 \u6beb\u79d2 (1 \u79d2)\n  digitalWrite(relay1inShield2,LOW);  // NO \u548c COM \u65ad\u5f00\n  delay(1000);\n}\n\n\n\n\n\u76f8\u5173\u9605\u8bfb\n\n\n\n\n\n\n[\u5e38\u89c1\u95ee\u9898]\nFAQ of Relay Shield \n\n\n\n\n\u8d44\u6599\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\nRelay Shield v3.0", 
            "title": "Relay Shield v3"
        }, 
        {
            "location": "/Relay_Shield_v3/#_1", 
            "text": "\u517c\u5bb9 Arudino Uno / Leonardo / Seeeduino\uff1b\u5176\u4ed6\u677f\u6216\u5fae\u63a7\u5236\u5668\u901a\u8fc7\u8df3\u7ebf\u6765\u8fde\u63a5  \u4f7f\u7528\u4e86\u6570\u5b57 4,5,6 \u548c 7 I/O \u7aef\u53e3  \u7ee7\u7535\u5668\u91c7\u7528\u87ba\u4e1d\u7aef\u5b50  \u6807\u51c6\u5316\u5c4f\u853d\u58f3\u548c\u8bbe\u8ba1  \u6bcf\u4e2a\u7ee7\u7535\u5668\u90fd\u6709 LED \u5de5\u4f5c\u72b6\u6001\u6307\u793a\u706f  \u9ad8\u54c1\u8d28\u7ee7\u7535\u5668  \u6bcf\u4e2a\u7ee7\u7535\u5668\u90fd\u6709 COM, NO (\u5e38\u5f00), \u548c NC (\u5e38\u95ed)  \u66f4\u65b0\u5f15\u811a SCL, SDA, IOREF, NC\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Relay_Shield_v3/#_2", 
            "text": "\u9879\u76ee  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u5de5\u4f5c\u7535\u538b  4.75  5  5.25  VDC    \u5de5\u4f5c\u7535\u6d41  8  -  250  mA    \u5141\u8bb8\u5f00\u5173\u7535\u538b  -  -  35  VDC    \u5141\u8bb8\u5f00\u5173\u7535\u6d41  -  -  8  A    \u5f00\u5173\u9891\u7387  -  1  -  HZ    \u5141\u8bb8\u901a\u8fc7\u529f\u7387  -  -  70  W    \u4f7f\u7528\u5bff\u547d  100,000  -  -  \u5468\u671f    \u63a5\u89e6\u9759\u7535\u653e\u7535  -  \u00b14  -  KV    \u7a7a\u6c14\u9759\u7535\u653e\u7535  -  \u00b18  -  KV    \u5c3a\u5bf8  -  68.7X53.5X30.8  -  mm    \u51c0\u91cd  -  55\u00b12  -  g      Cautions   \u8bf7\u5728 Arduino \u7684 USB \u7aef\u53e3\u4e0a\u90e8\u653e\u4e24\u5c42\u7edd\u7f18\u80f6\u5e26\uff0c\u9632\u6b62\u6a21\u5757\u77ed\u8def\u3002  \u8bf7\u4e0d\u8981\u5728\u6a21\u5757\u4e0a\u63a5\u5165\u8d85\u8fc7  35V DC  \u7684\u7535\u538b\u3002", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Relay_Shield_v3/#_3", 
            "text": "\u6211\u4eec\u751f\u4ea7\u4e86\u5927\u91cf\u7684\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u4f7f\u60a8\u7684\u5e73\u53f0\u677f\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6269\u5c55\u677f\u90fd\u4e0e\u6240\u6709\u5e73\u53f0\u677f\u517c\u5bb9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5217\u4e86\u8868\u683c\u6765\u8bf4\u660e\u8fd9\u4e9b\u677f\u4e0e\u5e73\u53f0\u677f\u7684\u517c\u5bb9\u6027\u3002   Note \u8bf7\u6ce8\u610f\uff0c\u201cNot recommended\u201d\u610f\u5473\u7740\u5b83\u6709\u53ef\u80fd\u53ef\u4ee5\u4e0e\u5e73\u53f0\u677f\u5de5\u4f5c\uff0c\u4f46\u9700\u8981\u505a\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u5982\u8df3\u7ebf\u6216\u91cd\u5199\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u6709\u5174\u8da3\u6316\u6398\u66f4\u591a\uff0c\u6b22\u8fce\u4e0e   \u8054\u7cfb\u3002    \u70b9\u51fb\u67e5\u770b\u5927\u56fe", 
            "title": "\u517c\u5bb9\u6027"
        }, 
        {
            "location": "/Relay_Shield_v3/#_4", 
            "text": "\u6570\u5b57\u63a5\u53e3  4  \u2013 \u63a7\u5236 RELAY4 \u7684  COM4  \u63a5\u53e3 (\u4f4d\u4e8e  J4  )  \u6570\u5b57\u63a5\u53e3  5  \u2013 \u63a7\u5236 RELAY3 \u7684  COM3  \u63a5\u53e3 (\u4f4d\u4e8e  J3  )  \u6570\u5b57\u63a5\u53e3  6  \u2013 \u63a7\u5236 RELAY2 \u7684  COM2  \u63a5\u53e3 (\u4f4d\u4e8e  J2  )  \u6570\u5b57\u63a5\u53e3  7  \u2013 \u63a7\u5236 RELAY1 \u7684  COM1  \u63a5\u53e3 (\u4f4d\u4e8e  J1  )   J1\u63a5\u53e3/\u7aef\u5b50\u5f15\u811a\u8bf4\u660e\uff1a    COM1 (\u516c\u5171\u7aef)  : \u7ee7\u7535\u5668\u7684\u5f00\u5173\u8f93\u5165\u7aef\u53e3\uff0c\u53d7\u6570\u5b57\u7aef\u53e3\u63a7\u5236\u3002    NC1 (\u5e38\u95ed) : \u5f53 RELAY1 \u63a7\u5236\u5f15\u811a\uff08\u6570\u5b57  7  I/O \u5f15\u811a\uff09\u7f6e\u4e3a  \u4f4e\u7535\u5e73  \u4e14 RELAY1 \u63a7\u5236\u5f15\u811a\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u8be5\u7aef\u5b50\u5c06\u8fde\u63a5\u5230 COM1 \u3002    NO1 (\u5e38\u5f00) : \u5f53 RELAY1 \u63a7\u5236\u5f15\u811a\uff08\u6570\u5b57  7  I/O \u5f15\u811a\uff09\u7f6e\u4e3a  \u9ad8\u7535\u5e73  \u4e14 RELAY1 \u63a7\u5236\u5f15\u811a\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u8be5\u7aef\u5b50\u5c06\u8fde\u63a5\u5230 COM1 \u3002    \u7aef\u5b50 J2-4 \u4e0e J1 \u7c7b\u4f3c\uff0c\u9664\u4e86\u5b83\u4eec\u5206\u522b\u63a7\u5236 RELAY2-RELAY4 \u3002   Note  \u9700\u8981\u56db\u4e2a Arduino \u6570\u5b57 I/O \u5f15\u811a\uff08  \u5f15\u811a 4-7  \uff09\u6765\u63a7\u5236\u56db\u4e2a\u4e0d\u540c\u7684\u7ee7\u7535\u5668\u3002 \u53e6\u5916\u8fd8\u9700\u8981  5V  \u548c\u4e24\u4e2a  GND  Arduino \u5f15\u811a\u4e3a Relay Shield \u4f9b\u7535\u3002", 
            "title": "\u6269\u5c55\u677f\u63a5\u53e3\u8bf4\u660e"
        }, 
        {
            "location": "/Relay_Shield_v3/#_5", 
            "text": "\u7ee7\u7535\u5668\u57fa\u672c\u4e0a\u5c31\u662f\u7535\u78c1\u5f00\u5173\uff1a\u5f53\u7ee7\u7535\u5668\u7531\u63a7\u5236\u7535\u8def\u901a\u7535\u65f6\uff08\u5373\u5f53\u5bf9\u7ebf\u5708\u65bd\u52a0\u7535\u538b\u548c\u7535\u6d41\u65f6\uff09\uff0c\u7535\u6d41\u548c\u7ebf\u5708\u4ea7\u751f\u78c1\u573a\u5c06 COM \u7aef\u5b50\u5438\u5f15\u5230 NO \u7aef\u5b50\uff0c \u5f53\u63a7\u5236\u7535\u8def\u53bb\u9664\u65bd\u52a0\u7684\u7535\u538b\u548c\u7535\u6d41\u65f6\uff0cCOM \u7aef\u5b50\u7531\u4e8e\u673a\u68b0\u529b\uff08\u901a\u5e38\u662f\u5f39\u7c27\uff09\u800c\u8fd4\u56de\u4e0e NC \u7aef\u5b50\u63a5\u89e6\u3002  \u4e00\u4e9b\u5b9e\u7528\u7684\u7ee7\u7535\u5668\u5e94\u7528\u5305\u62ec\uff1a\u4f7f\u7528\u4f4e\u7535\u538b\u63a7\u5236\u9ad8\u538b\uff0c\u7535\u673a\u63a7\u5236\uff0c\u9065\u63a7\uff0c\u81ea\u52a8\u6e29\u5ea6\u62a5\u8b66\uff0c\u5b75\u5316\u5668\u7b49\u7b49\u3002  \u7528\u4e00\u4e2a\u7ee7\u7535\u5668\u63a7\u5236\u4e00\u4e2a\u7535\u673a\u7684\u7535\u673a\u63a7\u5236\u5e94\u7528\u5982\u4e0b\u6240\u793a:   \u5728 Relay Shield \u4e2d\uff0c\u56db\u4e2a\u7ee7\u7535\u5668\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7684\u4e24\u4e2a\u201cControl Circuit\u201d\u7aef\u5b50\u4ec5\u7531\u4e00\u4e2a Arduino \u6570\u5b57 I/O \u5f15\u811a\u63a7\u5236\u3002  \u5f15\u811a 4,5,6 \u548c 7 \u5206\u522b\u63a7\u5236\u7ee7\u7535\u5668 4,3,2 \u548c 1  \u3002", 
            "title": "\u7ee7\u7535\u5668\u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/Relay_Shield_v3/#relay-shield", 
            "text": "\u4f60\u77e5\u9053\u7ee7\u7535\u5668\u5185\u90e8\u5982\u4f55\u5de5\u4f5c\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u544a\u8bc9\u4f60\u5982\u4f55\u4f7f\u7528 Relay Shield\u3002  \u793a\u4f8b #1: \u63a7\u5236\u76f4\u6d41\u7535\u673a  1.\u628a Relay Shield \u7ec4\u88c5\u5728 Arduino \u6269\u5c55\u677f\u4e0a\u3002  2.\u7528 USB \u7535\u7f06\u628a Arduino \u8fde\u63a5\u5230\u7535\u8111\u3002  3.\u6211\u4eec\u5c06\u4f7f\u7528 RELAY3 \u6765\u63a7\u5236\u76f4\u6d41\u7535\u673a\u3002\u6309\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u76f4\u6d41\u7535\u673a\u548c Relay Shield \uff0c\u7535\u6e90\u7ebf\u63a5\u5728  COM3  \u4e0a\uff0c\u7535\u673a\u63a5\u5728  NO3  \u4e0a\u3002     Note  \u4e0a\u56fe\u4e2d\u7684\u5916\u90e8\u7535\u6e90\u53ef\u4ee5\u662f\u7535\u6c60\u6216\u7535\u6e90\u3002 \u5916\u90e8\u7535\u6e90\u5fc5\u987b\u80fd\u591f\u63d0\u4f9b\u8db3\u591f\u7684\u7535\u6d41\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7535\u673a\u7684\u6b63\u5e38\u5de5\u4f5c\u7535\u538b\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9502\u7535\u6c60\u4f5c\u4e3a\u7535\u673a\u7684\u5916\u90e8\u7535\u6e90\u3002   4.\u6253\u5f00 Arduino IDE \u5e76\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u4e0b\u8f7d\u5230 Arduino \u4e2d\u3002 int MotorControl = 5;    // \u8bbe\u7f6e MotorControl \u4e3a\u7535\u673a\u63a7\u5236\u5f15\u811a\n\n// the setup routine runs once when you press reset:\nvoid setup()  {\n  // \u58f0\u660e\u5f15\u811a 5 \u4e3a\u8f93\u51fa\n  pinMode(MotorControl, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop()  {\n  digitalWrite(MotorControl,HIGH); // NO3 \u548c COM3 \u8fde\u901a (\u7535\u673a\u8fd0\u8f6c)\n  delay(1000);                     // \u7b49\u5f85 1000 \u6beb\u79d2 (1 \u79d2)\n  digitalWrite(MotorControl,LOW);  // NO3 \u548c COM3 \u65ad\u5f00 (\u7535\u673a\u505c\u8f6c)\n  delay(1000);\n}  \u5f53\u4f60\u628a\u7a0b\u5e8f\u4e0b\u8f7d\u5230 Arduino/Seeeduino \u677f\u540e\uff0c\u7535\u673a\u5e94\u8be5\u662f\u8fd0\u884c\u4e00\u79d2\u505c\u8f6c\u4e00\u79d2\uff0c\u5e76\u5faa\u73af\u5f80\u590d\u3002\u5f53\u7535\u673a\u8fd0\u8f6c\u65f6\uff08NO3 \u548c COM3 \u8fde\u901a\uff09\uff0cNO3 LED \u6307\u793a\u706f\u5e94\u8be5\u4f1a\u4eae\u8d77\u3002  \u793a\u4f8b #2: \u5982\u4f55\u4f7f\u7528\u4e00\u4e2a Arduino/Seeeduino \u63a7\u5236\u591a\u4e2a\u7ee7\u7535\u5668  \u7531\u4e8e Relay Shield \u4f7f\u7528 Arduino \u4e0a\u7684\u5355\u72ec\u6570\u5b57\u5f15\u811a\u6765\u63a7\u5236\u6bcf\u4e2a\u7ee7\u7535\u5668\uff0c\u56e0\u6b64\u63a7\u5236\u591a\u4e2a Relay Shield \uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684Arduino\u677f\uff0c\u53ea\u9700\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a  1.\u628a\u4e00\u4e2a Relay Shields\uff08\u79f0\u8fd9\u4e2a\u4e3a  Relay Shield #1 \uff09\u63d2\u5728 Arduino \u5f00\u53d1\u677f\u4e0a\u3002  2.\u628a\u53e6\u4e00\u4e2a Relay Shield (\u79f0\u8fd9\u4e2a\u4e3a  Relay Shield #2 ) \u6309\u4e0b\u56fe\u6240\u793a\u7528\u8df3\u7ebf\u8fde\u63a5  Relay Shield #1 \u3002    \u628a Relay Shield #1  GND  \u5f15\u811a\u8fde\u63a5\u5230 Relay Shield #2 \u7684  GND  \u5f15\u811a  \u628a Relay Shield #1  5V  \u5f15\u811a\u8fde\u63a5\u5230 Relay Shield #2 \u7684  5V  \u5f15\u811a  \u628a Relay Shield #1 \u7684\u6570\u5b57\u5f15\u811a  8, 9, 10, \u548c 11  \u5206\u522b\u8fde\u63a5\u5230 Relay Shield #2 \u7684\u6570\u5b57\u5f15\u811a  7, 6, 5, \u548c 4  \u3002   3.\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Arduino \u7684\u5f15\u811a 8 , 9 , 10 \u548c 11 \u6765\u63a7\u5236 Relay Shield \uff032 \u4e2d\u7684\u7ee7\u7535\u5668 1\uff0c2\uff0c3 \u548c 4\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u662f\u7528\u4e8e\u63a7\u5236 Relay Shield #2 \u4e2d\u7684 RELAY1\u3002  int relay1inShield2 = 8;    //Arduino \u7684\u6570\u5b57 8 \u5f15\u811a\u63a7\u5236 Relay Shield #2 \u7684 RELAY1\n\n// the setup routine runs once when you press reset:\nvoid setup()  {\n  // \u58f0\u660e\u5f15\u811a 8 \u4e3a\u8f93\u51fa\n  pinMode(relay1inShield2, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop()  {\n  digitalWrite(relay1inShield2,HIGH); // \u7ee7\u7535\u5668\u63a5\u901a (NO \u8fde\u63a5\u5230 COM)\n  delay(1000);                        // \u7b49\u5f85 1000 \u6beb\u79d2 (1 \u79d2)\n  digitalWrite(relay1inShield2,LOW);  // NO \u548c COM \u65ad\u5f00\n  delay(1000);\n}", 
            "title": "Relay Shield \u793a\u4f8b\u548c\u7528\u6cd5"
        }, 
        {
            "location": "/Relay_Shield_v3/#_6", 
            "text": "[\u5e38\u89c1\u95ee\u9898] FAQ of Relay Shield", 
            "title": "\u76f8\u5173\u9605\u8bfb"
        }, 
        {
            "location": "/Relay_Shield_v3/#_7", 
            "text": "[Eagle \u6587\u4ef6] Relay Shield v3.0", 
            "title": "\u8d44\u6599\u4e0b\u8f7d"
        }, 
        {
            "location": "/GrovePi_Plus/", 
            "text": "GrovePi\n \u662f\u4e00\u4e2a \nRaspberry Pi\n \u7684\u6269\u5c55\u677f\uff0c\u53ef\u4ee5\u7528\u6765\u8fde\u63a5\u5404\u79cd \nGrove Sensors\n\u3002 \u4f5c\u4e3a \nGrovePi\n \u7684\u65b0\u7248\u672c\uff0c\u5b83\u652f\u6301\u65b0\u578b\u53f7\u7684 RaspberryPi A+ \u548c B+\u3002\u5b83\u6709\u4e09\u4e2a\u5b89\u88c5\u5b54\u53ef\u4ee5\u5b8c\u7f8e\u5339\u914d\u6240\u6709\u7248\u672c\u7684 Raspberry Pi\uff0c\u540c\u65f6\u914d\u6709\u76f8\u673a\u7535\u7f06\u51fa\u53e3\u5b54\u3002\u5b83\u8fd8\u6539\u8fdb\u4e86\u7535\u538b\u7535\u5e73\u8f6c\u6362\u5b50\u7535\u8def\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n7 \u4e2a\u6570\u5b57\u7aef\u53e3\n\n\n\n\n\n\n3 \u4e2a\u6a21\u62df\u7aef\u53e3\n\n\n\n\n\n\n3 \u4e2a I2C \u7aef\u53e3\n\n\n\n\n\n\n1 \u4e2a\u4e32\u53e3\u8fde\u63a5\u5230 GrovePi\n\n\n\n\n\n\n1 \u4e2a\u4e32\u53e3\u8fde\u63a5\u5230 Raspberry Pi\n\n\n\n\n\n\nGrove \u63a5\u53e3 Vcc \u8f93\u51fa\u7535\u538b: 5V DC\n\n\n\n\n\n\n\u5f00\u59cb\u4f7f\u7528\n\n\n\n\n\u6b22\u8fce\u6765\u5230 GrovePi+ \u7684\u5feb\u901f\u5165\u95e8\u6559\u7a0b\n\n\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee \nGithub Repository\n \u4ee5\u83b7\u5f97\u66f4\u591a\u7684\u8d44\u6e90\u3002\n\n\n\u628a GrovePi \u8fde\u63a5\u5230 Raspberry Pi\n\n\nFirst, \u628a\u4f60\u7684 GrovePi \u7ec4\u88c5\u5728 Raspberry Pi \u4e0a\u3002\u6309\u4e0b\u56fe\u6240\u793a\uff0c\u5bf9\u51c6 GrovePi \u548c Raspberry Pi \u7684\u9876\u90e8\uff0c\u7f13\u6162\u63d2\u5165 GrovePi\u3002\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u786e\u4fdd\u5728\u5b89\u88c5 GrovePi \u65f6\u9488\u811a\u6b63\u786e\u5bf9\u9f50\u3002\n\n\n\u5728 Raspberry Pi \u4e0a\u5b89\u88c5\u8f6f\u4ef6\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5728 Raspberry Pi \u4e0a\u5b89\u88c5\u8be5\u8f6f\u4ef6\u3002 \u6709\u4e24\u4e2a\u5b89\u88c5\u9009\u9879\uff1a\n\n\n\n\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684 BrickPi Image\u3002\n\n\n\n\n\n\n\u4f7f\u7528\u81ea\u5df1\u7684\u56fa\u4ef6\u3002 \u5982\u679c\u60a8\u5df2\u7ecf\u62e5\u6709\u81ea\u5df1\u7684 Raspberry Pi \u4e0a\u8fd0\u884c\u7684 linux \u98ce\u683c\uff0c\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684 bash \u811a\u672c\u6765\u8bbe\u7f6e GrovePi\u3002\n\n\n\n\n\n\n\u4f7f\u7528 BrickPi Image\n\n\n\n\n\n\n\u4e0b\u8f7d Brick Pi Image \u5e76\u5728\u4f60\u7684 SD \u5361\u4e2d\u5b89\u88c5\u3002\n\u70b9\u51fb\u8fd9\u91cc\uff0c\u6309\u7167 BrickPi \u9875\u9762\u7684\u6b65\u9aa4\u6765\u914d\u7f6eSD\u5361\n\u3002  \u60a8\u9700\u8981\u81f3\u5c11 4GB \u7684 SD \u5361\u6765\u8fdb\u884c\u5b89\u88c5\u3002\n\n\n\n\n\n\n\u5728 Raspbian \u7684\u9002\u5f53\u4f4d\u7f6e\u4e0a\u514b\u9686 Github \u4ed3\u5e93\u3002\n\n\n\n\n\n\ngit clone https://github.com/DexterInd/GrovePi.git\n\n\n\n\n\n\n\n\n\u5728\u811a\u672c\u6587\u4ef6\u5939\u4e2d\u8fd0\u884cbash\u811a\u672c\u6765\u914d\u7f6eRaspbian\u3002\n\u8fd9\u91cc\u662f\u4f7f\u7528\u811a\u672c\u8bbe\u7f6e\u7684\u6559\u7a0b\u3002\n\n\n\n\n\n\n\u91cd\u542f Raspberry Pi\u3002\n\n\n\n\n\n\n\u914d\u7f6e\u81ea\u5df1\u7684 Image\n\n\n\n\n\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u514b\u9686 Github \u4ed3\u5e93\u3002\n\n\n\n\ngit clone https://github.com/DexterInd/GrovePi.git\n\n\n\n\n\n\n\n\n\u5728\u811a\u672c\u6587\u4ef6\u5939\u4e2d\u8fd0\u884c bash \u811a\u672c\u6765\u914d\u7f6e Raspbian \u3002 \n\u8fd9\u91cc\n \u662f\u4f7f\u7528\u811a\u672c\u8bbe\u7f6e\u7684\u6559\u7a0b\u3002\n\n\n\n\n\n\n\u91cd\u542f Raspberry Pi \u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 Grove Pi \u4e86\u3002\n\n\n\n\n\n\n\u6d4b\u8bd5 GrovePi\n\n\n\u5f53\u60a8\u5c06 Raspberry Pi \u914d\u7f6e\u4e3a\u4e0e GrovePi \u914d\u5408\u4f7f\u7528\u540e\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5b83\u5728\u8fd0\u884c\u3002\n\n\n\u6211\u4eec\u5df2\u7ecf\u5f00\u53d1\u4e86\u4e09\u4e2a\u7b80\u5355\u7684\u9879\u76ee\u6765\u8bf4\u660e GrovePi \u7684\u5de5\u4f5c\u539f\u7406\u3002\n\n\n\u652f\u6301\u7684\u4ea7\u54c1\n\n\n\n\nGrove \u6e05\u5355\n\n\n\n\n\n\n1. Grove - Button \n\n\n\n\n\n\n2. Light Sensor\n\n\n\n\n\n\n3. Buzzer\n\n\n\n\n\n\n4. Sound Sensor \n\n\n\n\n\n\n5. Grove - Red LED \n\n\n\n\n\n\n6. Grove - Blue LED \n\n\n\n\n\n\n7. Grove - Green LED \n\n\n\n\n\n\n8. LCD RGB Backlight \n\n\n\n\n\n\n9. Rotary Angle Sensor \n\n\n\n\n\n\n10. Temperature Humidity Sensor \n\n\n\n\n\n\n11. Ultrasonic Ranger Sensor\n\n\n\n\n\n\n12. Relay\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\n \nGrovePi_Plus V3.0 eagle file\n\n\n[PDF \u6587\u4ef6]\n \nGrovePi_Plus V3.0 schematics pdf file\n\n\n[PDF \u6587\u4ef6]\n \nGrovePi_Plus V3.0 PCB pdf file\n\n\n[PDF \u6587\u4ef6]\n \nSetting_Up_Software_for_GrovePi", 
            "title": "GrovePi Plus"
        }, 
        {
            "location": "/GrovePi_Plus/#_1", 
            "text": "7 \u4e2a\u6570\u5b57\u7aef\u53e3    3 \u4e2a\u6a21\u62df\u7aef\u53e3    3 \u4e2a I2C \u7aef\u53e3    1 \u4e2a\u4e32\u53e3\u8fde\u63a5\u5230 GrovePi    1 \u4e2a\u4e32\u53e3\u8fde\u63a5\u5230 Raspberry Pi    Grove \u63a5\u53e3 Vcc \u8f93\u51fa\u7535\u538b: 5V DC", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/GrovePi_Plus/#_2", 
            "text": "\u6b22\u8fce\u6765\u5230 GrovePi+ \u7684\u5feb\u901f\u5165\u95e8\u6559\u7a0b  \u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee  Github Repository  \u4ee5\u83b7\u5f97\u66f4\u591a\u7684\u8d44\u6e90\u3002", 
            "title": "\u5f00\u59cb\u4f7f\u7528"
        }, 
        {
            "location": "/GrovePi_Plus/#grovepi-raspberry-pi", 
            "text": "First, \u628a\u4f60\u7684 GrovePi \u7ec4\u88c5\u5728 Raspberry Pi \u4e0a\u3002\u6309\u4e0b\u56fe\u6240\u793a\uff0c\u5bf9\u51c6 GrovePi \u548c Raspberry Pi \u7684\u9876\u90e8\uff0c\u7f13\u6162\u63d2\u5165 GrovePi\u3002     Note   \u786e\u4fdd\u5728\u5b89\u88c5 GrovePi \u65f6\u9488\u811a\u6b63\u786e\u5bf9\u9f50\u3002", 
            "title": "\u628a GrovePi \u8fde\u63a5\u5230 Raspberry Pi"
        }, 
        {
            "location": "/GrovePi_Plus/#raspberry-pi", 
            "text": "\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5728 Raspberry Pi \u4e0a\u5b89\u88c5\u8be5\u8f6f\u4ef6\u3002 \u6709\u4e24\u4e2a\u5b89\u88c5\u9009\u9879\uff1a    \u60a8\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684 BrickPi Image\u3002    \u4f7f\u7528\u81ea\u5df1\u7684\u56fa\u4ef6\u3002 \u5982\u679c\u60a8\u5df2\u7ecf\u62e5\u6709\u81ea\u5df1\u7684 Raspberry Pi \u4e0a\u8fd0\u884c\u7684 linux \u98ce\u683c\uff0c\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684 bash \u811a\u672c\u6765\u8bbe\u7f6e GrovePi\u3002    \u4f7f\u7528 BrickPi Image    \u4e0b\u8f7d Brick Pi Image \u5e76\u5728\u4f60\u7684 SD \u5361\u4e2d\u5b89\u88c5\u3002 \u70b9\u51fb\u8fd9\u91cc\uff0c\u6309\u7167 BrickPi \u9875\u9762\u7684\u6b65\u9aa4\u6765\u914d\u7f6eSD\u5361 \u3002  \u60a8\u9700\u8981\u81f3\u5c11 4GB \u7684 SD \u5361\u6765\u8fdb\u884c\u5b89\u88c5\u3002    \u5728 Raspbian \u7684\u9002\u5f53\u4f4d\u7f6e\u4e0a\u514b\u9686 Github \u4ed3\u5e93\u3002    git clone https://github.com/DexterInd/GrovePi.git    \u5728\u811a\u672c\u6587\u4ef6\u5939\u4e2d\u8fd0\u884cbash\u811a\u672c\u6765\u914d\u7f6eRaspbian\u3002 \u8fd9\u91cc\u662f\u4f7f\u7528\u811a\u672c\u8bbe\u7f6e\u7684\u6559\u7a0b\u3002    \u91cd\u542f Raspberry Pi\u3002    \u914d\u7f6e\u81ea\u5df1\u7684 Image   \u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u514b\u9686 Github \u4ed3\u5e93\u3002   git clone https://github.com/DexterInd/GrovePi.git    \u5728\u811a\u672c\u6587\u4ef6\u5939\u4e2d\u8fd0\u884c bash \u811a\u672c\u6765\u914d\u7f6e Raspbian \u3002  \u8fd9\u91cc  \u662f\u4f7f\u7528\u811a\u672c\u8bbe\u7f6e\u7684\u6559\u7a0b\u3002    \u91cd\u542f Raspberry Pi \u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 Grove Pi \u4e86\u3002", 
            "title": "\u5728 Raspberry Pi \u4e0a\u5b89\u88c5\u8f6f\u4ef6"
        }, 
        {
            "location": "/GrovePi_Plus/#grovepi", 
            "text": "\u5f53\u60a8\u5c06 Raspberry Pi \u914d\u7f6e\u4e3a\u4e0e GrovePi \u914d\u5408\u4f7f\u7528\u540e\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5b83\u5728\u8fd0\u884c\u3002  \u6211\u4eec\u5df2\u7ecf\u5f00\u53d1\u4e86\u4e09\u4e2a\u7b80\u5355\u7684\u9879\u76ee\u6765\u8bf4\u660e GrovePi \u7684\u5de5\u4f5c\u539f\u7406\u3002", 
            "title": "\u6d4b\u8bd5 GrovePi"
        }, 
        {
            "location": "/GrovePi_Plus/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u7684\u4ea7\u54c1"
        }, 
        {
            "location": "/GrovePi_Plus/#grove", 
            "text": "1. Grove - Button     2. Light Sensor    3. Buzzer    4. Sound Sensor     5. Grove - Red LED     6. Grove - Blue LED     7. Grove - Green LED     8. LCD RGB Backlight     9. Rotary Angle Sensor     10. Temperature Humidity Sensor     11. Ultrasonic Ranger Sensor    12. Relay", 
            "title": "Grove \u6e05\u5355"
        }, 
        {
            "location": "/GrovePi_Plus/#_4", 
            "text": "[Eagle \u6587\u4ef6]   GrovePi_Plus V3.0 eagle file  [PDF \u6587\u4ef6]   GrovePi_Plus V3.0 schematics pdf file  [PDF \u6587\u4ef6]   GrovePi_Plus V3.0 PCB pdf file  [PDF \u6587\u4ef6]   Setting_Up_Software_for_GrovePi", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/", 
            "text": "WireLess Gate Shield \u662f\u517c\u5bb9 Arduino \u7684\u6269\u5c55\u677f\uff0c\u65e8\u5728\u6784\u5efa\u4e00\u4e2a\u63a5\u6536/\u53d1\u9001\u548c\u5e7f\u64ad\u5404\u79cd\u65e0\u7ebf\u547d\u4ee4\u548c\u6570\u636e\u7684\u7cfb\u7edf\u3002\u4e3a\u4e86\u6700\u5927\u9650\u5ea6\u5730\u8986\u76d6\u677f\u4e0a\u7684\u65e0\u7ebf\u901a\u4fe1\u63a5\u53e3\uff0c\u5b83\u6709\u4e00\u4e2a\u7ea2\u5916\u63a5\u6536\u5668\u63a5\u53e3\uff0c\u7528\u4e8e\u8fde\u63a5\u6d41\u884c\u7684\u6536\u53d1\u5668 nRF24L01 + \u548c RFM69HW\u3002\u6b64\u5916\uff0c\u8be5\u4e3b\u677f\u8fd8\u6709\u4e00\u4e2a\u5b9e\u65f6\u65f6\u949f\u6a21\u5757 DS1307\u3002\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u63a5\u53e3\u53ef\u5b89\u88c5 315/433/868/915 MHz \u7684 \nRFM69HW\n\uff08\u53d6\u51b3\u4e8e\u4e0d\u540c\u7248\u672c\uff09\n\n\n\u63a5\u53e3\u53ef\u5b89\u88c5 2.4 GHz \u7684 \nnRF24L01 +\n\n\n\u7ea2\u5916\u63a5\u6536\u5668\n\n\n\u57fa\u4e8e DS1307 \u7684\u7535\u6c60\u4f9b\u7535\u7684\u5b9e\u65f6\u65f6\u949f\u6a21\u5757\n\n\n\u65e0\u7ebf\u7535\u6a21\u5757 LED \u6d3b\u52a8\u6307\u793a\u706f\n\n\n\u7528\u6237\u9884\u7559 LED\n\n\n\u65f6\u949f\u91c7\u7528\u6309\u952e\u63a7\u5236\n\n\n\u517c\u5bb9 \nGROVE\n \u63a5\u53e3: I2C\n\n\n\u4e0e \nEthernet Shield\n \u5b8c\u5168\u517c\u5bb9\n\n\n\n\n\u7535\u8def\u56fe\u548c\u5e03\u5c40\n\n\n\n\n\n\nWireLess Gate Shield \u7684\u5de6\u4fa7\u662f\u65e0\u7ebf\u6a21\u5757\u7684\u63a5\u53e3\uff1a\n\n\n\n\nnRF24l01 + \uff0c\u5305\u62ec\u589e\u5f3a (\"PA\") \u7248\u672c (\u4e0a\u90e8)\n\n\nRFM69HW (\u4e0b\u90e8)\u3002\n\n\n\n\n\u65e0\u7ebf\u6a21\u5757\u4e4b\u95f4\u662f\u7528\u4e8e RFM69HW \u5916\u90e8\u5929\u7ebf\u7684 U.FL \u8fde\u63a5\u5668\u3002\u5982\u679c\u60a8\u6253\u7b97\u4f7f\u7528\u5e38\u89c4\u5929\u7ebf\uff08\u9700\u8981\u4e00\u5b9a\u957f\u5ea6\u7684\u5bfc\u7ebf\uff09 - \u53ef\u4ee5\u76f4\u63a5\u710a\u63a5\u5230 Schild \u4e0a\uff08\u9760\u8fd1\u8fde\u63a5\u5668 U.FL\uff09\u3002\n\n\n\u5728\u6a21\u5757\u7684\u53f3\u4e0a\u65b9\u662f RFM69HW LED LED1 \"RF433\"\n\n\n\u5728\u7535\u8def\u677f\u7684\u4e2d\u592e\u90e8\u5206\u6709\u4e00\u4e2a\u7528\u4e8e\u65f6\u949f\u6a21\u5757 DS1307 \u4f9b\u7535\u7535\u6c60\u7684\u63d2\u69fd\n\n\n\u7535\u6c60\u69fd\u53f3\u4e0b\u65b9\u7684\u662f I2C \u8fde\u63a5\u5668\n\n\n\u53f3\u8fb9\u662f\uff08\u81ea\u4e0a\u800c\u4e0b\uff09\uff1a\n\n\n\n\nLED LED2 \"RF24\"\n\n\n\u7ea2\u5916\u63a5\u6536\u5668\n\n\nLED LED3 - \u7528\u6237\u9884\u7559\n\n\n\u65f6\u949f\u6309\u94ae S1\n\n\n\n\n\n\n\u57fa\u672c\u529f\u80fd\n\n\n\n\n\u5728\u57fa\u672c\u7248\u672c\u4e2d\uff08\u4e0d\u4f7f\u7528 Ethernet Shield \uff09\u53ef\u4ee5\u5728\u65e0\u7ebf\u7535\u548c\u7ea2\u5916\u63a5\u6536\u5668\u4e4b\u95f4\u8bbe\u7f6e\u4e00\u4e2a\u65e0\u7ebf\u7f51\u5173\u3002\n\n\n\u547d\u4ee4\uff08\u6216\u6570\u636e\uff09\u53ef\u4ee5\u6839\u636e\u7528\u6237\u7a0b\u5e8f\u7684\u903b\u8f91\u901a\u8fc7\u6240\u6709\u4e09\u4e2a\u65e0\u7ebf\u63a5\u53e3\u8fdb\u884c\u5e7f\u64ad\u3002\n\n\n\u5b9e\u65f6\u65f6\u949f\u6a21\u5757\u7684\u7528\u9014\u5728\u4e8e\u53ef\u4ee5\u628a\u53c2\u8003\u65e5\u671f/\u65f6\u95f4\u4e0e\u4efb\u4f55\u6570\u636e/\u547d\u4ee4\u4e00\u8d77\u53d1\u9001\u51fa\u53bb\u3002\n\n\n\u8bbe\u5907\u7ba1\u7406\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u677f\u4e0a\u7684\u6309\u94ae\u8fdb\u884c\u8c03\u6574\u3002\n\n\n\u5176\u4ed6\u7528\u9014\n\n\n\n\n\u6b64\u5916\uff0cWireLess Gate Shield \u53ef\u4ee5\u4f7f\u7528Grove \u63a5\u53e3\u8fde\u63a5\u4efb\u4f55 I2C \u8bbe\u5907\uff08\u4f20\u611f\u5668\uff0c\u663e\u793a\u5668\u7b49\uff09\u3002\n\n\nWireLess Gate Shield \u88ab\u8bbe\u8ba1\u4e3a\u4e0e \nEthernet Shield\n \u5b8c\u5168\u517c\u5bb9\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4e00\u8d77\u4f7f\u7528\u4e24\u5757\u677f\u5b50\u521b\u9020\u4e00\u4e9b\u66f4\u5148\u8fdb\u7684\u65e0\u7ebf\u901a\u8baf\u88c5\u7f6e\uff08\u5728 SD \u5361\u4e2d\u5b58\u50a8\uff0c\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u6570\u636e\uff0c\u901a\u8fc7\u7f51\u7edc\u7ba1\u7406\u65e0\u7ebf\u8bbe\u5907\uff09\u3002\n\n\n\u63a5\u53e3\n\n\n\n\n\n\n\n\nRF \u6a21\u5757 nRF24L01 + \u7684\u63a5\u53e3\uff1a\n\n\n\n\n\n\nD11 - MOSI\n\n\n\n\n\n\nD12 - MISO\n\n\n\n\nD13 - SCK\n\n\n\n\n\n\n\n\nD7 - RF24_CE\n\n\n\n\n\n\nD8 - RF24_CSN\n\n\n\n\n\n\nD2 - RF24_IRQ\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRF-module RFM69HW \u7684\u63a5\u53e3\uff1a\n\n\n\n\n\n\nD11 - MOSI\n\n\n\n\n\n\nD12 - MISO\n\n\n\n\nD13 - SCK\n\n\n\n\n\n\n\n\nD9 - RF433_NSS\n\n\n\n\n\n\nA0 - RF433_RESET\n\n\n\n\n\n\nD3 - RF433_IRQ\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA4 (SDA), A5 (SCL) - \"I2C\" \u63a5\u53e3(\u63a5\u53e3\u7684\u53e6\u5916\u4e24\u4e2a\u5f15\u811a - VCC \u548c GND \u7528\u4e8e\u4f20\u611f\u5668\u4f9b\u7535)\n\n\n\n\nA4 (SDA), A5 (SCL) - RTC DS1307 \u5e76\u884c\u63a5\u53e3\n\n\nA1 - \u6309\u94ae\n\n\nD6 - \u81ea\u5b9a\u4e49 LED (LED3)\n\n\n\n\nWireLess Gate Shield \u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u65e0\u7ebf\u6a21\u5f0f\n\n\n\u4e24\u4e2a\u6a21\u5757 RFM69HW \u548c nRF24l01 + \u901a\u8fc7 SPI \u603b\u7ebf\u8fde\u63a5\u3002\n\n\n\u9009\u62e9\u65e0\u7ebf\u6a21\u5757\u65f6\u8981\u9009\u62e9\u5408\u9002\u7684 CSN \u548c NSS \u5f15\u811a\u6765\u63a7\u5236\u4f7f\u80fd\u7aef\u3002\n\n\n\n\nCSN (D8) \u7528\u4e8e nRF24l01 +\n\n\nNSS (D9) \u7528\u4e8e RFM69HW\n\n\n\n\n\n\nWarning\n\n\n\n\n\u5982\u679c\u5df2\u5b89\u88c5\uff0c\u4f46\u8f6f\u4ef6\u4e0d\u6d89\u53ca RFM69HW\uff0c\u8bf7\u52a1\u5fc5\u5c06\u8be5\u6a21\u5757\u7684 NSS \u5f15\u811a\u7f6e\u4e8e\u9ad8\u7535\u5e73\u72b6\u6001\u3002\u5426\u5219\u5c06\u5e72\u6270 nRF24l01 + \u548c Ethernet Shield \u7684\u6b63\u5e38\u8fd0\u884c\u3002\n\n\n\u65e0\u7ebf\u6a21\u5757\u7684\u81ea\u52a8\u663e\u793a\n\n\n\u65e0\u7ebf\u6a21\u5757\u7684 LED \u6307\u793a\u706f\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n\n\n\nLED1 \"RF24\" \u7684\u8d1f\u6781\u8fde\u63a5\u5230\u6a21\u5757 nRF24l01 \u7684\u5f15\u811a \nCSN (D8)\n ,LED \u7684\u6b63\u6781\uff08\u901a\u8fc7\u9650\u6d41\u7535\u963b\uff09\u8fde\u63a5\u5230 \nSPI\n \u7684 \nSCK(D13)\n \u53e3\n\n\nLED2 \"RF433\" \u7684\u8d1f\u6781\u8fde\u63a5\u5230\u6a21\u5757 RFM69HW \u7684\u5f15\u811a \nNSS (D9)\n \uff0cLED \u7684\u6b63\u6781\uff08\u901a\u8fc7\u9650\u6d41\u7535\u963b\uff09\u8fde\u63a5\u5230 \nSPI\n \u7684 \nSCK(D13)\n \u53e3\n\n\n\n\n\u5f53\u65e0\u7ebf\u7535\u4f11\u7720\u65f6\uff0c\u5728\u9002\u5f53\u7684\u82af\u7247\u5f15\u811a\uff08CSN \u548c NSS\uff09\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u5f15\u811a SCK \u7684\u65f6\u949f\u5c31\u4e0d\u4f1a\u70b9\u4eae LED\u3002\n\n\n\u5982\u679c MK \u4e0e\u5176\u4ed6\u65e0\u7ebf\u7535\u6a21\u5757\u901a\u4fe1\uff0c\u4f1a\u9009\u62e9\u9002\u5f53\u7684\u5f15\u811a(CSN \u548c NSS)\u8bbe\u7f6e\u4e3a\u4f4e\u7535\u5e73\uff0c\u540c\u65f6\u5f15\u811a SCK \u4f1a\u53d1\u51fa\u8109\u51b2\u70b9\u4eae\u901a\u4fe1 LED \u3002\n\n\n\u56e0\u6b64\uff0c\u7528\u6237\u4e0d\u9700\u8981\u5728 MC \u4e0a\u505a\u4efb\u4f55\u7f16\u7a0b\u5de5\u4f5c\u6765\u793a\u610f\u6a21\u5757\u7684\u5de5\u4f5c\u72b6\u6001\u3002\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\u5982\u6709\u5fc5\u8981\uff0cSMD-LED \u53ef\u53d6\u4ee3\u666e\u901a\u8f93\u51fa\u7aef\u53e3\uff08\u4f8b\u5982\uff0c\u8fde\u63a5\u4e00\u4e2a\u663e\u793a\u5c4f\uff09\uff1a\n\n\n\n\n\u7535\u8def\u677f\u9760\u8fd1\u901a\u8baf LED \u7684\u5730\u65b9\u53ef\u4ee5\u710a\u63a5\u76f4\u63d2 LED\uff08\u6216\u8005\u4f7f\u7528\u8df3\u7ebf\uff09\n\n\n\u7535\u8def\u677f\u4e0a\u6709\u9650\u6d41\u7535\u963b\uff08\u4e0d\u9700\u8981\u7ed9 LED \u4e32\u8054\u9650\u6d41\u7535\u963b\uff09\n\n\n\u5728\u8bbe\u7f6e LED \u7684\u8f93\u51fa\u65f6\u5fc5\u987b\u4ece\u677f\u4e0a\u79fb\u9664 SMD-LED\n\n\n\n\n\u901a\u8fc7IR\u8fdb\u884c\u4fee\u6539\n\n\n\u81ea\u5b9a\u4e49 LED \u53ef\u4ee5\u88ab LED3 \u5f15\u811a IR LED \u53d6\u4ee3\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u6269\u5c55 WireLess Gate Shield \u7684\u4f7f\u7528\u8303\u56f4\uff08\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u65e0\u7ebf\u63a5\u53e3\u6216\u4f7f\u7528\u7ea2\u5916\u547d\u4ee4\u7684 LAN \u63a7\u5236\u8bbe\u5907\u53d1\u9001\u547d\u4ee4\uff09\u3002\n\n\n\u51fd\u6570\u5e93\n\n\n\u5fc5\u5907\u51fd\u6570\u5e93\n\n\n\u8981\u4f7f\u7528 WireLess Gate Shield\uff0c\u9700\u8981\u4ee5\u4e0b\u5e93\uff1a\n\n\n\n\n\n\n\u4f7f\u7528 nRF24L01 + - \nRF24\n\n\n\n\n\n\n\u4f7f\u7528 RFM69HW - \nRFM69\n\n\n\n\n\n\n\u5b9e\u65f6\u65f6\u949f (RTC) - \nRTClib\n\n\n\n\n\n\nIR-\u63a5\u6536\u7ba1 - \nIRremote\n\n\n\n\n\n\n\u6b64\u5916\uff0c\u5728\u4f7f\u7528 RF24 \u548c LCD \u663e\u793a\u5668\u65f6\u8fd8\u9700\u8981\u4f7f\u7528\u5e93\uff1a\n\n\n\n\nSPI\n\n\n\n\n.\u51fd\u6570\u5e93\u662f\u7406\u89e3\u8fd9\u4e9b\u63a5\u53e3\u5982\u4f55\u5de5\u4f5c\u7684\u6781\u4f73\u6559\u7a0b\u3002\n\n\n\u529f\u80fd\u51fd\u6570\u5e93\n\n\n**NRF24l01 + **\n\n\n\u521d\u59cb\u5316\u6a21\u5757 nRF24l01 + \u5982\u4e0b\uff1a\n\n\n//RF24 radio(CE,CSN);\nRF24 radio(7,8);\n\n\n\n\nRFM69HW\n\n\n\u5982\u679c\u4f7f\u7528\u6a21\u5757 RFM69HW \uff0c\u9700\u8981\u5bf9 RFM69.h \u505a\u5982\u4e0b\u66f4\u6539\uff1a\n\n\n\u5728\u6587\u4ef6\u5f00\u5934\u627e\u5230\u4e0b\u9762\u51e0\u884c\uff1a\n\n\n#define SPI_CS               SS // SS is the SPI slave select pin, for instance D10 on atmega328\n#define RF69_IRQ_PIN          2 // INT0 on AVRs should be connected to DIO0 (ex on Atmega328 it\ns D2)\n\n\n\n\n\u7136\u540e\u628a\u4e0a\u9762\u51e0\u884c\u66ff\u6362\u4e3a\uff1a\n\n\n//#define SPI_CS               SS // SS is the SPI slave select pin, for instance D10 on atmega328\n//#define RF69_IRQ_PIN          2 // INT0 on AVRs should be connected to DIO0 (ex on Atmega328 it\ns D2)\n#define SPI_CS               9 // SS is the SPI slave select pin, for WireLess Gate Shield - D9\n#define RF69_IRQ_PIN          3 // INT1 on AVRs should be connected to DIO0 (ex on Atmega328 it\ns D3)\n\n\n\n\n\u6b64\u5916\uff0c\u5728\u6587\u4ef6 RFM69.cpp \u4e2d\u627e\u5230\u4e0b\u9762\u4e00\u884c\uff1a\n\n\nvoid RFM69::isr0() { selfPointer-\ngt;interruptHandler(); }\n\n\n\n\n\u7136\u540e\u628a\u5b83\u66ff\u6362\u4e3a\uff1a\n\n\n//void RFM69::isr0() { selfPointer-\ngt;interruptHandler(); }\nvoid RFM69::isr1() { selfPointer-\ngt;interruptHandler(); }\n\n\n\n\n\u521d\u59cb\u5316\u6a21\u5757 RFM69HW \u5982\u4e0b\uff1a\n\n\n  resetRFM69();\n  radio.setCS(9); // NSS - D9\n  radio.initialize(FREQUENCY,NODEID,NETWORKID);\n\n\n\n\n\n\nNote\n\n\n\n\n\u4f7f\u7528\u5bc4\u5b58\u5668\u63a7\u5236 RFM69HW \u7684\u5de5\u4f5c\u6a21\u5f0f\u3002\u5982\u679c\u60f3\u4e86\u89e3\u66f4\u591a\u8bf7\u53c2\u8003\u6587\u4ef6 RFM69.cpp \u7684\u51fd\u6570 RFM69 :: initialize\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u76ee\u6807\u5bc4\u5b58\u5668 \uff0c\u8bf7\u9605\u8bfb RFM69registers.h\uff08\u4e5f\u5305\u542b\u5728\u5e93\u4e2d\uff09 \u548c\u6587\u6863 \nradio RFM69HW\n\u3002\n\n\n\u793a\u4f8b\n\n\nWireLess Gate Shield \u4e3b\u8981\u90e8\u4ef6\u793a\u4f8b\u4ee3\u7801\uff08\u4f7f\u7528 RTC, IR, RFM69HW, nRF24l01 +\uff09\n\n\n\n\n\u53d1\u9001\u4fe1\u606f\u5230\u53e6\u4e00\u4e2a RFM69HW \u5e76\u63a5\u6536\u54cd\u5e94( ping-pong \u673a\u5236)\u3002\n\n\nnRF24l01 + \u6536\u5230\u6d88\u606f\u540e\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\u3002\n\n\n\u901a\u8fc7\u7ea2\u5916\u63a5\u6536\u5668\u63a5\u6536\u547d\u4ee4\uff08\u8bc6\u522b\u7684\u547d\u4ee4\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\uff09\u5e76\u70b9\u4eae\u81ea\u5b9a\u4e49 LED\u3002\n\n\n\n\n\u6240\u6709\u7ed3\u679c\u90fd\u663e\u793a\u5728\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\n\n#include \nRFM69.h\n\n#include \nSPI.h\n\n#include \nRF24.h\n\n#include \nIRremote.h\n\n#include \nWire.h\n\n#include \nRTClib.h\n\n\nRF24 radio24(7,8);\n\nRTC_DS1307 RTC;\n\nint RECV_PIN = 5;\n\nIRrecv irrecv(RECV_PIN);\n\ndecode_results results;\n\n// create a framework for the transmission of values\ntypedef struct{\n    int SensorID;        // ID sensor\n    int CommandTo;       // command module number ...\n    int Command;         // command\n    // 0 - answer\n    // 1 - get the value\n    // 2 - set the value\n    int ParamID;         // parameter identifier\n    float ParamValue;    // value\n    boolean Status;      // status\n    // 0 - read-only (RO)\n    // 1 -  can change the (RW)\n    char Comment[16];    // comment\n}\nMessage;\n\nMessage sensor;\n\nconst uint64_t pipes[2] = {\n0xF0F0F0F0E1LL, 0xF0F0F0F0D2LL };\n\nvolatile boolean waitRF24 = false;\n\n#define NODEID      99\n#define NETWORKID   100\n#define GATEWAYID   1\n#define FREQUENCY   RF69_433MHZ //Match this with the version of your Moteino! (others: RF69_433MHZ, RF69_868MHZ)\n#define KEY         \nthisIsEncryptKey\n //has to be same 16 characters/bytes on all nodes, not more not less!\n#define LED         6\n#define SERIAL_BAUD 115200\n#define ACK_TIME    30  // # of ms to wait for an ack\n\n#define RFM69_RESET 14  //A0\n#define RFM69_NSS 9\n#define RFM69_DIO0 3\n\n#define BUTTON 15 // A1\n\n#define MOSI 11\n#define MISO 12\n#define SCK 13\n\nint TRANSMITPERIOD = 500; //transmit a packet to gateway so often (in ms)\nbyte sendSize=0;\nboolean requestACK = false;\nRFM69 radio;\n\nint delta=2000;\n\nunsigned long blinkStop;\nunsigned long timeReady;\n\ntypedef struct {\n    int           nodeId; //store this nodeId\n    unsigned long uptime; //uptime in ms\n    float         temp;   //temperature maybe?\n}\nPayload;\nPayload theData;\n\nvoid setup() {\n    Serial.begin(SERIAL_BAUD);\n\n    pinMode(LED, OUTPUT);\n\n    pinMode(RFM69_NSS, OUTPUT);\n    pinMode(7, OUTPUT);\n    pinMode(8, OUTPUT);\n    pinMode(MOSI, OUTPUT);\n    pinMode(MISO, INPUT);\n    pinMode(SCK, OUTPUT);\n\n    pinMode(RFM69_RESET, OUTPUT);\n    pinMode(RFM69_DIO0, INPUT);\n\n    pinMode(BUTTON, INPUT);\n\n    digitalWrite(RFM69_NSS, HIGH);\n    digitalWrite(7, HIGH);\n\n    resetRFM69();\n    radio.setCS(RFM69_NSS);\n    radio.initialize(FREQUENCY,NODEID,NETWORKID);\n\n    //radio.setHighPower(); //uncomment only for RFM69HW!\n\n    radio.encrypt(KEY);\n    char buff[50];\n    sprintf(buff, \n\\nTransmitting at %d Mhz...\n, FREQUENCY==RF69_433MHZ ? 433 : FREQUENCY==RF69_868MHZ ? 868 : 915);\n    Serial.println(buff);\n\n    radio24.begin();\n    // optionally, increase the delay between retries \n # of retries\n    radio24.setRetries(15,15);\n    radio24.setChannel(119);\n    // \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0421\u041b\u0423\u0428\u0410\u0415\u041c\n    radio24.openWritingPipe(pipes[1]);\n    radio24.openReadingPipe(1,pipes[0]);\n    radio24.startListening();\n\n    delay(20);\n\n    attachInterrupt(0, isr_RF24, FALLING);\n\n    irrecv.enableIRIn();\n\n    Wire.begin();\n    RTC.begin();\n\n    if (! RTC.isrunning()) {\n        Serial.println(\nRTC is NOT running!\n);\n        // following line sets the RTC to the date \n time this sketch was compiled\n        RTC.adjust(DateTime(__DATE__, __TIME__));\n    }\n}\n\nlong lastPeriod = -1;\nvoid loop() {\n\n    //check for any received packets\n    if (radio.receiveDone())\n    {\n        Serial.print(\n[\n);\n        Serial.print(radio.SENDERID, DEC);\n        Serial.print(\n] \n);\n        for (byte i = 0; i \n radio.DATALEN; i++)\n        Serial.print((char)radio.DATA[i]);\n        Serial.print(\n   [RX_RSSI:\n);\n        Serial.print(radio.readRSSI());\n        Serial.print(\n]\n);\n\n        if (radio.ACK_REQUESTED)\n        {\n            radio.sendACK();\n            Serial.print(\n - ACK sent\n);\n            delay(10);\n        }\n        Serial.println();\n    }\n\n    int currPeriod = millis()/TRANSMITPERIOD;\n    if (currPeriod != lastPeriod)\n    {\n        //fill in the struct with new values\n        theData.nodeId = NODEID;\n        theData.uptime = millis();\n        theData.temp = radio.readTemperature();//91.23; //it\ns hot!\n\n        Serial.print(\nSending struct (\n);\n        Serial.print(sizeof(theData));\n        Serial.print(\n bytes) ... \n);\n        if (radio.sendWithRetry(GATEWAYID, (const void*)(\ntheData), sizeof(theData)))\n        Serial.print(\n ok!\n);\n        else Serial.print(\n nothing...\n);\n        Serial.println();\n        lastPeriod=currPeriod;\n    }\n\n    listenRF24();\n\n    if (irrecv.decode(\nresults)) {\n        Serial.println(results.value, HEX);\n        irrecv.resume(); // Receive the next value\n        blinkStop=millis()+100;\n        digitalWrite(LED, HIGH);\n    }\n\n    if (digitalRead(BUTTON)==LOW) {\n        blinkStop=millis()+1000;\n        digitalWrite(LED, HIGH);\n    }\n\n    if (millis()\nblinkStop) {\n        digitalWrite(LED, LOW);\n    }\n\n    if(millis()\ntimeReady){\n        timeReady=millis()+2000;\n        DateTime now = RTC.now();\n\n        Serial.print(now.year(), DEC);\n        Serial.print(\n/\n);\n        Serial.print(now.month(), DEC);\n        Serial.print(\n/\n);\n        Serial.print(now.day(), DEC);\n        Serial.print(\n \n);\n        Serial.print(now.hour(), DEC);\n        Serial.print(\n:\n);\n        Serial.print(now.minute(), DEC);\n        Serial.print(\n:\n);\n        Serial.print(now.second(), DEC);\n        Serial.println();\n    }\n}\n\nvoid Blink(byte PIN, int DELAY_MS)\n{\n    pinMode(PIN, OUTPUT);\n    digitalWrite(PIN,HIGH);\n    delay(DELAY_MS);\n    digitalWrite(PIN,LOW);\n}\n\nvoid resetRFM69(){\n    digitalWrite(RFM69_RESET, HIGH);\n    delay(1);\n    digitalWrite(RFM69_RESET, LOW);\n    delay(10);\n}\n\nvoid isr_RF24(){\n    waitRF24 = true;\n}\n\nvoid listenRF24() {\n    if (waitRF24) {\n        waitRF24 = false;\n        if ( radio24.available() )\n        {\n            bool done = false;\n            while (!done)\n            {\n                done = radio24.read( \nsensor, sizeof(sensor) );\n                if(sensor.Command == 0) {\n                    Serial.print(sensor.SensorID);\n                    Serial.print(\n  \n);\n                    Serial.print(sensor.ParamID);\n                    Serial.print(\n  \n);\n                    Serial.print(sensor.ParamValue);\n                    Serial.print(\n \n);\n                    Serial.println(sensor.Comment);\n                }\n            }\n        }\n    }\n}\n\n\n\n\u4ee3\u7801 \"receiver\" \uff08\u5728\u9762\u5305\u677f\u4e0a\u4f7f\u7528 Arduino Nano \u548c RFM69HW \u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5\uff09\n\n\n\n\n\u91c7\u7528 RFM69HW \u7ed3\u6784\n\n\n\u91c7\u7528\u8ba4\u8bc1\u673a\u5236\n\n\n\u8f93\u51fa\u6709\u5173\u6a21\u5757 RFM69HW\uff08\u5bc4\u5b58\u5668\u7b49\uff09\u7684\u5176\u4ed6\u4fe1\u606f\n\n\n\n\n#include \nRFM69.h\n\n#include \nSPI.h\n\n\n#define NODEID      1\n#define NETWORKID   100\n#define FREQUENCY   RF69_433MHZ //Match this with the version of your Moteino! (others: RF69_433MHZ, RF69_868MHZ)\n#define KEY         \nthisIsEncryptKey\n //has to be same 16 characters/bytes on all nodes, not more not less!\n#define LED         6\n#define SERIAL_BAUD 115200\n#define ACK_TIME    30  // # of ms to wait for an ack\n\n#define RFM69_RESET 14\n\nRFM69 radio;\nbool promiscuousMode = false; //set to \ntrue\n to sniff all packets on the same network\n\ntypedef struct {\n    int           nodeId; //store this nodeId\n    unsigned long uptime; //uptime in ms\n    float         temp;   //temperature maybe?\n} Payload;\nPayload theData;\n\nvoid setup() {\n    Serial.begin(SERIAL_BAUD);\n    pinMode(RFM69_RESET, OUTPUT);\n    pinMode(3, INPUT);\n    resetRFM69();\n    radio.setCS(9);\n    //delay(10);\n    radio.initialize(FREQUENCY,NODEID,NETWORKID);\n\n    //radio.setHighPower(); //uncomment only for RFM69HW!\n\n    radio.encrypt(KEY);\n    radio.promiscuous(promiscuousMode);\n    char buff[50];\n    sprintf(buff, \n\\nListening at %d Mhz...\n, FREQUENCY==RF69_433MHZ ? 433 : FREQUENCY==RF69_868MHZ ? 868 : 915);\n    Serial.println(buff);\n}\n\nbyte ackCount=0;\nvoid loop() {\n    //process any serial input\n    if (Serial.available() \n 0)\n    {\n        char input = Serial.read();\n        if (input == \nr\n) //d=dump all register values\n        radio.readAllRegs();\n        if (input == \nE\n) //E=enable encryption\n        radio.encrypt(KEY);\n        if (input == \ne\n) //e=disable encryption\n        radio.encrypt(null);\n        if (input == \np\n)\n        {\n            promiscuousMode = !promiscuousMode;\n            radio.promiscuous(promiscuousMode);\n            Serial.print(\nPromiscuous mode \n);Serial.println(promiscuousMode ? \non\n : \noff\n);\n        }\n\n        if (input == \nd\n) //d=dump flash area\n        {\n            Serial.println(\nFlash content:\n);\n            int counter = 0;\n\n            while(counter\n=256){\n                //Serial.print(flash.readByte(counter++), HEX);\n                Serial.print(\n.\n);\n            }\n            //while(flash.busy());\n            Serial.println();\n        }\n        if (input == \nD\n)\n        {\n            Serial.print(\nDeleting Flash chip content... \n);\n            //flash.chipErase();\n            //while(flash.busy());\n            Serial.println(\nDONE\n);\n        }\n        if (input == \ni\n)\n        {\n            Serial.print(\nDeviceID: \n);\n            //word jedecid = flash.readDeviceId();\n            //Serial.println(jedecid, HEX);\n        }\n    }\n\n    if (radio.receiveDone())\n    {\n        Serial.print(\n[\n);Serial.print(radio.SENDERID, DEC);Serial.print(\n] \n);\n        Serial.print(\n [RX_RSSI:\n);Serial.print(radio.readRSSI());Serial.print(\n]\n);\n        if (promiscuousMode)\n        {\n            Serial.print(\nto [\n);Serial.print(radio.TARGETID, DEC);Serial.print(\n] \n);\n        }\n\n        if (radio.DATALEN != sizeof(Payload))\n        Serial.print(\nInvalid payload received, not matching Payload struct!\n);\n        else\n        {\n            theData = *(Payload*)radio.DATA; //assume radio.DATA actually contains our struct and not something else\n            Serial.print(\n nodeId=\n);\n            Serial.print(theData.nodeId);\n            Serial.print(\n uptime=\n);\n            Serial.print(theData.uptime);\n            Serial.print(\n temp=\n);\n            Serial.print(theData.temp);\n        }\n\n        if (radio.ACK_REQUESTED)\n        {\n            byte theNodeID = radio.SENDERID;\n            radio.sendACK();\n            Serial.print(\n - ACK sent.\n);\n\n            // When a node requests an ACK, respond to the ACK\n            // and also send a packet requesting an ACK (every 3rd one only)\n            // This way both TX/RX NODE functions are tested on 1 end at the GATEWAY\n            if (ackCount++%3==0)\n            {\n                Serial.print(\n Pinging node \n);\n                Serial.print(theNodeID);\n                Serial.print(\n - ACK...\n);\n                delay(3); //need this when sending right after reception .. ?\n                if (radio.sendWithRetry(theNodeID, \nACK TEST\n, 8, 0))  // 0 = only 1 attempt, no retries\n                Serial.print(\nok!\n);\n                else Serial.print(\nnothing\n);\n            }\n        }\n        Serial.println();\n        Blink(LED,3);\n    }\n}\n\nvoid Blink(byte PIN, int DELAY_MS)\n{\n    pinMode(PIN, OUTPUT);\n    digitalWrite(PIN,HIGH);\n    delay(DELAY_MS);\n    digitalWrite(PIN,LOW);\n}\n\nvoid resetRFM69(){\n    digitalWrite(RFM69_RESET, HIGH);\n    delay(1);\n    digitalWrite(RFM69_RESET, LOW);\n    delay(10);\n}\n\n\n\n\n\u4ea7\u54c1\u7248\u672c\n\n\n\n\n\n\n **\u7248\u6b21**\n\n\n\n **\u63cf\u8ff0**\n\n\n\n **\u53d1\u884c\u65e5\u671f**\n\n\n\n\n\n 0.9\n\n\n\n \u539f\u578b\n\n\n\n 05.05.2014\n\n\n\n\n\n 1.0\n\n\n\n \u516c\u5f00\u7248\u672c\n\n\n\n 05.07.2014\n\n\n\n\n\u5e94\u7528\n\n\n\n\n\u666e\u901a\u65e0\u7ebf\u7f51\u5173 RF2.4 GHz (nRF24l01 +), RF433 MHz (RFM69HW), IR \u548c LAN (\u4f7f\u7528 Ethernet Shield)\n\n\n\u8bb0\u5f55\u7cfb\u7edf\u547d\u4ee4\u548c\u6570\u636e\u65e0\u7ebf\u8bbe\u5907\u7684\u65f6\u95f4 (\u4f7f\u7528 Ethernet Shield)\n\n\n\u5728\u67d0\u4e9b\u65f6\u95f4\u53d1\u51fa\u65e0\u7ebf\u547d\u4ee4\u6765\u63a7\u5236\u8bbe\u5907 (\u4f8b\u5982\uff0c\u201c\u5728 2014 \u5e74 8 \u6708 23 \u65e5\u5f00\u706f\u201d\u6216\u8005\u201c\u6bcf\u5929 5 \u70b9\u81ea\u52a8\u6d47\u6c34\u201d)\n\n\n\n\nFAQ\n\n\n\n\n\n\n\u535a\u5ba2 \nWireLess Gate Shield\n RU\n\n\n\n\n\n\n\u6709\u7591\u95ee\u8bf7\u53d1\u90ae\u4ef6\u5230 \n\n\n\n\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\u8bf7\u5206\u533a\u57df\u9009\u62e9\u8d2d\u4e70\u65b9\u5f0f\uff1a\n\n\n\u4e2d\u56fd (\u5168\u7403\u822a\u8fd0)\n\n\nElecrow store\n\n\nSeeed store\n\n\n\u4fc4\u7f57\u65af\n\n\nDevicter store\n\n\n\u4e86\u89e3\u66f4\u591a\n\n\n\n\n\n\n[PDF \u6587\u4ef6]\nDescription RFM69HW\n\n\n\n\n\n\n[PDF \u6587\u4ef6]\nDescription nRF24l01+\n\n\n\n\n\n\n[PNG \u6587\u4ef6]\nschematic of the device", 
            "title": "WireLess Gate Shield V1.0"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_1", 
            "text": "\u63a5\u53e3\u53ef\u5b89\u88c5 315/433/868/915 MHz \u7684  RFM69HW \uff08\u53d6\u51b3\u4e8e\u4e0d\u540c\u7248\u672c\uff09  \u63a5\u53e3\u53ef\u5b89\u88c5 2.4 GHz \u7684  nRF24L01 +  \u7ea2\u5916\u63a5\u6536\u5668  \u57fa\u4e8e DS1307 \u7684\u7535\u6c60\u4f9b\u7535\u7684\u5b9e\u65f6\u65f6\u949f\u6a21\u5757  \u65e0\u7ebf\u7535\u6a21\u5757 LED \u6d3b\u52a8\u6307\u793a\u706f  \u7528\u6237\u9884\u7559 LED  \u65f6\u949f\u91c7\u7528\u6309\u952e\u63a7\u5236  \u517c\u5bb9  GROVE  \u63a5\u53e3: I2C  \u4e0e  Ethernet Shield  \u5b8c\u5168\u517c\u5bb9", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_2", 
            "text": "WireLess Gate Shield \u7684\u5de6\u4fa7\u662f\u65e0\u7ebf\u6a21\u5757\u7684\u63a5\u53e3\uff1a   nRF24l01 + \uff0c\u5305\u62ec\u589e\u5f3a (\"PA\") \u7248\u672c (\u4e0a\u90e8)  RFM69HW (\u4e0b\u90e8)\u3002   \u65e0\u7ebf\u6a21\u5757\u4e4b\u95f4\u662f\u7528\u4e8e RFM69HW \u5916\u90e8\u5929\u7ebf\u7684 U.FL \u8fde\u63a5\u5668\u3002\u5982\u679c\u60a8\u6253\u7b97\u4f7f\u7528\u5e38\u89c4\u5929\u7ebf\uff08\u9700\u8981\u4e00\u5b9a\u957f\u5ea6\u7684\u5bfc\u7ebf\uff09 - \u53ef\u4ee5\u76f4\u63a5\u710a\u63a5\u5230 Schild \u4e0a\uff08\u9760\u8fd1\u8fde\u63a5\u5668 U.FL\uff09\u3002  \u5728\u6a21\u5757\u7684\u53f3\u4e0a\u65b9\u662f RFM69HW LED LED1 \"RF433\"  \u5728\u7535\u8def\u677f\u7684\u4e2d\u592e\u90e8\u5206\u6709\u4e00\u4e2a\u7528\u4e8e\u65f6\u949f\u6a21\u5757 DS1307 \u4f9b\u7535\u7535\u6c60\u7684\u63d2\u69fd  \u7535\u6c60\u69fd\u53f3\u4e0b\u65b9\u7684\u662f I2C \u8fde\u63a5\u5668  \u53f3\u8fb9\u662f\uff08\u81ea\u4e0a\u800c\u4e0b\uff09\uff1a   LED LED2 \"RF24\"  \u7ea2\u5916\u63a5\u6536\u5668  LED LED3 - \u7528\u6237\u9884\u7559  \u65f6\u949f\u6309\u94ae S1", 
            "title": "\u7535\u8def\u56fe\u548c\u5e03\u5c40"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_3", 
            "text": "\u5728\u57fa\u672c\u7248\u672c\u4e2d\uff08\u4e0d\u4f7f\u7528 Ethernet Shield \uff09\u53ef\u4ee5\u5728\u65e0\u7ebf\u7535\u548c\u7ea2\u5916\u63a5\u6536\u5668\u4e4b\u95f4\u8bbe\u7f6e\u4e00\u4e2a\u65e0\u7ebf\u7f51\u5173\u3002  \u547d\u4ee4\uff08\u6216\u6570\u636e\uff09\u53ef\u4ee5\u6839\u636e\u7528\u6237\u7a0b\u5e8f\u7684\u903b\u8f91\u901a\u8fc7\u6240\u6709\u4e09\u4e2a\u65e0\u7ebf\u63a5\u53e3\u8fdb\u884c\u5e7f\u64ad\u3002  \u5b9e\u65f6\u65f6\u949f\u6a21\u5757\u7684\u7528\u9014\u5728\u4e8e\u53ef\u4ee5\u628a\u53c2\u8003\u65e5\u671f/\u65f6\u95f4\u4e0e\u4efb\u4f55\u6570\u636e/\u547d\u4ee4\u4e00\u8d77\u53d1\u9001\u51fa\u53bb\u3002  \u8bbe\u5907\u7ba1\u7406\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u677f\u4e0a\u7684\u6309\u94ae\u8fdb\u884c\u8c03\u6574\u3002", 
            "title": "\u57fa\u672c\u529f\u80fd"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_4", 
            "text": "\u6b64\u5916\uff0cWireLess Gate Shield \u53ef\u4ee5\u4f7f\u7528Grove \u63a5\u53e3\u8fde\u63a5\u4efb\u4f55 I2C \u8bbe\u5907\uff08\u4f20\u611f\u5668\uff0c\u663e\u793a\u5668\u7b49\uff09\u3002  WireLess Gate Shield \u88ab\u8bbe\u8ba1\u4e3a\u4e0e  Ethernet Shield  \u5b8c\u5168\u517c\u5bb9\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4e00\u8d77\u4f7f\u7528\u4e24\u5757\u677f\u5b50\u521b\u9020\u4e00\u4e9b\u66f4\u5148\u8fdb\u7684\u65e0\u7ebf\u901a\u8baf\u88c5\u7f6e\uff08\u5728 SD \u5361\u4e2d\u5b58\u50a8\uff0c\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u6570\u636e\uff0c\u901a\u8fc7\u7f51\u7edc\u7ba1\u7406\u65e0\u7ebf\u8bbe\u5907\uff09\u3002", 
            "title": "\u5176\u4ed6\u7528\u9014"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_5", 
            "text": "RF \u6a21\u5757 nRF24L01 + \u7684\u63a5\u53e3\uff1a    D11 - MOSI    D12 - MISO   D13 - SCK     D7 - RF24_CE    D8 - RF24_CSN    D2 - RF24_IRQ        RF-module RFM69HW \u7684\u63a5\u53e3\uff1a    D11 - MOSI    D12 - MISO   D13 - SCK     D9 - RF433_NSS    A0 - RF433_RESET    D3 - RF433_IRQ        A4 (SDA), A5 (SCL) - \"I2C\" \u63a5\u53e3(\u63a5\u53e3\u7684\u53e6\u5916\u4e24\u4e2a\u5f15\u811a - VCC \u548c GND \u7528\u4e8e\u4f20\u611f\u5668\u4f9b\u7535)   A4 (SDA), A5 (SCL) - RTC DS1307 \u5e76\u884c\u63a5\u53e3  A1 - \u6309\u94ae  D6 - \u81ea\u5b9a\u4e49 LED (LED3)", 
            "title": "\u63a5\u53e3"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#wireless-gate-shield", 
            "text": "", 
            "title": "WireLess Gate Shield \u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_6", 
            "text": "\u4e24\u4e2a\u6a21\u5757 RFM69HW \u548c nRF24l01 + \u901a\u8fc7 SPI \u603b\u7ebf\u8fde\u63a5\u3002  \u9009\u62e9\u65e0\u7ebf\u6a21\u5757\u65f6\u8981\u9009\u62e9\u5408\u9002\u7684 CSN \u548c NSS \u5f15\u811a\u6765\u63a7\u5236\u4f7f\u80fd\u7aef\u3002   CSN (D8) \u7528\u4e8e nRF24l01 +  NSS (D9) \u7528\u4e8e RFM69HW    Warning   \u5982\u679c\u5df2\u5b89\u88c5\uff0c\u4f46\u8f6f\u4ef6\u4e0d\u6d89\u53ca RFM69HW\uff0c\u8bf7\u52a1\u5fc5\u5c06\u8be5\u6a21\u5757\u7684 NSS \u5f15\u811a\u7f6e\u4e8e\u9ad8\u7535\u5e73\u72b6\u6001\u3002\u5426\u5219\u5c06\u5e72\u6270 nRF24l01 + \u548c Ethernet Shield \u7684\u6b63\u5e38\u8fd0\u884c\u3002", 
            "title": "\u65e0\u7ebf\u6a21\u5f0f"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_7", 
            "text": "\u65e0\u7ebf\u6a21\u5757\u7684 LED \u6307\u793a\u706f\u64cd\u4f5c\u5982\u4e0b\uff1a   LED1 \"RF24\" \u7684\u8d1f\u6781\u8fde\u63a5\u5230\u6a21\u5757 nRF24l01 \u7684\u5f15\u811a  CSN (D8)  ,LED \u7684\u6b63\u6781\uff08\u901a\u8fc7\u9650\u6d41\u7535\u963b\uff09\u8fde\u63a5\u5230  SPI  \u7684  SCK(D13)  \u53e3  LED2 \"RF433\" \u7684\u8d1f\u6781\u8fde\u63a5\u5230\u6a21\u5757 RFM69HW \u7684\u5f15\u811a  NSS (D9)  \uff0cLED \u7684\u6b63\u6781\uff08\u901a\u8fc7\u9650\u6d41\u7535\u963b\uff09\u8fde\u63a5\u5230  SPI  \u7684  SCK(D13)  \u53e3   \u5f53\u65e0\u7ebf\u7535\u4f11\u7720\u65f6\uff0c\u5728\u9002\u5f53\u7684\u82af\u7247\u5f15\u811a\uff08CSN \u548c NSS\uff09\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u5f15\u811a SCK \u7684\u65f6\u949f\u5c31\u4e0d\u4f1a\u70b9\u4eae LED\u3002  \u5982\u679c MK \u4e0e\u5176\u4ed6\u65e0\u7ebf\u7535\u6a21\u5757\u901a\u4fe1\uff0c\u4f1a\u9009\u62e9\u9002\u5f53\u7684\u5f15\u811a(CSN \u548c NSS)\u8bbe\u7f6e\u4e3a\u4f4e\u7535\u5e73\uff0c\u540c\u65f6\u5f15\u811a SCK \u4f1a\u53d1\u51fa\u8109\u51b2\u70b9\u4eae\u901a\u4fe1 LED \u3002  \u56e0\u6b64\uff0c\u7528\u6237\u4e0d\u9700\u8981\u5728 MC \u4e0a\u505a\u4efb\u4f55\u7f16\u7a0b\u5de5\u4f5c\u6765\u793a\u610f\u6a21\u5757\u7684\u5de5\u4f5c\u72b6\u6001\u3002", 
            "title": "\u65e0\u7ebf\u6a21\u5757\u7684\u81ea\u52a8\u663e\u793a"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_8", 
            "text": "\u5982\u6709\u5fc5\u8981\uff0cSMD-LED \u53ef\u53d6\u4ee3\u666e\u901a\u8f93\u51fa\u7aef\u53e3\uff08\u4f8b\u5982\uff0c\u8fde\u63a5\u4e00\u4e2a\u663e\u793a\u5c4f\uff09\uff1a   \u7535\u8def\u677f\u9760\u8fd1\u901a\u8baf LED \u7684\u5730\u65b9\u53ef\u4ee5\u710a\u63a5\u76f4\u63d2 LED\uff08\u6216\u8005\u4f7f\u7528\u8df3\u7ebf\uff09  \u7535\u8def\u677f\u4e0a\u6709\u9650\u6d41\u7535\u963b\uff08\u4e0d\u9700\u8981\u7ed9 LED \u4e32\u8054\u9650\u6d41\u7535\u963b\uff09  \u5728\u8bbe\u7f6e LED \u7684\u8f93\u51fa\u65f6\u5fc5\u987b\u4ece\u677f\u4e0a\u79fb\u9664 SMD-LED", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#ir", 
            "text": "\u81ea\u5b9a\u4e49 LED \u53ef\u4ee5\u88ab LED3 \u5f15\u811a IR LED \u53d6\u4ee3\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u6269\u5c55 WireLess Gate Shield \u7684\u4f7f\u7528\u8303\u56f4\uff08\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u65e0\u7ebf\u63a5\u53e3\u6216\u4f7f\u7528\u7ea2\u5916\u547d\u4ee4\u7684 LAN \u63a7\u5236\u8bbe\u5907\u53d1\u9001\u547d\u4ee4\uff09\u3002", 
            "title": "\u901a\u8fc7IR\u8fdb\u884c\u4fee\u6539"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_9", 
            "text": "", 
            "title": "\u51fd\u6570\u5e93"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_10", 
            "text": "\u8981\u4f7f\u7528 WireLess Gate Shield\uff0c\u9700\u8981\u4ee5\u4e0b\u5e93\uff1a    \u4f7f\u7528 nRF24L01 + -  RF24    \u4f7f\u7528 RFM69HW -  RFM69    \u5b9e\u65f6\u65f6\u949f (RTC) -  RTClib    IR-\u63a5\u6536\u7ba1 -  IRremote    \u6b64\u5916\uff0c\u5728\u4f7f\u7528 RF24 \u548c LCD \u663e\u793a\u5668\u65f6\u8fd8\u9700\u8981\u4f7f\u7528\u5e93\uff1a   SPI   .\u51fd\u6570\u5e93\u662f\u7406\u89e3\u8fd9\u4e9b\u63a5\u53e3\u5982\u4f55\u5de5\u4f5c\u7684\u6781\u4f73\u6559\u7a0b\u3002", 
            "title": "\u5fc5\u5907\u51fd\u6570\u5e93"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_11", 
            "text": "**NRF24l01 + **  \u521d\u59cb\u5316\u6a21\u5757 nRF24l01 + \u5982\u4e0b\uff1a  //RF24 radio(CE,CSN);\nRF24 radio(7,8);  RFM69HW  \u5982\u679c\u4f7f\u7528\u6a21\u5757 RFM69HW \uff0c\u9700\u8981\u5bf9 RFM69.h \u505a\u5982\u4e0b\u66f4\u6539\uff1a  \u5728\u6587\u4ef6\u5f00\u5934\u627e\u5230\u4e0b\u9762\u51e0\u884c\uff1a  #define SPI_CS               SS // SS is the SPI slave select pin, for instance D10 on atmega328\n#define RF69_IRQ_PIN          2 // INT0 on AVRs should be connected to DIO0 (ex on Atmega328 it s D2)  \u7136\u540e\u628a\u4e0a\u9762\u51e0\u884c\u66ff\u6362\u4e3a\uff1a  //#define SPI_CS               SS // SS is the SPI slave select pin, for instance D10 on atmega328\n//#define RF69_IRQ_PIN          2 // INT0 on AVRs should be connected to DIO0 (ex on Atmega328 it s D2)\n#define SPI_CS               9 // SS is the SPI slave select pin, for WireLess Gate Shield - D9\n#define RF69_IRQ_PIN          3 // INT1 on AVRs should be connected to DIO0 (ex on Atmega328 it s D3)  \u6b64\u5916\uff0c\u5728\u6587\u4ef6 RFM69.cpp \u4e2d\u627e\u5230\u4e0b\u9762\u4e00\u884c\uff1a  void RFM69::isr0() { selfPointer- gt;interruptHandler(); }  \u7136\u540e\u628a\u5b83\u66ff\u6362\u4e3a\uff1a  //void RFM69::isr0() { selfPointer- gt;interruptHandler(); }\nvoid RFM69::isr1() { selfPointer- gt;interruptHandler(); }  \u521d\u59cb\u5316\u6a21\u5757 RFM69HW \u5982\u4e0b\uff1a    resetRFM69();\n  radio.setCS(9); // NSS - D9\n  radio.initialize(FREQUENCY,NODEID,NETWORKID);   Note   \u4f7f\u7528\u5bc4\u5b58\u5668\u63a7\u5236 RFM69HW \u7684\u5de5\u4f5c\u6a21\u5f0f\u3002\u5982\u679c\u60f3\u4e86\u89e3\u66f4\u591a\u8bf7\u53c2\u8003\u6587\u4ef6 RFM69.cpp \u7684\u51fd\u6570 RFM69 :: initialize\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u76ee\u6807\u5bc4\u5b58\u5668 \uff0c\u8bf7\u9605\u8bfb RFM69registers.h\uff08\u4e5f\u5305\u542b\u5728\u5e93\u4e2d\uff09 \u548c\u6587\u6863  radio RFM69HW \u3002", 
            "title": "\u529f\u80fd\u51fd\u6570\u5e93"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_12", 
            "text": "", 
            "title": "\u793a\u4f8b"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#wireless-gate-shield-rtc-ir-rfm69hw-nrf24l01", 
            "text": "\u53d1\u9001\u4fe1\u606f\u5230\u53e6\u4e00\u4e2a RFM69HW \u5e76\u63a5\u6536\u54cd\u5e94( ping-pong \u673a\u5236)\u3002  nRF24l01 + \u6536\u5230\u6d88\u606f\u540e\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\u3002  \u901a\u8fc7\u7ea2\u5916\u63a5\u6536\u5668\u63a5\u6536\u547d\u4ee4\uff08\u8bc6\u522b\u7684\u547d\u4ee4\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\uff09\u5e76\u70b9\u4eae\u81ea\u5b9a\u4e49 LED\u3002   \u6240\u6709\u7ed3\u679c\u90fd\u663e\u793a\u5728\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d #include  RFM69.h \n#include  SPI.h \n#include  RF24.h \n#include  IRremote.h \n#include  Wire.h \n#include  RTClib.h \n\nRF24 radio24(7,8);\n\nRTC_DS1307 RTC;\n\nint RECV_PIN = 5;\n\nIRrecv irrecv(RECV_PIN);\n\ndecode_results results;\n\n// create a framework for the transmission of values\ntypedef struct{\n    int SensorID;        // ID sensor\n    int CommandTo;       // command module number ...\n    int Command;         // command\n    // 0 - answer\n    // 1 - get the value\n    // 2 - set the value\n    int ParamID;         // parameter identifier\n    float ParamValue;    // value\n    boolean Status;      // status\n    // 0 - read-only (RO)\n    // 1 -  can change the (RW)\n    char Comment[16];    // comment\n}\nMessage;\n\nMessage sensor;\n\nconst uint64_t pipes[2] = {\n0xF0F0F0F0E1LL, 0xF0F0F0F0D2LL };\n\nvolatile boolean waitRF24 = false;\n\n#define NODEID      99\n#define NETWORKID   100\n#define GATEWAYID   1\n#define FREQUENCY   RF69_433MHZ //Match this with the version of your Moteino! (others: RF69_433MHZ, RF69_868MHZ)\n#define KEY          thisIsEncryptKey  //has to be same 16 characters/bytes on all nodes, not more not less!\n#define LED         6\n#define SERIAL_BAUD 115200\n#define ACK_TIME    30  // # of ms to wait for an ack\n\n#define RFM69_RESET 14  //A0\n#define RFM69_NSS 9\n#define RFM69_DIO0 3\n\n#define BUTTON 15 // A1\n\n#define MOSI 11\n#define MISO 12\n#define SCK 13\n\nint TRANSMITPERIOD = 500; //transmit a packet to gateway so often (in ms)\nbyte sendSize=0;\nboolean requestACK = false;\nRFM69 radio;\n\nint delta=2000;\n\nunsigned long blinkStop;\nunsigned long timeReady;\n\ntypedef struct {\n    int           nodeId; //store this nodeId\n    unsigned long uptime; //uptime in ms\n    float         temp;   //temperature maybe?\n}\nPayload;\nPayload theData;\n\nvoid setup() {\n    Serial.begin(SERIAL_BAUD);\n\n    pinMode(LED, OUTPUT);\n\n    pinMode(RFM69_NSS, OUTPUT);\n    pinMode(7, OUTPUT);\n    pinMode(8, OUTPUT);\n    pinMode(MOSI, OUTPUT);\n    pinMode(MISO, INPUT);\n    pinMode(SCK, OUTPUT);\n\n    pinMode(RFM69_RESET, OUTPUT);\n    pinMode(RFM69_DIO0, INPUT);\n\n    pinMode(BUTTON, INPUT);\n\n    digitalWrite(RFM69_NSS, HIGH);\n    digitalWrite(7, HIGH);\n\n    resetRFM69();\n    radio.setCS(RFM69_NSS);\n    radio.initialize(FREQUENCY,NODEID,NETWORKID);\n\n    //radio.setHighPower(); //uncomment only for RFM69HW!\n\n    radio.encrypt(KEY);\n    char buff[50];\n    sprintf(buff,  \\nTransmitting at %d Mhz... , FREQUENCY==RF69_433MHZ ? 433 : FREQUENCY==RF69_868MHZ ? 868 : 915);\n    Serial.println(buff);\n\n    radio24.begin();\n    // optionally, increase the delay between retries   # of retries\n    radio24.setRetries(15,15);\n    radio24.setChannel(119);\n    // \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0421\u041b\u0423\u0428\u0410\u0415\u041c\n    radio24.openWritingPipe(pipes[1]);\n    radio24.openReadingPipe(1,pipes[0]);\n    radio24.startListening();\n\n    delay(20);\n\n    attachInterrupt(0, isr_RF24, FALLING);\n\n    irrecv.enableIRIn();\n\n    Wire.begin();\n    RTC.begin();\n\n    if (! RTC.isrunning()) {\n        Serial.println( RTC is NOT running! );\n        // following line sets the RTC to the date   time this sketch was compiled\n        RTC.adjust(DateTime(__DATE__, __TIME__));\n    }\n}\n\nlong lastPeriod = -1;\nvoid loop() {\n\n    //check for any received packets\n    if (radio.receiveDone())\n    {\n        Serial.print( [ );\n        Serial.print(radio.SENDERID, DEC);\n        Serial.print( ]  );\n        for (byte i = 0; i   radio.DATALEN; i++)\n        Serial.print((char)radio.DATA[i]);\n        Serial.print(    [RX_RSSI: );\n        Serial.print(radio.readRSSI());\n        Serial.print( ] );\n\n        if (radio.ACK_REQUESTED)\n        {\n            radio.sendACK();\n            Serial.print(  - ACK sent );\n            delay(10);\n        }\n        Serial.println();\n    }\n\n    int currPeriod = millis()/TRANSMITPERIOD;\n    if (currPeriod != lastPeriod)\n    {\n        //fill in the struct with new values\n        theData.nodeId = NODEID;\n        theData.uptime = millis();\n        theData.temp = radio.readTemperature();//91.23; //it s hot!\n\n        Serial.print( Sending struct ( );\n        Serial.print(sizeof(theData));\n        Serial.print(  bytes) ...  );\n        if (radio.sendWithRetry(GATEWAYID, (const void*)( theData), sizeof(theData)))\n        Serial.print(  ok! );\n        else Serial.print(  nothing... );\n        Serial.println();\n        lastPeriod=currPeriod;\n    }\n\n    listenRF24();\n\n    if (irrecv.decode( results)) {\n        Serial.println(results.value, HEX);\n        irrecv.resume(); // Receive the next value\n        blinkStop=millis()+100;\n        digitalWrite(LED, HIGH);\n    }\n\n    if (digitalRead(BUTTON)==LOW) {\n        blinkStop=millis()+1000;\n        digitalWrite(LED, HIGH);\n    }\n\n    if (millis() blinkStop) {\n        digitalWrite(LED, LOW);\n    }\n\n    if(millis() timeReady){\n        timeReady=millis()+2000;\n        DateTime now = RTC.now();\n\n        Serial.print(now.year(), DEC);\n        Serial.print( / );\n        Serial.print(now.month(), DEC);\n        Serial.print( / );\n        Serial.print(now.day(), DEC);\n        Serial.print(   );\n        Serial.print(now.hour(), DEC);\n        Serial.print( : );\n        Serial.print(now.minute(), DEC);\n        Serial.print( : );\n        Serial.print(now.second(), DEC);\n        Serial.println();\n    }\n}\n\nvoid Blink(byte PIN, int DELAY_MS)\n{\n    pinMode(PIN, OUTPUT);\n    digitalWrite(PIN,HIGH);\n    delay(DELAY_MS);\n    digitalWrite(PIN,LOW);\n}\n\nvoid resetRFM69(){\n    digitalWrite(RFM69_RESET, HIGH);\n    delay(1);\n    digitalWrite(RFM69_RESET, LOW);\n    delay(10);\n}\n\nvoid isr_RF24(){\n    waitRF24 = true;\n}\n\nvoid listenRF24() {\n    if (waitRF24) {\n        waitRF24 = false;\n        if ( radio24.available() )\n        {\n            bool done = false;\n            while (!done)\n            {\n                done = radio24.read(  sensor, sizeof(sensor) );\n                if(sensor.Command == 0) {\n                    Serial.print(sensor.SensorID);\n                    Serial.print(    );\n                    Serial.print(sensor.ParamID);\n                    Serial.print(    );\n                    Serial.print(sensor.ParamValue);\n                    Serial.print(   );\n                    Serial.println(sensor.Comment);\n                }\n            }\n        }\n    }\n}", 
            "title": "WireLess Gate Shield \u4e3b\u8981\u90e8\u4ef6\u793a\u4f8b\u4ee3\u7801\uff08\u4f7f\u7528 RTC, IR, RFM69HW, nRF24l01 +\uff09"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#receiver-arduino-nano-rfm69hw", 
            "text": "\u91c7\u7528 RFM69HW \u7ed3\u6784  \u91c7\u7528\u8ba4\u8bc1\u673a\u5236  \u8f93\u51fa\u6709\u5173\u6a21\u5757 RFM69HW\uff08\u5bc4\u5b58\u5668\u7b49\uff09\u7684\u5176\u4ed6\u4fe1\u606f   #include  RFM69.h \n#include  SPI.h \n\n#define NODEID      1\n#define NETWORKID   100\n#define FREQUENCY   RF69_433MHZ //Match this with the version of your Moteino! (others: RF69_433MHZ, RF69_868MHZ)\n#define KEY          thisIsEncryptKey  //has to be same 16 characters/bytes on all nodes, not more not less!\n#define LED         6\n#define SERIAL_BAUD 115200\n#define ACK_TIME    30  // # of ms to wait for an ack\n\n#define RFM69_RESET 14\n\nRFM69 radio;\nbool promiscuousMode = false; //set to  true  to sniff all packets on the same network\n\ntypedef struct {\n    int           nodeId; //store this nodeId\n    unsigned long uptime; //uptime in ms\n    float         temp;   //temperature maybe?\n} Payload;\nPayload theData;\n\nvoid setup() {\n    Serial.begin(SERIAL_BAUD);\n    pinMode(RFM69_RESET, OUTPUT);\n    pinMode(3, INPUT);\n    resetRFM69();\n    radio.setCS(9);\n    //delay(10);\n    radio.initialize(FREQUENCY,NODEID,NETWORKID);\n\n    //radio.setHighPower(); //uncomment only for RFM69HW!\n\n    radio.encrypt(KEY);\n    radio.promiscuous(promiscuousMode);\n    char buff[50];\n    sprintf(buff,  \\nListening at %d Mhz... , FREQUENCY==RF69_433MHZ ? 433 : FREQUENCY==RF69_868MHZ ? 868 : 915);\n    Serial.println(buff);\n}\n\nbyte ackCount=0;\nvoid loop() {\n    //process any serial input\n    if (Serial.available()   0)\n    {\n        char input = Serial.read();\n        if (input ==  r ) //d=dump all register values\n        radio.readAllRegs();\n        if (input ==  E ) //E=enable encryption\n        radio.encrypt(KEY);\n        if (input ==  e ) //e=disable encryption\n        radio.encrypt(null);\n        if (input ==  p )\n        {\n            promiscuousMode = !promiscuousMode;\n            radio.promiscuous(promiscuousMode);\n            Serial.print( Promiscuous mode  );Serial.println(promiscuousMode ?  on  :  off );\n        }\n\n        if (input ==  d ) //d=dump flash area\n        {\n            Serial.println( Flash content: );\n            int counter = 0;\n\n            while(counter =256){\n                //Serial.print(flash.readByte(counter++), HEX);\n                Serial.print( . );\n            }\n            //while(flash.busy());\n            Serial.println();\n        }\n        if (input ==  D )\n        {\n            Serial.print( Deleting Flash chip content...  );\n            //flash.chipErase();\n            //while(flash.busy());\n            Serial.println( DONE );\n        }\n        if (input ==  i )\n        {\n            Serial.print( DeviceID:  );\n            //word jedecid = flash.readDeviceId();\n            //Serial.println(jedecid, HEX);\n        }\n    }\n\n    if (radio.receiveDone())\n    {\n        Serial.print( [ );Serial.print(radio.SENDERID, DEC);Serial.print( ]  );\n        Serial.print(  [RX_RSSI: );Serial.print(radio.readRSSI());Serial.print( ] );\n        if (promiscuousMode)\n        {\n            Serial.print( to [ );Serial.print(radio.TARGETID, DEC);Serial.print( ]  );\n        }\n\n        if (radio.DATALEN != sizeof(Payload))\n        Serial.print( Invalid payload received, not matching Payload struct! );\n        else\n        {\n            theData = *(Payload*)radio.DATA; //assume radio.DATA actually contains our struct and not something else\n            Serial.print(  nodeId= );\n            Serial.print(theData.nodeId);\n            Serial.print(  uptime= );\n            Serial.print(theData.uptime);\n            Serial.print(  temp= );\n            Serial.print(theData.temp);\n        }\n\n        if (radio.ACK_REQUESTED)\n        {\n            byte theNodeID = radio.SENDERID;\n            radio.sendACK();\n            Serial.print(  - ACK sent. );\n\n            // When a node requests an ACK, respond to the ACK\n            // and also send a packet requesting an ACK (every 3rd one only)\n            // This way both TX/RX NODE functions are tested on 1 end at the GATEWAY\n            if (ackCount++%3==0)\n            {\n                Serial.print(  Pinging node  );\n                Serial.print(theNodeID);\n                Serial.print(  - ACK... );\n                delay(3); //need this when sending right after reception .. ?\n                if (radio.sendWithRetry(theNodeID,  ACK TEST , 8, 0))  // 0 = only 1 attempt, no retries\n                Serial.print( ok! );\n                else Serial.print( nothing );\n            }\n        }\n        Serial.println();\n        Blink(LED,3);\n    }\n}\n\nvoid Blink(byte PIN, int DELAY_MS)\n{\n    pinMode(PIN, OUTPUT);\n    digitalWrite(PIN,HIGH);\n    delay(DELAY_MS);\n    digitalWrite(PIN,LOW);\n}\n\nvoid resetRFM69(){\n    digitalWrite(RFM69_RESET, HIGH);\n    delay(1);\n    digitalWrite(RFM69_RESET, LOW);\n    delay(10);\n}", 
            "title": "\u4ee3\u7801 \"receiver\" \uff08\u5728\u9762\u5305\u677f\u4e0a\u4f7f\u7528 Arduino Nano \u548c RFM69HW \u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5\uff09"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_13", 
            "text": "**\u7248\u6b21**   **\u63cf\u8ff0**   **\u53d1\u884c\u65e5\u671f**    0.9   \u539f\u578b   05.05.2014    1.0   \u516c\u5f00\u7248\u672c   05.07.2014", 
            "title": "\u4ea7\u54c1\u7248\u672c"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_14", 
            "text": "\u666e\u901a\u65e0\u7ebf\u7f51\u5173 RF2.4 GHz (nRF24l01 +), RF433 MHz (RFM69HW), IR \u548c LAN (\u4f7f\u7528 Ethernet Shield)  \u8bb0\u5f55\u7cfb\u7edf\u547d\u4ee4\u548c\u6570\u636e\u65e0\u7ebf\u8bbe\u5907\u7684\u65f6\u95f4 (\u4f7f\u7528 Ethernet Shield)  \u5728\u67d0\u4e9b\u65f6\u95f4\u53d1\u51fa\u65e0\u7ebf\u547d\u4ee4\u6765\u63a7\u5236\u8bbe\u5907 (\u4f8b\u5982\uff0c\u201c\u5728 2014 \u5e74 8 \u6708 23 \u65e5\u5f00\u706f\u201d\u6216\u8005\u201c\u6bcf\u5929 5 \u70b9\u81ea\u52a8\u6d47\u6c34\u201d)", 
            "title": "\u5e94\u7528"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#faq", 
            "text": "\u535a\u5ba2  WireLess Gate Shield  RU    \u6709\u7591\u95ee\u8bf7\u53d1\u90ae\u4ef6\u5230", 
            "title": "FAQ"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_15", 
            "text": "\u8bf7\u5206\u533a\u57df\u9009\u62e9\u8d2d\u4e70\u65b9\u5f0f\uff1a  \u4e2d\u56fd (\u5168\u7403\u822a\u8fd0)  Elecrow store  Seeed store  \u4fc4\u7f57\u65af  Devicter store", 
            "title": "\u8d2d\u4e70\u94fe\u63a5"
        }, 
        {
            "location": "/WireLess_Gate_Shield_V1.0/#_16", 
            "text": "[PDF \u6587\u4ef6] Description RFM69HW    [PDF \u6587\u4ef6] Description nRF24l01+    [PNG \u6587\u4ef6] schematic of the device", 
            "title": "\u4e86\u89e3\u66f4\u591a"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/", 
            "text": "Solar Charger Shield V2.2 \u662f\u4e00\u4e2a Arduino \u5e73\u53f0\u7684\u53ef\u5806\u53e0\u6269\u5c55\u677f\uff0c\u914d\u6709\u7535\u6e90\u7ba1\u7406\u529f\u80fd\uff0c\u5145\u5f53\u80fd\u91cf\u91c7\u96c6\u5668\uff0c\u7528\u4e8e\u73b0\u573a\u5145\u7535\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u7535\u538b\u4e3a 3.0V-4.2V \u7684\u5404\u79cd\u7535\u6c60\u5347\u538b 5V \u8f93\u51fa\uff0c\u6216\u8005\u5c06\u9502\u79bb\u5b50\u7535\u6c60\u548c\u592a\u9633\u80fd\u7535\u6c60\u677f\u7ec4\u5408\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u81ea\u4e3b\u4f20\u611f\u5668\u7cfb\u7edf\u3002\u7535\u8def\u677f\u63d0\u4f9b\u7684\u6700\u5927\u7535\u6d41\u53ef\u8fbe 600mA\u3002\u592a\u9633\u80fd\u677f\u3001USB\u53e3\u90fd\u53ef\u4ee5\u7ed9\u9502\u7535\u6c60\u5145\u7535\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u8f93\u51fa\u65ad\u5f00\n\n\n\n\n\n\n\u77ed\u8def\u4fdd\u62a4\n\n\n\n\n\n\n\u8fde\u63a5\u7535\u6c60\u65f6 3V \u8f93\u51fa\n\n\n\n\n\n\n\u8fde\u7eed\u5145\u7535\u7535\u6d41\u9ad8\u8fbe 900mA\n\n\n\n\n\n\n\u7535\u6c60\u72b6\u6001\u6307\u793a ( \u7ea2 : \u5145\u7535\u4e2d , \u7eff : \u5145\u7535\u5b8c\u6210 )\n\n\n\n\n\n\nMicro-USB \u8fde\u63a5\u5668\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u7535\u6c60\u8f93\u5165\u7535\u538b : 3.0~4.5V\n\n\n\n\n\n\nUSB \u8f93\u5165\u7535\u538b : 4.75~5.25V\n\n\n\n\n\n\n\u592a\u9633\u80fd\u8f93\u5165\u7535\u538b : 4.8~6V\n\n\n\n\n\n\n\u6700\u5927\u8f93\u51fa\u7535\u538b(\u5e26\u7535\u6c60): 3W(600mA@5V)\n\n\n\n\n\n\n\u7eb9\u6ce2\u7535\u538b \uff1a\n100mV @ 500mA\n\n\n\n\n\n\n\u5c3a\u5bf8 : 68*53mm\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u65e0\u7ebf\u4f20\u611f\u5668\n\n\n\u592a\u9633\u80fd\u5145\u7535\n\n\n\n\n\u4f7f\u7528\u592a\u9633\u80fd\u677f\u5145\u7535\n\n\n\n\n1) \u592a\u9633\u5149\u548c\u767d\u70bd\u706f\u90fd\u53ef\u4ee5\u7ed9\u592a\u9633\u80fd\u677f\u5145\u7535\uff0c\u524d\u8005\u7684\u6548\u7387\u8981\u9ad8\u4e8e\u540e\u8005\u3002\u592a\u9633\u80fd\u677f\u9700\u8981\u7d2b\u5916\u7ebf\u6216\u7ea2\u5916\u7ebf\u7684\u8f90\u5c04\u6765\u4ea7\u751f\u7535\u6d41\u3002\n\n\n2) \u6d4b\u8bd5\u592a\u9633\u80fd\u677f\u5728\u767d\u70bd\u706f\u4e0b\u7684\u5de5\u4f5c\u6548\u7387\u65f6\uff0c\u628a\u592a\u9633\u80fd\u677f\u653e\u7f6e\u5230\u8ddd\u79bb\u706f\u5c0f\u4e8e 20cm \u5904\u3002\u7136\u800c\u5728\u767d\u70bd\u706f\u4e0b\u7684\u5145\u7535\u6548\u7387\u5e76\u4e0d\u9ad8\u3002\n\n\n3) \u592a\u9633\u80fd\u677f\u7684\u653e\u7f6e\u5448\u4e00\u5b9a\u89d2\u5ea6\u80fd\u6700\u5927\u7a0b\u5ea6\u63a5\u6536\u5230\u5149\u7167\u3002\n\n\n4) \u907f\u514d\u592a\u9633\u80fd\u677f\u548c\u6c34\u6216\u6c34\u84b8\u6c14\u8fc7\u5ea6\u63a5\u89e6\uff0c\u53ef\u80fd\u4f1a\u6c27\u5316\u592a\u9633\u80fd\u677f\uff0c\u964d\u4f4e\u8f6c\u5316\u6548\u7387\u3002\n\n\n5) \u901a\u5e38\u592a\u9633\u80fd\u677f\u51fa\u5382\u4f1a\u914d\u6709\u5851\u6599\u4fdd\u62a4\u819c\uff0c\u4f7f\u7528\u524d\u8bf7\u6495\u6389\u5b83\u3002\n\n\n6) \u7231\u62a4\u592a\u9633\u80fd\u677f\uff0c\u907f\u514d\u522e\u75d5\u548c\u78b0\u649e\u3002\n\n\n\u6ce8\u610f\u4e8b\u9879\n\n\n\n\n1) Solar Charger Shield V2.2 \u8bbe\u8ba1\u65f6\u5df2\u8003\u8651\u5230\u77ed\u8def\u4fdd\u62a4\u7684\u95ee\u9898\uff0c\u4f46\u4f7f\u7528\u65f6\u4ecd\u7136\u8981\u907f\u514d\u77ed\u8def\u3002\n\n\n2) Solar Charger Shield V2.2 \u5de5\u4f5c\u7535\u538b\u4e0d\u80fd\u8d85\u8fc7 5V\u3002\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n1) \u628a\u7535\u6c60\u548c\u592a\u9633\u80fd\u677f\u5b89\u88c5\u5728\u76f8\u5e94\u7684\u63a5\u53e3\u4e0a\uff0c\u5982\u4e0b\u56fe\u6240\u793a :\n\n\n\n\n2) \u592a\u9633\u80fd\u677f\u653e\u7f6e\u5728\u9633\u5149\u6216\u767d\u70bd\u706f\u4e0b\uff0c\u53c2\u7167\u201c\u4f7f\u7528\u592a\u9633\u80fd\u677f\u5145\u7535\u201d\u90e8\u5206\u3002\n\n\n3) \u786e\u4fdd\u7ea2\u8272\u5145\u7535\u6307\u793a\u706f\u4eae\uff0c\u89c1\u4e0b\u56fe :\n\n\n\n\n4) \u5145\u7535\u5b8c\u6210\u540e\u7eff\u8272\u6307\u793a\u706f\u4eae\u3002\n\n\n5) \u5145\u7535\u5b8c\u6210\u540e\uff0c\u628a Solar Charger Shield V2.2 \u5b89\u88c5\u5230 Arduino \u4e0a\uff0c\u628a\u5f00\u5173\u62e8\u5230ON\u4e0a\uff0c\u5b83\u4f1a\u7ed9\u7ed9 Arduino \u4f9b\u7535\uff0c\u5982\u4e0b\u6240\u793a :\n\n\n\n\n\u4ea7\u54c1\u6d4b\u8bd5\n\n\n\n\n\u672c\u90e8\u5206\u5c06\u6559\u60a8\u5982\u4f55\u6d4b\u91cf\u9502\u7535\u6c60\u7684\u7535\u538b\u3002\n\n\n\u5c06 \nVBAT\n \u5f15\u811a\u8fde\u63a5\u5230\u6a21\u62df\u5f15\u811a \nA0\n\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u8bfb\u53d6\u6765\u81ea \nA0\n \u5f15\u811a\u7684\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u8de8\u63a5\u7535\u963b\u5668\u6765\u77ed\u63a5 R7\uff0c\u5982\u56fe\u6240\u793a :\n\n\n\n\n\u7f16\u7a0b\u793a\u4f8b\n\n\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u793a\u4f8b\u6d4b\u91cf\u7535\u6c60\u7684\u7535\u538b :\n\n/*\n Solar charger shield voltage measurement example. Connect VBAT pin to analog pin A0.\n\n The pin measures 2.0 V when not under direct exposre to sunlight and 5V when exposed to sunlight.\n\n This example code is in the public domain.\n\n */\n\n// These constants won\nt change.  They\nre used to give names\n// to the pins used:\nconst int analogInPin = A0;  // Analog input pin that the VBAT pin is attached to\n\n\nint BatteryValue = 0;        // value read from the VBAT pin\nfloat outputValue = 0;        // variable for voltage calculation\n\nvoid setup() {\n    // initialize serial communications at 9600 bps:\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    // read the analog in value:\n    BatteryValue = analogRead(analogInPin);\n    // Calculate the battery voltage value\n    outputValue = (float(BatteryValue)*5)/1023*2;\n    // print the results to the serial monitor:\n    Serial.print(\nAnalog value = \n );\n    Serial.print(BatteryValue);\n    Serial.print(\n\\t voltage = \n);\n    Serial.println(outputValue);\n    Serial.println(\nV \\n\n);\n\n    // wait 10 milliseconds before the next loop\n    // for the analog-to-digital converter to settle\n    // after the last reading:\n    delay(10);\n}\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nSolar Charger Shield v2.2 sch\npcb\n\n\n\n\n\n\n[\u539f\u7406\u56fePDF]\n \nSolar Charger Shield v2.2.pdf\n\n\n\n\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nDSE-CN3065.pdf\n\n\n\n\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nETA1036.pdf", 
            "title": "Solar Charger Shield V2.2"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/#_1", 
            "text": "\u8f93\u51fa\u65ad\u5f00    \u77ed\u8def\u4fdd\u62a4    \u8fde\u63a5\u7535\u6c60\u65f6 3V \u8f93\u51fa    \u8fde\u7eed\u5145\u7535\u7535\u6d41\u9ad8\u8fbe 900mA    \u7535\u6c60\u72b6\u6001\u6307\u793a ( \u7ea2 : \u5145\u7535\u4e2d , \u7eff : \u5145\u7535\u5b8c\u6210 )    Micro-USB \u8fde\u63a5\u5668", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/#_2", 
            "text": "\u7535\u6c60\u8f93\u5165\u7535\u538b : 3.0~4.5V    USB \u8f93\u5165\u7535\u538b : 4.75~5.25V    \u592a\u9633\u80fd\u8f93\u5165\u7535\u538b : 4.8~6V    \u6700\u5927\u8f93\u51fa\u7535\u538b(\u5e26\u7535\u6c60): 3W(600mA@5V)    \u7eb9\u6ce2\u7535\u538b \uff1a 100mV @ 500mA    \u5c3a\u5bf8 : 68*53mm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/#_3", 
            "text": "\u65e0\u7ebf\u4f20\u611f\u5668  \u592a\u9633\u80fd\u5145\u7535", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/#_4", 
            "text": "1) \u592a\u9633\u5149\u548c\u767d\u70bd\u706f\u90fd\u53ef\u4ee5\u7ed9\u592a\u9633\u80fd\u677f\u5145\u7535\uff0c\u524d\u8005\u7684\u6548\u7387\u8981\u9ad8\u4e8e\u540e\u8005\u3002\u592a\u9633\u80fd\u677f\u9700\u8981\u7d2b\u5916\u7ebf\u6216\u7ea2\u5916\u7ebf\u7684\u8f90\u5c04\u6765\u4ea7\u751f\u7535\u6d41\u3002  2) \u6d4b\u8bd5\u592a\u9633\u80fd\u677f\u5728\u767d\u70bd\u706f\u4e0b\u7684\u5de5\u4f5c\u6548\u7387\u65f6\uff0c\u628a\u592a\u9633\u80fd\u677f\u653e\u7f6e\u5230\u8ddd\u79bb\u706f\u5c0f\u4e8e 20cm \u5904\u3002\u7136\u800c\u5728\u767d\u70bd\u706f\u4e0b\u7684\u5145\u7535\u6548\u7387\u5e76\u4e0d\u9ad8\u3002  3) \u592a\u9633\u80fd\u677f\u7684\u653e\u7f6e\u5448\u4e00\u5b9a\u89d2\u5ea6\u80fd\u6700\u5927\u7a0b\u5ea6\u63a5\u6536\u5230\u5149\u7167\u3002  4) \u907f\u514d\u592a\u9633\u80fd\u677f\u548c\u6c34\u6216\u6c34\u84b8\u6c14\u8fc7\u5ea6\u63a5\u89e6\uff0c\u53ef\u80fd\u4f1a\u6c27\u5316\u592a\u9633\u80fd\u677f\uff0c\u964d\u4f4e\u8f6c\u5316\u6548\u7387\u3002  5) \u901a\u5e38\u592a\u9633\u80fd\u677f\u51fa\u5382\u4f1a\u914d\u6709\u5851\u6599\u4fdd\u62a4\u819c\uff0c\u4f7f\u7528\u524d\u8bf7\u6495\u6389\u5b83\u3002  6) \u7231\u62a4\u592a\u9633\u80fd\u677f\uff0c\u907f\u514d\u522e\u75d5\u548c\u78b0\u649e\u3002", 
            "title": "\u4f7f\u7528\u592a\u9633\u80fd\u677f\u5145\u7535"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/#_5", 
            "text": "1) Solar Charger Shield V2.2 \u8bbe\u8ba1\u65f6\u5df2\u8003\u8651\u5230\u77ed\u8def\u4fdd\u62a4\u7684\u95ee\u9898\uff0c\u4f46\u4f7f\u7528\u65f6\u4ecd\u7136\u8981\u907f\u514d\u77ed\u8def\u3002  2) Solar Charger Shield V2.2 \u5de5\u4f5c\u7535\u538b\u4e0d\u80fd\u8d85\u8fc7 5V\u3002", 
            "title": "\u6ce8\u610f\u4e8b\u9879"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/#_6", 
            "text": "1) \u628a\u7535\u6c60\u548c\u592a\u9633\u80fd\u677f\u5b89\u88c5\u5728\u76f8\u5e94\u7684\u63a5\u53e3\u4e0a\uff0c\u5982\u4e0b\u56fe\u6240\u793a :   2) \u592a\u9633\u80fd\u677f\u653e\u7f6e\u5728\u9633\u5149\u6216\u767d\u70bd\u706f\u4e0b\uff0c\u53c2\u7167\u201c\u4f7f\u7528\u592a\u9633\u80fd\u677f\u5145\u7535\u201d\u90e8\u5206\u3002  3) \u786e\u4fdd\u7ea2\u8272\u5145\u7535\u6307\u793a\u706f\u4eae\uff0c\u89c1\u4e0b\u56fe :   4) \u5145\u7535\u5b8c\u6210\u540e\u7eff\u8272\u6307\u793a\u706f\u4eae\u3002  5) \u5145\u7535\u5b8c\u6210\u540e\uff0c\u628a Solar Charger Shield V2.2 \u5b89\u88c5\u5230 Arduino \u4e0a\uff0c\u628a\u5f00\u5173\u62e8\u5230ON\u4e0a\uff0c\u5b83\u4f1a\u7ed9\u7ed9 Arduino \u4f9b\u7535\uff0c\u5982\u4e0b\u6240\u793a :", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/#_7", 
            "text": "\u672c\u90e8\u5206\u5c06\u6559\u60a8\u5982\u4f55\u6d4b\u91cf\u9502\u7535\u6c60\u7684\u7535\u538b\u3002  \u5c06  VBAT  \u5f15\u811a\u8fde\u63a5\u5230\u6a21\u62df\u5f15\u811a  A0 \uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u8bfb\u53d6\u6765\u81ea  A0  \u5f15\u811a\u7684\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u8de8\u63a5\u7535\u963b\u5668\u6765\u77ed\u63a5 R7\uff0c\u5982\u56fe\u6240\u793a :", 
            "title": "\u4ea7\u54c1\u6d4b\u8bd5"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/#_8", 
            "text": "\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u793a\u4f8b\u6d4b\u91cf\u7535\u6c60\u7684\u7535\u538b : /*\n Solar charger shield voltage measurement example. Connect VBAT pin to analog pin A0.\n\n The pin measures 2.0 V when not under direct exposre to sunlight and 5V when exposed to sunlight.\n\n This example code is in the public domain.\n\n */\n\n// These constants won t change.  They re used to give names\n// to the pins used:\nconst int analogInPin = A0;  // Analog input pin that the VBAT pin is attached to\n\n\nint BatteryValue = 0;        // value read from the VBAT pin\nfloat outputValue = 0;        // variable for voltage calculation\n\nvoid setup() {\n    // initialize serial communications at 9600 bps:\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    // read the analog in value:\n    BatteryValue = analogRead(analogInPin);\n    // Calculate the battery voltage value\n    outputValue = (float(BatteryValue)*5)/1023*2;\n    // print the results to the serial monitor:\n    Serial.print( Analog value =   );\n    Serial.print(BatteryValue);\n    Serial.print( \\t voltage =  );\n    Serial.println(outputValue);\n    Serial.println( V \\n );\n\n    // wait 10 milliseconds before the next loop\n    // for the analog-to-digital converter to settle\n    // after the last reading:\n    delay(10);\n}", 
            "title": "\u7f16\u7a0b\u793a\u4f8b"
        }, 
        {
            "location": "/Solar_Charger_Shield_V2.2/#_9", 
            "text": "[Eagle\u6587\u4ef6]   Solar Charger Shield v2.2 sch pcb    [\u539f\u7406\u56fePDF]   Solar Charger Shield v2.2.pdf    [\u82af\u7247\u6570\u636e\u624b\u518c]   DSE-CN3065.pdf    [\u82af\u7247\u6570\u636e\u624b\u518c]   ETA1036.pdf", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Bluetooth_Shield_V2/", 
            "text": "Bluetooth Shield \u96c6\u6210\u4e86\u4e00\u4e2a\u4e32\u884c\u84dd\u7259\u6a21\u5757\u3002 \u5b83\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u4e0e Arduino / Seeedstudio \u4e00\u8d77\u7528\u4e8e\u8fde\u7eed\u7684\u65e0\u7ebf\u4e32\u884c\u901a\u4fe1\u3002\u60a8\u53ef\u4ee5\u4ece Arduino D0 \u5230 D7 \u4e2d\u9009\u62e9\u4e24\u4e2a\u5f15\u811a\u4f5c\u4e3a\u8f6f\u4ef6\u4e32\u884c\u7aef\u53e3\u4e0e Bluetooth Shield \uff08D0\u548cD1\u662f\u786c\u4ef6\u4e32\u884c\u7aef\u53e3\uff09\u8fdb\u884c\u901a\u4fe1\u3002Shield \u8fd8\u6709\u4e24\u4e2a Grove \u63a5\u53e3\uff08\u4e00\u4e2a\u662f Digital\uff0c\u53e6\u4e00\u4e2a\u662f Analog\uff09\uff0c\u7528\u4e8e\u8fde\u63a5 Grove \u6a21\u5757\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\uff1a3.3V\n\n\n\u6ce2\u7279\u7387: 9600, 19200, 38400, 57600, 115200, 230400, 460800\n\n\n\u517c\u5bb9 Seeeduino/Arduino\n\n\n\u65e0\u969c\u788d\u73af\u5883\u901a\u8baf\u8ddd\u79bb\u53ef\u8fbe 10m\n\n\n\u5177\u6709\u53ef\u7f16\u7a0b\u6ce2\u7279\u7387\u7684 UART \u63a5\u53e3\uff08TTL\uff09\n\n\n\u9ed8\u8ba4\u6ce2\u7279\u7387\uff1a9600\uff0c\u6570\u636e\u4f4d\uff1a8\uff0c\u505c\u6b62\u4f4d\uff1a1\uff0c\u5947\u5076\u6821\u9a8c\uff1a\u65e0\u5947\u5076\u6821\u9a8c\n\n\n\u9ed8\u8ba4 PINCODE\uff1a\u201c1234\u201d\n\n\n\u4e00\u5957\u5b8c\u6574\u7684\u914d\u7f6e\u547d\u4ee4\n\n\n\u677f\u8f7d PCB \u5929\u7ebf\n\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n\n\n\n\n\n\n \u63a5\u53e3\u540d\u79f0\n\n\n\n \u63cf\u8ff0\n\n\n\n\n\n BT_IO\n\n\n\n \u84dd\u7259\u6a21\u5757\u7684 IO \u7aef\u53e3\u53ef\u4ee5\u63a7\u5236\uff1a\u8bfb\u53d6\uff0c\u5199\u5165\u3002\n\n\n\n\n\n BT_RX\n\n\n\n \u84dd\u7259\u6a21\u5757\u7684 UART \u6570\u636e\u8f93\u5165\n\n\n\n\n\n BT_TX\n\n\n\n \u84dd\u7259\u6a21\u5757\u7684 UART \u6570\u636e\u8f93\u51fa\n\n\n\n\n\n \u4e24\u4e2a Grove \u7aef\u53e3\n\n\n\n \u4e00\u4e2a\u662f\u6570\u5b57\u7aef\u53e3(D8 \u548c D9), \u53e6\u4e00\u4e2a\u662f I2C/\u6a21\u62df\u7aef\u53e3 (A4 \u548c A5).\n\n\n\n\n\u793a\u4f8b\n\n\n1\uff1a\u4e24\u4e2a Bluetooth Shield \u8fde\u63a5\n\n\n\u8fd9\u4e2a\u793a\u4f8b\u4f1a\u5c55\u793a\u5982\u4f55\u8fde\u63a5\u4e24\u4e2a Bluetooth shield\u3002\n\n\n\u4f60\u9700\u8981\u4e24\u4e2a \nSeeeduino V4.2\n\uff0c\u4e00\u4e2a Bluetooth shield \u4f5c\u4e3a\u4e3b\u673a\uff0c\u53e6\u4e00\u4e2a\u4e3a\u4ece\u673a\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n\u786e\u5b9a\u8df3\u7ebf\u5e3d\u7684\u4f4d\u7f6e\u6b63\u786e\u3002\n\n\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20\n\n\n\n\n\n\n\u4f60\u53ef\u4ee5\u5728 github \u4e0a\u4e0b\u8f7d\u4ee3\u7801\uff0c\u70b9\u51fb \n\u8fd9\u91cc\n\uff0c\u7136\u540e\u4e0b\u8f7d Arduino \u7684\u4ee3\u7801\u3002\n\n\n\n\n\n\n\u6253\u5f00 Arduino IDE\uff0c\u70b9\u51fb \n\u9879\u76ee -\n \u52a0\u8f7d\u5e93 -\n \u6dfb\u52a0\u4e00\u4e2a .ZIP \u5e93\n\uff0c\u5bfc\u5165\u4ee3\u7801\u3002\u7136\u540e\u70b9\u51fb \n\u6587\u4ef6 -\n \u793a\u4f8b -\n Bluetooth_Shield_V2_Demo_Code -\n Master_Button\n\uff0c\u6253\u5f00\u4e3b\u673a\u793a\u4f8b\u4ee3\u7801\u3002\u70b9\u51fb \n\u4e0a\u4f20\n \u6309\u94ae\u628a\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u673a\u5f00\u53d1\u677f\u3002\n\n\n\n\n\n\n\u70b9\u51fb \n\u6587\u4ef6 -\n \u793a\u4f8b -\n Bluetooth_Shield_V2_Demo_Code -\n Slave_led\n\uff0c\u6253\u5f00\u4ece\u673a\u793a\u4f8b\u4ee3\u7801\u3002\u70b9\u51fb \n\u4e0a\u4f20\n \u6309\u94ae\u628a\u4ee3\u7801\u4e0a\u4f20\u5230\u4ece\u673a\u5f00\u53d1\u677f\u3002\n\n\n\n\n\n\n\u5982\u679c\u60a8\u5bf9\u4f7f\u7528 Arduino \u6709\u4efb\u4f55\u56f0\u96be\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u83b7\u53d6\u5e2e\u52a9\u3002\n\n\n\n\n\n\n![](https://github.com/SeeedDocument/Bluetooth_Shield_V2/raw/master/img/Bluetooth_ide_1.jpg)\n\n\n\n\n\n\u67e5\u770b\u7ed3\u679c\n\n\n\n\n\n\n\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u673a\u548c\u4ece\u673a\u540e\uff0c\u540c\u65f6\u590d\u4f4d\u4e24\u4e2a\u8bbe\u5907\n\n\n\n\n\n\n\u60a8\u53ef\u4ee5\u770b\u5230\u6307\u793a\u706f\u95ea\u70c1\uff0c\u8868\u793a\u8bbe\u5907\u6b63\u5728\u521d\u59cb\u5316\u5e76\u8fde\u63a5\u3002\n\n\n\n\n\n\n\u7ecf\u8fc7\u5927\u7ea6\u51e0\u79d2\u949f\u7684\u65f6\u95f4\uff0cLED \u706f\u4fdd\u6301\u70b9\u4eae\uff0c\u8868\u793a\u4e3b\u673a\u548c\u4ece\u673a\u8fde\u63a5\u5b8c\u6210\u3002\n\n\n\n\n\n\n\n\nNote\n\n\n\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u4e0a\u8ff0\u7ed3\u679c\uff0c\u8bf7\u62d4\u6389\u7535\u6e90\u5e76\u91cd\u65b0\u8fde\u63a5\u3002\n\n\n\n\n2\uff1a\u8fde\u63a5\u667a\u80fd\u624b\u673a\n\n\n\u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u5c06\u84dd\u7259\u8fde\u63a5\u5230\u667a\u80fd\u624b\u673a\u3002\n\n\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5e26\u84dd\u7259\u529f\u80fd\u7684\u667a\u80fd\u624b\u673a\u548c \nSeeeduino V4.2\n\u3002\n\n\n\u5b89\u88c5\u84dd\u7259 SPP \u5e94\u7528\u7a0b\u5e8f\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20\n\n\n\n\n\n\n\u4f60\u53ef\u4ee5\u5728 github \u4e0a\u4e0b\u8f7d\u4ee3\u7801\uff0c\u70b9\u51fb \n\u8fd9\u91cc\n\uff0c\u7136\u540e\u4e0b\u8f7d Arduino \u7684\u4ee3\u7801\u3002\n\n\n\n\n\n\n\u6253\u5f00 Arduino IDE\uff0c\u70b9\u51fb \n\u9879\u76ee -\n \u52a0\u8f7d\u5e93 -\n \u6dfb\u52a0\u4e00\u4e2a .ZIP \u5e93\n\uff0c\u5bfc\u5165\u4ee3\u7801\u3002\u7136\u540e\u70b9\u51fb \n\u6587\u4ef6 -\n \u793a\u4f8b -\n Bluetooth_Shield_V2_Demo_Code -\n Slave_Temperature\n\uff0c\u6253\u5f00\u4e3b\u673a\u793a\u4f8b\u4ee3\u7801\u3002\u70b9\u51fb \n\u4e0a\u4f20\n \u6309\u94ae\u628a\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u673a\u5f00\u53d1\u677f\u3002\n\n\n\n\n\n\n\u70b9\u51fb \n\u4e0a\u4f20\n \u6309\u94ae\u628a\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u673a\u5f00\u53d1\u677f\u3002\u5982\u679c\u60a8\u5bf9\u4f7f\u7528 Arduino \u6709\u4efb\u4f55\u56f0\u96be\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u83b7\u53d6\u5e2e\u52a9\u3002\n\n\n\n\n\n\n\n\n\u4e0b\u8f7d\u4e00\u4e2a SSP App\n\n\n\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a Ardriod \u624b\u673a\u3002\u6253\u5f00\u5e94\u7528\u5546\u5e97\uff0c\u641c\u7d22 \n\u84dd\u7259\u4e32\u53e3 SPP\n\uff0c\u627e\u5230\u5408\u9002\u7684\u8f6f\u4ef6\u5e76\u4e0b\u8f7d\u3002\n\n\n\n\n\u83b7\u53d6\u6e29\u5ea6\n\n\n\u5b89\u88c5 SPP \u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u5c1d\u8bd5\u8fde\u63a5\u5230 SeeedBTSlave\uff0c\u5bc6\u7801\u662f\uff1a\u201c0000\u201d\n\n\n\n\n\u5f53\u8fde\u63a5\u597d\u540e\uff0c\u53d1\u9001 't' \u5230 SeeedBTSlave\uff0c\u5c31\u4f1a\u8fd4\u56de\u6e29\u5ea6\u6570\u636e\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\nSchematic and Layout in Eagle format\n\n\n\n\n\n\n[\u6570\u636e\u624b\u518c]\nmodule Datasheet", 
            "title": "Bluetooth Shield V2"
        }, 
        {
            "location": "/Bluetooth_Shield_V2/#_1", 
            "text": "\u8f93\u5165\u7535\u538b\uff1a3.3V  \u6ce2\u7279\u7387: 9600, 19200, 38400, 57600, 115200, 230400, 460800  \u517c\u5bb9 Seeeduino/Arduino  \u65e0\u969c\u788d\u73af\u5883\u901a\u8baf\u8ddd\u79bb\u53ef\u8fbe 10m  \u5177\u6709\u53ef\u7f16\u7a0b\u6ce2\u7279\u7387\u7684 UART \u63a5\u53e3\uff08TTL\uff09  \u9ed8\u8ba4\u6ce2\u7279\u7387\uff1a9600\uff0c\u6570\u636e\u4f4d\uff1a8\uff0c\u505c\u6b62\u4f4d\uff1a1\uff0c\u5947\u5076\u6821\u9a8c\uff1a\u65e0\u5947\u5076\u6821\u9a8c  \u9ed8\u8ba4 PINCODE\uff1a\u201c1234\u201d  \u4e00\u5957\u5b8c\u6574\u7684\u914d\u7f6e\u547d\u4ee4  \u677f\u8f7d PCB \u5929\u7ebf", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Bluetooth_Shield_V2/#_2", 
            "text": "\u63a5\u53e3\u540d\u79f0   \u63cf\u8ff0    BT_IO   \u84dd\u7259\u6a21\u5757\u7684 IO \u7aef\u53e3\u53ef\u4ee5\u63a7\u5236\uff1a\u8bfb\u53d6\uff0c\u5199\u5165\u3002    BT_RX   \u84dd\u7259\u6a21\u5757\u7684 UART \u6570\u636e\u8f93\u5165    BT_TX   \u84dd\u7259\u6a21\u5757\u7684 UART \u6570\u636e\u8f93\u51fa    \u4e24\u4e2a Grove \u7aef\u53e3   \u4e00\u4e2a\u662f\u6570\u5b57\u7aef\u53e3(D8 \u548c D9), \u53e6\u4e00\u4e2a\u662f I2C/\u6a21\u62df\u7aef\u53e3 (A4 \u548c A5).", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Bluetooth_Shield_V2/#_3", 
            "text": "", 
            "title": "\u793a\u4f8b"
        }, 
        {
            "location": "/Bluetooth_Shield_V2/#1-bluetooth-shield", 
            "text": "\u8fd9\u4e2a\u793a\u4f8b\u4f1a\u5c55\u793a\u5982\u4f55\u8fde\u63a5\u4e24\u4e2a Bluetooth shield\u3002  \u4f60\u9700\u8981\u4e24\u4e2a  Seeeduino V4.2 \uff0c\u4e00\u4e2a Bluetooth shield \u4f5c\u4e3a\u4e3b\u673a\uff0c\u53e6\u4e00\u4e2a\u4e3a\u4ece\u673a\u3002  \u786c\u4ef6\u8fde\u63a5  \u5982\u4e0b\u6240\u793a\uff1a   \u786e\u5b9a\u8df3\u7ebf\u5e3d\u7684\u4f4d\u7f6e\u6b63\u786e\u3002   \u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20    \u4f60\u53ef\u4ee5\u5728 github \u4e0a\u4e0b\u8f7d\u4ee3\u7801\uff0c\u70b9\u51fb  \u8fd9\u91cc \uff0c\u7136\u540e\u4e0b\u8f7d Arduino \u7684\u4ee3\u7801\u3002    \u6253\u5f00 Arduino IDE\uff0c\u70b9\u51fb  \u9879\u76ee -  \u52a0\u8f7d\u5e93 -  \u6dfb\u52a0\u4e00\u4e2a .ZIP \u5e93 \uff0c\u5bfc\u5165\u4ee3\u7801\u3002\u7136\u540e\u70b9\u51fb  \u6587\u4ef6 -  \u793a\u4f8b -  Bluetooth_Shield_V2_Demo_Code -  Master_Button \uff0c\u6253\u5f00\u4e3b\u673a\u793a\u4f8b\u4ee3\u7801\u3002\u70b9\u51fb  \u4e0a\u4f20  \u6309\u94ae\u628a\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u673a\u5f00\u53d1\u677f\u3002    \u70b9\u51fb  \u6587\u4ef6 -  \u793a\u4f8b -  Bluetooth_Shield_V2_Demo_Code -  Slave_led \uff0c\u6253\u5f00\u4ece\u673a\u793a\u4f8b\u4ee3\u7801\u3002\u70b9\u51fb  \u4e0a\u4f20  \u6309\u94ae\u628a\u4ee3\u7801\u4e0a\u4f20\u5230\u4ece\u673a\u5f00\u53d1\u677f\u3002    \u5982\u679c\u60a8\u5bf9\u4f7f\u7528 Arduino \u6709\u4efb\u4f55\u56f0\u96be\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u83b7\u53d6\u5e2e\u52a9\u3002    ![](https://github.com/SeeedDocument/Bluetooth_Shield_V2/raw/master/img/Bluetooth_ide_1.jpg)   \u67e5\u770b\u7ed3\u679c    \u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u673a\u548c\u4ece\u673a\u540e\uff0c\u540c\u65f6\u590d\u4f4d\u4e24\u4e2a\u8bbe\u5907    \u60a8\u53ef\u4ee5\u770b\u5230\u6307\u793a\u706f\u95ea\u70c1\uff0c\u8868\u793a\u8bbe\u5907\u6b63\u5728\u521d\u59cb\u5316\u5e76\u8fde\u63a5\u3002    \u7ecf\u8fc7\u5927\u7ea6\u51e0\u79d2\u949f\u7684\u65f6\u95f4\uff0cLED \u706f\u4fdd\u6301\u70b9\u4eae\uff0c\u8868\u793a\u4e3b\u673a\u548c\u4ece\u673a\u8fde\u63a5\u5b8c\u6210\u3002     Note  \u5982\u679c\u6ca1\u6709\u51fa\u73b0\u4e0a\u8ff0\u7ed3\u679c\uff0c\u8bf7\u62d4\u6389\u7535\u6e90\u5e76\u91cd\u65b0\u8fde\u63a5\u3002", 
            "title": "1\uff1a\u4e24\u4e2a Bluetooth Shield \u8fde\u63a5"
        }, 
        {
            "location": "/Bluetooth_Shield_V2/#2", 
            "text": "\u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u5c06\u84dd\u7259\u8fde\u63a5\u5230\u667a\u80fd\u624b\u673a\u3002  \u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5e26\u84dd\u7259\u529f\u80fd\u7684\u667a\u80fd\u624b\u673a\u548c  Seeeduino V4.2 \u3002  \u5b89\u88c5\u84dd\u7259 SPP \u5e94\u7528\u7a0b\u5e8f  \u786c\u4ef6\u5b89\u88c5   \u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20    \u4f60\u53ef\u4ee5\u5728 github \u4e0a\u4e0b\u8f7d\u4ee3\u7801\uff0c\u70b9\u51fb  \u8fd9\u91cc \uff0c\u7136\u540e\u4e0b\u8f7d Arduino \u7684\u4ee3\u7801\u3002    \u6253\u5f00 Arduino IDE\uff0c\u70b9\u51fb  \u9879\u76ee -  \u52a0\u8f7d\u5e93 -  \u6dfb\u52a0\u4e00\u4e2a .ZIP \u5e93 \uff0c\u5bfc\u5165\u4ee3\u7801\u3002\u7136\u540e\u70b9\u51fb  \u6587\u4ef6 -  \u793a\u4f8b -  Bluetooth_Shield_V2_Demo_Code -  Slave_Temperature \uff0c\u6253\u5f00\u4e3b\u673a\u793a\u4f8b\u4ee3\u7801\u3002\u70b9\u51fb  \u4e0a\u4f20  \u6309\u94ae\u628a\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u673a\u5f00\u53d1\u677f\u3002    \u70b9\u51fb  \u4e0a\u4f20  \u6309\u94ae\u628a\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u673a\u5f00\u53d1\u677f\u3002\u5982\u679c\u60a8\u5bf9\u4f7f\u7528 Arduino \u6709\u4efb\u4f55\u56f0\u96be\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u83b7\u53d6\u5e2e\u52a9\u3002     \u4e0b\u8f7d\u4e00\u4e2a SSP App  \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a Ardriod \u624b\u673a\u3002\u6253\u5f00\u5e94\u7528\u5546\u5e97\uff0c\u641c\u7d22  \u84dd\u7259\u4e32\u53e3 SPP \uff0c\u627e\u5230\u5408\u9002\u7684\u8f6f\u4ef6\u5e76\u4e0b\u8f7d\u3002   \u83b7\u53d6\u6e29\u5ea6  \u5b89\u88c5 SPP \u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u5c1d\u8bd5\u8fde\u63a5\u5230 SeeedBTSlave\uff0c\u5bc6\u7801\u662f\uff1a\u201c0000\u201d   \u5f53\u8fde\u63a5\u597d\u540e\uff0c\u53d1\u9001 't' \u5230 SeeedBTSlave\uff0c\u5c31\u4f1a\u8fd4\u56de\u6e29\u5ea6\u6570\u636e\u3002", 
            "title": "2\uff1a\u8fde\u63a5\u667a\u80fd\u624b\u673a"
        }, 
        {
            "location": "/Bluetooth_Shield_V2/#_4", 
            "text": "[Eagle \u6587\u4ef6] Schematic and Layout in Eagle format    [\u6570\u636e\u624b\u518c] module Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Essentials/", 
            "text": "\u672c\u90e8\u5206\u5305\u62ec\u7531Seeed\u521b\u5efa\u7684Essentials\u677f\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Essentials\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nLipo_Rider_V1.3", 
            "title": "Essentials"
        }, 
        {
            "location": "/Essentials/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Essentials\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Lipo_Rider_V1.3", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Wireless/", 
            "text": "\u672c\u8282\u5305\u62ec\u7531Seeed\u521b\u5efa\u7684\u65e0\u7ebf\u7535\u8def\u677f\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u65e0\u7ebf\u63a7\u5236\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nBLE_Nitrogen\n\n\nBluetooth_V4.0_HM_11_BLE_Module\n\n\nGrove-Mega_Shield\n\n\nLoRa_LoRaWan_Gateway_Kit", 
            "title": "Wireless"
        }, 
        {
            "location": "/Wireless/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u65e0\u7ebf\u63a7\u5236\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   BLE_Nitrogen  Bluetooth_V4.0_HM_11_BLE_Module  Grove-Mega_Shield  LoRa_LoRaWan_Gateway_Kit", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/BLE_Nitrogen/", 
            "text": "Zephyr \u4f7f\u7528 nrf52_nitrogen \u914d\u7f6e\u6765\u5b9e\u73b0\u5728 nRF52 \u4e0a\u8fd0\u884c\u3002\u5b83\u63d0\u4f9b\u5bf9 Nordic Semiconductor nRF52832 ARM Cortex-M4F CPU \u548c\u4ee5\u4e0b\u914d\u7f6e\u7684\u652f\u6301 :\n\n\n\n\nNVIC (Nested Vectored Interrupt Controller)\n\n\nSYSTICK (System Tick System Clock)\n\n\nUART\n\n\nGPIO\n\n\nFLASH\n\n\n\n\n\u672c \nNordic Semiconductor Infocenter\n \u5305\u542b\u5904\u7406\u5668\u4fe1\u606f\u548c\u6570\u636e\u624b\u518c\u3002\n\n\n\u5f3a\u70c8\u5efa\u8bae\u60a8\u4f7f\u7528\u6700\u65b0\u7684 \nSDK\n \u66f4\u65b0\u5f00\u53d1\u73af\u5883\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5177\u6709 512kB Flash\uff0c64kB RAM \u7684 nRF52832 \u5fae\u63a7\u5236\u5668\n\n\nCortex M4\n\n\nBLE\n\n\nNFC\n\n\n\n\n\n\n\u5e26\u7535\u6d41\u4fdd\u62a4\u7684 USB \u7535\u6e90\n\n\n\u7535\u6c60\u7528\u7535\u7ba1\u7406\n\n\n\u677f\u8f7d\u5145\u7535\u5668\n\n\n\u7535\u6c60\u63d2\u5934\n\n\n\u5145\u7535 LED \u6307\u793a\u706f\n\n\n\n\n\n\nLPC11U35 \u677f\u8f7d SWD \u8c03\u8282\u5668\n\n\nSWD \u8c03\u8282\u5668\n\n\nUSB \u81f3 Uart\n\n\nDrag and Drop \u56fa\u4ef6\u5347\u7ea7\n\n\n\u56fa\u4ef6\u5347\u7ea7\u540e\u81ea\u52a8\u91cd\u7f6e\u5e76\u8fd0\u884c\n\n\n\n\n\n\nBLE \u529f\u8017\u6d4b\u91cf\n\n\nOn board \u7535\u6d41\u6d4b\u91cf\u7535\u8def\n\n\n1uA \u6d4b\u91cf\u8303\u56f4\n\n\n\u9ad8\u8fbe 150mA \u7535\u6d41\u6d4b\u91cf\n\n\n\n\n\n\n7 LEDs\n\n\nUSR1, BT, PWR, CDC, DAP, MSD, Battery charge\n\n\n\n\n\n\n\u4e24\u4e2a\u6309\u94ae\n\n\nUSR \u548c RESET(\u4e5f\u7528\u4e8e LPC11U35 \u56fa\u4ef6\u5347\u7ea7)\n\n\n\n\n\n\nSWD \u8c03\u8bd5\u8fde\u63a5\u5668\n\n\nnRF52832 SWD \u8fde\u63a5\u5668\n\n\nnRF52832 Uart \u8fde\u63a5\u5668\n\n\n\n\n\n\n\u677f\u8f7d\u82af\u7247\u5929\u7ebf\n\n\n1.8V \u5de5\u4f5c\u7535\u538b\n\n\n2x20 \u95f4\u8ddd 2.0mm \u5f15\u811a\n\n\n\u5b8c\u5168\u517c\u5bb9 96Boards IoT \u6807\u51c6\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u82af\u7247\n\n\nnRF52832\n\n\n\n\n\n\n\u65f6\u949f\u9891\u7387\n\n\n64MHz\n\n\n\n\n\n\nFlash\n\n\n512KB\n\n\n\n\n\n\nSRAM\n\n\n96KB\n\n\n\n\n\n\n\u6570\u5b57\u8f93\u51fa\u7535\u538b\n\n\n1.8V\n\n\n\n\n\n\n\u6a21\u62df\u5f15\u811a\u6570\u91cf\n\n\n4\n\n\n\n\n\n\n\u6a21\u62df\u8f93\u5165\u7535\u538b\n\n\n1.8V\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n60x30mm\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n1.\nMicro USB\n - \u7528\u4e8e\u8c03\u8bd5\uff0c\u7f16\u7a0b\uff0c\u4f9b\u7535\u548c\u7535\u6c60\u5145\u7535\u3002\n\n\n2.\nLED \u6307\u793a\u706f\n\n\n\n\nUSR1\n - \u7528\u6237\u63a7\u5236 led\uff0c\u8fde\u63a5\u5230 \nP0.29\n\n\nBT\n  - \u84dd\u7259\u6307\u793a\u5668\u3002\u8fde\u63a5\u5230\u8bbe\u5907\u65f6\u6b64\u6307\u793a\u706f\u4eae\u8d77\u3002\n\n\nPWR\n - USB \u6216\u7535\u6c60\u63d2\u5165\u65f6\u4eae\u8d77\u3002\n\n\nCDC\n - Uart \u6570\u636e\u6307\u793a\u706f\u3002\n\n\nDAP\n - SWD \u6307\u793a\u706f\u3002\n\n\nMSD\n - \u5927\u5bb9\u91cf\u5b58\u50a8/Drag\nDrop \u6307\u793a\u706f\u3002\n\n\n\n\n3.\n\u7535\u6c60\u8fde\u63a5\u5668\n\n\n\n\n\u5145\u7535\u6307\u793a\u706f\n\n\nBLINK: \u65e0\u7535\u6c60\u63a5\u5165\n\n\nON: \u5145\u7535\u4e2d\n\n\nOFF: \u5145\u7535\u5b8c\u6210\n\n\n\n\n\n\n\n\n4.\n\u91cd\u7f6e\u6309\u94ae\n - \u6309\u4e0b\u4ee5\u91cd\u7f6e\u7cfb\u7edf\n\n\n5.\n\u7528\u6237\u6309\u94ae\n - \u8fde\u63a5\u5230 \nP0.27\n\n\n6.\nUART \u8c03\u8bd5\n\n\n7.\n\u5929\u7ebf\n\n\n8.\nNFC \u5929\u7ebf UFL \u8fde\u63a5\u5934\n\n\n9.\n\u5f15\u811a\n \u8be6\u89c1\u5f15\u811a\u56fe\n\n\nA.IC - \nNRF52832\n\n\nB.IC - \nLPC11U35\n\n\nC.IC - \nETA6003\n\n\n\u5f15\u811a\u56fe\n\n\n\n\n\n\nNote\n\n\n\u70b9\u51fb\u4e0a\u56fe\u67e5\u770b\u5927\u56fe\n\n\n\n\n\u8f6f\u4ef6\n\n\n\u5b89\u88c5\u9a71\u52a8\n\n\n\u70b9\u51fb\u4e0b\u8f7d \ndriver for Mbed\n.\n\n\n\u901a\u8fc7 micro USB \u7535\u7f06\u5c06\u677f\u63d2\u5165 PC\uff0c\u53cc\u51fb mbedWinSerial_16466.exe \u8fdb\u884c\u5b89\u88c5\uff0c\u7136\u540e\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u4e2d\u627e\u5230\u65b0\u7684\u8bbe\u5907\u3002\n\n\n\n\n\u9ad8\u7ea7\u529f\u80fd\u6307\u5357\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n[\u539f\u7406\u56fe]\n \nSchematics in Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nSchematics in PDF\n\n\n[\u9a71\u52a8\u4e0b\u8f7d]\n \nDriver for Mbed", 
            "title": "BLE Nitrogen"
        }, 
        {
            "location": "/BLE_Nitrogen/#_1", 
            "text": "\u5177\u6709 512kB Flash\uff0c64kB RAM \u7684 nRF52832 \u5fae\u63a7\u5236\u5668  Cortex M4  BLE  NFC    \u5e26\u7535\u6d41\u4fdd\u62a4\u7684 USB \u7535\u6e90  \u7535\u6c60\u7528\u7535\u7ba1\u7406  \u677f\u8f7d\u5145\u7535\u5668  \u7535\u6c60\u63d2\u5934  \u5145\u7535 LED \u6307\u793a\u706f    LPC11U35 \u677f\u8f7d SWD \u8c03\u8282\u5668  SWD \u8c03\u8282\u5668  USB \u81f3 Uart  Drag and Drop \u56fa\u4ef6\u5347\u7ea7  \u56fa\u4ef6\u5347\u7ea7\u540e\u81ea\u52a8\u91cd\u7f6e\u5e76\u8fd0\u884c    BLE \u529f\u8017\u6d4b\u91cf  On board \u7535\u6d41\u6d4b\u91cf\u7535\u8def  1uA \u6d4b\u91cf\u8303\u56f4  \u9ad8\u8fbe 150mA \u7535\u6d41\u6d4b\u91cf    7 LEDs  USR1, BT, PWR, CDC, DAP, MSD, Battery charge    \u4e24\u4e2a\u6309\u94ae  USR \u548c RESET(\u4e5f\u7528\u4e8e LPC11U35 \u56fa\u4ef6\u5347\u7ea7)    SWD \u8c03\u8bd5\u8fde\u63a5\u5668  nRF52832 SWD \u8fde\u63a5\u5668  nRF52832 Uart \u8fde\u63a5\u5668    \u677f\u8f7d\u82af\u7247\u5929\u7ebf  1.8V \u5de5\u4f5c\u7535\u538b  2x20 \u95f4\u8ddd 2.0mm \u5f15\u811a  \u5b8c\u5168\u517c\u5bb9 96Boards IoT \u6807\u51c6", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/BLE_Nitrogen/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570      \u82af\u7247  nRF52832    \u65f6\u949f\u9891\u7387  64MHz    Flash  512KB    SRAM  96KB    \u6570\u5b57\u8f93\u51fa\u7535\u538b  1.8V    \u6a21\u62df\u5f15\u811a\u6570\u91cf  4    \u6a21\u62df\u8f93\u5165\u7535\u538b  1.8V    \u5c3a\u5bf8  60x30mm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/BLE_Nitrogen/#_3", 
            "text": "1. Micro USB  - \u7528\u4e8e\u8c03\u8bd5\uff0c\u7f16\u7a0b\uff0c\u4f9b\u7535\u548c\u7535\u6c60\u5145\u7535\u3002  2. LED \u6307\u793a\u706f   USR1  - \u7528\u6237\u63a7\u5236 led\uff0c\u8fde\u63a5\u5230  P0.29  BT   - \u84dd\u7259\u6307\u793a\u5668\u3002\u8fde\u63a5\u5230\u8bbe\u5907\u65f6\u6b64\u6307\u793a\u706f\u4eae\u8d77\u3002  PWR  - USB \u6216\u7535\u6c60\u63d2\u5165\u65f6\u4eae\u8d77\u3002  CDC  - Uart \u6570\u636e\u6307\u793a\u706f\u3002  DAP  - SWD \u6307\u793a\u706f\u3002  MSD  - \u5927\u5bb9\u91cf\u5b58\u50a8/Drag Drop \u6307\u793a\u706f\u3002   3. \u7535\u6c60\u8fde\u63a5\u5668   \u5145\u7535\u6307\u793a\u706f  BLINK: \u65e0\u7535\u6c60\u63a5\u5165  ON: \u5145\u7535\u4e2d  OFF: \u5145\u7535\u5b8c\u6210     4. \u91cd\u7f6e\u6309\u94ae  - \u6309\u4e0b\u4ee5\u91cd\u7f6e\u7cfb\u7edf  5. \u7528\u6237\u6309\u94ae  - \u8fde\u63a5\u5230  P0.27  6. UART \u8c03\u8bd5  7. \u5929\u7ebf  8. NFC \u5929\u7ebf UFL \u8fde\u63a5\u5934  9. \u5f15\u811a  \u8be6\u89c1\u5f15\u811a\u56fe  A.IC -  NRF52832  B.IC -  LPC11U35  C.IC -  ETA6003", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/BLE_Nitrogen/#_4", 
            "text": "Note  \u70b9\u51fb\u4e0a\u56fe\u67e5\u770b\u5927\u56fe", 
            "title": "\u5f15\u811a\u56fe"
        }, 
        {
            "location": "/BLE_Nitrogen/#_5", 
            "text": "", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/BLE_Nitrogen/#_6", 
            "text": "\u70b9\u51fb\u4e0b\u8f7d  driver for Mbed .  \u901a\u8fc7 micro USB \u7535\u7f06\u5c06\u677f\u63d2\u5165 PC\uff0c\u53cc\u51fb mbedWinSerial_16466.exe \u8fdb\u884c\u5b89\u88c5\uff0c\u7136\u540e\u5728\u8bbe\u5907\u7ba1\u7406\u5668\u4e2d\u627e\u5230\u65b0\u7684\u8bbe\u5907\u3002", 
            "title": "\u5b89\u88c5\u9a71\u52a8"
        }, 
        {
            "location": "/BLE_Nitrogen/#_7", 
            "text": "", 
            "title": "\u9ad8\u7ea7\u529f\u80fd\u6307\u5357"
        }, 
        {
            "location": "/BLE_Nitrogen/#_8", 
            "text": "[\u539f\u7406\u56fe]   Schematics in Eagle File  [\u539f\u7406\u56fePDF]   Schematics in PDF  [\u9a71\u52a8\u4e0b\u8f7d]   Driver for Mbed", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/", 
            "text": "\u8be5\u6b3e\u4ea7\u54c1\u662f\u5728 BLE Bee \u548c Xadow BLE \u4e2d\u4f7f\u7528\u7684 SMD BLE \u6a21\u5757\u3002\u5b83\u57fa\u4e8e TI cc2541 \u82af\u7247\u5f00\u53d1\u7684\uff0c\u4e14\u901a\u8fc7\u4f4e\u6210\u672c\u6750\u6599\u5f00\u53d1\u96c6\u6210\u4e3a\u5f3a\u5927\u7684\u7f51\u7edc\u8282\u70b9\uff0c\u56e0\u6b64\u975e\u5e38\u9002\u5408\u8d85\u4f4e\u529f\u8017\u7cfb\u7edf\u3002\u8be5\u6a21\u5757\u4f53\u79ef\u5c0f\u5de7\u6613\u7528\uff0c\u5df2\u4f7f\u7528\u5236\u9020\u5546\u7684\u9884\u7f16\u7a0b\u56fa\u4ef6\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 AT \u6307\u4ee4\u5feb\u901f\u6784\u5efa\u84dd\u7259\u901a\u4fe1\u3002\u652f\u6301\u4e0e iPhone\uff0cipad \u548c Android 4.3 \u7684\u84dd\u7259\u901a\u4fe1\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u84dd\u7259\u534f\u8bae : \u84dd\u7259\u89c4\u683c V4.0 BLE\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u7387 : 2.4 GHz ISM band\n\n\n\n\n\n\n\u63a5\u53e3\u65b9\u5f0f : \u4e32\u53e3\n\n\n\n\n\n\n30 \u7c73\u4ee5\u5185\u7684\u5f00\u653e\u73af\u5883\u53ef\u5b9e\u73b0\u6a21\u5757\u4e4b\u95f4\u7684\u901a\u4fe1\n\n\n\n\n\n\n\u6a21\u5757\u4e4b\u95f4\u53d1\u9001\u548c\u63a5\u6536\u65e0\u5b57\u8282\u9650\u5236\n\n\n\n\n\n\n\u6a21\u5757\u4e4b\u95f4 : GFSK (Gaussian Frequency Shift Keying \u9ad8\u65af\u9891\u79fb\u952e\u63a7)\n\n\n\n\n\n\n\u4f20\u8f93\u529f\u7387 : - DBM, 23-6 DBM, 0 DBM, 6 DBM, \u53ef\u4ee5\u901a\u8fc7 AT \u6307\u4ee4\u4fee\u6539\n\n\n\n\n\n\n\u4f7f\u7528 TI CC2541 \u82af\u7247\uff0c\u914d\u7f6e\u7a7a\u95f4\u4e3a 256 KB\uff0c\u652f\u6301 AT \u6307\u4ee4\uff0c\u7528\u6237\u53ef\u6839\u636e\u9700\u8981\u66f4\u6539\u89d2\u8272(\u4e3b\uff0c\u4ece\u6a21\u5f0f)\u548c\u4e32\u53e3\u6ce2\u7279\u7387\uff0c\u8bbe\u5907\u540d\u79f0\uff0c\u5339\u914d\u53c2\u6570\u5982\u5bc6\u7801\u3002\n\n\n\n\n\n\n\u7535\u6e90 : + 3.3 VDC 50 mA\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6 : - 5 ~ + 65 \u6444\u6c0f\u5ea6\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n \u9879\u76ee\n\n\n\n \u53c2\u6570\n\n\n\n\n\n \u5fae\u5904\u7406\u5668\n\n\n\n CC2541\n\n\n\n\n\n \u5b9e\u7528\u529f\u80fd\n\n\n\n \u652f\u6301 AT \u6307\u4ee4\uff0c\u7528\u6237\u53ef\u6839\u636e\u9700\u8981\u66f4\u6539\u89d2\u8272(\u4e3b\uff0c\u4ece\u6a21\u5f0f)\u548c\u4e32\u53e3\u6ce2\u7279\u7387\uff0c\u8bbe\u5907\u540d\u79f0\uff0c\u5339\u914d\u53c2\u6570\n\n\n\n\n\n \u5916\u5f62\u5c3a\u5bf8\n\n\n\n 13.5mm x 18.5mm x 2.3mm\n\n\n\n\n\n \u7535\u6e90\n\n\n\n 3.3V\n\n\n\n\n\n \u901a\u4fe1\u534f\u8bae\n\n\n\n Uart(3.3V LVTTL)\n\n\n\n\n\n IO counts\n\n\n\n 2\n\n\n\n\n\n Key input IO\n\n\n\n 1\n\n\n\n\n\n LED Indicators IO\n\n\n\n 1\n\n\n\n\n\n \u8fde\u63a5\u517c\u5bb9\n\n\n\n \u53ef\u8fde\u63a5\u81f3 XBee\n\n\n\n\u7535\u6c14\u7279\u6027\n\n\n\n\n\n\n\n\n \u9879\u76ee\n\n\n\n \u6700\u5c0f\u503c\n\n\n\n \u5178\u578b\u503c\n\n\n\n \u6700\u5927\u503c\n\n\n\n \u5355\u4f4d\n\n\n\n\n\n \u6700\u5927\u8f93\u5165\u7535\u538b\n\n\n\n -0.3\n\n\n\n\n\n\n\n 3.6\n\n\n\n V\n\n\n\n\n\n \u5de5\u4f5c\u8f93\u5165\u7535\u538b\n\n\n\n 2.0\n\n\n\n 3.3\n\n\n\n 3.6\n\n\n\n V\n\n\n\n\n\n \u4f20\u8f93\u7535\u6d41\n\n\n\n\n\n\n\n 15\n\n\n\n\n\n\n\n mA\n\n\n\n\n\n \u63a5\u6536\u7535\u6d41\n\n\n\n\n\n\n\n 8.5\n\n\n\n\n\n\n\n mA\n\n\n\n\n\n \u6df1\u7761\u7720\u7535\u6d41\n\n\n\n\n\n\n\n 600\n\n\n\n\n\n\n\n uA\n\n\n\n\n\n \u5de5\u4f5c\u6e29\u5ea6\n\n\n\n -40\n\n\n\n\n\n\n\n +65\n\n\n\n \u00b0C\n\n\n\n\u5f15\u811a\u5b9a\u4e49\n\n\n\n\n\n\n\n\n\n\n \u5f15\u811a\u53f7\n\n\n\n \u540d\u79f0\n\n\n\n \u529f\u80fd\n\n\n\n\n\n 1\n\n\n\n UART_RTS\n\n\n\n UART\n\n\n\n\n\n 2\n\n\n\n UART_TX\n\n\n\n UART\n\n\n\n\n\n 3\n\n\n\n UART_CTS\n\n\n\n UART\n\n\n\n\n\n 4\n\n\n\n UART_RX\n\n\n\n UART\n\n\n\n\n\n 5\n\n\n\n NC\n\n\n\n \u4e0d\u8fde\u63a5\n\n\n\n\n\n 6\n\n\n\n NC\n\n\n\n\u4e0d\u8fde\u63a5\n\n\n\n\n\n 7\n\n\n\n NV\n\n\n\n\n\n\n\n\n\n 8\n\n\n\n NV\n\n\n\n\n\n\n\n\n\n 9\n\n\n\n VCC\n\n\n\n \u63a5 3.3V \u7535\u6e90\n\n\n\n\n\n 10\n\n\n\n NC\n\n\n\n\u4e0d\u8fde\u63a5\n\n\n\n\n\n 11\n\n\n\n RESETB\n\n\n\n \u91cd\u7f6e\uff0c\u81f3\u5c11\u4fdd\u6301 5ms \u4f4e\u7535\u5e73\u6709\u6548\n\n\n\n\n\n 12\n\n\n\n GND\n\n\n\n GND\n\n\n\n\n\n 13\n\n\n\n PIO3\n\n\n\n IO \u53e3\uff0c\u8fde\u63a5\u5230 DHT11/DS18B20\n\n\n\n\n\n 14\n\n\n\n PIO2\n\n\n\n \u6570\u5b57\u8f93\u5165\u8f93\u51fa\n\n\n\n\n\n 15\n\n\n\n PIO1\n\n\n\n LED \u6307\u793a\u706f\n\n\n\n\n\n 16\n\n\n\n PIO0\n\n\n\n \u6309\u94ae\u5f15\u811a\n\n\n\n\nAT \u6307\u4ee4 \n \u914d\u7f6e\n\n\n\n\n**1\uff09    Query the native MAC address (\u67e5\u8be2\u672c\u5730 MAC \u5730\u5740)\n**\nSend: AT+ADDR?\n\n\nSend after a successful return: OK+LADD: MAC address (address for 12 string)\n\n\n**2\uff09    Query the baud rate (\u67e5\u8be2\u6ce2\u7279\u7387)\n**\nSend: AT+BAUD?\n\n\nSend after a successful return: OK+Get: [para1]\n\n\nScope of para1:0 ~ 8. The parameters corresponding lists as below:\n\n\n0 -------- 9600\n\n1 -------- 19200\n\n2 -------- 38400\n\n3 -------- 57600\n\n4 -------- 115200\n\n5 -------- 4800\n\n6 -------- 2400\n\n7 -------- 1200\n\n8 -------- 230400\n\nDefault: 0(9600)\n\n\n**3\uff09    Set the baud rate (\u8bbe\u7f6e\u6ce2\u7279\u7387)\n**\nSend: AT+BAUD[para1]\n\n\nSend after a successful return: OK+Set:[para1]\n\n\nExample: send: AT + BAUD1, return: OK+Set: 2.The baud rate is set to 19200.\n\n\nNote: after the switch to the 1200, module will no longer support the configurations of the AT command, and press the PIO0 under standby, module can restore the factory Settings.Do not recommend using the baud rate.After setting the baud rate, modules should be on electricity, anew set parameters can take effect.\n\n\n**4\uff09    from the device connected to the bluetooth address specified (\u4ece\u8bbe\u5907\u8fde\u63a5\u5230\u6307\u5b9a\u7684\u84dd\u7259\u5730\u5740)\n**\nSend: AT+CON[para1]\n\n\nSend after a successful return: OK+CONN[para2]\n\n\nPara2 range is: A, E, F\n\n\nExample: from the bluetooth address is: 0017EA0943AE, sending the AT+CON0017EA0943AE, module returns: OK+CONNA or OK+CONNF CONNE or OK.\n\n\n**5\uff09    removal equipment matching information (\u53bb\u9664\u8bbe\u5907\u5339\u914d\u4fe1\u606f)\n**\nSend: AT+CLEAR\n\n\nSend after a successful return: OK+CLEAR\n\n\nClear success had connected device address code information.\n\n\n**6\uff09    query module working mode (\u67e5\u8be2\u6a21\u5757\u5de5\u4f5c\u6a21\u5f0f)\n**\nSend: AT+MODE?\n\n\nSend after a successful return: OK+Get: [para]\n\n\nPara: the range of 0 ~ 2. 0 represents passthrough mode, on behalf of the PIO acquisition + remote control + 1 passthrough, 2 representative passthrough + remote control mode.The default is 0.\n\n\n**7\uff09    set module working mode (\u8bbe\u7f6e\u6a21\u5757\u5de5\u4f5c\u6a21\u5f0f):\n**\nSend: AT+MODE []\n\n\nSend after a successful return: OK+Set: [para]\n\n\n**8\uff09    query device name (\u67e5\u8be2\u8bbe\u5907\u540d\u79f0)\n**\nSend: AT+NAME?\n\n\nSend after a successful return: OK+NAME [para1]\n\n\n**9\uff09    set the device name (\u8bbe\u7f6e\u8bbe\u5907\u540d\u79f0)\n**\nSend: AT+NAME [para1]\n\n\nSend after a successful return: OK+Set: [para1]\n\n\nExample: Set the device name to Seeed, sending the AT + NAMESeeed, return OK + Set: Seeed AT this time, the name of the bluetooth module has been changed to Seeed.\nNote: after the instruction execution, required to electricity, set the parameters of the approval.\n\n\n**10\uff09   query matching password (\u67e5\u8be2\u5339\u914d\u5bc6\u7801)\n**\nSend: AT+PASS?\n\n\nSend after a successful return: OK+PASS: [para1]\n\n\nPara1 range is 000000 ~ 999999, the default is 000000.\n\n\n**11\uff09   pairing set password (\u914d\u5bf9\u8bbe\u7f6e\u5bc6\u7801)\n**\nSend the AT+PASS [para1]\n\n\nSend after a successful return: OK+Set: [para1]\n\n\n**12\uff09   restore factory Settings (\u6062\u590d\u51fa\u5382\u8bbe\u7f6e)\n**\nThe AT+RENEW send\n\n\nSend after a successful return: OK+RENEW\n\n\nRestore the default factory Settings module, the module Settings will be reset so, back to the factory with the status of the factory default, delay module 500 ms after the restart.If no need, please be careful.\n\n\n**13\uff09   module reset (\u91cd\u7f6e\u6a21\u5757)\n**\nSend: AT+RESET\n\n\nSend after a successful return: OK+RESET\n\n\nAfter the instruction execution module will delay 500 ms after the restart.\n\n\n**14\uff09   set the master-slave mode (\u8bbe\u7f6e\u4e3b\u4ece\u6a21\u5f0f)\n**\nSend: AT + ROLE [para1]\n\n\nSend after a successful return: OK+Set: [para1]\n\n\n\u793a\u4f8b\u4ee3\u7801\n\n\n\n\n//master\n\n/*\n\n This example code is in the public domain.\n\n */\n#include \nSoftwareSerial.h\n\n\nSoftwareSerial mySerial(2, 3); // RX, TX\n\nvoid setup()\n{\n    // Open serial communications and wait for port to open:\n    Serial.begin(9600);\n    while (!Serial) {\n        ; // wait for serial port to connect. Needed for Leonardo only\n    }\n\n\n    Serial.println(\nGoodnight moon!\n);\n\n    // set the data rate for the SoftwareSerial port\n    mySerial.begin(9600);\n    // set master\n    mySerial.print(\nAT+ROLE1\n);\n    delay(10000);\n\n\n}\n\nvoid loop() // run over and over\n{\n\n    // set the data rate for the SoftwareSerial port\n    mySerial.print(\ntest I am master  \n);\n    delay(10000);\n    if (mySerial.available())\n    Serial.write(mySerial.read());\n    if (Serial.available())\n    mySerial.write(Serial.read());\n}\n\n\n//slave\n\n/*\n\n This example code is in the public domain.\n\n */\n#include \nSoftwareSerial.h\n\n\nSoftwareSerial mySerial(2, 3); // RX, TX\n\nvoid setup()\n{\n    // Open serial communications and wait for port to open:\n    Serial.begin(9600);\n    while (!Serial) {\n        ; // wait for serial port to connect. Needed for Leonardo only\n    }\n\n\n    Serial.println(\nGoodnight moon!\n);\n\n    // set the data rate for the SoftwareSerial port\n    mySerial.begin(9600);\n    // set slave\n    mySerial.print(\nAT+ROLE0\n);\n    delay(10000);\n\n\n}\n\nvoid loop() // run over and over\n{\n\n    // set the data rate for the SoftwareSerial port\n    mySerial.print(\ntest I am slave \n);\n    delay(10000);\n    if (mySerial.available())\n    Serial.write(mySerial.read());\n    if (Serial.available())\n    mySerial.write(Serial.read());\n}\n\n\n\n\u76f8\u5173\u9879\u76ee\n\n\n\n\n\u4ec0\u4e48\u662f Grove-Serial Bluetooth\n\n\n\n\nSerial Bluetooth \u8bbe\u8ba1\u7528\u4e8e\u65e0\u7ebf\u900f\u660e\u4e32\u884c\u8fde\u63a5\u8bbe\u7f6e\u3002\n\n\n\u4e32\u884c\u7aef\u53e3\u84dd\u7259\u6a21\u5757\u662f\u5b8c\u5168\u5408\u683c\u7684 Bluetooth V2.0+EDR(Enhanced Data Rate)\uff0c3Mbps \u8c03\u5236\u5e76\u5177\u6709\u5b8c\u6574\u7684 2.4GHz \u65e0\u7ebf\u7535\u6536\u53d1\u5668\u548c\u57fa\u9891\u3002\n\n\n\u5b83\u91c7\u7528 CMOS \u6280\u672f\u548c AFH (Adaptive Frequency Hopping Feature) \u7684 CSR Bluecore 04-External \u5355\u82af\u7247\u84dd\u7259\u7cfb\u7edf\u3002\n\n\nIR Remote\n\n\n\n\n\u8fd9\u4e2a\u9879\u76ee\u4f7f\u7528 Grove - Water Sensor \u4e3a\u7ed9\u690d\u7269\u6d47\u6c34\u521b\u9020\u4e00\u4e2a\u7b80\u5355\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\n\u6709\u4e86\u8fd9\u4e2a\u6f14\u793a\u6211\u4eec\u53ef\u4ee5 :\n\n\n\n\n\n\n\u5c06\u6240\u6709\u8fdc\u7a0b\u547d\u4ee4\u96c6\u6210\u5230\u4e00\u4e2a Android \u8bbe\u5907\u4e2d\n\n\n\n\n\n\nSeeeduino \u548c Android \u9762\u677f\u901a\u8fc7\u84dd\u7259\u8fdb\u884c\u901a\u8bdd\u3002\n\n\n\n\n\n\n\u901a\u8fc7 IR \u8fdc\u7a0b\u63a7\u5236\n\n\n\n\n\n\nI want to make it.\n\n\nMore Awesome Projects by Bluetooth", 
            "title": "Bluetooth_V4.0_HM_11_BLE_Module"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/#_1", 
            "text": "\u84dd\u7259\u534f\u8bae : \u84dd\u7259\u89c4\u683c V4.0 BLE    \u5de5\u4f5c\u9891\u7387 : 2.4 GHz ISM band    \u63a5\u53e3\u65b9\u5f0f : \u4e32\u53e3    30 \u7c73\u4ee5\u5185\u7684\u5f00\u653e\u73af\u5883\u53ef\u5b9e\u73b0\u6a21\u5757\u4e4b\u95f4\u7684\u901a\u4fe1    \u6a21\u5757\u4e4b\u95f4\u53d1\u9001\u548c\u63a5\u6536\u65e0\u5b57\u8282\u9650\u5236    \u6a21\u5757\u4e4b\u95f4 : GFSK (Gaussian Frequency Shift Keying \u9ad8\u65af\u9891\u79fb\u952e\u63a7)    \u4f20\u8f93\u529f\u7387 : - DBM, 23-6 DBM, 0 DBM, 6 DBM, \u53ef\u4ee5\u901a\u8fc7 AT \u6307\u4ee4\u4fee\u6539    \u4f7f\u7528 TI CC2541 \u82af\u7247\uff0c\u914d\u7f6e\u7a7a\u95f4\u4e3a 256 KB\uff0c\u652f\u6301 AT \u6307\u4ee4\uff0c\u7528\u6237\u53ef\u6839\u636e\u9700\u8981\u66f4\u6539\u89d2\u8272(\u4e3b\uff0c\u4ece\u6a21\u5f0f)\u548c\u4e32\u53e3\u6ce2\u7279\u7387\uff0c\u8bbe\u5907\u540d\u79f0\uff0c\u5339\u914d\u53c2\u6570\u5982\u5bc6\u7801\u3002    \u7535\u6e90 : + 3.3 VDC 50 mA    \u5de5\u4f5c\u6e29\u5ea6 : - 5 ~ + 65 \u6444\u6c0f\u5ea6", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/#_2", 
            "text": "\u9879\u76ee   \u53c2\u6570    \u5fae\u5904\u7406\u5668   CC2541    \u5b9e\u7528\u529f\u80fd   \u652f\u6301 AT \u6307\u4ee4\uff0c\u7528\u6237\u53ef\u6839\u636e\u9700\u8981\u66f4\u6539\u89d2\u8272(\u4e3b\uff0c\u4ece\u6a21\u5f0f)\u548c\u4e32\u53e3\u6ce2\u7279\u7387\uff0c\u8bbe\u5907\u540d\u79f0\uff0c\u5339\u914d\u53c2\u6570    \u5916\u5f62\u5c3a\u5bf8   13.5mm x 18.5mm x 2.3mm    \u7535\u6e90   3.3V    \u901a\u4fe1\u534f\u8bae   Uart(3.3V LVTTL)    IO counts   2    Key input IO   1    LED Indicators IO   1    \u8fde\u63a5\u517c\u5bb9   \u53ef\u8fde\u63a5\u81f3 XBee", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/#_3", 
            "text": "\u9879\u76ee   \u6700\u5c0f\u503c   \u5178\u578b\u503c   \u6700\u5927\u503c   \u5355\u4f4d    \u6700\u5927\u8f93\u5165\u7535\u538b   -0.3     3.6   V    \u5de5\u4f5c\u8f93\u5165\u7535\u538b   2.0   3.3   3.6   V    \u4f20\u8f93\u7535\u6d41     15     mA    \u63a5\u6536\u7535\u6d41     8.5     mA    \u6df1\u7761\u7720\u7535\u6d41     600     uA    \u5de5\u4f5c\u6e29\u5ea6   -40     +65   \u00b0C", 
            "title": "\u7535\u6c14\u7279\u6027"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/#_4", 
            "text": "\u5f15\u811a\u53f7   \u540d\u79f0   \u529f\u80fd    1   UART_RTS   UART    2   UART_TX   UART    3   UART_CTS   UART    4   UART_RX   UART    5   NC   \u4e0d\u8fde\u63a5    6   NC  \u4e0d\u8fde\u63a5    7   NV      8   NV      9   VCC   \u63a5 3.3V \u7535\u6e90    10   NC  \u4e0d\u8fde\u63a5    11   RESETB   \u91cd\u7f6e\uff0c\u81f3\u5c11\u4fdd\u6301 5ms \u4f4e\u7535\u5e73\u6709\u6548    12   GND   GND    13   PIO3   IO \u53e3\uff0c\u8fde\u63a5\u5230 DHT11/DS18B20    14   PIO2   \u6570\u5b57\u8f93\u5165\u8f93\u51fa    15   PIO1   LED \u6307\u793a\u706f    16   PIO0   \u6309\u94ae\u5f15\u811a", 
            "title": "\u5f15\u811a\u5b9a\u4e49"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/#at", 
            "text": "**1\uff09    Query the native MAC address (\u67e5\u8be2\u672c\u5730 MAC \u5730\u5740)\n**\nSend: AT+ADDR?  Send after a successful return: OK+LADD: MAC address (address for 12 string)  **2\uff09    Query the baud rate (\u67e5\u8be2\u6ce2\u7279\u7387)\n**\nSend: AT+BAUD?  Send after a successful return: OK+Get: [para1]  Scope of para1:0 ~ 8. The parameters corresponding lists as below:  0 -------- 9600 \n1 -------- 19200 \n2 -------- 38400 \n3 -------- 57600 \n4 -------- 115200 \n5 -------- 4800 \n6 -------- 2400 \n7 -------- 1200 \n8 -------- 230400 \nDefault: 0(9600)  **3\uff09    Set the baud rate (\u8bbe\u7f6e\u6ce2\u7279\u7387)\n**\nSend: AT+BAUD[para1]  Send after a successful return: OK+Set:[para1]  Example: send: AT + BAUD1, return: OK+Set: 2.The baud rate is set to 19200.  Note: after the switch to the 1200, module will no longer support the configurations of the AT command, and press the PIO0 under standby, module can restore the factory Settings.Do not recommend using the baud rate.After setting the baud rate, modules should be on electricity, anew set parameters can take effect.  **4\uff09    from the device connected to the bluetooth address specified (\u4ece\u8bbe\u5907\u8fde\u63a5\u5230\u6307\u5b9a\u7684\u84dd\u7259\u5730\u5740)\n**\nSend: AT+CON[para1]  Send after a successful return: OK+CONN[para2]  Para2 range is: A, E, F  Example: from the bluetooth address is: 0017EA0943AE, sending the AT+CON0017EA0943AE, module returns: OK+CONNA or OK+CONNF CONNE or OK.  **5\uff09    removal equipment matching information (\u53bb\u9664\u8bbe\u5907\u5339\u914d\u4fe1\u606f)\n**\nSend: AT+CLEAR  Send after a successful return: OK+CLEAR  Clear success had connected device address code information.  **6\uff09    query module working mode (\u67e5\u8be2\u6a21\u5757\u5de5\u4f5c\u6a21\u5f0f)\n**\nSend: AT+MODE?  Send after a successful return: OK+Get: [para]  Para: the range of 0 ~ 2. 0 represents passthrough mode, on behalf of the PIO acquisition + remote control + 1 passthrough, 2 representative passthrough + remote control mode.The default is 0.  **7\uff09    set module working mode (\u8bbe\u7f6e\u6a21\u5757\u5de5\u4f5c\u6a21\u5f0f):\n**\nSend: AT+MODE []  Send after a successful return: OK+Set: [para]  **8\uff09    query device name (\u67e5\u8be2\u8bbe\u5907\u540d\u79f0)\n**\nSend: AT+NAME?  Send after a successful return: OK+NAME [para1]  **9\uff09    set the device name (\u8bbe\u7f6e\u8bbe\u5907\u540d\u79f0)\n**\nSend: AT+NAME [para1]  Send after a successful return: OK+Set: [para1]  Example: Set the device name to Seeed, sending the AT + NAMESeeed, return OK + Set: Seeed AT this time, the name of the bluetooth module has been changed to Seeed.\nNote: after the instruction execution, required to electricity, set the parameters of the approval.  **10\uff09   query matching password (\u67e5\u8be2\u5339\u914d\u5bc6\u7801)\n**\nSend: AT+PASS?  Send after a successful return: OK+PASS: [para1]  Para1 range is 000000 ~ 999999, the default is 000000.  **11\uff09   pairing set password (\u914d\u5bf9\u8bbe\u7f6e\u5bc6\u7801)\n**\nSend the AT+PASS [para1]  Send after a successful return: OK+Set: [para1]  **12\uff09   restore factory Settings (\u6062\u590d\u51fa\u5382\u8bbe\u7f6e)\n**\nThe AT+RENEW send  Send after a successful return: OK+RENEW  Restore the default factory Settings module, the module Settings will be reset so, back to the factory with the status of the factory default, delay module 500 ms after the restart.If no need, please be careful.  **13\uff09   module reset (\u91cd\u7f6e\u6a21\u5757)\n**\nSend: AT+RESET  Send after a successful return: OK+RESET  After the instruction execution module will delay 500 ms after the restart.  **14\uff09   set the master-slave mode (\u8bbe\u7f6e\u4e3b\u4ece\u6a21\u5f0f)\n**\nSend: AT + ROLE [para1]  Send after a successful return: OK+Set: [para1]", 
            "title": "AT \u6307\u4ee4 &amp; \u914d\u7f6e"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/#_5", 
            "text": "//master /*\n\n This example code is in the public domain.\n\n */\n#include  SoftwareSerial.h \n\nSoftwareSerial mySerial(2, 3); // RX, TX\n\nvoid setup()\n{\n    // Open serial communications and wait for port to open:\n    Serial.begin(9600);\n    while (!Serial) {\n        ; // wait for serial port to connect. Needed for Leonardo only\n    }\n\n\n    Serial.println( Goodnight moon! );\n\n    // set the data rate for the SoftwareSerial port\n    mySerial.begin(9600);\n    // set master\n    mySerial.print( AT+ROLE1 );\n    delay(10000);\n\n\n}\n\nvoid loop() // run over and over\n{\n\n    // set the data rate for the SoftwareSerial port\n    mySerial.print( test I am master   );\n    delay(10000);\n    if (mySerial.available())\n    Serial.write(mySerial.read());\n    if (Serial.available())\n    mySerial.write(Serial.read());\n} \n//slave /*\n\n This example code is in the public domain.\n\n */\n#include  SoftwareSerial.h \n\nSoftwareSerial mySerial(2, 3); // RX, TX\n\nvoid setup()\n{\n    // Open serial communications and wait for port to open:\n    Serial.begin(9600);\n    while (!Serial) {\n        ; // wait for serial port to connect. Needed for Leonardo only\n    }\n\n\n    Serial.println( Goodnight moon! );\n\n    // set the data rate for the SoftwareSerial port\n    mySerial.begin(9600);\n    // set slave\n    mySerial.print( AT+ROLE0 );\n    delay(10000);\n\n\n}\n\nvoid loop() // run over and over\n{\n\n    // set the data rate for the SoftwareSerial port\n    mySerial.print( test I am slave  );\n    delay(10000);\n    if (mySerial.available())\n    Serial.write(mySerial.read());\n    if (Serial.available())\n    mySerial.write(Serial.read());\n}", 
            "title": "\u793a\u4f8b\u4ee3\u7801"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/#_6", 
            "text": "", 
            "title": "\u76f8\u5173\u9879\u76ee"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/#grove-serial-bluetooth", 
            "text": "Serial Bluetooth \u8bbe\u8ba1\u7528\u4e8e\u65e0\u7ebf\u900f\u660e\u4e32\u884c\u8fde\u63a5\u8bbe\u7f6e\u3002  \u4e32\u884c\u7aef\u53e3\u84dd\u7259\u6a21\u5757\u662f\u5b8c\u5168\u5408\u683c\u7684 Bluetooth V2.0+EDR(Enhanced Data Rate)\uff0c3Mbps \u8c03\u5236\u5e76\u5177\u6709\u5b8c\u6574\u7684 2.4GHz \u65e0\u7ebf\u7535\u6536\u53d1\u5668\u548c\u57fa\u9891\u3002  \u5b83\u91c7\u7528 CMOS \u6280\u672f\u548c AFH (Adaptive Frequency Hopping Feature) \u7684 CSR Bluecore 04-External \u5355\u82af\u7247\u84dd\u7259\u7cfb\u7edf\u3002", 
            "title": "\u4ec0\u4e48\u662f Grove-Serial Bluetooth"
        }, 
        {
            "location": "/Bluetooth_V4.0_HM_11_BLE_Module/#ir-remote", 
            "text": "\u8fd9\u4e2a\u9879\u76ee\u4f7f\u7528 Grove - Water Sensor \u4e3a\u7ed9\u690d\u7269\u6d47\u6c34\u521b\u9020\u4e00\u4e2a\u7b80\u5355\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002  \u6709\u4e86\u8fd9\u4e2a\u6f14\u793a\u6211\u4eec\u53ef\u4ee5 :    \u5c06\u6240\u6709\u8fdc\u7a0b\u547d\u4ee4\u96c6\u6210\u5230\u4e00\u4e2a Android \u8bbe\u5907\u4e2d    Seeeduino \u548c Android \u9762\u677f\u901a\u8fc7\u84dd\u7259\u8fdb\u884c\u901a\u8bdd\u3002    \u901a\u8fc7 IR \u8fdc\u7a0b\u63a7\u5236    I want to make it.  More Awesome Projects by Bluetooth", 
            "title": "IR Remote"
        }, 
        {
            "location": "/Grove_System/", 
            "text": "\u4ec0\u4e48\u662fGrove\u7cfb\u7edf?\n\n\nGrove\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u6807\u51c6\u8fde\u63a5\u5668\u539f\u578b\u7cfb\u7edf\u3002Grove\u91c7\u7528\u79ef\u6728\u5f0f\u7ec4\u88c5\u7535\u5b50\u6280\u672f\u3002\u4e0e\u57fa\u4e8e\u8df3\u7ebf\u6216\u710a\u63a5\u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u8fde\u63a5\uff0c\u8bd5\u9a8c\u548c\u6784\u5efa\u66f4\u5bb9\u6613\uff0c\u5e76\u7b80\u5316\u4e86\u5b66\u4e60\u7cfb\u7edf\u3002Grove\u7cfb\u7edf\u5141\u8bb8\u4f60\u6784\u5efa\u771f\u6b63\u7684\u7cfb\u7edf\u3002\u56e0\u800c\u5b83\u9700\u8981\u4e00\u4e9b\u5b66\u4e60\u548c\u4e13\u4e1a\u77e5\u8bc6\u624d\u80fd\u6b63\u786e\u5730\u5c06\u7269\u4ef6\u8054\u63a5\u8d77\u6765\u3002\n\n\nGrove\u7cfb\u7edf\u7531\u57fa\u672c\u5904\u7406\u5355\u5143\uff08\u6811\u5e72\uff09\u548c\u5177\u6709\u6807\u51c6\u5316\u8fde\u63a5\u5668\u7684\u5404\u79cd\u6a21\u5757\uff08\u6811\u679d\uff09\u7ec4\u6210\u3002Grove\u7cfb\u7edf\u7684\u521b\u59cb\u4eba\u4eec\uff08seeediuno\u56e2\u961f\uff09\u66fe\u7ecf\u8bd5\u56fe\u7528\u201c\u6811\u5e72\u201d\u548c\u201c\u6811\u679d\u201d\u6765\u547d\u540d\u8fd9\u4e9b\u5355\u5143\u548c\u6a21\u5757\uff0c\u7136\u800c\u77ed\u6682\u7684\u7ea0\u7ed3\u4e4b\u540e\u4ed6\u4eec\u679c\u65ad\u653e\u5f03\uff0c\u4e3a\u4e86\u4e0d\u7ed9\u60a8\u9020\u6210\u56f0\u60d1\uff0cseeed\u5c06\u4efb\u4f55\u53ef\u80fd\u9020\u6210\u6df7\u6dc6\u7684\u4e1c\u897f\u90fd\u5f03\u82e5\u655d\u5c63\u3002\n\n\n\u57fa\u672c\u5355\u5143\uff08\u901a\u5e38\u4e3a\u5fae\u5904\u7406\u5668\uff09\u5141\u8bb8\u4eceGrove\u6a21\u5757\u8f7b\u677e\u8fde\u63a5\u4efb\u4f55\u8f93\u5165\u6216\u8f93\u51fa\u3002\u6bcf\u4e2aGrove\u6a21\u5757\u901a\u5e38\u90fd\u53ef\u4ee5\u5904\u7406\u5355\u4e2a\u529f\u80fd\uff0c\u4f8b\u5982\u7b80\u5355\u7684\u6309\u94ae\u6216\u66f4\u590d\u6742\u7684\u5fc3\u7387\u4f20\u611f\u5668\u3002\n\n\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u5904\u7406\u5355\u5143\u6ca1\u6709Grove\u63a5\u53e3\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528Grove \u8f6cPin Header \u8f6c\u63a5\u7ebf\uff0c\u4eceRaspberry Pi\u6216Arduino\u7684\u9488\u811a\u8fde\u63a5\u5230Grove\u6a21\u5757\u3002\n\n\nGrove \u9879\u76ee\n\n\n\u4ee5\u4e0b\u662f\u4f7f\u7528Grove\u8fdb\u884c\u7684\u4e00\u4e9b\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\uff0c\u66f4\u591a\u9879\u76ee\u8bf7\u70b9\u51fb \n\u793a\u4f8b\n \u6216\u8005 \n\u6307\u5357\n.\n\n\n\n\n\n\n\n\nDIY a Humidifier\n\n\nPersonal Voice Assistant\n\n\nAcrylic Monitor Stand\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSensor hub \n Win10 IoT\n\n\nSteam-punk Style Award\n\n\nPlant Watering Device\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWi-Fi Speaker\n\n\nDIY a toy car\n\n\nRetro Wooden Lamp\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPokemon Go SAFETY BADGE\n\n\nMake a Wooden Gun\n\n\nQuality of Life Meter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHackable RGB ornament\n\n\nThe Internet Of Led Wall\n\n\nPI Game Box\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\nMAKE IT NOW!\n\n\n\n\n\n\n\n\nGrove \u6a21\u5757\u7684\u5c3a\u5bf8\n\n\n\u4e00\u5171\u6709\u4e94\u79cd\u5c3a\u5bf8\u7684Grove\u6a21\u5757\n\n\n\n\n\n\n\n\n1X1\n\n\n1X2\n\n\n1X3\n\n\n2X2\n\n\n2X3\n\n\n\n\n\n\n\n\n\n\n20x20mm\n\n\n20x40mm\n\n\n20x60mm\n\n\n40x40mm\n\n\n40x60mm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u5982\u4f55\u5c06Grove\u8fde\u63a5\u5230\u60a8\u7684\u63a7\u5236\u677f\n\n\n\u5982\u679c\u60a8\u7684\u63a7\u5236\u677f\u4e0a\u6ca1\u6709Grove\u8fde\u63a5\u5668\uff0c\u5219\u9700\u8981\u4e00\u4e2aGrove\u6269\u5c55\u677f\u6765\u8fde\u63a5Grove\u6a21\u5757\u3002Grove\u6269\u5c55\u677f\u63d0\u4f9b\u5904\u7406\u80fd\u529b\uff0c\u53ef\u63a5\u6536\u4f20\u611f\u5668\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u8f93\u51fa\u7ed9\u6267\u884c\u5668\u3002\u73b0\u5728\u6211\u4eec\u5df2\u6709\u4e13\u4e3a\u5404\u79cd\u5e73\u53f0\u7684\u8bbe\u8ba1\u7684\u591a\u6b3eGrove\u6269\u5c55\u677f\uff0c\u5305\u62ecArduino UNO\uff0cParticle Phone\uff0cBeagleBone\u7b49\u3002\n\n\n\n\n\n\n\n\nArduino \u6269\u5c55\u677f\n\n\nBeagleBone board \u6269\u5c55\u677f\n\n\nArduino Mega \u6269\u5c55\u677f\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIOIO-OTG\n\n\nParticle Photon\n\n\nNodeMCU\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\n!!!\u6ce8\u610f\n     Arduino Base Shield \u9002\u7528\u4e8e\u4e0b\u5217\u6838\u5fc3\u677f:\n\n\n* Arduino UNO/Leonardo\n* Seeeduino V3/4/4.1/Lite/Clio/Lotus/Stalker\n* LinkIt ONE\n\n\n\n\n\nGrove\u6a21\u5757\u63a5\u53e3\n\n\n\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230Grove\u7535\u7f06\u67094\u79cd\u989c\u8272\u3002\n\n\n\n\npin 1\n - \u9ec4\u8272 (\u4f8b\u5982, I2C Grove Connectors\u4e0a\u7684SCL)\n\n\npin 2\n - \u767d\u8272 (\u4f8b\u5982, I2C Grove Connectors\u4e0a\u7684SDA)\n\n\npin 3\n - \u7ea2\u8272 - VCC \uff08\u6240\u6709\u7684Grove\u63a5\u53e3\u7ea2\u8272\u90fd\u662fVCC\uff09\n\n\npin 4\n - \u9ed1\u8272 - GND \uff08\u6240\u6709\u7684Grove\u63a5\u53e3\u7ea2\u8272\u90fd\u662fGND\uff09\n\n\n\n\nGrove\u6a21\u5757\u4e3b\u8981\u67094\u79cd\u63a5\u53e3\u3002\n\n\nGrove Digital \u6570\u5b57\u63a5\u53e3\n\n\nGrove\u6570\u5b57\u63a5\u53e3\u7531Grove\u63d2\u5934\u7684\u56db\u6761\u6807\u51c6\u7ebf\u7ec4\u6210\u3002\u4e24\u6761\u4fe1\u53f7\u7ebf\u901a\u5e38\u79f0\u4e3aD0\u548cD1\u3002\u5927\u591a\u6570\u6a21\u5757\u53ea\u4f7f\u7528D0\uff0c\u4f46\u6709\u4e9b\uff08\u50cfLED Bar Grove\u663e\u793a\u5c4f\uff09\u4f7f\u7528\u4e24\u8005\u3002\u901a\u5e38\u6838\u5fc3\u677f\u4f1a\u5c06\u677f\u5361\u4e0a\u7684\u7b2c\u4e00\u4e2aGrove\u8fde\u63a5\u5934\u79f0\u4e3aD0\uff0c\u7b2c\u4e8c\u4e2a\u79f0\u4e3aD1\u3002\u7b2c\u4e00\u4e2a\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684DO/D1\u7ba1\u811a\uff0c\u7b2c\u4e8c\u4e2a\u8fde\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684D1/D2\u5f15\u811a\uff0c\u540e\u9762\u7684\u8fde\u63a5\u5934\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\n\n\n\n\n\n\npin\n\n\nFunction\n\n\nNote\n\n\n\n\n\n\n\n\n\n\npin1\n\n\nDn\n\n\n\u7b2c\u4e00\u4e2a\u6570\u5b57\u8f93\u5165\n\n\n\n\n\n\npin2\n\n\nDn+1\n\n\n\u7b2c\u4e8c\u4e2a\u6570\u5b57\u8f93\u5165\n\n\n\n\n\n\npin3\n\n\nVCC\n\n\n\u4f9b\u7535\u5f15\u811a 5V/3.3V\n\n\n\n\n\n\npin4\n\n\nGND\n\n\n\u5730\n\n\n\n\n\n\n\n\nGrove Analog \u6a21\u62df\u63a5\u53e3\n\n\nGrove\u6a21\u62df\u63a5\u53e3\u7531Grove\u63d2\u5934\u7684\u56db\u6761\u6807\u51c6\u7ebf\u7ec4\u6210\u3002\u4e24\u6761\u4fe1\u53f7\u7ebf\u901a\u5e38\u79f0\u4e3aA0\u548cA1\u3002\u5927\u591a\u6570\u6a21\u5757\u53ea\u4f7f\u7528A0\uff0c\u4f46\u6709\u4e9b\uff08\u50cfLED Bar Grove\u663e\u793a\u5c4f\uff09\u4f7f\u7528\u4e24\u8005\u3002\u901a\u5e38\u6838\u5fc3\u677f\u4f1a\u5c06\u677f\u5361\u4e0a\u7684\u7b2c\u4e00\u4e2aGrove\u8fde\u63a5\u5934\u79f0\u4e3aA0\uff0c\u7b2c\u4e8c\u4e2a\u79f0\u4e3aA1\u3002\u7b2c\u4e00\u4e2a\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684AO/A1\u7ba1\u811a\uff0c\u7b2c\u4e8c\u4e2a\u8fde\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684A1/A2\u5f15\u811a\uff0c\u540e\u9762\u7684\u8fde\u63a5\u5934\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\n\n\n\n\n\n\npin\n\n\nFunction\n\n\nNote\n\n\n\n\n\n\n\n\n\n\npin1\n\n\nAn\n\n\n\u7b2c\u4e00\u4e2a\u6a21\u62df\u8f93\u5165\n\n\n\n\n\n\npin2\n\n\nAn+1\n\n\n\u7b2c\u4e8c\u4e2a\u6a21\u62df\u8f93\u5165\n\n\n\n\n\n\npin3\n\n\nVCC\n\n\n\u4f9b\u7535\u5f15\u811a, 5V/3.3V\n\n\n\n\n\n\npin4\n\n\nGND\n\n\n\u5730\n\n\n\n\n\n\n\n\nGrove UART\n\n\nThe Grove UART \u662f\u7279\u6b8a\u7684\u4e00\u79cd\u6570\u5b57\u8f93\u5165\u8f93\u51fa\u63a5\u53e3\u3002\u5b83\u4f7f\u7528\u5f15\u811a1\u548c\u5f15\u811a2\u8fdb\u884c\u4e32\u884c\u8f93\u5165\u548c\u53d1\u9001\u3002 \u5f15\u811a1\u662fRX\u7ebf\uff08\u7528\u4e8e\u63a5\u6536\u6570\u636e\uff0c\u56e0\u6b64\u662f\u8f93\u5165\uff09\uff0c\u5176\u4e2d\u5f15\u811a2\u662fTX\u7ebf\uff08\u7528\u4e8e\u5411Grove\u6a21\u5757\u4f20\u8f93\u6570\u636e\uff09\u3002\n\n\n\n\n\n\n\n\npin\n\n\nFunction\n\n\nNote\n\n\n\n\n\n\n\n\n\n\npin1\n\n\nRX\n\n\n\u4e32\u884c\u63a5\u6536\n\n\n\n\n\n\npin2\n\n\nTX\n\n\n\u4e32\u884c\u53d1\u9001\n\n\n\n\n\n\npin3\n\n\nVCC\n\n\n\u4f9b\u7535\u5f15\u811a 5V/3.3V\n\n\n\n\n\n\npin4\n\n\nGND\n\n\n\u5730\n\n\n\n\n\n\n\n\nGrove I2C\n\n\n\u6709\u8bb8\u591a\u7c7b\u578b\u7684I2C Grove\u4f20\u611f\u5668\u53ef\u7528\u3002\u5927\u591a\u6570\u5668\u4ef6\u540c\u65f6\u652f\u63015V / 3.3V\uff0c\u4f46\u6709\u5c11\u6570\u53ea\u652f\u63013.3V\u6216\u53ea\u652f\u63015.0V\uff0c\u60a8\u9700\u8981\u5728\u4f7f\u7528\u524d\u4ed4\u7ec6\u68c0\u67e5\u7535\u538b\u53c2\u6570\u3002\n\n\nGrove I2C\u8fde\u63a5\u5668\u5177\u6709\u6807\u51c6\u5e03\u5c40\u3002\u5f15\u811a1\u662fSCL\u4fe1\u53f7\uff0c\u5f15\u811a2\u662fSDA\u4fe1\u53f7\u3002\u7535\u6e90\u548c\u63a5\u5730\u4e0e\u5176\u4ed6\u8fde\u63a5\u5668\u76f8\u540c\u3002\u8fd9\u662fGrove Digital Connector\u7684\u53e6\u4e00\u4e2a\u7279\u6b8a\u7248\u672c\u3002\u5b9e\u9645\u4e0a\uff0c\u63a7\u5236\u5668\u4e0a\u7684I2C\u603b\u7ebf\uff08\u5982ESP8266\uff0cRaspberry Pi\u548cArduino\uff09\u901a\u5e38\u53ea\u4f7f\u7528\u6570\u5b57I / O\u5f15\u811a\u901a\u8fc7\u8f6f\u4ef6\u6765\u5b9e\u73b0I2C\u603b\u7ebf\u3002Raspberry Pi\u548cArduino\u4e0a\u7684I2C\u5f15\u811a\u662f\u5e26\u6709\u786c\u4ef6\u652f\u6301\u7684\u3002\n\n\n\n\n\n\n\n\npin\n\n\nFunction\n\n\nNote\n\n\n\n\n\n\n\n\n\n\npin1\n\n\nSCL\n\n\nI2C \u65f6\u949f\n\n\n\n\n\n\npin2\n\n\nSDA\n\n\nI2C \u6570\u636e\n\n\n\n\n\n\npin3\n\n\nVCC\n\n\n\u4f9b\u7535\u5f15\u811a, 5V/3.3V\n\n\n\n\n\n\npin4\n\n\nGND\n\n\n\u5730\n\n\n\n\n\n\n\n\nGrove \u7ebf\u7f06\n\n\n\u901a\u7528 Grove \u7ebf\u7f06\n\n\n\u6211\u4eec\u4e3a\u60a8\u7684\u9879\u76ee\u5de5\u7a0b\u51c6\u5907\u4e865\u79cd\u4e0d\u540c\u7684grove\u7ebf\u7f06, \u957f\u5ea65\u5398\u7c73\uff0c20\u5398\u7c73\uff0c30\u5398\u7c73\uff0c40\u5398\u7c73\u4ee5\u53ca50\u5398\u7c73\u4e0d\u7b49\u3002   \n\n\n\n\n\n\n\n\n5cm\n\n\n20 cm\n\n\n30 cm\n\n\n40 cm\n\n\n50 cm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\nGrove - Branch Cable \uff08\u5206\u652f\u7535\u7f06\uff09\n\n\nGrove Branch Cable\u662fGrove\u7cfb\u7edf\u4e2d\u4f7f\u7528\u7684\u4e00\u79cd\u7535\u7f06\u3002\u5b83\u7531\u4e09\u4e2a\u5e26\u9632\u53cd\u63d2\u7684\u6bcd\u5934\u8fde\u63a5\u5668\u548c\u56db\u6839\u989c\u8272\u7f16\u7801\u7684\u7535\u7ebf\u7ec4\u6210\u3002Grove\u5206\u652f\u7535\u7f06\u53ef\u7528\u4e8e\u652f\u6301\u83ca\u82b1\u94fe\u4e2d\u7684\u591a\u4e2aGrove\u8bbe\u5907\u8fde\u63a5\u5230Grove shield\u677f\u5361\u4e0a\u3002\u901a\u5e38\uff0c\u4e00\u7aef\u63a5\u53e3\u8fde\u63a5\u5230Grove shield\u677f\u5361\u4e0a\uff0c\u7b2c\u4e8c\u548c\u7b2c\u4e09\u8fde\u63a5\u5668\u8fde\u63a5\u5230\u4e24\u4e2aGrove\u8bbe\u5907\u3002\n\n\n\u4e0eGrove\u7535\u7f06\u7cfb\u5217\u7684\u5176\u4ed6\u6210\u5458\u4e00\u6837\uff0c\u8fd9\u4e2a\u5206\u652f\u7535\u7f06\u4e5f\u662f\u5e26\u6709\u53cd\u63d2\u6263\u7684\uff0c\u8fd9\u6837\u786e\u4fdd\u60a8\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u628a\u7ebf\u63d2\u53cd\u3002\u53e6\u5916\uff0c\u5f53\u5c06\u8fde\u63a5\u5668\u8fde\u63a5\u5230shield\u677f\u5361\u6216\u5176\u4ed6\u8bbe\u5907\u65f6\uff0c\u8bf7\u60a8\u6309\u538b\u4ee5\u786e\u4fdd\u8fde\u63a5\u7a33\u5b9a\u53ef\u9760\u3002\u7531\u4e8eGrove Branch\u7535\u7f06\u6709\u95e9\u9501\uff08\u6709\u65f6\u79f0\u4e3a\u201c\u6263\u201d\u6216\u201c\u5e26\u6263\u7535\u7f06\u201d\uff09\uff0c\u5f53\u95e9\u9501\u5173\u95ed\u65f6\uff0c\u60a8\u5c06\u542c\u5230\u4e00\u4e2a\u5c0f\u58f0\u97f3\uff0c\u5e76\u4e14\u5e94\u8be5\u770b\u5230\u95e9\u9501\u5728\u5176\u5bf9\u5e94\u7684\u90e8\u4ef6\u4e0a\u3002\u8fd9\u4e9b\u95e9\u9501\uff08\u6216\u5e26\u6263\uff09\u53ef\u6539\u5584\u8fde\u63a5\uff0c\u5e76\u4e14\u5728\u9ad8\u632f\u52a8\u6216\u751f\u4ea7\u73af\u5883\u4e2d\u7279\u522b\u65b9\u4fbf\uff0c\u56e0\u4e3a\u65ad\u5f00\u7535\u7f06\u65f6\u5fc5\u987b\u4f7f\u7528\u4e00\u4e9b\u529b\u3002\uff0c\n\n\n\u4f7f\u7528Grove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u591a\u4e2a\u8bbe\u5907\u65f6\uff0c\u8bf7\u683c\u5916\u5c0f\u5fc3\u3002\u8bf7\u6ce8\u610fGrove Shield\u4e0a\u7684\u6a21\u62df\u6216\u6570\u5b57\u5f15\u811a\u5c06\u7531Grove\u8bbe\u5907\u5171\u4eab\u3002\u8fd9\u6837\u7684\u914d\u7f6e\u53ef\u80fd\u4e0d\u9002\u5408\u4e8e\u4e24\u4e2a\u6a21\u62df\u8bbe\u5907\u3002\u4f7f\u7528Grove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u6a21\u62df\u548c\u6570\u5b57Grove\u8bbe\u5907\u53ef\u80fd\u6839\u672c\u4e0d\u8d77\u4f5c\u7528\u3002\n\n\n\n\n\u793a\u4f8b\u5305\u62ec:\n\n\n\n\n\u4f7f\u7528\u83ca\u82b1\u94fe\u8fde\u63a5\u4e24\u4e2a\u6216\u591a\u4e2aI2C\u8bbe\u5907\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u6761\u5206\u652f\u7535\u7f06\u6765\u6269\u5c55I2C\u603b\u7ebf\u3002\n\n\n\u8fde\u63a5\u4e24\u4e2a\u9700\u8981\u540c\u65f6\u5de5\u4f5c\u7684\u8bbe\u5907\u3002\u4f8b\u5982\uff0cLED\u548c\u7ee7\u7535\u5668\u53ef\u4ee5\u901a\u8fc7\u5355\u4e2aGrove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u5230Grove Shield\u3002\u7531\u4e8e\u4e24\u4e2a\u5668\u4ef6\u5c06\u7531\u540c\u4e00\u4e2a\u6570\u5b57\u5f15\u811a\u63a7\u5236\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0\u540c\u65f6\u5173\u95edLED\u548c\u65ad\u5f00\u7ee7\u7535\u5668\u3002\n\n\n\n\nGrove - Branch Cable for Servo \uff08\u4f3a\u670d\u5206\u652f\u7535\u7f06\uff09\n\n\nGrove\u5206\u652f\u7535\u7f06\u662f\u53e6\u4e00\u79cdGrove\u7535\u7f06\uff0c\u4e3b\u8981\u7528\u4e8e\u5c06\u4e00\u4e2a\u6216\u4e24\u4e2a\u8235\u673a\u8fde\u63a5\u5230\u60a8\u7684\u9879\u76ee\u3002\u5b83\u4eec\u7531\u4e09\u4e2a\u8fde\u63a5\u5668\u7ec4\u6210\uff1a\u4e00\u4e2a\u56db\u9488\u6bcd\u8fde\u63a5\u5934\uff0c\u9002\u7528\u4e8e\u8fde\u63a5\u5230Grove Shield\uff0c\u4ee5\u53ca\u4e24\u4e2a\u4e09\u9488\u516c\u67f1\u578b\u8fde\u63a5\u5934\u3002\u5728\u8fd9\u79cd\u914d\u7f6e\u4e2d\uff0c\u7535\u6e90\u548c\u5730\uff08\u6765\u81ea\u56db\u9488\u6bcd\u5934\u7684\u5f15\u811a3\u548c4\uff09\u90fd\u8fde\u63a5\u52303\u9488\u7684\u7535\u6e90\u548c\u5730\u3002\u56db\u9488\u8fde\u63a5\u5668\u7684\u5f15\u811a1\uff08\u9ec4\u8272\uff09\u4e00\u7aef\u8fde\u63a5\u5230\u5177\u6709PWM\u529f\u80fd\u7684Arduino\u5f15\u811a\u4e0a\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u5230\u5e26\u6709\u9ec4\u8272\u5f15\u7ebf\u76843\u9488\u516c\u5934\u3002\u540c\u6837\uff0c\u56db\u9488\u8fde\u63a5\u5668\u7684\u5f15\u811a2\uff08\u767d\u7ebf\uff09\u7684\u4e00\u7aef\u4e5f\u8fde\u63a5\u5230Arduino\u7684\u7b2c\u4e8c\u4e2a\u5177\u6709PWM\u529f\u80fd\u7684\u5f15\u811a\u4e0a\uff0c\u800c\u53e6\u4e00\u7aef\u8fde\u63a5\u5230\u5e26\u6709\u9ec4\u7ebf\u7684\u53e6\u4e00\u4e2a\u4e09\u9488\u516c\u5934\u4e0a\u3002  \n\n\n\u7528\u4e8eServos\u7684Grove\u5206\u652f\u7535\u7f06\u7684\u56db\u9488\u8fde\u63a5\u5934\u901a\u5e38\u8fde\u63a5\u5230Grove Shield\u6570\u5b57\u63d2\u5ea7\uff0c\u5982D2-D9\u3002\u8fde\u63a5\u4f3a\u670d\u65f6\uff0c\u8bb0\u4e0b\u6570\u5b57PWM\u7535\u7f06\u7684\u7ebf\u989c\u8272\uff08\u9ec4\u8272\u6216\u767d\u8272\uff09\uff0c\u4ee5\u4e86\u89e3\u54ea\u4e2a\u6570\u5b57\u5f15\u811a\u5bf9\u5e94\u4e8e\u4f3a\u670d\u8f93\u5165\u3002\n\n\n\n\nGrove to 4pin Female/Male Jumper \uff08grove\u8f6c4pin \u8df3\u7ebf\uff09\n\n\n\u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6765:\n\n\n\n\n\u5c06Grove\u8bbe\u5907\u8fde\u63a5\u5230\u5176\u4ed6\u4e0d\u5e26Grove\u63a5\u53e3\u7684MCU\uff0c\u4f8b\u5982\u60a8\u8981\u5c06Grove - Light Sensor\u8fde\u63a5\u5230Raspberry Pi\u3002\n\n\n\u4f7f\u7528Grove shield\u63a7\u5236\u975eGrove\u63a5\u53e3\u7684\u8bbe\u5907\u3002\n\n\n\n\n\n\n\u7ebf\u7f06\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\nCable\n\n\nLink\n\n\n\n\n\n\n\n\n\n\nBranch Cable\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nBranch Cable for Servo\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove to 4Pin Female\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove to 4Pin Male\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\nGrove \u5165\u95e8\u5957\u4ef6\n\n\n\u6211\u4eec\u4e3a\u521d\u5b66\u8005\u8bbe\u8ba1\u4e86\u8bb8\u591a\u5957\u4ef6\u3002Grove\u5165\u95e8\u5957\u4ef6\u5305\u62ecGrove\u6269\u5c55\u677f\uff0c\u591a\u4e2aGrove\u6a21\u5757\u548c\u7528\u6237\u624b\u518c\u3002\u540c\u65f6\u6211\u4eec\u63d0\u4f9b\u5927\u91cf\u8bfe\u7a0b\u4f9b\u521d\u5b66\u8005\u5b66\u4e60\u3002\u5982\u679c\u60a8\u60f3\u5f00\u59cb\u7cfb\u7edf\u5730\u5b66\u4e60\u4e00\u4e2a\u5e73\u53f0\u6216\u8005\u5b66\u4e60\u76f8\u5173\u7535\u5b50\u77e5\u8bc6\uff0cGrove Starter\u5957\u4ef6\u5305\u5c06\u662f\u60a8\u7684\u6700\u4f73\u7684\u9009\u62e9\u3002\n\n\n\n\n\u6211\u4eec\u9488\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u5f00\u53d1\u4e86\u4e3a\u6570\u4f17\u591a\u7684\u5957\u4ef6\n\n\n\n\n\n\n\n\n\u5957\u4ef6\u540d\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nGrove - Starter Kit for Arduino\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for mbed\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for LinkIt ONE\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for LaunchPad\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for Photon\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for BeagleBone Green\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for LinkIt 7688 Duo\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter Kit for 96Boards\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrove Starter kit for Arduino\nGenuino 101\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\nGrovePi+ Starter Kit for Raspberry Pi\n\n\n\u7acb\u5373\u8d2d\u4e70!\n\n\n\n\n\n\n\n\n\u9009\u62e9\u60a8\u7684Grove\n\n\n\u60f3\u8981\u4e00\u4e9bGrove\u6a21\u5757\u7528\u4e8e\u60a8\u7684\u9879\u76ee\uff1f\u8fd9\u91cc\u6709\u4e00\u4e9b\u63a8\u8350\u3002\n\n\nGrove \u57fa\u672c\u8f93\u5165\u8f93\u51fa\u6a21\u5757\n\n\n\n\n\n\n\n\nGrove - LED\n\n\nGrove - Rotary Angle Sensor\n\n\nGrove - Button\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove - Switch\n\n\nGrove - Encoder\n\n\nGrove - Touch Sensor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u663e\u793a\u6a21\u5757\n\n\n\n\n\n\n\n\nI2C_LCD\n\n\nGrove - OLED Display 0.96\"\n\n\nGrove - OLED Display 1.12\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove - LCD RGB Backlight\n\n\nGrove - 4-Digit Display\n\n\nGrove LED Bar v2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u8fd0\u52a8\u68c0\u6d4b\u6a21\u5757\n\n\n\n\n\n\n\n\nGrove - IMU 10DOF v2.0\n\n\nDigital Accelerometer(\u00b1400g)\n\n\n3-Axis Digital Gyro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3-Axis Digital Compass\n\n\n3-Axis Digital Accelerometer(\u00b11.5g)\n\n\n3-Axis Analog Accelerometer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3-Axis Digital Acc(\u00b116g)\n\n\n6-Axis Acc\nCompass v2.0\n\n\n6-Axis Acc\nGyroscope\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u901a\u4fe1\u6a21\u5757\n\n\n\n\n\n\n\n\nGrove \u2013 Uart Wifi\n\n\n433MHz Simple RF link kit\n\n\n315MHz Simple RF Link Kit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove - Serial RF Pro\n\n\n125KHz RFID Reader\n\n\nGrove - BLE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove - BLE (dual model)\n\n\nGrove - NFC\n\n\nGrove - NFC Tag\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u73af\u5883\u76d1\u6d4b\u6a21\u5757\n\n\n\n\n\n\n\n\nAir quality sensor\n\n\nGas Sensor(MQ2)\n\n\nGas Sensor(MQ5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGas Sensor(MQ3)\n\n\nGas Sensor(MQ9)\n\n\nGas Sensor(O2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDust Sensor\n\n\nMoisture Sensor\n\n\nTemperature\nHumidity Sensor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\nGrove \u673a\u5668\u4eba\u914d\u4ef6\n\n\n\n\n\n\n\n\nI2C Mini Motor Driver\n\n\nI2C Motor Driver\n\n\nGrove - Servo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLine Finder\n\n\nUltrasonic Ranger\n\n\n80cm Infrared Proximity Sensor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore Details\n\n\nMore Details\n\n\nMore Details", 
            "title": "Grove\u7cfb\u7edf"
        }, 
        {
            "location": "/Grove_System/#grove", 
            "text": "Grove\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u6807\u51c6\u8fde\u63a5\u5668\u539f\u578b\u7cfb\u7edf\u3002Grove\u91c7\u7528\u79ef\u6728\u5f0f\u7ec4\u88c5\u7535\u5b50\u6280\u672f\u3002\u4e0e\u57fa\u4e8e\u8df3\u7ebf\u6216\u710a\u63a5\u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u8fde\u63a5\uff0c\u8bd5\u9a8c\u548c\u6784\u5efa\u66f4\u5bb9\u6613\uff0c\u5e76\u7b80\u5316\u4e86\u5b66\u4e60\u7cfb\u7edf\u3002Grove\u7cfb\u7edf\u5141\u8bb8\u4f60\u6784\u5efa\u771f\u6b63\u7684\u7cfb\u7edf\u3002\u56e0\u800c\u5b83\u9700\u8981\u4e00\u4e9b\u5b66\u4e60\u548c\u4e13\u4e1a\u77e5\u8bc6\u624d\u80fd\u6b63\u786e\u5730\u5c06\u7269\u4ef6\u8054\u63a5\u8d77\u6765\u3002  Grove\u7cfb\u7edf\u7531\u57fa\u672c\u5904\u7406\u5355\u5143\uff08\u6811\u5e72\uff09\u548c\u5177\u6709\u6807\u51c6\u5316\u8fde\u63a5\u5668\u7684\u5404\u79cd\u6a21\u5757\uff08\u6811\u679d\uff09\u7ec4\u6210\u3002Grove\u7cfb\u7edf\u7684\u521b\u59cb\u4eba\u4eec\uff08seeediuno\u56e2\u961f\uff09\u66fe\u7ecf\u8bd5\u56fe\u7528\u201c\u6811\u5e72\u201d\u548c\u201c\u6811\u679d\u201d\u6765\u547d\u540d\u8fd9\u4e9b\u5355\u5143\u548c\u6a21\u5757\uff0c\u7136\u800c\u77ed\u6682\u7684\u7ea0\u7ed3\u4e4b\u540e\u4ed6\u4eec\u679c\u65ad\u653e\u5f03\uff0c\u4e3a\u4e86\u4e0d\u7ed9\u60a8\u9020\u6210\u56f0\u60d1\uff0cseeed\u5c06\u4efb\u4f55\u53ef\u80fd\u9020\u6210\u6df7\u6dc6\u7684\u4e1c\u897f\u90fd\u5f03\u82e5\u655d\u5c63\u3002  \u57fa\u672c\u5355\u5143\uff08\u901a\u5e38\u4e3a\u5fae\u5904\u7406\u5668\uff09\u5141\u8bb8\u4eceGrove\u6a21\u5757\u8f7b\u677e\u8fde\u63a5\u4efb\u4f55\u8f93\u5165\u6216\u8f93\u51fa\u3002\u6bcf\u4e2aGrove\u6a21\u5757\u901a\u5e38\u90fd\u53ef\u4ee5\u5904\u7406\u5355\u4e2a\u529f\u80fd\uff0c\u4f8b\u5982\u7b80\u5355\u7684\u6309\u94ae\u6216\u66f4\u590d\u6742\u7684\u5fc3\u7387\u4f20\u611f\u5668\u3002  \u5982\u679c\u60a8\u4f7f\u7528\u7684\u5904\u7406\u5355\u5143\u6ca1\u6709Grove\u63a5\u53e3\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528Grove \u8f6cPin Header \u8f6c\u63a5\u7ebf\uff0c\u4eceRaspberry Pi\u6216Arduino\u7684\u9488\u811a\u8fde\u63a5\u5230Grove\u6a21\u5757\u3002", 
            "title": "\u4ec0\u4e48\u662fGrove\u7cfb\u7edf?"
        }, 
        {
            "location": "/Grove_System/#grove_1", 
            "text": "\u4ee5\u4e0b\u662f\u4f7f\u7528Grove\u8fdb\u884c\u7684\u4e00\u4e9b\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\uff0c\u66f4\u591a\u9879\u76ee\u8bf7\u70b9\u51fb  \u793a\u4f8b  \u6216\u8005  \u6307\u5357 .     DIY a Humidifier  Personal Voice Assistant  Acrylic Monitor Stand           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!        Sensor hub   Win10 IoT  Steam-punk Style Award  Plant Watering Device           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!        Wi-Fi Speaker  DIY a toy car  Retro Wooden Lamp           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!        Pokemon Go SAFETY BADGE  Make a Wooden Gun  Quality of Life Meter           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!        Hackable RGB ornament  The Internet Of Led Wall  PI Game Box           MAKE IT NOW!  MAKE IT NOW!  MAKE IT NOW!", 
            "title": "Grove \u9879\u76ee"
        }, 
        {
            "location": "/Grove_System/#grove_2", 
            "text": "\u4e00\u5171\u6709\u4e94\u79cd\u5c3a\u5bf8\u7684Grove\u6a21\u5757     1X1  1X2  1X3  2X2  2X3      20x20mm  20x40mm  20x60mm  40x40mm  40x60mm", 
            "title": "Grove \u6a21\u5757\u7684\u5c3a\u5bf8"
        }, 
        {
            "location": "/Grove_System/#grove_3", 
            "text": "\u5982\u679c\u60a8\u7684\u63a7\u5236\u677f\u4e0a\u6ca1\u6709Grove\u8fde\u63a5\u5668\uff0c\u5219\u9700\u8981\u4e00\u4e2aGrove\u6269\u5c55\u677f\u6765\u8fde\u63a5Grove\u6a21\u5757\u3002Grove\u6269\u5c55\u677f\u63d0\u4f9b\u5904\u7406\u80fd\u529b\uff0c\u53ef\u63a5\u6536\u4f20\u611f\u5668\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u8f93\u51fa\u7ed9\u6267\u884c\u5668\u3002\u73b0\u5728\u6211\u4eec\u5df2\u6709\u4e13\u4e3a\u5404\u79cd\u5e73\u53f0\u7684\u8bbe\u8ba1\u7684\u591a\u6b3eGrove\u6269\u5c55\u677f\uff0c\u5305\u62ecArduino UNO\uff0cParticle Phone\uff0cBeagleBone\u7b49\u3002     Arduino \u6269\u5c55\u677f  BeagleBone board \u6269\u5c55\u677f  Arduino Mega \u6269\u5c55\u677f           \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!        IOIO-OTG  Particle Photon  NodeMCU           \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!     !!!\u6ce8\u610f\n     Arduino Base Shield \u9002\u7528\u4e8e\u4e0b\u5217\u6838\u5fc3\u677f:  * Arduino UNO/Leonardo\n* Seeeduino V3/4/4.1/Lite/Clio/Lotus/Stalker\n* LinkIt ONE", 
            "title": "\u5982\u4f55\u5c06Grove\u8fde\u63a5\u5230\u60a8\u7684\u63a7\u5236\u677f"
        }, 
        {
            "location": "/Grove_System/#grove_4", 
            "text": "\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230Grove\u7535\u7f06\u67094\u79cd\u989c\u8272\u3002   pin 1  - \u9ec4\u8272 (\u4f8b\u5982, I2C Grove Connectors\u4e0a\u7684SCL)  pin 2  - \u767d\u8272 (\u4f8b\u5982, I2C Grove Connectors\u4e0a\u7684SDA)  pin 3  - \u7ea2\u8272 - VCC \uff08\u6240\u6709\u7684Grove\u63a5\u53e3\u7ea2\u8272\u90fd\u662fVCC\uff09  pin 4  - \u9ed1\u8272 - GND \uff08\u6240\u6709\u7684Grove\u63a5\u53e3\u7ea2\u8272\u90fd\u662fGND\uff09   Grove\u6a21\u5757\u4e3b\u8981\u67094\u79cd\u63a5\u53e3\u3002", 
            "title": "Grove\u6a21\u5757\u63a5\u53e3"
        }, 
        {
            "location": "/Grove_System/#grove-digital", 
            "text": "Grove\u6570\u5b57\u63a5\u53e3\u7531Grove\u63d2\u5934\u7684\u56db\u6761\u6807\u51c6\u7ebf\u7ec4\u6210\u3002\u4e24\u6761\u4fe1\u53f7\u7ebf\u901a\u5e38\u79f0\u4e3aD0\u548cD1\u3002\u5927\u591a\u6570\u6a21\u5757\u53ea\u4f7f\u7528D0\uff0c\u4f46\u6709\u4e9b\uff08\u50cfLED Bar Grove\u663e\u793a\u5c4f\uff09\u4f7f\u7528\u4e24\u8005\u3002\u901a\u5e38\u6838\u5fc3\u677f\u4f1a\u5c06\u677f\u5361\u4e0a\u7684\u7b2c\u4e00\u4e2aGrove\u8fde\u63a5\u5934\u79f0\u4e3aD0\uff0c\u7b2c\u4e8c\u4e2a\u79f0\u4e3aD1\u3002\u7b2c\u4e00\u4e2a\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684DO/D1\u7ba1\u811a\uff0c\u7b2c\u4e8c\u4e2a\u8fde\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684D1/D2\u5f15\u811a\uff0c\u540e\u9762\u7684\u8fde\u63a5\u5934\u4ee5\u6b64\u7c7b\u63a8\u3002     pin  Function  Note      pin1  Dn  \u7b2c\u4e00\u4e2a\u6570\u5b57\u8f93\u5165    pin2  Dn+1  \u7b2c\u4e8c\u4e2a\u6570\u5b57\u8f93\u5165    pin3  VCC  \u4f9b\u7535\u5f15\u811a 5V/3.3V    pin4  GND  \u5730", 
            "title": "Grove Digital \u6570\u5b57\u63a5\u53e3"
        }, 
        {
            "location": "/Grove_System/#grove-analog", 
            "text": "Grove\u6a21\u62df\u63a5\u53e3\u7531Grove\u63d2\u5934\u7684\u56db\u6761\u6807\u51c6\u7ebf\u7ec4\u6210\u3002\u4e24\u6761\u4fe1\u53f7\u7ebf\u901a\u5e38\u79f0\u4e3aA0\u548cA1\u3002\u5927\u591a\u6570\u6a21\u5757\u53ea\u4f7f\u7528A0\uff0c\u4f46\u6709\u4e9b\uff08\u50cfLED Bar Grove\u663e\u793a\u5c4f\uff09\u4f7f\u7528\u4e24\u8005\u3002\u901a\u5e38\u6838\u5fc3\u677f\u4f1a\u5c06\u677f\u5361\u4e0a\u7684\u7b2c\u4e00\u4e2aGrove\u8fde\u63a5\u5934\u79f0\u4e3aA0\uff0c\u7b2c\u4e8c\u4e2a\u79f0\u4e3aA1\u3002\u7b2c\u4e00\u4e2a\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684AO/A1\u7ba1\u811a\uff0c\u7b2c\u4e8c\u4e2a\u8fde\u63a5\u5934\u4f1a\u8fde\u63a5\u5230\u4e3b\u63a7\u82af\u7247\u7684A1/A2\u5f15\u811a\uff0c\u540e\u9762\u7684\u8fde\u63a5\u5934\u4ee5\u6b64\u7c7b\u63a8\u3002     pin  Function  Note      pin1  An  \u7b2c\u4e00\u4e2a\u6a21\u62df\u8f93\u5165    pin2  An+1  \u7b2c\u4e8c\u4e2a\u6a21\u62df\u8f93\u5165    pin3  VCC  \u4f9b\u7535\u5f15\u811a, 5V/3.3V    pin4  GND  \u5730", 
            "title": "Grove Analog \u6a21\u62df\u63a5\u53e3"
        }, 
        {
            "location": "/Grove_System/#grove-uart", 
            "text": "The Grove UART \u662f\u7279\u6b8a\u7684\u4e00\u79cd\u6570\u5b57\u8f93\u5165\u8f93\u51fa\u63a5\u53e3\u3002\u5b83\u4f7f\u7528\u5f15\u811a1\u548c\u5f15\u811a2\u8fdb\u884c\u4e32\u884c\u8f93\u5165\u548c\u53d1\u9001\u3002 \u5f15\u811a1\u662fRX\u7ebf\uff08\u7528\u4e8e\u63a5\u6536\u6570\u636e\uff0c\u56e0\u6b64\u662f\u8f93\u5165\uff09\uff0c\u5176\u4e2d\u5f15\u811a2\u662fTX\u7ebf\uff08\u7528\u4e8e\u5411Grove\u6a21\u5757\u4f20\u8f93\u6570\u636e\uff09\u3002     pin  Function  Note      pin1  RX  \u4e32\u884c\u63a5\u6536    pin2  TX  \u4e32\u884c\u53d1\u9001    pin3  VCC  \u4f9b\u7535\u5f15\u811a 5V/3.3V    pin4  GND  \u5730", 
            "title": "Grove UART"
        }, 
        {
            "location": "/Grove_System/#grove-i2c", 
            "text": "\u6709\u8bb8\u591a\u7c7b\u578b\u7684I2C Grove\u4f20\u611f\u5668\u53ef\u7528\u3002\u5927\u591a\u6570\u5668\u4ef6\u540c\u65f6\u652f\u63015V / 3.3V\uff0c\u4f46\u6709\u5c11\u6570\u53ea\u652f\u63013.3V\u6216\u53ea\u652f\u63015.0V\uff0c\u60a8\u9700\u8981\u5728\u4f7f\u7528\u524d\u4ed4\u7ec6\u68c0\u67e5\u7535\u538b\u53c2\u6570\u3002  Grove I2C\u8fde\u63a5\u5668\u5177\u6709\u6807\u51c6\u5e03\u5c40\u3002\u5f15\u811a1\u662fSCL\u4fe1\u53f7\uff0c\u5f15\u811a2\u662fSDA\u4fe1\u53f7\u3002\u7535\u6e90\u548c\u63a5\u5730\u4e0e\u5176\u4ed6\u8fde\u63a5\u5668\u76f8\u540c\u3002\u8fd9\u662fGrove Digital Connector\u7684\u53e6\u4e00\u4e2a\u7279\u6b8a\u7248\u672c\u3002\u5b9e\u9645\u4e0a\uff0c\u63a7\u5236\u5668\u4e0a\u7684I2C\u603b\u7ebf\uff08\u5982ESP8266\uff0cRaspberry Pi\u548cArduino\uff09\u901a\u5e38\u53ea\u4f7f\u7528\u6570\u5b57I / O\u5f15\u811a\u901a\u8fc7\u8f6f\u4ef6\u6765\u5b9e\u73b0I2C\u603b\u7ebf\u3002Raspberry Pi\u548cArduino\u4e0a\u7684I2C\u5f15\u811a\u662f\u5e26\u6709\u786c\u4ef6\u652f\u6301\u7684\u3002     pin  Function  Note      pin1  SCL  I2C \u65f6\u949f    pin2  SDA  I2C \u6570\u636e    pin3  VCC  \u4f9b\u7535\u5f15\u811a, 5V/3.3V    pin4  GND  \u5730", 
            "title": "Grove I2C"
        }, 
        {
            "location": "/Grove_System/#grove_5", 
            "text": "", 
            "title": "Grove \u7ebf\u7f06"
        }, 
        {
            "location": "/Grove_System/#grove_6", 
            "text": "\u6211\u4eec\u4e3a\u60a8\u7684\u9879\u76ee\u5de5\u7a0b\u51c6\u5907\u4e865\u79cd\u4e0d\u540c\u7684grove\u7ebf\u7f06, \u957f\u5ea65\u5398\u7c73\uff0c20\u5398\u7c73\uff0c30\u5398\u7c73\uff0c40\u5398\u7c73\u4ee5\u53ca50\u5398\u7c73\u4e0d\u7b49\u3002        5cm  20 cm  30 cm  40 cm  50 cm             \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!  \u7acb\u5373\u8d2d\u4e70!", 
            "title": "\u901a\u7528 Grove \u7ebf\u7f06"
        }, 
        {
            "location": "/Grove_System/#grove-branch-cable", 
            "text": "Grove Branch Cable\u662fGrove\u7cfb\u7edf\u4e2d\u4f7f\u7528\u7684\u4e00\u79cd\u7535\u7f06\u3002\u5b83\u7531\u4e09\u4e2a\u5e26\u9632\u53cd\u63d2\u7684\u6bcd\u5934\u8fde\u63a5\u5668\u548c\u56db\u6839\u989c\u8272\u7f16\u7801\u7684\u7535\u7ebf\u7ec4\u6210\u3002Grove\u5206\u652f\u7535\u7f06\u53ef\u7528\u4e8e\u652f\u6301\u83ca\u82b1\u94fe\u4e2d\u7684\u591a\u4e2aGrove\u8bbe\u5907\u8fde\u63a5\u5230Grove shield\u677f\u5361\u4e0a\u3002\u901a\u5e38\uff0c\u4e00\u7aef\u63a5\u53e3\u8fde\u63a5\u5230Grove shield\u677f\u5361\u4e0a\uff0c\u7b2c\u4e8c\u548c\u7b2c\u4e09\u8fde\u63a5\u5668\u8fde\u63a5\u5230\u4e24\u4e2aGrove\u8bbe\u5907\u3002  \u4e0eGrove\u7535\u7f06\u7cfb\u5217\u7684\u5176\u4ed6\u6210\u5458\u4e00\u6837\uff0c\u8fd9\u4e2a\u5206\u652f\u7535\u7f06\u4e5f\u662f\u5e26\u6709\u53cd\u63d2\u6263\u7684\uff0c\u8fd9\u6837\u786e\u4fdd\u60a8\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u628a\u7ebf\u63d2\u53cd\u3002\u53e6\u5916\uff0c\u5f53\u5c06\u8fde\u63a5\u5668\u8fde\u63a5\u5230shield\u677f\u5361\u6216\u5176\u4ed6\u8bbe\u5907\u65f6\uff0c\u8bf7\u60a8\u6309\u538b\u4ee5\u786e\u4fdd\u8fde\u63a5\u7a33\u5b9a\u53ef\u9760\u3002\u7531\u4e8eGrove Branch\u7535\u7f06\u6709\u95e9\u9501\uff08\u6709\u65f6\u79f0\u4e3a\u201c\u6263\u201d\u6216\u201c\u5e26\u6263\u7535\u7f06\u201d\uff09\uff0c\u5f53\u95e9\u9501\u5173\u95ed\u65f6\uff0c\u60a8\u5c06\u542c\u5230\u4e00\u4e2a\u5c0f\u58f0\u97f3\uff0c\u5e76\u4e14\u5e94\u8be5\u770b\u5230\u95e9\u9501\u5728\u5176\u5bf9\u5e94\u7684\u90e8\u4ef6\u4e0a\u3002\u8fd9\u4e9b\u95e9\u9501\uff08\u6216\u5e26\u6263\uff09\u53ef\u6539\u5584\u8fde\u63a5\uff0c\u5e76\u4e14\u5728\u9ad8\u632f\u52a8\u6216\u751f\u4ea7\u73af\u5883\u4e2d\u7279\u522b\u65b9\u4fbf\uff0c\u56e0\u4e3a\u65ad\u5f00\u7535\u7f06\u65f6\u5fc5\u987b\u4f7f\u7528\u4e00\u4e9b\u529b\u3002\uff0c  \u4f7f\u7528Grove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u591a\u4e2a\u8bbe\u5907\u65f6\uff0c\u8bf7\u683c\u5916\u5c0f\u5fc3\u3002\u8bf7\u6ce8\u610fGrove Shield\u4e0a\u7684\u6a21\u62df\u6216\u6570\u5b57\u5f15\u811a\u5c06\u7531Grove\u8bbe\u5907\u5171\u4eab\u3002\u8fd9\u6837\u7684\u914d\u7f6e\u53ef\u80fd\u4e0d\u9002\u5408\u4e8e\u4e24\u4e2a\u6a21\u62df\u8bbe\u5907\u3002\u4f7f\u7528Grove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u6a21\u62df\u548c\u6570\u5b57Grove\u8bbe\u5907\u53ef\u80fd\u6839\u672c\u4e0d\u8d77\u4f5c\u7528\u3002   \u793a\u4f8b\u5305\u62ec:   \u4f7f\u7528\u83ca\u82b1\u94fe\u8fde\u63a5\u4e24\u4e2a\u6216\u591a\u4e2aI2C\u8bbe\u5907\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u6761\u5206\u652f\u7535\u7f06\u6765\u6269\u5c55I2C\u603b\u7ebf\u3002  \u8fde\u63a5\u4e24\u4e2a\u9700\u8981\u540c\u65f6\u5de5\u4f5c\u7684\u8bbe\u5907\u3002\u4f8b\u5982\uff0cLED\u548c\u7ee7\u7535\u5668\u53ef\u4ee5\u901a\u8fc7\u5355\u4e2aGrove\u5206\u652f\u7535\u7f06\u8fde\u63a5\u5230Grove Shield\u3002\u7531\u4e8e\u4e24\u4e2a\u5668\u4ef6\u5c06\u7531\u540c\u4e00\u4e2a\u6570\u5b57\u5f15\u811a\u63a7\u5236\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0\u540c\u65f6\u5173\u95edLED\u548c\u65ad\u5f00\u7ee7\u7535\u5668\u3002", 
            "title": "Grove - Branch Cable \uff08\u5206\u652f\u7535\u7f06\uff09"
        }, 
        {
            "location": "/Grove_System/#grove-branch-cable-for-servo", 
            "text": "Grove\u5206\u652f\u7535\u7f06\u662f\u53e6\u4e00\u79cdGrove\u7535\u7f06\uff0c\u4e3b\u8981\u7528\u4e8e\u5c06\u4e00\u4e2a\u6216\u4e24\u4e2a\u8235\u673a\u8fde\u63a5\u5230\u60a8\u7684\u9879\u76ee\u3002\u5b83\u4eec\u7531\u4e09\u4e2a\u8fde\u63a5\u5668\u7ec4\u6210\uff1a\u4e00\u4e2a\u56db\u9488\u6bcd\u8fde\u63a5\u5934\uff0c\u9002\u7528\u4e8e\u8fde\u63a5\u5230Grove Shield\uff0c\u4ee5\u53ca\u4e24\u4e2a\u4e09\u9488\u516c\u67f1\u578b\u8fde\u63a5\u5934\u3002\u5728\u8fd9\u79cd\u914d\u7f6e\u4e2d\uff0c\u7535\u6e90\u548c\u5730\uff08\u6765\u81ea\u56db\u9488\u6bcd\u5934\u7684\u5f15\u811a3\u548c4\uff09\u90fd\u8fde\u63a5\u52303\u9488\u7684\u7535\u6e90\u548c\u5730\u3002\u56db\u9488\u8fde\u63a5\u5668\u7684\u5f15\u811a1\uff08\u9ec4\u8272\uff09\u4e00\u7aef\u8fde\u63a5\u5230\u5177\u6709PWM\u529f\u80fd\u7684Arduino\u5f15\u811a\u4e0a\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u5230\u5e26\u6709\u9ec4\u8272\u5f15\u7ebf\u76843\u9488\u516c\u5934\u3002\u540c\u6837\uff0c\u56db\u9488\u8fde\u63a5\u5668\u7684\u5f15\u811a2\uff08\u767d\u7ebf\uff09\u7684\u4e00\u7aef\u4e5f\u8fde\u63a5\u5230Arduino\u7684\u7b2c\u4e8c\u4e2a\u5177\u6709PWM\u529f\u80fd\u7684\u5f15\u811a\u4e0a\uff0c\u800c\u53e6\u4e00\u7aef\u8fde\u63a5\u5230\u5e26\u6709\u9ec4\u7ebf\u7684\u53e6\u4e00\u4e2a\u4e09\u9488\u516c\u5934\u4e0a\u3002    \u7528\u4e8eServos\u7684Grove\u5206\u652f\u7535\u7f06\u7684\u56db\u9488\u8fde\u63a5\u5934\u901a\u5e38\u8fde\u63a5\u5230Grove Shield\u6570\u5b57\u63d2\u5ea7\uff0c\u5982D2-D9\u3002\u8fde\u63a5\u4f3a\u670d\u65f6\uff0c\u8bb0\u4e0b\u6570\u5b57PWM\u7535\u7f06\u7684\u7ebf\u989c\u8272\uff08\u9ec4\u8272\u6216\u767d\u8272\uff09\uff0c\u4ee5\u4e86\u89e3\u54ea\u4e2a\u6570\u5b57\u5f15\u811a\u5bf9\u5e94\u4e8e\u4f3a\u670d\u8f93\u5165\u3002", 
            "title": "Grove - Branch Cable for Servo \uff08\u4f3a\u670d\u5206\u652f\u7535\u7f06\uff09"
        }, 
        {
            "location": "/Grove_System/#grove-to-4pin-femalemale-jumper-grove4pin", 
            "text": "\u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6765:   \u5c06Grove\u8bbe\u5907\u8fde\u63a5\u5230\u5176\u4ed6\u4e0d\u5e26Grove\u63a5\u53e3\u7684MCU\uff0c\u4f8b\u5982\u60a8\u8981\u5c06Grove - Light Sensor\u8fde\u63a5\u5230Raspberry Pi\u3002  \u4f7f\u7528Grove shield\u63a7\u5236\u975eGrove\u63a5\u53e3\u7684\u8bbe\u5907\u3002", 
            "title": "Grove to 4pin Female/Male Jumper \uff08grove\u8f6c4pin \u8df3\u7ebf\uff09"
        }, 
        {
            "location": "/Grove_System/#_1", 
            "text": "Cable  Link      Branch Cable  \u7acb\u5373\u8d2d\u4e70!    Branch Cable for Servo  \u7acb\u5373\u8d2d\u4e70!    Grove to 4Pin Female  \u7acb\u5373\u8d2d\u4e70!    Grove to 4Pin Male  \u7acb\u5373\u8d2d\u4e70!", 
            "title": "\u7ebf\u7f06\u8d2d\u4e70\u94fe\u63a5"
        }, 
        {
            "location": "/Grove_System/#grove_7", 
            "text": "\u6211\u4eec\u4e3a\u521d\u5b66\u8005\u8bbe\u8ba1\u4e86\u8bb8\u591a\u5957\u4ef6\u3002Grove\u5165\u95e8\u5957\u4ef6\u5305\u62ecGrove\u6269\u5c55\u677f\uff0c\u591a\u4e2aGrove\u6a21\u5757\u548c\u7528\u6237\u624b\u518c\u3002\u540c\u65f6\u6211\u4eec\u63d0\u4f9b\u5927\u91cf\u8bfe\u7a0b\u4f9b\u521d\u5b66\u8005\u5b66\u4e60\u3002\u5982\u679c\u60a8\u60f3\u5f00\u59cb\u7cfb\u7edf\u5730\u5b66\u4e60\u4e00\u4e2a\u5e73\u53f0\u6216\u8005\u5b66\u4e60\u76f8\u5173\u7535\u5b50\u77e5\u8bc6\uff0cGrove Starter\u5957\u4ef6\u5305\u5c06\u662f\u60a8\u7684\u6700\u4f73\u7684\u9009\u62e9\u3002   \u6211\u4eec\u9488\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u5f00\u53d1\u4e86\u4e3a\u6570\u4f17\u591a\u7684\u5957\u4ef6     \u5957\u4ef6\u540d  \u8d2d\u4e70\u94fe\u63a5      Grove - Starter Kit for Arduino  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for mbed  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for LinkIt ONE  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for LaunchPad  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for Photon  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for BeagleBone Green  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for LinkIt 7688 Duo  \u7acb\u5373\u8d2d\u4e70!    Grove Starter Kit for 96Boards  \u7acb\u5373\u8d2d\u4e70!    Grove Starter kit for Arduino Genuino 101  \u7acb\u5373\u8d2d\u4e70!    GrovePi+ Starter Kit for Raspberry Pi  \u7acb\u5373\u8d2d\u4e70!", 
            "title": "Grove \u5165\u95e8\u5957\u4ef6"
        }, 
        {
            "location": "/Grove_System/#grove_8", 
            "text": "\u60f3\u8981\u4e00\u4e9bGrove\u6a21\u5757\u7528\u4e8e\u60a8\u7684\u9879\u76ee\uff1f\u8fd9\u91cc\u6709\u4e00\u4e9b\u63a8\u8350\u3002", 
            "title": "\u9009\u62e9\u60a8\u7684Grove"
        }, 
        {
            "location": "/Grove_System/#grove_9", 
            "text": "Grove - LED  Grove - Rotary Angle Sensor  Grove - Button           More Details  More Details  More Details        Grove - Switch  Grove - Encoder  Grove - Touch Sensor           More Details  More Details  More Details", 
            "title": "Grove \u57fa\u672c\u8f93\u5165\u8f93\u51fa\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_10", 
            "text": "I2C_LCD  Grove - OLED Display 0.96\"  Grove - OLED Display 1.12\"           More Details  More Details  More Details        Grove - LCD RGB Backlight  Grove - 4-Digit Display  Grove LED Bar v2.0           More Details  More Details  More Details", 
            "title": "Grove \u663e\u793a\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_11", 
            "text": "Grove - IMU 10DOF v2.0  Digital Accelerometer(\u00b1400g)  3-Axis Digital Gyro           More Details  More Details  More Details        3-Axis Digital Compass  3-Axis Digital Accelerometer(\u00b11.5g)  3-Axis Analog Accelerometer           More Details  More Details  More Details        3-Axis Digital Acc(\u00b116g)  6-Axis Acc Compass v2.0  6-Axis Acc Gyroscope           More Details  More Details  More Details", 
            "title": "Grove \u8fd0\u52a8\u68c0\u6d4b\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_12", 
            "text": "Grove \u2013 Uart Wifi  433MHz Simple RF link kit  315MHz Simple RF Link Kit           More Details  More Details  More Details        Grove - Serial RF Pro  125KHz RFID Reader  Grove - BLE           More Details  More Details  More Details        Grove - BLE (dual model)  Grove - NFC  Grove - NFC Tag           More Details  More Details  More Details", 
            "title": "Grove \u901a\u4fe1\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_13", 
            "text": "Air quality sensor  Gas Sensor(MQ2)  Gas Sensor(MQ5)           More Details  More Details  More Details        Gas Sensor(MQ3)  Gas Sensor(MQ9)  Gas Sensor(O2)           More Details  More Details  More Details        Dust Sensor  Moisture Sensor  Temperature Humidity Sensor           More Details  More Details  More Details", 
            "title": "Grove \u73af\u5883\u76d1\u6d4b\u6a21\u5757"
        }, 
        {
            "location": "/Grove_System/#grove_14", 
            "text": "I2C Mini Motor Driver  I2C Motor Driver  Grove - Servo           More Details  More Details  More Details        Line Finder  Ultrasonic Ranger  80cm Infrared Proximity Sensor           More Details  More Details  More Details", 
            "title": "Grove \u673a\u5668\u4eba\u914d\u4ef6"
        }, 
        {
            "location": "/Sensor/", 
            "text": "Grove - \u4f20\u611f\u5668\u5305\u62ec\u5404\u79cd\u4f20\u611f\u5668\u8f93\u5165\u6a21\u5757\u3002\n\n\n\u4ea7\u54c1\u5217\u8868\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u4f20\u611f\u5668\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGrove-3-Axis_Analog_Accelerometer\n\n\nGrove-3-Axis_Compass_V1.0\n\n\nGrove-3-Axis_Digital_Accelerometer-1.5g\n\n\nGrove-3-Axis_Digital_Accelerometer-16g\n\n\nGrove-3-Axis_Digital_Gyro\n\n\nGrove-6-Axis_AccelerometerAndCompass_V2.0\n\n\nGrove-6-Axis_AccelerometerAndGyroscope\n\n\nGrove-Air_Quality_Sensor_v1.3\n\n\nGrove-Alcohol_Sensor\n\n\nGrove-Barometer_High_Accuracy\n\n\nGrove-Barometer_Sensor-BME280\n\n\nGrove-Barometer_Sensor-BMP280\n\n\nGrove-CO2_Sensor\n\n\nGrove-Collision_Sensor\n\n\nGrove-Digital_Infrared_Temperature_Sensor\n\n\nGrove-Digital_Light_Sensor\n\n\nGrove-Dust_Sensor\n\n\nGrove-Ear-clip_Heart_Rate_Sensor\n\n\nGrove-Electricity_Sensor\n\n\nGrove-Electromagnet\n\n\nGrove-EMG_Detector\n\n\nGrove-Encoder\n\n\nGrove-Finger-clip_Heart_Rate_Sensor\n\n\nGrove-Finger-clip_Heart_Rate_Sensor_with_shell\n\n\nGrove-Fingerprint_Sensor\n\n\nGrove-Flame_Sensor\n\n\nGrove-Gas_Sensor-MQ2\n\n\nGrove-Gas_Sensor-MQ3\n\n\nGrove-Gas_Sensor-MQ5\n\n\nGrove-Gas_Sensor-MQ9\n\n\nGrove-Gas_Sensor-O2\n\n\nGrove-Gesture_v1.0\n\n\nGrove-GSR_Sensor\n\n\nGrove-Hall_Sensor\n\n\nGrove-HCHO_Sensor\n\n\nGrove-High_Temperature_Sensor\n\n\nGrove-I2C_Color_Sensor\n\n\nGrove-I2C_Touch_Sensor\n\n\nGrove-IMU_9DOF_v2.0\n\n\nGrove-Infrared_Receiver\n\n\nGrove-Infrared_Temperature_Sensor\n\n\nGrove-Light_Sensor\n\n\nGrove-Line_Finder\n\n\nGrove-Loudness_Sensor\n\n\nGrove-Luminance_Sensor\n\n\nGrove-Magnetic_Switch\n\n\nGrove-Mini_Track_Ball\n\n\nGrove-Moisture_Sensor\n\n\nGrove-Mouse_Encoder\n\n\nGrove-Multichannel_Gas_Sensor\n\n\nGrove-Piezo_Vibration_Sensor\n\n\nGrove-PIR_Motion_Sensor\n\n\nGrove-Q_Touch_Sensor\n\n\nGrove-Rotary_Angle_Sensor\n\n\nGrove-RTC\n\n\nGrove-Serial_Camera_Kit\n\n\nGrove-Slide_Potentiometer\n\n\nGrove-Sound_Sensor\n\n\nGrove-Speech_Recognizer\n\n\nGrove-Switch-P\n\n\nGrove-TempAndHumi_Sensor-SHT31\n\n\nGrove-Temperature_and_Humidity_Sensor\n\n\nGrove-Temperature_and_Humidity_Sensor_Pro\n\n\nGrove-Temperature_Sensor\n\n\nGrove-Temperature_Sensor_V1.2\n\n\nGrove-TemptureAndHumidity_Sensor_High_Accuracy_AndMini-v1.0\n\n\nGrove-Thumb_Joystick\n\n\nGrove-Tilt_Switch\n\n\nGrove-Touch_Sensor\n\n\nGrove-Ultrasonic_Ranger\n\n\nGrove-UV_Sensor\n\n\nGrove-Water_Sensor\n\n\nGrove-XBee_Carrier", 
            "title": "Sensor"
        }, 
        {
            "location": "/Sensor/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u4f20\u611f\u5668\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Grove-3-Axis_Analog_Accelerometer  Grove-3-Axis_Compass_V1.0  Grove-3-Axis_Digital_Accelerometer-1.5g  Grove-3-Axis_Digital_Accelerometer-16g  Grove-3-Axis_Digital_Gyro  Grove-6-Axis_AccelerometerAndCompass_V2.0  Grove-6-Axis_AccelerometerAndGyroscope  Grove-Air_Quality_Sensor_v1.3  Grove-Alcohol_Sensor  Grove-Barometer_High_Accuracy  Grove-Barometer_Sensor-BME280  Grove-Barometer_Sensor-BMP280  Grove-CO2_Sensor  Grove-Collision_Sensor  Grove-Digital_Infrared_Temperature_Sensor  Grove-Digital_Light_Sensor  Grove-Dust_Sensor  Grove-Ear-clip_Heart_Rate_Sensor  Grove-Electricity_Sensor  Grove-Electromagnet  Grove-EMG_Detector  Grove-Encoder  Grove-Finger-clip_Heart_Rate_Sensor  Grove-Finger-clip_Heart_Rate_Sensor_with_shell  Grove-Fingerprint_Sensor  Grove-Flame_Sensor  Grove-Gas_Sensor-MQ2  Grove-Gas_Sensor-MQ3  Grove-Gas_Sensor-MQ5  Grove-Gas_Sensor-MQ9  Grove-Gas_Sensor-O2  Grove-Gesture_v1.0  Grove-GSR_Sensor  Grove-Hall_Sensor  Grove-HCHO_Sensor  Grove-High_Temperature_Sensor  Grove-I2C_Color_Sensor  Grove-I2C_Touch_Sensor  Grove-IMU_9DOF_v2.0  Grove-Infrared_Receiver  Grove-Infrared_Temperature_Sensor  Grove-Light_Sensor  Grove-Line_Finder  Grove-Loudness_Sensor  Grove-Luminance_Sensor  Grove-Magnetic_Switch  Grove-Mini_Track_Ball  Grove-Moisture_Sensor  Grove-Mouse_Encoder  Grove-Multichannel_Gas_Sensor  Grove-Piezo_Vibration_Sensor  Grove-PIR_Motion_Sensor  Grove-Q_Touch_Sensor  Grove-Rotary_Angle_Sensor  Grove-RTC  Grove-Serial_Camera_Kit  Grove-Slide_Potentiometer  Grove-Sound_Sensor  Grove-Speech_Recognizer  Grove-Switch-P  Grove-TempAndHumi_Sensor-SHT31  Grove-Temperature_and_Humidity_Sensor  Grove-Temperature_and_Humidity_Sensor_Pro  Grove-Temperature_Sensor  Grove-Temperature_Sensor_V1.2  Grove-TemptureAndHumidity_Sensor_High_Accuracy_AndMini-v1.0  Grove-Thumb_Joystick  Grove-Tilt_Switch  Grove-Touch_Sensor  Grove-Ultrasonic_Ranger  Grove-UV_Sensor  Grove-Water_Sensor  Grove-XBee_Carrier", 
            "title": "\u4ea7\u54c1\u5217\u8868"
        }, 
        {
            "location": "/Grove-Encoder/", 
            "text": "\u7b80\u4ecb\n\n\nGrove \u2013 Encoder \u662f\u4e00\u4e2a\u589e\u91cf\u65cb\u8f6c\u7f16\u7801\u5668\u3002\u5b83\u5c06\u8f74\u7684\u65cb\u8f6c\u4fe1\u53f7\u7f16\u7801\u6210\u7535\u5b50\u8109\u51b2\u8f93\u51fa\u4fe1\u53f7\u3002\u8fd9\u4e2a\u6a21\u5757\u4e5f\u5c5e\u4e8eGrove\u7cfb\u5217\uff0c\u6709\u6807\u51c6\u7684Grove\u63a5\u53e3\u3002\n\n\n\u5f53\u60a8\u7684\u9879\u76ee\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u65cb\u94ae\u65f6\uff0c\u6bd4\u5982\u8bf4\u97f3\u91cf\u65cb\u94ae\uff0c\u6570\u5b57\u65cb\u94ae\u7b49\uff0c\u8fd9\u4e2a\u4ea7\u54c1\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u589e\u91cf\u5f0f\u7f16\u7801\u5668\n\n\nGrove\u63a5\u53e3\n\n\n360\u5ea6\u65cb\u8f6c\n\n\n\n\n\n\nTips\n\n\n\n\n\u5173\u4e8eGrove\u63a5\u53e3\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003\u4e0b\u9762\u94fe\u63a5\nGrove System\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n\n\n4.5\n\n\n\n\n5\n\n\n\n\n5.5\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u7535\u6d41\n\n\n\n\n10\n\n\n\n\n20\n\n\n\n\n30\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n\n\n20x 20\n\n\n\n\nmm\n\n\n\n\n\n\n\n\n\u51c0\u91cd\n\n\n\n\n12\n\n\n\n\ng\n\n\n\n\n\n\n\n\n\u5e73\u53f0\u652f\u6301\n\n\nIntel Edison (with the \nseeedstudio library\n)\n\n\nArduino101 (with the \ncommunity library\n)\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u5f00\u59cb\u4e4b\u524d\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\nGrove-Encoder \u4f7f\u7528\u7684\u4e3aseeedstudio\u7f16\u5199\u7684\u5e93\u7b80\u5355\u6613\u7528\uff0c\u9996\u5148\u8bf7\u70b9\u51fb\u540e\u9762\u7684\u5e93\u540d\u4e0b\u8f7d\u5e93 \nseeedstudio Encoder Lib\n, \u6216\u8005\u70b9\u51fb\u8fd9\u91cc\ncommunity GroveEncoder library\n.  \u7136\u540e\u53ea\u9700\u8981\u628a\u5b83\u63a5\u5728BaseShield\u7684D2\u63a5\u53e3\u4e0a\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86.\n\n\n\u73af\u5f62LED\u706f\u6761\u793a\u4f8b\n\n\n\n\n\n\n1.\n\n\n\n\n\u63a5\u4e0b\u6765\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u5c31\u662f\u5c55\u793a\u4e86\u5982\u4f55\u64cd\u505a\u4e00\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u3002\n\u8fd9\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u7531Encoder\u548c  \nGrove-CircularLED\n \uff08\u53ef\u70b9\u51fb\u67e5\u770b\uff09\u4e24\u4e2a\u6a21\u5757\u7ec4\u6210 \u3002\u5c06\u8fd9\u4e24\u4e2a\u6a21\u5757\u6309\u7167\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u8d77\u6765:\n\n\n\n\n\n\n2.\n\n\n\n\n\u8fd9\u4e2a\u9879\u76ee\u9700\u8981\u5148\u70b9\u51fb\u5b89\u88c5\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5e93\uff1a \nTimerOne Lib\n \u5e93\u3001 \nEncoder Lib\n \u5e93\u548c \nCircularLED Library\n\u5e93 \u3002\u4e0b\u8f7d\u5b8c\u4e0a\u9762\u51e0\u4e2a\u5e93\u540e\u5b89\u88c5\u5728\u4f60\u7684Arduino IDE\u4e0a\u3002\n\n\n\n\n3.\n\n\n\n\n\u91cd\u542f\u5e76\u6253\u5f00Arduino IDE\uff0c\u6253\u5f00 \nFile-\nExamples-\nEncoder-\nEncodeCircuiBar\n\u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a\n\n\n#include \nCircularLED.h\n\n#include \nEncoder.h\n\n#include \nTimerOne.h\n\nCircularLED circularLED;\nunsigned int LED[24];\nint index_LED;\nvoid setup()\n{\n  encoder.Timer_init();\n}\nvoid loop()\n{\n    if (encoder.rotate_flag ==1)\n  {\n    if (encoder.direct==1)\n    {\n      index_LED++;\n      if (index_LED\n23)\n      index_LED=24;\n      SenttocircularBar(index_LED);\n    }\n     else\n     {\n      index_LED--;\n      if(index_LED\n0)\n      index_LED=0;\n      SenttocircularBar(index_LED);\n     }\n    encoder.rotate_flag =0;\n  }\n}\nvoid SenttocircularBar(int index)\n{\n  for (int i=0;i\n24;i++)\n  {\n    if (i\nindex)\n    {\n      LED[i]=0xff;\n    }\n    else\n    LED[i]=0;\n  }\n  circularLED.CircularLEDWrite(LED);\n}\n\n\n\n\n\n\n4.\n\n\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684Arduino\u6216Seeeduino\u677f\u5b50\u91cc\u3002\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n\n\n\n\n\uff01\uff01\uff01\u6ce8\u610f\n\n\n    \u5f53Grove \u2013 Encoder \u88ab\u6309\u4e0b\u65f6\uff0c\u4e5f\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4fe1\u53f7\uff0c\u4f46\u662f\u57fa\u4e8eGrove\u7ebf\u7684\u9650\u5236\uff0c\u5e76\u6ca1\u6709\u5c06\u8be5\u4fe1\u53f7\u5f15\u51fa\u6765\u3002\n\n\n\n\n\u8d44\u6599\u4e0b\u8f7d\n\n\n\n\nEncoder Spec\n\n\nDemo in Arduino forum\n\n\nTimeOne Lib\n\n\nseeedstudio Encoder Library\n\n\ncommunity Encoder Library\n\n\nGrove-Encoder Eagle files", 
            "title": "Grove-Encoder"
        }, 
        {
            "location": "/Grove-Encoder/#_1", 
            "text": "Grove \u2013 Encoder \u662f\u4e00\u4e2a\u589e\u91cf\u65cb\u8f6c\u7f16\u7801\u5668\u3002\u5b83\u5c06\u8f74\u7684\u65cb\u8f6c\u4fe1\u53f7\u7f16\u7801\u6210\u7535\u5b50\u8109\u51b2\u8f93\u51fa\u4fe1\u53f7\u3002\u8fd9\u4e2a\u6a21\u5757\u4e5f\u5c5e\u4e8eGrove\u7cfb\u5217\uff0c\u6709\u6807\u51c6\u7684Grove\u63a5\u53e3\u3002  \u5f53\u60a8\u7684\u9879\u76ee\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u65cb\u94ae\u65f6\uff0c\u6bd4\u5982\u8bf4\u97f3\u91cf\u65cb\u94ae\uff0c\u6570\u5b57\u65cb\u94ae\u7b49\uff0c\u8fd9\u4e2a\u4ea7\u54c1\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/Grove-Encoder/#_2", 
            "text": "\u589e\u91cf\u5f0f\u7f16\u7801\u5668  Grove\u63a5\u53e3  360\u5ea6\u65cb\u8f6c    Tips   \u5173\u4e8eGrove\u63a5\u53e3\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003\u4e0b\u9762\u94fe\u63a5 Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Encoder/#_3", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u7535\u538b  \n4.5  \n5  \n5.5  \nV    \n\u7535\u6d41  \n10  \n20  \n30  \nmA    \n\u5c3a\u5bf8  \n20x 20  \nmm    \n\u51c0\u91cd  \n12  \ng", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Encoder/#_4", 
            "text": "Intel Edison (with the  seeedstudio library )  Arduino101 (with the  community library )", 
            "title": "\u5e73\u53f0\u652f\u6301"
        }, 
        {
            "location": "/Grove-Encoder/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Encoder/#_6", 
            "text": "\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002  Grove-Encoder \u4f7f\u7528\u7684\u4e3aseeedstudio\u7f16\u5199\u7684\u5e93\u7b80\u5355\u6613\u7528\uff0c\u9996\u5148\u8bf7\u70b9\u51fb\u540e\u9762\u7684\u5e93\u540d\u4e0b\u8f7d\u5e93  seeedstudio Encoder Lib , \u6216\u8005\u70b9\u51fb\u8fd9\u91cc community GroveEncoder library .  \u7136\u540e\u53ea\u9700\u8981\u628a\u5b83\u63a5\u5728BaseShield\u7684D2\u63a5\u53e3\u4e0a\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86.", 
            "title": "\u5f00\u59cb\u4e4b\u524d"
        }, 
        {
            "location": "/Grove-Encoder/#led", 
            "text": "1.   \u63a5\u4e0b\u6765\u7684\u8fd9\u4e2a\u793a\u4f8b\uff0c\u5c31\u662f\u5c55\u793a\u4e86\u5982\u4f55\u64cd\u505a\u4e00\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u3002\n\u8fd9\u4e2a\u5706\u5f62\u7684LED\u706f\u6761\u7531Encoder\u548c   Grove-CircularLED  \uff08\u53ef\u70b9\u51fb\u67e5\u770b\uff09\u4e24\u4e2a\u6a21\u5757\u7ec4\u6210 \u3002\u5c06\u8fd9\u4e24\u4e2a\u6a21\u5757\u6309\u7167\u4e0b\u56fe\u6240\u793a\u8fde\u63a5\u8d77\u6765:    2.   \u8fd9\u4e2a\u9879\u76ee\u9700\u8981\u5148\u70b9\u51fb\u5b89\u88c5\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5e93\uff1a  TimerOne Lib  \u5e93\u3001  Encoder Lib  \u5e93\u548c  CircularLED Library \u5e93 \u3002\u4e0b\u8f7d\u5b8c\u4e0a\u9762\u51e0\u4e2a\u5e93\u540e\u5b89\u88c5\u5728\u4f60\u7684Arduino IDE\u4e0a\u3002   3.   \u91cd\u542f\u5e76\u6253\u5f00Arduino IDE\uff0c\u6253\u5f00  File- Examples- Encoder- EncodeCircuiBar \u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a  #include  CircularLED.h \n#include  Encoder.h \n#include  TimerOne.h \nCircularLED circularLED;\nunsigned int LED[24];\nint index_LED;\nvoid setup()\n{\n  encoder.Timer_init();\n}\nvoid loop()\n{\n    if (encoder.rotate_flag ==1)\n  {\n    if (encoder.direct==1)\n    {\n      index_LED++;\n      if (index_LED 23)\n      index_LED=24;\n      SenttocircularBar(index_LED);\n    }\n     else\n     {\n      index_LED--;\n      if(index_LED 0)\n      index_LED=0;\n      SenttocircularBar(index_LED);\n     }\n    encoder.rotate_flag =0;\n  }\n}\nvoid SenttocircularBar(int index)\n{\n  for (int i=0;i 24;i++)\n  {\n    if (i index)\n    {\n      LED[i]=0xff;\n    }\n    else\n    LED[i]=0;\n  }\n  circularLED.CircularLEDWrite(LED);\n}   4.   \u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684Arduino\u6216Seeeduino\u677f\u5b50\u91cc\u3002\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002    \uff01\uff01\uff01\u6ce8\u610f \n\n    \u5f53Grove \u2013 Encoder \u88ab\u6309\u4e0b\u65f6\uff0c\u4e5f\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4fe1\u53f7\uff0c\u4f46\u662f\u57fa\u4e8eGrove\u7ebf\u7684\u9650\u5236\uff0c\u5e76\u6ca1\u6709\u5c06\u8be5\u4fe1\u53f7\u5f15\u51fa\u6765\u3002", 
            "title": "\u73af\u5f62LED\u706f\u6761\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Encoder/#_7", 
            "text": "Encoder Spec  Demo in Arduino forum  TimeOne Lib  seeedstudio Encoder Library  community Encoder Library  Grove-Encoder Eagle files", 
            "title": "\u8d44\u6599\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/", 
            "text": "\u4ea7\u54c1\u7b80\u4ecb\n\n\nGrove-Multichannel Gas Sensor\u662f\u4e00\u4e2a\u5efa\u7acb\u5728MiCS-6814\u4e0a\u7684\u73af\u5883\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u68c0\u6d4b\u591a\u79cd\u6709\u5bb3\u6c14\u4f53\uff0c\u7531\u4e8e\u5176\u591a\u901a\u9053\u7279\u6027\uff0c\u53ef\u4ee5\u540c\u65f6\u68c0\u6d4b\u4e09\u79cd\u4e0d\u540c\u6c14\u4f53\u3002\u56e0\u6b64\uff0c\u5f53\u73af\u5883\u5185\u4e0d\u6b62\u4e00\u79cd\u6c14\u4f53\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u53ef\u4ee5\u7528\u4e8e\u76d1\u6d4b\u6c14\u4f53\u6d53\u5ea6\u3002\n\n\n\u8fd9\u4e2a\u4f20\u611f\u5668\u5c5e\u4e8eGrove system\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5230Base shield\u4e0a\uff0c\u5728\u4e0d\u9700\u8981\u4efb\u4f55\u8df3\u7ebf\u7684\u6761\u4ef6\u4e0b\uff0c\u76f4\u63a5\u4e0eArduino\u7ec4\u5408\u4f7f\u7528\u3002\u5176\u63a5\u53e3\u4e3aI2C\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u5b83\u8fde\u63a5\u5230\u6269\u5c55\u677f\u81ea\u5e26\u7684I2C\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\n\n\n\n\n\u6ce8\u610f\u63d0\u793a\n\n\n\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u4e86\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u6c14\u4f53\u6d53\u5ea6\u7684\u8fd1\u4f3c\u8d8b\u52bf, \u5b83\u5e76\u4e0d\u4ee3\u8868\u51c6\u786e\u771f\u5b9e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002\u7a7a\u6c14\u4e2d\u7279\u5b9a\u6210\u5206\u6d53\u5ea6\u7684\u68c0\u6d4b\u65e0\u6cd5\u901a\u8fc7\u5355\u4e00\u7684\u4f20\u611f\u5668\u5b9e\u73b0\uff0c\u901a\u5e38\u9700\u8981\u66f4\u52a0\u7cbe\u786e\u548c\u6602\u8d35\u7684\u8bbe\u5907\u3002\u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u6c14\u4f53\u6d53\u5ea6\u6570\u636e\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u60a8\u4f7f\u7528\u8fd9\u4e2a\u4f20\u611f\u5668\u3002\n\n\n\n\n\n\n\n\n\u5f00\u59cb\u4e4b\u524d\n\n\n\u76f8\u5173\u9605\u8bfb\n\n\n\u6211\u4eec\u6781\u529b\u63a8\u8350\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\uff0c\u5148\u9605\u8bfb\u5982\u4e0b\u53c2\u8003\u8d44\u6599\u3002\u8fd9\u5c06\u5e2e\u52a9\u60a8\u4e86\u89e3\u66f4\u591a\u5173\u4e8eArduino\u548c\u6211\u4eec\u4ea7\u54c1\u7684\u76f8\u5173\u77e5\u8bc6\u3002\u800c\u4e14\u4f1a\u4f7f\u60a8\u5728\u4f7f\u7528\u5f00\u6e90\u786c\u4ef6\u65f6\u66f4\u5f97\u5fc3\u5e94\u624b\u3002\n\n\n\n\nArduino\u5165\u95e8\u6307\u5bfc\n\n\nGrove\u7cfb\u7edf\u7b80\u4ecb\n\n\nBase_Shield\u4f7f\u7528\u6307\u5357\n\n\n\n\n\u9605\u8bfb\u5b8c\u4e0a\u8bc9\u8d44\u6599\u540e\u60a8\u5c06\u638c\u63e1\u5982\u4f55\u4f7f\u7528Base_Shield\u677f\u5361\u5c06Grove\u7cfb\u5217\u4ea7\u54c1\u4e0eArduino\u76f8\u8fde\u3002\u597d\u4e86\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u8fd9\u4e2a\u6559\u7a0b\u5c06\u9700\u8981\u4f7f\u7528\u5230\u4e0b\u5217\u4ea7\u54c1\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u67e5\u9605\u6216\u8d2d\u4e70\u5bf9\u5e94\u4ea7\u54c1:\n\n\n\n\nArduino UNO R3\n \u6216\u8005 \nSeeeduino v4\n\n\nBase Shield\n\n\nGrove - Multichannel Gas Sensor\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npin\u540d\u79f0\n\n\n\u76f8\u5173\u63cf\u8ff0\n\n\n\n\n\n\n\n\n\n\nGND\n\n\n\u63a5\u5730\n\n\n\n\n\n\nVCC\n\n\n3.3V - 5V\n\n\n\n\n\n\nSDA\n\n\nI2C data\n\n\n\n\n\n\nSCL\n\n\nI2C clock\n\n\n\n\n\n\n\n\n\u8be5\u4f20\u611f\u5668\u7684\u4f9b\u7535\u7535\u538b\u4ecb\u4e8e3.3V\u548c5V\u4e4b\u95f4\uff0c\u53ef\u4e0e\u8f93\u51fa\u7535\u538b\u4e3a3.3V\u7684\u5355\u7247\u673a\u517c\u5bb9\u3002\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u4e09\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u4f20\u611f\u5355\u5143\n\n\n\u57fa\u4e8eATmega168PA\n\n\n\u5e26\u6709\u53ef\u7f16\u7a0b\u5730\u5740\u7684I2C\u63a5\u53e3\n\n\n\u53ef\u4ee5\u901a\u8fc7\u5173\u95ed\u52a0\u70ed\u529f\u8017\u964d\u4f4e\u529f\u7387\n\n\n\u53ef\u68c0\u6d4b\u7684\u6c14\u4f53\u79cd\u7c7b\uff1a\n\n\n\u4e00\u6c27\u5316\u78b3 CO 1-1000ppm\n\n\n\u4e8c\u6c27\u5316\u6c2e NO2 0.05-10ppm\n\n\n\u4e59\u9187 C2H6OH 10-500ppm\n\n\n\u6c22 H2 1-1000ppm\n\n\n\u6c28 NH3 1-500ppm\n\n\n\u7532\u70f7 CH4 \n1000ppm\n\n\n\u4e19\u70f7 C3H8 \n1000ppm\n\n\n\u5f02\u4e01\u70f7 C4H10 \n1000ppm\n\n\n\n\n\u6a21\u5757\u56fe\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\nArduino, linkit, wio\n\n\n\u7535\u6c14\u7279\u6027\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u72b6\u6001\n\n\n\u6700\u5c0f\u503c\n\n\n\u7279\u5f81\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n-\n\n\n3.1\n\n\n3.3\n\n\n5.25\n\n\nV\n\n\n\n\n\n\n\u6ce2\u7eb9\n\n\n\u6700\u5927\u4f9b\u7535\n\n\n-\n\n\n80\n\n\n100\n\n\nmV\n\n\n\n\n\n\n\u53d1\u70ed\u529f\u7387\n\n\n-\n\n\n-\n\n\n-\n\n\n88\n\n\nmV\n\n\n\n\n\n\n\u6700\u5927\u529f\u7387\n\n\n-\n\n\n-\n\n\n-\n\n\n150\n\n\nmV\n\n\n\n\n\n\nADC\u7cbe\u5ea6\n\n\n-\n\n\n-\n\n\n10\n\n\n-\n\n\nBits\n\n\n\n\n\n\nI2C\u901f\u5ea6\n\n\n-\n\n\n-\n\n\n100\n\n\n400\n\n\nkHz\n\n\n\n\n\n\nVIL\n\n\n@I2C\n\n\n-0.5\n\n\n-\n\n\n0.99\n\n\nV\n\n\n\n\n\n\nVIH\n\n\n@I2C\n\n\n2.31\n\n\n-\n\n\n5.25\n\n\nV\n\n\n\n\n\n\n\n\nRED\u4f20\u611f\u5668\u6027\u80fd\n\n\n\n\n\n\n\n\nCharacteristic RED sensor\n\n\nSymbol\n\n\nTyp\n\n\nMin\n\n\nMax\n\n\nUnit\n\n\n\n\n\n\n\n\n\n\nSensing resistance in air\n\n\nR0\n\n\n-\n\n\n100\n\n\n1500\n\n\nk\u03a9\n\n\n\n\n\n\nTypical CO detection range\n\n\nFS\n\n\n-\n\n\n1\n\n\n1000\n\n\nppm\n\n\n\n\n\n\nSensitivity factor\n\n\nSR\n\n\n-\n\n\n1.2\n\n\n50\n\n\n-\n\n\n\n\n\n\n\n\n\n\nOX\u4f20\u611f\u5668\u6027\u80fd\n\n\n\n\n\n\n\n\nCharacteristic OX sensor\n\n\nSymbol\n\n\nTyp\n\n\nMin\n\n\nMax\n\n\nUnit\n\n\n\n\n\n\n\n\n\n\nSensing resistance in air\n\n\nR0\n\n\n-\n\n\n0.8\n\n\n20\n\n\nk\u03a9\n\n\n\n\n\n\nTypical NO2 detection range\n\n\nFS\n\n\n-\n\n\n0.05\n\n\n10\n\n\nppm\n\n\n\n\n\n\nSensitivity factor\n\n\nSR\n\n\n-\n\n\n2\n\n\n-\n\n\n-\n\n\n\n\n\n\n\n\n\n\nNH3\u4f20\u611f\u5668\u6027\u80fd\n\n\n\n\n\n\n\n\nCharacteristic NH3 sensor\n\n\nSymbol\n\n\nTyp\n\n\nMin\n\n\nMax\n\n\nUnit\n\n\n\n\n\n\n\n\n\n\nSensing resistance in air\n\n\nR0\n\n\n-\n\n\n10\n\n\n1500\n\n\nk\u03a9\n\n\n\n\n\n\nTypical NH3 detection range\n\n\nFS\n\n\n-\n\n\n1\n\n\n300\n\n\nppm\n\n\n\n\n\n\nSensitivity factor\n\n\nSR\n\n\n-\n\n\n1.5\n\n\n15\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u6ce8\u610f\u63d0\u793a\n\n\u4e3a\u4e86\u5f97\u5230\u7a33\u5b9a\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u4f20\u611f\u5668\u9700\u8981\u9884\u52a0\u70ed\u5341\u5206\u949f\u4ee5\u4e0a\u3002\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\u56fe:\n\n\n1.\u5c06 Grove - Multichannel Gas Sensor \u548c Seeeduino\u6309\u7167\u4e0b\u56fe\u65b9\u5f0f\u76f8\u8fde.\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801:\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\n\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\n2.\u4e0b\u8f7d \nArduino Library \n Grove/Xadow firmware\n \u7136\u540e\u6dfb\u52a0\u5230Arduino\u5e93\u6587\u4ef6\u4e2d\u3002\n\n\n3.\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f:File -\n Example -\n Mutichannel_Gas_Sensor-\n ReadSensorValue_Grove.\n\n\nReadSensorValue_Grove \u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n\n// Read Data from Grove - Multichannel Gas Sensor\n\n\n#include\n \nWire.h\n\n\n#include\n \nMutichannelGasSensor.h\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nSerial\n.\nbegin\n(\n115200\n);\n  \n// start serial for output\n\n    \nSerial\n.\nprintln\n(\npower on!\n);\n\n    \ngas\n.\nbegin\n(\n0x04\n);\n//the default I2C address of the slave is 0x04\n\n    \ngas\n.\npowerOn\n();\n\n    \nSerial\n.\nprint\n(\nFirmware Version = \n);\n\n    \nSerial\n.\nprintln\n(\ngas\n.\ngetVersion\n());\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nfloat\n \nc\n;\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_NH3\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of NH3 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_CO\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of CO is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_NO2\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of NO2 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_C3H8\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of C3H8 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_C4H10\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of C4H10 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_CH4\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of CH4 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_H2\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of H2 is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \nc\n \n=\n \ngas\n.\nmeasure_C2H5OH\n();\n\n    \nSerial\n.\nprint\n(\nThe concentration of C2H5OH is \n);\n\n    \nif\n(\nc\n=\n0\n)\n \nSerial\n.\nprint\n(\nc\n);\n\n    \nelse\n \nSerial\n.\nprint\n(\ninvalid\n);\n\n    \nSerial\n.\nprintln\n(\n ppm\n);\n\n\n    \ndelay\n(\n1000\n);\n\n\n}\n\n\n\n\n\n4.\u4e0a\u4f20\u4ee3\u7801\u3002\u8bf7\u8bb0\u5f97\u5728Arduino\u8f6f\u4ef6\u7684 \u5de5\u5177 | \u5f00\u53d1\u677f\u4e2d\u52fe\u9009\u5bf9\u5e94\u7684\u677f\u5361\uff0c\u672c\u4f8b\u7a0b\u4f7f\u7528\u7684\u662fSeeeduino Uno\uff0c\u540c\u65f6\u8bf7\u9009\u62e9\u6b63\u786e\u7684\u4e32\u53e3\u3002\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08ctrl+shift+M\uff09\uff0c\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u6765\u81ea\u4f20\u611f\u5668\u7684\u6570\u636e\u4e86.\n\n\n\n\n\n\nTip\n\n\n\n\n\u66f4\u591a\u7684\u5173\u4e8eGrove\u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u53c2\u8003 \nGrove System\n\n\n\n\n\n\n\u66f4\u65b0\u56fa\u4ef6\n\n\n\u8be5Grove\u6a21\u5757\u6709\u4e00\u4e2aATmega168 MCU \u51fa\u5382\u56fa\u4ef6\u3002\u56fa\u4ef6\u5df2\u7ecf\u4e8e2016\u5e7411\u670811\u66f4\u65b0\u5230\u4e86V2.0\u7248\u672c\u3002\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u68c0\u6d4b\u60a8\u5f53\u524d\u7684\u56fa\u4ef6\u7248\u672c\u3002\n\n\n// Get firmware version of Grove Multichannel Gas Sensor\n\n\n#include\n \nWire.h\n\n\n#include\n \nMutichannelGasSensor.h\n\n\n\n#define SENSOR_ADDR     0X04        \n// default to 0x04\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nSerial\n.\nbegin\n(\n115200\n);\n\n    \ngas\n.\nbegin\n(\nSENSOR_ADDR\n);\n\n\n    \nunsigned\n \nchar\n \nversion\n \n=\n \ngas\n.\ngetVersion\n();\n\n    \nSerial\n.\nprint\n(\nVersion = \n);\n\n    \nSerial\n.\nprintln\n(\nversion\n);\n    \n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \n// nothing to do\n\n\n}\n\n\n\n\n\n\u5982\u679c\u68c0\u6d4b\u7ed3\u679c\u60a8\u7684\u56fa\u4ef6\u7248\u672c\u662fV1\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u66f4\u65b0\u56fa\u4ef6\u5230V2\u4ee5\u83b7\u53d6\u66f4\u7a33\u5b9a\u7684\u6570\u636e\u3002\n\n\n\u4e3a\u4e86\u66f4\u65b0\u56fa\u4ef6\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7d20\u6750,\n\n\n\n\nAn Arduino UNO/Seeeduino V3/\n\n\n6 \u6839\u675c\u90a6\u7ebf\n\n\n\u70d9\u94c1\n\n\n\n\n\u5728\u677f\u5361\u7684\u80cc\u9762\u7559\u6709ICSP\u710a\u76d8\uff0c\u60a8\u9700\u8981\u5c06\u8fd9\u4e9b\u710a\u76d8\u4e0eArduino\u677f\u5b50\u76f8\u8fde\u3002\u7ba1\u811a\u5b9a\u4e49\u5982\u4e0b\u8868\uff0c\u8fde\u63a5\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\n\n\n\nSensor\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nMISO\n\n\nD12\n\n\n\n\n\n\nSCK\n\n\nD13\n\n\n\n\n\n\nNRST\n\n\nD10\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nMOSI\n\n\nD11\n\n\n\n\n\n\nVCC\n\n\n5V\n\n\n\n\n\n\n\n\n\n\n\u8fde\u63a5\u597d\u4e4b\u540e\uff0c\u8bf7\u6253\u5f00\u60a8Arduino\u793a\u4f8b\u4e2d\u7684 \nUpdateFrimware\n , \u8fd0\u884c\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002\u60a8\u5c06\u770b\u5230\u4e00\u4e9b\u6253\u5370\u7684\u4fe1\u606f\u3002\n\n\n\u8f93\u5165\u4e00\u4e2a \u201c g \u201d\u6765\u5f00\u59cb\u70e7\u5f55\u3002\n\n\n\n\n\u6821\u51c6\n\n\n\u5982\u679c\u60a8\u603b\u662f\u5f97\u5230\u4e00\u4e9b\u4e0d\u53ef\u9760\u7684\u6570\u636e\uff0c\u8bf7\u5c1d\u8bd5\u6821\u51c6\u4f20\u611f\u5668\u3002\u6253\u5f00\u793a\u4f8b\u4e2d\u7684 \ncalibration\n ,\u4e0a\u4f20\u81f3\u60a8\u7684Arduino\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u6821\u51c6\u7684\u76f8\u5173\u4fe1\u606f\u3002\n\n\n\n\nNote\n\n\n\n\n\u5728\u4f20\u611f\u5668\u51fa\u5382\u524d\u5df2\u7ecf\u6821\u51c6\u8fc7\u4e86\uff0c\u5982\u679c\u60a8\u60f3\u8981\u91cd\u65b0\u6821\u51c6\uff0c\u8bf7\u786e\u4fdd\u6821\u51c6\u65f6\u7a7a\u6c14\u73af\u5883\u662f\u65b0\u9c9c\u6e05\u65b0\u7684\u3002\u6821\u51c6\u5927\u81f4\u9700\u8981\u51e0\u5206\u949f\u5230\u534a\u5c0f\u65f6\u4e0d\u7b49\u7684\u65f6\u95f4\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u539f\u7406\u56fe]\n  \nGrove - Multichannel Gas Sensor v1.0 sch\n\n\n[PCB\u56fe]\n \nGrove - Multichannel Gas Sensor eagle files\n\n\n[\u5e93\u6587\u4ef6]\n \nArduino Library \n Grove/Xadow firmware\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nMiCS-6814 Datasheet\n\n\n\n\n\n\n\nFAQ\n\n\n\n\n\n\nQ1. \u5982\u4f55\u6539\u53d8\u6a21\u5757\u7684I2C\u5730\u5740\n\n\n\n\nA1. \u6253\u5f00\u793a\u4f8b\u4e2d\u540d\u4e3aI2C_Address\u7684\u4f8b\u7a0b\uff0c\u8fd0\u884c\u5b83\u3002\n\n\n\n\n\n\n\n\nQ2. \u6211\u6539\u4e86I2C\u5730\u5740\u4f46\u662f\u4e0d\u5c0f\u5fc3\u5fd8\u4e86\n\n\n\n\n*A2. \u522b\u62c5\u5fc3\uff0c\u8fd0\u884c\u793a\u4f8b\u4e2d\u540d\u4e3a factory_setting\u7684\u4f8b\u7a0b\uff0c\u56de\u5230\u51fa\u5382\u72b6\u6001\u3002 *\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\u5982\u679c\u60a8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u652f\u6301\uff0c\u8bf7\u8054\u7cfb\u4e0b\u9762\u7684\u90ae\u7bb1\uff0c\u6211\u4eec\u671f\u5f85\u5e76\u6b22\u8fce\u60a8\u7684\u54a8\u8be2\uff1a", 
            "title": "Grove-Multichannel Gas Sensor"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_1", 
            "text": "Grove-Multichannel Gas Sensor\u662f\u4e00\u4e2a\u5efa\u7acb\u5728MiCS-6814\u4e0a\u7684\u73af\u5883\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u68c0\u6d4b\u591a\u79cd\u6709\u5bb3\u6c14\u4f53\uff0c\u7531\u4e8e\u5176\u591a\u901a\u9053\u7279\u6027\uff0c\u53ef\u4ee5\u540c\u65f6\u68c0\u6d4b\u4e09\u79cd\u4e0d\u540c\u6c14\u4f53\u3002\u56e0\u6b64\uff0c\u5f53\u73af\u5883\u5185\u4e0d\u6b62\u4e00\u79cd\u6c14\u4f53\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u53ef\u4ee5\u7528\u4e8e\u76d1\u6d4b\u6c14\u4f53\u6d53\u5ea6\u3002  \u8fd9\u4e2a\u4f20\u611f\u5668\u5c5e\u4e8eGrove system\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5230Base shield\u4e0a\uff0c\u5728\u4e0d\u9700\u8981\u4efb\u4f55\u8df3\u7ebf\u7684\u6761\u4ef6\u4e0b\uff0c\u76f4\u63a5\u4e0eArduino\u7ec4\u5408\u4f7f\u7528\u3002\u5176\u63a5\u53e3\u4e3aI2C\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u5b83\u8fde\u63a5\u5230\u6269\u5c55\u677f\u81ea\u5e26\u7684I2C\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528   \u6ce8\u610f\u63d0\u793a \n\n\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u4e86\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u6c14\u4f53\u6d53\u5ea6\u7684\u8fd1\u4f3c\u8d8b\u52bf, \u5b83\u5e76\u4e0d\u4ee3\u8868\u51c6\u786e\u771f\u5b9e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002\u7a7a\u6c14\u4e2d\u7279\u5b9a\u6210\u5206\u6d53\u5ea6\u7684\u68c0\u6d4b\u65e0\u6cd5\u901a\u8fc7\u5355\u4e00\u7684\u4f20\u611f\u5668\u5b9e\u73b0\uff0c\u901a\u5e38\u9700\u8981\u66f4\u52a0\u7cbe\u786e\u548c\u6602\u8d35\u7684\u8bbe\u5907\u3002\u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u6c14\u4f53\u6d53\u5ea6\u6570\u636e\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u60a8\u4f7f\u7528\u8fd9\u4e2a\u4f20\u611f\u5668\u3002", 
            "title": "\u4ea7\u54c1\u7b80\u4ecb"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_2", 
            "text": "", 
            "title": "\u5f00\u59cb\u4e4b\u524d"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_3", 
            "text": "\u6211\u4eec\u6781\u529b\u63a8\u8350\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\uff0c\u5148\u9605\u8bfb\u5982\u4e0b\u53c2\u8003\u8d44\u6599\u3002\u8fd9\u5c06\u5e2e\u52a9\u60a8\u4e86\u89e3\u66f4\u591a\u5173\u4e8eArduino\u548c\u6211\u4eec\u4ea7\u54c1\u7684\u76f8\u5173\u77e5\u8bc6\u3002\u800c\u4e14\u4f1a\u4f7f\u60a8\u5728\u4f7f\u7528\u5f00\u6e90\u786c\u4ef6\u65f6\u66f4\u5f97\u5fc3\u5e94\u624b\u3002   Arduino\u5165\u95e8\u6307\u5bfc  Grove\u7cfb\u7edf\u7b80\u4ecb  Base_Shield\u4f7f\u7528\u6307\u5357   \u9605\u8bfb\u5b8c\u4e0a\u8bc9\u8d44\u6599\u540e\u60a8\u5c06\u638c\u63e1\u5982\u4f55\u4f7f\u7528Base_Shield\u677f\u5361\u5c06Grove\u7cfb\u5217\u4ea7\u54c1\u4e0eArduino\u76f8\u8fde\u3002\u597d\u4e86\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01", 
            "title": "\u76f8\u5173\u9605\u8bfb"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_4", 
            "text": "\u8fd9\u4e2a\u6559\u7a0b\u5c06\u9700\u8981\u4f7f\u7528\u5230\u4e0b\u5217\u4ea7\u54c1\uff0c\u60a8\u53ef\u4ee5\u70b9\u51fb\u67e5\u9605\u6216\u8d2d\u4e70\u5bf9\u5e94\u4ea7\u54c1:   Arduino UNO R3  \u6216\u8005  Seeeduino v4  Base Shield  Grove - Multichannel Gas Sensor", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_5", 
            "text": "pin\u540d\u79f0  \u76f8\u5173\u63cf\u8ff0      GND  \u63a5\u5730    VCC  3.3V - 5V    SDA  I2C data    SCL  I2C clock     \u8be5\u4f20\u611f\u5668\u7684\u4f9b\u7535\u7535\u538b\u4ecb\u4e8e3.3V\u548c5V\u4e4b\u95f4\uff0c\u53ef\u4e0e\u8f93\u51fa\u7535\u538b\u4e3a3.3V\u7684\u5355\u7247\u673a\u517c\u5bb9\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_6", 
            "text": "\u4e09\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u4f20\u611f\u5355\u5143  \u57fa\u4e8eATmega168PA  \u5e26\u6709\u53ef\u7f16\u7a0b\u5730\u5740\u7684I2C\u63a5\u53e3  \u53ef\u4ee5\u901a\u8fc7\u5173\u95ed\u52a0\u70ed\u529f\u8017\u964d\u4f4e\u529f\u7387  \u53ef\u68c0\u6d4b\u7684\u6c14\u4f53\u79cd\u7c7b\uff1a  \u4e00\u6c27\u5316\u78b3 CO 1-1000ppm  \u4e8c\u6c27\u5316\u6c2e NO2 0.05-10ppm  \u4e59\u9187 C2H6OH 10-500ppm  \u6c22 H2 1-1000ppm  \u6c28 NH3 1-500ppm  \u7532\u70f7 CH4  1000ppm  \u4e19\u70f7 C3H8  1000ppm  \u5f02\u4e01\u70f7 C4H10  1000ppm", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_7", 
            "text": "", 
            "title": "\u6a21\u5757\u56fe"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_8", 
            "text": "Arduino, linkit, wio", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_9", 
            "text": "\u9879\u76ee  \u72b6\u6001  \u6700\u5c0f\u503c  \u7279\u5f81\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u7535\u538b  -  3.1  3.3  5.25  V    \u6ce2\u7eb9  \u6700\u5927\u4f9b\u7535  -  80  100  mV    \u53d1\u70ed\u529f\u7387  -  -  -  88  mV    \u6700\u5927\u529f\u7387  -  -  -  150  mV    ADC\u7cbe\u5ea6  -  -  10  -  Bits    I2C\u901f\u5ea6  -  -  100  400  kHz    VIL  @I2C  -0.5  -  0.99  V    VIH  @I2C  2.31  -  5.25  V", 
            "title": "\u7535\u6c14\u7279\u6027"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#red", 
            "text": "Characteristic RED sensor  Symbol  Typ  Min  Max  Unit      Sensing resistance in air  R0  -  100  1500  k\u03a9    Typical CO detection range  FS  -  1  1000  ppm    Sensitivity factor  SR  -  1.2  50  -", 
            "title": "RED\u4f20\u611f\u5668\u6027\u80fd"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#ox", 
            "text": "Characteristic OX sensor  Symbol  Typ  Min  Max  Unit      Sensing resistance in air  R0  -  0.8  20  k\u03a9    Typical NO2 detection range  FS  -  0.05  10  ppm    Sensitivity factor  SR  -  2  -  -", 
            "title": "OX\u4f20\u611f\u5668\u6027\u80fd"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#nh3", 
            "text": "Characteristic NH3 sensor  Symbol  Typ  Min  Max  Unit      Sensing resistance in air  R0  -  10  1500  k\u03a9    Typical NH3 detection range  FS  -  1  300  ppm    Sensitivity factor  SR  -  1.5  15  -", 
            "title": "NH3\u4f20\u611f\u5668\u6027\u80fd"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_10", 
            "text": "\u6ce8\u610f\u63d0\u793a \n\u4e3a\u4e86\u5f97\u5230\u7a33\u5b9a\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u4f20\u611f\u5668\u9700\u8981\u9884\u52a0\u70ed\u5341\u5206\u949f\u4ee5\u4e0a\u3002  \u786c\u4ef6\u8fde\u63a5\u56fe:  1.\u5c06 Grove - Multichannel Gas Sensor \u548c Seeeduino\u6309\u7167\u4e0b\u56fe\u65b9\u5f0f\u76f8\u8fde.   \u4e0a\u4f20\u4ee3\u7801:  \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002  \u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002  2.\u4e0b\u8f7d  Arduino Library   Grove/Xadow firmware  \u7136\u540e\u6dfb\u52a0\u5230Arduino\u5e93\u6587\u4ef6\u4e2d\u3002  3.\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f:File -  Example -  Mutichannel_Gas_Sensor-  ReadSensorValue_Grove.  ReadSensorValue_Grove \u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a  // Read Data from Grove - Multichannel Gas Sensor  #include   Wire.h  #include   MutichannelGasSensor.h  void   setup ()  { \n     Serial . begin ( 115200 );    // start serial for output \n     Serial . println ( power on! ); \n     gas . begin ( 0x04 ); //the default I2C address of the slave is 0x04 \n     gas . powerOn (); \n     Serial . print ( Firmware Version =  ); \n     Serial . println ( gas . getVersion ());  }  void   loop ()  { \n     float   c ; \n\n     c   =   gas . measure_NH3 (); \n     Serial . print ( The concentration of NH3 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_CO (); \n     Serial . print ( The concentration of CO is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_NO2 (); \n     Serial . print ( The concentration of NO2 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_C3H8 (); \n     Serial . print ( The concentration of C3H8 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_C4H10 (); \n     Serial . print ( The concentration of C4H10 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_CH4 (); \n     Serial . print ( The concentration of CH4 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_H2 (); \n     Serial . print ( The concentration of H2 is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     c   =   gas . measure_C2H5OH (); \n     Serial . print ( The concentration of C2H5OH is  ); \n     if ( c = 0 )   Serial . print ( c ); \n     else   Serial . print ( invalid ); \n     Serial . println (  ppm ); \n\n     delay ( 1000 );  }   4.\u4e0a\u4f20\u4ee3\u7801\u3002\u8bf7\u8bb0\u5f97\u5728Arduino\u8f6f\u4ef6\u7684 \u5de5\u5177 | \u5f00\u53d1\u677f\u4e2d\u52fe\u9009\u5bf9\u5e94\u7684\u677f\u5361\uff0c\u672c\u4f8b\u7a0b\u4f7f\u7528\u7684\u662fSeeeduino Uno\uff0c\u540c\u65f6\u8bf7\u9009\u62e9\u6b63\u786e\u7684\u4e32\u53e3\u3002  \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08ctrl+shift+M\uff09\uff0c\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u6765\u81ea\u4f20\u611f\u5668\u7684\u6570\u636e\u4e86.    Tip   \u66f4\u591a\u7684\u5173\u4e8eGrove\u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u53c2\u8003  Grove System", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_11", 
            "text": "\u8be5Grove\u6a21\u5757\u6709\u4e00\u4e2aATmega168 MCU \u51fa\u5382\u56fa\u4ef6\u3002\u56fa\u4ef6\u5df2\u7ecf\u4e8e2016\u5e7411\u670811\u66f4\u65b0\u5230\u4e86V2.0\u7248\u672c\u3002\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u68c0\u6d4b\u60a8\u5f53\u524d\u7684\u56fa\u4ef6\u7248\u672c\u3002  // Get firmware version of Grove Multichannel Gas Sensor  #include   Wire.h  #include   MutichannelGasSensor.h  #define SENSOR_ADDR     0X04         // default to 0x04  void   setup ()  { \n     Serial . begin ( 115200 ); \n     gas . begin ( SENSOR_ADDR ); \n\n     unsigned   char   version   =   gas . getVersion (); \n     Serial . print ( Version =  ); \n     Serial . println ( version );      }  void   loop ()  { \n     // nothing to do  }   \u5982\u679c\u68c0\u6d4b\u7ed3\u679c\u60a8\u7684\u56fa\u4ef6\u7248\u672c\u662fV1\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u66f4\u65b0\u56fa\u4ef6\u5230V2\u4ee5\u83b7\u53d6\u66f4\u7a33\u5b9a\u7684\u6570\u636e\u3002  \u4e3a\u4e86\u66f4\u65b0\u56fa\u4ef6\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7d20\u6750,   An Arduino UNO/Seeeduino V3/  6 \u6839\u675c\u90a6\u7ebf  \u70d9\u94c1   \u5728\u677f\u5361\u7684\u80cc\u9762\u7559\u6709ICSP\u710a\u76d8\uff0c\u60a8\u9700\u8981\u5c06\u8fd9\u4e9b\u710a\u76d8\u4e0eArduino\u677f\u5b50\u76f8\u8fde\u3002\u7ba1\u811a\u5b9a\u4e49\u5982\u4e0b\u8868\uff0c\u8fde\u63a5\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\u3002     Sensor  Arduino      MISO  D12    SCK  D13    NRST  D10    GND  GND    MOSI  D11    VCC  5V      \u8fde\u63a5\u597d\u4e4b\u540e\uff0c\u8bf7\u6253\u5f00\u60a8Arduino\u793a\u4f8b\u4e2d\u7684  UpdateFrimware  , \u8fd0\u884c\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002\u60a8\u5c06\u770b\u5230\u4e00\u4e9b\u6253\u5370\u7684\u4fe1\u606f\u3002  \u8f93\u5165\u4e00\u4e2a \u201c g \u201d\u6765\u5f00\u59cb\u70e7\u5f55\u3002", 
            "title": "\u66f4\u65b0\u56fa\u4ef6"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_12", 
            "text": "\u5982\u679c\u60a8\u603b\u662f\u5f97\u5230\u4e00\u4e9b\u4e0d\u53ef\u9760\u7684\u6570\u636e\uff0c\u8bf7\u5c1d\u8bd5\u6821\u51c6\u4f20\u611f\u5668\u3002\u6253\u5f00\u793a\u4f8b\u4e2d\u7684  calibration  ,\u4e0a\u4f20\u81f3\u60a8\u7684Arduino\uff0c\u6253\u5f00\u60a8\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u6821\u51c6\u7684\u76f8\u5173\u4fe1\u606f\u3002   Note   \u5728\u4f20\u611f\u5668\u51fa\u5382\u524d\u5df2\u7ecf\u6821\u51c6\u8fc7\u4e86\uff0c\u5982\u679c\u60a8\u60f3\u8981\u91cd\u65b0\u6821\u51c6\uff0c\u8bf7\u786e\u4fdd\u6821\u51c6\u65f6\u7a7a\u6c14\u73af\u5883\u662f\u65b0\u9c9c\u6e05\u65b0\u7684\u3002\u6821\u51c6\u5927\u81f4\u9700\u8981\u51e0\u5206\u949f\u5230\u534a\u5c0f\u65f6\u4e0d\u7b49\u7684\u65f6\u95f4\u3002", 
            "title": "\u6821\u51c6"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#_13", 
            "text": "[\u539f\u7406\u56fe]    Grove - Multichannel Gas Sensor v1.0 sch  [PCB\u56fe]   Grove - Multichannel Gas Sensor eagle files  [\u5e93\u6587\u4ef6]   Arduino Library   Grove/Xadow firmware  [\u82af\u7247\u6570\u636e\u624b\u518c]   MiCS-6814 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Multichannel_Gas_Sensor/#faq", 
            "text": "Q1. \u5982\u4f55\u6539\u53d8\u6a21\u5757\u7684I2C\u5730\u5740   A1. \u6253\u5f00\u793a\u4f8b\u4e2d\u540d\u4e3aI2C_Address\u7684\u4f8b\u7a0b\uff0c\u8fd0\u884c\u5b83\u3002     Q2. \u6211\u6539\u4e86I2C\u5730\u5740\u4f46\u662f\u4e0d\u5c0f\u5fc3\u5fd8\u4e86   *A2. \u522b\u62c5\u5fc3\uff0c\u8fd0\u884c\u793a\u4f8b\u4e2d\u540d\u4e3a factory_setting\u7684\u4f8b\u7a0b\uff0c\u56de\u5230\u51fa\u5382\u72b6\u6001\u3002 *      Tip   \u5982\u679c\u60a8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u652f\u6301\uff0c\u8bf7\u8054\u7cfb\u4e0b\u9762\u7684\u90ae\u7bb1\uff0c\u6211\u4eec\u671f\u5f85\u5e76\u6b22\u8fce\u60a8\u7684\u54a8\u8be2\uff1a", 
            "title": "FAQ"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/", 
            "text": "Grove - Piezo Vibration\u4f20\u611f\u5668\u9002\u7528\u4e8e\u5f39\u6027\uff0c\u632f\u52a8\uff0c\u51b2\u51fb\u548c\u89e6\u611f\u7684\u6d4b\u91cf\u3002\u8be5\u6a21\u5757\u57fa\u4e8ePZT\u8584\u819c\u4f20\u611f\u5668LDT0-028\u3002\u5f53\u4f20\u611f\u5668\u6765\u56de\u79fb\u52a8\u65f6\uff0c\u5176\u4e2d\u7684\u7535\u538b\u6bd4\u8f83\u5668\u5c06\u4ea7\u751f\u4e00\u5b9a\u7684\u7535\u538b\u3002\u5bbd\u52a8\u6001\u8303\u56f4\uff080.001Hz\u301c1000MHz\uff09\u4fdd\u8bc1\u4e86\u826f\u597d\u7684\u6d4b\u91cf\u6027\u80fd\u3002\u5e76\u4e14\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u7528\u87ba\u4e1d\u8c03\u6574\u677f\u4e0a\u7535\u4f4d\u5668\u6765\u8c03\u6574\u5176\u7075\u654f\u5ea6\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u6807\u51c6Grove\u63a5\u53e3\n\n\n\u5bbd\u52a8\u6001\u6d4b\u91cf\u8303\u56f4\uff1a0.1Hz~180Hz\n\n\n\u6d4b\u91cf\u7075\u654f\u5ea6\u53ef\u8c03\n\n\n\u9ad8\u5ea6\u611f\u77e5\u5f3a\u70c8\u51b2\u51fb\n\n\n\n\n\n\nTip\n\n\n\u66f4\u591a\u5173\u4e8eGrove\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u5e73\u53f0\u652f\u6301\n\n\n\n\nArduino\nRaspberry\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u6d17\u8863\u673a\u632f\u52a8\u68c0\u6d4b\n\n\n\u4f4e\u529f\u8017\u5524\u9192\u5f00\u5173\n\n\n\u4f4e\u6210\u672c\u632f\u52a8\u611f\u5e94\n\n\n\u6c7d\u8f66\u8b66\u62a5\u7cfb\u7edf\n\n\n\u8eab\u4f53\u8fd0\u52a8\u68c0\u6d4b\n\n\n\u5b89\u5168\u7cfb\u7edf\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u9002\u7528 \nArduino\n\n\n\u7269\u7406\u8fde\u63a5\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5411\u60a8\u5c55\u793aGrove - Piezo Vibration\u4f20\u611f\u5668\u5982\u4f55\u5de5\u4f5c\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Piezo Vibration\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\n\n\n\n\n\n\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0cGrove - Piezo Vibration\u4f20\u611f\u5668\u8f93\u51fa\u903b\u8f91\u9ad8\u7535\u5e73\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55Arduino\u5f15\u811a\u6765\u8bfb\u53d6\u6570\u636e\u3002\u4ee5\u4e0b\u662f\u538b\u7535\u632f\u52a8\u4f20\u611f\u5668\u63a7\u5236LED\u7684\u793a\u4f8b\u3002\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u8f93\u51fa\u903b\u8f91\u9ad8\u4fe1\u53f7\uff08\u7075\u654f\u5ea6\u53ef\u901a\u8fc7\u8c03\u8282\u7535\u4f4d\u5668\u6765\u66f4\u6539\uff09\uff0cLED\u4eae\u8d77\u3002\n\n\n\n\n\u6ce8\u610f\n\n\u5f53\u901a\u8fc7\u987a\u65f6\u9488\u8c03\u8282\u7535\u4f4d\u5668\u6765\u589e\u52a0\u9608\u503c\u7535\u538b\u65f6\uff0c\u5373\u4f7f\u539f\u59cb\u8f93\u51fa\u5e94\u8be5\u4e3a\u9ad8\u7535\u5e73\uff0c\u4e5f\u53ef\u80fd\u6700\u7ec8\u8f93\u51fa\u4f4e\u7535\u5e73\u3002\n\n\n\n\n\n\n\u901a\u8fc74 pin\u7684Grove\u63a5\u53e3\u5c06\u4f20\u611f\u5668\u6a21\u5757\u548c\u6269\u5c55\u677f\u7684**A0** \u53e3\u76f8\u8fde\u3002\u6211\u4eec\u4f7f\u7528**\u6570\u5b57\u811a pin13 \u8054\u901a\u7684\u677f\u8f7dLED** \u6765\u4f5c\u4e3a\u8f93\u51fa\u3002\n\n\n\u5c06 the Grove - Basic Shield \u63d2\u5165 Arduino.\n\n\n\u901a\u8fc7USB\u6570\u636e\u7ebf\u5c06Arduino \u8fde\u63a5\u5230PC\u3002\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u5728Arduino \u4e2d\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u5c06\u4e0b\u5217\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230\u8fd9\u4e2a\u7a7a\u767d\u7684\u6587\u4ef6\u4e2d\u3002\n\n\n\n\nconst int ledPin=13;\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorValue = analogRead(A0);\n    Serial.println(sensorValue);\n    delay(1000);\n    if(sensorValue==1023)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n}\n\n\n- \u89e6\u6478\u538b\u7535\u4f20\u611f\u5668\u4f7f\u5176\u632f\u52a8\uff0c\u5f53\u7136\uff0c\u4efb\u4f55\u65b9\u5f0f\u4f7f\u5176\u632f\u52a8\u90fd\u53ef\u4ee5\u3002\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0cLED\u5c06\u4eae\u8d77\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u67e5\u770b\u4f20\u611f\u5668\u8f93\u51fa\u3002\n\n\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u5b57\u5f15\u811a\uff0c\u4ee5\u6269\u5c55\u677f\u4e0a\u7684D5\u4e3a\u4f8b\uff0c\u5e76\u5c06LED\u8fde\u63a5\u5230\u5f15\u811a13\u3002\n\n\n\n\nconst int ledPin=13;\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorState = digitalRead(5);\n    Serial.println(sensorState);\n    delay(1000);\n    if(sensorState == HIGH)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n}\n\n\n\n\n\u4f7f\u7528\u4e8e Raspberry Pi \uff08\u6811\u8393\u6d3e\uff09\n\n\n\u7269\u7406\u8fde\u63a5\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - Piezo Vibration\n\n\nGrovePi_Plus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\u9a6c\u4e0a\u8ba2\u8d2d\n\n\n\n\n\n\n\n\n\n\n\u6839\u636e \n\u6307\u5357\n \u6765\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\n\n\n\u901a\u8fc7Grove\u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230grovepi+ \u6269\u5c55\u677f\u7684 A0 \u7aef\u53e3\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\u4e0b\uff1a\n\n\n\n\n    \u8f6c\u6362\u8def\u5f84\u5230\u60a8\u7684\u5bf9\u5e94\u76ee\u5f55   cd yourpath/GrovePi/Software/Python/\n\n\n-   \u4ee3\u7801\u5982\u4e0b\uff1a\n\n    nano grove_piezo_vibration_sensor.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Piezo Vibration Sensor to analog port A0\n    # OUT,NC,VCC,GND\n    piezo = 0\n\n    grovepi.pinMode(piezo,\nINPUT\n)\n\n    while True:\n        try:\n            # When vibration is detected, the sensor outputs a logic high signal\n            print grovepi.analogRead(piezo)\n            time.sleep(.5)\n\n        except IOError:\n            print \nError\n\n\n\n\n\n\n\u8fd0\u884c\u793a\u4f8b\n\n    sudo python grove_piezo_vibration_sensor.py\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u56fe]\n \nGrove - Piezo Vibration Sensor Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nGrove - Piezo Vibration Sensor Schematic PDF File\n\n\n[PCB\u56fePDF]\n \nGrove - Piezo Vibration Sensor PCB PDF File\n\n\n[\u6570\u636e\u624b\u518c]\n \nPiezo Vibration Sensor Datasheet", 
            "title": "Grove-Piezo Vibration Sensor"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_1", 
            "text": "\u6807\u51c6Grove\u63a5\u53e3  \u5bbd\u52a8\u6001\u6d4b\u91cf\u8303\u56f4\uff1a0.1Hz~180Hz  \u6d4b\u91cf\u7075\u654f\u5ea6\u53ef\u8c03  \u9ad8\u5ea6\u611f\u77e5\u5f3a\u70c8\u51b2\u51fb    Tip  \u66f4\u591a\u5173\u4e8eGrove\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_2", 
            "text": "Arduino\nRaspberry", 
            "title": "\u5e73\u53f0\u652f\u6301"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_3", 
            "text": "\u6d17\u8863\u673a\u632f\u52a8\u68c0\u6d4b  \u4f4e\u529f\u8017\u5524\u9192\u5f00\u5173  \u4f4e\u6210\u672c\u632f\u52a8\u611f\u5e94  \u6c7d\u8f66\u8b66\u62a5\u7cfb\u7edf  \u8eab\u4f53\u8fd0\u52a8\u68c0\u6d4b  \u5b89\u5168\u7cfb\u7edf", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#arduino", 
            "text": "", 
            "title": "\u9002\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_5", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5411\u60a8\u5c55\u793aGrove - Piezo Vibration\u4f20\u611f\u5668\u5982\u4f55\u5de5\u4f5c\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Piezo Vibration  Base Shield           \u9a6c\u4e0a\u8ba2\u8d2d  \u9a6c\u4e0a\u8ba2\u8d2d  \u9a6c\u4e0a\u8ba2\u8d2d     \u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0cGrove - Piezo Vibration\u4f20\u611f\u5668\u8f93\u51fa\u903b\u8f91\u9ad8\u7535\u5e73\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55Arduino\u5f15\u811a\u6765\u8bfb\u53d6\u6570\u636e\u3002\u4ee5\u4e0b\u662f\u538b\u7535\u632f\u52a8\u4f20\u611f\u5668\u63a7\u5236LED\u7684\u793a\u4f8b\u3002\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u8f93\u51fa\u903b\u8f91\u9ad8\u4fe1\u53f7\uff08\u7075\u654f\u5ea6\u53ef\u901a\u8fc7\u8c03\u8282\u7535\u4f4d\u5668\u6765\u66f4\u6539\uff09\uff0cLED\u4eae\u8d77\u3002   \u6ce8\u610f \n\u5f53\u901a\u8fc7\u987a\u65f6\u9488\u8c03\u8282\u7535\u4f4d\u5668\u6765\u589e\u52a0\u9608\u503c\u7535\u538b\u65f6\uff0c\u5373\u4f7f\u539f\u59cb\u8f93\u51fa\u5e94\u8be5\u4e3a\u9ad8\u7535\u5e73\uff0c\u4e5f\u53ef\u80fd\u6700\u7ec8\u8f93\u51fa\u4f4e\u7535\u5e73\u3002   \u901a\u8fc74 pin\u7684Grove\u63a5\u53e3\u5c06\u4f20\u611f\u5668\u6a21\u5757\u548c\u6269\u5c55\u677f\u7684**A0** \u53e3\u76f8\u8fde\u3002\u6211\u4eec\u4f7f\u7528**\u6570\u5b57\u811a pin13 \u8054\u901a\u7684\u677f\u8f7dLED** \u6765\u4f5c\u4e3a\u8f93\u51fa\u3002  \u5c06 the Grove - Basic Shield \u63d2\u5165 Arduino.  \u901a\u8fc7USB\u6570\u636e\u7ebf\u5c06Arduino \u8fde\u63a5\u5230PC\u3002", 
            "title": "\u7269\u7406\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_6", 
            "text": "\u5728Arduino \u4e2d\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u5c06\u4e0b\u5217\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230\u8fd9\u4e2a\u7a7a\u767d\u7684\u6587\u4ef6\u4e2d\u3002   const int ledPin=13;\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorValue = analogRead(A0);\n    Serial.println(sensorValue);\n    delay(1000);\n    if(sensorValue==1023)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n} \n- \u89e6\u6478\u538b\u7535\u4f20\u611f\u5668\u4f7f\u5176\u632f\u52a8\uff0c\u5f53\u7136\uff0c\u4efb\u4f55\u65b9\u5f0f\u4f7f\u5176\u632f\u52a8\u90fd\u53ef\u4ee5\u3002\u5f53\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\uff0cLED\u5c06\u4eae\u8d77\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u67e5\u770b\u4f20\u611f\u5668\u8f93\u51fa\u3002    \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u5b57\u5f15\u811a\uff0c\u4ee5\u6269\u5c55\u677f\u4e0a\u7684D5\u4e3a\u4f8b\uff0c\u5e76\u5c06LED\u8fde\u63a5\u5230\u5f15\u811a13\u3002   const int ledPin=13;\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorState = digitalRead(5);\n    Serial.println(sensorState);\n    delay(1000);\n    if(sensorState == HIGH)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n}", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#raspberry-pi", 
            "text": "", 
            "title": "\u4f7f\u7528\u4e8e Raspberry Pi \uff08\u6811\u8393\u6d3e\uff09"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_7", 
            "text": "\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Raspberry pi  Grove - Piezo Vibration  GrovePi_Plus           \u9a6c\u4e0a\u8ba2\u8d2d  \u9a6c\u4e0a\u8ba2\u8d2d  \u9a6c\u4e0a\u8ba2\u8d2d      \u6839\u636e  \u6307\u5357  \u6765\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002  \u901a\u8fc7Grove\u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230grovepi+ \u6269\u5c55\u677f\u7684 A0 \u7aef\u53e3\u3002", 
            "title": "\u7269\u7406\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_8", 
            "text": "\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\u4e0b\uff1a       \u8f6c\u6362\u8def\u5f84\u5230\u60a8\u7684\u5bf9\u5e94\u76ee\u5f55   cd yourpath/GrovePi/Software/Python/ \n-   \u4ee3\u7801\u5982\u4e0b\uff1a     nano grove_piezo_vibration_sensor.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Piezo Vibration Sensor to analog port A0\n    # OUT,NC,VCC,GND\n    piezo = 0\n\n    grovepi.pinMode(piezo, INPUT )\n\n    while True:\n        try:\n            # When vibration is detected, the sensor outputs a logic high signal\n            print grovepi.analogRead(piezo)\n            time.sleep(.5)\n\n        except IOError:\n            print  Error    \u8fd0\u884c\u793a\u4f8b     sudo python grove_piezo_vibration_sensor.py", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-Piezo_Vibration_Sensor/#_9", 
            "text": "[Eagle\u56fe]   Grove - Piezo Vibration Sensor Eagle File  [\u539f\u7406\u56fePDF]   Grove - Piezo Vibration Sensor Schematic PDF File  [PCB\u56fePDF]   Grove - Piezo Vibration Sensor PCB PDF File  [\u6570\u636e\u624b\u518c]   Piezo Vibration Sensor Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Sound_Sensor/", 
            "text": "---\n\n\n\n\n\u58f0\u97f3\u4f20\u611f\u5668\u53ef\u4ee5\u68c0\u6d4b\u73af\u5883\u7684\u58f0\u97f3\u5f3a\u5ea6\u3002 \u8be5\u6a21\u5757\u7684\u4e3b\u8981\u7ec4\u4ef6\u662f\u7b80\u5355\u7684\u9ea6\u514b\u98ce\uff0c\u5b83\u57fa\u4e8eLM386\u653e\u5927\u5668\u548c\u9a7b\u6781\u4f53\u9ea6\u514b\u98ce\u3002 \u8be5\u6a21\u5757\u662f\u4ee5\u6a21\u62df\u91cf\u8f93\u51fa\u7684\uff0c\u53ef\u4ee5\u8f7b\u677e\u5730\u7531Seeeduino\u8fdb\u884c\u91c7\u6837\u548c\u6d4b\u8bd5\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u4f7f\u7528\u7b80\u5355\n\n\n\u80fd\u591f\u8f93\u51fa\u6a21\u62df\u4fe1\u53f7\n\n\n\u80fd\u591f\u7b80\u5355\u7684\u628a\u5b83\u96c6\u6210\u5728Grove\u7535\u8def\u8f93\u5165\u7aef\u7684Logic\u6a21\u5757\u4e0a\n\n\nGrove System\n\n\n\n\n!!!\u8b66\u544a\n    \u8be5\u58f0\u97f3\u4f20\u611f\u5668\u7528\u4e8e\u68c0\u6d4b\u662f\u5426\u6709\u58f0\u73af\u7ed5\uff0c\u8bf7\u52ff\u4f7f\u7528\u8be5\u6a21\u5757\u6536\u96c6\u58f0\u97f3\u4fe1\u53f7\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5236\u4f5c\u58f0\u63a7\u706f\uff0c\u4f46\u4e0d\u80fd\u7528\u4f5c\u5f55\u97f3\u8bbe\u5907\u3002\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\u8303\u56f4\n\n\n3.\n V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41(Vcc=5V)\n\n\n4~5 mA\n\n\n\n\n\n\n\u7535\u538b\u589e\u76ca(V=6V, f=1kHz)\n\n\n26 dB\n\n\n\n\n\n\n\u9ea6\u514b\u98ce\u7075\u654f\u5ea6(1kHz)\n\n\n52-48 dB\n\n\n\n\n\n\n\u9ea6\u514b\u98ce\u963b\u6297\n\n\n2.2k Ohm\n\n\n\n\n\n\n\u9ea6\u514b\u98ce\u9891\u7387\n\n\n16-20 kHz\n\n\n\n\n\n\n\u9ea6\u514b\u98ceS / N\u65e0\u7ebf\u7535\n\n\n54 dB\n\n\n\n\n\n\n\n\n!!!\u5c0f\u63d0\u793a\n    \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n!!!\u6ce8\u610f\n    \u672c\u7ae0\u57fa\u4e8eWin10\u548cArduino IDE 1.6.9\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u6a21\u5757\uff0c\u60a8\u9700\u8981\u5c06\u4fe1\u53f7\u5f15\u811a\uff08Grove\u8fde\u63a5\u7ebf\u7684YELLOW\u5f15\u811a\uff09\u8fde\u63a5\u5230\u63a7\u5236\u5668\u7684ADC\u8f93\u5165\u3002 \u5982\u679c\u63a7\u5236\u5668\u4e2d\u6ca1\u6709\u5185\u90e8ADC\uff0c\u5efa\u8bae\u4f7f\u7528\nGrove - I2C ADC\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u64cd\u4f5c\u53bb\u6f14\u793aGrove - Sound\u4f20\u611f\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Sound Sensor\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u7531\u4e8eGrove\u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u5236\u4f5c\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230Base Shield\u7684\u6b63\u786e\u7aef\u53e3\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u6f14\u793a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2aGrove\u6a21\u5757\u3002\n\n\n\n\nGrove - Sound\u4f20\u611f\u5668\u662f\u4e00\u4e2a\u6a21\u62df\u91cf\u8f93\u5165\u6a21\u5757\uff0c\u6211\u4eec\u5728\u6b64\u6f14\u793a\u4e2d\u5c06\u5176\u8fde\u63a5\u5230 \nA0\n\n\n\n\n\n\n\u4e0b\u8f7d\u7a0b\u5e8f\u5230Arduino\n\n\n\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino IDE.\n\n\n// test code for Grove - Sound Sensor\n// loovee @ 2016-8-30\n\nconst int pinAdc = A0;\n\nvoid setup()\n{\n    Serial.begin(115200);\n    //Serial.println(\nGrove - Sound Sensor Test...\n);\n}\n\nvoid loop()\n{\n    long sum = 0;\n    for(int i=0; i\n32; i++)\n    {\n        sum += analogRead(pinAdc);\n    }\n\n    sum \n= 5;\n\n    Serial.println(sum);\n    delay(10);\n}\n\n\n\n\n\u7136\u540e\u9009\u62e9\u6b63\u786e\u7684\u677f\u548cCOM\u7aef\u53e3\uff0c\u7136\u540e\u70b9\u51fb\u4e0a\u4f20\u6309\u94ae\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u51e0\u79d2\u949f\u3002\n\n\n\u83b7\u53d6\u539f\u59cb\u6570\u636e\n\n\n\u8fd9\u91cc\u8ba9\u6211\u4eec\u70b9\u51fb \nTool\uff08\u5de5\u5177\uff09 \n Serial Plotter\uff08\u4e32\u53e3\u7ed8\u56fe\u5668\uff09\n \u6765\u83b7\u53d6\u4f20\u611f\u5668\u7684\u53d8\u5316\u66f2\u7ebf\u3002 \u8bf7\u7559\u8a00\u6765\u544a\u8bc9\u6211\u4eec\u770b\u5230\u7684\u6570\u503c\u53d8\u5316\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nSchematic and PCB in Eagle format\n\n\nSchematic in PDF format\n\n\nPCB in PDF format\n\n\nGithub Page of this Document\n\n\nLM386.PDF", 
            "title": "Grove-Sound Sensor"
        }, 
        {
            "location": "/Grove-Sound_Sensor/#-", 
            "text": "\u58f0\u97f3\u4f20\u611f\u5668\u53ef\u4ee5\u68c0\u6d4b\u73af\u5883\u7684\u58f0\u97f3\u5f3a\u5ea6\u3002 \u8be5\u6a21\u5757\u7684\u4e3b\u8981\u7ec4\u4ef6\u662f\u7b80\u5355\u7684\u9ea6\u514b\u98ce\uff0c\u5b83\u57fa\u4e8eLM386\u653e\u5927\u5668\u548c\u9a7b\u6781\u4f53\u9ea6\u514b\u98ce\u3002 \u8be5\u6a21\u5757\u662f\u4ee5\u6a21\u62df\u91cf\u8f93\u51fa\u7684\uff0c\u53ef\u4ee5\u8f7b\u677e\u5730\u7531Seeeduino\u8fdb\u884c\u91c7\u6837\u548c\u6d4b\u8bd5\u3002", 
            "title": "---"
        }, 
        {
            "location": "/Grove-Sound_Sensor/#_1", 
            "text": "\u4f7f\u7528\u7b80\u5355  \u80fd\u591f\u8f93\u51fa\u6a21\u62df\u4fe1\u53f7  \u80fd\u591f\u7b80\u5355\u7684\u628a\u5b83\u96c6\u6210\u5728Grove\u7535\u8def\u8f93\u5165\u7aef\u7684Logic\u6a21\u5757\u4e0a  Grove System   !!!\u8b66\u544a\n    \u8be5\u58f0\u97f3\u4f20\u611f\u5668\u7528\u4e8e\u68c0\u6d4b\u662f\u5426\u6709\u58f0\u73af\u7ed5\uff0c\u8bf7\u52ff\u4f7f\u7528\u8be5\u6a21\u5757\u6536\u96c6\u58f0\u97f3\u4fe1\u53f7\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5236\u4f5c\u58f0\u63a7\u706f\uff0c\u4f46\u4e0d\u80fd\u7528\u4f5c\u5f55\u97f3\u8bbe\u5907\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Sound_Sensor/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570      \u5de5\u4f5c\u7535\u538b\u8303\u56f4  3.  V    \u5de5\u4f5c\u7535\u6d41(Vcc=5V)  4~5 mA    \u7535\u538b\u589e\u76ca(V=6V, f=1kHz)  26 dB    \u9ea6\u514b\u98ce\u7075\u654f\u5ea6(1kHz)  52-48 dB    \u9ea6\u514b\u98ce\u963b\u6297  2.2k Ohm    \u9ea6\u514b\u98ce\u9891\u7387  16-20 kHz    \u9ea6\u514b\u98ceS / N\u65e0\u7ebf\u7535  54 dB     !!!\u5c0f\u63d0\u793a\n    \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Sound_Sensor/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Sound_Sensor/#_4", 
            "text": "!!!\u6ce8\u610f\n    \u672c\u7ae0\u57fa\u4e8eWin10\u548cArduino IDE 1.6.9  \u8fd9\u662f\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u6a21\u5757\uff0c\u60a8\u9700\u8981\u5c06\u4fe1\u53f7\u5f15\u811a\uff08Grove\u8fde\u63a5\u7ebf\u7684YELLOW\u5f15\u811a\uff09\u8fde\u63a5\u5230\u63a7\u5236\u5668\u7684ADC\u8f93\u5165\u3002 \u5982\u679c\u63a7\u5236\u5668\u4e2d\u6ca1\u6709\u5185\u90e8ADC\uff0c\u5efa\u8bae\u4f7f\u7528 Grove - I2C ADC  \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u64cd\u4f5c\u53bb\u6f14\u793aGrove - Sound\u4f20\u611f\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Sound Sensor  Base Shield           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70     \u786c\u4ef6\u8fde\u63a5  \u7531\u4e8eGrove\u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u5236\u4f5c\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230Base Shield\u7684\u6b63\u786e\u7aef\u53e3\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u6f14\u793a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2aGrove\u6a21\u5757\u3002   Grove - Sound\u4f20\u611f\u5668\u662f\u4e00\u4e2a\u6a21\u62df\u91cf\u8f93\u5165\u6a21\u5757\uff0c\u6211\u4eec\u5728\u6b64\u6f14\u793a\u4e2d\u5c06\u5176\u8fde\u63a5\u5230  A0    \u4e0b\u8f7d\u7a0b\u5e8f\u5230Arduino  \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino IDE.  // test code for Grove - Sound Sensor\n// loovee @ 2016-8-30\n\nconst int pinAdc = A0;\n\nvoid setup()\n{\n    Serial.begin(115200);\n    //Serial.println( Grove - Sound Sensor Test... );\n}\n\nvoid loop()\n{\n    long sum = 0;\n    for(int i=0; i 32; i++)\n    {\n        sum += analogRead(pinAdc);\n    }\n\n    sum  = 5;\n\n    Serial.println(sum);\n    delay(10);\n}  \u7136\u540e\u9009\u62e9\u6b63\u786e\u7684\u677f\u548cCOM\u7aef\u53e3\uff0c\u7136\u540e\u70b9\u51fb\u4e0a\u4f20\u6309\u94ae\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u51e0\u79d2\u949f\u3002  \u83b7\u53d6\u539f\u59cb\u6570\u636e  \u8fd9\u91cc\u8ba9\u6211\u4eec\u70b9\u51fb  Tool\uff08\u5de5\u5177\uff09   Serial Plotter\uff08\u4e32\u53e3\u7ed8\u56fe\u5668\uff09  \u6765\u83b7\u53d6\u4f20\u611f\u5668\u7684\u53d8\u5316\u66f2\u7ebf\u3002 \u8bf7\u7559\u8a00\u6765\u544a\u8bc9\u6211\u4eec\u770b\u5230\u7684\u6570\u503c\u53d8\u5316\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Sound_Sensor/#_5", 
            "text": "Schematic and PCB in Eagle format  Schematic in PDF format  PCB in PDF format  Github Page of this Document  LM386.PDF", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/", 
            "text": "Grove - Ultrasonic\u4f20\u611f\u5668\u662f\u4e00\u79cd\u975e\u63a5\u89e6\u5f0f\u8ddd\u79bb\u6d4b\u91cf\u6a21\u5757\uff0c\u5de5\u4f5c\u572840KHz\uff0c\u9002\u7528\u4e8e\u9700\u8981\u5bf9\u4e2d\u7b49\u8ddd\u79bb\u8fdb\u884c\u6d4b\u91cf\u7684\u9879\u76ee\u3002\n\n\n\n\n\u4ea7\u54c1\u66f4\u65b0\n\n\n\u4e3a\u4e86\u63d0\u9ad8\u5728\u4f7f\u7528\u4e00\u4e9b\u4f4e\u538b\u4e3b\u677f\u65f6\u7684\u7535\u6e90\u7a33\u5b9a\u6027\uff0c\u6211\u4eec\u5bf9\u6b64\u4ea7\u54c1\u505a\u4e86\u4e00\u4e9b\u66f4\u65b0\u3002\u8fd9\u4e9b\u66f4\u65b0\u5305\u62ec\uff1a\n\n\n\n\n\u589e\u52a0\u7535\u5bb9C14\n\n\n\u91cd\u65b0\u8bbe\u8ba1\u5e03\u5c40\uff0c\u4f7f\u5176\u66f4\u52a0\u6574\u6d01\n\n\n\u517c\u5bb93.3V\u7535\u538b\u7cfb\u7edf\n\n\n\n\n\u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u4e24\u5f20\u56fe\u7247\u6765\u663e\u793a\u4e0d\u540c\u4e4b\u5904\uff1a\n\n\n\n\n\n\n!!!\u6ce8\u610f\n    \u8bf7\u6ce8\u610f\uff0c\u65b0\u7248\u672c\u4e0e\u65e7\u7248\u672c\u5171\u4eab\u76f8\u540c\u7684sku\uff0c\u6240\u4ee5\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u65e7\u7684sku\uff1a101020010\u8fdb\u884c\u8d2d\u4e70\uff0c\u6211\u4eec\u5c06\u7ed9\u60a8\u53d1\u9001\u65b0\u7248\u672c\u3002\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c/\u8303\u56f4\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3.2~5.2V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n8mA\n\n\n\n\n\n\n\u8d85\u58f0\u6ce2\u9891\u7387\n\n\n40kHz\n\n\n\n\n\n\n\u6d4b\u91cf\u8303\u56f4\n\n\n2-350cm\n\n\n\n\n\n\n\u7cbe\u5ea6\n\n\n1cm\n\n\n\n\n\n\n\u8f93\u51fa\n\n\nPWM\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n50mm X 25mm X 16mm\n\n\n\n\n\n\n\u91cd\u91cf\n\n\n13g\n\n\n\n\n\n\n\n\n!!!\u5c0f\u63d0\u793a\n    \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003\nGrove System\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4f7f\u7528Arduino\n\n\n\u7269\u7406\u8fde\u63a5\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2aGrove - Ultrasonic Ranger \u5982\u4f55\u8fd0\u4f5c\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Ultrasonic Ranger\n\n\nBase Shield\n\n\nGrove - LCD RGB Backlight\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u5c06Ultrasonic Ranger\u8fde\u63a5\u5230Grove-Base Shield\u7684 \nD7\n \u7aef\u53e3\u3002\n\n\n\u5c06LCD RGB Backlight\u8fde\u63a5\u5230Grove-Base Shield\u7684 \nI2C\n \u7aef\u53e3\u3002\n\n\n\u5c06Grove - Base Shield\u63d2\u5165\u5230Arduino\u4e2d\u3002\n\n\n\u901a\u8fc7USB\u7ebf\u5c06Arduino\u8fde\u63a5\u5230PC\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\u4ee3\u7801\n\n\n\n\n\u4eceGithub\u4e0b\u8f7d\n UltrasonicRanger Library\n\u548c\n  Grove - LCD RGB Backlight Library \n \u3002\n\n\n\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u5b89\u88c5\u5e93\uff0c\u8bf7\u53c2\u9605 \n\u5982\u4f55\u5b89\u88c5\u5e93\n\n\n\n\n#include \nWire.h\n\n#include \nrgb_lcd.h\n\n#include \nUltrasonic.h\n\n\nrgb_lcd lcd;\nUltrasonic ultrasonic(7);\n\nconst int colorR = 0;\nconst int colorG = 255;\nconst int colorB = 0;\n\n\nvoid setup()\n{\n    // set up the LCD\ns number of columns and rows:\n    lcd.begin(16, 2);\n    lcd.setRGB(colorR, colorG, colorB);\n}\n\nvoid loop()\n{   \n    long RangeInCentimeters;\n    RangeInCentimeters = ultrasonic.MeasureInCentimeters();\n    delay(150);\n    lcd.clear();\n    lcd.setCursor(0,0);\n    lcd.print(\nThe distance:\n);\n    lcd.setCursor(0,1) ;\n    lcd.print(RangeInCentimeters,DEC);\n    lcd.setCursor(5,1) ;\n    lcd.print(\ncm\n);\n}\n\n\n- \u5c06\u4ee3\u7801\u590d\u5236\u5230Arduino\u5e76\u4e0a\u4f20\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230LCD\u4e0a\u7684\u8ddd\u79bb\u663e\u793a\u3002\n\n\n\u4f7f\u7528 TI LaunchPad\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u8d85\u58f0\u6ce2\u4f20\u611f\u5668(Ultrasonic Ranger Sensor)\n\n\n\u8be5\u793a\u4f8b\u663e\u793a\u5982\u4f55\u4f7f\u7528\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\u6d4b\u91cf\u4e0e\u969c\u788d\u7269\u7684\u8ddd\u79bb\uff0c\u5e76\u57284\u4f4d\u6570\u5b57\u663e\u793a\u5c4f\uff08\u5398\u7c73\uff09\u4e0a\u663e\u793a\u8be5\u503c\u3002\n\n\n\n\n\u8f6f\u4ef6\u4ee3\u7801\n\n\n/*\n Ultrasonic-Ranger to 4-digit-display\n Measure the distance to obstacles in front and display the value on\n 4-digital-display\n\n The circuit:\n * Ultrasonic Ranger attached to SPI plug on Grove Base BoosterPack\n * one side pin (either one) to ground\n * the other side pin to +VCC\n * LED anode (long leg) attached to RED_LED\n * LED cathode (short leg) attached to ground\n\n * Note:  \n\n\n This example code is in the public domain.\n\n http://www.seeedstudio.com/wiki/Grove_-_Ultrasonic_Ranger\n */\n\n#include \nTM1637.h\n\n#include \nUltrasonic.h\n\n/* Macro Define */\n#define CLK               40                  /* 4-digital display clock pin */\n#define DIO               39                 /* 4-digital display data pin */\n#define BLINK_LED         RED_LED            /* blink led */\n#define ULTRASONIC_PIN    38                  /* pin of the Ultrasonic Ranger */\n\n/* Global Variables */\nTM1637 tm1637(CLK, DIO);                  /* 4-digital display object */\nUltrasonic ultrasonic(ULTRASONIC_PIN);    /* Ultrasonic Ranger object */\nint distance = 0;                         /* variable to store the distance to obstacles in front */\nint blink_interval = 0;                   /* led delay time */\nint8_t bits[4] = {0};                     /* array to store the single bits of the value */\n\n/* the setup() method runs once, when the sketch starts */\nvoid setup() {\n\n    /* Initialize 4-digital display */\n    tm1637.init();\n    tm1637.set(BRIGHT_TYPICAL);\n\n    /* declare the red_led pin as an OUTPUT */\n    pinMode(RED_LED, OUTPUT);\n\n}\n\n/* the loop() method runs over and over again */\nvoid loop() {   \n\n    distance = ultrasonic.MeasureInCentimeters();   /* read the value from the sensor */   \n\n    memset(bits, 0, 4);                             /* reset array when we use it */\n    for(int i = 3; i \n= 0; i--) {\n        /* get single bits of the analog value */\n        bits[i] = distance % 10;\n        distance = distance / 10;  \n        tm1637.display(i, bits[i]);                 /* display by 4-digital display */\n    }\n    delay(100);\n}\n\n\n\n\n\u4f7f\u7528 \nRaspberry Pi\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - Ultrasonic Ranger\n\n\nGrovePi_Plus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u6309\u7167 \n\u8bf4\u660e\n  \u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\n\n\n.\u5c06\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\u8fde\u63a5\u5230\u7aef\u53e3 ** D4 ** \u5e76\u8fd0\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u3002 \u5b83\u5c06\u5728\u7ec8\u7aef\u4e0a\u7684\u663e\u793a\u8ddd\u79bb\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\u4ee3\u7801\n\n\n# GrovePi + Grove Ultrasonic Ranger\n\n\n\nfrom\n \ngrovepi\n \nimport\n \n*\n\n\n\n# Connect the Grove Ultrasonic Ranger to digital port D4\n\n\n# SIG,NC,VCC,GND\n\n\n\nultrasonic_ranger\n \n=\n \n4\n\n\n\nwhile\n \nTrue\n:\n\n    \ntry\n:\n\n        \n# Read distance value from Ultrasonic\n\n        \nprint\n \nultrasonicRead\n(\nultrasonic_ranger\n)\n\n\n    \nexcept\n \nTypeError\n:\n\n        \nprint\n \nError\n\n    \nexcept\n \nIOError\n:\n\n        \nprint\n \nError\n\n\n\n\n\n\u8fd0\u884c\u7a0b\u5e8f\n\n\n\n\n\u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84\uff08\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84\uff09\n\n \ncd\n \nGrovePi\n/\nSoftware\n/\nPython\n/\n\n\n\n\n\n\n\u8fd0\u884c\u7a0b\u5e8f\n\n \nsudo\n \npython\n \ngrove_ultrasonic\n.\npy\n\n\n\n\n\n\n\n\n\u8fd0\u884c\u5f97\u5230\u7684\u7ed3\u679c\n\n\n\n\n\n\n\n\u76f8\u5173\u9879\u76ee\n\n\n\u5982\u679c\u60a8\u60f3\u901a\u8fc7Grove - Ultrasonic Ranger\u505a\u4e00\u4e9b\u6709\u610f\u601d\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\u3002\n\n\n\u81ea\u52a8\u6c34\u4f4d\u63a7\u5236\u5668\n\n\n\u6709\u8bb8\u591a\u65b9\u6cd5\u4f7f\u7528\u6d6e\u529b\u4f20\u611f\u5668\u6765\u786e\u5b9a\u6c34\u4f4d\uff0c\u6216\u8005\u4f7f\u7528\u63a2\u5934\u6765\u68c0\u6d4b\u6cb9\u7bb1\u4e2d\u7684\u6c34\u4f4d\u9ad8\u4f4e\u3002 \u5982\u4f55\u5728\u4e0d\u4f7f\u7528\u63a2\u9488\u6216\u4e0e\u6c34\u63a5\u89e6\u7684\u60c5\u51b5\u4e0b\u6d4b\u91cf\u6c34\u4f4d\uff1f \u662f\u7684\uff0c\u6709\u4e00\u79cd\u65b9\u6cd5\u53ea\u662f\u4f7f\u7528\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\uff0c\u8fd9\u5f88\u7b80\u5355\uff01 \u60a8\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u6700\u5927\u548c\u6700\u5c0f\u6c34\u5e73\u6765\u786e\u5b9a\u6c34\u7bb1\u5185\u6c34\u6df1\u3002\n\n\n\n\n\n\n\u5ba4\u5185\u95ea\u7535\u4e91\n\n\n\u505a\u4e00\u4e2a\u5ba4\u5185\u95ea\u7535\u4e91\uff0c\u628a\u5b83\u6302\u5728\u4f60\u7684\u5929\u82b1\u677f\u4e0a\uff0c\u5e76\u4e14\u8ddf\u670b\u53cb\u5f00\u4e00\u4e2a\u73a9\u7b11\uff0c\u8ba9\u4efb\u4f55\u901a\u8fc7\u5b83\u7684\u4eba\u611f\u5230\u9ad8\u5174\uff01\n\n\n\n\n\n\n\u591a\u5f69\u87ba\u65cb\n\n\n\u6211\u4eec\u7684\u827a\u672f\u5bb6\u738b\u4e16\u8f89\u6700\u8fd1\u5411\u6211\u5c55\u793a\u4e86\u53e6\u4e00\u4ef6\u60ca\u4eba\u7684\u827a\u672f\u4f5c\u54c1\uff1a\u591a\u5f69\u87ba\u65cb\u3002 \u518d\u52a0\u4e0a\u51e0\u4e2a\u7b80\u5355\u7684\u7ec4\u4ef6\uff0c\u5979\u5411\u6211\u4eec\u4ecb\u7ecd\u4e86\u827a\u672f\u548c\u7535\u5b50\u7684\u7ec4\u5408\u7684\u7f8e\u4e3d\u3002\n\n\n\u4f7f\u7528Grove - Ultrasonic Ranger\uff0c\u5979\u53ef\u4ee5\u901a\u8fc7\u63d0\u9ad8\u6216\u964d\u4f4e\u7a7a\u6c14\u4e2d\u7684\u624b\u638c\u6765\u795e\u5947\u5730\u63a7\u5236\u591a\u5f69\u87ba\u65cb\u5185\u7684\u53d1\u5149LED\u6570\u91cf\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Library]\n \nUltrasonic Ranger library\n\n\n[Library]\n \nGrove_LCD_RGB_Backlight-master\n\n\n[Example]\n \nExample_Measure_and_display_the_distance\n\n\n[Example]\n \nExample_Measure_distance_and_led_display", 
            "title": "Grove-Ultrasonic Ranger"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_1", 
            "text": "\u4e3a\u4e86\u63d0\u9ad8\u5728\u4f7f\u7528\u4e00\u4e9b\u4f4e\u538b\u4e3b\u677f\u65f6\u7684\u7535\u6e90\u7a33\u5b9a\u6027\uff0c\u6211\u4eec\u5bf9\u6b64\u4ea7\u54c1\u505a\u4e86\u4e00\u4e9b\u66f4\u65b0\u3002\u8fd9\u4e9b\u66f4\u65b0\u5305\u62ec\uff1a   \u589e\u52a0\u7535\u5bb9C14  \u91cd\u65b0\u8bbe\u8ba1\u5e03\u5c40\uff0c\u4f7f\u5176\u66f4\u52a0\u6574\u6d01  \u517c\u5bb93.3V\u7535\u538b\u7cfb\u7edf   \u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u4e24\u5f20\u56fe\u7247\u6765\u663e\u793a\u4e0d\u540c\u4e4b\u5904\uff1a    !!!\u6ce8\u610f\n    \u8bf7\u6ce8\u610f\uff0c\u65b0\u7248\u672c\u4e0e\u65e7\u7248\u672c\u5171\u4eab\u76f8\u540c\u7684sku\uff0c\u6240\u4ee5\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u65e7\u7684sku\uff1a101020010\u8fdb\u884c\u8d2d\u4e70\uff0c\u6211\u4eec\u5c06\u7ed9\u60a8\u53d1\u9001\u65b0\u7248\u672c\u3002", 
            "title": "\u4ea7\u54c1\u66f4\u65b0"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_2", 
            "text": "\u53c2\u6570  \u503c/\u8303\u56f4      \u5de5\u4f5c\u7535\u538b  3.2~5.2V    \u5de5\u4f5c\u7535\u6d41  8mA    \u8d85\u58f0\u6ce2\u9891\u7387  40kHz    \u6d4b\u91cf\u8303\u56f4  2-350cm    \u7cbe\u5ea6  1cm    \u8f93\u51fa  PWM    \u5c3a\u5bf8  50mm X 25mm X 16mm    \u91cd\u91cf  13g     !!!\u5c0f\u63d0\u793a\n    \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#arduino", 
            "text": "", 
            "title": "\u4f7f\u7528Arduino"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_5", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2aGrove - Ultrasonic Ranger \u5982\u4f55\u8fd0\u4f5c\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Ultrasonic Ranger  Base Shield  Grove - LCD RGB Backlight            \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u5c06Ultrasonic Ranger\u8fde\u63a5\u5230Grove-Base Shield\u7684  D7  \u7aef\u53e3\u3002  \u5c06LCD RGB Backlight\u8fde\u63a5\u5230Grove-Base Shield\u7684  I2C  \u7aef\u53e3\u3002  \u5c06Grove - Base Shield\u63d2\u5165\u5230Arduino\u4e2d\u3002  \u901a\u8fc7USB\u7ebf\u5c06Arduino\u8fde\u63a5\u5230PC\u3002", 
            "title": "\u7269\u7406\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_6", 
            "text": "\u4eceGithub\u4e0b\u8f7d  UltrasonicRanger Library \u548c   Grove - LCD RGB Backlight Library   \u3002  \u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u5b89\u88c5\u5e93\uff0c\u8bf7\u53c2\u9605  \u5982\u4f55\u5b89\u88c5\u5e93   #include  Wire.h \n#include  rgb_lcd.h \n#include  Ultrasonic.h \n\nrgb_lcd lcd;\nUltrasonic ultrasonic(7);\n\nconst int colorR = 0;\nconst int colorG = 255;\nconst int colorB = 0;\n\n\nvoid setup()\n{\n    // set up the LCD s number of columns and rows:\n    lcd.begin(16, 2);\n    lcd.setRGB(colorR, colorG, colorB);\n}\n\nvoid loop()\n{   \n    long RangeInCentimeters;\n    RangeInCentimeters = ultrasonic.MeasureInCentimeters();\n    delay(150);\n    lcd.clear();\n    lcd.setCursor(0,0);\n    lcd.print( The distance: );\n    lcd.setCursor(0,1) ;\n    lcd.print(RangeInCentimeters,DEC);\n    lcd.setCursor(5,1) ;\n    lcd.print( cm );\n} \n- \u5c06\u4ee3\u7801\u590d\u5236\u5230Arduino\u5e76\u4e0a\u4f20\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230LCD\u4e0a\u7684\u8ddd\u79bb\u663e\u793a\u3002", 
            "title": "\u8f6f\u4ef6\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#ti-launchpad", 
            "text": "", 
            "title": "\u4f7f\u7528 TI LaunchPad"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_7", 
            "text": "\u8d85\u58f0\u6ce2\u4f20\u611f\u5668(Ultrasonic Ranger Sensor)  \u8be5\u793a\u4f8b\u663e\u793a\u5982\u4f55\u4f7f\u7528\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\u6d4b\u91cf\u4e0e\u969c\u788d\u7269\u7684\u8ddd\u79bb\uff0c\u5e76\u57284\u4f4d\u6570\u5b57\u663e\u793a\u5c4f\uff08\u5398\u7c73\uff09\u4e0a\u663e\u793a\u8be5\u503c\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_8", 
            "text": "/*\n Ultrasonic-Ranger to 4-digit-display\n Measure the distance to obstacles in front and display the value on\n 4-digital-display\n\n The circuit:\n * Ultrasonic Ranger attached to SPI plug on Grove Base BoosterPack\n * one side pin (either one) to ground\n * the other side pin to +VCC\n * LED anode (long leg) attached to RED_LED\n * LED cathode (short leg) attached to ground\n\n * Note:  \n\n\n This example code is in the public domain.\n\n http://www.seeedstudio.com/wiki/Grove_-_Ultrasonic_Ranger\n */\n\n#include  TM1637.h \n#include  Ultrasonic.h \n/* Macro Define */\n#define CLK               40                  /* 4-digital display clock pin */\n#define DIO               39                 /* 4-digital display data pin */\n#define BLINK_LED         RED_LED            /* blink led */\n#define ULTRASONIC_PIN    38                  /* pin of the Ultrasonic Ranger */\n\n/* Global Variables */\nTM1637 tm1637(CLK, DIO);                  /* 4-digital display object */\nUltrasonic ultrasonic(ULTRASONIC_PIN);    /* Ultrasonic Ranger object */\nint distance = 0;                         /* variable to store the distance to obstacles in front */\nint blink_interval = 0;                   /* led delay time */\nint8_t bits[4] = {0};                     /* array to store the single bits of the value */\n\n/* the setup() method runs once, when the sketch starts */\nvoid setup() {\n\n    /* Initialize 4-digital display */\n    tm1637.init();\n    tm1637.set(BRIGHT_TYPICAL);\n\n    /* declare the red_led pin as an OUTPUT */\n    pinMode(RED_LED, OUTPUT);\n\n}\n\n/* the loop() method runs over and over again */\nvoid loop() {   \n\n    distance = ultrasonic.MeasureInCentimeters();   /* read the value from the sensor */   \n\n    memset(bits, 0, 4);                             /* reset array when we use it */\n    for(int i = 3; i  = 0; i--) {\n        /* get single bits of the analog value */\n        bits[i] = distance % 10;\n        distance = distance / 10;  \n        tm1637.display(i, bits[i]);                 /* display by 4-digital display */\n    }\n    delay(100);\n}", 
            "title": "\u8f6f\u4ef6\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#raspberry-pi", 
            "text": "", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_9", 
            "text": "Raspberry pi  Grove - Ultrasonic Ranger  GrovePi_Plus           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u6309\u7167  \u8bf4\u660e   \u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002  .\u5c06\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\u8fde\u63a5\u5230\u7aef\u53e3 ** D4 ** \u5e76\u8fd0\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u3002 \u5b83\u5c06\u5728\u7ec8\u7aef\u4e0a\u7684\u663e\u793a\u8ddd\u79bb\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_10", 
            "text": "# GrovePi + Grove Ultrasonic Ranger  from   grovepi   import   *  # Connect the Grove Ultrasonic Ranger to digital port D4  # SIG,NC,VCC,GND  ultrasonic_ranger   =   4  while   True : \n     try : \n         # Read distance value from Ultrasonic \n         print   ultrasonicRead ( ultrasonic_ranger ) \n\n     except   TypeError : \n         print   Error \n     except   IOError : \n         print   Error", 
            "title": "\u8f6f\u4ef6\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_11", 
            "text": "\u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84\uff08\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84\uff09   cd   GrovePi / Software / Python /    \u8fd0\u884c\u7a0b\u5e8f   sudo   python   grove_ultrasonic . py     \u8fd0\u884c\u5f97\u5230\u7684\u7ed3\u679c", 
            "title": "\u8fd0\u884c\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_12", 
            "text": "\u5982\u679c\u60a8\u60f3\u901a\u8fc7Grove - Ultrasonic Ranger\u505a\u4e00\u4e9b\u6709\u610f\u601d\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u4f9b\u60a8\u53c2\u8003\u3002", 
            "title": "\u76f8\u5173\u9879\u76ee"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_13", 
            "text": "\u6709\u8bb8\u591a\u65b9\u6cd5\u4f7f\u7528\u6d6e\u529b\u4f20\u611f\u5668\u6765\u786e\u5b9a\u6c34\u4f4d\uff0c\u6216\u8005\u4f7f\u7528\u63a2\u5934\u6765\u68c0\u6d4b\u6cb9\u7bb1\u4e2d\u7684\u6c34\u4f4d\u9ad8\u4f4e\u3002 \u5982\u4f55\u5728\u4e0d\u4f7f\u7528\u63a2\u9488\u6216\u4e0e\u6c34\u63a5\u89e6\u7684\u60c5\u51b5\u4e0b\u6d4b\u91cf\u6c34\u4f4d\uff1f \u662f\u7684\uff0c\u6709\u4e00\u79cd\u65b9\u6cd5\u53ea\u662f\u4f7f\u7528\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\uff0c\u8fd9\u5f88\u7b80\u5355\uff01 \u60a8\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u6700\u5927\u548c\u6700\u5c0f\u6c34\u5e73\u6765\u786e\u5b9a\u6c34\u7bb1\u5185\u6c34\u6df1\u3002", 
            "title": "\u81ea\u52a8\u6c34\u4f4d\u63a7\u5236\u5668"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_14", 
            "text": "\u505a\u4e00\u4e2a\u5ba4\u5185\u95ea\u7535\u4e91\uff0c\u628a\u5b83\u6302\u5728\u4f60\u7684\u5929\u82b1\u677f\u4e0a\uff0c\u5e76\u4e14\u8ddf\u670b\u53cb\u5f00\u4e00\u4e2a\u73a9\u7b11\uff0c\u8ba9\u4efb\u4f55\u901a\u8fc7\u5b83\u7684\u4eba\u611f\u5230\u9ad8\u5174\uff01", 
            "title": "\u5ba4\u5185\u95ea\u7535\u4e91"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_15", 
            "text": "\u6211\u4eec\u7684\u827a\u672f\u5bb6\u738b\u4e16\u8f89\u6700\u8fd1\u5411\u6211\u5c55\u793a\u4e86\u53e6\u4e00\u4ef6\u60ca\u4eba\u7684\u827a\u672f\u4f5c\u54c1\uff1a\u591a\u5f69\u87ba\u65cb\u3002 \u518d\u52a0\u4e0a\u51e0\u4e2a\u7b80\u5355\u7684\u7ec4\u4ef6\uff0c\u5979\u5411\u6211\u4eec\u4ecb\u7ecd\u4e86\u827a\u672f\u548c\u7535\u5b50\u7684\u7ec4\u5408\u7684\u7f8e\u4e3d\u3002  \u4f7f\u7528Grove - Ultrasonic Ranger\uff0c\u5979\u53ef\u4ee5\u901a\u8fc7\u63d0\u9ad8\u6216\u964d\u4f4e\u7a7a\u6c14\u4e2d\u7684\u624b\u638c\u6765\u795e\u5947\u5730\u63a7\u5236\u591a\u5f69\u87ba\u65cb\u5185\u7684\u53d1\u5149LED\u6570\u91cf\u3002", 
            "title": "\u591a\u5f69\u87ba\u65cb"
        }, 
        {
            "location": "/Grove-Ultrasonic_Ranger/#_16", 
            "text": "[Library]   Ultrasonic Ranger library  [Library]   Grove_LCD_RGB_Backlight-master  [Example]   Example_Measure_and_display_the_distance  [Example]   Example_Measure_distance_and_led_display", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-GSR_Sensor/", 
            "text": "GSR\u901a\u8fc7\u6d4b\u91cf\u76ae\u80a4\u7535\u6d41\u53cd\u5e94\u6765\u6d4b\u91cf\u76ae\u80a4\u7535\u5bfc\u7387\u3002 \u5f3a\u70c8\u7684\u60c5\u7eea\u4f1a\u523a\u6fc0\u4f60\u7684\u4ea4\u611f\u795e\u7ecf\u7cfb\u7edf\uff0c\u5bfc\u81f4\u6c57\u817a\u5206\u6ccc\u66f4\u591a\u7684\u6c57\u6c34\u3002 Grove - GSR\u5141\u8bb8\u60a8\u901a\u8fc7\u7b80\u5355\u5730\u5c06\u4e24\u4e2a\u7535\u6781\u8fde\u63a5\u5230\u4e24\u4e2a\u624b\u6307\u6765\u53d1\u73b0\u8fd9\u79cd\u5f3a\u70c8\u7684\u60c5\u7eea\uff0c\u5b83\u80fd\u591f\u5236\u4f5c\u4e0e\u60c5\u611f\u6709\u5173\u7684\u9879\u76ee\uff08\u5982\u7761\u7720\u8d28\u91cf\u76d1\u89c6\u5668\uff09\uff0c\u662f\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u88c5\u5907\u3002\n\n\n\n\n\u7248\u672c\u4fe1\u606f\n\n\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\u63cf\u8ff0\n\n\n\n\n\n\n\n\n\n\nGrove - GSR_Sensor V1.0\n\n\n2013\u5e746\u670819\u65e5\n\n\n\u521d\u59cb\u7248\u672c\n\n\n\n\n\n\nGrove - GSR_Sensor V1.2\n\n\n2014\u5e747\u670831\u65e5\n\n\n\u5728M324PW-TSSOP14\u548cGND\u4e4b\u95f4\u589e\u52a0C3 100nf\n\n\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\uff1a5V / 3.3V\n\n\n\u7075\u654f\u5ea6\u53ef\u901a\u8fc7\u7535\u4f4d\u5668\u8c03\u8282\n\n\n\u914d\u7f6e\u5916\u90e8\u624b\u6307\u6307\u5957\u6d4b\u91cf\u88c5\u7f6e\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003\nGrove System\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793aGroove - GSR\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4.2\n\n\nGrove - GSR\n\n\nBase Shield\n\n\nGrove-RGB LCD Backlight\n\n\nGrove-Buzzer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u4f7f\u7528Grove \u901a\u7528 4\u9488\u8fde\u63a5\u7ebf\u5c06Grove-GSR\u8fde\u63a5\u5230Grove - Base Shield\u4e0a\u7684 \nA2\n\u3002\n\n\n\u4f7f\u7528Grove \u901a\u7528 4\u9488\u8fde\u63a5\u7ebf\u5c06Grove-Buzzer\u8fde\u63a5\u5230Grove - Base Shield\u4e0a\u7684 \nD3\n\u3002\n\n\n\u4f7f\u7528Grove \u901a\u7528 4\u9488\u8fde\u63a5\u7ebf\u5c06Grove-RGB LCD Backlight\u8fde\u63a5\u5230Grove - Base Shield\u4e0a\u7684 \nI2C\n\u3002\n\n\n\u5c06 Base Shield\u63d2\u5165\u5230 Seeeduino-V4.2\u3002\n\n\n\u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06 Seeeduino-V4.2 \u8fde\u63a5\u5230PC\u3002\n\n\n\n\n\n\n\n\nNote\n\n\n\u5982\u679c\u6ca1\u6709Base Shield\uff0c\u8bf7\u4e0d\u7528\u62c5\u5fc3\uff0c\u4f20\u611f\u5668\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u5230Arduino\u3002 \u8bf7\u6309\u7167\u4e0b\u9762\u7684\u8868\u683c\u8fde\u63a5Arduino\u3002\n\n\n\n\n\n\n\n\n\n\nGrove-GSR Sensor\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nVCC\n\n\nVCC\n\n\n\n\n\n\nSIG\n\n\nA2\n\n\n\n\n\n\nNC\n\n\n\u4e0d\u8fde\u63a5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove-Buzzer\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nVCC\n\n\nVCC\n\n\n\n\n\n\nSIG\n\n\n3\n\n\n\n\n\n\nNC\n\n\n\u4e0d\u8fde\u63a5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove -RGB LCD Backlight\n\n\nArduino Uno\n\n\n\n\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nVCC\n\n\nVCC\n\n\n\n\n\n\nSDA\n\n\nA4\n\n\n\n\n\n\nSCL\n\n\nA5\n\n\n\n\n\n\n\n\n\u4f5c\u4e3a\u53c2\u8003\uff0c\u4e0b\u8868\u663e\u793a\u4e86I2C\u5f15\u811a\u4f4d\u4e8e\u5404\u79cdArduino\u677f\u4e0a\u7684\u4f4d\u7f6e\u3002\n\n\n\n\n\n\n\n\nBoard\n\n\nI2C  pins\n\n\n\n\n\n\n\n\n\n\nUno, Ethernet\n\n\nA4 (SDA), A5 (SCL)\n\n\n\n\n\n\nMega2560\n\n\n20 (SDA), 21 (SCL)\n\n\n\n\n\n\nLeonardo\n\n\n2 (SDA), 3 (SCL)\n\n\n\n\n\n\nDue\n\n\n20 (SDA), 21 (SCL), SDA1, SCL1\n\n\n\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\u6211\u4eec\u9700\u8981\u4e0b\u8f7dGrove_LCD_RGB_Backlight\u5e93\u5e76\u5b89\u88c5\u5230\u60a8\u7684Arduino IDE\u3002\n\n\n\n\n\u8bf7\u9075\u5faa \n\u5982\u4f55\u5b89\u88c5arduino\u5e93\n \u7684\u6b65\u9aa4\u6765\u5b89\u88c5RGB Backlight\u5e93\u3002\n\n\n\n\n\n\n\n\n\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684Arduino\u7f16\u8f91\u5668\u4e0a\u5e76\u5c06\u5176\u4e0a\u4f20\u5230Arduino\u3002\n\n\n\n\n#include \nWire.h\n\n#include \nrgb_lcd.h\n\n\n    const int BUZZER=3;\n    const int GSR=A2;\n    int threshold=0;\n    int sensorValue;\n    rgb_lcd lcd;\n\n    void setup(){\n      long sum=0;\n      lcd.begin(16, 2);\n      Serial.begin(9600);\n      pinMode(BUZZER,OUTPUT);\n      digitalWrite(BUZZER,LOW);\n      delay(1000);\n\n      for(int i=0;i\n500;i++)\n      {\n      sensorValue=analogRead(GSR);\n      sum += sensorValue;\n      delay(5);\n      }\n      threshold = sum/500;\n       Serial.print(\nthreshold =\n);\n       Serial.println(threshold);\n      }\n\n    void loop(){\n      int temp;\n      sensorValue=analogRead(GSR);\n      Serial.print(\nsensorValue=\n);\n      Serial.println(sensorValue);\n      lcd.setCursor(0, 0);\n      lcd.print(\nGSR Value: \n);\n      lcd.print(sensorValue);\n      temp = threshold - sensorValue;\n      if(abs(temp)\n50)\n      {\n        sensorValue=analogRead(GSR);\n        temp = threshold - sensorValue;\n        if(abs(temp)\n50){\n        digitalWrite(BUZZER,HIGH);\n        Serial.println(\nYES!\n);\n        delay(3000);\n        digitalWrite(BUZZER,LOW);\n        delay(1000);}\n      }\n      }\n\n\n\n\n\n\n\u6234\u597d\u6307\u5957\u5e76\u4e14\u4fdd\u6301\u653e\u677e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4eceGrove_LCD_RGB_Backlight\u548c\u4e32\u53e3\u4e2d\u770b\u5230\u6570\u636e\uff1a\n\n\n\n\n\n\n\n\n\u7136\u540e\u6df1\u5438\u4e00\u53e3\u6c14 \u8702\u9e23\u5668\u73b0\u5728\u5e94\u8be5\u88ab\u89e6\u53d1\u3002 \u800c\u4e14\u5e94\u8be5\u53ef\u4ee5\u89c2\u5bdf\u5230\u8f93\u51fa\u7684\u6570\u503c\u6709\u660e\u663e\u7684\u53d8\u5316\u3002\n\n\n\n\n\u53c2\u8003\n\n\n\n\n\u6709\u51e0\u4e2a\u4f7f\u7528GSR\u6570\u636e\u5728excel\u4e2d\u521b\u5efa\u7684\u56fe\u8868\u3002 \u6211\u4eec\u53ef\u4ee5\u6253\u5f00 \nGSR sensor data\n\u67e5\u770b\u8be6\u7ec6\u6570\u636e.\n\n\n\n\n\n\n\u6df1\u547c\u5438\u7684\u65f6\u5019\n\n\n\n\n\n\n\n\n\u9965\u997f\u7684\u65f6\u5019\n\n\n\n\n\n\n\n\n\u653e\u8f7b\u677e\u7684\u65f6\u5019\n\n\n\n\n\n\n\n\n\u770b\u5230\u6211\u8001\u677f\u6765\u7684\u65f6\u5019\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle]\n \nGrove - GSR v1.0 Eagle File\n\n\n[PDF]\n \nGrove-GSR v1.0 Sch\n\n\n[PDF]\n \nGrove-GSR v1.0 PCB\n\n\n[Eagle]\n \nGrove - GSR v1.2 Eagle File\n\n\n[PDF]\n \nGrove-GSR v1.2 Sch\n\n\n[PDF]\n \nGrove-GSR v1.2 PCB\n\n\n[Datasheet]\n \nLM324 datasheet\n\n\n[Document]\n \nGSR sensor data", 
            "title": "Grove-GSR Sensor"
        }, 
        {
            "location": "/Grove-GSR_Sensor/#_1", 
            "text": "\u4ea7\u54c1  \u53d1\u5e03\u65e5\u671f  \u63cf\u8ff0      Grove - GSR_Sensor V1.0  2013\u5e746\u670819\u65e5  \u521d\u59cb\u7248\u672c    Grove - GSR_Sensor V1.2  2014\u5e747\u670831\u65e5  \u5728M324PW-TSSOP14\u548cGND\u4e4b\u95f4\u589e\u52a0C3 100nf", 
            "title": "\u7248\u672c\u4fe1\u606f"
        }, 
        {
            "location": "/Grove-GSR_Sensor/#_2", 
            "text": "\u8f93\u5165\u7535\u538b\uff1a5V / 3.3V  \u7075\u654f\u5ea6\u53ef\u901a\u8fc7\u7535\u4f4d\u5668\u8c03\u8282  \u914d\u7f6e\u5916\u90e8\u624b\u6307\u6307\u5957\u6d4b\u91cf\u88c5\u7f6e    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-GSR_Sensor/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-GSR_Sensor/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-GSR_Sensor/#_5", 
            "text": "\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793aGroove - GSR\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4.2  Grove - GSR  Base Shield  Grove-RGB LCD Backlight  Grove-Buzzer             \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u4f7f\u7528Grove \u901a\u7528 4\u9488\u8fde\u63a5\u7ebf\u5c06Grove-GSR\u8fde\u63a5\u5230Grove - Base Shield\u4e0a\u7684  A2 \u3002  \u4f7f\u7528Grove \u901a\u7528 4\u9488\u8fde\u63a5\u7ebf\u5c06Grove-Buzzer\u8fde\u63a5\u5230Grove - Base Shield\u4e0a\u7684  D3 \u3002  \u4f7f\u7528Grove \u901a\u7528 4\u9488\u8fde\u63a5\u7ebf\u5c06Grove-RGB LCD Backlight\u8fde\u63a5\u5230Grove - Base Shield\u4e0a\u7684  I2C \u3002  \u5c06 Base Shield\u63d2\u5165\u5230 Seeeduino-V4.2\u3002  \u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06 Seeeduino-V4.2 \u8fde\u63a5\u5230PC\u3002     Note  \u5982\u679c\u6ca1\u6709Base Shield\uff0c\u8bf7\u4e0d\u7528\u62c5\u5fc3\uff0c\u4f20\u611f\u5668\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u5230Arduino\u3002 \u8bf7\u6309\u7167\u4e0b\u9762\u7684\u8868\u683c\u8fde\u63a5Arduino\u3002      Grove-GSR Sensor  Arduino      GND  GND    VCC  VCC    SIG  A2    NC  \u4e0d\u8fde\u63a5        Grove-Buzzer  Arduino      GND  GND    VCC  VCC    SIG  3    NC  \u4e0d\u8fde\u63a5        Grove -RGB LCD Backlight  Arduino Uno      GND  GND    VCC  VCC    SDA  A4    SCL  A5     \u4f5c\u4e3a\u53c2\u8003\uff0c\u4e0b\u8868\u663e\u793a\u4e86I2C\u5f15\u811a\u4f4d\u4e8e\u5404\u79cdArduino\u677f\u4e0a\u7684\u4f4d\u7f6e\u3002     Board  I2C  pins      Uno, Ethernet  A4 (SDA), A5 (SCL)    Mega2560  20 (SDA), 21 (SCL)    Leonardo  2 (SDA), 3 (SCL)    Due  20 (SDA), 21 (SCL), SDA1, SCL1", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-GSR_Sensor/#_6", 
            "text": "\u6211\u4eec\u9700\u8981\u4e0b\u8f7dGrove_LCD_RGB_Backlight\u5e93\u5e76\u5b89\u88c5\u5230\u60a8\u7684Arduino IDE\u3002   \u8bf7\u9075\u5faa  \u5982\u4f55\u5b89\u88c5arduino\u5e93  \u7684\u6b65\u9aa4\u6765\u5b89\u88c5RGB Backlight\u5e93\u3002     \u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684Arduino\u7f16\u8f91\u5668\u4e0a\u5e76\u5c06\u5176\u4e0a\u4f20\u5230Arduino\u3002   #include  Wire.h \n#include  rgb_lcd.h \n\n    const int BUZZER=3;\n    const int GSR=A2;\n    int threshold=0;\n    int sensorValue;\n    rgb_lcd lcd;\n\n    void setup(){\n      long sum=0;\n      lcd.begin(16, 2);\n      Serial.begin(9600);\n      pinMode(BUZZER,OUTPUT);\n      digitalWrite(BUZZER,LOW);\n      delay(1000);\n\n      for(int i=0;i 500;i++)\n      {\n      sensorValue=analogRead(GSR);\n      sum += sensorValue;\n      delay(5);\n      }\n      threshold = sum/500;\n       Serial.print( threshold = );\n       Serial.println(threshold);\n      }\n\n    void loop(){\n      int temp;\n      sensorValue=analogRead(GSR);\n      Serial.print( sensorValue= );\n      Serial.println(sensorValue);\n      lcd.setCursor(0, 0);\n      lcd.print( GSR Value:  );\n      lcd.print(sensorValue);\n      temp = threshold - sensorValue;\n      if(abs(temp) 50)\n      {\n        sensorValue=analogRead(GSR);\n        temp = threshold - sensorValue;\n        if(abs(temp) 50){\n        digitalWrite(BUZZER,HIGH);\n        Serial.println( YES! );\n        delay(3000);\n        digitalWrite(BUZZER,LOW);\n        delay(1000);}\n      }\n      }   \u6234\u597d\u6307\u5957\u5e76\u4e14\u4fdd\u6301\u653e\u677e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4eceGrove_LCD_RGB_Backlight\u548c\u4e32\u53e3\u4e2d\u770b\u5230\u6570\u636e\uff1a     \u7136\u540e\u6df1\u5438\u4e00\u53e3\u6c14 \u8702\u9e23\u5668\u73b0\u5728\u5e94\u8be5\u88ab\u89e6\u53d1\u3002 \u800c\u4e14\u5e94\u8be5\u53ef\u4ee5\u89c2\u5bdf\u5230\u8f93\u51fa\u7684\u6570\u503c\u6709\u660e\u663e\u7684\u53d8\u5316\u3002", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-GSR_Sensor/#_7", 
            "text": "\u6709\u51e0\u4e2a\u4f7f\u7528GSR\u6570\u636e\u5728excel\u4e2d\u521b\u5efa\u7684\u56fe\u8868\u3002 \u6211\u4eec\u53ef\u4ee5\u6253\u5f00  GSR sensor data \u67e5\u770b\u8be6\u7ec6\u6570\u636e.    \u6df1\u547c\u5438\u7684\u65f6\u5019     \u9965\u997f\u7684\u65f6\u5019     \u653e\u8f7b\u677e\u7684\u65f6\u5019     \u770b\u5230\u6211\u8001\u677f\u6765\u7684\u65f6\u5019", 
            "title": "\u53c2\u8003"
        }, 
        {
            "location": "/Grove-GSR_Sensor/#_8", 
            "text": "[Eagle]   Grove - GSR v1.0 Eagle File  [PDF]   Grove-GSR v1.0 Sch  [PDF]   Grove-GSR v1.0 PCB  [Eagle]   Grove - GSR v1.2 Eagle File  [PDF]   Grove-GSR v1.2 Sch  [PDF]   Grove-GSR v1.2 PCB  [Datasheet]   LM324 datasheet  [Document]   GSR sensor data", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Dust_Sensor/", 
            "text": "\u8be5\u7070\u5c18\u4f20\u611f\u5668\u901a\u8fc7\u6d4b\u91cf\u7070\u5c18\u6d53\u5ea6\u53ef\u4ee5\u5f88\u597d\u5730\u663e\u793a\u5468\u56f4\u73af\u5883\u4e2d\u7684\u7a7a\u6c14\u8d28\u91cf\u3002 \u901a\u8fc7\u8ba1\u7b97\u7ed9\u5b9a\u65f6\u95f4\u5355\u4f4d\u4e2d\u7684\u4f4e\u8109\u51b2\u5360\u7528\u65f6\u95f4\uff08LPO\u65f6\u95f4\uff09\u6765\u6d4b\u91cf\u7a7a\u6c14\u4e2d\u7684\u9897\u7c92\u7269\u8d28\u6c34\u5e73\uff08PM\u6c34\u5e73\uff09\u3002 LPO\u65f6\u95f4\u4e0ePM\u6d53\u5ea6\u6210\u6b63\u6bd4\u3002 \u8be5\u4f20\u611f\u5668\u53ef\u4e3a\u7a7a\u6c14\u51c0\u5316\u5668\u7cfb\u7edf\u63d0\u4f9b\u53ef\u9760\u7684\u6570\u636e; \u5b83\u80fd\u591f\u54cd\u5e94\u7684pM\u8303\u56f4\u53ef\u4ee5\u8fbe\u5230\u76f4\u5f841\u03bcm\u3002\n\n\n\n\nNote\n\n\n\n\n\u8be5\u4f20\u611f\u5668\u91c7\u7528\u8ba1\u6570\u65b9\u5f0f\u6d4b\u91cf\u7c89\u5c18\u6d53\u5ea6\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u79f0\u91cd\u65b9\u5f0f\uff0c\u5176\u5355\u4f4d\u4e3apcs / L\u6216pcs / 0.01cf\u3002\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u8be5\u4f20\u611f\u5668\u80fd\u591f\u7a33\u5b9a\u548c\u7075\u654f\u7684\u68c0\u6d4b\u4e0d\u4ec5\u662f\u70df\u8349\u70df\u96fe\u7684\u6d53\u5ea6\uff0c\u8fd8\u6709\u5ba4\u5185\u4f1a\u5f15\u8d77\u54ee\u5598\u7684\u5c18\u57c3\u3002\n\n\n\u4f7f\u7528\u5185\u7f6e\u7684\u7a7a\u6c14\u52a0\u70ed\u88c5\u7f6e\u8fbe\u5230\u81ea\u6211\u5438\u6c14\u7684\u529f\u80fd\u3002\n\n\n\u7ef4\u62a4\u65b9\u4fbf\uff0c\u80fd\u591f\u4fdd\u6301\u9ad8\u7075\u654f\u5ea6\u7684\u957f\u671f\u4f7f\u7528\u3002\n\n\n\u80fd\u591f\u8f93\u51fa\u8d85\u8fc71\u5fae\u7c73\u548c2.5\u5fae\u7c73\uff08\u5927\u7ea6\uff09\u7684\u7c92\u5ea6\u3002\n\n\n\u66f4\u7d27\u51d1\u8f7b\u5de7\uff0c\u5b89\u88c5\u65b9\u4fbf\u3002\n\n\n\n\n\n\nNote\n\n\n\u5728\u6700\u65b0\u7248\u672c\u4e2d\uff0c\u8f93\u51fa\u9ad8\u7535\u538b\u4ece4.0V\u53d8\u4e3a4.5V\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6807\u51c6\u89c4\u683c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\nVCC\n\n\n4.75~5.75\n\n\nV\n\n\n\n\n\n\n\u5f85\u673a\u7535\u6e90\n\n\n90\n\n\nmA\n\n\n\n\n\n\n\u53ef\u68c0\u6d4b\u6d53\u5ea6\u8303\u56f4\n\n\n0~28,000 / 0 ~ 8000\n\n\npcs/liter / pcs/0.01cf\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\n\n\n0~45\n\n\n\u00b0C\n\n\n\n\n\n\n\u8f93\u51fa\u65b9\u5f0f\n\n\nNegative Logic, Digital output, High: over 4.0V(Rev.2), Low: under 0.7V\n\n\n-\n\n\n\n\n\n\n\u68c0\u6d4b\u7c92\u5f84\n\n\n1\n\n\n\u03bcm\n\n\n\n\n\n\n\u5916\u5f62\u5c3a\u5bf8\n\n\n59(W) \u00d7 45(H) \u00d7 22(D)\n\n\nmm\n\n\n\n\n\n\n\u6e7f\u5ea6\u8303\u56f4\n\n\n95\uff05rh\u4ee5\u4e0b\n\n\n-\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7a7a\u6c14\u51c0\u5316\u5668\n\n\n\u7a7a\u6c14\u8d28\u91cf\u76d1\u6d4b\n\n\n\u51b7\u6c14\u673a\n\n\n\u547c\u5438\u673a\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u6ce8\u610f\u4e8b\u9879\n\n\n\n\n\u8bf7\u4fdd\u6301\u76f4\u7acb\u3002\n\n\n\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u9700\u89813\u5206\u949f\u7684\u9884\u70ed\u65f6\u95f4\u3002\n\n\n\u4efb\u610f\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u7684\u635f\u574f\u3002\n\n\n\u4ee5\u4e0b\u5c0f\u90e8\u4ef6\uff08\u6807\u6709\u7ea2\u8272\u77e9\u5f62\u7684\uff09\u4ec5\u7528\u4e8e\u51fa\u5382\u8bbe\u7f6e\u3002 \u8bf7 \n\u4e0d\u8981\n \u66f4\u6539\u9ed8\u8ba4\u914d\u7f6e\u3002\n\n\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6f14\u793a\uff0c\u6f14\u793a\u5982\u4f55\u4ece\u8fd9\u4e2aGrove - Dust\u4f20\u611f\u5668\u83b7\u53d6PM\u6d53\u5ea6\u6570\u636e\u3002\n\n\n\u5c06Dust\u4f20\u611f\u5668\u63d2\u5165Grove-\nBaseShield\n \u6570\u5b57\u7aef\u53e3 \nD8\n \u5e76\u4e14\u5b83\u53ea\u80fd\u662f\u901a\u8fc7D8\u63a5\u53e3\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4f20\u611f\u5668\u7684\u64cd\u4f5c\u6d89\u53ca\u91c7\u6837\u3002 \u6b64\u529f\u80fd\u53ea\u80fd\u901a\u8fc7Arduino / Seeeduino\u4e0aATmega328P\u7684\u8f93\u5165\u5f15\u811aD8\u6765\u5b9e\u73b0\u3002\n\n\n\n\n\n\n\n\nArduino UNO\n\n\nDust Sensor Pin\n\n\nCable Color\n\n\n\n\n\n\n\n\n\n\n5V\n\n\nPin 3\n\n\n\u7ea2\u7ebf\n\n\n\n\n\n\nGND\n\n\nPin 1\n\n\n\u9ed1\u7ebf\n\n\n\n\n\n\nD8\n\n\nPin 4\n\n\n\u9ec4\u7ebf\n\n\n\n\n\n\n\n\nGrove\u8fde\u63a5\u7ebf\u5305\u542b\u5728Grove Dust Sensor\u5c01\u88c5\u4e2d\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528Dupont Line\u53bb\u8fde\u63a5Base Shield\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u5c06Grove - Dust\u4f20\u611f\u5668\u8fde\u63a5\u5230Arduino UNO\uff0c\u800c\u4e0d\u9700\u8981Base Shield\u3002\n\n\n\u8f6f\u4ef6\u7a0b\u5e8f\n\n\n\u5c06\u4e0b\u9762\u7684\u6f14\u793a\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230Arduino IDE\u4e0a\u3002\n\n\n/*\n\n\nGrove - Dust Sensor Demo v1.0\n\n\n Interface to Shinyei Model PPD42NS Particle Sensor\n\n\n Program by Christopher Nafis\n\n\n Written April 2012\n\n\n\n http://www.seeedstudio.com/depot/grove-dust-sensor-p-1050.html\n\n\n http://www.sca-shinyei.com/pdf/PPD42NS.pdf\n\n\n\n JST Pin 1 (Black Wire)  =\ngt; //Arduino GND\n\n\n JST Pin 3 (Red wire)    =\ngt; //Arduino 5VDC\n\n\n JST Pin 4 (Yellow wire) =\ngt; //Arduino Digital Pin 8\n\n\n */\n\n\n\nint\n \npin\n \n=\n \n8\n;\n\n\nunsigned\n \nlong\n \nduration\n;\n\n\nunsigned\n \nlong\n \nstarttime\n;\n\n\nunsigned\n \nlong\n \nsampletime_ms\n \n=\n \n2000\n;\n//sampe 30s\nnbsp;;\n\n\nunsigned\n \nlong\n \nlowpulseoccupancy\n \n=\n \n0\n;\n\n\nfloat\n \nratio\n \n=\n \n0\n;\n\n\nfloat\n \nconcentration\n \n=\n \n0\n;\n\n\n\nvoid\n \nsetup\n()\n \n{\n\n  \nSerial\n.\nbegin\n(\n9600\n);\n\n  \npinMode\n(\n8\n,\nINPUT\n);\n\n  \nstarttime\n \n=\n \nmillis\n();\n//get the current time;\n\n\n}\n\n\n\nvoid\n \nloop\n()\n \n{\n\n  \nduration\n \n=\n \npulseIn\n(\npin\n,\n \nLOW\n);\n\n  \nlowpulseoccupancy\n \n=\n \nlowpulseoccupancy\n+\nduration\n;\n\n\n  \nif\n \n((\nmillis\n()\n-\nstarttime\n)\n \n=\n \nsampletime_ms\n)\n//if the sampel time = = 30s\n\n  \n{\n\n    \nratio\n \n=\n \nlowpulseoccupancy\n/\n(\nsampletime_ms\n*\n10.0\n);\n  \n// Integer percentage 0=\ngt;100\n\n    \nconcentration\n \n=\n \n1.1\n*\npow\n(\nratio\n,\n3\n)\n-\n3.8\n*\npow\n(\nratio\n,\n2\n)\n+\n520\n*\nratio\n+\n0.62\n;\n \n// using spec sheet curve\n\n    \nSerial\n.\nprint\n(\nconcentration = \n);\n\n    \nSerial\n.\nprint\n(\nconcentration\n);\n\n    \nSerial\n.\nprintln\n(\n pcs/0.01cf\n);\n\n    \nSerial\n.\nprintln\n(\n\\n\n);\n\n    \nlowpulseoccupancy\n \n=\n \n0\n;\n\n    \nstarttime\n \n=\n \nmillis\n();\n\n  \n}\n\n\n}\n\n\n\n\n\n\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0cSeeeduino\u572830\u79d2\u5185\u5bf9\u201c\u903b\u8f91\u4f4e\u201d\u7684\u603b\u6301\u7eed\u65f6\u95f4\u8fdb\u884c\u4e86\u91c7\u6837\uff0c\u8fd9\u4e2a\u65f6\u95f4\u8868\u793a\u4e86\u73af\u5883\u7684\u7070\u5c18\u6d53\u5ea6\u3002 \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4ecePC\u7684\u4e32\u884c\u7aef\u53e3\u4e2d\u83b7\u53d6\u4f20\u611f\u5668\u68c0\u6d4b\u5230\u7684\u7a7a\u6c14\u8d28\u91cf\u503c\u3002\n\n\n\n\n\"lowpulseoccupancy\"\n \u8868\u793a\u572830\u79d2\u5185\u68c0\u6d4b\u5230\u7684\u4f4e\u8109\u51b2\u5360\u7528\u65f6\u95f4\uff08LPO\u65f6\u95f4\uff09\u3002 \u5355\u4f4d\u662f\u5fae\u79d2\u3002\n\n\n\"ratio\"\n \u53cd\u6620\u4e86\u54ea\u4e2a\u7ea7\u522b\u7684LPO\u65f6\u95f4\u5360\u7528\u4e86\u6574\u4e2a\u7684\u91c7\u6837\u65f6\u95f4\u3002\n\n\n\"concentration\"\n \u662f\u4e00\u4e2a\u6709\u7269\u7406\u610f\u4e49\u7684\u6570\u5b57\u3002 \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4ee5\u4e0b\u7279\u5f81\u56fe\u6765\u5f97\u51faLPO\u65f6\u95f4\u3002\n\n\n\n\u4ee5\u4e0b\u662f\u529e\u516c\u5ba4\u6d4b\u91cf\u7684\u7c89\u5c18\u6d53\u5ea6\u56fe\uff1a\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u665a\u4e0a\u7684\u5c18\u57c3\u6d53\u5ea6\u5f88\u4f4e\uff0c\u4f46\u662f\u4e0b\u5348\u8f83\u9ad8\u3002 \u5f53\u6d53\u5ea6\u9ad8\u4e8e\u67d0\u4e2a\u6570\u503c\u65f6\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u8bbe\u7f6e\u9608\u503c\u3002 \u6b64\u5916\uff0c\u5982\u679c\u8981\u8bbe\u7f6e\u4f20\u611f\u5668\u66f4\u654f\u611f\uff0c\u53ef\u4ee5\u5728\u4f20\u611f\u5668\u4e0a\u6dfb\u52a0\u98ce\u6247\uff0c\u5e76\u5728Pin5\u548cGround\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a10k\u03a9\u7684\u7535\u963b\u3002 \u66f4\u591a\u4fe1\u606f\u8bf7\u8bbf\u95ee \nblog of A.J\n.\n\n\n\u76f8\u5173\u9879\u76ee\n\n\nIf you want to make some awesome projects by Grove - Dust Sensor, here is a project for reference.\n\n\nAir Quality Box\n\n\n\n\nThis section an IoT demo made by Seeeduino and \nGrove\n.\n\n\nMore attention is being paid to the environmental air quality nowadays because the tiny particles in the air around can badly endanger people\u2019s health. We always get the information of environment from our government department. But it\u2019s the average value of the whole city/section. It can not reflect the environment around you accurately.\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Datasheet]\n \nGrove-Dust_sensor datasheet\n\n\n[Datasheet]\n \nDe-construction of the Shinyei PPD42NS dust sensor Made by Tracy Allen\n\n\n[Demo]\nBuilding a low-cost networked PM2.5 monitor\n -- Made by A.J.\n\n\n[Demo]\n \nMeasuring the Pickle Jr. \u2013 a modified PPD42 with an attached fan.\n -- Made by A.J.\n\n\n[Demo]\n \nTesting the Shinyei PPD42NS\n -- Made by darell tan\n\n\n[Demo]\n \nAir Quality Monitoring\n -- Made by Chris Nafis", 
            "title": "Grove-Dust Sensor"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_1", 
            "text": "\u8be5\u4f20\u611f\u5668\u80fd\u591f\u7a33\u5b9a\u548c\u7075\u654f\u7684\u68c0\u6d4b\u4e0d\u4ec5\u662f\u70df\u8349\u70df\u96fe\u7684\u6d53\u5ea6\uff0c\u8fd8\u6709\u5ba4\u5185\u4f1a\u5f15\u8d77\u54ee\u5598\u7684\u5c18\u57c3\u3002  \u4f7f\u7528\u5185\u7f6e\u7684\u7a7a\u6c14\u52a0\u70ed\u88c5\u7f6e\u8fbe\u5230\u81ea\u6211\u5438\u6c14\u7684\u529f\u80fd\u3002  \u7ef4\u62a4\u65b9\u4fbf\uff0c\u80fd\u591f\u4fdd\u6301\u9ad8\u7075\u654f\u5ea6\u7684\u957f\u671f\u4f7f\u7528\u3002  \u80fd\u591f\u8f93\u51fa\u8d85\u8fc71\u5fae\u7c73\u548c2.5\u5fae\u7c73\uff08\u5927\u7ea6\uff09\u7684\u7c92\u5ea6\u3002  \u66f4\u7d27\u51d1\u8f7b\u5de7\uff0c\u5b89\u88c5\u65b9\u4fbf\u3002    Note  \u5728\u6700\u65b0\u7248\u672c\u4e2d\uff0c\u8f93\u51fa\u9ad8\u7535\u538b\u4ece4.0V\u53d8\u4e3a4.5V\u3002    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_2", 
            "text": "\u9879\u76ee  \u6807\u51c6\u89c4\u683c  \u5355\u4f4d      VCC  4.75~5.75  V    \u5f85\u673a\u7535\u6e90  90  mA    \u53ef\u68c0\u6d4b\u6d53\u5ea6\u8303\u56f4  0~28,000 / 0 ~ 8000  pcs/liter / pcs/0.01cf    \u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4  0~45  \u00b0C    \u8f93\u51fa\u65b9\u5f0f  Negative Logic, Digital output, High: over 4.0V(Rev.2), Low: under 0.7V  -    \u68c0\u6d4b\u7c92\u5f84  1  \u03bcm    \u5916\u5f62\u5c3a\u5bf8  59(W) \u00d7 45(H) \u00d7 22(D)  mm    \u6e7f\u5ea6\u8303\u56f4  95\uff05rh\u4ee5\u4e0b  -", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_4", 
            "text": "\u7a7a\u6c14\u51c0\u5316\u5668  \u7a7a\u6c14\u8d28\u91cf\u76d1\u6d4b  \u51b7\u6c14\u673a  \u547c\u5438\u673a", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_6", 
            "text": "\u8bf7\u4fdd\u6301\u76f4\u7acb\u3002  \u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u9700\u89813\u5206\u949f\u7684\u9884\u70ed\u65f6\u95f4\u3002  \u4efb\u610f\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u7684\u635f\u574f\u3002  \u4ee5\u4e0b\u5c0f\u90e8\u4ef6\uff08\u6807\u6709\u7ea2\u8272\u77e9\u5f62\u7684\uff09\u4ec5\u7528\u4e8e\u51fa\u5382\u8bbe\u7f6e\u3002 \u8bf7  \u4e0d\u8981  \u66f4\u6539\u9ed8\u8ba4\u914d\u7f6e\u3002", 
            "title": "\u6ce8\u610f\u4e8b\u9879"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_7", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u6f14\u793a\uff0c\u6f14\u793a\u5982\u4f55\u4ece\u8fd9\u4e2aGrove - Dust\u4f20\u611f\u5668\u83b7\u53d6PM\u6d53\u5ea6\u6570\u636e\u3002  \u5c06Dust\u4f20\u611f\u5668\u63d2\u5165Grove- BaseShield  \u6570\u5b57\u7aef\u53e3  D8  \u5e76\u4e14\u5b83\u53ea\u80fd\u662f\u901a\u8fc7D8\u63a5\u53e3\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4f20\u611f\u5668\u7684\u64cd\u4f5c\u6d89\u53ca\u91c7\u6837\u3002 \u6b64\u529f\u80fd\u53ea\u80fd\u901a\u8fc7Arduino / Seeeduino\u4e0aATmega328P\u7684\u8f93\u5165\u5f15\u811aD8\u6765\u5b9e\u73b0\u3002     Arduino UNO  Dust Sensor Pin  Cable Color      5V  Pin 3  \u7ea2\u7ebf    GND  Pin 1  \u9ed1\u7ebf    D8  Pin 4  \u9ec4\u7ebf     Grove\u8fde\u63a5\u7ebf\u5305\u542b\u5728Grove Dust Sensor\u5c01\u88c5\u4e2d\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528Dupont Line\u53bb\u8fde\u63a5Base Shield\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002  \u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u5c06Grove - Dust\u4f20\u611f\u5668\u8fde\u63a5\u5230Arduino UNO\uff0c\u800c\u4e0d\u9700\u8981Base Shield\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_8", 
            "text": "\u5c06\u4e0b\u9762\u7684\u6f14\u793a\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230Arduino IDE\u4e0a\u3002  /*  Grove - Dust Sensor Demo v1.0   Interface to Shinyei Model PPD42NS Particle Sensor   Program by Christopher Nafis   Written April 2012   http://www.seeedstudio.com/depot/grove-dust-sensor-p-1050.html   http://www.sca-shinyei.com/pdf/PPD42NS.pdf   JST Pin 1 (Black Wire)  = gt; //Arduino GND   JST Pin 3 (Red wire)    = gt; //Arduino 5VDC   JST Pin 4 (Yellow wire) = gt; //Arduino Digital Pin 8   */  int   pin   =   8 ;  unsigned   long   duration ;  unsigned   long   starttime ;  unsigned   long   sampletime_ms   =   2000 ; //sampe 30s nbsp;;  unsigned   long   lowpulseoccupancy   =   0 ;  float   ratio   =   0 ;  float   concentration   =   0 ;  void   setup ()   { \n   Serial . begin ( 9600 ); \n   pinMode ( 8 , INPUT ); \n   starttime   =   millis (); //get the current time;  }  void   loop ()   { \n   duration   =   pulseIn ( pin ,   LOW ); \n   lowpulseoccupancy   =   lowpulseoccupancy + duration ; \n\n   if   (( millis () - starttime )   =   sampletime_ms ) //if the sampel time = = 30s \n   { \n     ratio   =   lowpulseoccupancy / ( sampletime_ms * 10.0 );    // Integer percentage 0= gt;100 \n     concentration   =   1.1 * pow ( ratio , 3 ) - 3.8 * pow ( ratio , 2 ) + 520 * ratio + 0.62 ;   // using spec sheet curve \n     Serial . print ( concentration =  ); \n     Serial . print ( concentration ); \n     Serial . println (  pcs/0.01cf ); \n     Serial . println ( \\n ); \n     lowpulseoccupancy   =   0 ; \n     starttime   =   millis (); \n   }  }   \u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0cSeeeduino\u572830\u79d2\u5185\u5bf9\u201c\u903b\u8f91\u4f4e\u201d\u7684\u603b\u6301\u7eed\u65f6\u95f4\u8fdb\u884c\u4e86\u91c7\u6837\uff0c\u8fd9\u4e2a\u65f6\u95f4\u8868\u793a\u4e86\u73af\u5883\u7684\u7070\u5c18\u6d53\u5ea6\u3002 \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4ecePC\u7684\u4e32\u884c\u7aef\u53e3\u4e2d\u83b7\u53d6\u4f20\u611f\u5668\u68c0\u6d4b\u5230\u7684\u7a7a\u6c14\u8d28\u91cf\u503c\u3002   \"lowpulseoccupancy\"  \u8868\u793a\u572830\u79d2\u5185\u68c0\u6d4b\u5230\u7684\u4f4e\u8109\u51b2\u5360\u7528\u65f6\u95f4\uff08LPO\u65f6\u95f4\uff09\u3002 \u5355\u4f4d\u662f\u5fae\u79d2\u3002  \"ratio\"  \u53cd\u6620\u4e86\u54ea\u4e2a\u7ea7\u522b\u7684LPO\u65f6\u95f4\u5360\u7528\u4e86\u6574\u4e2a\u7684\u91c7\u6837\u65f6\u95f4\u3002  \"concentration\"  \u662f\u4e00\u4e2a\u6709\u7269\u7406\u610f\u4e49\u7684\u6570\u5b57\u3002 \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4ee5\u4e0b\u7279\u5f81\u56fe\u6765\u5f97\u51faLPO\u65f6\u95f4\u3002  \u4ee5\u4e0b\u662f\u529e\u516c\u5ba4\u6d4b\u91cf\u7684\u7c89\u5c18\u6d53\u5ea6\u56fe\uff1a   \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u665a\u4e0a\u7684\u5c18\u57c3\u6d53\u5ea6\u5f88\u4f4e\uff0c\u4f46\u662f\u4e0b\u5348\u8f83\u9ad8\u3002 \u5f53\u6d53\u5ea6\u9ad8\u4e8e\u67d0\u4e2a\u6570\u503c\u65f6\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u8bbe\u7f6e\u9608\u503c\u3002 \u6b64\u5916\uff0c\u5982\u679c\u8981\u8bbe\u7f6e\u4f20\u611f\u5668\u66f4\u654f\u611f\uff0c\u53ef\u4ee5\u5728\u4f20\u611f\u5668\u4e0a\u6dfb\u52a0\u98ce\u6247\uff0c\u5e76\u5728Pin5\u548cGround\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a10k\u03a9\u7684\u7535\u963b\u3002 \u66f4\u591a\u4fe1\u606f\u8bf7\u8bbf\u95ee  blog of A.J .", 
            "title": "\u8f6f\u4ef6\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_9", 
            "text": "If you want to make some awesome projects by Grove - Dust Sensor, here is a project for reference.", 
            "title": "\u76f8\u5173\u9879\u76ee"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#air-quality-box", 
            "text": "This section an IoT demo made by Seeeduino and  Grove .  More attention is being paid to the environmental air quality nowadays because the tiny particles in the air around can badly endanger people\u2019s health. We always get the information of environment from our government department. But it\u2019s the average value of the whole city/section. It can not reflect the environment around you accurately.", 
            "title": "Air Quality Box"
        }, 
        {
            "location": "/Grove-Dust_Sensor/#_10", 
            "text": "[Datasheet]   Grove-Dust_sensor datasheet  [Datasheet]   De-construction of the Shinyei PPD42NS dust sensor Made by Tracy Allen  [Demo] Building a low-cost networked PM2.5 monitor  -- Made by A.J.  [Demo]   Measuring the Pickle Jr. \u2013 a modified PPD42 with an attached fan.  -- Made by A.J.  [Demo]   Testing the Shinyei PPD42NS  -- Made by darell tan  [Demo]   Air Quality Monitoring  -- Made by Chris Nafis", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Air_Quality_Sensor_v1.3/", 
            "text": "\u8be5\u4f20\u611f\u5668\u662f\u4e3a\u5ba4\u5185\u7a7a\u6c14\u72b6\u51b5\u8fdb\u884c\u7efc\u5408\u76d1\u63a7\u800c\u4e13\u95e8\u8bbe\u8ba1\u7684\u3002 \u5b83\u53ef\u68c0\u6d4b\u591a\u79cd\u6709\u5bb3\u6c14\u4f53\uff0c\u5982\u4e00\u6c27\u5316\u78b3\uff0c\u9152\u7cbe\uff0c\u4e19\u916e\uff0c\u7a00\u91ca\u5242\uff0c\u7532\u919b\u7b49\u3002 \u7531\u4e8e\u6d4b\u91cf\u673a\u5236\u7684\u9650\u5236\uff0c\u8be5\u4f20\u611f\u5668\u4e0d\u80fd\u8f93\u51fa\u7279\u5b9a\u7684\u6570\u636e\u6765\u5b9a\u91cf\u63cf\u8ff0\u76ee\u6807\u6c14\u4f53\u7684\u6d53\u5ea6\u3002 \u4f46\u662f\u5b83\u4ecd\u7136\u8db3\u591f\u7528\u4e8e\u4ec5\u9700\u8981\u5b9a\u6027\u7ed3\u679c\u7684\u5e94\u7528\uff0c\u5982\u6c7d\u8f66\u6e05\u65b0\u55b7\u96fe\u5668\u548c\u81ea\u52a8\u7a7a\u6c14\u5faa\u73af\u7cfb\u7edf\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u80fd\u591f\u8bc6\u522b\u591a\u79cd\u76ee\u6807\u6c14\u4f53\n\n\n\u9ad8\u6027\u4ef7\u6bd4\n\n\n\u8010\u7528\n\n\n\u517c\u5bb95V\u548c3.3V\n\n\n\n\n\n\nCautions\n\n\n\n\n\u9700\u8981\u76f8\u5bf9\u5e72\u51c0\u7684\u7a7a\u6c14\u4f5c\u4e3a\u521d\u59cb\u72b6\u6001\u3002\n\n\n\u957f\u65f6\u95f4\u66b4\u9732\u4e8e\u9ad8\u5ea6\u6c61\u67d3\u7684\u7a7a\u6c14\u53ef\u80fd\u4f1a\u663e\u7740\u524a\u5f31\u5176\u654f\u611f\u6027\u3002\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4f7f\u7528Arduino\n\n\n\u5982\u5bfc\u8a00\u4e2d\u6240\u8ff0\uff0c\u8be5\u4f20\u611f\u5668\u5728\u63d0\u4f9b\u591a\u79cd\u7684\u76ee\u6807\u6c14\u4f53\u7684\u5b9a\u6027\u7ed3\u679c\u65b9\u9762\u8868\u73b0\u66f4\u597d\u3002 \u5728\u8fd9\u4e2a\u6f14\u793a\u4e2d\uff0c\u6211\u4eec\u5c06\u5728'.cpp'\u6587\u4ef6\u4e2d\u5b9a\u4e494\u4e2a\u72b6\u6001\u4ee5\u4f9b\u53c2\u8003\u3002 \u4ed6\u4eec\u662f\uff1a\n\n\n\n\na\u3002 \u7a7a\u6c14\u6e05\u65b0 - \u8868\u793a\u826f\u597d\u7684\u7a7a\u8c03\n\n\nb\u3002 \u4f4e\u6c61\u67d3 - \u8868\u660e\u76ee\u6807\u6c14\u4f53\u6d53\u5ea6\u76f8\u5bf9\u8f83\u4f4e\u3002\n\n\nC\u3002 \u9ad8\u6c61\u67d3\uff08\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u6ca1\u6709\u201c\u5f3a\u5236\u4fe1\u53f7\u6709\u6548\u201d\u4fe1\u606f\uff09 - \u60a8\u5e94\u8be5\u4e86\u89e3\u6c61\u67d3\u6c34\u5e73\uff0c\u5e76\u8003\u8651\u662f\u5426\u91c7\u53d6\u67d0\u4e9b\u63aa\u65bd\u3002\n\n\nd\u3002 \u9ad8\u6c61\u67d3\uff08\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u5370\u6709\u201c\u5f3a\u5236\u4fe1\u53f7\u6709\u6548\u201d\u4fe1\u606f\uff09 - \u91c7\u53d6\u5373\u65f6\u63aa\u65bd\u63d0\u9ad8\u7a7a\u6c14\u8d28\u91cf\u3002\n\n\n\n\n\u6211\u4eec\u5c06\u51b3\u7b56\u7ed3\u6784\u5c01\u88c5\u5728\u201c.cpp\u201d\u6587\u4ef6\u4e2d\u3002 \u60a8\u53ef\u4ee5\u5728\u6b64\u627e\u5230\u6709\u5173\u5982\u4f55\u4fee\u6539\u9608\u503c\u7684\u4fe1\u606f\u3002\n\n\n\u8ba9\u6211\u4eec\u8bd5\u8bd5\u5427\uff01\n\n\n1.\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684 \nA0\n \u7aef\u53e3\u3002\n\n\n\n\n2.\u4e0b\u8f7d\u5e93\u6587\u4ef6 : \nAirQuality_Sensor Library\n.\n\n\n3.\u6253\u5f00\u4f20\u611f\u5668\u52a0\u70ed\u540e\u7b49\u5f85\u81f3\u5c112\u5206\u949f\u3002 \u7136\u540e\u901a\u8fc7\u4ee5\u4e0b\u8def\u5f84\u6253\u5f00\u793a\u4f8b\uff1aFile(\u6587\u4ef6) - \nExample(\u793a\u4f8b) - \n AirQuality_Sensor-\n AirQuality_Sensor\u3002\n\n/*\nAirQuality Demo V1.0.\nconnect to A1 to start testing. it will needs about 20s to start\n* By: http://www.seeedstudio.com\n*/\n#include \nAirQuality.h\n\n#include \nArduino.h\n\nAirQuality airqualitysensor;\nint current_quality =-1;\nvoid setup()\n{\n    Serial.begin(9600);\n    airqualitysensor.init(14);\n}\nvoid loop()\n{\n    current_quality=airqualitysensor.slope();\n    if (current_quality \n= 0)// if a valid data returned.\n    {\n        if (current_quality==0)\n        Serial.println(\nHigh pollution! Force signal active\n);\n        else if (current_quality==1)\n        Serial.println(\nHigh pollution!\n);\n        else if (current_quality==2)\n        Serial.println(\nLow pollution!\n);\n        else if (current_quality ==3)\n        Serial.println(\nFresh air\n);\n    }\n}\nISR(TIMER2_OVF_vect)\n{\n    if(airqualitysensor.counter==122)//set 2 seconds as a detected duty\n    {\n\n        airqualitysensor.last_vol=airqualitysensor.first_vol;\n        airqualitysensor.first_vol=analogRead(A0); // change this value if you use another A port\n        airqualitysensor.counter=0;\n        airqualitysensor.timer_index=1;\n        PORTB=PORTB^0x20;\n    }\n    else\n    {\n        airqualitysensor.counter++;\n    }\n}\n\n\n\n4.\u4e0a\u4f20\u4ee3\u7801\n\n\n5.\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u3002\n\n\n\n\n\u8981\u8c03\u6574\u9608\u503c\u548c\u6307\u793a\u6d88\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684.cpp\u6587\u4ef6\u4e2d\u7684\u51b3\u7b56\u7ed3\u6784\u3002\n\n\nint AirQuality::slope(void)\n{\n    while(timer_index)\n    {\n        if(first_vol-last_vol\n400||first_vol\n700)\n        {\n            Serial.println(\nHigh pollution! Force signal active.\n);\n            timer_index=0;\n            avg_voltage();\n            return 0;\n\n        }\n        else if((first_vol-last_vol\n400\nfirst_vol\n700)||first_vol-vol_standard\n150)\n        {\n            Serial.print(\nsensor_value:\n);\n            Serial.print(first_vol);\n            Serial.println(\n\\t High pollution!\n);\n            timer_index=0;\n            avg_voltage();\n            return 1;\n\n        }\n        else if((first_vol-last_vol\n200\nfirst_vol\n700)||first_vol-vol_standard\n50)\n        {\n            //Serial.println(first_vol-last_vol);\n            Serial.print(\nsensor_value:\n);\n            Serial.print(first_vol);\n            Serial.println(\n\\t Low pollution!\n);\n            timer_index=0;\n            avg_voltage();\n            return 2;\n        }\n        else\n        {\n            avg_voltage();\n            Serial.print(\nsensor_value:\n);\n            Serial.print(first_vol);\n            Serial.println(\n\\t Air fresh\n);\n            timer_index=0;\n            return 3;\n        }\n    }\n    return -1;\n}\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n1.\u4f60\u9700\u8981\u51c6\u5907\u4e00\u4e2aRaspberry pi\u548cgrovepi\u6216grovepi +\u3002\n\n\n2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0cGrovepi+ \u914d\u7f6e\u8bf7\u53c2\u8003 \n\u8bf4\u660e\n \u3002\n\n\n3.\u786c\u4ef6\u8fde\u63a5\n- \u901a\u8fc7grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u63d2\u5ea7 \nA0\n\u3002\n\n\n4.\u8df3\u8f6c\u5230\u793a\u4f8b\u76ee\u5f55\uff1a\n\n\ncd yourpath/GrovePi/Software/Python/\n\n\n\n\n\u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\n\n   nano grove_air_quality_sensor.py   # \nCtrl+x\n to exit #\n\n\n\n\nimport time\nimport grovepi\n\n# Connect the Grove Air Quality Sensor to analog port A0\n# SIG,NC,VCC,GND\nair_sensor = 0\n\ngrovepi.pinMode(air_sensor,\nINPUT\n)\n\nwhile True:\n    try:\n        # Get sensor value\n        sensor_value = grovepi.analogRead(air_sensor)\n\n        if sensor_value \n 700:\n            print \nHigh pollution\n\n        elif sensor_value \n 300:\n            print \nLow pollution\n\n        else:\n            print \nAir fresh\n\n\n        print \nsensor_value =\n, sensor_value\n        time.sleep(.5)\n\n    except IOError:\n        print \nError\n\n\n\n\n\n5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n\n   sudo python grove_air_quality_sensor.py\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\nAirQuality Sensor Library.zip\n\n\nGrove_-_Air_quality_sensor_v1.3_sch_pcb.zip\n\n\nGrove_-_Air_quality_sensor_v1.3_sch.pdf\n\n\nAir_quality_sensor_MP503_Chinese.pdf\n\n\nAir_quality sensor_MP503_English.pdf", 
            "title": "Grove-Air Quality Sensor v1.3"
        }, 
        {
            "location": "/Grove-Air_Quality_Sensor_v1.3/#_1", 
            "text": "\u80fd\u591f\u8bc6\u522b\u591a\u79cd\u76ee\u6807\u6c14\u4f53  \u9ad8\u6027\u4ef7\u6bd4  \u8010\u7528  \u517c\u5bb95V\u548c3.3V    Cautions   \u9700\u8981\u76f8\u5bf9\u5e72\u51c0\u7684\u7a7a\u6c14\u4f5c\u4e3a\u521d\u59cb\u72b6\u6001\u3002  \u957f\u65f6\u95f4\u66b4\u9732\u4e8e\u9ad8\u5ea6\u6c61\u67d3\u7684\u7a7a\u6c14\u53ef\u80fd\u4f1a\u663e\u7740\u524a\u5f31\u5176\u654f\u611f\u6027\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Air_Quality_Sensor_v1.3/#_2", 
            "text": "\u4f7f\u7528Arduino  \u5982\u5bfc\u8a00\u4e2d\u6240\u8ff0\uff0c\u8be5\u4f20\u611f\u5668\u5728\u63d0\u4f9b\u591a\u79cd\u7684\u76ee\u6807\u6c14\u4f53\u7684\u5b9a\u6027\u7ed3\u679c\u65b9\u9762\u8868\u73b0\u66f4\u597d\u3002 \u5728\u8fd9\u4e2a\u6f14\u793a\u4e2d\uff0c\u6211\u4eec\u5c06\u5728'.cpp'\u6587\u4ef6\u4e2d\u5b9a\u4e494\u4e2a\u72b6\u6001\u4ee5\u4f9b\u53c2\u8003\u3002 \u4ed6\u4eec\u662f\uff1a   a\u3002 \u7a7a\u6c14\u6e05\u65b0 - \u8868\u793a\u826f\u597d\u7684\u7a7a\u8c03  b\u3002 \u4f4e\u6c61\u67d3 - \u8868\u660e\u76ee\u6807\u6c14\u4f53\u6d53\u5ea6\u76f8\u5bf9\u8f83\u4f4e\u3002  C\u3002 \u9ad8\u6c61\u67d3\uff08\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u6ca1\u6709\u201c\u5f3a\u5236\u4fe1\u53f7\u6709\u6548\u201d\u4fe1\u606f\uff09 - \u60a8\u5e94\u8be5\u4e86\u89e3\u6c61\u67d3\u6c34\u5e73\uff0c\u5e76\u8003\u8651\u662f\u5426\u91c7\u53d6\u67d0\u4e9b\u63aa\u65bd\u3002  d\u3002 \u9ad8\u6c61\u67d3\uff08\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u5370\u6709\u201c\u5f3a\u5236\u4fe1\u53f7\u6709\u6548\u201d\u4fe1\u606f\uff09 - \u91c7\u53d6\u5373\u65f6\u63aa\u65bd\u63d0\u9ad8\u7a7a\u6c14\u8d28\u91cf\u3002   \u6211\u4eec\u5c06\u51b3\u7b56\u7ed3\u6784\u5c01\u88c5\u5728\u201c.cpp\u201d\u6587\u4ef6\u4e2d\u3002 \u60a8\u53ef\u4ee5\u5728\u6b64\u627e\u5230\u6709\u5173\u5982\u4f55\u4fee\u6539\u9608\u503c\u7684\u4fe1\u606f\u3002  \u8ba9\u6211\u4eec\u8bd5\u8bd5\u5427\uff01  1.\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230  Grove - Base Shield  \u7684  A0  \u7aef\u53e3\u3002   2.\u4e0b\u8f7d\u5e93\u6587\u4ef6 :  AirQuality_Sensor Library .  3.\u6253\u5f00\u4f20\u611f\u5668\u52a0\u70ed\u540e\u7b49\u5f85\u81f3\u5c112\u5206\u949f\u3002 \u7136\u540e\u901a\u8fc7\u4ee5\u4e0b\u8def\u5f84\u6253\u5f00\u793a\u4f8b\uff1aFile(\u6587\u4ef6) -  Example(\u793a\u4f8b) -   AirQuality_Sensor-  AirQuality_Sensor\u3002 /*\nAirQuality Demo V1.0.\nconnect to A1 to start testing. it will needs about 20s to start\n* By: http://www.seeedstudio.com\n*/\n#include  AirQuality.h \n#include  Arduino.h \nAirQuality airqualitysensor;\nint current_quality =-1;\nvoid setup()\n{\n    Serial.begin(9600);\n    airqualitysensor.init(14);\n}\nvoid loop()\n{\n    current_quality=airqualitysensor.slope();\n    if (current_quality  = 0)// if a valid data returned.\n    {\n        if (current_quality==0)\n        Serial.println( High pollution! Force signal active );\n        else if (current_quality==1)\n        Serial.println( High pollution! );\n        else if (current_quality==2)\n        Serial.println( Low pollution! );\n        else if (current_quality ==3)\n        Serial.println( Fresh air );\n    }\n}\nISR(TIMER2_OVF_vect)\n{\n    if(airqualitysensor.counter==122)//set 2 seconds as a detected duty\n    {\n\n        airqualitysensor.last_vol=airqualitysensor.first_vol;\n        airqualitysensor.first_vol=analogRead(A0); // change this value if you use another A port\n        airqualitysensor.counter=0;\n        airqualitysensor.timer_index=1;\n        PORTB=PORTB^0x20;\n    }\n    else\n    {\n        airqualitysensor.counter++;\n    }\n}  4.\u4e0a\u4f20\u4ee3\u7801  5.\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u3002   \u8981\u8c03\u6574\u9608\u503c\u548c\u6307\u793a\u6d88\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684.cpp\u6587\u4ef6\u4e2d\u7684\u51b3\u7b56\u7ed3\u6784\u3002  int AirQuality::slope(void)\n{\n    while(timer_index)\n    {\n        if(first_vol-last_vol 400||first_vol 700)\n        {\n            Serial.println( High pollution! Force signal active. );\n            timer_index=0;\n            avg_voltage();\n            return 0;\n\n        }\n        else if((first_vol-last_vol 400 first_vol 700)||first_vol-vol_standard 150)\n        {\n            Serial.print( sensor_value: );\n            Serial.print(first_vol);\n            Serial.println( \\t High pollution! );\n            timer_index=0;\n            avg_voltage();\n            return 1;\n\n        }\n        else if((first_vol-last_vol 200 first_vol 700)||first_vol-vol_standard 50)\n        {\n            //Serial.println(first_vol-last_vol);\n            Serial.print( sensor_value: );\n            Serial.print(first_vol);\n            Serial.println( \\t Low pollution! );\n            timer_index=0;\n            avg_voltage();\n            return 2;\n        }\n        else\n        {\n            avg_voltage();\n            Serial.print( sensor_value: );\n            Serial.print(first_vol);\n            Serial.println( \\t Air fresh );\n            timer_index=0;\n            return 3;\n        }\n    }\n    return -1;\n}  \u4f7f\u7528 Raspberry Pi  1.\u4f60\u9700\u8981\u51c6\u5907\u4e00\u4e2aRaspberry pi\u548cgrovepi\u6216grovepi +\u3002  2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0cGrovepi+ \u914d\u7f6e\u8bf7\u53c2\u8003  \u8bf4\u660e  \u3002  3.\u786c\u4ef6\u8fde\u63a5\n- \u901a\u8fc7grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u63d2\u5ea7  A0 \u3002  4.\u8df3\u8f6c\u5230\u793a\u4f8b\u76ee\u5f55\uff1a  cd yourpath/GrovePi/Software/Python/  \u627e\u5230\u8fd9\u884c\u4ee3\u7801     nano grove_air_quality_sensor.py   #  Ctrl+x  to exit #  import time\nimport grovepi\n\n# Connect the Grove Air Quality Sensor to analog port A0\n# SIG,NC,VCC,GND\nair_sensor = 0\n\ngrovepi.pinMode(air_sensor, INPUT )\n\nwhile True:\n    try:\n        # Get sensor value\n        sensor_value = grovepi.analogRead(air_sensor)\n\n        if sensor_value   700:\n            print  High pollution \n        elif sensor_value   300:\n            print  Low pollution \n        else:\n            print  Air fresh \n\n        print  sensor_value = , sensor_value\n        time.sleep(.5)\n\n    except IOError:\n        print  Error   5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b     sudo python grove_air_quality_sensor.py", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Air_Quality_Sensor_v1.3/#_3", 
            "text": "AirQuality Sensor Library.zip  Grove_-_Air_quality_sensor_v1.3_sch_pcb.zip  Grove_-_Air_quality_sensor_v1.3_sch.pdf  Air_quality_sensor_MP503_Chinese.pdf  Air_quality sensor_MP503_English.pdf", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/", 
            "text": "Grove - \u6c14\u538b\u8ba1\u4f20\u611f\u5668\uff08BMP280\uff09\n \u662fBosch BMP280\u9ad8\u7cbe\u5ea6\u548c\u4f4e\u529f\u8017\u6570\u5b57\u6c14\u538b\u8ba1\u7684\u63a5\u7ebf\u677f\u3002 \u8be5\u6a21\u5757\u53ef\u7528\u4e8e\u7cbe\u786e\u6d4b\u91cf \n\u6e29\u5ea6\n \u548c \n\u5927\u6c14\u538b\u529b\n\u3002 \u968f\u7740\u5927\u6c14\u538b\u529b\u968f\u9ad8\u5ea6\u53d8\u5316\uff0c\u5b83\u4e5f\u53ef\u4ee5\u6d4b\u91cf\u4e00\u4e2a\u5730\u65b9\u7684\u8fd1\u4f3c \n\u9ad8\u5ea6\n \u3002 \u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u5177\u6709I2C\uff08\u4e0eGrove\u63d2\u69fd\u96c6\u6210\uff09\u6216\u901a\u8fc7SPI\u603b\u7ebf\u7684\u5fae\u63a7\u5236\u5668\u3002 \u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u9ad8\u5ea6\u62bd\u8c61\u7684\u5e93\uff0c\u4f7f\u6b64\u4ea7\u54c1\u66f4\u6613\u4e8e\u4f7f\u7528\u3002\n\n\nBMP280\u662fBMP180\u7684\u5347\u7ea7\u7248\u3002 BMP280\u6bd4\u8d77BMP180\u6709\u7740\u4e86\u663e\u7740\u7684\u6539\u8fdb\u3002 BMP280\u4f53\u79ef\u66f4\u5c0f\uff0c\u529f\u8017\u66f4\u4f4e\uff0c\u566a\u58f0\u6d4b\u91cf\u66f4\u4f4e\uff0c\u538b\u529b\u548c\u6e29\u5ea6\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\uff0c\u66f4\u4f4e\u7684RMS\u566a\u58f0\uff0c\u65b0\u589e\u7684\u63a5\u53e3SPI\uff0c\u66f4\u591a\u7684\u6d4b\u91cf\u6a21\u5f0f\uff0c\u66f4\u9ad8\u7684\u6d4b\u91cf\u901f\u7387\u548c\u65b0\u589e\u7684\u6ee4\u6ce2\u5668\uff0c\u9632\u6b62\u73af\u5883\u5e72\u6270\u3002 \u7531\u4e8e\u5927\u6c14\u538b\u529b\u8bfb\u6570\u53d7\u9ad8\u5ea6\u548c\u6e29\u5ea6\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5728\u5e93\u4e2d\u589e\u52a0\u4e86\u8865\u507f\u529f\u80fd\u3002 \u56e0\u6b64\uff0cGrove - \u6c14\u538b\u8ba1\u4f20\u611f\u5668\uff08BMP280\uff09\u5728\u63d0\u4f9b\u7cbe\u786e\u7684\u6e29\u5ea6\uff0c\u5927\u6c14\u538b\u529b\u503c\u548c\u8fd1\u4f3c\u9ad8\u5ea6\u6570\u636e\u65b9\u9762\u5c06\u66f4\u52a0\u53ef\u9760\u3002\n\n\n\u8fd9\u4e2a\u4f20\u611f\u5668\u6613\u4e8e\u4f7f\u7528\u3002 \u5bf9\u4e8e\nSeeeduino\n\uff08\u517c\u5bb9Arduino\uff09\uff0c\u53ea\u9700\u4f7f\u7528\nGrove cable\n \u5230I2C Grove\u8fde\u63a5\u5668\u3002 \u7136\u540e\uff0c\u4f7f\u7528GitHub\u63d0\u4f9b\u7684\u5e93\u548c\u793a\u4f8b\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u4f7f\u7528Arduino\uff0c\u8bf7\u4f7f\u7528Base Shield v2.0\u6216\u7b80\u5355\u5730\u5c06VCC\u5f15\u811a\u8fde\u63a5\u52305V\u7535\u538b\u5f15\u811a\uff0cGND\u63a5\u5730\uff0cSCL\u81f3I2C\u65f6\u949f\uff08\u6a21\u62df5\uff09\u548cSDA\u81f3I2C\u6570\u636e\uff08\u6a21\u62df4\uff09\u3002\n\n\n\u5178\u578b\u5e94\u7528\uff1a\u589e\u5f3aGPS\u5bfc\u822a\uff0c\u6237\u5916/\u5ba4\u5185\u5bfc\u822a\uff0c\u5929\u6c14\u9884\u62a5\u6216\u4efb\u4f55\u5176\u4ed6\u9700\u8981\u7cbe\u786e\u5927\u6c14\u538b\u529b\u8bfb\u6570\u7684\u9879\u76ee\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u83b7\u53d6\u66f4\u7cbe\u786e\u7684\u6e29\u5ea6\uff0c\u5927\u6c14\u538b\u529b\u503c\u548c\u8fd1\u4f3c\u7684\u9ad8\u5ea6\u6570\u636e\u3002\n\n\n\u80fd\u591f\u517c\u5bb9Grove\u5e76\u4e14\u6613\u4e8e\u4f7f\u7528\n\n\n\u62bd\u8c61\u7684\u5e93\uff0c\u80fd\u591f\u66f4\u5feb\u5730\u5efa\u8bbe\u9879\u76ee\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u53c2\u6570\u89c4\u683c\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u89c4\u683c\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\n\n\n3.3V or 5V\n\n\n\n\n\n\nI/O \u53e3\u7535\u538b\n\n\n3.3V or 5V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n0.6mA\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-40 - 85 \u2103\n\n\n\n\n\n\n\u6709\u6548\u538b\u529b\u6d4b\u91cf\u8303\u56f4\n\n\n300\u301c1100 hPa\uff081 hPa = 100 Pa\uff09\uff0c\u7cbe\u5ea6\u4e3a\u00b11.0 hPa\n\n\n\n\n\n\n\u6e29\u5ea6\u6d4b\u91cf\u7cbe\u5ea6\n\n\n\u00b11.0\u00b0C\n\n\n\n\n\n\n\u6d4b\u91cf\u6a21\u5f0f\n\n\nPiezo\u548c Temperature, forced \u6216 periodic\n\n\n\n\n\n\n\u82af\u7247\n\n\nBMP280 (\ndatasheet\n)\n\n\n\n\n\n\n\u91c7\u6837\u9891\u7387\n\n\n182 Hz\uff08\u4e00\u822c\uff09\n\n\n\n\n\n\n\u63a5\u53e3\u603b\u7ebf\n\n\nSPI\uff0cI2C\uff08\u4f7f\u7528\u5176\u4e2d\u4e4b\u4e00\uff09\n\n\n\n\n\n\n\u8d28\u91cf\n\n\n3\u514b\uff08\u63a5\u7ebf\u677f\uff09\n\n\n\n\n\n\n\u5916\u5f62\u5c3a\u5bf8\n\n\n40\uff08\u957f\uff09\u00d720\uff08\u5bbd\uff09 mm\n\n\n\n\n\n\n\n\n\n\nNotes\n\n\n 1. \u6211\u4eec\u5c06\u5c3d\u5feb\u5c55\u793a/\u63cf\u8ff0\u5982\u4f55\u9009\u62e9\u63a5\u53e3\u603b\u7ebf\u3002\n\n\n 2. \u9ad8\u5ea6\u7531\u6e29\u5ea6\u548c\u5927\u6c14\u538b\u529b\u7684\u7efc\u5408\u8ba1\u7b97\u5f97\u5230\u3002 \u56e0\u4e3a\u6ca1\u6709\u6d4b\u91cf\u9ad8\u5ea6\u7684\u4e13\u95e8\u7ec4\u4ef6\u3002\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nSPI soldering pads\n\uff0c\u7535\u538b\u76d1\u63a7\u7535\u8def\u3002\n\n\nInterface bus selection pads\n\uff0c\u9009\u62e9I2C\u603b\u7ebf\uff0c\u901a\u8fc7\u710a\u63a5\u8fde\u63a5\u4e24\u4e2a\u710a\u76d8\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8fde\u63a5\uff09; \u9009\u62e9SPI\u603b\u7ebf\uff0c\u7528\u950b\u5229\u7684\u5200\u6216\u70d9\u94c1\u5207\u5272\u4e24\u4e2a\u710a\u76d8\u3002\n\n\nSlave board address selection pads\n\uff0c\u9009\u62e9Slave board \u5730\u5740\u4ee5\u907f\u514d\u5730\u5740\u51b2\u7a81\u3002\n\n\n\n\nTips:\n \u60a8\u53ef\u4ee5\u7528\u950b\u5229\u7684\u5200\u5207\u9664\u4e0d\u8981\u7684\u710a\u70b9\u3002\n\n\n\u5982\u679c\u9009\u62e9\u4e86SPI\u603b\u7ebf\uff0c\u5219slave board\u7684\u9ed8\u8ba4\u5730\u5740\u4e3a \n0x77\n\uff08\u53f3\u8fde\u63a5\u4e24\u4e2a\u710a\u76d8\uff09\u3002 \u5982\u679c\u8981\u4f7f\u7528\u5730\u5740 \n0x76\n\uff0c\u8bf7\u65ad\u5f00\u6240\u6709\u4e09\u4e2a\u7684\u710a\u76d8\u3002\n\n\n\n\nNote\n\n\u5de5\u4f5c\u65f6\uff0c\u8bf7\u52ff\u89e6\u6478\u6216\u6447\u6643\u6216\u8ba9\u672c\u4ea7\u54c1\u53d1\u751f\u632f\u52a8\u3002 \u8fd9\u5c06\u9020\u6210\u5e72\u6270\uff0c\u5e76\u4f1a\u5f71\u54cd\u6536\u96c6\u7684\u6570\u636e\u7684\u51c6\u786e\u6027\u3002\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n (\u4e3b\u8981\u90e8\u5206)\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - Barometer Sensor (BMP280)\n\n\n1 \u7247\n\n\n\n\n\n\nGrove cable\n\n\n1 \u6839\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u73b0\u5728\u8ba9\u6211\u4eec\u8fd0\u7528\u8fd9\u4e2a\u6a21\u5757\u7684\u4e00\u4e9b\u57fa\u672c\u793a\u4f8b\u3002\n\n\n\u4f7f\u7528 Arduino\n\n\n\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Arduino\u5e73\u53f0\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u9879\u76ee\u3002 \u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u4e3b\u63a7\u677f\uff0c\u8fd9\u4e9b\u6307\u4ee4\u548c\u6e90\u4ee3\u7801\u4e5f\u662f\u6709\u7528\u7684\u3002\n\n\n\u6240\u9700\u6750\u6599\n\n\n\n\nGrove - Barometer Sensor (BMP280) \u00d7 1\n\n\nSeeeduino 4.2\n\uff08\u5b8c\u5168\u517c\u5bb9Arduino\uff09\u6216Arduino UNO \u00d71\uff08\u5176\u4ed6\u578b\u53f7\u4e5f\u5f88\u597d\uff09\n\n\nGrove - Base Shield\n \u00d7 1 \uff08\u5982\u679c\u60a8\u4f7f\u7528Seeeduino\u5728Seeeduino v4.2\u4e0a\u6709\u4e24\u4e2aI2C\u63d2\u5ea7\uff0c\u5219\u662f\u53ef\u9009\u7684\uff09\n\n\nUSB\u7535\u7f06\uff08A\u578b\u81f3B\u578b\uff0c\u9002\u7528\u4e8eArduino\uff09\u00d71\u6216USB\u7535\u7f06\uff08Type-A\u81f3Micro Type-B\uff0cSeeeduino\uff09\u00d71\n\n\nGrove cable\n \u00d7 1\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u5982\u4e0b\u8fde\u63a5\u6240\u6709\u90e8\u5206\uff1a\u7b2c\u4e00\u5f20\u56fe\u7247\u663e\u793a\u4e0eSeeeduino\u7684\u8fde\u63a5\uff0c\u7b2c\u4e8c\u5f20\u56fe\u663e\u793a\u4e0eArduino UNO\u7684\u8fde\u63a5\uff1a\n\n\n\n\n\n\n\u7f16\u7801\n\n\n\u793a\u4f8b\u7a0b\u5e8f\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \uff0c\u9700\u8981\u7684\u5e93\u8bf7\u70b9\u51fb  \n\u8fd9\u91cc\n\n\n\n\n\n\n\u4f7f\u7528\u5178\u578b\u7684\u793a\u4f8b\u4ee3\u7801\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 \nCodebender\n\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u63a7\u677f\u3002\n\n\n\n\n\n\n\n\n\n\n2.\u4e0a\u4f20\u7a0b\u5e8f\u5230\u4f60\u7684Arduino \uff0c\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\nTips:\n \u5982\u679c\u60a8\u4f7f\u7528Seeeduino\uff0c\u8bf7\u5728\u4e0a\u4f20\u5de5\u7a0b\u65f6\u9009\u62e9 \nTool(\u5de5\u5177)\n \u4e0b\u7684 \nBoard(\u5f00\u53d1\u677f)\n\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nSchematic(Eagle) file\n\n\nBMP280 Datasheet\n\n\nLibrary and example code\n on GitHub\n\n\nI\n2\nC how-to for Arduino", 
            "title": "Grove-Barometer Sensor BMP280"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#_1", 
            "text": "\u83b7\u53d6\u66f4\u7cbe\u786e\u7684\u6e29\u5ea6\uff0c\u5927\u6c14\u538b\u529b\u503c\u548c\u8fd1\u4f3c\u7684\u9ad8\u5ea6\u6570\u636e\u3002  \u80fd\u591f\u517c\u5bb9Grove\u5e76\u4e14\u6613\u4e8e\u4f7f\u7528  \u62bd\u8c61\u7684\u5e93\uff0c\u80fd\u591f\u66f4\u5feb\u5730\u5efa\u8bbe\u9879\u76ee    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#_2", 
            "text": "\u53c2\u6570  \u89c4\u683c      \u8f93\u5165\u7535\u538b  3.3V or 5V    I/O \u53e3\u7535\u538b  3.3V or 5V    \u5de5\u4f5c\u7535\u6d41  0.6mA    \u5de5\u4f5c\u6e29\u5ea6  -40 - 85 \u2103    \u6709\u6548\u538b\u529b\u6d4b\u91cf\u8303\u56f4  300\u301c1100 hPa\uff081 hPa = 100 Pa\uff09\uff0c\u7cbe\u5ea6\u4e3a\u00b11.0 hPa    \u6e29\u5ea6\u6d4b\u91cf\u7cbe\u5ea6  \u00b11.0\u00b0C    \u6d4b\u91cf\u6a21\u5f0f  Piezo\u548c Temperature, forced \u6216 periodic    \u82af\u7247  BMP280 ( datasheet )    \u91c7\u6837\u9891\u7387  182 Hz\uff08\u4e00\u822c\uff09    \u63a5\u53e3\u603b\u7ebf  SPI\uff0cI2C\uff08\u4f7f\u7528\u5176\u4e2d\u4e4b\u4e00\uff09    \u8d28\u91cf  3\u514b\uff08\u63a5\u7ebf\u677f\uff09    \u5916\u5f62\u5c3a\u5bf8  40\uff08\u957f\uff09\u00d720\uff08\u5bbd\uff09 mm      Notes   1. \u6211\u4eec\u5c06\u5c3d\u5feb\u5c55\u793a/\u63cf\u8ff0\u5982\u4f55\u9009\u62e9\u63a5\u53e3\u603b\u7ebf\u3002   2. \u9ad8\u5ea6\u7531\u6e29\u5ea6\u548c\u5927\u6c14\u538b\u529b\u7684\u7efc\u5408\u8ba1\u7b97\u5f97\u5230\u3002 \u56e0\u4e3a\u6ca1\u6709\u6d4b\u91cf\u9ad8\u5ea6\u7684\u4e13\u95e8\u7ec4\u4ef6\u3002", 
            "title": "\u53c2\u6570\u89c4\u683c"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#_3", 
            "text": "SPI soldering pads \uff0c\u7535\u538b\u76d1\u63a7\u7535\u8def\u3002  Interface bus selection pads \uff0c\u9009\u62e9I2C\u603b\u7ebf\uff0c\u901a\u8fc7\u710a\u63a5\u8fde\u63a5\u4e24\u4e2a\u710a\u76d8\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8fde\u63a5\uff09; \u9009\u62e9SPI\u603b\u7ebf\uff0c\u7528\u950b\u5229\u7684\u5200\u6216\u70d9\u94c1\u5207\u5272\u4e24\u4e2a\u710a\u76d8\u3002  Slave board address selection pads \uff0c\u9009\u62e9Slave board \u5730\u5740\u4ee5\u907f\u514d\u5730\u5740\u51b2\u7a81\u3002   Tips:  \u60a8\u53ef\u4ee5\u7528\u950b\u5229\u7684\u5200\u5207\u9664\u4e0d\u8981\u7684\u710a\u70b9\u3002  \u5982\u679c\u9009\u62e9\u4e86SPI\u603b\u7ebf\uff0c\u5219slave board\u7684\u9ed8\u8ba4\u5730\u5740\u4e3a  0x77 \uff08\u53f3\u8fde\u63a5\u4e24\u4e2a\u710a\u76d8\uff09\u3002 \u5982\u679c\u8981\u4f7f\u7528\u5730\u5740  0x76 \uff0c\u8bf7\u65ad\u5f00\u6240\u6709\u4e09\u4e2a\u7684\u710a\u76d8\u3002   Note \n\u5de5\u4f5c\u65f6\uff0c\u8bf7\u52ff\u89e6\u6478\u6216\u6447\u6643\u6216\u8ba9\u672c\u4ea7\u54c1\u53d1\u751f\u632f\u52a8\u3002 \u8fd9\u5c06\u9020\u6210\u5e72\u6270\uff0c\u5e76\u4f1a\u5f71\u54cd\u6536\u96c6\u7684\u6570\u636e\u7684\u51c6\u786e\u6027\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#_4", 
            "text": "\u9879\u76ee  \u6570\u91cf      Grove - Barometer Sensor (BMP280)  1 \u7247    Grove cable  1 \u6839", 
            "title": "\u4ea7\u54c1\u6e05\u5355 (\u4e3b\u8981\u90e8\u5206)"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#_5", 
            "text": "\u73b0\u5728\u8ba9\u6211\u4eec\u8fd0\u7528\u8fd9\u4e2a\u6a21\u5757\u7684\u4e00\u4e9b\u57fa\u672c\u793a\u4f8b\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#arduino", 
            "text": "\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Arduino\u5e73\u53f0\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u9879\u76ee\u3002 \u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u4e3b\u63a7\u677f\uff0c\u8fd9\u4e9b\u6307\u4ee4\u548c\u6e90\u4ee3\u7801\u4e5f\u662f\u6709\u7528\u7684\u3002", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#_6", 
            "text": "Grove - Barometer Sensor (BMP280) \u00d7 1  Seeeduino 4.2 \uff08\u5b8c\u5168\u517c\u5bb9Arduino\uff09\u6216Arduino UNO \u00d71\uff08\u5176\u4ed6\u578b\u53f7\u4e5f\u5f88\u597d\uff09  Grove - Base Shield  \u00d7 1 \uff08\u5982\u679c\u60a8\u4f7f\u7528Seeeduino\u5728Seeeduino v4.2\u4e0a\u6709\u4e24\u4e2aI2C\u63d2\u5ea7\uff0c\u5219\u662f\u53ef\u9009\u7684\uff09  USB\u7535\u7f06\uff08A\u578b\u81f3B\u578b\uff0c\u9002\u7528\u4e8eArduino\uff09\u00d71\u6216USB\u7535\u7f06\uff08Type-A\u81f3Micro Type-B\uff0cSeeeduino\uff09\u00d71  Grove cable  \u00d7 1", 
            "title": "\u6240\u9700\u6750\u6599"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#_7", 
            "text": "\u5982\u4e0b\u8fde\u63a5\u6240\u6709\u90e8\u5206\uff1a\u7b2c\u4e00\u5f20\u56fe\u7247\u663e\u793a\u4e0eSeeeduino\u7684\u8fde\u63a5\uff0c\u7b2c\u4e8c\u5f20\u56fe\u663e\u793a\u4e0eArduino UNO\u7684\u8fde\u63a5\uff1a", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#_8", 
            "text": "\u793a\u4f8b\u7a0b\u5e8f\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \uff0c\u9700\u8981\u7684\u5e93\u8bf7\u70b9\u51fb   \u8fd9\u91cc    \u4f7f\u7528\u5178\u578b\u7684\u793a\u4f8b\u4ee3\u7801\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528  Codebender \u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u63a7\u677f\u3002      2.\u4e0a\u4f20\u7a0b\u5e8f\u5230\u4f60\u7684Arduino \uff0c\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002  Tips:  \u5982\u679c\u60a8\u4f7f\u7528Seeeduino\uff0c\u8bf7\u5728\u4e0a\u4f20\u5de5\u7a0b\u65f6\u9009\u62e9  Tool(\u5de5\u5177)  \u4e0b\u7684  Board(\u5f00\u53d1\u677f) \u3002", 
            "title": "\u7f16\u7801"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BMP280/#_9", 
            "text": "Schematic(Eagle) file  BMP280 Datasheet  Library and example code  on GitHub  I 2 C how-to for Arduino", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/", 
            "text": "Grove - Barometer Sensor (BME280) \u662f\u4e00\u6b3e\u57fa\u4e8e \nBosch BMP280\n \u7684\u9ad8\u7cbe\u5ea6\uff0c\u4f4e\u529f\u8017\u4f20\u611f\u5668\u3002\u8be5\u6a21\u5757\u53ef\u51c6\u786e\uff0c\u5feb\u901f\u5730\u6d4b\u91cf\u6e29\u5ea6\uff0c\u5927\u6c14\u538b\u529b\u548c\u6e7f\u5ea6\u3002\u968f\u7740\u5927\u6c14\u538b\u529b\u968f\u9ad8\u5ea6\u53d8\u5316\u800c\u53d8\u5316\uff0c\u5b83\u4e5f\u53ef\u4ee5\u6d4b\u91cf\u4e00\u4e2a\u5730\u65b9\u7684\u8fd1\u4f3c \n\u9ad8\u5ea6\n\u3002\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u6709 \nI\n2\nC\n \uff08\u4e0e Grove \u63d2\u69fd\u96c6\u6210\uff09\u6216\u6709 \nSPI\n \u603b\u7ebf\u7684\u5fae\u63a7\u5236\u5668\u3002 \u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5f88\u591a\u5f00\u53d1\u8d44\u6599\uff0c\u4f7f\u8fd9\u79cd\u4ea7\u54c1\u66f4\u5bb9\u6613\u4f7f\u7528\u3002\n\n\nBME280 \u662f BMP180 \u7684\u5347\u7ea7\u7248\uff0cBME280 \u76f8\u5bf9 BMP180 \u83b7\u5f97\u4e86\u663e\u7740\u7684\u6539\u8fdb\u3002BME280\u7684\u4f53\u79ef\u66f4\u5c0f\uff0c\u529f\u8017\u66f4\u4f4e\uff0c\u6d4b\u91cf\u566a\u58f0\u66f4\u4f4e\uff0c\u538b\u529b\u548c\u6e29\u5ea6\u7684\u5206\u8fa8\u7387\u66f4\u9ad8\uff0cRMS\u566a\u58f0\u66f4\u4f4e\uff0c\u540c\u65f6\u65b0\u589e\u4e86 SPI \u603b\u7ebf\u548c\u66f4\u591a\u7684\u6d4b\u91cf\u6a21\u5f0f\uff0c\u63d0\u9ad8\u4e86\u6d4b\u91cf\u901f\u7387\uff0c\u589e\u52a0\u4e86\u6ee4\u6ce2\u5668\u9632\u6b62\u73af\u5883\u5e72\u6270\u3002\u7531\u4e8e\u5927\u6c14\u538b\u529b\u8bfb\u6570\u53d7\u9ad8\u5ea6\u548c\u6e29\u5ea6\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u6211\u4eec\u589e\u52a0\u4e86\u8865\u507f\u529f\u80fd\u3002 \u6240\u4ee5\uff0cGrove - Barometer Sensor (BME280) \u63d0\u4f9b\u7684\u6e29\u5ea6\uff0c\u5927\u6c14\u538b\u529b\u503c\uff0c\u6e7f\u5ea6\u548c\u8fd1\u4f3c\u9ad8\u5ea6\u7b49\u6570\u636e\u66f4\u52a0\u53ef\u9760\u3002\n\n\n\u4f20\u611f\u5668\u4f7f\u7528\u5f88\u7b80\u5355. \u5bf9\u4e8e\nSeeeduino\n (\u4e0e Arduino \u517c\u5bb9), \u53ea\u9700\u8981\u4f7f\u7528 \nGrove cable\n \u628a\u7535\u8def\u677f\u8fde\u63a5\u5230 I2C Grove \u63a5\u53e3\u4e0a.\u7136\u540e\uff0c\u4f7f\u7528 GitHub \u4e0a\u7684\u4f8b\u7a0b\u548c\u4ee3\u7801\u5373\u53ef\u3002.\u5982\u679c\u60a8\u4f7f\u7528 Arduino\uff0c\u8bf7\u4f7f\u7528 Base Shield v2.0 \u6216\u7b80\u5355\u5730\u5c06 \nVCC\n \u5f15\u811a\u8fde\u63a5\u5230 \n5V\n \u7535\u538b\u5f15\u811a\uff0c\nGND \u63a5\u5730\n\uff0c\nSCL\n \u81f3 I2C \u65f6\u949f\uff08\nA5\n\uff09\u548c \nSDA\n \u81f3 \nI2C\n \u6570\u636e\uff08\nA4\n\uff09\u3002\n\n\n\u5178\u578b\u5e94\u7528\uff1a\u589e\u5f3a GPS \u5bfc\u822a\uff0c\u6237\u5916/\u5ba4\u5185\u5bfc\u822a\uff0c\u5929\u6c14\u9884\u62a5\u6216\u4efb\u4f55\u5176\u4ed6\u9700\u8981\u7cbe\u786e\u7684\u5927\u6c14\u538b\u529b\u8bfb\u6570\u7684\u9879\u76ee\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u83b7\u53d6\u7684\u6e29\u5ea6\uff0c\u5927\u6c14\u538b\u529b\u503c\uff0c\u6e7f\u5ea6\u548c\u8fd1\u4f3c\u9ad8\u5ea6\u6570\u636e\u66f4\u7cbe\u786e\u3002\n\n\n\u517c\u5bb9 Grove \u5e76\u6613\u4e8e\u4f7f\u7528\u3002\n\n\n\u6709\u4e30\u5bcc\u7684\u8d44\u6599\u6765\u5e2e\u52a9\u4f60\u5efa\u7acb\u9879\u76ee\u3002\n\n\n\n\n\n\nTip\n\n\n\u66f4\u591a\u5173\u4e8e Grove \u7684\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove \u7cfb\u7edf\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\n\n\n3.3V or 5V\n\n\n\n\n\n\nI/O \u53e3\u7535\u538b\n\n\n3.3V or 5V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n0.4mA\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-40 - 85 \u2103\n\n\n\n\n\n\n\u5927\u6c14\u538b\u529b\u4f20\u611f\u5668\u6d4b\u91cf\u8303\u56f4\n\n\n300 - 1100 hPa (1 hPa= 100 Pa)\uff0c\u7cbe\u5ea6 \u00b11.0 hPa\n\n\n\n\n\n\n\u6e29\u5ea6\u4f20\u611f\u5668\u6d4b\u91cf\u8303\u56f4\n\n\n-40 - 85 \u2103\uff0c\u7cbe\u5ea6  \u00b11.0\u00b0C\n\n\n\n\n\n\n\u6e7f\u5ea6\u4f20\u611f\u5668\u6d4b\u91cf\u8303\u56f4\n\n\n0% - 100% \u76f8\u5bf9\u6e7f\u5ea6\uff0c\u7cbe\u5ea6 \u00b13%\n\n\n\n\n\n\n\u6d4b\u91cf\u6a21\u5f0f\n\n\n\u538b\u7535\n\u6e29\u5ea6\uff0c\u81ea\u5b9a\u4e49\n\u5468\u671f\u6027\n\n\n\n\n\n\n\u82af\u7247\n\n\nBME280 (\n\u6570\u636e\u624b\u518c\n)\n\n\n\n\n\n\n\u63a5\u53e3\u603b\u7ebf\n\n\nSPI, I\n2\nC (\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a)\n\n\n\n\n\n\n\u91cd\u91cf\n\n\n3.2 g (\u5370\u5237\u7535\u8def\u677f), 9.3 g \u6574\u4e2a\u5305\u88c5\u6bcf\u4ef6\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n40 (\u957f) \u00d7 20 (\u5bbd) mm\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\u6211\u4eec\u5c06\u5c3d\u5feb\u5c55\u793a/\u63cf\u8ff0\u5982\u4f55\u9009\u62e9\u63a5\u53e3\u603b\u7ebf\u3002\n\n\n\u9ad8\u5ea6\u7531\u6e29\u5ea6\u548c\u5927\u6c14\u538b\u529b\u7684\u7ec4\u5408\u8ba1\u7b97\u5f97\u5230\u7684\u3002\u6ca1\u6709\u9ad8\u5ea6\u7684\u4e13\u95e8\u7ec4\u4ef6\u3002\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\n\nNote\n\n\n\u4ee5\u4e0a\u5217\u8868\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u7535\u6c60\u7684\u60c5\u51b5\u3002\n\n\n\u5982\u679c\u6ca1\u6709\u9488\u5bf9\u7279\u5b9a\u5e73\u53f0\u63d0\u53ca\u7248\u672c\u53f7\uff0c\u5219\u8868\u793a\u6b64\u4ea7\u54c1\u652f\u6301\u8be5\u5e73\u53f0\u5185\u7684\u6240\u6709\u7248\u672c\u3002\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nSPI \u710a\u76d8\n, \u4e00\u4e2a\u7535\u538b\u76d1\u63a7\u7535\u8def\u3002\n\n\nInterface bus selection pads\n \uff0c\u9009\u62e9 I\n2\nC \u603b\u7ebf, \u901a\u8fc7\u710a\u63a5\u8fde\u63a5\u4e24\u4e2a\u710a\u76d8\uff08\u9ed8\u8ba4\u8fde\u63a5\uff09; \u9009\u62e9 SPI \u603b\u7ebf, \u7528\u950b\u5229\u7684\u5200\u6216\u70d9\u94c1\u5207\u5272\u5f00\u4e24\u4e2a\u710a\u76d8\u3002\n\n\n\n\n\u4ece\u677f\u5730\u5740\u9009\u62e9\u710a\u76d8\n, \u9009\u62e9\u4ece\u677f\u5730\u5740\u4ee5\u907f\u514d\u5730\u5740\u51b2\u7a81\u3002\n\n\n\n\n\u5982\u679c\u9009\u62e9\u4e86 I2C \u603b\u7ebf\uff0c\u5219\u4ece\u673a\u677f\u7684\u9ed8\u8ba4\u5730\u5740\u4e3a \n0x76\n\uff08\u8fde\u63a5\u53f3\u4fa7\u4e24\u4e2a\u710a\u76d8\uff09\u3002 \u5982\u679c\u8981\u4f7f\u7528\u5730\u5740 \n0x77\n\uff0c\u4ec5\u901a\u8fc7\u710a\u63a5\u8fde\u63a5\u5de6\u4fa7\u4e24\u4e2a\uff08\u65ad\u5f00\u53f3\u4fa7\u4e24\u4e2a\uff09\u3002\n\n\n\nTip\n\n\u4f60\u53ef\u4ee5\u7528\u4e00\u628a\u950b\u5229\u7684\u5200\u5207\u65ad\u710a\u76d8\u95f4\u7684\u8fde\u63a5\u3002\n\n\n\n\u5982\u679c\u9009\u62e9\u4e86 SPI \u603b\u7ebf\uff0c\u5219\u4ece\u673a\u677f\u7684\u9ed8\u8ba4\u5730\u5740\u4e3a \n0x76\n\uff08\u8fde\u63a5\u53f3\u4fa7\u4e24\u4e2a\u710a\u76d8\uff09\u3002\u5982\u679c\u8981\u4f7f\u7528\u5730\u5740 \n0x77\n\uff0c\u8bf7\u65ad\u5f00\u6240\u6709\u4e09\u4e2a\u710a\u76d8\u3002\n\n\n\n\n\n\n\n\n\n\nNote\n\n\u5de5\u4f5c\u65f6\uff0c\u8bf7\u52ff\u89e6\u6478\u6216\u6447\u6643\u8ba9\u672c\u4ea7\u54c1\u53d1\u751f\u632f\u52a8\u3002\u8fd9\u5c06\u9020\u6210\u5e72\u6270\uff0c\u5e76\u4f1a\u5f71\u54cd\u6536\u96c6\u7684\u6570\u636e\u7684\u51c6\u786e\u6027\u3002\n\n\n\n\n\u5305\u88c5\u6e05\u5355\n (\u4e3b\u8981\u90e8\u4ef6)\n\n\n\n\n\n\n\n\n\u90e8\u4ef6\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - Barometer Sensor (BME280)\n\n\n1 \u7247\n\n\n\n\n\n\nGrove cable\n\n\n1 \u6839\n\n\n\n\n\n\n\n\n\u5f00\u59cb\u4f7f\u7528\n\n\n\u73b0\u5728\u8ba9\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u8fd0\u884c\u4e00\u4e9b\u7b80\u5355\u4f8b\u5b50\u5427\u3002\n\n\n\u4f7f\u7528 Arduino\n\n\n\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Arduino \u5e73\u53f0\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u9879\u76ee\u3002\u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u4e3b\u63a7\u677f\uff0c\u8fd9\u4e9b\u6307\u4ee4\u548c\u6e90\u4ee3\u7801\u4e5f\u662f\u5f88\u6709\u7528\u7684\u3002\n\n\n\u51c6\u5907\u6750\u6599\n\n\n\n\nGrove - Barometer Sensor (BME280) \u00d7 1\n\n\nSeeeduino 4.2\n (\u4e0e Arduino \u5145\u5206\u517c\u5bb9) \u6216 Arduino UNO (\u5176\u4ed6\u578b\u53f7\u7684\u4e5f\u662f\u53ef\u4ee5\u7684) \u00d7 1\n\n\nGrove - Base Shield \u00d7 1 (\u5982\u679c\u60a8\u4f7f\u7528 Seeeduino \u5c31\u4e0d\u5fc5\u4f7f\u7528\u5b83\u4e86\uff0c\u56e0\u4e3a Seeeduino v4.2 \u81ea\u5e26\u4e24\u4e2a I2C \u63a5\u53e3)\n\n\nUSB \u7535\u7f06 (Type-A to Type-B, \u7528\u4e8e Arduino) \u00d7 1 \u6216\u8005 USB \u7535\u7f06 (Type-A to Micro Type-B, \u7528\u4e8e Seeeduino) \u00d7 1\n\n\nGrove cable\n \u00d7 1\n\n\n\n\n\u8fde\u63a5\u65b9\u6cd5\n\n\n\u628a\u6240\u6709\u90e8\u4ef6\u6309\u5982\u4e0b\u6240\u8ff0\u8fde\u63a5\uff1a\u4e0b\u9762\u7684\u7b2c\u4e00\u5f20\u56fe\u5c55\u793a\u4e86\u4f7f\u7528 Seeeduino \u65f6\u7684\u8fde\u63a5\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u5f20\u56fe\u5c55\u793a\u4e86\u4f7f\u7528 Arduino UNO \u65f6\u7684\u8fde\u63a5\u65b9\u6cd5\uff1a\n\n\n\n\n\n\nCoding Work\n\n\n\u60a8\u53ef\u4ee5\u5728 \n\u8fd9\u91cc\n\u627e\u5230\u66f4\u591a\u4f8b\u7a0b\u548c \n\u5f00\u53d1\u5e93\n\u3002\n\n\n\n\n\n\n\u4e00\u4e2a\u5178\u578b\u7684\u793a\u4f8b\u7a0b\u5e8f. \u60a8\u53ef\u4ee5\u4f7f\u7528 \nCodebender\n\u6765\u4e0a\u4f20\u60a8\u7684\u4ee3\u7801\u3002\n\n\n\n\n\n\n\n\n\n\n\u4e0b\u8f7d\u5e76\u4e0a\u4f20\u4ee3\u7801\u3002\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801\uff0c\u8bf7\u8bbf\u95ee\uff1a \nhttps://www.arduino.cc/en/Guide/Windows\n \u9002\u7528\u4e8e Windows \u6216 \nhttps://www.arduino.cc/en/Guide/MacOSX\n \u9002\u7528\u4e8e Mac\u3002\n\n\n\n\n\n\n\n\nTip\n\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Seeeduino \uff0c\u8bf7\u5728  \nTools\uff08\u5de5\u5177\uff09\n \u83dc\u5355\u4e0b\u70b9\u51fb \nBoards\uff08\u5f00\u53d1\u677f\uff09\n \u6765\u66f4\u6539\u4e3a\u60a8\u4f7f\u7528\u7684\u677f\u5b50\u7684\u578b\u53f7\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle \u6587\u4ef6]\nSchematic(Eagle) file\n\n\n[\u6570\u636e\u624b\u518c]\nBME280 Datasheet\n\n\n[\u793a\u4f8b\u4ee3\u7801]\nLibrary and example code\n on GitHub\n\n\n[[I\n2\nC \u6559\u7a0b]\nI\n2\nC how-to for Arduino", 
            "title": "Grove-Barometer Sensor BME280"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#_1", 
            "text": "\u83b7\u53d6\u7684\u6e29\u5ea6\uff0c\u5927\u6c14\u538b\u529b\u503c\uff0c\u6e7f\u5ea6\u548c\u8fd1\u4f3c\u9ad8\u5ea6\u6570\u636e\u66f4\u7cbe\u786e\u3002  \u517c\u5bb9 Grove \u5e76\u6613\u4e8e\u4f7f\u7528\u3002  \u6709\u4e30\u5bcc\u7684\u8d44\u6599\u6765\u5e2e\u52a9\u4f60\u5efa\u7acb\u9879\u76ee\u3002    Tip  \u66f4\u591a\u5173\u4e8e Grove \u7684\u7ec6\u8282\u8bf7\u53c2\u8003  Grove \u7cfb\u7edf", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#_2", 
            "text": "\u53c2\u6570  \u503c      \u8f93\u5165\u7535\u538b  3.3V or 5V    I/O \u53e3\u7535\u538b  3.3V or 5V    \u5de5\u4f5c\u7535\u6d41  0.4mA    \u5de5\u4f5c\u6e29\u5ea6  -40 - 85 \u2103    \u5927\u6c14\u538b\u529b\u4f20\u611f\u5668\u6d4b\u91cf\u8303\u56f4  300 - 1100 hPa (1 hPa= 100 Pa)\uff0c\u7cbe\u5ea6 \u00b11.0 hPa    \u6e29\u5ea6\u4f20\u611f\u5668\u6d4b\u91cf\u8303\u56f4  -40 - 85 \u2103\uff0c\u7cbe\u5ea6  \u00b11.0\u00b0C    \u6e7f\u5ea6\u4f20\u611f\u5668\u6d4b\u91cf\u8303\u56f4  0% - 100% \u76f8\u5bf9\u6e7f\u5ea6\uff0c\u7cbe\u5ea6 \u00b13%    \u6d4b\u91cf\u6a21\u5f0f  \u538b\u7535 \u6e29\u5ea6\uff0c\u81ea\u5b9a\u4e49 \u5468\u671f\u6027    \u82af\u7247  BME280 ( \u6570\u636e\u624b\u518c )    \u63a5\u53e3\u603b\u7ebf  SPI, I 2 C (\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a)    \u91cd\u91cf  3.2 g (\u5370\u5237\u7535\u8def\u677f), 9.3 g \u6574\u4e2a\u5305\u88c5\u6bcf\u4ef6    \u5c3a\u5bf8  40 (\u957f) \u00d7 20 (\u5bbd) mm      Note  \u6211\u4eec\u5c06\u5c3d\u5feb\u5c55\u793a/\u63cf\u8ff0\u5982\u4f55\u9009\u62e9\u63a5\u53e3\u603b\u7ebf\u3002  \u9ad8\u5ea6\u7531\u6e29\u5ea6\u548c\u5927\u6c14\u538b\u529b\u7684\u7ec4\u5408\u8ba1\u7b97\u5f97\u5230\u7684\u3002\u6ca1\u6709\u9ad8\u5ea6\u7684\u4e13\u95e8\u7ec4\u4ef6\u3002", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#_3", 
            "text": "Note  \u4ee5\u4e0a\u5217\u8868\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u7535\u6c60\u7684\u60c5\u51b5\u3002  \u5982\u679c\u6ca1\u6709\u9488\u5bf9\u7279\u5b9a\u5e73\u53f0\u63d0\u53ca\u7248\u672c\u53f7\uff0c\u5219\u8868\u793a\u6b64\u4ea7\u54c1\u652f\u6301\u8be5\u5e73\u53f0\u5185\u7684\u6240\u6709\u7248\u672c\u3002", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#_4", 
            "text": "SPI \u710a\u76d8 , \u4e00\u4e2a\u7535\u538b\u76d1\u63a7\u7535\u8def\u3002  Interface bus selection pads  \uff0c\u9009\u62e9 I 2 C \u603b\u7ebf, \u901a\u8fc7\u710a\u63a5\u8fde\u63a5\u4e24\u4e2a\u710a\u76d8\uff08\u9ed8\u8ba4\u8fde\u63a5\uff09; \u9009\u62e9 SPI \u603b\u7ebf, \u7528\u950b\u5229\u7684\u5200\u6216\u70d9\u94c1\u5207\u5272\u5f00\u4e24\u4e2a\u710a\u76d8\u3002   \u4ece\u677f\u5730\u5740\u9009\u62e9\u710a\u76d8 , \u9009\u62e9\u4ece\u677f\u5730\u5740\u4ee5\u907f\u514d\u5730\u5740\u51b2\u7a81\u3002   \u5982\u679c\u9009\u62e9\u4e86 I2C \u603b\u7ebf\uff0c\u5219\u4ece\u673a\u677f\u7684\u9ed8\u8ba4\u5730\u5740\u4e3a  0x76 \uff08\u8fde\u63a5\u53f3\u4fa7\u4e24\u4e2a\u710a\u76d8\uff09\u3002 \u5982\u679c\u8981\u4f7f\u7528\u5730\u5740  0x77 \uff0c\u4ec5\u901a\u8fc7\u710a\u63a5\u8fde\u63a5\u5de6\u4fa7\u4e24\u4e2a\uff08\u65ad\u5f00\u53f3\u4fa7\u4e24\u4e2a\uff09\u3002  Tip \n\u4f60\u53ef\u4ee5\u7528\u4e00\u628a\u950b\u5229\u7684\u5200\u5207\u65ad\u710a\u76d8\u95f4\u7684\u8fde\u63a5\u3002  \u5982\u679c\u9009\u62e9\u4e86 SPI \u603b\u7ebf\uff0c\u5219\u4ece\u673a\u677f\u7684\u9ed8\u8ba4\u5730\u5740\u4e3a  0x76 \uff08\u8fde\u63a5\u53f3\u4fa7\u4e24\u4e2a\u710a\u76d8\uff09\u3002\u5982\u679c\u8981\u4f7f\u7528\u5730\u5740  0x77 \uff0c\u8bf7\u65ad\u5f00\u6240\u6709\u4e09\u4e2a\u710a\u76d8\u3002      Note \n\u5de5\u4f5c\u65f6\uff0c\u8bf7\u52ff\u89e6\u6478\u6216\u6447\u6643\u8ba9\u672c\u4ea7\u54c1\u53d1\u751f\u632f\u52a8\u3002\u8fd9\u5c06\u9020\u6210\u5e72\u6270\uff0c\u5e76\u4f1a\u5f71\u54cd\u6536\u96c6\u7684\u6570\u636e\u7684\u51c6\u786e\u6027\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#_5", 
            "text": "\u90e8\u4ef6\u540d\u79f0  \u6570\u91cf      Grove - Barometer Sensor (BME280)  1 \u7247    Grove cable  1 \u6839", 
            "title": "\u5305\u88c5\u6e05\u5355 (\u4e3b\u8981\u90e8\u4ef6)"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#_6", 
            "text": "\u73b0\u5728\u8ba9\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u8fd0\u884c\u4e00\u4e9b\u7b80\u5355\u4f8b\u5b50\u5427\u3002", 
            "title": "\u5f00\u59cb\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#arduino", 
            "text": "\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Arduino \u5e73\u53f0\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u9879\u76ee\u3002\u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u4e3b\u63a7\u677f\uff0c\u8fd9\u4e9b\u6307\u4ee4\u548c\u6e90\u4ee3\u7801\u4e5f\u662f\u5f88\u6709\u7528\u7684\u3002", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#_7", 
            "text": "Grove - Barometer Sensor (BME280) \u00d7 1  Seeeduino 4.2  (\u4e0e Arduino \u5145\u5206\u517c\u5bb9) \u6216 Arduino UNO (\u5176\u4ed6\u578b\u53f7\u7684\u4e5f\u662f\u53ef\u4ee5\u7684) \u00d7 1  Grove - Base Shield \u00d7 1 (\u5982\u679c\u60a8\u4f7f\u7528 Seeeduino \u5c31\u4e0d\u5fc5\u4f7f\u7528\u5b83\u4e86\uff0c\u56e0\u4e3a Seeeduino v4.2 \u81ea\u5e26\u4e24\u4e2a I2C \u63a5\u53e3)  USB \u7535\u7f06 (Type-A to Type-B, \u7528\u4e8e Arduino) \u00d7 1 \u6216\u8005 USB \u7535\u7f06 (Type-A to Micro Type-B, \u7528\u4e8e Seeeduino) \u00d7 1  Grove cable  \u00d7 1", 
            "title": "\u51c6\u5907\u6750\u6599"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#_8", 
            "text": "\u628a\u6240\u6709\u90e8\u4ef6\u6309\u5982\u4e0b\u6240\u8ff0\u8fde\u63a5\uff1a\u4e0b\u9762\u7684\u7b2c\u4e00\u5f20\u56fe\u5c55\u793a\u4e86\u4f7f\u7528 Seeeduino \u65f6\u7684\u8fde\u63a5\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u5f20\u56fe\u5c55\u793a\u4e86\u4f7f\u7528 Arduino UNO \u65f6\u7684\u8fde\u63a5\u65b9\u6cd5\uff1a", 
            "title": "\u8fde\u63a5\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#coding-work", 
            "text": "\u60a8\u53ef\u4ee5\u5728  \u8fd9\u91cc \u627e\u5230\u66f4\u591a\u4f8b\u7a0b\u548c  \u5f00\u53d1\u5e93 \u3002    \u4e00\u4e2a\u5178\u578b\u7684\u793a\u4f8b\u7a0b\u5e8f. \u60a8\u53ef\u4ee5\u4f7f\u7528  Codebender \u6765\u4e0a\u4f20\u60a8\u7684\u4ee3\u7801\u3002      \u4e0b\u8f7d\u5e76\u4e0a\u4f20\u4ee3\u7801\u3002\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801\uff0c\u8bf7\u8bbf\u95ee\uff1a  https://www.arduino.cc/en/Guide/Windows  \u9002\u7528\u4e8e Windows \u6216  https://www.arduino.cc/en/Guide/MacOSX  \u9002\u7528\u4e8e Mac\u3002     Tip \n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Seeeduino \uff0c\u8bf7\u5728   Tools\uff08\u5de5\u5177\uff09  \u83dc\u5355\u4e0b\u70b9\u51fb  Boards\uff08\u5f00\u53d1\u677f\uff09  \u6765\u66f4\u6539\u4e3a\u60a8\u4f7f\u7528\u7684\u677f\u5b50\u7684\u578b\u53f7\u3002", 
            "title": "Coding Work"
        }, 
        {
            "location": "/Grove-Barometer_Sensor-BME280/#_9", 
            "text": "[Eagle \u6587\u4ef6] Schematic(Eagle) file  [\u6570\u636e\u624b\u518c] BME280 Datasheet  [\u793a\u4f8b\u4ee3\u7801] Library and example code  on GitHub  [[I 2 C \u6559\u7a0b] I 2 C how-to for Arduino", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Ear-clip_Heart_Rate_Sensor/", 
            "text": "\u8033\u5939\u5fc3\u7387\u5957\u4ef6\u5305\u542b\u4e00\u4e2a\u8033\u5939\u548c\u4e00\u4e2a\u63a5\u6536\u5668\u6a21\u5757\u3002 \u5fc3\u7387\u6d4b\u91cf\u5957\u4ef6\u53ef\u7528\u4e8e\u76d1\u6d4b\u60a3\u8005\u548c\u8fd0\u52a8\u5458\u7684\u5fc3\u7387\u3002 \u7ed3\u679c\u53ef\u4ee5\u901a\u8fc7\u4e32\u884c\u7aef\u53e3\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff0c\u53ef\u4ee5\u4fdd\u5b58\u5206\u6790\u3002 \u6574\u4e2a\u7cfb\u7edf\u5177\u6709\u9ad8\u7075\u654f\u5ea6\uff0c\u4f4e\u529f\u8017\u548c\u4fbf\u643a\u6027\u7684\u4f18\u70b9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u4f4e\u529f\u8017\n\n\n\u65b9\u4fbf\u4f7f\u7528\n\n\n\u9ad8\u7075\u654f\u5ea6\n\n\n\u5b8c\u5168\u7b26\u5408RoHS\u6807\u51c6\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\n\n\n\n\n\u6807\u51c6\n\n\n\n\n\u6700\u5927\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n3.0\n\n\n\n\n5.0\n\n\n\n\n5.25\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n\n\n6.5\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u8033\u5939\u957f\u5ea6\n\n\n\n\n120\n\n\n\n\ncm\n\n\n\n\n\n\n\n\n\u6d4b\u91cf\u8303\u56f4\n\n\n\n\n\u226530/min\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u5fc3\u7387\u76d1\u6d4b\u5668\u3002\n\n\n\n\nPlatform Support\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4f7f\u7528\u8033\u5939\u5f0f\u5fc3\u7387\u4f20\u611f\u5668\u6765\u6d4b\u91cf\u5fc3\u7387\u7684\u7b80\u5355\u5e94\u7528\u3002\n\n\n\n\n\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 \nGrove-Base shield\n \u4e0a\u7684\u6570\u5b57\u7aef\u53e3 \nD2\n \u3002 \u5e76\u5c06Grove-LED\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3 \nD4\n\u3002\n\n\n\u5c06Grove-Base shield\u63d2\u5165Arduino / Seeeduino\u3002\n\n\n\n\n\n\n\n\n\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684Arduino\u7f16\u8f91\u9875\u9762\u4e0a\u3002\n\n\n\n\n    // Function: This program can be used to measure heart rate, the lowest pulse in the program be set to 30.\n    //         Use an external interrupt to measure it.\n    // Hardware: Grove - Ear-clip Heart Rate Sensor, Grove - Base Shield, Grove - LED\n    // Arduino IDE: Arduino-1.0\n    // Author: FrankieChu       \n    // Date: Jan 22, 2013\n    // Version: v1.0\n    // by www.seeedstudio.com\n    #define LED 4//indicator, Grove - LED is connected with D4 of Arduino\n    boolean led_state = LOW;//state of LED, each time an external interrupt\n                                    //will change the state of LED\n    unsigned char counter;\n    unsigned long temp[21];\n    unsigned long sub;\n    bool data_effect=true;\n    unsigned int heart_rate;//the measurement result of heart rate\n\n    const int max_heartpluse_duty = 2000;//you can change it follow your system\ns request.\n                            //2000 meams 2 seconds. System return error\n                            //if the duty overtrip 2 second.\n    void setup()\n    {\n        pinMode(LED, OUTPUT);\n        Serial.begin(9600);\n        Serial.println(\nPlease ready your chest belt.\n);\n        delay(5000);\n        arrayInit();\n        Serial.println(\nHeart rate test begin.\n);\n        attachInterrupt(0, interrupt, RISING);//set interrupt 0,digital port 2\n    }\n    void loop()\n    {\n        digitalWrite(LED, led_state);//Update the state of the indicator\n    }\n    /*Function: calculate the heart rate*/\n    void sum()\n    {\n     if(data_effect)\n        {\n          heart_rate=1200000/(temp[20]-temp[0]);//60*20*1000/20_total_time\n          Serial.print(\nHeart_rate_is:\\t\n);\n          Serial.println(heart_rate);\n        }\n       data_effect=1;//sign bit\n    }\n    /*Function: Interrupt service routine.Get the sigal from the external interrupt*/\n    void interrupt()\n    {\n        temp[counter]=millis();\n        Serial.println(counter,DEC);\n        Serial.println(temp[counter]);\n        switch(counter)\n        {\n            case 0:\n                sub=temp[counter]-temp[20];\n                Serial.println(sub);\n                break;\n            default:\n                sub=temp[counter]-temp[counter-1];\n                Serial.println(sub);\n                break;\n        }\n        if(sub\nmax_heartpluse_duty)//set 2 seconds as max heart pluse duty\n        {\n            data_effect=0;//sign bit\n            counter=0;\n            Serial.println(\nHeart rate measure error,test will restart!\n );\n            arrayInit();\n        }\n        if (counter==20\ndata_effect)\n        {\n            counter=0;\n            sum();\n        }\n        else if(counter!=20\ndata_effect)\n        counter++;\n        else\n        {\n            counter=0;\n            data_effect=1;\n        }\n\n    }\n    /*Function: Initialization for the array(temp)*/\n    void arrayInit()\n    {\n        for(unsigned char i=0;i \n 20;i ++)\n        {\n            temp[i]=0;\n        }\n        temp[20]=millis();\n    }\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\n\n\n\u786e\u4fdd\u4f20\u611f\u5668\u63a5\u89e6\u5230\u60a8\u7684\u8033\u6735\u76ae\u80a4\u3002 \u5f53\u6211\u4eec\u6d4b\u91cf\u5fc3\u7387\u65f6\uff0c\u8fd9\u662f\u8f93\u51fa\u7684\u4fe1\u53f7\uff1a\n\n\n\n\n\n\n\n\n\u5728\u7b2c\u4e00\u4e2a\u56fe\u4e2d\uff0c\u68c0\u6d4b\u5230\u7684\u662f\u5fc3\u8df3\u7684\u6ce2\u5f62\u56fe\uff0c\u5f53\u8df3\u52a8\u65f6\u51fa\u73b0\u9ad8\u8109\u51b2\u3002\n\n\n\n\nNote\n\n\u5982\u679c\u4e32\u884c\u76d1\u89c6\u5668\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u8bf7\u66f4\u6539\u4f20\u611f\u5668\u7684\u4f4d\u7f6e\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - Ear-clip Heart Rate Sensor Demo code", 
            "title": "Grove-Ear clip Heart Rate Sensor"
        }, 
        {
            "location": "/Grove-Ear-clip_Heart_Rate_Sensor/#_1", 
            "text": "\u4f4e\u529f\u8017  \u65b9\u4fbf\u4f7f\u7528  \u9ad8\u7075\u654f\u5ea6  \u5b8c\u5168\u7b26\u5408RoHS\u6807\u51c6    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Ear-clip_Heart_Rate_Sensor/#_2", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f  \n\u6807\u51c6  \n\u6700\u5927  \n\u5355\u4f4d    \n\u5de5\u4f5c\u7535\u538b  \n3.0  \n5.0  \n5.25  \nV    \n\u5de5\u4f5c\u7535\u6d41  \n6.5  \nmA    \n\u8033\u5939\u957f\u5ea6  \n120  \ncm    \n\u6d4b\u91cf\u8303\u56f4  \n\u226530/min  \n-", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Ear-clip_Heart_Rate_Sensor/#_3", 
            "text": "\u5fc3\u7387\u76d1\u6d4b\u5668\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Ear-clip_Heart_Rate_Sensor/#platform-support", 
            "text": "", 
            "title": "Platform Support"
        }, 
        {
            "location": "/Grove-Ear-clip_Heart_Rate_Sensor/#_4", 
            "text": "\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4f7f\u7528\u8033\u5939\u5f0f\u5fc3\u7387\u4f20\u611f\u5668\u6765\u6d4b\u91cf\u5fc3\u7387\u7684\u7b80\u5355\u5e94\u7528\u3002   \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230  Grove-Base shield  \u4e0a\u7684\u6570\u5b57\u7aef\u53e3  D2  \u3002 \u5e76\u5c06Grove-LED\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3  D4 \u3002  \u5c06Grove-Base shield\u63d2\u5165Arduino / Seeeduino\u3002     \u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684Arduino\u7f16\u8f91\u9875\u9762\u4e0a\u3002       // Function: This program can be used to measure heart rate, the lowest pulse in the program be set to 30.\n    //         Use an external interrupt to measure it.\n    // Hardware: Grove - Ear-clip Heart Rate Sensor, Grove - Base Shield, Grove - LED\n    // Arduino IDE: Arduino-1.0\n    // Author: FrankieChu       \n    // Date: Jan 22, 2013\n    // Version: v1.0\n    // by www.seeedstudio.com\n    #define LED 4//indicator, Grove - LED is connected with D4 of Arduino\n    boolean led_state = LOW;//state of LED, each time an external interrupt\n                                    //will change the state of LED\n    unsigned char counter;\n    unsigned long temp[21];\n    unsigned long sub;\n    bool data_effect=true;\n    unsigned int heart_rate;//the measurement result of heart rate\n\n    const int max_heartpluse_duty = 2000;//you can change it follow your system s request.\n                            //2000 meams 2 seconds. System return error\n                            //if the duty overtrip 2 second.\n    void setup()\n    {\n        pinMode(LED, OUTPUT);\n        Serial.begin(9600);\n        Serial.println( Please ready your chest belt. );\n        delay(5000);\n        arrayInit();\n        Serial.println( Heart rate test begin. );\n        attachInterrupt(0, interrupt, RISING);//set interrupt 0,digital port 2\n    }\n    void loop()\n    {\n        digitalWrite(LED, led_state);//Update the state of the indicator\n    }\n    /*Function: calculate the heart rate*/\n    void sum()\n    {\n     if(data_effect)\n        {\n          heart_rate=1200000/(temp[20]-temp[0]);//60*20*1000/20_total_time\n          Serial.print( Heart_rate_is:\\t );\n          Serial.println(heart_rate);\n        }\n       data_effect=1;//sign bit\n    }\n    /*Function: Interrupt service routine.Get the sigal from the external interrupt*/\n    void interrupt()\n    {\n        temp[counter]=millis();\n        Serial.println(counter,DEC);\n        Serial.println(temp[counter]);\n        switch(counter)\n        {\n            case 0:\n                sub=temp[counter]-temp[20];\n                Serial.println(sub);\n                break;\n            default:\n                sub=temp[counter]-temp[counter-1];\n                Serial.println(sub);\n                break;\n        }\n        if(sub max_heartpluse_duty)//set 2 seconds as max heart pluse duty\n        {\n            data_effect=0;//sign bit\n            counter=0;\n            Serial.println( Heart rate measure error,test will restart!  );\n            arrayInit();\n        }\n        if (counter==20 data_effect)\n        {\n            counter=0;\n            sum();\n        }\n        else if(counter!=20 data_effect)\n        counter++;\n        else\n        {\n            counter=0;\n            data_effect=1;\n        }\n\n    }\n    /*Function: Initialization for the array(temp)*/\n    void arrayInit()\n    {\n        for(unsigned char i=0;i   20;i ++)\n        {\n            temp[i]=0;\n        }\n        temp[20]=millis();\n    }   \u4e0a\u4f20\u4ee3\u7801  \u786e\u4fdd\u4f20\u611f\u5668\u63a5\u89e6\u5230\u60a8\u7684\u8033\u6735\u76ae\u80a4\u3002 \u5f53\u6211\u4eec\u6d4b\u91cf\u5fc3\u7387\u65f6\uff0c\u8fd9\u662f\u8f93\u51fa\u7684\u4fe1\u53f7\uff1a     \u5728\u7b2c\u4e00\u4e2a\u56fe\u4e2d\uff0c\u68c0\u6d4b\u5230\u7684\u662f\u5fc3\u8df3\u7684\u6ce2\u5f62\u56fe\uff0c\u5f53\u8df3\u52a8\u65f6\u51fa\u73b0\u9ad8\u8109\u51b2\u3002   Note \n\u5982\u679c\u4e32\u884c\u76d1\u89c6\u5668\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u8bf7\u66f4\u6539\u4f20\u611f\u5668\u7684\u4f4d\u7f6e\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Ear-clip_Heart_Rate_Sensor/#_5", 
            "text": "Grove - Ear-clip Heart Rate Sensor Demo code", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/", 
            "text": "Grove - Finger-clip Heart Rate Sensor \u57fa\u4e8e PAH8001EI-2G \u82af\u7247\uff0c\u5b83\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u3001\u4f4e\u529f\u8017\u7684 CMOS \u6280\u672f\u5149\u5b66\u4f20\u611f\u5668, \u5b83\u5e26\u6709\u7eff\u8272 LED\uff0c\u5e76\u96c6\u6210 DSP \u6765\u5b9e\u73b0\u5fc3\u7387\u68c0\u6d4b ( HRD ) \u3002\u8be5\u6a21\u5757\u57fa\u4e8e\u5149\u5b66\u6280\u672f\u6765\u6d4b\u91cf\u8840\u7ba1\u4e2d\u4eba\u4f53\u8840\u6db2\u8fd0\u52a8\u53d8\u5316\u3002\u4f4e\u529f\u8017\u548c\u7075\u6d3b\u7684\u7701\u7535\u6a21\u5f0f\u4f7f\u5176\u9002\u7528\u4e8e\u53ef\u7a7f\u6234\u8bbe\u5907\u3002\u56e0\u4e3a\u5fc3\u7387\u4f20\u611f\u5668\u82af\u7247\u9700\u8981\u9ad8\u901f\u5904\u7406\u901f\u5ea6\u7684\u5fc3\u7387\u6570\u636e\u7b97\u6cd5\uff0c\u8fd9\u4e2a\u6a21\u5757\u96c6\u6210\u4e86 STM32\uff0c\u4fdd\u7559 SWD \u63a5\u53e3\uff0c\u5141\u8bb8\u7528\u6237\u91cd\u65b0\u7f16\u7a0b STM32\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u65e0\u89e6\u6478\u79fb\u52a8\u65f6\u7684\u8d85\u4f4e\u529f\u8017\u7701\u7535\u6a21\u5f0f\n\n\n\n\n\n\n\u7075\u6d3b\u7684\u7761\u7720\u7387\u63a7\u5236\n\n\n\n\n\n\n\u96c6\u6210 STM32F103\n\n\n\n\n\n\nI2C \u63a5\u53e3\n\n\n\n\n\n\n\u5fc3\u7387\u4f20\u611f\u5668\u533a\u57df\u53ea\u6709 3.0 x 4.7mm\n\n\n\n\n\n\nSWD \u63a5\u53e3\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6 : -20 ~ +60\u2103\n\n\n\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n \n\n\n\n\n\n\n1: Grove \u63a5\u53e3\n\n\n\n\n\n\n2: SWD \u63a5\u53e3\uff0c\u7528\u4e8e\u7f16\u7a0b\u5230 STM32\n\n\n\n\n\n\n3: \u5fc3\u7387\u4f20\u611f\u5668\n\n\n\n\n\n\nUsage\n\n\n\n\n\u6211\u4eec\u5c06\u5728\u6b64\u63d0\u4f9b\u4e00\u4e2a\u793a\u4f8b\u6765\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u3002\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230\u5e26\u6709 Grove \u7ebf\u7f06\u7684 Seeeduino \u7684 I2C \u7aef\u53e3\u3002\n\n\n\n\n\u8f6f\u4ef6\u90e8\u5206\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino \u7684\u65b0\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e0a\u4f20\u4ee3\u7801\uff0c\u7136\u540e\u53ef\u4ee5\u4ece\u4e32\u884c\u76d1\u89c6\u5668\u83b7\u53d6\u5fc3\u7387\u3002\n\u624b\u6307\u89e6\u6478\u4f20\u611f\u5668\u540e\u53ef\u80fd\u9700\u8981\u5927\u7ea6\u4e00\u5206\u949f\u624d\u80fd\u83b7\u5f97\u6709\u6548\u7684\u5fc3\u7387\u3002\n\n\n#include \nWire.h\n\nvoid setup() {\n    Serial.begin(9600);\n    Serial.println(\nheart rate sensor:\n);\n    Wire.begin();\n}\nvoid loop() {\n    Wire.requestFrom(0xA0 \n 1, 1);    // request 1 bytes from slave device\n    while(Wire.available()) {          // slave may send less than requested\n        unsigned char c = Wire.read();   // receive heart rate value (a byte)\n        Serial.println(c, DEC);         // print heart rate value\n    }\n    delay(500);\n}\n\n\n\n\n\u4e0e \nMbed\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u4ece I2C \u8bbe\u5907\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282 0xA0 ( 8 \u4f4d\u5730\u5740 )\uff0c\u8fd9\u5c31\u662f\u5fc3\u7387\u3002\n\n#include \nmbed.h\n\n\nI2C i2c(I2C_SDA, I2C_SCL);\nconst int addr = 0xA0;\n\nint main() {\n    char heart_rate;\n    while (1) {\n        i2c.read(addr, \nheart_rate, 1);\n        printf(\nheart rate: = %d\\r\\n\n, heart_rate);\n    }\n}\n\n\n\n\u66f4\u65b0\u56fa\u4ef6\n\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5bfc\u7a0b\u5e8f\u6765\u66f4\u65b0\u5fc3\u7387\u4f20\u611f\u5668\u7684\u56fa\u4ef6\u3002\n\n\n\n\n\u5f15\u5bfc\u7a0b\u5e8f\u4f4d\u4e8e 0x08000000 - 0x08002000\n\n\n\u5e94\u7528\u7a0b\u5e8f\u4f4d\u4e8e 0x08002000 - 0x08020000\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\n\n\u9700\u8981 \nUSB to serial adapter\n\n\n\u5f53\u5347\u7ea7\u56fa\u4ef6\u65f6\uff0cGrove \u63a5\u53e3\u4ee5 UART \u6a21\u5f0f\u8fd0\u884c\u3002\n\n\n\n\n\n\n\n\n\n\nGrove-Finger-clip_Heart_Rate_Sensor\n\n\nUSB to Serial (TTL) Module\nAdapter\n\n\n\n\n\n\n\n\n\n\nVCC\n\n\nVCC\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nSDA\n\n\nTX\n\n\n\n\n\n\nSCL\n\n\nRX\n\n\n\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u70b9\u51fb\u6b64\u5904\u4e0b\u8f7d \nTera Term\n\n\n\u8bbe\u7f6e UART \u6ce2\u7279\u7387\u4e3a 115200\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u6b64\u5904\u4e0b\u8f7d \n\u56fa\u4ef6\n\n\n\n\n\n\n\u9009\u62e9 Grove - Finger-clip Heart Rate Sensor.bin\n\n\n\n\n\n\n\n\n\n\n\u5c06\u56fa\u4ef6\u4e0b\u8f7d\u5230 Grove-Finger-clip_Heart_Rate_Sensor\n\n\n\n\n\n\n\n\n\u4e0b\u8f7d\u6210\u529f\n\n\n\n\n\n\n\n\nNote\n\n\nGrove - Finger-clip Heart Rate Sensor \u63d0\u4f9b\u5fc3\u7387\u6d4b\u91cf\u3002\u4f46\u662f\u5b83\u4e0d\u662f\u533b\u7597\u5668\u68b0\u3002\u8981\u5728\u624b\u8155\uff0c\u624b\u6307\u6216\u624b\u638c\u4e0a\u4f7f\u7528\u5fc3\u7387\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u60a8\u5fc5\u987b :\n\n\n\n\n\n\n\u4f7f\u4f20\u611f\u5668\u7d27\u5bc6\u5730\u4e0e\u60a8\u7684\u76ae\u80a4\u63a5\u89e6\uff0c\u5e76\u5728\u6d4b\u91cf\u65f6\u4fdd\u6301\u7a33\u5b9a(\u65e0\u8fd0\u52a8)\u4ee5\u83b7\u5f97\u51c6\u786e\u7684\u5fc3\u7387\u3002\u5982\u679c\u4f20\u611f\u5668\u5728\u6d4b\u91cf\u5fc3\u7387\u65f6\uff0c\u4e0d\u80fd\u5f88\u597d\u5730\u63a5\u89e6\u76ae\u80a4\u6216\u8fdb\u884c\u6781\u7aef\u8fd0\u52a8\uff0c\u90a3\u53ef\u80fd\u5bfc\u81f4\u4e0d\u80fd\u6b63\u786e\u6d4b\u91cf\u3002\n\n\n\u4f20\u611f\u5668\u7684\u6027\u80fd\u4f1a\u5728\u8840\u6d41\u91cf\u66f4\u5927\u65f6\u5f97\u5230\u4f18\u5316\u3002 \u5728\u5bd2\u51b7\u7684\u65e5\u5b50\u6216\u7528\u6237\u7684\u5faa\u73af\u4e0d\u7545(\u4f8b\u5982\u624b\u811a\u51b7)\uff0c\u4f20\u611f\u5668\u6027\u80fd\uff08\u5fc3\u7387\u51c6\u786e\u5ea6\uff09\u53ef\u80fd\u4f1a\u56e0\u6d4b\u91cf\u4f4d\u7f6e\u7684\u8840\u6d41\u91cf\u8f83\u4f4e\u800c\u53d7\u5230\u5f71\u54cd\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - Finger-clip Heart Rate Sensor eagle file\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nGrove - Finger-clip Heart Rate Sensor bin file", 
            "title": "Grove-Finger clip Heart Rate Sensor"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#_1", 
            "text": "\u65e0\u89e6\u6478\u79fb\u52a8\u65f6\u7684\u8d85\u4f4e\u529f\u8017\u7701\u7535\u6a21\u5f0f    \u7075\u6d3b\u7684\u7761\u7720\u7387\u63a7\u5236    \u96c6\u6210 STM32F103    I2C \u63a5\u53e3    \u5fc3\u7387\u4f20\u611f\u5668\u533a\u57df\u53ea\u6709 3.0 x 4.7mm    SWD \u63a5\u53e3    \u5de5\u4f5c\u6e29\u5ea6 : -20 ~ +60\u2103", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#_2", 
            "text": "1: Grove \u63a5\u53e3    2: SWD \u63a5\u53e3\uff0c\u7528\u4e8e\u7f16\u7a0b\u5230 STM32    3: \u5fc3\u7387\u4f20\u611f\u5668", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#usage", 
            "text": "\u6211\u4eec\u5c06\u5728\u6b64\u63d0\u4f9b\u4e00\u4e2a\u793a\u4f8b\u6765\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u3002", 
            "title": "Usage"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#_3", 
            "text": "\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230\u5e26\u6709 Grove \u7ebf\u7f06\u7684 Seeeduino \u7684 I2C \u7aef\u53e3\u3002", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#_4", 
            "text": "", 
            "title": "\u8f6f\u4ef6\u90e8\u5206"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#arduino", 
            "text": "\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino \u7684\u65b0\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e0a\u4f20\u4ee3\u7801\uff0c\u7136\u540e\u53ef\u4ee5\u4ece\u4e32\u884c\u76d1\u89c6\u5668\u83b7\u53d6\u5fc3\u7387\u3002\n\u624b\u6307\u89e6\u6478\u4f20\u611f\u5668\u540e\u53ef\u80fd\u9700\u8981\u5927\u7ea6\u4e00\u5206\u949f\u624d\u80fd\u83b7\u5f97\u6709\u6548\u7684\u5fc3\u7387\u3002  #include  Wire.h \nvoid setup() {\n    Serial.begin(9600);\n    Serial.println( heart rate sensor: );\n    Wire.begin();\n}\nvoid loop() {\n    Wire.requestFrom(0xA0   1, 1);    // request 1 bytes from slave device\n    while(Wire.available()) {          // slave may send less than requested\n        unsigned char c = Wire.read();   // receive heart rate value (a byte)\n        Serial.println(c, DEC);         // print heart rate value\n    }\n    delay(500);\n}", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#mbed", 
            "text": "\u4ece I2C \u8bbe\u5907\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282 0xA0 ( 8 \u4f4d\u5730\u5740 )\uff0c\u8fd9\u5c31\u662f\u5fc3\u7387\u3002 #include  mbed.h \n\nI2C i2c(I2C_SDA, I2C_SCL);\nconst int addr = 0xA0;\n\nint main() {\n    char heart_rate;\n    while (1) {\n        i2c.read(addr,  heart_rate, 1);\n        printf( heart rate: = %d\\r\\n , heart_rate);\n    }\n}", 
            "title": "\u4e0e Mbed \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#_5", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5bfc\u7a0b\u5e8f\u6765\u66f4\u65b0\u5fc3\u7387\u4f20\u611f\u5668\u7684\u56fa\u4ef6\u3002   \u5f15\u5bfc\u7a0b\u5e8f\u4f4d\u4e8e 0x08000000 - 0x08002000  \u5e94\u7528\u7a0b\u5e8f\u4f4d\u4e8e 0x08002000 - 0x08020000", 
            "title": "\u66f4\u65b0\u56fa\u4ef6"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#_6", 
            "text": "\u9700\u8981  USB to serial adapter  \u5f53\u5347\u7ea7\u56fa\u4ef6\u65f6\uff0cGrove \u63a5\u53e3\u4ee5 UART \u6a21\u5f0f\u8fd0\u884c\u3002      Grove-Finger-clip_Heart_Rate_Sensor  USB to Serial (TTL) Module Adapter      VCC  VCC    GND  GND    SDA  TX    SCL  RX", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#_7", 
            "text": "\u70b9\u51fb\u6b64\u5904\u4e0b\u8f7d  Tera Term  \u8bbe\u7f6e UART \u6ce2\u7279\u7387\u4e3a 115200      \u70b9\u51fb\u6b64\u5904\u4e0b\u8f7d  \u56fa\u4ef6    \u9009\u62e9 Grove - Finger-clip Heart Rate Sensor.bin      \u5c06\u56fa\u4ef6\u4e0b\u8f7d\u5230 Grove-Finger-clip_Heart_Rate_Sensor     \u4e0b\u8f7d\u6210\u529f     Note  Grove - Finger-clip Heart Rate Sensor \u63d0\u4f9b\u5fc3\u7387\u6d4b\u91cf\u3002\u4f46\u662f\u5b83\u4e0d\u662f\u533b\u7597\u5668\u68b0\u3002\u8981\u5728\u624b\u8155\uff0c\u624b\u6307\u6216\u624b\u638c\u4e0a\u4f7f\u7528\u5fc3\u7387\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u60a8\u5fc5\u987b :    \u4f7f\u4f20\u611f\u5668\u7d27\u5bc6\u5730\u4e0e\u60a8\u7684\u76ae\u80a4\u63a5\u89e6\uff0c\u5e76\u5728\u6d4b\u91cf\u65f6\u4fdd\u6301\u7a33\u5b9a(\u65e0\u8fd0\u52a8)\u4ee5\u83b7\u5f97\u51c6\u786e\u7684\u5fc3\u7387\u3002\u5982\u679c\u4f20\u611f\u5668\u5728\u6d4b\u91cf\u5fc3\u7387\u65f6\uff0c\u4e0d\u80fd\u5f88\u597d\u5730\u63a5\u89e6\u76ae\u80a4\u6216\u8fdb\u884c\u6781\u7aef\u8fd0\u52a8\uff0c\u90a3\u53ef\u80fd\u5bfc\u81f4\u4e0d\u80fd\u6b63\u786e\u6d4b\u91cf\u3002  \u4f20\u611f\u5668\u7684\u6027\u80fd\u4f1a\u5728\u8840\u6d41\u91cf\u66f4\u5927\u65f6\u5f97\u5230\u4f18\u5316\u3002 \u5728\u5bd2\u51b7\u7684\u65e5\u5b50\u6216\u7528\u6237\u7684\u5faa\u73af\u4e0d\u7545(\u4f8b\u5982\u624b\u811a\u51b7)\uff0c\u4f20\u611f\u5668\u6027\u80fd\uff08\u5fc3\u7387\u51c6\u786e\u5ea6\uff09\u53ef\u80fd\u4f1a\u56e0\u6d4b\u91cf\u4f4d\u7f6e\u7684\u8840\u6d41\u91cf\u8f83\u4f4e\u800c\u53d7\u5230\u5f71\u54cd\u3002", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor/#_8", 
            "text": "[Eagle\u6587\u4ef6]   Grove - Finger-clip Heart Rate Sensor eagle file    [\u5176\u4ed6\u8d44\u6e90]   Grove - Finger-clip Heart Rate Sensor bin file", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/", 
            "text": "Grove - Finger-clip Heart Rate Sensor with shell \u57fa\u4e8e PAH8001EI-2G \u7814\u53d1\u7684\u3002\u5b83\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u3001\u4f4e\u529f\u8017\u7684 CMOS \u5de5\u827a\u5149\u5b66\u4f20\u611f\u5668, \u5b83\u5e26\u6709\u7eff\u8272 LED\uff0c\u548c\u96c6\u6210 DSP \u6765\u5b9e\u73b0\u5fc3\u7387\u68c0\u6d4b ( HRD ) \u3002\u8be5\u6a21\u5757\u57fa\u4e8e\u5149\u5b66\u6280\u672f\u6765\u6d4b\u91cf\u8840\u7ba1\u4e2d\u4eba\u4f53\u8840\u6db2\u8fd0\u52a8\u53d8\u5316\u3002\u4f4e\u529f\u8017\u548c\u7075\u6d3b\u7684\u7701\u7535\u6a21\u5f0f\u4f7f\u5176\u9002\u7528\u4e8e\u53ef\u7a7f\u6234\u8bbe\u5907\u3002\u56e0\u4e3a\u5fc3\u7387\u4f20\u611f\u5668\u82af\u7247\u9700\u8981\u9ad8\u901f\u5904\u7406\u901f\u5ea6\u7684\u5fc3\u7387\u6570\u636e\u7b97\u6cd5\uff0c\u8fd9\u4e2a\u6a21\u5757\u96c6\u6210\u4e86 STM32\uff0c\u4fdd\u7559 SWD \u63a5\u53e3\uff0c\u5141\u8bb8\u7528\u6237\u91cd\u65b0\u7f16\u7a0b STM32\u3002\u8be5\u6a21\u5757\u8fd8\u914d\u5907\u4e00\u4e2a\u5916\u58f3\u548c\u7ef7\u5e26\uff0c\u53ef\u4ee5\u4f7f\u7528\u6237\u8f7b\u677e\u5730\u5c06\u6a21\u5757\u56fa\u5b9a\u5728\u624b\u6307\uff0c\u624b\u8155\u6216\u624b\u81c2\u4e0a\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u65e0\u89e6\u6478\u548c\u79fb\u52a8\u65f6\u7684\u8d85\u4f4e\u529f\u8017\u7701\u7535\u6a21\u5f0f\n\n\n\n\n\n\n\u7075\u6d3b\u7684\u7761\u7720\u7387\u63a7\u5236\n\n\n\n\n\n\n\u96c6\u6210 STM32F103\n\n\n\n\n\n\nI2C \u63a5\u53e3\n\n\n\n\n\n\n\u5fc3\u7387\u4f20\u611f\u5668\u533a\u57df\u53ea\u6709 3.0 x 4.7mm\n\n\n\n\n\n\nSWD \u63a5\u53e3\u4fdd\u7559\n\n\n\n\n\n\n\u914d\u6709\u7ef7\u5e26\u548c\u5916\u58f3\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6 : -20 to +60\u2103\n\n\n\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n \n\n\n\n\n\n\n1: Grove \u63a5\u53e3\n\n\n\n\n\n\n2: \u4fdd\u7559 SWD \u63a5\u53e3\uff0c\u7528\u4e8e\u7f16\u7a0b\u5230 STM32\n\n\n\n\n\n\n3: \u5fc3\u7387\u4f20\u611f\u5668\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5728\u6b64\u63d0\u4f9b\u4e00\u4e2a\u793a\u4f8b\u6765\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u3002\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230\u5e26\u6709 Grove \u7ebf\u7f06\u7684 Seeeduino \u7684 I2C \u7aef\u53e3\u3002\n\n\n\n\n\u4f7f\u7528\u7ef7\u5e26\u5c06\u6b64\u6a21\u5757\u56fa\u5b9a\u5728\u624b\u6307\u6216\u624b\u8155\u4e0a\u65f6\uff0c\u8bf7\u4fdd\u6301\u4f20\u611f\u5668\u533a\u57df\u4e0e\u76ae\u80a4\u826f\u597d\u5730\u63a5\u89e6\u5e76\u4e0d\u8981\u6709\u52a8\u4f5c\uff0c\u50cf\u56fe\u7247\u90a3\u6837\u3002\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\u90e8\u5206\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino \u7684\u65b0\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e0a\u4f20\u4ee3\u7801\uff0c\u7136\u540e\u53ef\u4ee5\u4ece\u4e32\u884c\u76d1\u89c6\u5668\u83b7\u53d6\u5fc3\u7387\u3002\n\u624b\u6307\u89e6\u6478\u4f20\u611f\u5668\u540e\u53ef\u80fd\u9700\u8981\u5927\u7ea6\u4e00\u5206\u949f\u624d\u80fd\u83b7\u5f97\u6709\u6548\u7684\u5fc3\u7387\u3002\n\n\n#include \nWire.h\n\nvoid setup() {\n    Serial.begin(9600);\n    Serial.println(\nheart rate sensor:\n);\n    Wire.begin();\n}\nvoid loop() {\n    Wire.requestFrom(0xA0 \n 1, 1);    // request 1 bytes from slave device\n    while(Wire.available()) {          // slave may send less than requested\n        unsigned char c = Wire.read();   // receive heart rate value (a byte)\n        Serial.println(c, DEC);         // print heart rate value\n    }\n    delay(500);\n}\n\n\n\n\n\u4e0e \nMbed\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u4ece I2C \u8bbe\u5907\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282 0xA0 ( 8 \u4f4d\u5730\u5740 )\uff0c\u8fd9\u5c31\u662f\u5fc3\u7387\u3002\n\n\n#include \nmbed.h\n\n\nI2C i2c(I2C_SDA, I2C_SCL);\nconst int addr = 0xA0;\n\nint main() {\n    char heart_rate;\n    while (1) {\n        i2c.read(addr, \nheart_rate, 1);\n        printf(\nheart rate: = %d\\r\\n\n, heart_rate);\n    }\n}\n\n\n\n\n\u66f4\u65b0\u56fa\u4ef6\n\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5bfc\u7a0b\u5e8f\u6765\u5347\u7ea7\u5fc3\u7387\u4f20\u611f\u5668\u7684\u56fa\u4ef6\u3002\n\n\n\n\n\n\n\u5f15\u5bfc\u7a0b\u5e8f\u4f4d\u4e8e 0x08000000 - 0x08002000\n\n\n\n\n\n\n\u5e94\u7528\u7a0b\u5e8f\u4f4d\u4e8e 0x08002000 - 0x08020000\n\n\n\n\n\n\n\u8981\u542f\u52a8\u5f15\u5bfc\u7a0b\u5e8f\uff0c\u9700\u8981\u5c06 \nSWDIO\n \u8fde\u63a5\u5230 \nGND\n \u5e76\u91cd\u7f6e\u8fd0\u884c\n\n\n\n\n\n\n\n\n\n\n\u63a5\u53e3 : UART ( Grove \u63a5\u53e3\u652f\u6301 I2C \u548c UART )\uff0c\u5347\u7ea7\u56fa\u4ef6\u65f6\uff0cGrove \u63a5\u53e3\u4ee5 UART \u6a21\u5f0f\u8fd0\u884c\u3002\nVCC  -  VCC\n\n\n\n\nGND  -  GND\n\n\nSDA  -  TX\n\n\nSCL  -  RX\n\n\n\n\n\n\nUART \u6ce2\u7279\u7387 : 115200\n\n\n\n\n\n\n\u534f\u8bae : ymodem (\u63a8\u8350\u5de5\u5177\u662f Tera Term)\n\n\n\n\n\n\n\n\nNote\n\n\nThe Grove - Finger-clip Heart Rate Sensor \u63d0\u4f9b\u5fc3\u7387\u6d4b\u91cf\u3002\u4f46\u662f\u5b83\u4e0d\u662f\u533b\u7597\u5668\u68b0\u3002\u8981\u5728\u624b\u8155\uff0c\u624b\u6307\u6216\u624b\u638c\u4e0a\u4f7f\u7528\u5fc3\u7387\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u60a8\u5fc5\u987b :\n\n\n\n\n\n\n(1)\u4f7f\u4f20\u611f\u5668\u7d27\u5bc6\u5730\u4e0e\u60a8\u7684\u76ae\u80a4\u63a5\u89e6\uff0c\u5e76\u5728\u6d4b\u91cf\u65f6\u4fdd\u6301\u7a33\u5b9a(\u65e0\u8fd0\u52a8)\u4ee5\u83b7\u5f97\u51c6\u786e\u7684\u5fc3\u7387\u3002\u5982\u679c\u4f20\u611f\u5668\u5728\u6d4b\u91cf\u5fc3\u7387\u65f6\uff0c\u4e0d\u80fd\u5f88\u597d\u5730\u63a5\u89e6\u76ae\u80a4\u6216\u8fdb\u884c\u6781\u7aef\u8fd0\u52a8\uff0c\u90a3\u53ef\u80fd\u5bfc\u81f4\u4e0d\u80fd\u6b63\u786e\u6d4b\u91cf\u3002\n\n\n(2)\u4f20\u611f\u5668\u7684\u6027\u80fd\u4f1a\u5728\u8840\u6d41\u91cf\u66f4\u5927\u65f6\u5f97\u5230\u4f18\u5316\u3002 \u5728\u5bd2\u51b7\u7684\u65e5\u5b50\u6216\u7528\u6237\u7684\u5faa\u73af\u4e0d\u7545(\u4f8b\u5982\u624b\u811a\u51b7)\uff0c\u4f20\u611f\u5668\u6027\u80fd\uff08\u5fc3\u7387\u51c6\u786e\u5ea6\uff09\u53ef\u80fd\u4f1a\u56e0\u6d4b\u91cf\u4f4d\u7f6e\u7684\u8840\u6d41\u91cf\u8f83\u4f4e\u800c\u53d7\u5230\u5f71\u54cd\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - Finger-clip Heart Rate Sensor eagle file\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nGrove - Finger-clip Heart Rate Sensor bin file", 
            "title": "Grove-Finger clip Heart Rate Sensor with shell"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/#_1", 
            "text": "\u65e0\u89e6\u6478\u548c\u79fb\u52a8\u65f6\u7684\u8d85\u4f4e\u529f\u8017\u7701\u7535\u6a21\u5f0f    \u7075\u6d3b\u7684\u7761\u7720\u7387\u63a7\u5236    \u96c6\u6210 STM32F103    I2C \u63a5\u53e3    \u5fc3\u7387\u4f20\u611f\u5668\u533a\u57df\u53ea\u6709 3.0 x 4.7mm    SWD \u63a5\u53e3\u4fdd\u7559    \u914d\u6709\u7ef7\u5e26\u548c\u5916\u58f3    \u5de5\u4f5c\u6e29\u5ea6 : -20 to +60\u2103", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/#_2", 
            "text": "1: Grove \u63a5\u53e3    2: \u4fdd\u7559 SWD \u63a5\u53e3\uff0c\u7528\u4e8e\u7f16\u7a0b\u5230 STM32    3: \u5fc3\u7387\u4f20\u611f\u5668", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/#_3", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5728\u6b64\u63d0\u4f9b\u4e00\u4e2a\u793a\u4f8b\u6765\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/#_4", 
            "text": "\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230\u5e26\u6709 Grove \u7ebf\u7f06\u7684 Seeeduino \u7684 I2C \u7aef\u53e3\u3002   \u4f7f\u7528\u7ef7\u5e26\u5c06\u6b64\u6a21\u5757\u56fa\u5b9a\u5728\u624b\u6307\u6216\u624b\u8155\u4e0a\u65f6\uff0c\u8bf7\u4fdd\u6301\u4f20\u611f\u5668\u533a\u57df\u4e0e\u76ae\u80a4\u826f\u597d\u5730\u63a5\u89e6\u5e76\u4e0d\u8981\u6709\u52a8\u4f5c\uff0c\u50cf\u56fe\u7247\u90a3\u6837\u3002\u3002", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/#_5", 
            "text": "", 
            "title": "\u8f6f\u4ef6\u90e8\u5206"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/#arduino", 
            "text": "\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino \u7684\u65b0\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e0a\u4f20\u4ee3\u7801\uff0c\u7136\u540e\u53ef\u4ee5\u4ece\u4e32\u884c\u76d1\u89c6\u5668\u83b7\u53d6\u5fc3\u7387\u3002\n\u624b\u6307\u89e6\u6478\u4f20\u611f\u5668\u540e\u53ef\u80fd\u9700\u8981\u5927\u7ea6\u4e00\u5206\u949f\u624d\u80fd\u83b7\u5f97\u6709\u6548\u7684\u5fc3\u7387\u3002  #include  Wire.h \nvoid setup() {\n    Serial.begin(9600);\n    Serial.println( heart rate sensor: );\n    Wire.begin();\n}\nvoid loop() {\n    Wire.requestFrom(0xA0   1, 1);    // request 1 bytes from slave device\n    while(Wire.available()) {          // slave may send less than requested\n        unsigned char c = Wire.read();   // receive heart rate value (a byte)\n        Serial.println(c, DEC);         // print heart rate value\n    }\n    delay(500);\n}", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/#mbed", 
            "text": "\u4ece I2C \u8bbe\u5907\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282 0xA0 ( 8 \u4f4d\u5730\u5740 )\uff0c\u8fd9\u5c31\u662f\u5fc3\u7387\u3002  #include  mbed.h \n\nI2C i2c(I2C_SDA, I2C_SCL);\nconst int addr = 0xA0;\n\nint main() {\n    char heart_rate;\n    while (1) {\n        i2c.read(addr,  heart_rate, 1);\n        printf( heart rate: = %d\\r\\n , heart_rate);\n    }\n}", 
            "title": "\u4e0e Mbed \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/#_6", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5bfc\u7a0b\u5e8f\u6765\u5347\u7ea7\u5fc3\u7387\u4f20\u611f\u5668\u7684\u56fa\u4ef6\u3002    \u5f15\u5bfc\u7a0b\u5e8f\u4f4d\u4e8e 0x08000000 - 0x08002000    \u5e94\u7528\u7a0b\u5e8f\u4f4d\u4e8e 0x08002000 - 0x08020000    \u8981\u542f\u52a8\u5f15\u5bfc\u7a0b\u5e8f\uff0c\u9700\u8981\u5c06  SWDIO  \u8fde\u63a5\u5230  GND  \u5e76\u91cd\u7f6e\u8fd0\u884c      \u63a5\u53e3 : UART ( Grove \u63a5\u53e3\u652f\u6301 I2C \u548c UART )\uff0c\u5347\u7ea7\u56fa\u4ef6\u65f6\uff0cGrove \u63a5\u53e3\u4ee5 UART \u6a21\u5f0f\u8fd0\u884c\u3002\nVCC  -  VCC   GND  -  GND  SDA  -  TX  SCL  -  RX    UART \u6ce2\u7279\u7387 : 115200    \u534f\u8bae : ymodem (\u63a8\u8350\u5de5\u5177\u662f Tera Term)     Note  The Grove - Finger-clip Heart Rate Sensor \u63d0\u4f9b\u5fc3\u7387\u6d4b\u91cf\u3002\u4f46\u662f\u5b83\u4e0d\u662f\u533b\u7597\u5668\u68b0\u3002\u8981\u5728\u624b\u8155\uff0c\u624b\u6307\u6216\u624b\u638c\u4e0a\u4f7f\u7528\u5fc3\u7387\u68c0\u6d4b\u4f20\u611f\u5668\uff0c\u60a8\u5fc5\u987b :    (1)\u4f7f\u4f20\u611f\u5668\u7d27\u5bc6\u5730\u4e0e\u60a8\u7684\u76ae\u80a4\u63a5\u89e6\uff0c\u5e76\u5728\u6d4b\u91cf\u65f6\u4fdd\u6301\u7a33\u5b9a(\u65e0\u8fd0\u52a8)\u4ee5\u83b7\u5f97\u51c6\u786e\u7684\u5fc3\u7387\u3002\u5982\u679c\u4f20\u611f\u5668\u5728\u6d4b\u91cf\u5fc3\u7387\u65f6\uff0c\u4e0d\u80fd\u5f88\u597d\u5730\u63a5\u89e6\u76ae\u80a4\u6216\u8fdb\u884c\u6781\u7aef\u8fd0\u52a8\uff0c\u90a3\u53ef\u80fd\u5bfc\u81f4\u4e0d\u80fd\u6b63\u786e\u6d4b\u91cf\u3002  (2)\u4f20\u611f\u5668\u7684\u6027\u80fd\u4f1a\u5728\u8840\u6d41\u91cf\u66f4\u5927\u65f6\u5f97\u5230\u4f18\u5316\u3002 \u5728\u5bd2\u51b7\u7684\u65e5\u5b50\u6216\u7528\u6237\u7684\u5faa\u73af\u4e0d\u7545(\u4f8b\u5982\u624b\u811a\u51b7)\uff0c\u4f20\u611f\u5668\u6027\u80fd\uff08\u5fc3\u7387\u51c6\u786e\u5ea6\uff09\u53ef\u80fd\u4f1a\u56e0\u6d4b\u91cf\u4f4d\u7f6e\u7684\u8840\u6d41\u91cf\u8f83\u4f4e\u800c\u53d7\u5230\u5f71\u54cd\u3002", 
            "title": "\u66f4\u65b0\u56fa\u4ef6"
        }, 
        {
            "location": "/Grove-Finger-clip_Heart_Rate_Sensor_with_shell/#_7", 
            "text": "[Eagle\u6587\u4ef6]   Grove - Finger-clip Heart Rate Sensor eagle file    [\u5176\u4ed6\u8d44\u6e90]   Grove - Finger-clip Heart Rate Sensor bin file", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Gas_Sensor-O2/", 
            "text": "Grove-Gas sensor\uff08O2\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u6d4b\u8bd5\u7a7a\u6c14\u4e2d\u6c27\u6d53\u5ea6\u7684\u4f20\u611f\u5668\uff0c\u5b83\u662f\u57fa\u4e8e\u7535\u5316\u5b66\u7535\u6c60\u539f\u7406\u5de5\u4f5c\u7684\u3002 \u5f53\u8f93\u51fa\u4e0e\u6c27\u6c14\u6d53\u5ea6\u6210\u6bd4\u4f8b\u7684\u7535\u538b\u503c\u65f6,\u901a\u8fc7\u53c2\u8003\u6c27\u6d53\u5ea6\u7ebf\u6027\u7279\u5f81\u56fe\uff0c\u53ef\u4ee5\u6e05\u695a\u5730\u4e86\u89e3\u5f53\u524d\u7684\u6c27\u6c14\u6d53\u5ea6\u3002 \u5b83\u975e\u5e38\u9002\u5408\u68c0\u6d4b\u73af\u5883\u4e2d\u7684\u6c27\u6c14\u6d53\u5ea6\u3002 Grove - Gas Sensor(O2)\u662f\u4e00\u79cd\u6709\u673a\u53cd\u5e94\u6a21\u5757\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u4e0e\u7a7a\u6c14\u4e2d\u6c14\u4f53\u7684\u5316\u5b66\u53cd\u5e94\u4ea7\u751f\u4e00\u70b9\u7535\u6d41\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4e3a\u5176\u63d0\u4f9b\u5916\u90e8\u7535\u6e90\uff0c\u8f93\u51fa\u7535\u538b\u4f1a\u968f\u65f6\u95f4\u53d8\u5316\u800c\u53d8\u5316\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u9ad8\u7cbe\u51c6\u5ea6\n\n\n\u7075\u654f\u5ea6\u9ad8\n\n\n\u7ebf\u6027\u8303\u56f4\u5e7f\n\n\n\u6297\u5e72\u6270\u80fd\u529b\u5f3a\n\n\n\u975e\u51e1\u7684\u53ef\u9760\u6027\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u6d4b\u91cf\u8303\u56f4\n\n\n0-25%\n\n\n\n\n\n\n\u4f7f\u7528\u5bff\u547d\n\n\n\u4e24\u5e74\n\n\n\n\n\n\n\u7075\u654f\u5ea6\n\n\n0.05~0.15 mA(in air)\n\n\n\n\n\n\n\u6e29\u5ea6\u8303\u56f4\n\n\n-20 oC~50 oC\n\n\n\n\n\n\n\u9884\u70ed\u65f6\u95f4\n\n\n20 \u5206\u949f\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\nNote\n\n\n\u672c\u7ae0\u57fa\u4e8eWin10\u548cArduino IDE 1.6.9\n\n\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u6a21\u5757\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u4fe1\u53f7\u5f15\u811a\uff08Grove\u8fde\u63a5\u7ebf\u7684YELLOW\u5f15\u811a\uff09\u8fde\u63a5\u5230\u63a7\u5236\u5668\u7684ADC\u8f93\u5165\u3002 \u5982\u679c\u63a7\u5236\u5668\u4e2d\u6ca1\u6709\u5185\u90e8ADC\uff0c\u5efa\u8bae\u4f7f\u7528\nGrove - I2C ADC\n\u3002\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u8ba9\u5b83\u8fdb\u884c\u5de5\u4f5c\uff0c Grove - Gas Sensor(O2)\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Gas Sensor(O2)\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u7531\u4e8eGrove\u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u5236\u4f5c\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684\u6b63\u786e\u7aef\u53e3\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u6f14\u793a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2aGrove\u6a21\u5757\u3002\n\n\n\n\nGrove - Sound \u4f20\u611f\u5668\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u7684\u6a21\u5757\uff0c\u6211\u4eec\u5728\u6b64\u6f14\u793a\u4e2d\u5c06\u5176\u8fde\u63a5\u5230 \nA0\n \u7aef\u53e3\n\n\n\n\n\n\n\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230Arduino\n\n\n\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230Arduino IDE\u3002\n\n\n// Grove - Gas Sensor(O2) test code\n// Note:\n// 1. It need about about 5-10 minutes to preheat the sensor\n// 2. modify VRefer if needed\n\nconst float VRefer = 3.3;       // voltage of adc reference\n\nconst int pinAdc   = A5;\n\nvoid setup()\n{\n    // put your setup code here, to run once:\n    Serial.begin(9600);\n    Serial.println(\nGrove - Gas Sensor Test Code...\n);\n}\n\nvoid loop()\n{\n    // put your main code here, to run repeatedly:\n    float Vout =0;\n    Serial.print(\nVout =\n);\n\n    Vout = readO2Vout();\n    Serial.print(Vout);\n    Serial.print(\n V, Concentration of O2 is \n);\n    Serial.println(readConcentration());\n    delay(500);\n}\n\nfloat readO2Vout()\n{\n    long sum = 0;\n    for(int i=0; i\n32; i++)\n    {\n        sum += analogRead(pinAdc);\n    }\n\n    sum \n= 5;\n\n    float MeasuredVout = sum * (VRefer / 1023.0);\n    return MeasuredVout;\n}\n\nfloat readConcentration()\n{\n    // Vout samples are with reference to 3.3V\n    float MeasuredVout = readO2Vout();\n\n    //float Concentration = FmultiMap(MeasuredVout, VoutArray,O2ConArray, 6);\n    //when its output voltage is 2.0V,\n    float Concentration = MeasuredVout * 0.21 / 2.0;\n    float Concentration_Percentage=Concentration*100;\n    return Concentration_Percentage;\n}\n\n\n\n\n\u7136\u540e\u9009\u62e9\u6b63\u786e\u7684\u677f\u548cCOM\u7aef\u53e3\uff0c\u7136\u540e\u70b9\u51fb\u4e0a\u4f20\u6309\u94ae\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u51e0\u79d2\u949f\u3002\n\n\n\u83b7\u53d6\u6570\u636e\n\n\n\u6253\u5f00\u60a8\u7684Arduino IDE\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u5c06\u7acb\u5373\u83b7\u53d6\u6570\u636e\n\n\n\n\nWarning\n\n\n\u4f20\u611f\u5668\u9700\u8981\u9884\u70ed\u7ea620\u301c30\u5206\u949f\uff0c\u5426\u5219\u4f1a\u83b7\u5f97\u504f\u5927\u7684\u6570\u503c\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nME2-O2 Datasheet\n\n\nSchematic in Eagle File\n\n\nGithub Repository of this Document", 
            "title": "Grove-Gas Sensor O2"
        }, 
        {
            "location": "/Grove-Gas_Sensor-O2/#_1", 
            "text": "\u9ad8\u7cbe\u51c6\u5ea6  \u7075\u654f\u5ea6\u9ad8  \u7ebf\u6027\u8303\u56f4\u5e7f  \u6297\u5e72\u6270\u80fd\u529b\u5f3a  \u975e\u51e1\u7684\u53ef\u9760\u6027    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Gas_Sensor-O2/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570      \u6d4b\u91cf\u8303\u56f4  0-25%    \u4f7f\u7528\u5bff\u547d  \u4e24\u5e74    \u7075\u654f\u5ea6  0.05~0.15 mA(in air)    \u6e29\u5ea6\u8303\u56f4  -20 oC~50 oC    \u9884\u70ed\u65f6\u95f4  20 \u5206\u949f", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Gas_Sensor-O2/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Gas_Sensor-O2/#_4", 
            "text": "Note  \u672c\u7ae0\u57fa\u4e8eWin10\u548cArduino IDE 1.6.9   \u8fd9\u662f\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u6a21\u5757\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u4fe1\u53f7\u5f15\u811a\uff08Grove\u8fde\u63a5\u7ebf\u7684YELLOW\u5f15\u811a\uff09\u8fde\u63a5\u5230\u63a7\u5236\u5668\u7684ADC\u8f93\u5165\u3002 \u5982\u679c\u63a7\u5236\u5668\u4e2d\u6ca1\u6709\u5185\u90e8ADC\uff0c\u5efa\u8bae\u4f7f\u7528 Grove - I2C ADC \u3002  \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u8ba9\u5b83\u8fdb\u884c\u5de5\u4f5c\uff0c Grove - Gas Sensor(O2)\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Gas Sensor(O2)  Base Shield           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Gas_Sensor-O2/#_5", 
            "text": "\u7531\u4e8eGrove\u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u5236\u4f5c\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684\u6b63\u786e\u7aef\u53e3\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u6f14\u793a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2aGrove\u6a21\u5757\u3002   Grove - Sound \u4f20\u611f\u5668\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u7684\u6a21\u5757\uff0c\u6211\u4eec\u5728\u6b64\u6f14\u793a\u4e2d\u5c06\u5176\u8fde\u63a5\u5230  A0  \u7aef\u53e3", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Gas_Sensor-O2/#arduino", 
            "text": "\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230Arduino IDE\u3002  // Grove - Gas Sensor(O2) test code\n// Note:\n// 1. It need about about 5-10 minutes to preheat the sensor\n// 2. modify VRefer if needed\n\nconst float VRefer = 3.3;       // voltage of adc reference\n\nconst int pinAdc   = A5;\n\nvoid setup()\n{\n    // put your setup code here, to run once:\n    Serial.begin(9600);\n    Serial.println( Grove - Gas Sensor Test Code... );\n}\n\nvoid loop()\n{\n    // put your main code here, to run repeatedly:\n    float Vout =0;\n    Serial.print( Vout = );\n\n    Vout = readO2Vout();\n    Serial.print(Vout);\n    Serial.print(  V, Concentration of O2 is  );\n    Serial.println(readConcentration());\n    delay(500);\n}\n\nfloat readO2Vout()\n{\n    long sum = 0;\n    for(int i=0; i 32; i++)\n    {\n        sum += analogRead(pinAdc);\n    }\n\n    sum  = 5;\n\n    float MeasuredVout = sum * (VRefer / 1023.0);\n    return MeasuredVout;\n}\n\nfloat readConcentration()\n{\n    // Vout samples are with reference to 3.3V\n    float MeasuredVout = readO2Vout();\n\n    //float Concentration = FmultiMap(MeasuredVout, VoutArray,O2ConArray, 6);\n    //when its output voltage is 2.0V,\n    float Concentration = MeasuredVout * 0.21 / 2.0;\n    float Concentration_Percentage=Concentration*100;\n    return Concentration_Percentage;\n}  \u7136\u540e\u9009\u62e9\u6b63\u786e\u7684\u677f\u548cCOM\u7aef\u53e3\uff0c\u7136\u540e\u70b9\u51fb\u4e0a\u4f20\u6309\u94ae\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u51e0\u79d2\u949f\u3002", 
            "title": "\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230Arduino"
        }, 
        {
            "location": "/Grove-Gas_Sensor-O2/#_6", 
            "text": "\u6253\u5f00\u60a8\u7684Arduino IDE\u7684\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u5c06\u7acb\u5373\u83b7\u53d6\u6570\u636e   Warning  \u4f20\u611f\u5668\u9700\u8981\u9884\u70ed\u7ea620\u301c30\u5206\u949f\uff0c\u5426\u5219\u4f1a\u83b7\u5f97\u504f\u5927\u7684\u6570\u503c\u3002", 
            "title": "\u83b7\u53d6\u6570\u636e"
        }, 
        {
            "location": "/Grove-Gas_Sensor-O2/#_7", 
            "text": "ME2-O2 Datasheet  Schematic in Eagle File  Github Repository of this Document", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-CO2_Sensor/", 
            "text": "Grove - CO2 Sensor \u6a21\u5757\u662f\u4e00\u6b3e\u7ea2\u5916\u7684\u9ad8\u7075\u654f\u5ea6\u4e0e\u9ad8\u5206\u8fa8\u7387\u7684\u4e8c\u6c27\u5316\u78b3\u4f20\u611f\u5668\u3002\u7ea2\u5916\u4e8c\u6c27\u5316\u78b3\u4f20\u611f\u5668 MH-Z16 \u662f\u4e00\u79cd\u901a\u7528\u7684\u5c0f\u578b\u4f20\u611f\u5668\uff0c\u91c7\u7528\u975e\u8272\u6563\u7ea2\u5916( NDIR )\u5438\u6536\u6cd5\u68c0\u6d4b\u7a7a\u6c14\u4e2d\u4e8c\u6c27\u5316\u78b3\u7684\u539f\u7406\uff0c\u5177\u6709\u826f\u597d\u7684\u9009\u62e9\u6027\uff0c\u6c27\u6c14\u4f9d\u8d56\uff0c\u5bff\u547d\u957f\uff0c\u5185\u7f6e\u6e29\u5ea6\u4f20\u611f\u5668\uff0c\u5177\u6709\u6e29\u5ea6\u8865\u507f\uff0cUART \u8f93\u51fa\u4fbf\u4e8e\u4f7f\u7528\u3002\u53ef\u5e7f\u6cdb\u5e94\u7528\u4e8e\u9ad8\u538b\u4ea4\u6d41\u7535\u3001\u5ba4\u5185\u7a7a\u6c14\u8d28\u91cf\u68c0\u6d4b\u3001\u5de5\u4e1a\u8fc7\u7a0b\u76d1\u63a7\u4e0e\u5b89\u5168\u3001\u519c\u4e1a\u4e0e\u755c\u7267\u4e1a\u751f\u4ea7\u8fc7\u7a0b\u76d1\u63a7\u3002\n\n\n\n\n\n\nCaution\n\n\u8bf7\u6ce8\u610f\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u6c14\u4f53\u6d53\u5ea6\u5728\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u7684\u8fd1\u4f3c\u8d8b\u52bf\uff0c\u5b83\u4e0d\u8868\u793a\u7cbe\u786e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7a7a\u6c14\u4e2d\u67d0\u4e9b\u90e8\u4ef6\u7684\u68c0\u6d4b\u901a\u5e38\u9700\u8981\u66f4\u7cbe\u786e\u548c\u66f4\u6602\u8d35\u7684\u4eea\u5668\uff0c\u8fd9\u4e9b\u4eea\u5668\u4e0d\u80fd\u7528\u5355\u4e2a\u6c14\u4f53\u4f20\u611f\u5668\u6765\u5b8c\u6210\u3002 \u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u4ee5\u975e\u5e38\u7cbe\u786e\u7684\u6c34\u5e73\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u6c14\u4f53\u4f20\u611f\u5668\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u6d4b\u91cf\u7684\u8303\u56f4 0-2000PPM\n\n\n\u5206\u8fa8\u7387\u4e3a 1PPM \u5728 0-2000PPM \u4e4b\u95f4\n\n\n\u7cbe\u5ea6 200PPM\n\n\n\u51c6\u5907\u65f6\u95f4 3 \u5206\u949f\n\n\n\u53cd\u5e94\u65f6\u95f4 \n 90 \u79d2\n\n\n\u5de5\u4f5c\u6e29\u5ea6 0~50\u2103\n\n\n\u5de5\u4f5c\u6e7f\u5ea6 0%~90%RH\n\n\n\u5b58\u50a8\u6e29\u5ea6 -20~60\u2103\n\n\n\u5de5\u4f5c\u7535\u538b 4.5~6VDC\n\n\n\u5f53\u524d\u6700\u5927\u7535\u6d41\u5c0f\u4e8e 100mA\uff0c\u5e73\u5747\u7535\u6d41\u5c0f\u4e8e 50mA\n\n\nUART \u8f93\u51fa\u6a21\u5f0f\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u5982\u4e0b\u56fe\u5c06\u6a21\u5757\u4e0e Grove Shield \u8fde\u63a5\u4f7f\u7528\uff0c\u5e76\u4f7f\u7528\u4e0b\u9762\u7684\u7a0b\u5e8f\u6765\u83b7\u5f97\u7535\u538b\u3002\n\n\n\u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u7ea6\u4e3a 180s\u3002 \u6709\u5173\u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003\u82af\u7247\u6570\u636e\u624b\u518c\u3002\n\n\n\n\n/*\n  This test code is write for Arduino AVR Series(UNO, Leonardo, Mega)\n  If you want to use with LinkIt ONE, please connect the module to D0/1 and modify:\n\n  // #include \nSoftwareSerial.h\n\n  // SoftwareSerial s_serial(2, 3);      // TX, RX\n\n  #define sensor Serial1\n*/\n\n\n#include \nSoftwareSerial.h\n\nSoftwareSerial s_serial(2, 3);      // TX, RX\n\n#define sensor s_serial\n\nconst unsigned char cmd_get_sensor[] =\n{\n    0xff, 0x01, 0x86, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x79\n};\n\nunsigned char dataRevice[9];\nint temperature;\nint CO2PPM;\n\nvoid setup()\n{\n    sensor.begin(9600);\n    Serial.begin(115200);\n    Serial.println(\nget a \ng\n, begin to read from sensor!\n);\n    Serial.println(\n********************************************************\n);\n    Serial.println();\n}\n\nvoid loop()\n{\n    if(dataRecieve())\n    {\n        Serial.print(\nTemperature: \n);\n        Serial.print(temperature);\n        Serial.print(\n  CO2: \n);\n        Serial.print(CO2PPM);\n        Serial.println(\n);\n    }\n    delay(1000);\n}\n\nbool dataRecieve(void)\n{\n    byte data[9];\n    int i = 0;\n\n    //transmit command data\n    for(i=0; i\nsizeof(cmd_get_sensor); i++)\n    {\n        sensor.write(cmd_get_sensor[i]);\n    }\n    delay(10);\n    //begin reveiceing data\n    if(sensor.available())\n    {\n        while(sensor.available())\n        {\n            for(int i=0;i\n9; i++)\n            {\n                data[i] = sensor.read();\n            }\n        }\n    }\n\n    for(int j=0; j\n9; j++)\n    {\n        Serial.print(data[j]);\n        Serial.print(\n \n);\n    }\n    Serial.println(\n);\n\n    if((i != 9) || (1 + (0xFF ^ (byte)(data[1] + data[2] + data[3] + data[4] + data[5] + data[6] + data[7]))) != data[8])\n    {\n        return false;\n    }\n\n    CO2PPM = (int)data[2] * 256 + (int)data[3];\n    temperature = (int)data[4] - 40;\n\n    return true;\n}\n\n\n\n\n\n\n\u6821\u51c6\n\n\n\n\n\u5982\u679c\u60a8\u9700\u8981\u6821\u51c6\u4f20\u611f\u5668\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684 Arduino\u3002\n\n\n// Grove - Co2 Sensor calibration\n\n#include \nSoftwareSerial.h\n\nSoftwareSerial sensor(A5, A4);      // TX, RX\n\n\nconst unsigned char cmd_calibrate[] =\n{\n    0xff, 0x87, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf2\n};\n\nvoid setup()\n{\n    sensor.begin(9600);\n    Serial.begin(115200);\n    Serial.println(\nbegin to calibrate\n);\n\n    for(int i=0; i\nsizeof(cmd_calibrate); i++)\n    {\n        sensor.write(cmd_calibrate[i]);\n    }\n\n    Serial.println(\ncalibrate done\n);\n}\n\nvoid loop()\n{\n    // nothing to do\n}\n\n\n\n\n\n\nWarning\n\n\n\u8bf7\u5c06\u4f20\u611f\u5668\u9884\u70ed\u81f3\u5c11 5 \u5206\u949f\u518d\u8fdb\u884c\u6821\u51c6\uff0c\u5e76\u786e\u4fdd\u4f20\u611f\u5668\u5728\u65b0\u9c9c\u7a7a\u6c14\u4e2d\u3002\n\n\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\n\n\n350~450ppm: \u4e00\u822c\u6237\u5916\u73af\u5883\n\n\n350~1000ppm\uff1a\u7a7a\u6c14\u6e05\u65b0\uff0c\u547c\u5438\u987a\u7545\n\n\n1000~2000ppm\uff1a\u7a7a\u6c14\u6c61\u6d4a\u8ba9\u4eba\u660f\u660f\u6b32\u7761\n\n\n5000ppm\uff1a8 \u5c0f\u65f6\u5de5\u4f5c\u65e5\u5141\u8bb8\u63a5\u89e6\u7684\u6781\u9650\u503c\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nMH-Z16_CO2 datasheet_ZH_CN.pdf\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nMH-Z16_CO2 datasheet_EN.pdf\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nHealth Risk Evaluation for Carbon Dioxide", 
            "title": "Grove-CO2 Sensor"
        }, 
        {
            "location": "/Grove-CO2_Sensor/#_1", 
            "text": "\u6d4b\u91cf\u7684\u8303\u56f4 0-2000PPM  \u5206\u8fa8\u7387\u4e3a 1PPM \u5728 0-2000PPM \u4e4b\u95f4  \u7cbe\u5ea6 200PPM  \u51c6\u5907\u65f6\u95f4 3 \u5206\u949f  \u53cd\u5e94\u65f6\u95f4   90 \u79d2  \u5de5\u4f5c\u6e29\u5ea6 0~50\u2103  \u5de5\u4f5c\u6e7f\u5ea6 0%~90%RH  \u5b58\u50a8\u6e29\u5ea6 -20~60\u2103  \u5de5\u4f5c\u7535\u538b 4.5~6VDC  \u5f53\u524d\u6700\u5927\u7535\u6d41\u5c0f\u4e8e 100mA\uff0c\u5e73\u5747\u7535\u6d41\u5c0f\u4e8e 50mA  UART \u8f93\u51fa\u6a21\u5f0f    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-CO2_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-CO2_Sensor/#_2", 
            "text": "\u5982\u4e0b\u56fe\u5c06\u6a21\u5757\u4e0e Grove Shield \u8fde\u63a5\u4f7f\u7528\uff0c\u5e76\u4f7f\u7528\u4e0b\u9762\u7684\u7a0b\u5e8f\u6765\u83b7\u5f97\u7535\u538b\u3002  \u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u7ea6\u4e3a 180s\u3002 \u6709\u5173\u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003\u82af\u7247\u6570\u636e\u624b\u518c\u3002   /*\n  This test code is write for Arduino AVR Series(UNO, Leonardo, Mega)\n  If you want to use with LinkIt ONE, please connect the module to D0/1 and modify:\n\n  // #include  SoftwareSerial.h \n  // SoftwareSerial s_serial(2, 3);      // TX, RX\n\n  #define sensor Serial1\n*/\n\n\n#include  SoftwareSerial.h \nSoftwareSerial s_serial(2, 3);      // TX, RX\n\n#define sensor s_serial\n\nconst unsigned char cmd_get_sensor[] =\n{\n    0xff, 0x01, 0x86, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x79\n};\n\nunsigned char dataRevice[9];\nint temperature;\nint CO2PPM;\n\nvoid setup()\n{\n    sensor.begin(9600);\n    Serial.begin(115200);\n    Serial.println( get a  g , begin to read from sensor! );\n    Serial.println( ******************************************************** );\n    Serial.println();\n}\n\nvoid loop()\n{\n    if(dataRecieve())\n    {\n        Serial.print( Temperature:  );\n        Serial.print(temperature);\n        Serial.print(   CO2:  );\n        Serial.print(CO2PPM);\n        Serial.println( );\n    }\n    delay(1000);\n}\n\nbool dataRecieve(void)\n{\n    byte data[9];\n    int i = 0;\n\n    //transmit command data\n    for(i=0; i sizeof(cmd_get_sensor); i++)\n    {\n        sensor.write(cmd_get_sensor[i]);\n    }\n    delay(10);\n    //begin reveiceing data\n    if(sensor.available())\n    {\n        while(sensor.available())\n        {\n            for(int i=0;i 9; i++)\n            {\n                data[i] = sensor.read();\n            }\n        }\n    }\n\n    for(int j=0; j 9; j++)\n    {\n        Serial.print(data[j]);\n        Serial.print(   );\n    }\n    Serial.println( );\n\n    if((i != 9) || (1 + (0xFF ^ (byte)(data[1] + data[2] + data[3] + data[4] + data[5] + data[6] + data[7]))) != data[8])\n    {\n        return false;\n    }\n\n    CO2PPM = (int)data[2] * 256 + (int)data[3];\n    temperature = (int)data[4] - 40;\n\n    return true;\n}", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-CO2_Sensor/#_3", 
            "text": "\u5982\u679c\u60a8\u9700\u8981\u6821\u51c6\u4f20\u611f\u5668\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684 Arduino\u3002  // Grove - Co2 Sensor calibration\n\n#include  SoftwareSerial.h \nSoftwareSerial sensor(A5, A4);      // TX, RX\n\n\nconst unsigned char cmd_calibrate[] =\n{\n    0xff, 0x87, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf2\n};\n\nvoid setup()\n{\n    sensor.begin(9600);\n    Serial.begin(115200);\n    Serial.println( begin to calibrate );\n\n    for(int i=0; i sizeof(cmd_calibrate); i++)\n    {\n        sensor.write(cmd_calibrate[i]);\n    }\n\n    Serial.println( calibrate done );\n}\n\nvoid loop()\n{\n    // nothing to do\n}   Warning  \u8bf7\u5c06\u4f20\u611f\u5668\u9884\u70ed\u81f3\u5c11 5 \u5206\u949f\u518d\u8fdb\u884c\u6821\u51c6\uff0c\u5e76\u786e\u4fdd\u4f20\u611f\u5668\u5728\u65b0\u9c9c\u7a7a\u6c14\u4e2d\u3002", 
            "title": "\u6821\u51c6"
        }, 
        {
            "location": "/Grove-CO2_Sensor/#_4", 
            "text": "350~450ppm: \u4e00\u822c\u6237\u5916\u73af\u5883  350~1000ppm\uff1a\u7a7a\u6c14\u6e05\u65b0\uff0c\u547c\u5438\u987a\u7545  1000~2000ppm\uff1a\u7a7a\u6c14\u6c61\u6d4a\u8ba9\u4eba\u660f\u660f\u6b32\u7761  5000ppm\uff1a8 \u5c0f\u65f6\u5de5\u4f5c\u65e5\u5141\u8bb8\u63a5\u89e6\u7684\u6781\u9650\u503c", 
            "title": "\u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/Grove-CO2_Sensor/#_5", 
            "text": "[\u82af\u7247\u6570\u636e\u624b\u518c]   MH-Z16_CO2 datasheet_ZH_CN.pdf  [\u82af\u7247\u6570\u636e\u624b\u518c]   MH-Z16_CO2 datasheet_EN.pdf  [\u5176\u4ed6\u8d44\u6e90]   Health Risk Evaluation for Carbon Dioxide", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/", 
            "text": "Grove\u6c14\u4f53\u4f20\u611f\u5668 (MQ2) \u6a21\u5757\u53ef\u7528\u4e8e\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\uff08\u5728\u5bb6\u5ead\u548c\u5de5\u4e1a\u4e2d\uff09\u3002\u53ef\u68c0\u6d4b\nH2, LPG, CH4, CO, \u9152\u7cbe, \u70df\u96fe\u6216\u4e19\u70f7\n\u7b49\u3002 \u7531\u4e8e\u5176\u5feb\u901f\u54cd\u5e94\u7684\u65f6\u95f4\u7279\u6027\uff0c \u6d4b\u91cf\u53ef\u4ee5\u8fc5\u901f\u5b8c\u6210\u3002\u4e14\u5176\u7075\u654f\u5ea6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7535\u4f4d\u5668\u6765\u8fdb\u884c\u8c03\u8282\u3002\n\n\n\n\nNote\n\n\n\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u6c14\u4f53\u6d53\u5ea6\u5728\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u7684\u8fd1\u4f3c\u8d8b\u52bf\uff0c\u5b83\u4e0d\u8868\u793a\u7cbe\u786e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7a7a\u6c14\u4e2d\u67d0\u4e9b\u90e8\u4ef6\u7684\u68c0\u6d4b\u901a\u5e38\u9700\u8981\u66f4\u7cbe\u786e\u548c\u66f4\u6602\u8d35\u7684\u4eea\u5668\uff0c\u8fd9\u4e9b\u4eea\u5668\u4e0d\u80fd\u7528\u5355\u4e2a\u6c14\u4f53\u4f20\u611f\u5668\u6765\u5b8c\u6210\u3002 \u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u4ee5\u975e\u5e38\u7cbe\u786e\u7684\u6c34\u5e73\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u6c14\u4f53\u4f20\u611f\u5668\u3002\n\n\n\n\n\u6709 4 \u79cd\u6c14\u4f53\u4f20\u611f\u5668\uff0c\u6bcf\u79cd\u90fd\u53ef\u4ee5\u68c0\u6d4b\u4e0d\u540c\u7c7b\u578b\u7684\u6c14\u4f53\uff0c\u8fd9\u91cc\u6211\u4eec\u7528\u4e00\u5f20\u8868\u6765\u8bf4\u660e\u3002\n\n\n\n\n\n\n\n\n\u4f20\u611f\u5668\u7c7b\u578b\n\n\n\u6c14\u4f53\u7c7b\u578b\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\n\nMQ2\n\n\n\u53ef\u71c3\u6c14\u4f53\uff0c\u70df\u96fe\n\n\n\n\n\n\n\n\n\n\nMQ3\n\n\n\u9152\u7cbe\u84b8\u6c7d\n\n\n\n\n\n\n\n\n\n\nMQ5\n\n\n\u77f3\u6cb9\u6c14\uff0c\u5929\u7136\u6c14\uff0c\u57ce\u9547\u7164\u6c14\n\n\n\n\n\n\n\n\n\n\nMQ9\n\n\n\u4e00\u6c27\u5316\u78b3\uff0c\u7164\u6c14\uff0c\u6db2\u5316\u6c14\n\n\n\n\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u68c0\u6d4b\u8303\u56f4\u5e7f\n\n\n\u5de5\u4f5c\u7a33\u5b9a\u4e14\u5bff\u547d\u957f\n\n\n\u54cd\u5e94\u5feb\uff0c\u7075\u654f\u5ea6\u9ad8\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\nVCC\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n4.9\n\n\n5\n\n\n5.1\n\n\nV\n\n\n\n\n\n\nPH\n\n\n\u70ed\u80fd\u8017\n\n\n0.5\n\n\n-\n\n\n800\n\n\nmW\n\n\n\n\n\n\nRL\n\n\n\u8d1f\u8f7d\u7535\u963b\n\n\n\n\nadjustable\n\n\n\n\n\n\n\n\n\n\nRH\n\n\n\u53d1\u70ed\u5668\u7535\u963b\n\n\n-\n\n\n33\n\n\n-\n\n\n\u03a9\n\n\n\n\n\n\nRs\n\n\n\u654f\u7535\u963b\n\n\n3\n\n\n-\n\n\n30\n\n\nk\u03a9\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\u3002\n\n\n\u73a9\u5177\u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u4f20\u611f\u5668\u3002 \u8fd9\u9700\u8981\u8fde\u63a5\u5230 \nGrove Base Shield\n \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6a21\u62df\u91cf\u63d2\u69fd\u3002 \u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u4f7f\u7528 \nA0\n \u6a21\u62df\u91cf\u5f15\u811a\u3002\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684 \nA0\n \u7aef\u53e3\u3002\n\n\n\u6839\u636e\u5982\u4e0b\u8868\u6240\u793a\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u4f7f\u7528\u8df3\u7ebf\u5c06 Grove \u6a21\u5757\u76f4\u63a5\u8fde\u63a5\u5230 Arduino:\n\n\n\n\n\n\n\n\nArduino\n\n\nGas Sensor\n\n\n\n\n\n\n\n\n\n\n5V\n\n\nVCC\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nNC\n\n\nNC\n\n\n\n\n\n\nAnalog A0\n\n\nSIG\n\n\n\n\n\n\n\n\n\u5f53\u6c14\u4f53\u6d53\u5ea6\u589e\u52a0\u65f6\uff0c\u6c14\u4f53\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7535\u538b\u589e\u52a0\u3002 \u7075\u654f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7535\u4f4d\u5668\u6765\u8c03\u8282\u3002 \n\u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u662f 24 \u5c0f\u65f6\u4ee5\u4e0a\n\u3002 \u6709\u5173 MQ-2 \u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605**\u8d44\u6e90\u4e0b\u8f7d**\u90e8\u5206\u4e2d\u63d0\u4f9b\u7684 data-sheet\u3002\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u786c\u4ef6\u51c6\u5907\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u529f\u80fd\n\n\n\u6570\u91cf\n\n\nLink\n\n\n\n\n\n\n\n\n\n\nBase Shield V2\n\n\n\u63d0\u4f9b Grove \u8fde\u63a5\u5668\n\n\n1\n\n\nlink\n\n\n\n\n\n\nSeeeduino V4.2\n\n\n\u63a7\u5236\u5668\n\n\n1\n\n\nlink\n\n\n\n\n\n\nGrove-Gas Sensor MQ2\n\n\n\u4f20\u611f\u5668\n\n\n1\n\n\nlink\n\n\n\n\n\n\n\n\n\u8fde\u63a5\n\n\n\n\n\u5c06 Grove - Gas Sensor (MQ2) \u8fde\u63a5\u5230 \nA0\n \u7aef\u53e3\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\n\n\n\u6c14\u4f53\u68c0\u6d4b\u7684\u57fa\u672c\u793a\u8303\u4f8b\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u611f\u5668\u8fde\u63a5\u5230 \nA0\n \u5f15\u811a\u3002\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u663e\u793a\u7684\u7535\u538b\u3002\u8be5\u503c\u53ef\u7528\u4f5c\u68c0\u6d4b\u6c14\u4f53\u6d53\u5ea6\u7684\u4efb\u4f55\u589e\u52a0/\u51cf\u5c11\u91cf\u7684\u9608\u503c\u3002\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float sensorValue;\n\n    sensorValue = analogRead(A0);\n    sensor_volt = sensorValue/1024*5.0;\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.print(sensor_volt);\n    Serial.println(\nV\n);\n    delay(1000);\n}\n\n\n\n\n\u6d4b\u91cf\u00a0: \u8fd1\u4f3c\u503c\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\u4e00\u79cd\u4e86\u89e3\u6c14\u4f53\u8fd1\u4f3c\u6d53\u5ea6\u7684\u65b9\u6cd5\u3002 \u6839\u636e MQx \u4f20\u611f\u5668\u7684\u6570\u636e\u8868\uff0c\u8fd9\u4e9b\u65b9\u7a0b\u5f0f\u5728\u6807\u51c6\u6761\u4ef6\u4e0b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5e76\u4e14\u6ca1\u6709\u88ab\u6821\u51c6\u3002 \u5b83\u53ef\u80fd\u4f1a\u6839\u636e\u6e29\u5ea6\u6216\u6e7f\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002\n\n\n\n\n\u5c06\u6c14\u4f53\u4f20\u611f\u5668\u4fdd\u6301\u5728\u6e05\u6d01\u7684\u7a7a\u6c14\u73af\u5883\u4e2d\u3002 \u4e0a\u4f20\u5982\u4e0b\u7684\u7a0b\u5e8f :\n\n\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float R0;  // Get the value of R0 via in H2\n    float sensorValue;\n\n    /*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x \n 100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n    /*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = (5.0-sensor_volt)/sensor_volt; // omit *RL\n    R0 = RS_air/9.8; // The ratio of RS/R0 is 9.8 in a clear air from Graph (Found using WebPlotDigitizer)\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.print(sensor_volt);\n    Serial.println(\nV\n);\n\n    Serial.print(\nR0 = \n);\n    Serial.println(R0);\n    delay(1000);\n\n}\n\n\n\n\n\n\n\n\n\u7136\u540e\u6253\u5f00 Arduino IDE \u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002 \u8bb0\u4e0b R0 \u7684\u503c\uff0c\u8fd9\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002 \u8bfb\u53d6\u7a33\u5b9a\u540e\uff0c\u8bf7\u5c06 R0 \u653e\u5728\u4e0b\u65b9\u3002\n\n\n \u5c06 R0 \u503c\u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u51fa\u7684 R0 \u503c \n. \u5c06\u4f20\u611f\u5668\u66b4\u9732\u5728\u4e0a\u8ff0\u4efb\u4f55\u4e00\u79cd\u6c14\u4f53\u4e2d\u3002\n\n\n\n\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = (5.0-sensor_volt)/sensor_volt; // omit *RL\n\n          /*-Replace the name \nR0\n with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/R0;  // ratio = RS/R0\n          /*-----------------------------------------------------------------------*/\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.println(sensor_volt);\n    Serial.print(\nRS_ratio = \n);\n    Serial.println(RS_gas);\n    Serial.print(\nRs/R0 = \n);\n    Serial.println(ratio);\n\n    Serial.print(\n\\n\\n\n);\n\n    delay(1000);\n\n}\n\n\n\n\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\u3002\n\n\n\n\n\u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a 100ppm\uff0c\u6700\u5927\u503c\u4e3a 10000ppm\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 0.01% ~ 1% \u4e4b\u95f4\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u7387\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove Gas Sensor - EAGLE (Schematic and Board) files\n\n\n\n\n\n\n[\u539f\u7406\u56fePDF]\n \nGrove Gas Sensor - PDF Schematic\n\n\n\n\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nMQ-2 Datasheet\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nHow to choose a Gas Sensor\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nWhat's LEL", 
            "title": "Grove-Gas Sensor MQ2"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_1", 
            "text": "\u68c0\u6d4b\u8303\u56f4\u5e7f  \u5de5\u4f5c\u7a33\u5b9a\u4e14\u5bff\u547d\u957f  \u54cd\u5e94\u5feb\uff0c\u7075\u654f\u5ea6\u9ad8    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u5355\u4f4d      VCC  \u5de5\u4f5c\u7535\u538b  4.9  5  5.1  V    PH  \u70ed\u80fd\u8017  0.5  -  800  mW    RL  \u8d1f\u8f7d\u7535\u963b   adjustable      RH  \u53d1\u70ed\u5668\u7535\u963b  -  33  -  \u03a9    Rs  \u654f\u7535\u963b  3  -  30  k\u03a9", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_3", 
            "text": "\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\u3002  \u73a9\u5177\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_4", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u4f20\u611f\u5668\u3002 \u8fd9\u9700\u8981\u8fde\u63a5\u5230  Grove Base Shield  \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6a21\u62df\u91cf\u63d2\u69fd\u3002 \u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u4f7f\u7528  A0  \u6a21\u62df\u91cf\u5f15\u811a\u3002\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684  A0  \u7aef\u53e3\u3002  \u6839\u636e\u5982\u4e0b\u8868\u6240\u793a\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u4f7f\u7528\u8df3\u7ebf\u5c06 Grove \u6a21\u5757\u76f4\u63a5\u8fde\u63a5\u5230 Arduino:     Arduino  Gas Sensor      5V  VCC    GND  GND    NC  NC    Analog A0  SIG     \u5f53\u6c14\u4f53\u6d53\u5ea6\u589e\u52a0\u65f6\uff0c\u6c14\u4f53\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7535\u538b\u589e\u52a0\u3002 \u7075\u654f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7535\u4f4d\u5668\u6765\u8c03\u8282\u3002  \u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u662f 24 \u5c0f\u65f6\u4ee5\u4e0a \u3002 \u6709\u5173 MQ-2 \u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605**\u8d44\u6e90\u4e0b\u8f7d**\u90e8\u5206\u4e2d\u63d0\u4f9b\u7684 data-sheet\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_6", 
            "text": "\u540d\u79f0  \u529f\u80fd  \u6570\u91cf  Link      Base Shield V2  \u63d0\u4f9b Grove \u8fde\u63a5\u5668  1  link    Seeeduino V4.2  \u63a7\u5236\u5668  1  link    Grove-Gas Sensor MQ2  \u4f20\u611f\u5668  1  link", 
            "title": "\u786c\u4ef6\u51c6\u5907"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_7", 
            "text": "\u5c06 Grove - Gas Sensor (MQ2) \u8fde\u63a5\u5230  A0  \u7aef\u53e3\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002", 
            "title": "\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_8", 
            "text": "\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u611f\u5668\u8fde\u63a5\u5230  A0  \u5f15\u811a\u3002\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u663e\u793a\u7684\u7535\u538b\u3002\u8be5\u503c\u53ef\u7528\u4f5c\u68c0\u6d4b\u6c14\u4f53\u6d53\u5ea6\u7684\u4efb\u4f55\u589e\u52a0/\u51cf\u5c11\u91cf\u7684\u9608\u503c\u3002  void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float sensorValue;\n\n    sensorValue = analogRead(A0);\n    sensor_volt = sensorValue/1024*5.0;\n\n    Serial.print( sensor_volt =  );\n    Serial.print(sensor_volt);\n    Serial.println( V );\n    delay(1000);\n}", 
            "title": "\u6c14\u4f53\u68c0\u6d4b\u7684\u57fa\u672c\u793a\u8303\u4f8b"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_9", 
            "text": "\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\u4e00\u79cd\u4e86\u89e3\u6c14\u4f53\u8fd1\u4f3c\u6d53\u5ea6\u7684\u65b9\u6cd5\u3002 \u6839\u636e MQx \u4f20\u611f\u5668\u7684\u6570\u636e\u8868\uff0c\u8fd9\u4e9b\u65b9\u7a0b\u5f0f\u5728\u6807\u51c6\u6761\u4ef6\u4e0b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5e76\u4e14\u6ca1\u6709\u88ab\u6821\u51c6\u3002 \u5b83\u53ef\u80fd\u4f1a\u6839\u636e\u6e29\u5ea6\u6216\u6e7f\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002   \u5c06\u6c14\u4f53\u4f20\u611f\u5668\u4fdd\u6301\u5728\u6e05\u6d01\u7684\u7a7a\u6c14\u73af\u5883\u4e2d\u3002 \u4e0a\u4f20\u5982\u4e0b\u7684\u7a0b\u5e8f :   void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float R0;  // Get the value of R0 via in H2\n    float sensorValue;\n\n    /*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x   100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n    /*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = (5.0-sensor_volt)/sensor_volt; // omit *RL\n    R0 = RS_air/9.8; // The ratio of RS/R0 is 9.8 in a clear air from Graph (Found using WebPlotDigitizer)\n\n    Serial.print( sensor_volt =  );\n    Serial.print(sensor_volt);\n    Serial.println( V );\n\n    Serial.print( R0 =  );\n    Serial.println(R0);\n    delay(1000);\n\n}    \u7136\u540e\u6253\u5f00 Arduino IDE \u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002 \u8bb0\u4e0b R0 \u7684\u503c\uff0c\u8fd9\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002 \u8bfb\u53d6\u7a33\u5b9a\u540e\uff0c\u8bf7\u5c06 R0 \u653e\u5728\u4e0b\u65b9\u3002   \u5c06 R0 \u503c\u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u51fa\u7684 R0 \u503c  . \u5c06\u4f20\u611f\u5668\u66b4\u9732\u5728\u4e0a\u8ff0\u4efb\u4f55\u4e00\u79cd\u6c14\u4f53\u4e2d\u3002    void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = (5.0-sensor_volt)/sensor_volt; // omit *RL\n\n          /*-Replace the name  R0  with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/R0;  // ratio = RS/R0\n          /*-----------------------------------------------------------------------*/\n\n    Serial.print( sensor_volt =  );\n    Serial.println(sensor_volt);\n    Serial.print( RS_ratio =  );\n    Serial.println(RS_gas);\n    Serial.print( Rs/R0 =  );\n    Serial.println(ratio);\n\n    Serial.print( \\n\\n );\n\n    delay(1000);\n\n}  \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\u3002   \u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a 100ppm\uff0c\u6700\u5927\u503c\u4e3a 10000ppm\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 0.01% ~ 1% \u4e4b\u95f4\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u7387\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002", 
            "title": "\u6d4b\u91cf\u00a0: \u8fd1\u4f3c\u503c"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ2/#_10", 
            "text": "[Eagle\u6587\u4ef6]   Grove Gas Sensor - EAGLE (Schematic and Board) files    [\u539f\u7406\u56fePDF]   Grove Gas Sensor - PDF Schematic    [\u82af\u7247\u6570\u636e\u624b\u518c]   MQ-2 Datasheet    [\u5176\u4ed6\u8d44\u6e90]   How to choose a Gas Sensor    [\u5176\u4ed6\u8d44\u6e90]   What's LEL", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/", 
            "text": "Grove - Gas Sensor(MQ3) \u6a21\u5757\u53ef\u7528\u4e8e\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\uff08\u5728\u5bb6\u5ead\u548c\u5de5\u4e1a\u4e2d\uff09\u3002 \u5b83\u9002\u7528\u4e8e\u68c0\u6d4b \n\u9152\u7cbe\uff0c\u6c7d\u6cb9\uff0c\u7532\u70f7\uff0c\u5df1\u70f7\uff0c\u6db2\u5316\u77f3\u6cb9\u6c14\uff0c\u4e00\u6c27\u5316\u78b3\u3002\n \u7531\u4e8e\u54cd\u5e94\u65f6\u95f4\u5feb\uff0c\u6d4b\u91cf\u53ef\u4ee5\u5c3d\u5feb\u8fdb\u884c\u3002\u4e14\u5176\u7075\u654f\u5ea6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7535\u4f4d\u5668\u6765\u8fdb\u884c\u8c03\u8282\u3002\n\n\n\n\nNote\n\n\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u6c14\u4f53\u6d53\u5ea6\u5728\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u7684\u8fd1\u4f3c\u8d8b\u52bf\uff0c\u5b83\u4e0d\u8868\u793a\u7cbe\u786e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7a7a\u6c14\u4e2d\u67d0\u4e9b\u90e8\u4ef6\u7684\u68c0\u6d4b\u901a\u5e38\u9700\u8981\u66f4\u7cbe\u786e\u548c\u66f4\u6602\u8d35\u7684\u4eea\u5668\uff0c\u8fd9\u4e9b\u4eea\u5668\u4e0d\u80fd\u7528\u5355\u4e2a\u6c14\u4f53\u4f20\u611f\u5668\u6765\u5b8c\u6210\u3002 \u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u4ee5\u975e\u5e38\u7cbe\u786e\u7684\u6c34\u5e73\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u6c14\u4f53\u4f20\u611f\u5668\u3002\n\n\n\n\n\u6709 4 \u79cd\u6c14\u4f53\u4f20\u611f\u5668\uff0c\u6bcf\u79cd\u90fd\u53ef\u4ee5\u68c0\u6d4b\u4e0d\u540c\u7c7b\u578b\u7684\u6c14\u4f53\uff0c\u8fd9\u91cc\u6211\u4eec\u7528\u4e00\u5f20\u8868\u6765\u8bf4\u660e\u3002\n\n\n\n\n\n\n\n\n\u4f20\u611f\u5668\u7c7b\u578b\n\n\n\u6c14\u4f53\u7c7b\u578b\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\n\nMQ2\n\n\n\u53ef\u71c3\u6c14\u4f53\uff0c\u70df\u96fe\n\n\n\n\n\n\n\n\n\n\nMQ3\n\n\n\u9152\u7cbe\u84b8\u6c7d\n\n\n\n\n\n\n\n\n\n\nMQ5\n\n\n\u77f3\u6cb9\u6c14\uff0c\u5929\u7136\u6c14\uff0c\u57ce\u9547\u7164\u6c14\n\n\n\n\n\n\n\n\n\n\nMQ9\n\n\n\u4e00\u6c27\u5316\u78b3\uff0c\u7164\u6c14\uff0c\u6db2\u5316\u6c14\n\n\n\n\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5bf9\u9152\u7cbe\u6709\u9ad8\u654f\u611f\u5ea6\uff0c\u5bf9\u82ef\u6709\u4f4e\u654f\u611f\u5ea6\u3002\n\n\n\u5de5\u4f5c\u7a33\u5b9a\u4e14\u5bff\u547d\u957f\u3002\n\n\n\u54cd\u5e94\u5feb\uff0c\u7075\u654f\u5ea6\u9ad8\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\nVCC\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n4.9\n\n\n5\n\n\n5.1\n\n\nV\n\n\n\n\n\n\nPH\n\n\n\u70ed\u80fd\u8017\n\n\n0.5\n\n\n-\n\n\n750\n\n\nmW\n\n\n\n\n\n\nRL\n\n\n\u8d1f\u8f7d\u7535\u963b\n\n\n\n\n\u53ef\u8c03\n\n\n\n\n\n\n\n\n\n\nRH\n\n\n\u53d1\u70ed\u5668\u7535\u963b\n\n\n-\n\n\n33\n\n\n-\n\n\n\u03a9\n\n\n\n\n\n\nRs\n\n\n\u654f\u7535\u963b\n\n\n1\n\n\n-\n\n\n8\n\n\nM\u03a9\n\n\n\n\n\n\nScope\n\n\n\u68c0\u6d4b\u6d53\u5ea6\n\n\n0.05\n\n\n-\n\n\n10\n\n\nmg/L\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u9152\u7cbe\u6d4b\u8bd5\u4eea\n\n\n\u547c\u6c14\u6d4b\u9189\u5668\n\n\n\u73a9\u5177\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u4f20\u611f\u5668\u3002\u8fd9\u9700\u8981\u8fde\u63a5\u5230 \nGrove Base Shield\n \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6a21\u62df\u91cf\u63d2\u69fd\u3002 \u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u4f7f\u7528 \nA0\n \u6a21\u62df\u91cf\u5f15\u811a\u3002\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684 \nA0\n \u7aef\u53e3\u3002\n\n\n\u6839\u636e\u5982\u4e0b\u8868\u6240\u793a\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u5c06 Grove \u6a21\u5757\u76f4\u63a5\u8fde\u63a5\u5230 Arduino:\n\n\n\n\n\n\n\n\nArduino\n\n\nGas Sensor\n\n\n\n\n\n\n\n\n\n\n5V\n\n\nVCC\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nNC\n\n\nNC\n\n\n\n\n\n\nAnalog A0\n\n\nSIG\n\n\n\n\n\n\n\n\n\u5f53\u6c14\u4f53\u6d53\u5ea6\u589e\u52a0\u65f6\uff0c\u6c14\u4f53\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7535\u538b\u589e\u52a0\u3002\u7075\u654f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7535\u4f4d\u5668\u6765\u8c03\u8282\u3002\n\u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u662f 24 \u5c0f\u65f6\u4ee5\u4e0a\n\u3002 \u6709\u5173 MQ-3 \u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \n\u8d44\u6e90\u4e0b\u8f7d\n \u90e8\u5206\u4e2d\u63d0\u4f9b\u7684 data-sheet\u3002\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\n\u5c06 Grove - Gas Sensor (MQ3) \u8fde\u63a5\u5230 \nA0\n \u7aef\u53e3\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\n\n\n\u6c14\u4f53\u68c0\u6d4b\u7684\u57fa\u672c\u793a\u4f8b\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u611f\u5668\u8fde\u63a5\u5230 \nA0\n \u5f15\u811a\u3002\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u663e\u793a\u7684\u7535\u538b\u3002\u8be5\u503c\u53ef\u7528\u4f5c\u68c0\u6d4b\u6c14\u4f53\u6d53\u5ea6\u7684\u4efb\u4f55\u589e\u52a0/\u51cf\u5c11\u91cf\u7684\u9608\u503c\u3002\n\n\nvoid setup() {\n  Serial.begin(9600);\n}\n\u00a0\nvoid loop() {\n  float sensor_volt;\n  float sensorValue;\n\u00a0\n  sensorValue = analogRead(A0);\n  sensor_volt = sensorValue/1024*5.0;\n\u00a0\n  Serial.print(\nsensor_volt = \n);\n  Serial.print(sensor_volt);\n  Serial.println(\nV\n);\n  delay(1000);\n}\n\n\n\n\n\u6d4b\u91cf\u00a0: \u8fd1\u4f3c\u503c\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\u4e00\u79cd\u4e86\u89e3\u6c14\u4f53\u8fd1\u4f3c\u6d53\u5ea6\u7684\u65b9\u6cd5\u3002 \u6839\u636e MQx \u4f20\u611f\u5668\u7684\u6570\u636e\u8868\uff0c\u8fd9\u4e9b\u65b9\u7a0b\u5f0f\u5728\u6807\u51c6\u6761\u4ef6\u4e0b\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u5e76\u6ca1\u6709\u88ab\u6821\u51c6\u3002\u5b83\u53ef\u80fd\u4f1a\u6839\u636e\u6e29\u5ea6\u6216\u6e7f\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002\n\n\n\n\n\u5c06\u6c14\u4f53\u4f20\u611f\u5668\u4fdd\u6301\u5728\u6e05\u6d01\u7684\u7a7a\u6c14\u73af\u5883\u4e2d\u3002 \u4e0a\u4f20\u5982\u4e0b\u7684\u7a0b\u5e8f :\n\n\n\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float R0;  // Get the value of R0 via in Alcohol\n    float sensorValue;\n\n    /*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x \n 100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n    /*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = (5.0-sensor_volt)/sensor_volt; // omit *RL\n    R0 = RS_air/60.0; // The ratio of RS/R0 is 60 in a clear air from Graph (Found using WebPlotDigitizer)\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.print(sensor_volt);\n    Serial.println(\nV\n);\n\n    Serial.print(\nR0 = \n);\n    Serial.println(R0);\n    delay(1000);\n\n}\n\n\n\n\n\n\n\u7136\u540e\u6253\u5f00 Arduino IDE \u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002 \u8bb0\u4e0b R0 \u7684\u503c\uff0c\u5b83\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002\n\n\n\n\n \u5c06 R0 \u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u51fa\u7684 R0 \u503c \n. \u5c06\u4f20\u611f\u5668\u66b4\u9732\u5728\u4e0a\u8ff0\u4efb\u4f55\u4e00\u79cd\u6c14\u4f53\u4e2d\u3002\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = (5.0-sensor_volt)/sensor_volt; // omit *RL\n\n    /*-Replace the name \nR0\n with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/R0;  // ratio = RS/R0\n    /*-----------------------------------------------------------------------*/\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.println(sensor_volt);\n    Serial.print(\nRS_ratio = \n);\n    Serial.println(RS_gas);\n    Serial.print(\nRs/R0 = \n);\n    Serial.println(ratio);\n\n    Serial.print(\n\\n\\n\n);\n\n    delay(1000);\n\n}\n\n\n\n\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\u3002\n\n\n\n\n\u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a 0.1mg/L\uff0c\u6700\u5927\u6d53\u5ea6\u4e3a 10mg/L\u3002\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u7387\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\n \nGrove Gas Sensor - EAGLE (Schematic and Board) files\n\n\n[\u539f\u7406\u56fe PDF]\n \nGrove Gas Sensor - PDF Schematic\n\n\n[\u6570\u636e\u624b\u518c]\n \nMQ-3 Datasheet\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nHow to choose a Gas Sensor\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nWhat's LEL", 
            "title": "Grove-Gas Sensor MQ3"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/#_1", 
            "text": "\u5bf9\u9152\u7cbe\u6709\u9ad8\u654f\u611f\u5ea6\uff0c\u5bf9\u82ef\u6709\u4f4e\u654f\u611f\u5ea6\u3002  \u5de5\u4f5c\u7a33\u5b9a\u4e14\u5bff\u547d\u957f\u3002  \u54cd\u5e94\u5feb\uff0c\u7075\u654f\u5ea6\u9ad8\u3002    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u5355\u4f4d      VCC  \u5de5\u4f5c\u7535\u538b  4.9  5  5.1  V    PH  \u70ed\u80fd\u8017  0.5  -  750  mW    RL  \u8d1f\u8f7d\u7535\u963b   \u53ef\u8c03      RH  \u53d1\u70ed\u5668\u7535\u963b  -  33  -  \u03a9    Rs  \u654f\u7535\u963b  1  -  8  M\u03a9    Scope  \u68c0\u6d4b\u6d53\u5ea6  0.05  -  10  mg/L", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/#_3", 
            "text": "\u9152\u7cbe\u6d4b\u8bd5\u4eea  \u547c\u6c14\u6d4b\u9189\u5668  \u73a9\u5177", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/#_4", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u4f20\u611f\u5668\u3002\u8fd9\u9700\u8981\u8fde\u63a5\u5230  Grove Base Shield  \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6a21\u62df\u91cf\u63d2\u69fd\u3002 \u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u4f7f\u7528  A0  \u6a21\u62df\u91cf\u5f15\u811a\u3002\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684  A0  \u7aef\u53e3\u3002  \u6839\u636e\u5982\u4e0b\u8868\u6240\u793a\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u5c06 Grove \u6a21\u5757\u76f4\u63a5\u8fde\u63a5\u5230 Arduino:     Arduino  Gas Sensor      5V  VCC    GND  GND    NC  NC    Analog A0  SIG     \u5f53\u6c14\u4f53\u6d53\u5ea6\u589e\u52a0\u65f6\uff0c\u6c14\u4f53\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7535\u538b\u589e\u52a0\u3002\u7075\u654f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7535\u4f4d\u5668\u6765\u8c03\u8282\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u662f 24 \u5c0f\u65f6\u4ee5\u4e0a \u3002 \u6709\u5173 MQ-3 \u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605  \u8d44\u6e90\u4e0b\u8f7d  \u90e8\u5206\u4e2d\u63d0\u4f9b\u7684 data-sheet\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/#_5", 
            "text": "\u5c06 Grove - Gas Sensor (MQ3) \u8fde\u63a5\u5230  A0  \u7aef\u53e3\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/#_6", 
            "text": "\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u611f\u5668\u8fde\u63a5\u5230  A0  \u5f15\u811a\u3002\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u663e\u793a\u7684\u7535\u538b\u3002\u8be5\u503c\u53ef\u7528\u4f5c\u68c0\u6d4b\u6c14\u4f53\u6d53\u5ea6\u7684\u4efb\u4f55\u589e\u52a0/\u51cf\u5c11\u91cf\u7684\u9608\u503c\u3002  void setup() {\n  Serial.begin(9600);\n}\n\u00a0\nvoid loop() {\n  float sensor_volt;\n  float sensorValue;\n\u00a0\n  sensorValue = analogRead(A0);\n  sensor_volt = sensorValue/1024*5.0;\n\u00a0\n  Serial.print( sensor_volt =  );\n  Serial.print(sensor_volt);\n  Serial.println( V );\n  delay(1000);\n}", 
            "title": "\u6c14\u4f53\u68c0\u6d4b\u7684\u57fa\u672c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/#_7", 
            "text": "\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\u4e00\u79cd\u4e86\u89e3\u6c14\u4f53\u8fd1\u4f3c\u6d53\u5ea6\u7684\u65b9\u6cd5\u3002 \u6839\u636e MQx \u4f20\u611f\u5668\u7684\u6570\u636e\u8868\uff0c\u8fd9\u4e9b\u65b9\u7a0b\u5f0f\u5728\u6807\u51c6\u6761\u4ef6\u4e0b\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u5e76\u6ca1\u6709\u88ab\u6821\u51c6\u3002\u5b83\u53ef\u80fd\u4f1a\u6839\u636e\u6e29\u5ea6\u6216\u6e7f\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002   \u5c06\u6c14\u4f53\u4f20\u611f\u5668\u4fdd\u6301\u5728\u6e05\u6d01\u7684\u7a7a\u6c14\u73af\u5883\u4e2d\u3002 \u4e0a\u4f20\u5982\u4e0b\u7684\u7a0b\u5e8f :   void setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float R0;  // Get the value of R0 via in Alcohol\n    float sensorValue;\n\n    /*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x   100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n    /*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = (5.0-sensor_volt)/sensor_volt; // omit *RL\n    R0 = RS_air/60.0; // The ratio of RS/R0 is 60 in a clear air from Graph (Found using WebPlotDigitizer)\n\n    Serial.print( sensor_volt =  );\n    Serial.print(sensor_volt);\n    Serial.println( V );\n\n    Serial.print( R0 =  );\n    Serial.println(R0);\n    delay(1000);\n\n}   \u7136\u540e\u6253\u5f00 Arduino IDE \u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002 \u8bb0\u4e0b R0 \u7684\u503c\uff0c\u5b83\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002    \u5c06 R0 \u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u51fa\u7684 R0 \u503c  . \u5c06\u4f20\u611f\u5668\u66b4\u9732\u5728\u4e0a\u8ff0\u4efb\u4f55\u4e00\u79cd\u6c14\u4f53\u4e2d\u3002  void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = (5.0-sensor_volt)/sensor_volt; // omit *RL\n\n    /*-Replace the name  R0  with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/R0;  // ratio = RS/R0\n    /*-----------------------------------------------------------------------*/\n\n    Serial.print( sensor_volt =  );\n    Serial.println(sensor_volt);\n    Serial.print( RS_ratio =  );\n    Serial.println(RS_gas);\n    Serial.print( Rs/R0 =  );\n    Serial.println(ratio);\n\n    Serial.print( \\n\\n );\n\n    delay(1000);\n\n}  \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\u3002   \u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a 0.1mg/L\uff0c\u6700\u5927\u6d53\u5ea6\u4e3a 10mg/L\u3002\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u7387\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002", 
            "title": "\u6d4b\u91cf\u00a0: \u8fd1\u4f3c\u503c"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ3/#_8", 
            "text": "[Eagle \u6587\u4ef6]   Grove Gas Sensor - EAGLE (Schematic and Board) files  [\u539f\u7406\u56fe PDF]   Grove Gas Sensor - PDF Schematic  [\u6570\u636e\u624b\u518c]   MQ-3 Datasheet  [\u5176\u4ed6\u8d44\u6e90]   How to choose a Gas Sensor  [\u5176\u4ed6\u8d44\u6e90]   What's LEL", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/", 
            "text": "Grove\u6c14\u4f53\u4f20\u611f\u5668\uff08MQ5\uff09\u6a21\u5757\u53ef\u7528\u4e8e\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\uff08\u5728\u5bb6\u5ead\u548c\u5de5\u4e1a\u4e2d\uff09\u3002 \u53ef\u68c0\u6d4b\u6db2\u5316\u77f3\u6cb9\u6c14\uff0c\u5929\u7136\u6c14\uff0c\u57ce\u9547\u7164\u6c14\u7b49\u3002 \u57fa\u4e8e\u5176\u5feb\u901f\u54cd\u5e94\u65f6\u95f4\uff0c \u6d4b\u91cf\u53ef\u4ee5\u5c3d\u5feb\u8fdb\u884c\u3002\u4e14\u5176\u7075\u654f\u5ea6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7535\u4f4d\u5668\u6765\u8fdb\u884c\u8c03\u8282\u3002\n\n\n\n\nNote\n\n\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u6c14\u4f53\u6d53\u5ea6\u5728\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u7684\u8fd1\u4f3c\u8d8b\u52bf\uff0c\u5b83\u4e0d\u8868\u793a\u7cbe\u786e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7a7a\u6c14\u4e2d\u67d0\u4e9b\u90e8\u4ef6\u7684\u68c0\u6d4b\u901a\u5e38\u9700\u8981\u66f4\u7cbe\u786e\u548c\u66f4\u6602\u8d35\u7684\u4eea\u5668\uff0c\u8fd9\u4e9b\u4eea\u5668\u4e0d\u80fd\u7528\u5355\u4e2a\u6c14\u4f53\u4f20\u611f\u5668\u6765\u5b8c\u6210\u3002 \u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u4ee5\u975e\u5e38\u7cbe\u786e\u7684\u6c34\u5e73\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u6c14\u4f53\u4f20\u611f\u5668\u3002\n\n\n\n\n\n\n\n\n\n\n\u4f20\u611f\u5668\u7c7b\u578b\n\n\n\u6c14\u4f53\u7c7b\u578b\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\n\nMQ2\n\n\n\u53ef\u71c3\u6c14\u4f53\uff0c\u70df\u96fe\n\n\n\n\n\n\n\n\n\n\nMQ3\n\n\n\u9152\u7cbe\u84b8\u6c7d\n\n\n\n\n\n\n\n\n\n\nMQ5\n\n\n\u77f3\u6cb9\u6c14\uff0c\u5929\u7136\u6c14\uff0c\u57ce\u9547\u7164\u6c14\n\n\n\n\n\n\n\n\n\n\nMQ9\n\n\n\u4e00\u6c27\u5316\u78b3\uff0c\u7164\u6c14\uff0c\u6db2\u5316\u6c14\n\n\n\n\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u68c0\u6d4b\u8303\u56f4\u5e7f\n\n\n\u5de5\u4f5c\u7a33\u5b9a\u4e14\u5bff\u547d\u957f\n\n\n\u54cd\u5e94\u5feb\uff0c\u7075\u654f\u5ea6\u9ad8\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\nVCC\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n4.9\n\n\n5\n\n\n5.1\n\n\nV\n\n\n\n\n\n\nPH\n\n\n\u70ed\u80fd\u8017\n\n\n0.5\n\n\n-\n\n\n800\n\n\nmW\n\n\n\n\n\n\nRL\n\n\n\u8d1f\u8f7d\u7535\u963b\n\n\n\n\nadjustable\n\n\n\n\n\n\n\n\n\n\nRH\n\n\n\u53d1\u70ed\u5668\u7535\u963b\n\n\n-\n\n\n31\u00b110%\n\n\n-\n\n\n\u03a9\n\n\n\n\n\n\nRs\n\n\n\u654f\u7535\u963b\n\n\n10\n\n\n-\n\n\n60\n\n\nk\u03a9\n\n\n\n\n\n\nScope\n\n\n\u76d1\u6d4b\u6d53\u5ea6\n\n\n200\n\n\n-\n\n\n10000\n\n\nppm\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\u3002\n\n\n\u73a9\u5177\u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u4f20\u611f\u5668\u3002 \u8fd9\u9700\u8981\u8fde\u63a5\u5230 \nGrove Base Shield\n \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6a21\u62df\u91cf\u63d2\u69fd\u3002 \u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u4f7f\u7528 A0 \u6a21\u62df\u91cf\u5f15\u811a\u3002\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684 A0 \u7aef\u53e3\u3002\n\n\n\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8868\u6240\u793a\u7684\u8fde\u63a5\uff0c\u4f7f\u7528\u8df3\u7ebf\u5c06 Grove \u6a21\u5757\u76f4\u63a5\u8fde\u63a5\u5230 Arduino:\n\n\n\n\n\n\n\n\nArduino\n\n\nGas Sensor\n\n\n\n\n\n\n\n\n\n\n5V\n\n\nVCC\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nNC\n\n\nNC\n\n\n\n\n\n\nAnalog A0\n\n\nSIG\n\n\n\n\n\n\n\n\n\u5f53\u6c14\u4f53\u6d53\u5ea6\u589e\u52a0\u65f6\uff0c\u6c14\u4f53\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7535\u538b\u589e\u52a0\u3002 \u7075\u654f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7535\u4f4d\u5668\u6765\u8c03\u8282\u3002 \n\u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u662f 24 \u5c0f\u65f6\u4ee5\u4e0a\n\u3002 \u6709\u5173 MQ-5 \u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605**\u8d44\u6e90**\u90e8\u5206\u4e2d\u63d0\u4f9b\u7684 data-sheet\u3002\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\n\u5c06 Grove - Gas Sensor(MQ5) \u8fde\u63a5\u5230 A0 \u7aef\u53e3\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\n\n\n\u6c14\u4f53\u68c0\u6d4b\u7684\u57fa\u672c\u793a\u8303\u4f8b\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u611f\u5668\u8fde\u63a5\u5230 A0 \u5f15\u811a\u3002\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u663e\u793a\u7684\u7535\u538b\u3002\u8be5\u503c\u53ef\u7528\u4f5c\u68c0\u6d4b\u6c14\u4f53\u6d53\u5ea6\u7684\u4efb\u4f55\u589e\u52a0/\u51cf\u5c11\u91cf\u7684\u9608\u503c\u3002\n\n\n\n\nNote\n\n\u60a8\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u5de5\u5177\u6765\u627e\u5230\u5728\u591a\u79cd\u6c14\u4f53\u6761\u4ef6\u4e0b\u7684\u9608\u503c\u3002 \u7136\u540e\u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u9608\u503c\u3002\n\n\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float sensorValue;\n\n    sensorValue = analogRead(A0);\n    sensor_volt = sensorValue/1024*5.0;\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.print(sensor_volt);\n    Serial.println(\nV\n);\n    delay(1000);\n}\n\n\n\n\n\u6d4b\u91cf\u00a0: \u8fd1\u4f3c\u503c\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\u4e00\u79cd\u4e86\u89e3\u6c14\u4f53\u8fd1\u4f3c\u6d53\u5ea6\u7684\u65b9\u6cd5\u3002 \u6839\u636e MQ5 \u4f20\u611f\u5668\u7684\u6570\u636e\u8868\uff0c\u8fd9\u4e9b\u65b9\u7a0b\u5f0f\u5728\u6807\u51c6\u6761\u4ef6\u4e0b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5e76\u4e14\u6ca1\u6709\u88ab\u6821\u51c6\u3002 \u5b83\u53ef\u80fd\u4f1a\u6839\u636e\u6e29\u5ea6\u6216\u6e7f\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002\n\n\n\n\n\u5c06\u6c14\u4f53\u4f20\u611f\u5668\u4fdd\u6301\u5728\u6e05\u6d01\u7684\u7a7a\u6c14\u73af\u5883\u4e2d\u3002 \u4e0a\u4f20\u7a0b\u5e8f\u5982\u4e0b:\n\n\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float R0;  // Get the value of R0 via in H2\n    float sensorValue;\n\n        /*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x \n 100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n        /*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = (5.0-sensor_volt)/sensor_volt; // omit *RL\n    R0 = RS_air/6.5; // The ratio of RS/R0 is 6.5 in a clear air from Graph (Found using WebPlotDigitizer)\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.print(sensor_volt);\n    Serial.println(\nV\n);\n\n    Serial.print(\nR0 = \n);\n    Serial.println(R0);\n    delay(1000);\n}\n\n\n\n\n\n\n\u7136\u540e\u6253\u5f00 Arduino IDE \u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002 \u8bb0\u4e0b R0 \u7684\u503c\uff0c\u8fd9\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002 \u8bfb\u53d6\u7a33\u5b9a\u540e\uff0c\u8bf7\u5c06 R0 \u653e\u5728\u4e0b\u65b9\u3002\n\n\n\n\n \u5c06 R0 \u503c\u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u51fa\u7684 R0 \u503c \n. \u5c06\u4f20\u611f\u5668\u66b4\u9732\u5728\u4e0a\u8ff0\u4efb\u4f55\u4e00\u79cd\u6c14\u4f53\u4e2d\u3002\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = (5.0-sensor_volt)/sensor_volt; // omit *RL\n\n          /*-Replace the name \nR0\n with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/R0;  // ratio = RS/R0\n          /*-----------------------------------------------------------------------*/\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.println(sensor_volt);\n    Serial.print(\nRS_ratio = \n);\n    Serial.println(RS_gas);\n    Serial.print(\nRs/R0 = \n);\n    Serial.println(ratio);\n\n    Serial.print(\n\\n\\n\n);\n\n    delay(1000);\n\n}\n\n\n\n\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\u3002\n\n\n\n\n\u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a 200ppm\uff0c\u6700\u5927\u503c\u4e3a 10000ppm\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 0.02% ~ 1% \u4e4b\u95f4\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u7387\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u539f\u7406\u56fe]\n \nGrove Gas Sensor - EAGLE (Schematic and Board) files\n\n\n[\u539f\u7406\u56fe]\n \nGrove Gas Sensor - PDF Schematic\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nMQ-5 Datasheet\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nHow to choose a Gas Sensor\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nWhat's LEL", 
            "title": "Grove-Gas Sensor MQ5"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/#_1", 
            "text": "\u68c0\u6d4b\u8303\u56f4\u5e7f  \u5de5\u4f5c\u7a33\u5b9a\u4e14\u5bff\u547d\u957f  \u54cd\u5e94\u5feb\uff0c\u7075\u654f\u5ea6\u9ad8", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u5355\u4f4d      VCC  \u5de5\u4f5c\u7535\u538b  4.9  5  5.1  V    PH  \u70ed\u80fd\u8017  0.5  -  800  mW    RL  \u8d1f\u8f7d\u7535\u963b   adjustable      RH  \u53d1\u70ed\u5668\u7535\u963b  -  31\u00b110%  -  \u03a9    Rs  \u654f\u7535\u963b  10  -  60  k\u03a9    Scope  \u76d1\u6d4b\u6d53\u5ea6  200  -  10000  ppm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/#_3", 
            "text": "\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\u3002  \u73a9\u5177\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/#_4", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u4f20\u611f\u5668\u3002 \u8fd9\u9700\u8981\u8fde\u63a5\u5230  Grove Base Shield  \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6a21\u62df\u91cf\u63d2\u69fd\u3002 \u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u4f7f\u7528 A0 \u6a21\u62df\u91cf\u5f15\u811a\u3002\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684 A0 \u7aef\u53e3\u3002  \u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8868\u6240\u793a\u7684\u8fde\u63a5\uff0c\u4f7f\u7528\u8df3\u7ebf\u5c06 Grove \u6a21\u5757\u76f4\u63a5\u8fde\u63a5\u5230 Arduino:     Arduino  Gas Sensor      5V  VCC    GND  GND    NC  NC    Analog A0  SIG     \u5f53\u6c14\u4f53\u6d53\u5ea6\u589e\u52a0\u65f6\uff0c\u6c14\u4f53\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7535\u538b\u589e\u52a0\u3002 \u7075\u654f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7535\u4f4d\u5668\u6765\u8c03\u8282\u3002  \u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u662f 24 \u5c0f\u65f6\u4ee5\u4e0a \u3002 \u6709\u5173 MQ-5 \u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605**\u8d44\u6e90**\u90e8\u5206\u4e2d\u63d0\u4f9b\u7684 data-sheet\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/#_5", 
            "text": "\u5c06 Grove - Gas Sensor(MQ5) \u8fde\u63a5\u5230 A0 \u7aef\u53e3\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/#_6", 
            "text": "\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u611f\u5668\u8fde\u63a5\u5230 A0 \u5f15\u811a\u3002\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u663e\u793a\u7684\u7535\u538b\u3002\u8be5\u503c\u53ef\u7528\u4f5c\u68c0\u6d4b\u6c14\u4f53\u6d53\u5ea6\u7684\u4efb\u4f55\u589e\u52a0/\u51cf\u5c11\u91cf\u7684\u9608\u503c\u3002   Note \n\u60a8\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u5de5\u5177\u6765\u627e\u5230\u5728\u591a\u79cd\u6c14\u4f53\u6761\u4ef6\u4e0b\u7684\u9608\u503c\u3002 \u7136\u540e\u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u9608\u503c\u3002  void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float sensorValue;\n\n    sensorValue = analogRead(A0);\n    sensor_volt = sensorValue/1024*5.0;\n\n    Serial.print( sensor_volt =  );\n    Serial.print(sensor_volt);\n    Serial.println( V );\n    delay(1000);\n}", 
            "title": "\u6c14\u4f53\u68c0\u6d4b\u7684\u57fa\u672c\u793a\u8303\u4f8b"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/#_7", 
            "text": "\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\u4e00\u79cd\u4e86\u89e3\u6c14\u4f53\u8fd1\u4f3c\u6d53\u5ea6\u7684\u65b9\u6cd5\u3002 \u6839\u636e MQ5 \u4f20\u611f\u5668\u7684\u6570\u636e\u8868\uff0c\u8fd9\u4e9b\u65b9\u7a0b\u5f0f\u5728\u6807\u51c6\u6761\u4ef6\u4e0b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5e76\u4e14\u6ca1\u6709\u88ab\u6821\u51c6\u3002 \u5b83\u53ef\u80fd\u4f1a\u6839\u636e\u6e29\u5ea6\u6216\u6e7f\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002   \u5c06\u6c14\u4f53\u4f20\u611f\u5668\u4fdd\u6301\u5728\u6e05\u6d01\u7684\u7a7a\u6c14\u73af\u5883\u4e2d\u3002 \u4e0a\u4f20\u7a0b\u5e8f\u5982\u4e0b:   void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float R0;  // Get the value of R0 via in H2\n    float sensorValue;\n\n        /*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x   100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n        /*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = (5.0-sensor_volt)/sensor_volt; // omit *RL\n    R0 = RS_air/6.5; // The ratio of RS/R0 is 6.5 in a clear air from Graph (Found using WebPlotDigitizer)\n\n    Serial.print( sensor_volt =  );\n    Serial.print(sensor_volt);\n    Serial.println( V );\n\n    Serial.print( R0 =  );\n    Serial.println(R0);\n    delay(1000);\n}   \u7136\u540e\u6253\u5f00 Arduino IDE \u7684\u4e32\u53e3\u76d1\u89c6\u5668\u3002 \u8bb0\u4e0b R0 \u7684\u503c\uff0c\u8fd9\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002 \u8bfb\u53d6\u7a33\u5b9a\u540e\uff0c\u8bf7\u5c06 R0 \u653e\u5728\u4e0b\u65b9\u3002    \u5c06 R0 \u503c\u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u51fa\u7684 R0 \u503c  . \u5c06\u4f20\u611f\u5668\u66b4\u9732\u5728\u4e0a\u8ff0\u4efb\u4f55\u4e00\u79cd\u6c14\u4f53\u4e2d\u3002  void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = (5.0-sensor_volt)/sensor_volt; // omit *RL\n\n          /*-Replace the name  R0  with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/R0;  // ratio = RS/R0\n          /*-----------------------------------------------------------------------*/\n\n    Serial.print( sensor_volt =  );\n    Serial.println(sensor_volt);\n    Serial.print( RS_ratio =  );\n    Serial.println(RS_gas);\n    Serial.print( Rs/R0 =  );\n    Serial.println(ratio);\n\n    Serial.print( \\n\\n );\n\n    delay(1000);\n\n}  \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\u3002   \u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a 200ppm\uff0c\u6700\u5927\u503c\u4e3a 10000ppm\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 0.02% ~ 1% \u4e4b\u95f4\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u7387\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002", 
            "title": "\u6d4b\u91cf\u00a0: \u8fd1\u4f3c\u503c"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ5/#_8", 
            "text": "[\u539f\u7406\u56fe]   Grove Gas Sensor - EAGLE (Schematic and Board) files  [\u539f\u7406\u56fe]   Grove Gas Sensor - PDF Schematic  [\u82af\u7247\u6570\u636e\u624b\u518c]   MQ-5 Datasheet  [\u5176\u4ed6\u8d44\u6e90]   How to choose a Gas Sensor  [\u5176\u4ed6\u8d44\u6e90]   What's LEL", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/", 
            "text": "Grove - Gas Sensor(MQ9)\u6a21\u5757\u53ef\u7528\u4e8e\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\uff08\u53ef\u4ee5\u5728\u5bb6\u91cc\u548c\u5de5\u5382\u4e2d\u4f7f\u7528\uff09\u3002 \u5b83\u9002\u7528\u4e8e\u68c0\u6d4b \nLPG\uff0cCO\uff0cCH4\n \u3002 \u7531\u4e8e\u5176\u7684\u7075\u654f\u5ea6\u9ad8\uff0c\u54cd\u5e94\u65f6\u95f4\u5feb\uff0c\u6240\u4ee5\u80fd\u591f\u65f6\u65f6\u8fdb\u884c\u6d4b\u91cf\u3002 \u4f20\u611f\u5668\u7684\u7075\u654f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u7535\u4f4d\u5668\u8fdb\u884c\u8c03\u6574\u3002\n\n\n\n\nNote\n\n\u8fd9\u4e2a\u4f20\u611f\u5668\u503c\u4ec5\u80fd\u591f\u53cd\u6620\u6c14\u4f53\u6d53\u5ea6\u5728\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u7684\u8fd1\u4f3c\u8d8b\u52bf\uff0c\u5b83\u4e0d\u8868\u793a\u7cbe\u786e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7a7a\u6c14\u4e2d\u67d0\u4e9b\u6210\u5206\u7684\u68c0\u6d4b\u901a\u5e38\u9700\u8981\u66f4\u52a0\u7cbe\u786e\u548c\u66f4\u52a0\u6602\u8d35\u7684\u4eea\u5668\uff0c\u8fd9\u4e0d\u80fd\u5355\u5355\u4f7f\u7528\u8fd9\u4e2a\u6c14\u4f53\u4f20\u611f\u5668\u6765\u5b8c\u6210\u3002 \u5982\u679c\u60a8\u7684\u9879\u76ee\u60f3\u8981\u975e\u5e38\u7cbe\u786e\u7684\u5f97\u5230\u6c14\u4f53\u6d53\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u6c14\u4f53\u4f20\u611f\u5668\u3002\n\n\n\n\n\n\n\n\n\n\n\u4f20\u611f\u5668\n\n\n\u68c0\u6d4b\u6c14\u4f53\u7c7b\u578b\n\n\n\u8d2d\u4e70\u5730\u5740\n\n\n\n\n\n\n\n\n\n\n\n\nMQ2\n\n\n\u53ef\u71c3\u6c14\u4f53\uff0c\u70df\u96fe\n\n\n\n\n\n\n\n\n\n\nMQ3\n\n\n\u9152\u7cbe\u84b8\u6c14\n\n\n\n\n\n\n\n\n\n\nMQ5\n\n\n\u77f3\u6cb9\u6c14\uff0c\u5929\u7136\u6c14\uff0c\u57ce\u9547\u7164\u6c14\n\n\n\n\n\n\n\n\n\n\nMQ9\n\n\n\u4e00\u6c27\u5316\u78b3\uff0c\u7164\u6c14\uff0c\u6db2\u5316\u6c14\n\n\n\n\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u68c0\u6d4b\u8303\u56f4\u5e7f\n\n\n\u80fd\u591f\u7a33\u5b9a\u548c\u957f\u65f6\u95f4\u4f7f\u7528\n\n\n\u54cd\u5e94\u5feb\uff0c\u7075\u654f\u5ea6\u9ad8\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u4ea7\u54c1\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\u6700\u5c0f\n\n\n\u6807\u51c6\n\n\n\u6700\u5927\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\nVCC\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n4.9\n\n\n5\n\n\n5.1\n\n\nV\n\n\n\n\n\n\nPH\n\n\n\u6d88\u8017\u80fd\u91cf\n\n\n0.5\n\n\n-\n\n\n340\n\n\nmW\n\n\n\n\n\n\nRL\n\n\n\u8d1f\u8f7d\u7535\u963b\n\n\n\n\n\u53ef\u8c03\u6574\u7684\n\n\n\n\n\n\n\n\n\n\nRH\n\n\n\u52a0\u70ed\u5668\u7535\u963b\n\n\n-\n\n\n33\u03a9\u00b15%\n\n\n-\n\n\n\u03a9\n\n\n\n\n\n\nRs\n\n\n\u611f\u5e94\u7535\u963b\n\n\n2\n\n\n-\n\n\n20000\n\n\n\u03a9\n\n\n\n\n\n\nCO / CH4 / LPG\u8303\u56f4\n\n\n\u68c0\u6d4b\u6d53\u5ea6\n\n\n200\n\n\n-\n\n\n1000/10000/10000\n\n\nppm\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\u3002\n\n\n\u73a9\u5177\u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\u8fd9\u662f\u4e00\u4e2a\u4ee5\u6a21\u62df\u91cf\u8f93\u51fa\u7684\u4f20\u611f\u5668\u3002 \u8fd9\u9700\u8981\u8fde\u63a5\u5230\nGrove Base Shield\n\u4e2d\u7684\u4e00\u4e2a\u6a21\u62df\u7aef\u53e3\u3002 \u672c\u6559\u7a0b\u4e2d\u7684\u793a\u4f8b\u4f7f\u7528\u7684\u662f \nA0\n \u6a21\u62df\u5f15\u811a\u3002 \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230Base Shield\u7684 \nA0\n \u7aef\u53e3\u3002\n\n\n\u4f7f\u7528\u8fde\u63a5\u7ebf\u5c06Grove\u6a21\u5757\u6309\u7167\u4e0b\u8868\u8fde\u63a5\u5230Arduino\uff1a\n\n\n\n\n\n\n\n\nArduino\n\n\nGas Sensor\n\n\n\n\n\n\n\n\n\n\n5V\n\n\nVCC\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nNC\n\n\nNC\n\n\n\n\n\n\nA0\n\n\nSIG\n\n\n\n\n\n\n\n\n\u5f53\u6c14\u4f53\u6d53\u5ea6\u589e\u52a0\u65f6\uff0c\u6c14\u4f53\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7535\u538b\u4f1a\u589e\u52a0\u3002 \u7075\u654f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7535\u4f4d\u5668\u6765\u8c03\u8282\u3002 \n\u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u9700\u8981\u8d85\u8fc724\u5c0f\u65f6\n\u3002 \u6709\u5173MQ-9\u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \n\u8d44\u6e90\u4e0b\u8f7d\n \u90e8\u5206\u4e2d\u63d0\u4f9b\u7684\u6570\u636e\u8868\u3002\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u5c06 Grove - Gas Sensor(MQ9)\u8fde\u63a5\u5230 \nA0\n \u7aef\u53e3\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\n\n\n\u6c14\u4f53\u68c0\u6d4b\uff1a\u57fa\u672c\u4f8b\u5b50\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u611f\u5668\u8fde\u63a5\u5230 \nA0\n \u5f15\u811a\u3002 \u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u5230\u7684\u7535\u538b\u53ef\u4ee5\u663e\u793a\u51fa\u6765\u3002 \u5e76\u4e14\u8be5\u503c\u53ef\u4ee5\u7528\u4f5c\u68c0\u6d4b\u6c14\u4f53\u6d53\u5ea6\u662f\u5426\u589e\u52a0/\u51cf\u5c11\u7684\u57fa\u51c6\u3002\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float sensorValue;\n\n    sensorValue = analogRead(A0);\n    sensor_volt = sensorValue/1024*5.0;\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.print(sensor_volt);\n    Serial.println(\nV\n);\n    delay(1000);\n}\n\n\n\n\n\u6d4b\u91cf\uff1a\u8fd1\u4f3c\u503c\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u4e86\u4e00\u79cd\u77e5\u9053\u6c14\u4f53\u8fd1\u4f3c\u6d53\u5ea6\u7684\u65b9\u6cd5\u3002 \u6839\u636eMQ9\u4f20\u611f\u5668\u7684\u6570\u636e\u8868\uff0c\u5728\u6807\u51c6\u6761\u4ef6\u4e0b\u5bf9\u8fd9\u4e9b\u65b9\u7a0b\u8ba1\u7b97\u7684\u7ed3\u679c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u6821\u51c6\u3002 \u4e0d\u8fc7\u5b83\u53ef\u80fd\u4f1a\u6839\u636e\u6e29\u5ea6\u6216\u6e7f\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002\n\n\n\n\n\u5c06\u6c14\u4f53\u4f20\u611f\u5668\u4fdd\u6301\u5728\u6e05\u6d01\u7684\u7a7a\u6c14\u73af\u5883\u4e2d\u3002 \u4e0a\u4f20\u4ee5\u4e0b\u7a0b\u5e8f\u3002\n\n\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float R0;  // Get the value of R0 via in LPG\n    float sensorValue;\n\n    /*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x \n 100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n    /*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = (5.0-sensor_volt)/sensor_volt; // omit *RL\n    R0 = RS_air/9.9; // The ratio of RS/R0 is 9.9 in LPG gas from Graph (Found using WebPlotDigitizer)\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.print(sensor_volt);\n    Serial.println(\nV\n);\n\n    Serial.print(\nR0 = \n);\n    Serial.println(R0);\n    delay(1000);\n\n}\n\n\n\n\n\n\n\u7136\u540e\u6253\u5f00Arduino IDE\u7684\u4e32\u884c\u76d1\u89c6\u5668\u3002 \u8bb0\u4e0b \nR0\n \u7684\u503c\uff0c\u8fd9\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002 \u8bfb\u53d6\u7a33\u5b9a\u540e\uff0c\u8bf7\u5c06 \nR0\n \u653e\u5728\u4e0b\u65b9\u3002\n\n\n\n\n\u5c06\u4e0b\u9762\u7684 \nR0\n \u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u8bd5\u7684 \nR0\n \u503c \n. \u5c06\u4e0b\u9762\u7684R0\u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u8bd5\u7684R0\u503c\u3002 \u5c06\u4f20\u611f\u5668\u653e\u7f6e\u5728\u4e0a\u8ff0\u4efb\u4f55\u4e00\u79cd\u6c14\u4f53\u4e2d\u3002\n\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = (5.0-sensor_volt)/sensor_volt; // omit *RL\n\n          /*-Replace the name \nR0\n with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/R0;  // ratio = RS/R0\n          /*-----------------------------------------------------------------------*/\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.println(sensor_volt);\n    Serial.print(\nRS_ratio = \n);\n    Serial.println(RS_gas);\n    Serial.print(\nRs/R0 = \n);\n    Serial.println(ratio);\n\n    Serial.print(\n\\n\\n\n);\n\n    delay(1000);\n\n}\n\n\n\n\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u7684\u6d53\u5ea6\u3002\n\n\n\n\n\u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a200ppm\uff0c\u6700\u5927\u503c\u4e3a10000ppm\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u52300.02\uff05\u301c1\uff05\u4e4b\u95f4\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u5f97\u5230\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u4f8b\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\nSuggest Reading / References\n\n\n\n\nHow to choose a Gas Sensor\n\n\nWhat's LEL\n\n\n\n\nSchematic\n\n\n\n\nGrove Gas Sensor - EAGLE (Schematic and Board) files\n\n\nGrove Gas Sensor - PDF Schematic\n\n\n\n\nDatasheet\n\n\n\n\nMQ-9 Datasheet", 
            "title": "Grove-Gas Sensor MQ9"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#_1", 
            "text": "\u68c0\u6d4b\u8303\u56f4\u5e7f  \u80fd\u591f\u7a33\u5b9a\u548c\u957f\u65f6\u95f4\u4f7f\u7528  \u54cd\u5e94\u5feb\uff0c\u7075\u654f\u5ea6\u9ad8    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570  \u6700\u5c0f  \u6807\u51c6  \u6700\u5927  \u5355\u4f4d      VCC  \u5de5\u4f5c\u7535\u538b  4.9  5  5.1  V    PH  \u6d88\u8017\u80fd\u91cf  0.5  -  340  mW    RL  \u8d1f\u8f7d\u7535\u963b   \u53ef\u8c03\u6574\u7684      RH  \u52a0\u70ed\u5668\u7535\u963b  -  33\u03a9\u00b15%  -  \u03a9    Rs  \u611f\u5e94\u7535\u963b  2  -  20000  \u03a9    CO / CH4 / LPG\u8303\u56f4  \u68c0\u6d4b\u6d53\u5ea6  200  -  1000/10000/10000  ppm", 
            "title": "\u4ea7\u54c1\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#_4", 
            "text": "\u6c14\u4f53\u6cc4\u6f0f\u68c0\u6d4b\u3002  \u73a9\u5177\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#_5", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u4ee5\u6a21\u62df\u91cf\u8f93\u51fa\u7684\u4f20\u611f\u5668\u3002 \u8fd9\u9700\u8981\u8fde\u63a5\u5230 Grove Base Shield \u4e2d\u7684\u4e00\u4e2a\u6a21\u62df\u7aef\u53e3\u3002 \u672c\u6559\u7a0b\u4e2d\u7684\u793a\u4f8b\u4f7f\u7528\u7684\u662f  A0  \u6a21\u62df\u5f15\u811a\u3002 \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230Base Shield\u7684  A0  \u7aef\u53e3\u3002  \u4f7f\u7528\u8fde\u63a5\u7ebf\u5c06Grove\u6a21\u5757\u6309\u7167\u4e0b\u8868\u8fde\u63a5\u5230Arduino\uff1a     Arduino  Gas Sensor      5V  VCC    GND  GND    NC  NC    A0  SIG     \u5f53\u6c14\u4f53\u6d53\u5ea6\u589e\u52a0\u65f6\uff0c\u6c14\u4f53\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7535\u538b\u4f1a\u589e\u52a0\u3002 \u7075\u654f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7535\u4f4d\u5668\u6765\u8c03\u8282\u3002  \u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u9700\u8981\u8d85\u8fc724\u5c0f\u65f6 \u3002 \u6709\u5173MQ-9\u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605  \u8d44\u6e90\u4e0b\u8f7d  \u90e8\u5206\u4e2d\u63d0\u4f9b\u7684\u6570\u636e\u8868\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#_6", 
            "text": "\u5c06 Grove - Gas Sensor(MQ9)\u8fde\u63a5\u5230  A0  \u7aef\u53e3\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#_7", 
            "text": "\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u611f\u5668\u8fde\u63a5\u5230  A0  \u5f15\u811a\u3002 \u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u5230\u7684\u7535\u538b\u53ef\u4ee5\u663e\u793a\u51fa\u6765\u3002 \u5e76\u4e14\u8be5\u503c\u53ef\u4ee5\u7528\u4f5c\u68c0\u6d4b\u6c14\u4f53\u6d53\u5ea6\u662f\u5426\u589e\u52a0/\u51cf\u5c11\u7684\u57fa\u51c6\u3002  void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float sensorValue;\n\n    sensorValue = analogRead(A0);\n    sensor_volt = sensorValue/1024*5.0;\n\n    Serial.print( sensor_volt =  );\n    Serial.print(sensor_volt);\n    Serial.println( V );\n    delay(1000);\n}", 
            "title": "\u6c14\u4f53\u68c0\u6d4b\uff1a\u57fa\u672c\u4f8b\u5b50"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#_8", 
            "text": "\u8fd9\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u4e86\u4e00\u79cd\u77e5\u9053\u6c14\u4f53\u8fd1\u4f3c\u6d53\u5ea6\u7684\u65b9\u6cd5\u3002 \u6839\u636eMQ9\u4f20\u611f\u5668\u7684\u6570\u636e\u8868\uff0c\u5728\u6807\u51c6\u6761\u4ef6\u4e0b\u5bf9\u8fd9\u4e9b\u65b9\u7a0b\u8ba1\u7b97\u7684\u7ed3\u679c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u6821\u51c6\u3002 \u4e0d\u8fc7\u5b83\u53ef\u80fd\u4f1a\u6839\u636e\u6e29\u5ea6\u6216\u6e7f\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002   \u5c06\u6c14\u4f53\u4f20\u611f\u5668\u4fdd\u6301\u5728\u6e05\u6d01\u7684\u7a7a\u6c14\u73af\u5883\u4e2d\u3002 \u4e0a\u4f20\u4ee5\u4e0b\u7a0b\u5e8f\u3002   void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float R0;  // Get the value of R0 via in LPG\n    float sensorValue;\n\n    /*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x   100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n    /*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = (5.0-sensor_volt)/sensor_volt; // omit *RL\n    R0 = RS_air/9.9; // The ratio of RS/R0 is 9.9 in LPG gas from Graph (Found using WebPlotDigitizer)\n\n    Serial.print( sensor_volt =  );\n    Serial.print(sensor_volt);\n    Serial.println( V );\n\n    Serial.print( R0 =  );\n    Serial.println(R0);\n    delay(1000);\n\n}   \u7136\u540e\u6253\u5f00Arduino IDE\u7684\u4e32\u884c\u76d1\u89c6\u5668\u3002 \u8bb0\u4e0b  R0  \u7684\u503c\uff0c\u8fd9\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002 \u8bfb\u53d6\u7a33\u5b9a\u540e\uff0c\u8bf7\u5c06  R0  \u653e\u5728\u4e0b\u65b9\u3002   \u5c06\u4e0b\u9762\u7684  R0  \u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u8bd5\u7684  R0  \u503c  . \u5c06\u4e0b\u9762\u7684R0\u66ff\u6362\u4e3a\u4e0a\u9762\u6d4b\u8bd5\u7684R0\u503c\u3002 \u5c06\u4f20\u611f\u5668\u653e\u7f6e\u5728\u4e0a\u8ff0\u4efb\u4f55\u4e00\u79cd\u6c14\u4f53\u4e2d\u3002  void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = (5.0-sensor_volt)/sensor_volt; // omit *RL\n\n          /*-Replace the name  R0  with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/R0;  // ratio = RS/R0\n          /*-----------------------------------------------------------------------*/\n\n    Serial.print( sensor_volt =  );\n    Serial.println(sensor_volt);\n    Serial.print( RS_ratio =  );\n    Serial.println(RS_gas);\n    Serial.print( Rs/R0 =  );\n    Serial.println(ratio);\n\n    Serial.print( \\n\\n );\n\n    delay(1000);\n\n}  \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u7684\u6d53\u5ea6\u3002   \u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a200ppm\uff0c\u6700\u5927\u503c\u4e3a10000ppm\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u52300.02\uff05\u301c1\uff05\u4e4b\u95f4\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u5f97\u5230\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u4f8b\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002", 
            "title": "\u6d4b\u91cf\uff1a\u8fd1\u4f3c\u503c"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#_9", 
            "text": "Suggest Reading / References   How to choose a Gas Sensor  What's LEL", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Gas_Sensor-MQ9/#schematic", 
            "text": "Grove Gas Sensor - EAGLE (Schematic and Board) files  Grove Gas Sensor - PDF Schematic   Datasheet   MQ-9 Datasheet", 
            "title": "Schematic"
        }, 
        {
            "location": "/Grove-Alcohol_Sensor/", 
            "text": "Grove - Alcohol Sensor \u662f\u9002\u7528\u4e8e Arduino \u6216 Seeeduino \u7684\u4e00\u4e2a\u5b8c\u6574\u9152\u7cbe\u4f20\u611f\u5668\u6a21\u5757\u3002\u5b83\u7531\u57fa\u4e8e \nMQ303A\n \u534a\u5bfc\u4f53\u9152\u7cbe\u4f20\u611f\u5668\u3002\u5b83\u5177\u6709\u826f\u597d\u7684\u7075\u654f\u5ea6\u53ef\u5bf9\u9152\u7cbe\u5feb\u901f\u53cd\u5e94\u3002\u9002\u5408\u505a\u547c\u5438\u9152\u7cbe\u6d4b\u9a8c\u3002\u8be5 Grove \u5177\u5907\u4e86 MQ303A \u7684\u6240\u6709\u5fc5\u8981\u7535\u8def\uff0c\u5982\u7535\u6e90\u8c03\u8282\u548c\u52a0\u70ed\u5668\u7535\u6e90\u3002\u8be5\u4f20\u611f\u5668\u8f93\u51fa\u7535\u538b\u4e0e\u7a7a\u6c14\u4e2d\u7684\u9152\u7cbe\u6d53\u5ea6\u6210\u53cd\u6bd4\u3002\n\n\n\n\n\n\nNote\n\n\u8bf7\u6ce8\u610f\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u6c14\u4f53\u6d53\u5ea6\u5728\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u7684\u8fd1\u4f3c\u8d8b\u52bf\uff0c\u5b83\u4e0d\u8868\u793a\u7cbe\u786e\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u7a7a\u6c14\u4e2d\u67d0\u4e9b\u90e8\u4ef6\u7684\u68c0\u6d4b\u901a\u5e38\u9700\u8981\u66f4\u7cbe\u786e\u548c\u66f4\u6602\u8d35\u7684\u4eea\u5668\uff0c\u8fd9\u4e9b\u4eea\u5668\u4e0d\u80fd\u7528\u5355\u4e2a\u6c14\u4f53\u4f20\u611f\u5668\u6765\u5b8c\u6210\u3002 \u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u4ee5\u975e\u5e38\u7cbe\u786e\u7684\u6c34\u5e73\u83b7\u5f97\u6c14\u4f53\u6d53\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u6c14\u4f53\u4f20\u611f\u5668\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b : 5V\n\n\n\u5de5\u4f5c\u7535\u6d41 : 120mA\n\n\n\u68c0\u6d4b\u6d53\u5ea6\u8303\u56f4 : 20-1000ppm\n\n\nGrove \u517c\u5bb9\u8fde\u63a5\u5668\u3002\n\n\n\u5bf9\u9152\u7cbe\u9ad8\u7075\u654f\u5ea6\u3002\n\n\n\u9152\u7cbe\u66b4\u9732\u540e\u5feb\u901f\u53cd\u5e94\u548c\u6062\u590d\u3002\n\n\n\u5bff\u547d\u957f\u3002\n\n\n\u7d27\u51d1\u7684\u5916\u5f62\u5c3a\u5bf8\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\nGrove \u4ea7\u54c1\u62e5\u6709\u4e00\u4e2a\u751f\u6001\u7cfb\u7edf\uff0c\u5e76\u4e14\u90fd\u6709\u4e00\u4e2a\u53ef\u4ee5\u63d2\u5165 \nGrove Base Shield\n \u7684\u8fde\u63a5\u5668\u3002 \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684 \nA0\n \u7aef\u53e3\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8df3\u7ebf\u5c06\u6c14\u4f53\u4f20\u611f\u5668\u8fde\u63a5\u5230 Arduino\uff0c\u800c\u4e0d\u9700\u8981 Base Shield\u3002\n\n\n\n\n\n\n\n\nArduino UNO\n\n\nAlcohol Sensor\n\n\n\n\n\n\n\n\n\n\n5V\n\n\nVCC\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nAnalog A1\n\n\nSCL\n\n\n\n\n\n\nAnalog A0\n\n\nDAT\n\n\n\n\n\n\n\n\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u4f20\u611f\u5668\u7684 \nDAT\n \u5f15\u811a\u83b7\u5f97\u5f53\u524d\u7684\u7535\u538b\u3002\n\u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u662f\u5927\u4e8e 48 \u5c0f\u65f6\n\u3002\u6709\u5173\u9152\u7cbe\u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003\u6570\u636e\u624b\u518c\u3002\n\n\n\n\n\u4e0b\u8f7d\u548c\u4e0a\u4f20\u4ee3\u7801\n\n\n\u5728\u5f97\u5230\u6c14\u4f53\u7684\u6d53\u5ea6\u4e4b\u524d\u6709\u4e24\u4e2a\u6b65\u9aa4\u9700\u8981\u5b8c\u6210\u3002\n\n\n\u9996\u5148\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u4f7f\u7528 \nA0\n \u5c06\u6a21\u5757\u4e0e Grove Shield \u8fde\u63a5\u3002\u5e76\u5c06\u4f20\u611f\u5668\u653e\u5728\u7a7a\u6c14\u4e2d\uff0c\u5e76\u4f7f\u7528\u4e0b\u9762\u7684\u7a0b\u5e8f\u3002\n\n\n#define heaterSelPin 15\n\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(heaterSelPin,OUTPUT);   // set the heaterSelPin as digital output.\n    digitalWrite(heaterSelPin,LOW); // Start to heat the sensor\n}\n\nvoid loop() {\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float sensorValue;\n\n/*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x \n 100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n/*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = sensor_volt/(5.0-sensor_volt); // omit *R16\n    Serial.print(\nsensor_volt = \n);\n    Serial.print(sensor_volt);\n    Serial.println(\nV\n);\n    Serial.print(\nRS_air = \n);\n    Serial.println(RS_air);\n    delay(1000);\n}\n\n\n\n\n\u7136\u540e\u6253\u5f00 Arduino IDE \u7684\u76d1\u89c6\u5668\uff0c\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u6570\u636e\u88ab\u6253\u5370\u51fa\u6765\uff0c\u8bb0\u4e0b RS_air \u7684\u503c\uff0c\u60a8\u9700\u8981\u5728\u4e0b\u9762\u7684\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\u3002\u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u60a8\u53ef\u4ee5\u9700\u8981\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u6d4b\u5f97 RS_air \u7684\u503c\u3002\n\n\n#define heaterSelPin 15\n\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(heaterSelPin,OUTPUT);   // set the heaterSelPin as digital output.\n    digitalWrite(heaterSelPin,LOW); // Start to heat the sensor\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = sensor_volt/5.0-sensor_volt; // omit *R16\n\n  /*-Replace the name \nR0\n with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/RS_air;  // ratio = RS/R0\n  /*-----------------------------------------------------------------------*/\n\n    Serial.print(\nsensor_volt = \n);\n    Serial.println(sensor_volt);\n    Serial.print(\nRS_ratio = \n);\n    Serial.println(RS_gas);\n    Serial.print(\nRs/R0 = \n);\n    Serial.println(ratio);\n\n    Serial.print(\n\\n\\n\n);\n    delay(1000);\n}\n\n\n\n\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u7684\u6d53\u5ea6\u3002\n\n\n\n\n\u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a 20ppm\uff0c\u6700\u5927\u503c\u4e3a 10000ppm\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ef\u4ee5\u5f97\u5230 0.002% ~ 1% \u4e4b\u95f4\u7684\u6c14\u4f53\u6d53\u5ea6\u3002\u7136\u800c\u6211\u4eec\u4e0d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u7387\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002\n\n\n\n\nNotes\n\n\n a. \u8be5\u503c\u5728 500 \u81f3 905 \u4e4b\u95f4\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u9ad8\u4e8e 650 \u7684\u503c\u8868\u793a\u9644\u8fd1\u7684\u9152\u7cbe\u84b8\u6c14\u3002\n\n\n b. \u4e00\u65e6\u66b4\u9732\u4e8e\u9152\u7cbe\u84b8\u6c7d\uff0c\u4f20\u611f\u5668\u503c\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u5b8c\u5168\u964d\u4f4e\u3002\n\n\n c. \u7136\u800c\uff0c\u4efb\u4f55\u65b0\u7684\u66dd\u5149\u5c06\u53d8\u73b0\u4e3a\u4f20\u611f\u5668\u503c\u7684\u77ac\u95f4\u589e\u52a0\u3002\n\n\n\n\n\n\n\nCaution\n\n\n a. \u9152\u7cbe\u4f20\u611f\u5668\u662f\u975e\u5e38\u7075\u654f\u7684\u534a\u5bfc\u4f53\u5668\u4ef6\u3002\u5c0f\u5fc3\u8f7b\u653e\u3002\n\n\n b. \u4e0d\u8981\u66b4\u9732\u4e8e\u6709\u673a\u7845\u84b8\u6c7d\uff0c\u78b1\u6027\u6216\u8150\u8680\u6027\u6c14\u4f53\u3002\n\n\n c. \u4e0d\u8981\u4f7f\u7528\u51b7\u51bb\u6c34\u6216\u5c06\u6c34\u6ea2\u51fa\u3002\n\n\n d. \u4fdd\u6301\u9002\u5f53\u7684\u5de5\u4f5c\u7535\u538b\u3002\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-Alcohol Sensor Eagle File\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-Alcohol Sensor v1.2 Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nSchematics in PDF Format\n\n\n[\u5176\u4ed6\u6587\u4ef6]\n \nHow to Choose A Gas Sensor\n\n\n[\u5176\u4ed6\u6587\u4ef6]\n \nMQ303A", 
            "title": "Grove-Alcohol Sensor"
        }, 
        {
            "location": "/Grove-Alcohol_Sensor/#_1", 
            "text": "\u8f93\u5165\u7535\u538b : 5V  \u5de5\u4f5c\u7535\u6d41 : 120mA  \u68c0\u6d4b\u6d53\u5ea6\u8303\u56f4 : 20-1000ppm  Grove \u517c\u5bb9\u8fde\u63a5\u5668\u3002  \u5bf9\u9152\u7cbe\u9ad8\u7075\u654f\u5ea6\u3002  \u9152\u7cbe\u66b4\u9732\u540e\u5feb\u901f\u53cd\u5e94\u548c\u6062\u590d\u3002  \u5bff\u547d\u957f\u3002  \u7d27\u51d1\u7684\u5916\u5f62\u5c3a\u5bf8\u3002    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Alcohol_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Alcohol_Sensor/#_2", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Alcohol_Sensor/#_3", 
            "text": "Grove \u4ea7\u54c1\u62e5\u6709\u4e00\u4e2a\u751f\u6001\u7cfb\u7edf\uff0c\u5e76\u4e14\u90fd\u6709\u4e00\u4e2a\u53ef\u4ee5\u63d2\u5165  Grove Base Shield  \u7684\u8fde\u63a5\u5668\u3002 \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684  A0  \u7aef\u53e3\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8df3\u7ebf\u5c06\u6c14\u4f53\u4f20\u611f\u5668\u8fde\u63a5\u5230 Arduino\uff0c\u800c\u4e0d\u9700\u8981 Base Shield\u3002     Arduino UNO  Alcohol Sensor      5V  VCC    GND  GND    Analog A1  SCL    Analog A0  DAT     \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f20\u611f\u5668\u7684  DAT  \u5f15\u811a\u83b7\u5f97\u5f53\u524d\u7684\u7535\u538b\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f20\u611f\u5668\u7684\u6700\u4f73\u9884\u70ed\u65f6\u95f4\u662f\u5927\u4e8e 48 \u5c0f\u65f6 \u3002\u6709\u5173\u9152\u7cbe\u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003\u6570\u636e\u624b\u518c\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Alcohol_Sensor/#_4", 
            "text": "\u5728\u5f97\u5230\u6c14\u4f53\u7684\u6d53\u5ea6\u4e4b\u524d\u6709\u4e24\u4e2a\u6b65\u9aa4\u9700\u8981\u5b8c\u6210\u3002  \u9996\u5148\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u4f7f\u7528  A0  \u5c06\u6a21\u5757\u4e0e Grove Shield \u8fde\u63a5\u3002\u5e76\u5c06\u4f20\u611f\u5668\u653e\u5728\u7a7a\u6c14\u4e2d\uff0c\u5e76\u4f7f\u7528\u4e0b\u9762\u7684\u7a0b\u5e8f\u3002  #define heaterSelPin 15\n\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(heaterSelPin,OUTPUT);   // set the heaterSelPin as digital output.\n    digitalWrite(heaterSelPin,LOW); // Start to heat the sensor\n}\n\nvoid loop() {\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float sensorValue;\n\n/*--- Get a average data by testing 100 times ---*/\n    for(int x = 0 ; x   100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n/*-----------------------------------------------*/\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = sensor_volt/(5.0-sensor_volt); // omit *R16\n    Serial.print( sensor_volt =  );\n    Serial.print(sensor_volt);\n    Serial.println( V );\n    Serial.print( RS_air =  );\n    Serial.println(RS_air);\n    delay(1000);\n}  \u7136\u540e\u6253\u5f00 Arduino IDE \u7684\u76d1\u89c6\u5668\uff0c\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u6570\u636e\u88ab\u6253\u5370\u51fa\u6765\uff0c\u8bb0\u4e0b RS_air \u7684\u503c\uff0c\u60a8\u9700\u8981\u5728\u4e0b\u9762\u7684\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\u3002\u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u60a8\u53ef\u4ee5\u9700\u8981\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u6d4b\u5f97 RS_air \u7684\u503c\u3002  #define heaterSelPin 15\n\nvoid setup() {\n    Serial.begin(9600);\n    pinMode(heaterSelPin,OUTPUT);   // set the heaterSelPin as digital output.\n    digitalWrite(heaterSelPin,LOW); // Start to heat the sensor\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = sensor_volt/5.0-sensor_volt; // omit *R16\n\n  /*-Replace the name  R0  with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/RS_air;  // ratio = RS/R0\n  /*-----------------------------------------------------------------------*/\n\n    Serial.print( sensor_volt =  );\n    Serial.println(sensor_volt);\n    Serial.print( RS_ratio =  );\n    Serial.println(RS_gas);\n    Serial.print( Rs/R0 =  );\n    Serial.println(ratio);\n\n    Serial.print( \\n\\n );\n    delay(1000);\n}  \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u56fe\u83b7\u5f97\u6c14\u4f53\u7684\u6d53\u5ea6\u3002   \u6839\u636e\u8be5\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5\u7684\u6700\u5c0f\u6d53\u5ea6\u4e3a 20ppm\uff0c\u6700\u5927\u503c\u4e3a 10000ppm\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ef\u4ee5\u5f97\u5230 0.002% ~ 1% \u4e4b\u95f4\u7684\u6c14\u4f53\u6d53\u5ea6\u3002\u7136\u800c\u6211\u4eec\u4e0d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u6bd4\u7387\u548c\u6d53\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u7ebf\u6027\u7684\u3002   Notes   a. \u8be5\u503c\u5728 500 \u81f3 905 \u4e4b\u95f4\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u9ad8\u4e8e 650 \u7684\u503c\u8868\u793a\u9644\u8fd1\u7684\u9152\u7cbe\u84b8\u6c14\u3002   b. \u4e00\u65e6\u66b4\u9732\u4e8e\u9152\u7cbe\u84b8\u6c7d\uff0c\u4f20\u611f\u5668\u503c\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u5b8c\u5168\u964d\u4f4e\u3002   c. \u7136\u800c\uff0c\u4efb\u4f55\u65b0\u7684\u66dd\u5149\u5c06\u53d8\u73b0\u4e3a\u4f20\u611f\u5668\u503c\u7684\u77ac\u95f4\u589e\u52a0\u3002    Caution   a. \u9152\u7cbe\u4f20\u611f\u5668\u662f\u975e\u5e38\u7075\u654f\u7684\u534a\u5bfc\u4f53\u5668\u4ef6\u3002\u5c0f\u5fc3\u8f7b\u653e\u3002   b. \u4e0d\u8981\u66b4\u9732\u4e8e\u6709\u673a\u7845\u84b8\u6c7d\uff0c\u78b1\u6027\u6216\u8150\u8680\u6027\u6c14\u4f53\u3002   c. \u4e0d\u8981\u4f7f\u7528\u51b7\u51bb\u6c34\u6216\u5c06\u6c34\u6ea2\u51fa\u3002   d. \u4fdd\u6301\u9002\u5f53\u7684\u5de5\u4f5c\u7535\u538b\u3002", 
            "title": "\u4e0b\u8f7d\u548c\u4e0a\u4f20\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-Alcohol_Sensor/#_5", 
            "text": "[Eagle\u6587\u4ef6]   Grove-Alcohol Sensor Eagle File  [Eagle\u6587\u4ef6]   Grove-Alcohol Sensor v1.2 Eagle File  [\u539f\u7406\u56fePDF]   Schematics in PDF Format  [\u5176\u4ed6\u6587\u4ef6]   How to Choose A Gas Sensor  [\u5176\u4ed6\u6587\u4ef6]   MQ303A", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Light_Sensor/", 
            "text": "Grove-Light\u4f20\u611f\u5668\u96c6\u6210\u4e86\u4e00\u4e2a\u5149\u7535\u963b\uff08\u4f9d\u8d56\u5149\u5f3a\u8c03\u6574\u7535\u963b\uff09\u6765\u68c0\u6d4b\u5149\u5f3a\u3002 \u5f53\u5149\u5f3a\u5ea6\u589e\u52a0\u65f6\uff0c\u5149\u7535\u963b\u7684\u7535\u963b\u964d\u4f4e\u3002 \u677f\u4e0a\u7684\u53ccOpAmp\u82af\u7247LM358\u4ea7\u751f\u4e0e\u5149\u5f3a\u5ea6\u76f8\u5bf9\u5e94\u7684\u7535\u538b\uff08\u5373\u57fa\u4e8e\u7535\u963b\u503c\uff09\u3002 \u8f93\u51fa\u4fe1\u53f7\u4e3a\u6a21\u62df\u503c\uff0c\u4eae\u5ea6\u8d8a\u4eae\uff0c\u503c\u8d8a\u5927\u3002\n\n\n\u8be5\u6a21\u5757\u53ef\u7528\u4e8e\u6784\u5efa\u5149\u63a7\u5f00\u5173\uff0c\u5373\u5728\u767d\u5929\u5173\u95ed\u706f\uff0c\u5e76\u5728\u591c\u95f4\u5f00\u542f\u706f\u3002\n\n\n\n\nWarning\n\n\n\u5149\u4f20\u611f\u5668\u503c\u4ec5\u53cd\u6620\u5149\u5f3a\u5ea6\u7684\u8fd1\u4f3c\u8d8b\u52bf\uff0c\u5b83\u4e0d\u8868\u793a\u786e\u5207\u7684\u660e\u4eae\u7a0b\u5ea6\u3002\n\n\n\n\n\u7248\u672c\u4fe1\u606f\n\n\n\u672c\u6587\u6863\u9002\u7528\u4e8e\u4ee5\u4e0b\u7248\u672c\u7684\u4ea7\u54c1\uff1a\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\u8d2d\u4e70\u5730\u5740\n\n\n\n\n\n\n\n\n\n\nGrove - Light Sensor 1.0\n\n\n2013\u5e744\u670828\u65e5\n\n\n\u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nGrove - Light Sensor(P)\n\n\n2014\n\n\n\u4e0d\u518d\u9500\u552e\n\n\n\n\n\n\nGrove - Light Sensor(P) V1.1\n\n\n2016\u5e748\u6708\n\n\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u6a21\u62df\u503c\u8f93\u51fa\n\n\n\u9ad8\u53ef\u9760\u6027\u548c\u7075\u654f\u5ea6\n\n\n\u5360\u5730\u9762\u79ef\u5c0f\n\n\n\u80fd\u591f\u8bc6\u522b\u66f4\u5e7f\u6cdb\u7684\u9891\u8c31\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3~5V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n0.5~3 mA\n\n\n\n\n\n\n\u54cd\u5e94\u65f6\u95f4\n\n\n20-30\u6beb\u79d2\n\n\n\n\n\n\n\u5cf0\u503c\u6ce2\u957f\n\n\n540 nm\n\n\n\n\n\n\n\u91cd\u91cf\n\n\n4 g\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\nNote\n\n\n\u8be5\u90e8\u5206\u57fa\u4e8eGrove-Light Sensor\uff08P\uff09V1.0\u3002\n\n\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793aGrove-Light\u4f20\u611f\u5668\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Light Sensor\n\n\nGrove - LED Bar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBase Shield\n\n\nmicro USB cable\n\n\nGrove cable\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u7531\u4e8eGrove\u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230Base Shield\u7684\u9002\u5f53\u7684Grove\u7aef\u53e3\u3002 \u5bf9\u4e8e\u6b64\u6f14\u793a\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e24\u4e2aGrove\u6a21\u5757\u3002\n\n\n\n\nGrove - \u5149\u4f20\u611f\u5668\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u6a21\u5757\uff0c\u8ba9\u6211\u4eec\u5c06\u5176\u8fde\u63a5\u5230 \nA0\n\u3002\n\n\nGrove - LED Bar\u662f\u4e00\u4e2a\u5e26\u4e24\u6761\u603b\u7ebf\u7684\u6570\u5b57\u8f93\u5165\u6a21\u5757\uff0c\u6211\u4eec\u5c06\u5176\u8fde\u63a5\u5230 \nD2\n\u3002\n\n\n\n\n\n\n\u4e0b\u8f7d\u63cf\u8ff0\n\n\nSeeeduino Stalker V3.1\u6709\u4e00\u4e9b\u793a\u4f8b\uff0c\u5176\u4e2d\u5305\u62ec\uff1a\n\n\n\n\n\u8bfb\u53d6\u4f20\u611f\u5668\u539f\u59cb\u503c\u7684\u793a\u4f8b\n\n\n\u8fd9\u4e2a\u677f\u5b50\u5165\u95e8\u7684\u793a\u4f8b\n\n\n\u79d8\u5bc6\u76d2\u6f14\u793a\u7684\u4f8b\u5b50\n\n\nLED\u6761\u5f62\u56fe\u5e93\n\n\n\n\n\n\n\u4e0b\u8f7d\u8fd9\u4e9b\u793a\u4f8b\u5e76\u653e\u5728\u4efb\u4f55\u5730\u65b9\uff0c\u6253\u5f00Arduino IDE\uff0c\nFile\uff08\u6587\u4ef6\uff09\n Sketchbook\uff08\u9879\u76ee\u6587\u4ef6\u5939\uff09\n\uff0c\u5e76\u5c06\u4f4d\u7f6e\u8def\u5f84\u590d\u5236\u5230 \nSketchbook\u4f4d\u7f6e\n\uff0c\u7136\u540e\u5355\u51fb\u786e\u5b9a\u3002 \u91cd\u65b0\u6253\u5f00Arduino IDE\uff0c\u7136\u540e\u8bbe\u7f6e\u7f16\u8f91\u9875\u9762\u3002\n\n\n\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230Arduino\n\n\n\u6253\u5f00Arduino IDE\uff0c \nFile\uff08\u6587\u4ef6\uff09\n Sketchbook\uff08\u9879\u76ee\u6587\u4ef6\u5939\uff09\n GettingStarted\n  \u6253\u5f00\u6b64\u90e8\u5206\u7684\u4ee3\u7801\u3002\n\n\n\u7136\u540e\u9009\u62e9\u6b63\u786e\u7684\u677f\u548cCOM\u7aef\u53e3\uff0c\u7136\u540e\u5355\u51fb\u4e0a\u4f20\u6309\u94ae\uff0c\u6b64\u8fc7\u7a0b\u5c06\u9700\u8981\u51e0\u79d2\u949f\u3002 \u7136\u540e\u8ba9\u6211\u4eec\u7528\u624b\u906e\u4f4f\u5149\u7ebf\u4f20\u611f\u5668\uff0c\u4f60\u4f1a\u53d1\u73b0LED\u706f\u6761\u51cf\u5c11\u4e86\u5b83\u7684LED\u3002\n\n\n\u83b7\u53d6\u539f\u59cb\u6570\u636e\n\n\n\u5982\u679c\u60a8\u4e0d\u60f3\u7528 Grove-LED Bar\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u53ef\u4ee5\u5c1d\u8bd5\u7684\u4f8b\u5b50\uff0c\u6253\u5f00Arduino IDE\uff0c \nFile\uff08\u6587\u4ef6\uff09\n Sketchbook\uff08\u9879\u76ee\u6587\u4ef6\u5939\uff09\n RawData\n \u6253\u5f00\u4ee3\u7801\uff0c\u5c06\u793a\u4f8b\u4e0a\u4f20\u5230Seeeduino V4\u540e\uff0c\u70b9\u51fb \nTool\uff08\u5de5\u5177\uff09\nSerial(\u4e32\u53e3\u7ed8\u56fe\u5668)\n \u4ee5\u83b7\u5f97\u4f20\u611f\u5668\u7684\u53d8\u5316\u66f2\u7ebf\u3002\n\n\n\n\n\u9879\u76ee\uff1a\u79d8\u5bc6\u7bb1\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u7531Grove - \u5149\u4f20\u611f\u5668 - \u79d8\u5bc6\u76d2\u5236\u4f5c\u7684\u9879\u76ee\u3002 \u9996\u5148\u4f60\u9700\u8981\u4e00\u4e2a\u76d2\u5b50\uff0c\u4e00\u4e2a\u7eb8\u76d2\uff0c\u4e00\u4e2a\u6728\u76d2\u5b50\uff0c\u4efb\u4f55\u4e00\u4e2a\u76d2\u5b50\u90fd\u53ef\u4ee5\u3002 \u628a\u4e1c\u897f\u653e\u5728\u76d2\u5b50\u91cc\uff0c\u56e0\u4e3a\u6211\u4eec\u628a\u5b83\u547d\u540d\u4e3a\u79d8\u5bc6\u76d2\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u60f3\u8ba9\u4efb\u4f55\u4eba\u6253\u5f00\u5b83\uff0c\u5426\u5219\u4f1a\u6709\u4e00\u4e2a\u95f9\u949f\u6765\u901a\u77e5\u4f60\u3002\n\n\n\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528LinkIt ONE\u4f5c\u4e3a\u63a7\u5236\u5668\uff0c\u5b83\u662f\u4e00\u4e2aArduino\u517c\u5bb9\u677f\uff0c\u7531\u4e30\u5bcc\u7684\u529f\u80fd\u7ec4\u6210\u3002 \u4f60\u9700\u8981\u4e0b\u9762\u7684\u4e1c\u897f\uff1a\n\n\n\n\nLinkIt ONE\n\n\nGrove - Light Sensor\n\n\nGrove - Base Shield\n\n\n\u4e00\u5f20SIM\u5361\n\n\n\n\n\u6211\u4eec\u5c06Grove - \u5149\u4f20\u611f\u5668\u8fde\u63a5\u5230A0\u6216Base Shield\uff0c\u5e76\u6253\u5f00Arduino IDE\uff0c \nFile(\u6587\u4ef6)\n Sketchbook\uff08\u9879\u76ee\u6587\u4ef6\u5939\uff09\n SecretBox\n\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u793a\u4f8b\u4e0a\u4f20\u5230LinkIt ONE\u3002 \u7136\u540e\u6709\u4eba\u6253\u5f00\u76d2\u5b50\uff0c\u706f\u4f1a\u68c0\u6d4b\u5230\u5b83\uff0c\u5e76\u53d1\u9001\u4e00\u4e2a\u77ed\u4fe1\u3002\n\n\n\n\n\u9879\u76ee Wooden Laser Gun\n\n\n\n\nInspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!\n\n\nThe Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.    \n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\nSketchbook for Light Sensor\n\n\nEagle File for Grove - Light Sensor V1.0\n\n\nEagle File for Grove - Light Sensor(P) V1.0\n\n\nEagle File for Grove - Light Sensor(P) V1.1\n\n\nLS06-M\u03a65 Reference Information\n\n\nLM358.PDF\n\n\nLight Sensor Library\n\n\nSchematic at Easyeda", 
            "title": "Grove-Light Sensor"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_1", 
            "text": "\u672c\u6587\u6863\u9002\u7528\u4e8e\u4ee5\u4e0b\u7248\u672c\u7684\u4ea7\u54c1\uff1a     \u7248\u672c  \u53d1\u5e03\u65e5\u671f  \u8d2d\u4e70\u5730\u5740      Grove - Light Sensor 1.0  2013\u5e744\u670828\u65e5  \u4e0d\u518d\u9500\u552e    Grove - Light Sensor(P)  2014  \u4e0d\u518d\u9500\u552e    Grove - Light Sensor(P) V1.1  2016\u5e748\u6708", 
            "title": "\u7248\u672c\u4fe1\u606f"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_2", 
            "text": "\u6a21\u62df\u503c\u8f93\u51fa  \u9ad8\u53ef\u9760\u6027\u548c\u7075\u654f\u5ea6  \u5360\u5730\u9762\u79ef\u5c0f  \u80fd\u591f\u8bc6\u522b\u66f4\u5e7f\u6cdb\u7684\u9891\u8c31    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_4", 
            "text": "\u9879\u76ee  \u53c2\u6570      \u5de5\u4f5c\u7535\u538b  3~5V    \u5de5\u4f5c\u7535\u6d41  0.5~3 mA    \u54cd\u5e94\u65f6\u95f4  20-30\u6beb\u79d2    \u5cf0\u503c\u6ce2\u957f  540 nm    \u91cd\u91cf  4 g", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_5", 
            "text": "Note  \u8be5\u90e8\u5206\u57fa\u4e8eGrove-Light Sensor\uff08P\uff09V1.0\u3002   \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793aGrove-Light\u4f20\u611f\u5668\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Light Sensor  Grove - LED Bar           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70        Base Shield  micro USB cable  Grove cable           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_6", 
            "text": "\u7531\u4e8eGrove\u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230Base Shield\u7684\u9002\u5f53\u7684Grove\u7aef\u53e3\u3002 \u5bf9\u4e8e\u6b64\u6f14\u793a\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e24\u4e2aGrove\u6a21\u5757\u3002   Grove - \u5149\u4f20\u611f\u5668\u662f\u4e00\u4e2a\u6a21\u62df\u8f93\u51fa\u6a21\u5757\uff0c\u8ba9\u6211\u4eec\u5c06\u5176\u8fde\u63a5\u5230  A0 \u3002  Grove - LED Bar\u662f\u4e00\u4e2a\u5e26\u4e24\u6761\u603b\u7ebf\u7684\u6570\u5b57\u8f93\u5165\u6a21\u5757\uff0c\u6211\u4eec\u5c06\u5176\u8fde\u63a5\u5230  D2 \u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_7", 
            "text": "Seeeduino Stalker V3.1\u6709\u4e00\u4e9b\u793a\u4f8b\uff0c\u5176\u4e2d\u5305\u62ec\uff1a   \u8bfb\u53d6\u4f20\u611f\u5668\u539f\u59cb\u503c\u7684\u793a\u4f8b  \u8fd9\u4e2a\u677f\u5b50\u5165\u95e8\u7684\u793a\u4f8b  \u79d8\u5bc6\u76d2\u6f14\u793a\u7684\u4f8b\u5b50  LED\u6761\u5f62\u56fe\u5e93    \u4e0b\u8f7d\u8fd9\u4e9b\u793a\u4f8b\u5e76\u653e\u5728\u4efb\u4f55\u5730\u65b9\uff0c\u6253\u5f00Arduino IDE\uff0c File\uff08\u6587\u4ef6\uff09  Sketchbook\uff08\u9879\u76ee\u6587\u4ef6\u5939\uff09 \uff0c\u5e76\u5c06\u4f4d\u7f6e\u8def\u5f84\u590d\u5236\u5230  Sketchbook\u4f4d\u7f6e \uff0c\u7136\u540e\u5355\u51fb\u786e\u5b9a\u3002 \u91cd\u65b0\u6253\u5f00Arduino IDE\uff0c\u7136\u540e\u8bbe\u7f6e\u7f16\u8f91\u9875\u9762\u3002", 
            "title": "\u4e0b\u8f7d\u63cf\u8ff0"
        }, 
        {
            "location": "/Grove-Light_Sensor/#arduino", 
            "text": "\u6253\u5f00Arduino IDE\uff0c  File\uff08\u6587\u4ef6\uff09  Sketchbook\uff08\u9879\u76ee\u6587\u4ef6\u5939\uff09  GettingStarted   \u6253\u5f00\u6b64\u90e8\u5206\u7684\u4ee3\u7801\u3002  \u7136\u540e\u9009\u62e9\u6b63\u786e\u7684\u677f\u548cCOM\u7aef\u53e3\uff0c\u7136\u540e\u5355\u51fb\u4e0a\u4f20\u6309\u94ae\uff0c\u6b64\u8fc7\u7a0b\u5c06\u9700\u8981\u51e0\u79d2\u949f\u3002 \u7136\u540e\u8ba9\u6211\u4eec\u7528\u624b\u906e\u4f4f\u5149\u7ebf\u4f20\u611f\u5668\uff0c\u4f60\u4f1a\u53d1\u73b0LED\u706f\u6761\u51cf\u5c11\u4e86\u5b83\u7684LED\u3002", 
            "title": "\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230Arduino"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_8", 
            "text": "\u5982\u679c\u60a8\u4e0d\u60f3\u7528 Grove-LED Bar\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u53ef\u4ee5\u5c1d\u8bd5\u7684\u4f8b\u5b50\uff0c\u6253\u5f00Arduino IDE\uff0c  File\uff08\u6587\u4ef6\uff09  Sketchbook\uff08\u9879\u76ee\u6587\u4ef6\u5939\uff09  RawData  \u6253\u5f00\u4ee3\u7801\uff0c\u5c06\u793a\u4f8b\u4e0a\u4f20\u5230Seeeduino V4\u540e\uff0c\u70b9\u51fb  Tool\uff08\u5de5\u5177\uff09 Serial(\u4e32\u53e3\u7ed8\u56fe\u5668)  \u4ee5\u83b7\u5f97\u4f20\u611f\u5668\u7684\u53d8\u5316\u66f2\u7ebf\u3002", 
            "title": "\u83b7\u53d6\u539f\u59cb\u6570\u636e"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_9", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u7531Grove - \u5149\u4f20\u611f\u5668 - \u79d8\u5bc6\u76d2\u5236\u4f5c\u7684\u9879\u76ee\u3002 \u9996\u5148\u4f60\u9700\u8981\u4e00\u4e2a\u76d2\u5b50\uff0c\u4e00\u4e2a\u7eb8\u76d2\uff0c\u4e00\u4e2a\u6728\u76d2\u5b50\uff0c\u4efb\u4f55\u4e00\u4e2a\u76d2\u5b50\u90fd\u53ef\u4ee5\u3002 \u628a\u4e1c\u897f\u653e\u5728\u76d2\u5b50\u91cc\uff0c\u56e0\u4e3a\u6211\u4eec\u628a\u5b83\u547d\u540d\u4e3a\u79d8\u5bc6\u76d2\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u60f3\u8ba9\u4efb\u4f55\u4eba\u6253\u5f00\u5b83\uff0c\u5426\u5219\u4f1a\u6709\u4e00\u4e2a\u95f9\u949f\u6765\u901a\u77e5\u4f60\u3002  \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528LinkIt ONE\u4f5c\u4e3a\u63a7\u5236\u5668\uff0c\u5b83\u662f\u4e00\u4e2aArduino\u517c\u5bb9\u677f\uff0c\u7531\u4e30\u5bcc\u7684\u529f\u80fd\u7ec4\u6210\u3002 \u4f60\u9700\u8981\u4e0b\u9762\u7684\u4e1c\u897f\uff1a   LinkIt ONE  Grove - Light Sensor  Grove - Base Shield  \u4e00\u5f20SIM\u5361   \u6211\u4eec\u5c06Grove - \u5149\u4f20\u611f\u5668\u8fde\u63a5\u5230A0\u6216Base Shield\uff0c\u5e76\u6253\u5f00Arduino IDE\uff0c  File(\u6587\u4ef6)  Sketchbook\uff08\u9879\u76ee\u6587\u4ef6\u5939\uff09  SecretBox \uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u793a\u4f8b\u4e0a\u4f20\u5230LinkIt ONE\u3002 \u7136\u540e\u6709\u4eba\u6253\u5f00\u76d2\u5b50\uff0c\u706f\u4f1a\u68c0\u6d4b\u5230\u5b83\uff0c\u5e76\u53d1\u9001\u4e00\u4e2a\u77ed\u4fe1\u3002", 
            "title": "\u9879\u76ee\uff1a\u79d8\u5bc6\u7bb1"
        }, 
        {
            "location": "/Grove-Light_Sensor/#wooden-laser-gun", 
            "text": "Inspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!  The Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.", 
            "title": "\u9879\u76ee Wooden Laser Gun"
        }, 
        {
            "location": "/Grove-Light_Sensor/#_10", 
            "text": "Sketchbook for Light Sensor  Eagle File for Grove - Light Sensor V1.0  Eagle File for Grove - Light Sensor(P) V1.0  Eagle File for Grove - Light Sensor(P) V1.1  LS06-M\u03a65 Reference Information  LM358.PDF  Light Sensor Library  Schematic at Easyeda", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-MOSFET/", 
            "text": "Grove - MOSFET\u4f7f\u60a8\u80fd\u591f\u5728\u5fae\u63a7\u5236\u5668\u4e0a\u4ee5\u4f4e\u7535\u538b\uff08\u4f8b\u59825V\uff09\u6765\u63a7\u5236\u9700\u8981\u66f4\u9ad8\u7535\u538b\u7684\u9879\u76ee\uff0c\u4f8b\u598215VDC\u3002 MOSFET\u4e5f\u662f\u4e00\u79cd\u5f00\u5173\uff0c\u4f46\u5176\u5f00\u5173\u9891\u7387\u53ef\u4ee5\u8fbe\u52305MHz\uff0c\u6bd4\u6b63\u5e38\u7684\u673a\u68b0\u5f0f\u7ee7\u7535\u5668\u5feb\u5f97\u591a\u3002 \u677f\u4e0a\u6709\u4e24\u4e2a\u87ba\u4e1d\u7aef\u53e3\u3002 \u4e00\u4e2a\u7528\u4e8e\u5916\u90e8\u7535\u6e90\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u8981\u63a7\u5236\u7684\u8bbe\u5907\u3002 \u5f53\u5b83\u5173\u95ed\u65f6\uff0cMOSFET\u7684\u7535\u529b\u5c06\u4ece\u4e00\u7aef\u4f20\u9012\u5230\u53e6\u4e00\u7aef\u3002 \u4f46\u662f\u5982\u679c\u5916\u90e8\u7535\u6e90\u4e0d\u5b58\u5728\uff0c\u60a8\u7684\u8bbe\u5907\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7Grove\u63a5\u53e3\u4ece\u5fae\u63a7\u5236\u5668\u83b7\u53d6\u7535\u529b\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\uff1a5V\n\n\n\u8f93\u5165\u7535\u538b\uff1a5\u301c15V\n\n\nMOSFET\u578b\u53f7\uff1aCJQ4435\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\nVin\uff1a\u63a5\u53d7\u7535\u6d41\u5c0f\u4e8e2A\u76845V\u301c15V\u7535\u6e90\u3002\n\n\nVout\uff1a\u5728\u8fd9\u91cc\u8fde\u63a5\u6267\u884c\u5668\u3002\n\n\n\u793a\u8303\n\n\n\u4f7f\u7528 Arduino\n\n\n\u8fd9\u91cc\u6211\u4eec\u6f14\u793a\u5982\u4f55\u4f7f\u7528Grove-MOSFET\u6765\u63a7\u5236\u7535\u673a\u3002 \u6211\u4eec\u4e3a\u5916\u90e8\u7535\u6e90\u63d0\u4f9b\u7535\u6e90\uff0c\u5982\u679c\u53d7\u63a7\u8bbe\u5907\u7684\u7535\u6d41\u5c0f\u4e8e300mA\uff0cSeeeduino\u4e5f\u53ef\u4ee5\u5b8c\u5168\u652f\u6301\u5b83\uff0c\u65e0\u9700\u989d\u5916\u7684\u7535\u6e90\u3002\n\n\n\n\n    // demo of Grove - MOSFET\n    // use pin 6 to control a motor\n\n    int motorPin = 6;\n\n    void setup()\n    {\n        Serial.begin(38400);\n        pinMode(motorPin, OUTPUT);\n        Serial.println(\nGrove - MOSFET Test Demo!\n);\n    }\n\n    void loop()\n    {\n        motorOnThenOffWithSpeed();\n        motorAcceleration();\n    }\n\n    void motorOnThenOffWithSpeed()\n    {\n        int onSpeed  = 200;                         // a number between 0 (stopped) and 255 (full speed)\n        int onTime   = 2500;\n        int offSpeed = 50;                          // a number between 0 (stopped) and 255 (full speed)\n        int offTime  = 1000;\n        analogWrite(motorPin, onSpeed);\n        delay(onTime);\n        analogWrite(motorPin, offSpeed);\n        delay(offTime);\n    }\n\n    void motorAcceleration()\n    {\n        int delayTime = 50;\n        for(int i=0; i\n256; i++)\n        {\n            analogWrite(motorPin, i);\n            delay(delayTime);\n        }\n\n        for(int i=255; i\n=0; i--)\n        {\n            analogWrite(motorPin, i);\n            delay(delayTime);\n        }\n    }\n\n\n\n\n\u4f7f\u7528Raspberry Pi\n\n\n1.\u4f60\u5e94\u8be5\u51c6\u5907\u4e00\u4e2araspberry pi \u548c  grovepi \u6216\u8005 grovepi+.\n\n\n2.\u60a8\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa\n\u8bf4\u660e\n \u8fdb\u884c\u914d\u7f6e\u3002\n\n\n3.\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u7528Grove\u6570\u636e\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u7aef\u53e3 \nD6\n\u3002\n\n\n\n\n4.\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\uff1a\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n-   \u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\n    nano grove_mosfet.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove MOSFET to analog port D6\n    # SIG,NC,VCC,GND\n    mosfet = 6\n\n    grovepi.pinMode(mosfet,\nOUTPUT\n)\n    time.sleep(1)\n\n    while True:\n        try:\n            # Full speed\n            grovepi.analogWrite(mosfet,255)\n            print \nfull speed\n\n            time.sleep(2)\n\n            # Half speed\n            grovepi.analogWrite(mosfet,128)\n            print \nhalf speed\n\n            time.sleep(2)\n\n            # Off\n            grovepi.analogWrite(mosfet,0)\n            print \noff\n\n            time.sleep(2)\n\n        except KeyboardInterrupt:\n            grovepi.analogWrite(mosfet,0)\n            break\n        except IOError:\n            print \nError\n\n\n\n\n5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n    sudo python grove_mosfet.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - MOSFET Eagle File\n\n\nGrove - MOSFET Schematic PDF\n\n\nCJQ4435 Datasheet\n\n\nMOSFET Wikipedia", 
            "title": "Grove-MOSFET"
        }, 
        {
            "location": "/Grove-MOSFET/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b\uff1a5V  \u8f93\u5165\u7535\u538b\uff1a5\u301c15V  MOSFET\u578b\u53f7\uff1aCJQ4435    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-MOSFET/#_2", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-MOSFET/#_3", 
            "text": "Vin\uff1a\u63a5\u53d7\u7535\u6d41\u5c0f\u4e8e2A\u76845V\u301c15V\u7535\u6e90\u3002  Vout\uff1a\u5728\u8fd9\u91cc\u8fde\u63a5\u6267\u884c\u5668\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-MOSFET/#_4", 
            "text": "", 
            "title": "\u793a\u8303"
        }, 
        {
            "location": "/Grove-MOSFET/#arduino", 
            "text": "\u8fd9\u91cc\u6211\u4eec\u6f14\u793a\u5982\u4f55\u4f7f\u7528Grove-MOSFET\u6765\u63a7\u5236\u7535\u673a\u3002 \u6211\u4eec\u4e3a\u5916\u90e8\u7535\u6e90\u63d0\u4f9b\u7535\u6e90\uff0c\u5982\u679c\u53d7\u63a7\u8bbe\u5907\u7684\u7535\u6d41\u5c0f\u4e8e300mA\uff0cSeeeduino\u4e5f\u53ef\u4ee5\u5b8c\u5168\u652f\u6301\u5b83\uff0c\u65e0\u9700\u989d\u5916\u7684\u7535\u6e90\u3002       // demo of Grove - MOSFET\n    // use pin 6 to control a motor\n\n    int motorPin = 6;\n\n    void setup()\n    {\n        Serial.begin(38400);\n        pinMode(motorPin, OUTPUT);\n        Serial.println( Grove - MOSFET Test Demo! );\n    }\n\n    void loop()\n    {\n        motorOnThenOffWithSpeed();\n        motorAcceleration();\n    }\n\n    void motorOnThenOffWithSpeed()\n    {\n        int onSpeed  = 200;                         // a number between 0 (stopped) and 255 (full speed)\n        int onTime   = 2500;\n        int offSpeed = 50;                          // a number between 0 (stopped) and 255 (full speed)\n        int offTime  = 1000;\n        analogWrite(motorPin, onSpeed);\n        delay(onTime);\n        analogWrite(motorPin, offSpeed);\n        delay(offTime);\n    }\n\n    void motorAcceleration()\n    {\n        int delayTime = 50;\n        for(int i=0; i 256; i++)\n        {\n            analogWrite(motorPin, i);\n            delay(delayTime);\n        }\n\n        for(int i=255; i =0; i--)\n        {\n            analogWrite(motorPin, i);\n            delay(delayTime);\n        }\n    }", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-MOSFET/#raspberry-pi", 
            "text": "1.\u4f60\u5e94\u8be5\u51c6\u5907\u4e00\u4e2araspberry pi \u548c  grovepi \u6216\u8005 grovepi+.  2.\u60a8\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \u8bf4\u660e  \u8fdb\u884c\u914d\u7f6e\u3002  3.\u786c\u4ef6\u8fde\u63a5   \u7528Grove\u6570\u636e\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u7aef\u53e3  D6 \u3002   4.\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\uff1a     cd yourpath/GrovePi/Software/Python/ \n-   \u627e\u5230\u8fd9\u884c\u4ee3\u7801     nano grove_mosfet.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove MOSFET to analog port D6\n    # SIG,NC,VCC,GND\n    mosfet = 6\n\n    grovepi.pinMode(mosfet, OUTPUT )\n    time.sleep(1)\n\n    while True:\n        try:\n            # Full speed\n            grovepi.analogWrite(mosfet,255)\n            print  full speed \n            time.sleep(2)\n\n            # Half speed\n            grovepi.analogWrite(mosfet,128)\n            print  half speed \n            time.sleep(2)\n\n            # Off\n            grovepi.analogWrite(mosfet,0)\n            print  off \n            time.sleep(2)\n\n        except KeyboardInterrupt:\n            grovepi.analogWrite(mosfet,0)\n            break\n        except IOError:\n            print  Error   5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b     sudo python grove_mosfet.py", 
            "title": "\u4f7f\u7528Raspberry Pi"
        }, 
        {
            "location": "/Grove-MOSFET/#_5", 
            "text": "Grove - MOSFET Eagle File  Grove - MOSFET Schematic PDF  CJQ4435 Datasheet  MOSFET Wikipedia", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Temperature_Sensor/", 
            "text": "Grove - \u6e29\u5ea6\u4f20\u611f\u5668\u4f7f\u7528\u70ed\u654f\u7535\u963b\u6765\u68c0\u6d4b\u73af\u5883\u6e29\u5ea6\u3002 \u5f53\u73af\u5883\u6e29\u5ea6\u964d\u4f4e\u65f6\uff0c\u70ed\u654f\u7535\u963b\u7684\u7535\u963b\u5c06\u589e\u52a0\u3002 \u8fd9\u662f\u6211\u4eec\u7528\u6765\u8ba1\u7b97\u73af\u5883\u6e29\u5ea6\u7684\u8fd9\u4e2a\u7279\u70b9\u3002 \u8be5\u4f20\u611f\u5668\u7684\u53ef\u68c0\u6d4b\u8303\u56f4\u4e3a-40 - 125\u00baC\uff0c\u7cbe\u5ea6\u4e3a\u00b11.5\u00baC\u3002\n\n\n\n\n\u4ea7\u54c1\u53c2\u6570\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b: 3.3 ~ 5V\n\n\n\n\n\n\n\u572825\u2103\u4e0b\uff0c\u6700\u5927\u989d\u5b9a\u529f\u7387\uff1a300mW\n\n\n\n\n\n\n\u96f6\u529f\u7387\u7535\u963b\uff1a10K\u03a9\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\uff1a-40\u301c+125\u2103\n\n\n\n\n\n\n\u793a\u8303\n\n\n\n\n\u4f7f\u7528Arduino\n\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u6e29\u5ea6\u4fe1\u606f\u3002\n\n\n1.\u4f7f\u75284\u9488Grove\u8fde\u63a5\u7ebf\u5c06\u6a21\u5757\u8fde\u63a5\u5230Grove - Basic Shield\u7684\u6a21\u62df\u7aef\u53e3 \nA0\n \u4e0a\u3002\n\n\n2.\u5c06Grove-Basic Shield\u63d2\u5165Arduino\u3002\n3.\u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06Arduino\u8fde\u63a5\u5230PC\u3002\n\n\n\n\n4.\u4e0b\u8f7d\u4ee5\u4e0b\u7a0b\u5e8f\u5230\u4f60\u7684\u677f\u5b50.\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n/*\n/* Grove - Temperature Sensor demo v1.0\n*  This sensor detects the environment temperature,\n*  Connect the signal of this sensor to A0, use the\n*  Serial monitor to get the result.\n*  By: http://www.seeedstudio.com\n*/\n#include \nlt;math.h\ngt;\nint a;\nfloat temperature;\nint B=3975;                  //B value of the thermistor\nfloat resistance;\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    a=analogRead(0);\n    resistance=(float)(1023-a)*10000/a; //get the resistance of the sensor;\n    temperature=1/(log(resistance/10000)/B+1/298.15)-273.15;//convert to temperature via datasheet\nnbsp;;\n    delay(1000);\n    Serial.print(\nCurrent temperature is \n);\n    Serial.println(temperature);\n}\n\n\n\n\n5.\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e32\u884c\u76d1\u89c6\u5668\u68c0\u67e5\u8bfb\u6570\u3002 \u9ed8\u8ba4\u5355\u4f4d\u4e3a\u6444\u6c0f\u5ea6\u3002\n\n\n\n\n\u4f5c\u4e3a\u53c2\u8003\uff0c\u4ee5\u4e0b\u662f\u6211\u4eec\u5728\u8be5\u4f20\u611f\u5668\u4e0a\u4f7f\u7528\u7684\u70ed\u654f\u7535\u963bTTC3A103 * 39H\u7684\u7535\u963b\u66f2\u7ebf\u3002 \u6e29\u5ea6\u8d8a\u9ad8\uff0c\u7535\u963b\u8d8a\u5c0f\u3002\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2araspberry pi\u548c\u4e00\u4e2agrovepi\u6216grovepi +\u3002\n\n\n2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\n\n\n3.\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u4f7f\u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u63d2\u5ea7 \nD3\n\u3002\n\n\n\n\n4.\u6d4f\u89c8\u6f14\u793a\u76ee\u5f55\uff1a\n\ncd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\u627e\u5230\u5230\u8fd9\u884c\u4ee3\u7801\n\n\n\n\nnano grove_temperature_sensor.py   # \nCtrl+x\n to exit #\n\n\n\nimport time\nimport grovepi\n\n#Connect the Grove Temperature Sensor to analog port A0\n#SIG,NC,VCC,GND\nsensor = 0\n\nwhile True:\ntry:\ntemp = grovepi.temp(sensor,\n1.1\n)\nprint \ntemp =\n, temp\ntime.sleep(.5)\n\nexcept KeyboardInterrupt:\nbreak\nexcept IOError:\nprint \nError\n\n\n\n\n5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n\nsudo python grove_temperature_sensor.py\n\n\n\n\n\u4f7f\u7528 Beaglebone Green\n\n\n\u8981\u5f00\u59cb\u7f16\u8f91BBG\u4e0a\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528Cloud9 IDE\u3002\n\n\n\u4e3a\u4e86\u719f\u6089Cloud9 IDE\uff0c\u6211\u4eec\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u7ec3\u4e60\uff0c\u5148\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u95ea\u70c1BeagleBone\u4e0a\u76844\u4e2a\u53ef\u7f16\u7a0bLED\u706f\uff0c\u8fd9\u662f\u5b66\u4e60\u7f16\u7a0b\u4e00\u4e2a\u597d\u7684\u5f00\u59cb\u3002\n\n\n\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528Cloud9 IDE\uff0c\u8bf7\u53c2\u8003 \n\u8fd9\u91cc\n\u3002\n\n\n\u7b2c\u4e00\u6b65:\n \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u201c\n+\n\u201d\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\n\n\n\n\n\n\n\u7b2c\u4e8c\u6b65:\n \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u9009\u9879\u5361\u4e2d\n\nfrom Adafruit_I2C import Adafruit_I2C\nimport time\n\nADDR_ADC121 = 0x50\n\nREG_ADDR_RESULT = 0x00\nREG_ADDR_ALERT = 0x01\nREG_ADDR_CONFIG = 0x02\nREG_ADDR_LIMITL = 0x03\nREG_ADDR_LIMITH = 0x04\nREG_ADDR_HYST = 0x05\nREG_ADDR_CONVL = 0x06\nREG_ADDR_CONVH = 0x07\n\ni2c = Adafruit_I2C(ADDR_ADC121)\n\nclass I2cAdc:\ndef __init__(self):\ni2c.write8(REG_ADDR_CONFIG, 0x20)\n\ndef read_adc(self):\n\nRead ADC data 0-4095.\n\ndata_list = i2c.readList(REG_ADDR_RESULT, 2)\n        #print \ndata list\n, data_list\ndata = ((data_list[0] \n 0x0f) \n 8 | data_list[1]) \n 0xfff\nreturn data\n\nif __name__ == \n__main__\n:\n    # Connect the Grove - I2C ADC to I2C Grove port of Beaglebone Green.\nadc = I2cAdc()\nwhile True:\nprint \nsensor value \n, adc.read_adc()\ntime.sleep(.2)\n\n\n\n\u7b2c\u4e09\u6b65:\n \u901a\u8fc7\u5355\u51fb\u540d\u79f0\u4e3a\u4ee5\u201cgrove_i2c_adc.py\u201d\u547d\u540d\u4fdd\u5b58\u6587\u4ef6\n\n\n\u7b2c\u56db\u6b65:\n \u521b\u5efa\u65b0\u6587\u4ef6\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230\u65b0\u9009\u9879\u5361\u4e2d\uff0c\u5e76\u4f7f\u7528.py\u6269\u5c55\u540d\u4fdd\u5b58\u3002\n\n\nimport time\nimport math\nimport grove_i2c_adc\nimport Adafruit_BBIO.GPIO as GPIO\n\nBUZZER = \nP9_22\n            # GPIO P9_22\nGPIO.setup(BUZZER, GPIO.OUT)\n\n# The threshold to turn the buzzer on 28 Celsius\nTHRESHOLD_TEMPERATURE = 28\n\nadc = grove_i2c_adc.I2cAdc()\n\n#   The argument in the read_temperature() method defines which Grove board(Grove Temperature Sensor) version you have connected.\n#   Defaults to \nv1.2\n. eg.\n#       temp = read_temperature(\nv1.0\n)          # B value = 3975\n#       temp = read_temperature(\nv1.1\n)          # B value = 4250\n#       temp = read_temperature(\nv1.2\n)          # B value = 4250\ndef read_temperature(model = \nv1.2\n):\n\nRead temperature values in Celsius from Grove Temperature Sensor\n\n    # each of the sensor revisions use different thermistors, each with their own B value constant\nif model == \nv1.2\n:\nbValue = 4250  # sensor v1.2 uses thermistor ??? (assuming NCP18WF104F03RC until SeeedStudio clarifies)\nelif model == \nv1.1\n:\nbValue = 4250  # sensor v1.1 uses thermistor NCP18WF104F03RC\nelse:\nbValue = 3975  # sensor v1.0 uses thermistor TTC3A103*39H\n\ntotal_value = 0\nfor index in range(20):\nsensor_value = adc.read_adc()\ntotal_value += sensor_value\ntime.sleep(0.05)\naverage_value = float(total_value / 20)\n\n    # Transform the ADC data into the data of Arduino platform.\nsensor_value_tmp = (float)(average_value / 4095 * 2.95 * 2 / 3.3 * 1023)\nresistance = (float)(1023 - sensor_value_tmp) * 10000 / sensor_value_tmp\ntemperature = round((float)(1 / (math.log(resistance / 10000) / bValue + 1 / 298.15) - 273.15), 2)\nreturn temperature\n\n# Function: If the temperature sensor senses the temperature that is up to the threshold you set in the code, the buzzer is ringing for 1s.\n# Hardware: Grove - I2C ADC, Grove - Temperature Sensor, Grove - Buzzer\n# Note: Use P9_22(UART2_RXD) as GPIO.\n# Connect the Grove Buzzer to UART Grove port of Beaglebone Green.\n# Connect the Grove - I2C ADC to I2C Grove port of Beaglebone Green, and then connect the Grove - Temperature Sensor to Grove - I2C ADC.\nif __name__ == \n__main__\n:\n\nwhile True:\ntry:\n            # Read temperature values in Celsius from Grove Temperature Sensor\ntemperature = read_temperature(\nv1.2\n)\n\n            # When the temperature reached predetermined value, buzzer is ringing.\n\nprint \ntemperature = \n, temperature\n\nexcept IOError:\nprint \nError\n\n\n\n\n\n\u7b2c5\u6b65:\n \u5c06Grove\u6e29\u5ea6\u4f20\u611f\u5668\u8fde\u63a5\u5230\u7684Grove I2C\u7aef\u53e3I2C ADC\u3002\n\n\n\u7b2c6\u6b65:\n \u8fd0\u884c\u4ee3\u7801\n\u4f60\u4f1a\u53d1\u73b0\u7ec8\u7aef\u6bcf2\u79d2\u8f93\u51fa\u4e00\u6b21\u6e29\u5ea6\u503c\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\nGrove - Temperature Sensor v1.0 Eagle File\n\n\n\n\n\n\nDemo code on github", 
            "title": "Grove-Temperature Sensor"
        }, 
        {
            "location": "/Grove-Temperature_Sensor/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b: 3.3 ~ 5V    \u572825\u2103\u4e0b\uff0c\u6700\u5927\u989d\u5b9a\u529f\u7387\uff1a300mW    \u96f6\u529f\u7387\u7535\u963b\uff1a10K\u03a9    \u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\uff1a-40\u301c+125\u2103", 
            "title": "\u4ea7\u54c1\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Temperature_Sensor/#_2", 
            "text": "", 
            "title": "\u793a\u8303"
        }, 
        {
            "location": "/Grove-Temperature_Sensor/#arduino", 
            "text": "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u6e29\u5ea6\u4fe1\u606f\u3002  1.\u4f7f\u75284\u9488Grove\u8fde\u63a5\u7ebf\u5c06\u6a21\u5757\u8fde\u63a5\u5230Grove - Basic Shield\u7684\u6a21\u62df\u7aef\u53e3  A0  \u4e0a\u3002  2.\u5c06Grove-Basic Shield\u63d2\u5165Arduino\u3002\n3.\u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06Arduino\u8fde\u63a5\u5230PC\u3002   4.\u4e0b\u8f7d\u4ee5\u4e0b\u7a0b\u5e8f\u5230\u4f60\u7684\u677f\u5b50.\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002  /*\n/* Grove - Temperature Sensor demo v1.0\n*  This sensor detects the environment temperature,\n*  Connect the signal of this sensor to A0, use the\n*  Serial monitor to get the result.\n*  By: http://www.seeedstudio.com\n*/\n#include  lt;math.h gt;\nint a;\nfloat temperature;\nint B=3975;                  //B value of the thermistor\nfloat resistance;\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    a=analogRead(0);\n    resistance=(float)(1023-a)*10000/a; //get the resistance of the sensor;\n    temperature=1/(log(resistance/10000)/B+1/298.15)-273.15;//convert to temperature via datasheet nbsp;;\n    delay(1000);\n    Serial.print( Current temperature is  );\n    Serial.println(temperature);\n}  5.\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e32\u884c\u76d1\u89c6\u5668\u68c0\u67e5\u8bfb\u6570\u3002 \u9ed8\u8ba4\u5355\u4f4d\u4e3a\u6444\u6c0f\u5ea6\u3002   \u4f5c\u4e3a\u53c2\u8003\uff0c\u4ee5\u4e0b\u662f\u6211\u4eec\u5728\u8be5\u4f20\u611f\u5668\u4e0a\u4f7f\u7528\u7684\u70ed\u654f\u7535\u963bTTC3A103 * 39H\u7684\u7535\u963b\u66f2\u7ebf\u3002 \u6e29\u5ea6\u8d8a\u9ad8\uff0c\u7535\u963b\u8d8a\u5c0f\u3002", 
            "title": "\u4f7f\u7528Arduino"
        }, 
        {
            "location": "/Grove-Temperature_Sensor/#raspberry-pi", 
            "text": "1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2araspberry pi\u548c\u4e00\u4e2agrovepi\u6216grovepi +\u3002  2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa  \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e  3.\u786c\u4ef6\u8fde\u63a5   \u4f7f\u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u63d2\u5ea7  D3 \u3002   4.\u6d4f\u89c8\u6f14\u793a\u76ee\u5f55\uff1a cd yourpath/GrovePi/Software/Python/   \u627e\u5230\u5230\u8fd9\u884c\u4ee3\u7801   nano grove_temperature_sensor.py   #  Ctrl+x  to exit #  import time\nimport grovepi\n\n#Connect the Grove Temperature Sensor to analog port A0\n#SIG,NC,VCC,GND\nsensor = 0\n\nwhile True:\ntry:\ntemp = grovepi.temp(sensor, 1.1 )\nprint  temp = , temp\ntime.sleep(.5)\n\nexcept KeyboardInterrupt:\nbreak\nexcept IOError:\nprint  Error   5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b  sudo python grove_temperature_sensor.py", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-Temperature_Sensor/#beaglebone-green", 
            "text": "\u8981\u5f00\u59cb\u7f16\u8f91BBG\u4e0a\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528Cloud9 IDE\u3002  \u4e3a\u4e86\u719f\u6089Cloud9 IDE\uff0c\u6211\u4eec\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u7ec3\u4e60\uff0c\u5148\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u95ea\u70c1BeagleBone\u4e0a\u76844\u4e2a\u53ef\u7f16\u7a0bLED\u706f\uff0c\u8fd9\u662f\u5b66\u4e60\u7f16\u7a0b\u4e00\u4e2a\u597d\u7684\u5f00\u59cb\u3002  \u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528Cloud9 IDE\uff0c\u8bf7\u53c2\u8003  \u8fd9\u91cc \u3002  \u7b2c\u4e00\u6b65:  \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u201c + \u201d\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002    \u7b2c\u4e8c\u6b65:  \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u9009\u9879\u5361\u4e2d from Adafruit_I2C import Adafruit_I2C\nimport time\n\nADDR_ADC121 = 0x50\n\nREG_ADDR_RESULT = 0x00\nREG_ADDR_ALERT = 0x01\nREG_ADDR_CONFIG = 0x02\nREG_ADDR_LIMITL = 0x03\nREG_ADDR_LIMITH = 0x04\nREG_ADDR_HYST = 0x05\nREG_ADDR_CONVL = 0x06\nREG_ADDR_CONVH = 0x07\n\ni2c = Adafruit_I2C(ADDR_ADC121)\n\nclass I2cAdc:\ndef __init__(self):\ni2c.write8(REG_ADDR_CONFIG, 0x20)\n\ndef read_adc(self): Read ADC data 0-4095. \ndata_list = i2c.readList(REG_ADDR_RESULT, 2)\n        #print  data list , data_list\ndata = ((data_list[0]   0x0f)   8 | data_list[1])   0xfff\nreturn data\n\nif __name__ ==  __main__ :\n    # Connect the Grove - I2C ADC to I2C Grove port of Beaglebone Green.\nadc = I2cAdc()\nwhile True:\nprint  sensor value  , adc.read_adc()\ntime.sleep(.2)  \u7b2c\u4e09\u6b65:  \u901a\u8fc7\u5355\u51fb\u540d\u79f0\u4e3a\u4ee5\u201cgrove_i2c_adc.py\u201d\u547d\u540d\u4fdd\u5b58\u6587\u4ef6  \u7b2c\u56db\u6b65:  \u521b\u5efa\u65b0\u6587\u4ef6\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230\u65b0\u9009\u9879\u5361\u4e2d\uff0c\u5e76\u4f7f\u7528.py\u6269\u5c55\u540d\u4fdd\u5b58\u3002  import time\nimport math\nimport grove_i2c_adc\nimport Adafruit_BBIO.GPIO as GPIO\n\nBUZZER =  P9_22             # GPIO P9_22\nGPIO.setup(BUZZER, GPIO.OUT)\n\n# The threshold to turn the buzzer on 28 Celsius\nTHRESHOLD_TEMPERATURE = 28\n\nadc = grove_i2c_adc.I2cAdc()\n\n#   The argument in the read_temperature() method defines which Grove board(Grove Temperature Sensor) version you have connected.\n#   Defaults to  v1.2 . eg.\n#       temp = read_temperature( v1.0 )          # B value = 3975\n#       temp = read_temperature( v1.1 )          # B value = 4250\n#       temp = read_temperature( v1.2 )          # B value = 4250\ndef read_temperature(model =  v1.2 ): Read temperature values in Celsius from Grove Temperature Sensor \n    # each of the sensor revisions use different thermistors, each with their own B value constant\nif model ==  v1.2 :\nbValue = 4250  # sensor v1.2 uses thermistor ??? (assuming NCP18WF104F03RC until SeeedStudio clarifies)\nelif model ==  v1.1 :\nbValue = 4250  # sensor v1.1 uses thermistor NCP18WF104F03RC\nelse:\nbValue = 3975  # sensor v1.0 uses thermistor TTC3A103*39H\n\ntotal_value = 0\nfor index in range(20):\nsensor_value = adc.read_adc()\ntotal_value += sensor_value\ntime.sleep(0.05)\naverage_value = float(total_value / 20)\n\n    # Transform the ADC data into the data of Arduino platform.\nsensor_value_tmp = (float)(average_value / 4095 * 2.95 * 2 / 3.3 * 1023)\nresistance = (float)(1023 - sensor_value_tmp) * 10000 / sensor_value_tmp\ntemperature = round((float)(1 / (math.log(resistance / 10000) / bValue + 1 / 298.15) - 273.15), 2)\nreturn temperature\n\n# Function: If the temperature sensor senses the temperature that is up to the threshold you set in the code, the buzzer is ringing for 1s.\n# Hardware: Grove - I2C ADC, Grove - Temperature Sensor, Grove - Buzzer\n# Note: Use P9_22(UART2_RXD) as GPIO.\n# Connect the Grove Buzzer to UART Grove port of Beaglebone Green.\n# Connect the Grove - I2C ADC to I2C Grove port of Beaglebone Green, and then connect the Grove - Temperature Sensor to Grove - I2C ADC.\nif __name__ ==  __main__ :\n\nwhile True:\ntry:\n            # Read temperature values in Celsius from Grove Temperature Sensor\ntemperature = read_temperature( v1.2 )\n\n            # When the temperature reached predetermined value, buzzer is ringing.\n\nprint  temperature =  , temperature\n\nexcept IOError:\nprint  Error   \u7b2c5\u6b65:  \u5c06Grove\u6e29\u5ea6\u4f20\u611f\u5668\u8fde\u63a5\u5230\u7684Grove I2C\u7aef\u53e3I2C ADC\u3002  \u7b2c6\u6b65:  \u8fd0\u884c\u4ee3\u7801\n\u4f60\u4f1a\u53d1\u73b0\u7ec8\u7aef\u6bcf2\u79d2\u8f93\u51fa\u4e00\u6b21\u6e29\u5ea6\u503c\u3002", 
            "title": "\u4f7f\u7528 Beaglebone Green"
        }, 
        {
            "location": "/Grove-Temperature_Sensor/#_3", 
            "text": "Grove - Temperature Sensor v1.0 Eagle File    Demo code on github", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Temperature_Sensor_V1.2/", 
            "text": "Grove - Temperature Sensor\u4f7f\u7528\n\u70ed\u654f\u7535\u963b\n \u6765\u68c0\u6d4b\u73af\u5883\u6e29\u5ea6\u3002 \u5f53\u73af\u5883\u6e29\u5ea6\u964d\u4f4e\u65f6\uff0c\u70ed\u654f\u7535\u963b\u7684\u7535\u963b\u5c06\u589e\u52a0\u3002 \u6211\u4eec\u5229\u7528\u8fd9\u4e2a\u7279\u6027\u5bf9\u73af\u5883\u6e29\u5ea6\u8fdb\u884c\u9884\u6d4b\u3002 \u8be5\u4f20\u611f\u5668\u7684\u53ef\u68c0\u6d4b\u8303\u56f4\u4e3a-40 - 125\u00baC\uff0c\u7cbe\u5ea6\u4e3a\u00b11.5\u00baC\n\n\n\n\nNote\n\n\n\u8fd9\u4e2awiki\u8d44\u6599\u7684\u5185\u5bb9\u9002\u7528\u4e8eGrove - Temperature sensorV1.1\uff0c\u540c\u6837\u4e5f\u9002\u7528\u4e8eV1.0\uff0c\u8bf7\u53c2\u9605\nGrove - Temperature Sensor\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b: 3.3 ~ 5V\n\n\n\u96f6\u529f\u7387\u7535\u963b: 100 K\u03a9\n\n\n\u7535\u963b\u5bb9\u5dee: \u00b11%\n\n\n\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4: -40 ~ +125 \u2103\n\n\n\u6807\u79f0B\u5e38\u6570\uff1a 4250 ~ 4299K\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u901a\u8fc7\u672c\u8282\u7684\u5b66\u4e60\u4e4b\u540e\uff0c\u60a8\u53ea\u9700\u8981\u901a\u8fc7\u51e0\u6b65\u5c31\u53ef\u4ee5\u4f7f\u7528Grove - Temperature Sensor V1.1 / 1.2\u5b8c\u6210\u9879\u76ee\u3002\n\n\n\u51c6\u5907\u5de5\u4f5c\n  \n\n\n\u73b0\u5728\u6211\u4eec\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528Grove - Temperature Sensor V1.1/1.2\u83b7\u5f97\u6570\u636e\uff0c\u4e0b\u9762\u662f\u6211\u4eec\u9700\u8981\u51c6\u5907\u7684\u6a21\u5757\u3002\n\n\n\n\nSeeeduino v4.2\n\n\n\n\nSeeeduino V4.2\u4e0eArduino\u662f\u5b8c\u5168\u517c\u5bb9\u7684\u3002\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528Arduino\uff0c\u8bf7\u53c2\u9605 \n\u8fd9\u91cc\n\u5f00\u59cb\u60a8\u7684Arduino\u65c5\u7a0b\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u53ea\u9700\u5c06Grove - Temperature Sensor\u8fde\u63a5\u5230Seeeduino v4.2\u7684A5\u7aef\u53e3\u4e0a\n\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n\u4e0b\u8f7d\u7a0b\u5e8f\n\n\n\u542f\u52a8Arduino IDE\uff0c\u7136\u540e\u5355\u51fbFile(\u6587\u4ef6)\nNew(\u65b0\u5efa)\u4ee5\u6253\u5f00\u65b0\u7684\u7f16\u8f91\u9875\u9762\u3002\n\n\n\u7136\u540e\u628a\u4e0b\u9762\u7684\u7a0b\u5e8f\u590d\u5236\u5230Arduino IDE\u4e0a:\n\n// Demo code for Grove - Temperature Sensor V1.1/1.2\n// Loovee @ 2015-8-26\n\n#include \nmath.h\n\n\nconst int B = 4275;               // B value of the thermistor\nconst int R0 = 100000;            // R0 = 100k\nconst int pinTempSensor = A5;     // Grove - Temperature Sensor connect to A5\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int a = analogRead(pinTempSensor);\n\n    float R = 1023.0/a-1.0;\n    R = R0*R;\n\n    float temperature = 1.0/(log(R/R0)/B+1/298.15)-273.15; // convert to temperature via datasheet\n\n    Serial.print(\ntemperature = \n);\n    Serial.println(temperature);\n\n    delay(100);\n}\n\n\n\n\u70b9\u51fbTools\uff08\u5de5\u5177\uff09\nBoard\uff08\u677f\uff09 \u9009\u62e9Arduino UNO \u5e76\u4e14\u9009\u62e9\u76f8\u5e94\u7684\u7aef\u53e3\n\n\n\u73b0\u5728\u70b9\u51fb\u4e0a\u4f20\uff08CTRL + U\uff09\u5f55\u5165\u6d4b\u8bd5\u4ee3\u7801\u3002 \u8bf7\u53c2\u8003\u8fd9\u91cc\u5728\u4e0a\u4f20\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u63d0\u793a\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u8bba\u575b\u4e0a\u8fdb\u884c\u8bc4\u8bba\uff0c\u5bfb\u6c42\u5e2e\u52a9\u3002\n\n\n\u770b\u5230\u7684\u7ed3\u679c\n\n\n\u4e0a\u4f20\u5b8c\u6210\u540e\uff0c\u6253\u5f00Arduino IDE\u7684Tools\uff08\u5de5\u5177\uff09\nSerial Serial Monitor\uff08\u4e32\u53e3\u76d1\u89c6\u5668\uff09\uff0c\u53ef\u4ee5\u83b7\u5f97\u6e29\u5ea6\u6570\u636e\uff1a\n\n\n\n\n\u53c2\u8003\n\n\n\n\n\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6e29\u5ea6\u7b97\u6cd5\u5982\u4f55\u6765\uff0c\u8bf7\u53c2\u8003\u4e0b\u56fe\uff1a\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\nSchematic at Easyeda\n\n\nGrove - Temperature Sensor v1.1 Eagle File\n\n\nGrove - Temperature Sensor v1.1.PDF\n\n\nTemperature Sensor datasheet", 
            "title": "Grove-Temperature Sensor-V1.2"
        }, 
        {
            "location": "/Grove-Temperature_Sensor_V1.2/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b: 3.3 ~ 5V  \u96f6\u529f\u7387\u7535\u963b: 100 K\u03a9  \u7535\u963b\u5bb9\u5dee: \u00b11%  \u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4: -40 ~ +125 \u2103  \u6807\u79f0B\u5e38\u6570\uff1a 4250 ~ 4299K    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Temperature_Sensor_V1.2/#_2", 
            "text": "\u901a\u8fc7\u672c\u8282\u7684\u5b66\u4e60\u4e4b\u540e\uff0c\u60a8\u53ea\u9700\u8981\u901a\u8fc7\u51e0\u6b65\u5c31\u53ef\u4ee5\u4f7f\u7528Grove - Temperature Sensor V1.1 / 1.2\u5b8c\u6210\u9879\u76ee\u3002  \u51c6\u5907\u5de5\u4f5c     \u73b0\u5728\u6211\u4eec\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528Grove - Temperature Sensor V1.1/1.2\u83b7\u5f97\u6570\u636e\uff0c\u4e0b\u9762\u662f\u6211\u4eec\u9700\u8981\u51c6\u5907\u7684\u6a21\u5757\u3002   Seeeduino v4.2   Seeeduino V4.2\u4e0eArduino\u662f\u5b8c\u5168\u517c\u5bb9\u7684\u3002\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528Arduino\uff0c\u8bf7\u53c2\u9605  \u8fd9\u91cc \u5f00\u59cb\u60a8\u7684Arduino\u65c5\u7a0b\u3002  \u786c\u4ef6\u8fde\u63a5  \u53ea\u9700\u5c06Grove - Temperature Sensor\u8fde\u63a5\u5230Seeeduino v4.2\u7684A5\u7aef\u53e3\u4e0a\n\u5982\u4e0b\u6240\u793a\uff1a   \u4e0b\u8f7d\u7a0b\u5e8f  \u542f\u52a8Arduino IDE\uff0c\u7136\u540e\u5355\u51fbFile(\u6587\u4ef6) New(\u65b0\u5efa)\u4ee5\u6253\u5f00\u65b0\u7684\u7f16\u8f91\u9875\u9762\u3002  \u7136\u540e\u628a\u4e0b\u9762\u7684\u7a0b\u5e8f\u590d\u5236\u5230Arduino IDE\u4e0a: // Demo code for Grove - Temperature Sensor V1.1/1.2\n// Loovee @ 2015-8-26\n\n#include  math.h \n\nconst int B = 4275;               // B value of the thermistor\nconst int R0 = 100000;            // R0 = 100k\nconst int pinTempSensor = A5;     // Grove - Temperature Sensor connect to A5\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int a = analogRead(pinTempSensor);\n\n    float R = 1023.0/a-1.0;\n    R = R0*R;\n\n    float temperature = 1.0/(log(R/R0)/B+1/298.15)-273.15; // convert to temperature via datasheet\n\n    Serial.print( temperature =  );\n    Serial.println(temperature);\n\n    delay(100);\n}  \u70b9\u51fbTools\uff08\u5de5\u5177\uff09 Board\uff08\u677f\uff09 \u9009\u62e9Arduino UNO \u5e76\u4e14\u9009\u62e9\u76f8\u5e94\u7684\u7aef\u53e3  \u73b0\u5728\u70b9\u51fb\u4e0a\u4f20\uff08CTRL + U\uff09\u5f55\u5165\u6d4b\u8bd5\u4ee3\u7801\u3002 \u8bf7\u53c2\u8003\u8fd9\u91cc\u5728\u4e0a\u4f20\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u63d0\u793a\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u8bba\u575b\u4e0a\u8fdb\u884c\u8bc4\u8bba\uff0c\u5bfb\u6c42\u5e2e\u52a9\u3002  \u770b\u5230\u7684\u7ed3\u679c  \u4e0a\u4f20\u5b8c\u6210\u540e\uff0c\u6253\u5f00Arduino IDE\u7684Tools\uff08\u5de5\u5177\uff09 Serial Serial Monitor\uff08\u4e32\u53e3\u76d1\u89c6\u5668\uff09\uff0c\u53ef\u4ee5\u83b7\u5f97\u6e29\u5ea6\u6570\u636e\uff1a", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Temperature_Sensor_V1.2/#_3", 
            "text": "\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6e29\u5ea6\u7b97\u6cd5\u5982\u4f55\u6765\uff0c\u8bf7\u53c2\u8003\u4e0b\u56fe\uff1a", 
            "title": "\u53c2\u8003"
        }, 
        {
            "location": "/Grove-Temperature_Sensor_V1.2/#_4", 
            "text": "Schematic at Easyeda  Grove - Temperature Sensor v1.1 Eagle File  Grove - Temperature Sensor v1.1.PDF  Temperature Sensor datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-High_Temperature_Sensor/", 
            "text": "\u70ed\u7535\u5076\u662f\u975e\u5e38\u654f\u611f\u7684\u8bbe\u5907\u3002\u5b83\u9700\u8981\u4e00\u4e2a\u5177\u6709\u51b7\u7aef\u8865\u507f\u7684\u826f\u597d\u653e\u5927\u5668\u3002Grove - High Temperatire Sensor \u91c7\u7528 K \u578b\u70ed\u7535\u5076\u548c\u70ed\u7535\u5076\u653e\u5927\u5668\uff0c\u901a\u8fc7\u70ed\u654f\u7535\u963b\u6d4b\u91cf\u73af\u5883\u6e29\u5ea6\u8fdb\u884c\u51b7\u7aef\u8865\u507f\u3002\u8be5\u4f20\u611f\u5668\u53ef\u68c0\u6d4b\u8303\u56f4\u4e3a -50-600\u00b0C\uff0c\u7cbe\u5ea6\u4e3a \u00b1(2.0% + 2\u00b0C)\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u7535\u538b \uff1a3.3 ~ 5V\n\n\n25\u2103\u6700\u5927\u989d\u5b9a\u529f\u7387 \uff1a300mW\n\n\n\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4 \uff1a-40 ~ +125 \u2103\n\n\n\u6e29\u5ea6\u6d4b\u91cf\u8303\u56f4\u662f (-50 ~ +600\u2103)\n\n\n\u653e\u5927\u5668\u8f93\u51fa\u7535\u538b\u8303\u56f4 (0 ~ 3.3 V) mv\n\n\n\u51b7\u7aef\u8865\u507f(\u73af\u5883\u6e29\u5ea6\u6d4b\u91cf)\n\n\n\u70ed\u7535\u5076\u6d4b\u6e29\u7cbe\u5ea6 + / - 2.0% (+ 2 \u2103)\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u6e29\u5ea6\u4fe1\u606f\u3002\n\n\n\u9700\u8981\u4e00\u4e2a Seeeduino V3.0 \u548c\u4e00\u4e2a Grove - High Temperature Sensor.\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\nA4\n \u548c \nA5\n \u8fde\u63a5 Seeeduino \u7684 I2C \u7ebf\u3002\u5c06\u4f20\u611f\u5668\u63d2\u5165 Seeeduino \u7684 I2C \u7aef\u53e3\u4ee5\u8bfb\u53d6\u6570\u636e\u3002\n\n\n\u4e0b\u8f7d\u548c\u4e0a\u4f20\u4ee3\u7801\n\n\n\u4ece \n\u8fd9\u91cc\n \u4e0b\u8f7d\u5e93\u6587\u4ef6\n\n\n\u7136\u540e\u5c06\u5e93\u63d0\u53d6\u5230 Arduino \u7684\u5e93\u6587\u4ef6\u5939\uff0c\u6253\u5f00\u793a\u4f8b\u6587\u4ef6\u5939\u4e2d\u7684\u6f14\u793a\u3002\n\n\n\u7136\u540e\u4e0a\u4f20\u5230\u60a8\u7684 Seeeduino.\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u5e76\u83b7\u5f97\u6570\u636e\n\n\n\u7136\u540e\uff0c\u6253\u5f00\u4f60\u7684\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6444\u6c0f\u6e29\u5ea6\u3002\n\n\n\n\nK type thermocouple indexing table\n\n\n\u4f5c\u4e3a\u53c2\u8003\uff0c\u4e0b\u9762\u662f K type thermocouple indexing table.\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - High Temperature Sensor Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nGrove - High Temperature Sensor PDF\n\n\n[\u5e93\u6587\u4ef6]\n \nHigh Temperature Sensor Library\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nDatasheet OPA333 PDF\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nDatasheet LMV358 PDF", 
            "title": "Grove-High Temperature Sensor"
        }, 
        {
            "location": "/Grove-High_Temperature_Sensor/#_1", 
            "text": "\u7535\u538b \uff1a3.3 ~ 5V  25\u2103\u6700\u5927\u989d\u5b9a\u529f\u7387 \uff1a300mW  \u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4 \uff1a-40 ~ +125 \u2103  \u6e29\u5ea6\u6d4b\u91cf\u8303\u56f4\u662f (-50 ~ +600\u2103)  \u653e\u5927\u5668\u8f93\u51fa\u7535\u538b\u8303\u56f4 (0 ~ 3.3 V) mv  \u51b7\u7aef\u8865\u507f(\u73af\u5883\u6e29\u5ea6\u6d4b\u91cf)  \u70ed\u7535\u5076\u6d4b\u6e29\u7cbe\u5ea6 + / - 2.0% (+ 2 \u2103)    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-High_Temperature_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-High_Temperature_Sensor/#_2", 
            "text": "\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u4f20\u611f\u5668\u8bfb\u53d6\u6e29\u5ea6\u4fe1\u606f\u3002  \u9700\u8981\u4e00\u4e2a Seeeduino V3.0 \u548c\u4e00\u4e2a Grove - High Temperature Sensor.", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-High_Temperature_Sensor/#_3", 
            "text": "A4  \u548c  A5  \u8fde\u63a5 Seeeduino \u7684 I2C \u7ebf\u3002\u5c06\u4f20\u611f\u5668\u63d2\u5165 Seeeduino \u7684 I2C \u7aef\u53e3\u4ee5\u8bfb\u53d6\u6570\u636e\u3002", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-High_Temperature_Sensor/#_4", 
            "text": "\u4ece  \u8fd9\u91cc  \u4e0b\u8f7d\u5e93\u6587\u4ef6  \u7136\u540e\u5c06\u5e93\u63d0\u53d6\u5230 Arduino \u7684\u5e93\u6587\u4ef6\u5939\uff0c\u6253\u5f00\u793a\u4f8b\u6587\u4ef6\u5939\u4e2d\u7684\u6f14\u793a\u3002  \u7136\u540e\u4e0a\u4f20\u5230\u60a8\u7684 Seeeduino.", 
            "title": "\u4e0b\u8f7d\u548c\u4e0a\u4f20\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-High_Temperature_Sensor/#_5", 
            "text": "\u7136\u540e\uff0c\u6253\u5f00\u4f60\u7684\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6444\u6c0f\u6e29\u5ea6\u3002", 
            "title": "\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u5e76\u83b7\u5f97\u6570\u636e"
        }, 
        {
            "location": "/Grove-High_Temperature_Sensor/#k-type-thermocouple-indexing-table", 
            "text": "\u4f5c\u4e3a\u53c2\u8003\uff0c\u4e0b\u9762\u662f K type thermocouple indexing table.", 
            "title": "K type thermocouple indexing table"
        }, 
        {
            "location": "/Grove-High_Temperature_Sensor/#_6", 
            "text": "[Eagle\u6587\u4ef6]   Grove - High Temperature Sensor Eagle File  [\u539f\u7406\u56fePDF]   Grove - High Temperature Sensor PDF  [\u5e93\u6587\u4ef6]   High Temperature Sensor Library  [\u82af\u7247\u6570\u636e\u624b\u518c]   Datasheet OPA333 PDF  [\u82af\u7247\u6570\u636e\u624b\u518c]   Datasheet LMV358 PDF", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Infrared_Temperature_Sensor/", 
            "text": "\u7ea2\u5916\u6e29\u5ea6\u4f20\u611f\u5668\u662f\u975e\u63a5\u89e6\u5f0f\u6e29\u5ea6\u6d4b\u91cf\u6a21\u578b\u3002 \u5b83\u7531 116 \u4e2a\u70ed\u7535\u5076\u5143\u4ef6\u4e32\u8054\u5728\u4e00\u4e2a\u6d6e\u52a8\u7684\u5fae\u578b\u819c\u7247\u4e0a\uff0c\u4f20\u611f\u5668\u7684\u9ed1\u8272\u8868\u9762\u5f88\u597d\u5730\u5438\u6536\u4e86\u5165\u5c04\u7684\u70ed\u7ea2\u5916\u8f90\u5c04\uff0c\u53ef\u80fd\u5728\u8f93\u51fa\u65f6\u89e6\u53d1\u7535\u538b\u54cd\u5e94\u3002\u8be5\u4f20\u611f\u5668\u6839\u636e\u76ee\u6807\u6e29\u5ea6\u8f93\u51fa\u4e00\u4e2a\u6a21\u62df\u7535\u538b (0~1.1V) \u3002\n\n\n\u65e7\u7248\u672c: v0.92.\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u7535\u538b : 3-5V\n\n\n\u6d4b\u91cf\u7535\u6d41\u4f9b\u5e94 : 160-200 uA\n\n\n\u6d4b\u91cf\u8303\u56f4 : -10~100\u00b0C\n\n\n\u5360\u7528\u65f6\u95f4 : 2S\n\n\n\u5de5\u4f5c\u6e29\u5ea6 : -10~80 \u00b0C\n\n\n\u50a8\u5b58\u6e29\u5ea6 : -35-80 \u00b0C\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u4ee5\u4e0b\u8349\u56fe\u6f14\u793a\u4e86\u6d4b\u91cf\u4f20\u611f\u5668\u5468\u56f4\u6e29\u5ea6\u548c\u4f20\u611f\u5668\u524d\u65b9\u76ee\u6807\u6e29\u5ea6\u7684\u7b80\u5355\u5e94\u7528\u3002\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u3002\n\n\n\n\n\u4f7f\u7528 Grove-Base Shield \u7684\u7aef\u53e3 \nA0\n \u548c \nA1\n \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Seeeduino\u3002\n\n\n\u4e0b\u8f7d \n\u6f14\u793a\u4ee3\u7801\n \u5e76\u6253\u5f00\u3002\n\n\n\n\n\u6d4b\u91cf\u6e29\u5ea6\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u7b80\u5355\u7684\u8bbe\u7f6e\u3002\u6309\u7167\u4e0b\u9762\u7684\u8bf4\u660e\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5c06\u83b7\u5f97\u51c6\u786e\u7684\u7ed3\u679c\u3002\n\n\n\u6b65\u9aa4 1: \u8c03\u8282\u4f20\u611f\u5668\u7535\u538b\n\n\n\u4e0a\u4f20\u6f14\u793a\u7a0b\u5e8f\u540e\uff0c\u5c06\u4f20\u611f\u5668\u7f6e\u4e8e\u6b63\u5e38\u73af\u5883\u4e2d 5 \u5206\u949f\u4ee5\u4e0a\uff0c\u4f7f\u4f20\u611f\u5668\u6e29\u5ea6\u4e0e\u5468\u56f4\u6e29\u5ea6\u4e00\u81f4\u3002\u7136\u540e\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u68c0\u67e5\u4f20\u611f\u5668\u8f93\u51fa\u7684\u7535\u538b\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5f53\u73af\u5883\u6e29\u5ea6\u7b49\u4e8e\u6e29\u5ea6\u4f20\u611f\u5668\u65f6\uff0c\u7ea2\u5916\u7ebf\u4f20\u611f\u5668 (TP-538U) \u8f93\u51fa\u4e3a 0V\uff0c\u7531\u786c\u4ef6\u8c03\u8282\u504f\u7f6e\u5728 0.5V \u7684\u53c2\u8003\u7535\u538b\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4f20\u611f\u5668\u7535\u538b\u4e3a 0.014V\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u60a8\u4ece\u7a0b\u5e8f\u4e2d\u7684\u4e32\u884c\u76d1\u89c6\u5668\u83b7\u5f97\u7684\u504f\u79fb _vol \u503c\u66f4\u6539\u4e3a 0.014 \u5373\u53ef\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 2: \u8c03\u6574\u4f20\u611f\u5668\u68c0\u6d4b\u8ddd\u79bb\n\n\n\u6839\u636e\u6211\u4eec\u7684\u5b9e\u9a8c\uff0c\u4f20\u611f\u5668\u7684\u540d\u4e49\u6d4b\u91cf\u8ddd\u79bb\u662f 9CM\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u6240\u6709\u7684\u4f20\u611f\u5668\u90fd\u5177\u6709\u76f8\u540c\u7684\u7279\u6027\u3002\u6240\u4ee5\u5982\u679c\u60f3\u5f97\u5230\u51c6\u786e\u7684\u7ed3\u679c\uff0c\u9700\u8981\u7528\u51b0\u6c34\u6df7\u5408\u6db2\u8c03\u8282 0\u2103\uff0c\u7528\u5f00\u6c34\u8c03\u8282 100\u2103\u3002\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f97\u4f20\u611f\u5668\u7684\u6709\u6548\u8ddd\u79bb\u3002\n\n\n\u5177\u4f53\u7684\u6d4b\u91cf\u65b9\u6cd5\u662f\u5728\u4e00\u4e2a\u9ed1\u8272\u7684\u5bb9\u5668\u91cc\u88c5\u6ee1\u51b0\u548c\u6c34\uff0c\u8fd9\u4e2a\u5bb9\u5668\u6709\u4e00\u4e2a\u5e73\u5766\u7684\u8868\u9762\u3002\u7b49\u5f85\u5bb9\u5668\u4e0b\u964d\u5230 0\u2103\uff0c\u5c06\u4f20\u611f\u5668\u4fdd\u6301\u5728\u7269\u4f53\u4e4b\u95f4 9CM\uff0c\u5411\u524d\u6216\u5411\u540e\u79fb\u52a8\u4f20\u611f\u5668\u5e76\u68c0\u67e5\u7ed3\u679c\uff0c\u5982\u679c\u8f93\u51fa\u4e3a 0\u2103\uff0c\u8bb0\u4e0b\u8ddd\u79bb\u503c\u3002\u540c\u6837\u7684\u65b9\u6cd5\u6765\u68c0\u67e5\u5f00\u6c34\u3002\u5f53\u4f60\u83b7\u5f97\u4e00\u5bf9\u503c\u65f6\uff0c\u505a\u4e00\u4e2a\u5e73\u5747\u7684\u8ba1\u7b97\u5904\u7406\u3002\u4f60\u53ef\u4ee5\u5f00\u59cb\u6d4b\u91cf\u4f60\u521a\u521a\u83b7\u5f97\u7684\u989d\u5b9a\u8ddd\u79bb\u3002\n\n\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6d4b\u91cf\u4f20\u611f\u5668\u5468\u56f4\u7684\u6e29\u5ea6\u3002\u4f20\u611f\u5668\u9002\u7528\u4e8e\u540d\u4e49\u8ddd\u79bb\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u5176\u4ed6\u8ddd\u79bb\uff0c\u4f46\u8ddd\u79bb - \u6e29\u5ea6\u56fe\u65e2\u4e0d\u662f\u4f20\u611f\u5668\u7684\u5236\u9020\u5546\u83b7\u5f97\u7684\uff0c\u4e5f\u4e0d\u662f\u6211\u4eec\u83b7\u5f97\u7684\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0a\u4e24\u6761\u8bf4\u660e\u8fdb\u884c\u7ed8\u5236\u3002\u6211\u4eec\u5728\u6f14\u793a\u4ee3\u7801\u4e2d\u4fdd\u7559\u53d8\u91cf \n\"temperature_range\"\n \u3002\u6211\u4eec\u5047\u8bbe\u76ee\u6807\u8ddd\u79bb\u662f 3 \u5398\u7c73\uff0c\u4f60\u6d4b\u91cf\u7684\u53ef\u80fd\u4f1a\u591a\u4e8e\u6216\u5c11\u4e8e 5 \u5398\u7c73\u3002\u5e0c\u671b\u4f60\u4f7f\u7528\u6109\u5feb\u3002\n\n\n\n\n\u9ad8\u7ea7\u5e94\u7528\u7a0b\u5e8f\u793a\u4f8b:\n\n\n\n\n\n\nNote\n\n\n \u6f14\u793a\u4ee3\u7801\u4e0d\u652f\u6301 Atmega168 \u5185\u6838\n\n\n\u4e3a\u4e86\u83b7\u5f97\u51c6\u786e\u7684\u6d4b\u91cf\u7ed3\u679c\uff0c\u8ddd\u79bb (D) \u548c\u76ee\u6807\u5c42\u6570 (S) \u7387 D\uff1aS \u5fc5\u987b\u5c0f\u4e8e 0.5\u3002\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-Infrared Temperature Sensor V0.9 Eagle File\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-Infrared Temperature Sensor V1.0 Eagle File\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nOTP-538U Datasheet\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nDemo Code\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nInfrared Temperature Demo Code with SerialLCD", 
            "title": "Grove-Infrared Temperature Sensor"
        }, 
        {
            "location": "/Grove-Infrared_Temperature_Sensor/#_1", 
            "text": "\u7535\u538b : 3-5V  \u6d4b\u91cf\u7535\u6d41\u4f9b\u5e94 : 160-200 uA  \u6d4b\u91cf\u8303\u56f4 : -10~100\u00b0C  \u5360\u7528\u65f6\u95f4 : 2S  \u5de5\u4f5c\u6e29\u5ea6 : -10~80 \u00b0C  \u50a8\u5b58\u6e29\u5ea6 : -35-80 \u00b0C    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Infrared_Temperature_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Infrared_Temperature_Sensor/#_2", 
            "text": "\u4ee5\u4e0b\u8349\u56fe\u6f14\u793a\u4e86\u6d4b\u91cf\u4f20\u611f\u5668\u5468\u56f4\u6e29\u5ea6\u548c\u4f20\u611f\u5668\u524d\u65b9\u76ee\u6807\u6e29\u5ea6\u7684\u7b80\u5355\u5e94\u7528\u3002\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u3002   \u4f7f\u7528 Grove-Base Shield \u7684\u7aef\u53e3  A0  \u548c  A1  \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Seeeduino\u3002  \u4e0b\u8f7d  \u6f14\u793a\u4ee3\u7801  \u5e76\u6253\u5f00\u3002   \u6d4b\u91cf\u6e29\u5ea6\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u7b80\u5355\u7684\u8bbe\u7f6e\u3002\u6309\u7167\u4e0b\u9762\u7684\u8bf4\u660e\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5c06\u83b7\u5f97\u51c6\u786e\u7684\u7ed3\u679c\u3002  \u6b65\u9aa4 1: \u8c03\u8282\u4f20\u611f\u5668\u7535\u538b  \u4e0a\u4f20\u6f14\u793a\u7a0b\u5e8f\u540e\uff0c\u5c06\u4f20\u611f\u5668\u7f6e\u4e8e\u6b63\u5e38\u73af\u5883\u4e2d 5 \u5206\u949f\u4ee5\u4e0a\uff0c\u4f7f\u4f20\u611f\u5668\u6e29\u5ea6\u4e0e\u5468\u56f4\u6e29\u5ea6\u4e00\u81f4\u3002\u7136\u540e\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u68c0\u67e5\u4f20\u611f\u5668\u8f93\u51fa\u7684\u7535\u538b\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5f53\u73af\u5883\u6e29\u5ea6\u7b49\u4e8e\u6e29\u5ea6\u4f20\u611f\u5668\u65f6\uff0c\u7ea2\u5916\u7ebf\u4f20\u611f\u5668 (TP-538U) \u8f93\u51fa\u4e3a 0V\uff0c\u7531\u786c\u4ef6\u8c03\u8282\u504f\u7f6e\u5728 0.5V \u7684\u53c2\u8003\u7535\u538b\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4f20\u611f\u5668\u7535\u538b\u4e3a 0.014V\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u60a8\u4ece\u7a0b\u5e8f\u4e2d\u7684\u4e32\u884c\u76d1\u89c6\u5668\u83b7\u5f97\u7684\u504f\u79fb _vol \u503c\u66f4\u6539\u4e3a 0.014 \u5373\u53ef\u3002    \u6b65\u9aa4 2: \u8c03\u6574\u4f20\u611f\u5668\u68c0\u6d4b\u8ddd\u79bb  \u6839\u636e\u6211\u4eec\u7684\u5b9e\u9a8c\uff0c\u4f20\u611f\u5668\u7684\u540d\u4e49\u6d4b\u91cf\u8ddd\u79bb\u662f 9CM\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u6240\u6709\u7684\u4f20\u611f\u5668\u90fd\u5177\u6709\u76f8\u540c\u7684\u7279\u6027\u3002\u6240\u4ee5\u5982\u679c\u60f3\u5f97\u5230\u51c6\u786e\u7684\u7ed3\u679c\uff0c\u9700\u8981\u7528\u51b0\u6c34\u6df7\u5408\u6db2\u8c03\u8282 0\u2103\uff0c\u7528\u5f00\u6c34\u8c03\u8282 100\u2103\u3002\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f97\u4f20\u611f\u5668\u7684\u6709\u6548\u8ddd\u79bb\u3002  \u5177\u4f53\u7684\u6d4b\u91cf\u65b9\u6cd5\u662f\u5728\u4e00\u4e2a\u9ed1\u8272\u7684\u5bb9\u5668\u91cc\u88c5\u6ee1\u51b0\u548c\u6c34\uff0c\u8fd9\u4e2a\u5bb9\u5668\u6709\u4e00\u4e2a\u5e73\u5766\u7684\u8868\u9762\u3002\u7b49\u5f85\u5bb9\u5668\u4e0b\u964d\u5230 0\u2103\uff0c\u5c06\u4f20\u611f\u5668\u4fdd\u6301\u5728\u7269\u4f53\u4e4b\u95f4 9CM\uff0c\u5411\u524d\u6216\u5411\u540e\u79fb\u52a8\u4f20\u611f\u5668\u5e76\u68c0\u67e5\u7ed3\u679c\uff0c\u5982\u679c\u8f93\u51fa\u4e3a 0\u2103\uff0c\u8bb0\u4e0b\u8ddd\u79bb\u503c\u3002\u540c\u6837\u7684\u65b9\u6cd5\u6765\u68c0\u67e5\u5f00\u6c34\u3002\u5f53\u4f60\u83b7\u5f97\u4e00\u5bf9\u503c\u65f6\uff0c\u505a\u4e00\u4e2a\u5e73\u5747\u7684\u8ba1\u7b97\u5904\u7406\u3002\u4f60\u53ef\u4ee5\u5f00\u59cb\u6d4b\u91cf\u4f60\u521a\u521a\u83b7\u5f97\u7684\u989d\u5b9a\u8ddd\u79bb\u3002  \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6d4b\u91cf\u4f20\u611f\u5668\u5468\u56f4\u7684\u6e29\u5ea6\u3002\u4f20\u611f\u5668\u9002\u7528\u4e8e\u540d\u4e49\u8ddd\u79bb\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u5176\u4ed6\u8ddd\u79bb\uff0c\u4f46\u8ddd\u79bb - \u6e29\u5ea6\u56fe\u65e2\u4e0d\u662f\u4f20\u611f\u5668\u7684\u5236\u9020\u5546\u83b7\u5f97\u7684\uff0c\u4e5f\u4e0d\u662f\u6211\u4eec\u83b7\u5f97\u7684\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0a\u4e24\u6761\u8bf4\u660e\u8fdb\u884c\u7ed8\u5236\u3002\u6211\u4eec\u5728\u6f14\u793a\u4ee3\u7801\u4e2d\u4fdd\u7559\u53d8\u91cf  \"temperature_range\"  \u3002\u6211\u4eec\u5047\u8bbe\u76ee\u6807\u8ddd\u79bb\u662f 3 \u5398\u7c73\uff0c\u4f60\u6d4b\u91cf\u7684\u53ef\u80fd\u4f1a\u591a\u4e8e\u6216\u5c11\u4e8e 5 \u5398\u7c73\u3002\u5e0c\u671b\u4f60\u4f7f\u7528\u6109\u5feb\u3002   \u9ad8\u7ea7\u5e94\u7528\u7a0b\u5e8f\u793a\u4f8b:    Note   \u6f14\u793a\u4ee3\u7801\u4e0d\u652f\u6301 Atmega168 \u5185\u6838  \u4e3a\u4e86\u83b7\u5f97\u51c6\u786e\u7684\u6d4b\u91cf\u7ed3\u679c\uff0c\u8ddd\u79bb (D) \u548c\u76ee\u6807\u5c42\u6570 (S) \u7387 D\uff1aS \u5fc5\u987b\u5c0f\u4e8e 0.5\u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Infrared_Temperature_Sensor/#_3", 
            "text": "[Eagle\u6587\u4ef6]   Grove-Infrared Temperature Sensor V0.9 Eagle File  [Eagle\u6587\u4ef6]   Grove-Infrared Temperature Sensor V1.0 Eagle File  [\u82af\u7247\u6570\u636e\u624b\u518c]   OTP-538U Datasheet  [\u5176\u4ed6\u8d44\u6e90]   Demo Code  [\u5176\u4ed6\u8d44\u6e90]   Infrared Temperature Demo Code with SerialLCD", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Digital_Infrared_Temperature_Sensor/", 
            "text": "The Digital Infrared temperature sensor \u662f\u57fa\u4e8e MLX90615 \u7684\u975e\u63a5\u89e6\u5f0f\u6e29\u5ea6\u6d4b\u91cf\u6a21\u5757\u3002\u7ea2\u5916\u654f\u611f\u70ed\u7535\u5806\u63a2\u6d4b\u5668\u82af\u7247\u548c\u4fe1\u53f7\u8c03\u5236\u82af\u7247\u96c6\u6210\u5728\u540c\u4e00\u4e2a\u5c01\u88c5\u4e2d\u3002\u8be5\u6a21\u5757\u4e0e Arduino \u4f7f\u7528 SMBus \u8fdb\u884c\u901a\u4fe1\uff0c\u591a\u8fbe 127 \u4e2a\u4f20\u611f\u5668\u53ef\u4ee5\u901a\u8fc7\u516c\u5171 2 \u7ebf\u8bfb\u53d6\u3002\u7531\u4e8e\u6a21\u5757\u7684\u4f4e\u566a\u58f0\u653e\u5927\u5668\uff0c16 \u4f4d ADC \u548c\u5f3a\u5927\u7684 DSP \u5355\u5143\uff0c\u5b83\u53ef\u4ee5\u5728\u5bbd\u6e29\u5ea6\u8303\u56f4\u5185\u5b9e\u73b0 1\u2103 \u7684\u9ad8\u7cbe\u5ea6\u548c 0.02\u2103 \u7684\u9ad8\u6d4b\u91cf\u5206\u8fa8\u7387\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n\n\n2.6\n\n\n\n\n3\n\n\n\n\n3.4\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u7535\u6d41\n\n\n\n\n\n\n\n\n1.4\n\n\n\n\n1.5\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u73af\u5883\u6e29\u5ea6\u8303\u56f4\n\n\n\n\n-40 - 85\n\n\n\n\n\u2103\n\n\n\n\n\n\n\n\n\u7269\u4f53\u6e29\u5ea6\u8303\u56f4\n\n\n\n\n-40 - 115\n\n\n\n\n\u2103\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n\n\n\u00a020x40x9.6\n\n\n\n\nmm\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\n\n\n\n\u5f15\u811a\u53f7\n\n\n\u540d\u79f0\n\n\n\u7c7b\u578b\n\n\n\u529f\u80fd\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\n1\n\n\nGND\n\n\n-\n\n\n\u4fe1\u53f7\u5730\n\n\n\n\n\n\n2\n\n\nVCC\n\n\nin\n\n\n\u6b63\u7535\u6e90\u8f93\u5165\u7aef (3.3V \u6216 5V)\n\n\n\n\n\n\n3\n\n\nSDA\n\n\nin/out\n\n\nI2C \u6570\u636e\u8f93\u5165/\u8f93\u51fa\n\n\n\n\n\n\n4\n\n\nSCL\n\n\nin\n\n\nI2C CLK\n\n\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u6211\u4eec\u5c06\u5728\u6b64\u63d0\u4f9b\u4e00\u4e2a\u793a\u4f8b\uff0c\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u6765\u6d4b\u91cf\u4f20\u611f\u5668\u524d\u9762\u7684\u76ee\u6807\u6e29\u5ea6\uff0c\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u3002\n\n\n\n\n\u4f7f\u7528 \nGrove - Base Shield\n \u7aef\u53e3 \nD2\n \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 seeeduino\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u4e0b\u8f7d\u5e93\u548c\u6f14\u793a\u4ee3\u7801 \nDigital_Infrared_Temperature_Sensor_MLX90615\n\u3002\n\n\n\u901a\u8fc7\u8def\u5f84 : \n..\\arduino-1.0.5\\libraries\n \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\n\n\n\n\n\u901a\u8fc7\u8def\u5f84 : \nFile(\u6587\u4ef6) -\n Examples(\u793a\u4f8b) -\nDigital_Infrared_Temperature_Sensor_MLX90615-\nMLX90615Soft\n \u76f4\u63a5\u6253\u5f00\u6f14\u793a\u4ee3\u7801\n\n\n\u60a8\u53ef\u4ee5\u770b\u89c1\u00a0:\n\n\n\n\n\u867d\u7136\u4f20\u611f\u5668\u5df2\u901a\u8fc7\u542f\u7528\u6570\u5b57 SMBus \u517c\u5bb9\u63a5\u53e3\u7684\u5de5\u5382\u6821\u51c6\uff0c\u4f46\u662f\u5e93\u662f\u57fa\u4e8e soft i2c library \u7684\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 AVR \u82af\u7247\u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u5f15\u811a\u6765\u9a71\u52a8 SDA \u548c SCL \u7ebf\u8def\u3002\u6211\u4eec\u4f7f\u7528 \nD2\n \u4f5c\u4e3a SCL \u5f15\u811a\u548c \nD3\n \u4f5c\u4e3a\u6b64\u6f14\u793a\u4ee3\u7801\u4e2d\u7684 SDA \u5f15\u811a\u3002\n\n\n\n\n\n\n\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230Arduino\u3002\n\n\n\n\n\n\n\u542f\u52a8\u4e32\u884c\u76d1\u89c6\u5668\u3002\n\n\n\u60a8\u53ef\u4ee5\u770b\u89c1\u00a0:\n\n\n\n\n\n\n\n\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u6d4b\u91cf\u76ee\u6807\u7269\u4f53\u7684\u6e29\u5ea6\u3002\u6839\u636e\u6211\u4eec\u7684\u5b9e\u9a8c\uff0c\u5c06\u4f20\u611f\u5668\u653e\u7f6e\u5728\u5ba4\u5185\u6b63\u5e38\u6e29\u5ea6\u4e0b\uff0c\u786e\u4fdd\u4f20\u611f\u5668 1M \u8303\u56f4\u524d\u9762\u6ca1\u6709\u4efb\u4f55\u70ed\u91cf\u6765\u6e90\u3002\u7269\u4f53\u6e29\u5ea6\u5c06\u8fd1\u4f3c\u7b49\u4e8e\u73af\u5883\u6e29\u5ea6\u3002\u5f53\u6d4b\u91cf\u7269\u4f53\u6e29\u5ea6\u65f6\uff0c\u5e94\u786e\u4fdd\u7269\u4f53\u5c3d\u53ef\u80fd\u9760\u8fd1\u4f20\u611f\u5668\uff0c\u4f46\u4e0d\u8981\u63a5\u89e6\u4f20\u611f\u5668\u7684\u8868\u9762\uff0c\u6211\u4eec\u5efa\u8bae\u8ddd\u79bb\u5c0f\u4e8e 3cm\u3002\u795d\u4f60\u6d4b\u8bd5\u6109\u5feb\u3002\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove Digital Infrared Temperature Sensor v1.0 eagle file.zip\n\n\n[\u6570\u636e\u624b\u518c]\n \nMLX90615.pdf\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nDemo Code", 
            "title": "Grove-Digital Infrared Temperature Sensor"
        }, 
        {
            "location": "/Grove-Digital_Infrared_Temperature_Sensor/#_1", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u7535\u538b  \n2.6  \n3  \n3.4  \nV    \n\u7535\u6d41    \n1.4  \n1.5  \nmA    \n\u73af\u5883\u6e29\u5ea6\u8303\u56f4  \n-40 - 85  \n\u2103    \n\u7269\u4f53\u6e29\u5ea6\u8303\u56f4  \n-40 - 115  \n\u2103    \n\u5c3a\u5bf8  \n\u00a020x40x9.6  \nmm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Digital_Infrared_Temperature_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Digital_Infrared_Temperature_Sensor/#_2", 
            "text": "\u5f15\u811a\u53f7  \u540d\u79f0  \u7c7b\u578b  \u529f\u80fd\u8bf4\u660e      1  GND  -  \u4fe1\u53f7\u5730    2  VCC  in  \u6b63\u7535\u6e90\u8f93\u5165\u7aef (3.3V \u6216 5V)    3  SDA  in/out  I2C \u6570\u636e\u8f93\u5165/\u8f93\u51fa    4  SCL  in  I2C CLK", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Digital_Infrared_Temperature_Sensor/#_3", 
            "text": "\u6211\u4eec\u5c06\u5728\u6b64\u63d0\u4f9b\u4e00\u4e2a\u793a\u4f8b\uff0c\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u6765\u6d4b\u91cf\u4f20\u611f\u5668\u524d\u9762\u7684\u76ee\u6807\u6e29\u5ea6\uff0c\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u3002   \u4f7f\u7528  Grove - Base Shield  \u7aef\u53e3  D2  \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 seeeduino\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Digital_Infrared_Temperature_Sensor/#_4", 
            "text": "\u4e0b\u8f7d\u5e93\u548c\u6f14\u793a\u4ee3\u7801  Digital_Infrared_Temperature_Sensor_MLX90615 \u3002  \u901a\u8fc7\u8def\u5f84 :  ..\\arduino-1.0.5\\libraries  \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d   \u901a\u8fc7\u8def\u5f84 :  File(\u6587\u4ef6) -  Examples(\u793a\u4f8b) - Digital_Infrared_Temperature_Sensor_MLX90615- MLX90615Soft  \u76f4\u63a5\u6253\u5f00\u6f14\u793a\u4ee3\u7801  \u60a8\u53ef\u4ee5\u770b\u89c1\u00a0:   \u867d\u7136\u4f20\u611f\u5668\u5df2\u901a\u8fc7\u542f\u7528\u6570\u5b57 SMBus \u517c\u5bb9\u63a5\u53e3\u7684\u5de5\u5382\u6821\u51c6\uff0c\u4f46\u662f\u5e93\u662f\u57fa\u4e8e soft i2c library \u7684\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 AVR \u82af\u7247\u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u5f15\u811a\u6765\u9a71\u52a8 SDA \u548c SCL \u7ebf\u8def\u3002\u6211\u4eec\u4f7f\u7528  D2  \u4f5c\u4e3a SCL \u5f15\u811a\u548c  D3  \u4f5c\u4e3a\u6b64\u6f14\u793a\u4ee3\u7801\u4e2d\u7684 SDA \u5f15\u811a\u3002    \u5c06\u4ee3\u7801\u4e0a\u4f20\u5230Arduino\u3002    \u542f\u52a8\u4e32\u884c\u76d1\u89c6\u5668\u3002  \u60a8\u53ef\u4ee5\u770b\u89c1\u00a0:     \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u6d4b\u91cf\u76ee\u6807\u7269\u4f53\u7684\u6e29\u5ea6\u3002\u6839\u636e\u6211\u4eec\u7684\u5b9e\u9a8c\uff0c\u5c06\u4f20\u611f\u5668\u653e\u7f6e\u5728\u5ba4\u5185\u6b63\u5e38\u6e29\u5ea6\u4e0b\uff0c\u786e\u4fdd\u4f20\u611f\u5668 1M \u8303\u56f4\u524d\u9762\u6ca1\u6709\u4efb\u4f55\u70ed\u91cf\u6765\u6e90\u3002\u7269\u4f53\u6e29\u5ea6\u5c06\u8fd1\u4f3c\u7b49\u4e8e\u73af\u5883\u6e29\u5ea6\u3002\u5f53\u6d4b\u91cf\u7269\u4f53\u6e29\u5ea6\u65f6\uff0c\u5e94\u786e\u4fdd\u7269\u4f53\u5c3d\u53ef\u80fd\u9760\u8fd1\u4f20\u611f\u5668\uff0c\u4f46\u4e0d\u8981\u63a5\u89e6\u4f20\u611f\u5668\u7684\u8868\u9762\uff0c\u6211\u4eec\u5efa\u8bae\u8ddd\u79bb\u5c0f\u4e8e 3cm\u3002\u795d\u4f60\u6d4b\u8bd5\u6109\u5feb\u3002   Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-Digital_Infrared_Temperature_Sensor/#_5", 
            "text": "[Eagle\u6587\u4ef6]   Grove Digital Infrared Temperature Sensor v1.0 eagle file.zip  [\u6570\u636e\u624b\u518c]   MLX90615.pdf  [\u5176\u4ed6\u8d44\u6e90]   Demo Code", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor_Pro/", 
            "text": "\u8fd9\u662f\u6211\u4eec\u7684Grove\u6e29\u6e7f\u5ea6\u4f20\u611f\u5668\u7684\u4e00\u4e2a\u5f3a\u5927\u7684\u59d0\u59b9\u7248\u672c\u3002 \u5b83\u5177\u6709\u6bd4\u57fa\u672c\u7248\u672c\u66f4\u5b8c\u6574\u548c\u51c6\u786e\u7684\u6027\u80fd\u3002 \u8be5\u4f20\u611f\u5668\u7684\u68c0\u6d4b\u8303\u56f4\u4e3a5\uff05RH - 99\uff05RH\uff0c-40\u00b0C\u81f380\u00b0C\u3002\u5176\u7cbe\u5ea6\u8fbe\u52302\uff05RH\u548c0.5\u00b0C\u3002\u5982\u679c\u5bf9\u4f7f\u7528\u5177\u6709\u4e25\u683c\u7684\u8981\u6c42\uff0c\u8fd9\u4e2a\u4f20\u611f\u5668\u662f\u5f88\u4e13\u4e1a\u7684\u9009\u62e9\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\n\n\n\u6807\u51c6\n\n\n\u6700\u5927\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\nVCC\n\n\n3.3\n\n\n-\n\n\n6\n\n\nV\n\n\n\n\n\n\n\u652f\u6301\u6d4b\u91cf\u7535\u6d41\n\n\n1\n\n\n-\n\n\n1.5\n\n\nmA\n\n\n\n\n\n\n\u5f85\u673a\u7535\u6d41\n\n\n40\n\n\n-\n\n\n50\n\n\nuA\n\n\n\n\n\n\n\u6d4b\u91cf\u8303\u56f4  \n(\u6e7f\u5ea6)\n\n\n5%\n\n\n-\n\n\n99%\n\n\nRH\n\n\n\n\n\n\n\u6d4b\u91cf\u8303\u56f4 \n(\u6e29\u5ea6)\n\n\n-40\n\n\n-\n\n\n80\n\n\n\u00b0C\n\n\n\n\n\n\n\u7cbe\u5ea6 \n(\u6e7f\u5ea6)\n\n\n-\n\n\n-\n\n\n\u00b12%\n\n\nRH\n\n\n\n\n\n\n\u7cbe\u5ea6 \n(\u6e29\u5ea6)\n\n\n-\n\n\n-\n\n\n\u00b10.5\n\n\n\u00b0C\n\n\n\n\n\n\n\u5206\u8fa8\u7387    \n(\u6e7f\u5ea6)\n\n\n-\n\n\n-\n\n\n0.1%\n\n\nRH\n\n\n\n\n\n\n\u5206\u8fa8\u7387 \n(\u6e29\u5ea6)\n\n\n-\n\n\n-\n\n\n0.1\n\n\n\u00b0C\n\n\n\n\n\n\n\u518d\u73b0\u6027    \n(\u6e7f\u5ea6)\n\n\n-\n\n\n-\n\n\n\u00b10.3%\n\n\nRH\n\n\n\n\n\n\n\u518d\u73b0\u6027 \n(\u6e29\u5ea6)\n\n\n-\n\n\n-\n\n\n\u00b10.2\n\n\n\u00b0C\n\n\n\n\n\n\n\u957f\u671f\u7a33\u5b9a\u6027\n\n\n-\n\n\n-\n\n\n\u00b10.5%\n\n\nRH/year\n\n\n\n\n\n\n\u4fe1\u53f7\u91c7\u96c6\u5468\u671f\n\n\n-\n\n\n2\n\n\n-\n\n\nS\n\n\n\n\n\n\n\u54cd\u5e94\u65f6\u95f41 / e\uff0863\uff05\uff09\n\n\n6\n\n\n-\n\n\n20\n\n\nS\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003\nGrove System\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u4ee5\u4e0b\u662f\u5165\u95e8\u7528\u6237\u6307\u5357\u3002\n\n\n\n\n \u5165\u95e8\u6307\u5bfc\n\n\nGrove\u7684\u4ecb\u7ecd\n\n\n\n\n\u6211\u4eec\u63d0\u4f9b2\u4e2a\u793a\u4f8b\uff0c\u5305\u62ec\u5728arduino\u548craspberry pi\u5e73\u53f0\u4e0a\u6267\u884c\u3002\n\n\n\u4f7f\u7528 Arduino\n\n\n\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2aGrove - \u6e29\u6e7f\u5ea6\u4f20\u611f\u5668\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - DHT Sensor pro\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u5c06 Temperature and Humidity Sensor Pro\u8fde\u63a5\u5230 \nGrove - Base Shiel\n \u7684D2\u7aef\u53e3\u3002 \u7136\u540e\u5c06Grove - Base Shield\u63d2\u5165Arduino\uff0c\u5e76\u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06Arduino\u8fde\u63a5\u5230PC\u3002\n\n\n\n\n\n\n\n\n\n\n\u8bf7\u9075\u5faa \n\u5982\u4f55\u5b89\u88c5arduino\u5e93\n\u6765\u5b89\u88c5\u5e93\u3002\n\n\n\n\n\n\n\u4e0b\u8f7d\nSeeed DHT\u5e93\n\uff0c\u800carduino\u677f\u662f16MHz XTAL\u7684;\u8fd8\u6709\u53e6\u4e00\u4e2a\u5e93 - \nDHTlib\n\u4e5f\u53ef\u7528\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fSeeed DHT\u5e93\u3002 \u8be5\u5e93\u652f\u630116MHz\u548c8MHz\u7684 Arduino\uff08\u4f8b\u5982Seeeduino Stalker\uff09\n\n\n\n\n\n\n\u91cd\u65b0\u542f\u52a8Arduino IDE\u3002 \u901a\u8fc7\u8def\u5f84\u6253\u5f00\u201cDHTtester\u201d\u793a\u4f8b\uff1a \nFile\uff08\u6587\u4ef6\uff09 \n Examples\uff08\u793a\u4f8b\uff09 \n Grove_Humidity_Temperature_Sensor-master \n DHTtester\n. \u901a\u8fc7\u8fd9\u4e2a\u793a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u8bfb\u53d6\u73af\u5883\u7684\u6e29\u5ea6\u548c\u76f8\u5bf9\u6e7f\u5ea6\u4fe1\u606f\u3002\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\u8fd9\u4e2aGrove - Temperature and Humidity Sensor Pro \u548c\u6211\u4eec\u7684\u53e6\u4e00\u4e2a\u4ea7\u54c1\nGrove-Temperature and Humidity Sensor\n\u6b63\u5728\u5171\u4eab\u6b64\u5e93\u3002 \u65e0\u8bba\u60a8\u4f7f\u7528\u54ea\u79cd\u4ea7\u54c1\uff0c\u8bf7\u786e\u4fdd\u60a8\u4e3a\u4f20\u611f\u5668\u7684\u5b9a\u4e49\u7684\u7aef\u53e3\u751f\u6548\uff0c\u5e76\u5c06\u5176\u4ed6\u89c4\u683c\u7684\u5b9a\u4e49\u5728\u7a0b\u5e8f\u4e2d\u6ce8\u91ca\u6389\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5728Grove - Temperature and Humidity Sensor Pro \u4e0a\u4f7f\u7528\u7684\u4f20\u611f\u5668\u662fDHT 22.\u56e0\u6b64\u4f20\u611f\u5668\u89c4\u683c\u7684\u5b9a\u4e49\u90e8\u5206\u5e94\u8be5\u662f\uff1a\n\n\n\n\n//#define DHTTYPE DHT11   // DHT 11\n#define DHTTYPE DHT22   // DHT 22  (AM2302)\n//#define DHTTYPE DHT21   // DHT 21 (AM2301)or\n\n\n- \u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684Arduino\u677f\u3002\n- \u8fd9\u91cc\u5c31\u662f\u8f93\u51fa\u7ed3\u679c\n\n\n\n\n\u4f7f\u7528Raspberry Pi\n\n\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - DHT Sensor pro\n\n\nGrovepi+\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u6309\u7167\n\u8bf4\u660e\n\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\n\n\n\n\n-\u5c06grove DHT pro\u63d2\u5165Grovepi +\u7684\u63d2\u5ea7D4\u3002\n\n\n- \u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\uff1a\n\n\n  cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\n\u627e\u5230\u8fd9\u5217\u4ee3\u7801\n\n\n\n\n    nano grove_dht_pro.py   # \nCtrl+x\n to exit #\n\n\n\n\nimport grovepi\n\n# Connect the Grove Temperature \n Humidity Sensor Pro to digital port D4\n# SIG,NC,VCC,GND\nsensor = 4\n\nwhile True:\n    try:\n        [temp,humidity] = grovepi.dht(sensor,1)\n        print \ntemp =\n, temp, \n humidity =\n, humidity\n\n    except IOError:\n        print \nError\n\n\n\n\n\n\n\n\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n\n\n\n      sudo python grove_dht_pro.py\n\n\n- \u8fd9\u91cc\u662f\u8f93\u51fa\u7ed3\u679c\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nTemp Humi Pro in eagle format\n\n\nTemp Humi Pro PCB in PDF format\n\n\nTemp Humi Pro Schematic in PDF format\n\n\nHumidity Temperature Sensor pro library\n\n\nAM2302-CN.pdf\n\n\nAM2302-EN.pdf", 
            "title": "Grove-Temperature and Humidity Sensor Pro"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor_Pro/#_1", 
            "text": "\u9879\u76ee  \u6700\u5c0f  \u6807\u51c6  \u6700\u5927  \u5355\u4f4d      VCC  3.3  -  6  V    \u652f\u6301\u6d4b\u91cf\u7535\u6d41  1  -  1.5  mA    \u5f85\u673a\u7535\u6d41  40  -  50  uA    \u6d4b\u91cf\u8303\u56f4   (\u6e7f\u5ea6)  5%  -  99%  RH    \u6d4b\u91cf\u8303\u56f4  (\u6e29\u5ea6)  -40  -  80  \u00b0C    \u7cbe\u5ea6  (\u6e7f\u5ea6)  -  -  \u00b12%  RH    \u7cbe\u5ea6  (\u6e29\u5ea6)  -  -  \u00b10.5  \u00b0C    \u5206\u8fa8\u7387     (\u6e7f\u5ea6)  -  -  0.1%  RH    \u5206\u8fa8\u7387  (\u6e29\u5ea6)  -  -  0.1  \u00b0C    \u518d\u73b0\u6027     (\u6e7f\u5ea6)  -  -  \u00b10.3%  RH    \u518d\u73b0\u6027  (\u6e29\u5ea6)  -  -  \u00b10.2  \u00b0C    \u957f\u671f\u7a33\u5b9a\u6027  -  -  \u00b10.5%  RH/year    \u4fe1\u53f7\u91c7\u96c6\u5468\u671f  -  2  -  S    \u54cd\u5e94\u65f6\u95f41 / e\uff0863\uff05\uff09  6  -  20  S      Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor_Pro/#_2", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor_Pro/#_3", 
            "text": "\u4ee5\u4e0b\u662f\u5165\u95e8\u7528\u6237\u6307\u5357\u3002    \u5165\u95e8\u6307\u5bfc  Grove\u7684\u4ecb\u7ecd   \u6211\u4eec\u63d0\u4f9b2\u4e2a\u793a\u4f8b\uff0c\u5305\u62ec\u5728arduino\u548craspberry pi\u5e73\u53f0\u4e0a\u6267\u884c\u3002  \u4f7f\u7528 Arduino  \u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2aGrove - \u6e29\u6e7f\u5ea6\u4f20\u611f\u5668\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - DHT Sensor pro  Base Shield           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u5c06 Temperature and Humidity Sensor Pro\u8fde\u63a5\u5230  Grove - Base Shiel  \u7684D2\u7aef\u53e3\u3002 \u7136\u540e\u5c06Grove - Base Shield\u63d2\u5165Arduino\uff0c\u5e76\u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06Arduino\u8fde\u63a5\u5230PC\u3002      \u8bf7\u9075\u5faa  \u5982\u4f55\u5b89\u88c5arduino\u5e93 \u6765\u5b89\u88c5\u5e93\u3002    \u4e0b\u8f7d Seeed DHT\u5e93 \uff0c\u800carduino\u677f\u662f16MHz XTAL\u7684;\u8fd8\u6709\u53e6\u4e00\u4e2a\u5e93 -  DHTlib \u4e5f\u53ef\u7528\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fSeeed DHT\u5e93\u3002 \u8be5\u5e93\u652f\u630116MHz\u548c8MHz\u7684 Arduino\uff08\u4f8b\u5982Seeeduino Stalker\uff09    \u91cd\u65b0\u542f\u52a8Arduino IDE\u3002 \u901a\u8fc7\u8def\u5f84\u6253\u5f00\u201cDHTtester\u201d\u793a\u4f8b\uff1a  File\uff08\u6587\u4ef6\uff09   Examples\uff08\u793a\u4f8b\uff09   Grove_Humidity_Temperature_Sensor-master   DHTtester . \u901a\u8fc7\u8fd9\u4e2a\u793a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u8bfb\u53d6\u73af\u5883\u7684\u6e29\u5ea6\u548c\u76f8\u5bf9\u6e7f\u5ea6\u4fe1\u606f\u3002      Note  \u8fd9\u4e2aGrove - Temperature and Humidity Sensor Pro \u548c\u6211\u4eec\u7684\u53e6\u4e00\u4e2a\u4ea7\u54c1 Grove-Temperature and Humidity Sensor \u6b63\u5728\u5171\u4eab\u6b64\u5e93\u3002 \u65e0\u8bba\u60a8\u4f7f\u7528\u54ea\u79cd\u4ea7\u54c1\uff0c\u8bf7\u786e\u4fdd\u60a8\u4e3a\u4f20\u611f\u5668\u7684\u5b9a\u4e49\u7684\u7aef\u53e3\u751f\u6548\uff0c\u5e76\u5c06\u5176\u4ed6\u89c4\u683c\u7684\u5b9a\u4e49\u5728\u7a0b\u5e8f\u4e2d\u6ce8\u91ca\u6389\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5728Grove - Temperature and Humidity Sensor Pro \u4e0a\u4f7f\u7528\u7684\u4f20\u611f\u5668\u662fDHT 22.\u56e0\u6b64\u4f20\u611f\u5668\u89c4\u683c\u7684\u5b9a\u4e49\u90e8\u5206\u5e94\u8be5\u662f\uff1a   //#define DHTTYPE DHT11   // DHT 11\n#define DHTTYPE DHT22   // DHT 22  (AM2302)\n//#define DHTTYPE DHT21   // DHT 21 (AM2301)or \n- \u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684Arduino\u677f\u3002\n- \u8fd9\u91cc\u5c31\u662f\u8f93\u51fa\u7ed3\u679c   \u4f7f\u7528Raspberry Pi  \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Raspberry pi  Grove - DHT Sensor pro  Grovepi+           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u6309\u7167 \u8bf4\u660e \u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002   -\u5c06grove DHT pro\u63d2\u5165Grovepi +\u7684\u63d2\u5ea7D4\u3002 \n- \u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\uff1a    cd yourpath/GrovePi/Software/Python/   \u627e\u5230\u8fd9\u5217\u4ee3\u7801       nano grove_dht_pro.py   #  Ctrl+x  to exit #  import grovepi\n\n# Connect the Grove Temperature   Humidity Sensor Pro to digital port D4\n# SIG,NC,VCC,GND\nsensor = 4\n\nwhile True:\n    try:\n        [temp,humidity] = grovepi.dht(sensor,1)\n        print  temp = , temp,   humidity = , humidity\n\n    except IOError:\n        print  Error    \u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b         sudo python grove_dht_pro.py \n- \u8fd9\u91cc\u662f\u8f93\u51fa\u7ed3\u679c", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor_Pro/#_4", 
            "text": "Temp Humi Pro in eagle format  Temp Humi Pro PCB in PDF format  Temp Humi Pro Schematic in PDF format  Humidity Temperature Sensor pro library  AM2302-CN.pdf  AM2302-EN.pdf", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/", 
            "text": "\u8be5\u6e29\u6e7f\u5ea6\u4f20\u611f\u5668\u63d0\u4f9b\u9884\u6821\u51c6\u7684\u6570\u5b57\u8f93\u51fa\u3002 \u91c7\u7528\u4e00\u4e2a\u72ec\u7acb\u7684\u7535\u5bb9\u4f20\u611f\u5143\u4ef6\u6d4b\u91cf\u76f8\u5bf9\u6e7f\u5ea6\uff0c\u6e29\u5ea6\u5219\u7531\u8d1f\u6e29\u5ea6\u7cfb\u6570\uff08NTC\uff09\u70ed\u654f\u7535\u963b\u6d4b\u91cf\u3002 \u5177\u6709\u826f\u597d\u7684\u53ef\u9760\u6027\u548c\u957f\u671f\u7684\u7a33\u5b9a\u6027\u3002 \u8bf7\u6ce8\u610f\uff0c\u8be5\u4f20\u611f\u5668\u4e0d\u9002\u7528\u4e8e\u4f4e\u4e8e0\u5ea6\u7684\u6e29\u5ea6\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u76f8\u5bf9\u6e7f\u5ea6\u548c\u6e29\u5ea6\u6d4b\u91cf\n\n\n\u5168\u8303\u56f4\u6e29\u5ea6\u8865\u507f\u6821\u51c6\n\n\n\u8f93\u51fa\u6570\u5b57\u4fe1\u53f7\n\n\n\u80fd\u591f\u957f\u671f\u7a33\u5b9a\u7684\u8fd0\u884c\n\n\n\u4f20\u8f93\u8ddd\u79bb\u8fdc\uff08\n 20m\uff09\n\n\n\u4f4e\u529f\u8017\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u6d88\u8d39\u4ea7\u54c1\n\n\n\u6c14\u8c61\u53f0\n\n\n\u6e7f\u5ea6\u8c03\u8282\u5668\n\n\n\u51b7\u6c14\u673a\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\u4e3b\u8981\u7684\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u89c4\u683c\n\n\n\n\n\n\n\n\n\n\nPCB\u5c3a\u5bf8\n\n\n2.0cm*4.0cm\n\n\n\n\n\n\n\u63a5\u53e3\n\n\n2.0mm\u95f4\u8ddd\u7684\u9488\u5934\n\n\n\n\n\n\nIO\u7ed3\u6784\n\n\nSIG,VCC,GND,NC\n\n\n\n\n\n\nROHS\n\n\nYES\n\n\n\n\n\n\n\n\n\u7535\u5b50\u7279\u6027\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6761\u4ef6\n\n\n\n\n\u6700\u5c0f\n\n\n\n\n\u6807\u51c6\n\n\n\n\n\u6700\u5927\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\nVCC\n\n\n\n\n-\n\n\n\n\n3.3\n\n\n\n\n-\n\n\n\n\n5\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u6d4b\u91cf\u7535\u6d41\n\n\n\n\n-\n\n\n\n\n1.3\u00a0\n\n\n\n\n-\u00a0\n\n\n\n\n2.1\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u5e73\u5747\u4f9b\u5e94\u7535\u6d41\n\n\n\n\n-\n\n\n\n\n0.5\n\n\n\n\n-\n\n\n\n\n1.1\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u6d4b\u91cf\u8303\u56f4\n\n\n\n\n\u6e7f\u5ea6\n\n\n\n\n20%\n\n\n\n\n-\n\n\n\n\n90%\n\n\n\n\nRH\n\n\n\n\n\n\n\n\n\u6e29\u5ea6\n\n\n\n\n0\n\n\n\n\n-\n\n\n\n\n50\n\n\n\n\n\u00b0C\n\n\n\n\n\n\n\n\n\u51c6\u786e\u6027\n\n\n\n\n\u6e7f\u5ea6\n\n\n\n\n-\n\n\n\n\n-\n\n\n\n\n\u00b15%\n\n\n\n\nRH\n\n\n\n\n\n\n\n\n\u6e29\u5ea6\n\n\n\n\n\n\n\n\n\n\n\n\n\u00b12\n\n\n\n\n\u00b0C\n\n\n\n\n\n\n\n\n\u7075\u654f\u5ea6\n\n\n\n\n\u6e7f\u5ea6\n\n\n\n\n\n\n\n\n-\n\n\n\n\n1%\n\n\n\n\nRH\n\n\n\n\n\n\n\n\n\u6e29\u5ea6\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\u00b0C\n\n\n\n\n\n\n\n\n\u518d\u73b0\u6027\n\n\n\n\n\u6e7f\u5ea6\n\n\n\n\n\n\n\n\n\n\n\n\n\u00b11%\n\n\n\n\nRH\n\n\n\n\n\n\n\n\n\u6e29\u5ea6\n\n\n\n\n\n\n\n\n\n\n\n\n\u00b11\n\n\n\n\n\u00b0C\n\n\n\n\n\n\n\n\n\u957f\u671f\u8fd0\u884c\u7a33\u5b9a\u6027\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00b11%\n\n\n\n\nRH/\u5e74\n\n\n\n\n\n\n\n\n\u4fe1\u53f7\u91c7\u96c6\u5468\u671f\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\nS\n\n\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u5f53MCU\u53d1\u9001\u89e6\u53d1\u4fe1\u53f7\u65f6\uff0c\u4f20\u611f\u5668\u5c06\u4ece\u4f4e\u529f\u8017\u6a21\u5f0f\u5207\u6362\u5230\u6fc0\u6d3b\u6a21\u5f0f\u3002 trigger signal\u4f20\u611f\u5668\u5c06\u54cd\u5e94\u4fe1\u53f7\u53d1\u9001\u56deMCU\u540e\uff0c\u5b83\u5c06\u4f20\u8f93\u51fa40\u4f4d\u91c7\u96c6\u5230\u7684\u6570\u636e\u5e76\u89e6\u53d1\u65b0\u7684\u4fe1\u53f7\u91c7\u96c6\uff08\u8bf7\u6ce8\u610f\uff0c\u5728\u89e6\u53d1\u4fe1\u53f7\u5230\u6765\u4e4b\u524dMCU\u5df2\u7ecf\u6536\u96c6\u5230\u4ece\u4f20\u611f\u5668\u53d1\u9001\u6765\u768440\u4f4d\u91c7\u96c6\u5230\u7684\u6570\u636e\uff09\u4e00\u4e2a\u89e6\u53d1\u4fe1\u53f7\u80fd\u591f\u4ece\u4f20\u611f\u5668\u63a5\u6536\u4e00\u6b2140\u4f4d\u54cd\u5e94\u7684\u6570\u636e\u3002 \u5355\u603b\u7ebf\u6570\u636e\u7528\u4e8eMCU\u548c\u4f20\u611f\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\n\u901a\u4fe1\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n\n\n\n\u5355\u6b21\u901a\u4fe1\u9700\u89815ms\uff0c\u5728\u9ad8\u4f4d\u7684\u6570\u636e\u9996\u5148\u53d1\u51fa\u3002 \u4fe1\u53f7\u6570\u636e\u4e3a40\u4f4d\uff0c\u5305\u62ec16\u4f4d\u6e7f\u5ea6\u6570\u636e\uff0c16\u4f4d\u6e29\u5ea6\u6570\u636e\u548c8\u4f4d\u6821\u9a8c\u6570\u636e\u3002\u6570\u636e\u683c\u5f0f\u4e3a\uff1a\n\n\n8bits integer part of humidity+8bits decimal part of humidity\n+8bits integer part of temperature+8bits decimal part of temperature\n+8bits checksum.\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\u5c06\u6e29\u5ea6\u548c\u6e7f\u5ea6\u4f20\u611f\u5668\u8fde\u63a5\u5230\u6a21\u62df\u7aef\u53e3 \nA0\n .\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u7a0b\u5e8f\u83b7\u5f97\u73af\u5883\u6e29\u5ea6\u548c\u6e7f\u5ea6\uff08\u4ee3\u7801\u4ec5\u9002\u7528\u4e8eseeeduino\uff0c\u5982\u679c\u4f7f\u7528seeeduino mega\uff0c\u5219\u5e94\u66f4\u6539\u4ee3\u7801\uff0c\u5c06PINC\u66f4\u6539\u4e3aPINF\uff0c\u5c06DDRC\u66f4\u6539\u4e3aDDRF\u5e76\u5c06PORTC\u66f4\u6539\u4e3aPORTF\uff09\n\n\n\n\n#define DHT11_PIN 0      // ADC0\n\nbyte read_dht11_dat()\n{\n    byte i = 0;\n    byte result=0;\n    for(i=0; i\n 8; i++){\n\n        while(!(PINC \n _BV(DHT11_PIN)));  // wait for 50us\n        delayMicroseconds(30);\n\n        if(PINC \n _BV(DHT11_PIN))\n        result |=(1\n(7-i));\n        while((PINC \n _BV(DHT11_PIN)));  // wait \n1\n finish\n    }\n    return result;\n}\n\nvoid setup()\n{\n    DDRC |= _BV(DHT11_PIN);\n    PORTC |= _BV(DHT11_PIN);\n\n    Serial.begin(9600);\n    Serial.println(\nReady\n);\n}\n\nvoid loop()\n{\n    byte dht11_dat[5];\n    byte dht11_in;\n    byte i;\n    // start condition\n    // 1. pull-down i/o pin from 18ms\n    PORTC \n= ~_BV(DHT11_PIN);\n    delay(18);\n    PORTC |= _BV(DHT11_PIN);\n    delayMicroseconds(40);\n\n    DDRC \n= ~_BV(DHT11_PIN);\n    delayMicroseconds(40);\n\n    dht11_in = PINC \n _BV(DHT11_PIN);\n\n    if(dht11_in){\n        Serial.println(\ndht11 start condition 1 not met\n);\n        return;\n    }\n    delayMicroseconds(80);\n\n    dht11_in = PINC \n _BV(DHT11_PIN);\n\n    if(!dht11_in){\n        Serial.println(\ndht11 start condition 2 not met\n);\n        return;\n    }\n    delayMicroseconds(80);\n    // now ready for data reception\n    for (i=0; i\n5; i++)\n    dht11_dat[i] = read_dht11_dat();\n\n    DDRC |= _BV(DHT11_PIN);\n    PORTC |= _BV(DHT11_PIN);\n\n    byte dht11_check_sum = dht11_dat[0]+dht11_dat[1]+dht11_dat[2]+dht11_dat[3];\n    // check check_sum\n    if(dht11_dat[4]!= dht11_check_sum)\n    {\n        Serial.println(\nDHT11 checksum error\n);\n    }\n\n    Serial.print(\nCurrent humdity = \n);\n    Serial.print(dht11_dat[0], DEC);\n    Serial.print(\n.\n);\n    Serial.print(dht11_dat[1], DEC);\n    Serial.print(\n%  \n);\n    Serial.print(\ntemperature = \n);\n    Serial.print(dht11_dat[2], DEC);\n    Serial.print(\n.\n);\n    Serial.print(dht11_dat[3], DEC);\n    Serial.println(\nC  \n);\n\n    delay(2000);\n}\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nTemperature Humidity.zip\n\n\nSchematic at Easyeda", 
            "title": "Grove-Temperature and Humidity Sensor"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/#_1", 
            "text": "\u76f8\u5bf9\u6e7f\u5ea6\u548c\u6e29\u5ea6\u6d4b\u91cf  \u5168\u8303\u56f4\u6e29\u5ea6\u8865\u507f\u6821\u51c6  \u8f93\u51fa\u6570\u5b57\u4fe1\u53f7  \u80fd\u591f\u957f\u671f\u7a33\u5b9a\u7684\u8fd0\u884c  \u4f20\u8f93\u8ddd\u79bb\u8fdc\uff08  20m\uff09  \u4f4e\u529f\u8017    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/#_2", 
            "text": "\u6d88\u8d39\u4ea7\u54c1  \u6c14\u8c61\u53f0  \u6e7f\u5ea6\u8c03\u8282\u5668  \u51b7\u6c14\u673a", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/#_3", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/#_4", 
            "text": "", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/#_5", 
            "text": "\u9879\u76ee  \u89c4\u683c      PCB\u5c3a\u5bf8  2.0cm*4.0cm    \u63a5\u53e3  2.0mm\u95f4\u8ddd\u7684\u9488\u5934    IO\u7ed3\u6784  SIG,VCC,GND,NC    ROHS  YES", 
            "title": "\u4e3b\u8981\u7684\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/#_6", 
            "text": "\u9879\u76ee  \n\u6761\u4ef6  \n\u6700\u5c0f  \n\u6807\u51c6  \n\u6700\u5927  \n\u5355\u4f4d    \nVCC  \n-  \n3.3  \n-  \n5  \nV    \n\u6d4b\u91cf\u7535\u6d41  \n-  \n1.3\u00a0  \n-\u00a0  \n2.1  \nmA    \n\u5e73\u5747\u4f9b\u5e94\u7535\u6d41  \n-  \n0.5  \n-  \n1.1  \nmA    \n\u6d4b\u91cf\u8303\u56f4  \n\u6e7f\u5ea6  \n20%  \n-  \n90%  \nRH    \n\u6e29\u5ea6  \n0  \n-  \n50  \n\u00b0C    \n\u51c6\u786e\u6027  \n\u6e7f\u5ea6  \n-  \n-  \n\u00b15%  \nRH    \n\u6e29\u5ea6      \n\u00b12  \n\u00b0C    \n\u7075\u654f\u5ea6  \n\u6e7f\u5ea6    \n-  \n1%  \nRH    \n\u6e29\u5ea6      \n1  \n\u00b0C    \n\u518d\u73b0\u6027  \n\u6e7f\u5ea6      \n\u00b11%  \nRH    \n\u6e29\u5ea6      \n\u00b11  \n\u00b0C    \n\u957f\u671f\u8fd0\u884c\u7a33\u5b9a\u6027        \n\u00b11%  \nRH/\u5e74    \n\u4fe1\u53f7\u91c7\u96c6\u5468\u671f      \n2    \nS", 
            "title": "\u7535\u5b50\u7279\u6027"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/#_7", 
            "text": "\u5f53MCU\u53d1\u9001\u89e6\u53d1\u4fe1\u53f7\u65f6\uff0c\u4f20\u611f\u5668\u5c06\u4ece\u4f4e\u529f\u8017\u6a21\u5f0f\u5207\u6362\u5230\u6fc0\u6d3b\u6a21\u5f0f\u3002 trigger signal\u4f20\u611f\u5668\u5c06\u54cd\u5e94\u4fe1\u53f7\u53d1\u9001\u56deMCU\u540e\uff0c\u5b83\u5c06\u4f20\u8f93\u51fa40\u4f4d\u91c7\u96c6\u5230\u7684\u6570\u636e\u5e76\u89e6\u53d1\u65b0\u7684\u4fe1\u53f7\u91c7\u96c6\uff08\u8bf7\u6ce8\u610f\uff0c\u5728\u89e6\u53d1\u4fe1\u53f7\u5230\u6765\u4e4b\u524dMCU\u5df2\u7ecf\u6536\u96c6\u5230\u4ece\u4f20\u611f\u5668\u53d1\u9001\u6765\u768440\u4f4d\u91c7\u96c6\u5230\u7684\u6570\u636e\uff09\u4e00\u4e2a\u89e6\u53d1\u4fe1\u53f7\u80fd\u591f\u4ece\u4f20\u611f\u5668\u63a5\u6536\u4e00\u6b2140\u4f4d\u54cd\u5e94\u7684\u6570\u636e\u3002 \u5355\u603b\u7ebf\u6570\u636e\u7528\u4e8eMCU\u548c\u4f20\u611f\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\n\u901a\u4fe1\u8fc7\u7a0b\u5982\u4e0b\uff1a   \u5355\u6b21\u901a\u4fe1\u9700\u89815ms\uff0c\u5728\u9ad8\u4f4d\u7684\u6570\u636e\u9996\u5148\u53d1\u51fa\u3002 \u4fe1\u53f7\u6570\u636e\u4e3a40\u4f4d\uff0c\u5305\u62ec16\u4f4d\u6e7f\u5ea6\u6570\u636e\uff0c16\u4f4d\u6e29\u5ea6\u6570\u636e\u548c8\u4f4d\u6821\u9a8c\u6570\u636e\u3002\u6570\u636e\u683c\u5f0f\u4e3a\uff1a  8bits integer part of humidity+8bits decimal part of humidity\n+8bits integer part of temperature+8bits decimal part of temperature\n+8bits checksum.", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/#_8", 
            "text": "\u5c06\u6e29\u5ea6\u548c\u6e7f\u5ea6\u4f20\u611f\u5668\u8fde\u63a5\u5230\u6a21\u62df\u7aef\u53e3  A0  .\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u7a0b\u5e8f\u83b7\u5f97\u73af\u5883\u6e29\u5ea6\u548c\u6e7f\u5ea6\uff08\u4ee3\u7801\u4ec5\u9002\u7528\u4e8eseeeduino\uff0c\u5982\u679c\u4f7f\u7528seeeduino mega\uff0c\u5219\u5e94\u66f4\u6539\u4ee3\u7801\uff0c\u5c06PINC\u66f4\u6539\u4e3aPINF\uff0c\u5c06DDRC\u66f4\u6539\u4e3aDDRF\u5e76\u5c06PORTC\u66f4\u6539\u4e3aPORTF\uff09   #define DHT11_PIN 0      // ADC0\n\nbyte read_dht11_dat()\n{\n    byte i = 0;\n    byte result=0;\n    for(i=0; i  8; i++){\n\n        while(!(PINC   _BV(DHT11_PIN)));  // wait for 50us\n        delayMicroseconds(30);\n\n        if(PINC   _BV(DHT11_PIN))\n        result |=(1 (7-i));\n        while((PINC   _BV(DHT11_PIN)));  // wait  1  finish\n    }\n    return result;\n}\n\nvoid setup()\n{\n    DDRC |= _BV(DHT11_PIN);\n    PORTC |= _BV(DHT11_PIN);\n\n    Serial.begin(9600);\n    Serial.println( Ready );\n}\n\nvoid loop()\n{\n    byte dht11_dat[5];\n    byte dht11_in;\n    byte i;\n    // start condition\n    // 1. pull-down i/o pin from 18ms\n    PORTC  = ~_BV(DHT11_PIN);\n    delay(18);\n    PORTC |= _BV(DHT11_PIN);\n    delayMicroseconds(40);\n\n    DDRC  = ~_BV(DHT11_PIN);\n    delayMicroseconds(40);\n\n    dht11_in = PINC   _BV(DHT11_PIN);\n\n    if(dht11_in){\n        Serial.println( dht11 start condition 1 not met );\n        return;\n    }\n    delayMicroseconds(80);\n\n    dht11_in = PINC   _BV(DHT11_PIN);\n\n    if(!dht11_in){\n        Serial.println( dht11 start condition 2 not met );\n        return;\n    }\n    delayMicroseconds(80);\n    // now ready for data reception\n    for (i=0; i 5; i++)\n    dht11_dat[i] = read_dht11_dat();\n\n    DDRC |= _BV(DHT11_PIN);\n    PORTC |= _BV(DHT11_PIN);\n\n    byte dht11_check_sum = dht11_dat[0]+dht11_dat[1]+dht11_dat[2]+dht11_dat[3];\n    // check check_sum\n    if(dht11_dat[4]!= dht11_check_sum)\n    {\n        Serial.println( DHT11 checksum error );\n    }\n\n    Serial.print( Current humdity =  );\n    Serial.print(dht11_dat[0], DEC);\n    Serial.print( . );\n    Serial.print(dht11_dat[1], DEC);\n    Serial.print( %   );\n    Serial.print( temperature =  );\n    Serial.print(dht11_dat[2], DEC);\n    Serial.print( . );\n    Serial.print(dht11_dat[3], DEC);\n    Serial.println( C   );\n\n    delay(2000);\n}", 
            "title": "\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Temperature_and_Humidity_Sensor/#_9", 
            "text": "Temperature Humidity.zip  Schematic at Easyeda", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/", 
            "text": "Grove - Temp\nHumi Sensor(SHT31) \u662f\u4e00\u6b3e\u9ad8\u5ea6\u53ef\u9760\uff0c\u51c6\u786e\uff0c\u80fd\u591f\u5feb\u901f\u54cd\u5e94\u548c\u975e\u5e38\u96c6\u6210\u7684\u6e29\u6e7f\u5ea6\u4f20\u611f\u5668\u3002 \u8be5\u6a21\u5757\u4e2d\u4f7f\u7528\u7684\u4f20\u611f\u5668\uff08\u82af\u7247\uff09\u91c7\u7528 Sensirion \u7684 CMOSens \n sup \n\u00ae\n  \u6280\u672f\u8bbe\u8ba1\u3002 \u8be5\u82af\u7247\u7ecf\u8fc7\u826f\u597d\u6821\u51c6\uff0c\u7ebf\u6027\u5316\u548c\u8865\u507f\u6570\u5b57\u8f93\u51fa\u3002\n\n\n\u8be5\u6a21\u5757\u7684\u6807\u51c6\u7cbe\u5ea6\u53ef\u4ee5\u662f \n\u00b12\uff05RH\n \uff08\u76f8\u5bf9\u6e7f\u5ea6\uff09\u548c \n\u00b10.3\u00b0C\n \uff08\u5bf9\u4e8e\u6e29\u5ea6\uff09\u3002 \u8be5\u6a21\u5757\u517c\u5bb9 3.3 V \u548c 5 V\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u7535\u538b\u7535\u5e73\u8f6c\u6362\u5668\u3002 \u8be5\u6a21\u5757\u80fd\u4e0e  I \n sup \n 2 \n C  \u4e32\u884c\u603b\u7ebf\u8fdb\u884c\u901a\u4fe1\uff0c\u5e76\u4e14\u53ef\u4ee5\u5de5\u4f5c\u9ad8\u8fbe 1 MHz \u7684\u901f\u5ea6\u3002 \u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ad8\u5ea6\u7cbe\u70bc\u7684\u5e93\uff0c\u4f7f\u8fd9\u4e2a\u4ea7\u54c1\u66f4\u5bb9\u6613\u4f7f\u7528\u3002\n\n\n\u4f7f\u7528\u8fd9\u79cd\u4f20\u611f\u5668\u5f88\u5bb9\u6613\u3002 \u5bf9\u4e8e \nSeeeduino\n \uff08\u7b26\u5408Arduino\uff09\uff0c\u53ea\u9700\u5c06\u6b64\u5206\u652f\u677f\u4e0e\u4e3b\u63a7\u677f\u901a\u8fc7 \nGrove cable\n\u3002 \u7136\u540e\u4f7f\u7528 GitHub \u63d0\u4f9b\u7684\u5e93\u548c\u793a\u4f8b/\u6f14\u793a\u4ee3\u7801\u6765\u83b7\u53d6\u60a8\u7684\u6570\u636e\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u6ca1\u6709 Base Shield \u7684 Arduino \uff0c\u53ea\u9700\u5c06 VIN \u5f15\u811a\u8fde\u63a5\u5230 5V \u7535\u538b\u5f15\u811a\uff0c GND \u63a5\u5730\uff0c SCL \u81f3 I2C \u65f6\u949f\uff08\u6a21\u62df5\uff09\u548c SDA \u81f3 I2C \u6570\u636e\uff08\u6a21\u62df4\uff09\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u9ad8\u5ea6\u53ef\u9760\uff0c\u51c6\u786e\u5feb\u901f\u7684\u54cd\u5e94\u65f6\u95f4\n\n\nGrove \u517c\u5bb9\u4e14\u6613\u4e8e\u4f7f\u7528\n\n\n\u826f\u597d\u6821\u51c6\uff0c\u7ebf\u6027\u5316\uff0c\u8865\u507f\u6570\u5b57\u8f93\u51fa\n\n\n\u9ad8\u5ea6\u7cbe\u70bc\u7684\u5f00\u53d1\u5e93\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u8303\u56f4\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\uff08VCC\uff09\n\n\n3.3 V \u6216 5 V\n\n\n\n\n\n\nI / O \u903b\u8f91\u7535\u5e73\n\n\n\u57fa\u4e8eVCC\u7684 3.3 V \u6216 5 V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n100 \u03bcA\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-40\u2013125 \u2103\n\n\n\n\n\n\n\u6e29\u5ea6\u4f20\u611f\u5668\u8303\u56f4\n\n\n-40\u2013125 \u2103, \u6709 \u00b10.3\u00b0C \u7684\u7cbe\u5ea6\n\n\n\n\n\n\n\u6e7f\u5ea6\u4f20\u611f\u5668\u8303\u56f4\n\n\n0% - 100%(\u76f8\u5bf9\u6e7f\u5ea6), \u6709 \u00b12% \u7684\u7cbe\u5ea6\n\n\n\n\n\n\n\u4f20\u611f\u5668\u82af\u7247\n\n\nSHT31(\nDatasheet\n)\n\n\n\n\n\n\n\u63a5\u53e3\u603b\u7ebf\n\n\nI\n2\nC\n\n\n\n\n\n\n\u91cd\u91cf\n\n\n4 g (for breakout board), 9 g for whole package each piece\n\n\n\n\n\n\n\u5916\u5f62\u5c3a\u5bf8\n\n\n40 (\u957f)\u00d7 20 (\u5bbd) mm\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\n\n\n\n\n\u5e73\u53f0\n\n\n\n\nSeeeduino/Arduino\n\n\n\n\nRaspberry Pi\n\n\n\n\nBeaglebone\n\n\n\n\nLinkIt ONE\n\n\n\n\n\n\n\n\n\u652f\u6301\u72b6\u6001\n\n\n\n\n\u652f\u6301\n\n\n\n\n\u4e0d\u652f\u6301\n\n\n\n\n\u652f\u6301\n\n\n\n\n\u652f\u6301\n\n\n\n\n\n\n\n\n\u6ce8\u610f\n\n\n\n\n\u5982\u679c\u76f8\u5e94\u5e73\u53f0\u6ca1\u6709\u63d0\u5230\u7248\u672c\u53f7\uff0c\u5219\u8868\u793a\u8be5\u4ea7\u54c1\u652f\u6301\u8be5\u5e73\u53f0\u5185\u7684\u6240\u6709\u7248\u672c\u3002\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\u5e94\u7528 Grove \u63a5\u53e3\u8be5\u6a21\u5757\u5c06\u975e\u5e38\u5bb9\u6613\u88ab\u4f7f\u7528\u3002\n\n\n\n\n\n\n\u8b66\u544a\n\n\u4f7f\u7528\u65f6\u8bf7\u52ff\u89e6\u6478\uff0c\u6447\u6643\u6216\u8ba9\u672c\u4ea7\u54c1\u632f\u52a8\u3002 \u5426\u5219\u4f1a\u5f71\u54cd\u6d4b\u91cf\u6570\u636e\u7684\u51c6\u786e\u6027\u3002\n\n\n\n\u5957\u88c5\u5305\u62ec\n(\u4e3b\u8981\u90e8\u5206)\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - Temp\nHumi Sensor(SHT31)\n\n\n1 \u7247\n\n\n\n\n\n\nGrove cable\n\n\n1 \u7247\n\n\n\n\n\n\n\n\n\u5165\u95e8\n\n\n\u73b0\u5728\u8ba9\u6211\u4eec\u8fd0\u7528\u8fd9\u4e2a\u6a21\u5757\u4f7f\u7528\u6240\u63d0\u4f9b\u7684\u5e93/\u793a\u4f8b\u7684\u4e00\u4e9b\u57fa\u672c\u7684\u4f8b\u5b50\u3002\n\n\n\u4f7f\u7528 Arduino\n\n\n\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Arduino\u5e73\u53f0\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u9879\u76ee\u3002 \u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u4e3b\u63a7\u677f\uff0c\u8fd9\u4e9b\u8bf4\u660e\u548c\u6e90\u4ee3\u7801\u53ef\u80fd\u4ecd\u7136\u6709\u5e2e\u52a9\u3002\n\n\n\u9700\u8981\u7684\u7d20\u6750\n\n\n\n\nGrove - Temp\nHumi Sensor(SHT31) \u00d7 1\n\n\nSeeeduino 4.2\n \uff08\u4e0e Arduino \u5b8c\u5168\u517c\u5bb9\uff09\u6216 Arduino UNO \uff08\u5176\u4ed6\u578b\u53f7\u4e5f\u5f88\u597d\uff09\u00d71\n\n\nGrove - Base Shield \u00d71\uff08\u8fd9\u662f\u53ef\u9009\u7684\uff0c\u5982\u679c\u60a8\u4f7f\u7528 Seeeduino \uff0c\u56e0\u4e3a Seeeduino  v4.2\u4e0a\u6709\u4e24\u4e2a I2C \u63d2\u5ea7\uff09\n\n\nUSB \u6570\u636e\u7ebf\uff08A\u578b\u81f3B\u578b\uff0c\u9002\u7528\u4e8e Arduino \uff09\u00d71 \u6216 USB \u6570\u636e\u7ebf\uff08 Type-A \u81f3 Micro Type-B\uff0cSeeeduino\uff09 \u00d71\n\n\nGrove cable\n \u00d7 1\n\n\n\n\n\u8fde\u63a5\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 Seeeduino \uff0c\u8bf7\u5c06 Grove \u6a21\u5757\u8fde\u63a5\u5230 \nI2C\n \u7aef\u53e3\uff0c\u5982\uff1a\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 Arduino UNO \u6216\u5176\u4ed6\u517c\u5bb9\u673a\u578b\uff0c\u8bf7\u5148\u52a0\u5165 Grove - Base Shield V2 \u3002 \u7136\u540e\uff0c\u5c06 Grove \u6a21\u5757\u8fde\u63a5\u5230 I2C \u7aef\u53e3\uff0c\u5982\uff1a\n\n\n\n\n\u7f16\u7801\u5de5\u4f5c\n\n\n\u4f60\u53ef\u4ee5\u627e\u5230\u6f14\u793a\u4ee3\u7801 \n\u8fd9\u91cc\n \u548c\u5f00\u53d1\u5e93 \n\u8fd9\u91cc\n.\n\n\n\n\n\n\n\u5178\u578b\u7684\u6f14\u793a\u4ee3\u7801\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 \nCodebender\n \u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u63a7\u677f\u3002\n    \n\n\n\n\n\n\n\n\n\u4e0b\u8f7d\u5e76\u4e0a\u4f20\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20 Arduino \u6570\u636e\uff0c\u8bf7\u8bbf\u95ee Windows \u7528\u6237\u7684\nhttps://www.arduino.cc/en/Guide/Windows\n\u6216\u4e3a Mac \u7528\u6237\u63d0\u4f9b\u7684\nhttps://www.arduino.cc/en/Guide/MacOSX\n\u3002 \u60a8\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\u3002\n\n\n\n\n\n\n\n\n\n\n\u5c0f\u63d0\u793a\n\n\u5982\u679c\u60a8\u4f7f\u7528 Seeeduino \uff0c\u5f53\u4f60\u4e0a\u4f20\u6570\u636e\u65f6\uff0c\u8bf7\u9009\u62e9 \nBoards\n under \nTools\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nEAGLE schematics, PCB files and PDF schematic\n\n\nSHT31 Sensor Datasheet\n\n\nLibrary and example code\n on GitHub\n\n\nI\n2\nC How-to for Arduino", 
            "title": "Grove-Temperature and Humidity Sensor-SHT31"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_1", 
            "text": "\u9ad8\u5ea6\u53ef\u9760\uff0c\u51c6\u786e\u5feb\u901f\u7684\u54cd\u5e94\u65f6\u95f4  Grove \u517c\u5bb9\u4e14\u6613\u4e8e\u4f7f\u7528  \u826f\u597d\u6821\u51c6\uff0c\u7ebf\u6027\u5316\uff0c\u8865\u507f\u6570\u5b57\u8f93\u51fa  \u9ad8\u5ea6\u7cbe\u70bc\u7684\u5f00\u53d1\u5e93    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_2", 
            "text": "\u53c2\u6570  \u8303\u56f4      \u8f93\u5165\u7535\u538b\uff08VCC\uff09  3.3 V \u6216 5 V    I / O \u903b\u8f91\u7535\u5e73  \u57fa\u4e8eVCC\u7684 3.3 V \u6216 5 V    \u5de5\u4f5c\u7535\u6d41  100 \u03bcA    \u5de5\u4f5c\u6e29\u5ea6  -40\u2013125 \u2103    \u6e29\u5ea6\u4f20\u611f\u5668\u8303\u56f4  -40\u2013125 \u2103, \u6709 \u00b10.3\u00b0C \u7684\u7cbe\u5ea6    \u6e7f\u5ea6\u4f20\u611f\u5668\u8303\u56f4  0% - 100%(\u76f8\u5bf9\u6e7f\u5ea6), \u6709 \u00b12% \u7684\u7cbe\u5ea6    \u4f20\u611f\u5668\u82af\u7247  SHT31( Datasheet )    \u63a5\u53e3\u603b\u7ebf  I 2 C    \u91cd\u91cf  4 g (for breakout board), 9 g for whole package each piece    \u5916\u5f62\u5c3a\u5bf8  40 (\u957f)\u00d7 20 (\u5bbd) mm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_3", 
            "text": "\u5e73\u53f0  \nSeeeduino/Arduino  \nRaspberry Pi  \nBeaglebone  \nLinkIt ONE    \n\u652f\u6301\u72b6\u6001  \n\u652f\u6301  \n\u4e0d\u652f\u6301  \n\u652f\u6301  \n\u652f\u6301    \n\u6ce8\u610f  \n\u5982\u679c\u76f8\u5e94\u5e73\u53f0\u6ca1\u6709\u63d0\u5230\u7248\u672c\u53f7\uff0c\u5219\u8868\u793a\u8be5\u4ea7\u54c1\u652f\u6301\u8be5\u5e73\u53f0\u5185\u7684\u6240\u6709\u7248\u672c\u3002", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_4", 
            "text": "\u5e94\u7528 Grove \u63a5\u53e3\u8be5\u6a21\u5757\u5c06\u975e\u5e38\u5bb9\u6613\u88ab\u4f7f\u7528\u3002    \u8b66\u544a \n\u4f7f\u7528\u65f6\u8bf7\u52ff\u89e6\u6478\uff0c\u6447\u6643\u6216\u8ba9\u672c\u4ea7\u54c1\u632f\u52a8\u3002 \u5426\u5219\u4f1a\u5f71\u54cd\u6d4b\u91cf\u6570\u636e\u7684\u51c6\u786e\u6027\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_5", 
            "text": "\u540d\u79f0  \u6570\u91cf      Grove - Temp Humi Sensor(SHT31)  1 \u7247    Grove cable  1 \u7247", 
            "title": "\u5957\u88c5\u5305\u62ec(\u4e3b\u8981\u90e8\u5206)"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_6", 
            "text": "\u73b0\u5728\u8ba9\u6211\u4eec\u8fd0\u7528\u8fd9\u4e2a\u6a21\u5757\u4f7f\u7528\u6240\u63d0\u4f9b\u7684\u5e93/\u793a\u4f8b\u7684\u4e00\u4e9b\u57fa\u672c\u7684\u4f8b\u5b50\u3002", 
            "title": "\u5165\u95e8"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#arduino", 
            "text": "\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Arduino\u5e73\u53f0\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u9879\u76ee\u3002 \u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u4e3b\u63a7\u677f\uff0c\u8fd9\u4e9b\u8bf4\u660e\u548c\u6e90\u4ee3\u7801\u53ef\u80fd\u4ecd\u7136\u6709\u5e2e\u52a9\u3002", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_7", 
            "text": "Grove - Temp Humi Sensor(SHT31) \u00d7 1  Seeeduino 4.2  \uff08\u4e0e Arduino \u5b8c\u5168\u517c\u5bb9\uff09\u6216 Arduino UNO \uff08\u5176\u4ed6\u578b\u53f7\u4e5f\u5f88\u597d\uff09\u00d71  Grove - Base Shield \u00d71\uff08\u8fd9\u662f\u53ef\u9009\u7684\uff0c\u5982\u679c\u60a8\u4f7f\u7528 Seeeduino \uff0c\u56e0\u4e3a Seeeduino  v4.2\u4e0a\u6709\u4e24\u4e2a I2C \u63d2\u5ea7\uff09  USB \u6570\u636e\u7ebf\uff08A\u578b\u81f3B\u578b\uff0c\u9002\u7528\u4e8e Arduino \uff09\u00d71 \u6216 USB \u6570\u636e\u7ebf\uff08 Type-A \u81f3 Micro Type-B\uff0cSeeeduino\uff09 \u00d71  Grove cable  \u00d7 1", 
            "title": "\u9700\u8981\u7684\u7d20\u6750"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_8", 
            "text": "\u5982\u679c\u60a8\u4f7f\u7528 Seeeduino \uff0c\u8bf7\u5c06 Grove \u6a21\u5757\u8fde\u63a5\u5230  I2C  \u7aef\u53e3\uff0c\u5982\uff1a   \u5982\u679c\u60a8\u4f7f\u7528 Arduino UNO \u6216\u5176\u4ed6\u517c\u5bb9\u673a\u578b\uff0c\u8bf7\u5148\u52a0\u5165 Grove - Base Shield V2 \u3002 \u7136\u540e\uff0c\u5c06 Grove \u6a21\u5757\u8fde\u63a5\u5230 I2C \u7aef\u53e3\uff0c\u5982\uff1a", 
            "title": "\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_9", 
            "text": "\u4f60\u53ef\u4ee5\u627e\u5230\u6f14\u793a\u4ee3\u7801  \u8fd9\u91cc  \u548c\u5f00\u53d1\u5e93  \u8fd9\u91cc .    \u5178\u578b\u7684\u6f14\u793a\u4ee3\u7801\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528  Codebender  \u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u63a7\u677f\u3002\n         \u4e0b\u8f7d\u5e76\u4e0a\u4f20\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20 Arduino \u6570\u636e\uff0c\u8bf7\u8bbf\u95ee Windows \u7528\u6237\u7684 https://www.arduino.cc/en/Guide/Windows \u6216\u4e3a Mac \u7528\u6237\u63d0\u4f9b\u7684 https://www.arduino.cc/en/Guide/MacOSX \u3002 \u60a8\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\u3002      \u5c0f\u63d0\u793a \n\u5982\u679c\u60a8\u4f7f\u7528 Seeeduino \uff0c\u5f53\u4f60\u4e0a\u4f20\u6570\u636e\u65f6\uff0c\u8bf7\u9009\u62e9  Boards  under  Tools", 
            "title": "\u7f16\u7801\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-TempAndHumi_Sensor-SHT31/#_10", 
            "text": "EAGLE schematics, PCB files and PDF schematic  SHT31 Sensor Datasheet  Library and example code  on GitHub  I 2 C How-to for Arduino", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-TemptureAndHumidity_Sensor_High_Accuracy_AndMini-v1.0/", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u591a\u529f\u80fd\u4f20\u611f\u5668\uff0c\u53ef\u540c\u65f6\u7ed9\u4f60\u6e29\u5ea6\u548c\u76f8\u5bf9\u6e7f\u5ea6\u7684\u4fe1\u606f\u3002 \u5b83\u91c7\u7528 TH02 sensor \u8fdb\u884c\u6d4b\u91cf\uff0c\u53ef\u6ee1\u8db3\u4e00\u822c\u9700\u6c42\u7684\u9879\u76ee\u3002 \u5f53\u73af\u5883\u6e7f\u5ea6\u5728 0-80\uff05RH \u548c 0-70\u00b0C \u4e4b\u95f4\u7684\u6e29\u5ea6\u6761\u4ef6\u4e0b\uff0c\u5b83\u53ef\u4ee5\u63d0\u4f9b\u53ef\u9760\u7684\u8bfb\u6570\uff0c\u80fd\u591f\u6ee1\u8db3\u5927\u591a\u6570\u5bb6\u5ead\u548c\u65e5\u5e38\u5e94\u7528\u7684\u9700\u6c42\u3002\n\n\n\n\n\u4ea7\u54c1\u53c2\u6570\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\u8303\u56f4\n\u00a0\u00a0\u00a0\u00a0 - \uff083.3V\u301c5V\uff09\n\n\n\u4f4e\u529f\u8017\n\u00a0\u00a0\u00a0\u00a0 - \u5728 RH \u8f6c\u6362\u671f\u95f4\u4e3a350\u03bcA\n\n\n0\u301c100\uff05RH\u5de5\u4f5c\u8303\u56f4\n\n\n\u6d4b\u91cf\u8303\u56f4\uff1a\n\u00a0\u00a0\u00a0\u00a0 - \u6e7f\u5ea6\uff1a0\uff05 - 80\uff05RH\n\u00a0\u00a0\u00a0\u00a0 - \u6e29\u5ea6\uff1a0\u301c70\u2103\n\n\n\u51c6\u786e\u6027\uff1a\n\u00a0\u00a0\u00a0\u00a0 - \u6e7f\u5ea6\uff1a\u00b14.5\uff05RH\n\u00a0\u00a0\u00a0\u00a0 - \u6e29\u5ea6\uff1a\u00b10.5\u00b0C\n\n\n\u5177\u6709 I2C \u4e3b\u673a\u63a5\u53e3\n\n\n\u5177\u6709\u957f\u671f\u8fd0\u884c\u7684\u7a33\u5b9a\u6027\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u5de5\u4e1aHVAC / R\n\n\n\u6052\u6e29\u5668/\u6e7f\u5ea6\u8ba1\n\n\n\u5fae\u73af\u5883/\u6570\u636e\u4e2d\u5fc3\n\n\n\n\n\u793a\u8303\n\n\n\u8be5\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8be5 Grove - Temperature\nHumidity Sensor (High-Accuracy \nMini) Sensor \u8bfb\u53d6\u6e29\u5ea6\u548c\u6e7f\u5ea6\u4fe1\u606f\u3002\n\n\n\n\u5c06 Temperature and Humidity sensor \u8fde\u63a5\u5230 Grove - Base Shield \u7684\u6a21\u62df\u7aef\u53e3 \nI2C\n\u3002\n\n\n\n\n\u4e0b\u8f7d  \nGrove_Temper_Humidity_TH02 \u5e93\n \u5e76\u4e14\u5b89\u88c5\u8fd9\u4e2a\u5e93\u5230 Arduino \u5e93\u6587\u4ef6\u3002\n\n\n\n\n/*\n * Demo name  ?: TH02_dev demo\n * Usage      ?: DIGITAL I2C HUMIDITY AND TEMPERATURE SENSOR\n * Author     ?: Oliver Wang from Seeed Studio\n * Version    ?: V0.1\n */\n\n#include \nTH02_dev.h\n\n#include \nArduino.h\n\n#include \nWire.h\n\n\nvoid setup()\n{\n    Serial.begin(9600);        // start serial for output\n\n    Serial.println(\n****TH02_dev demo by seeed studio****\\n\n);\n    /* Power up,delay 150ms,until voltage is stable */\n    delay(150);\n    /* Reset HP20x_dev */\n    TH02.begin();\n    delay(100);\n\n    /* Determine TH02_dev is available or not */\n    Serial.println(\nTH02_dev is available.\\n\n);\n}\n\n\nvoid loop()\n{\n    float temper = TH02.ReadTemperature();\n    Serial.println(\nTemperature: \n);\n    Serial.print(temper);\n    Serial.println(\nC\\r\\n\n);\n\n    float humidity = TH02.ReadHumidity();\n    Serial.println(\nHumidity: \n);\n    Serial.print(humidity);\n    Serial.println(\n%\\r\\n\n);\n    delay(1000);\n}\n\n\n\n\n\u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684 Arduino \u677f\u4e0a\uff0c\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u89c2\u5bdf\u73af\u5883\u7684\u6e29\u5ea6\u548c\u76f8\u5bf9\u6e7f\u5ea6\u4fe1\u606f\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - Temperature\nHumidity Sensor (High-Accuracy \n Mini) V1.0 sch pcb\n\n\nTH02_SENSOR.pdf\n\n\nGrove_Temper_Humidity_TH02 library", 
            "title": "Grove-Tempture and Humidity Sensor High Accuracy Mini-v1.0"
        }, 
        {
            "location": "/Grove-TemptureAndHumidity_Sensor_High_Accuracy_AndMini-v1.0/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b\u8303\u56f4\n\u00a0\u00a0\u00a0\u00a0 - \uff083.3V\u301c5V\uff09  \u4f4e\u529f\u8017\n\u00a0\u00a0\u00a0\u00a0 - \u5728 RH \u8f6c\u6362\u671f\u95f4\u4e3a350\u03bcA  0\u301c100\uff05RH\u5de5\u4f5c\u8303\u56f4  \u6d4b\u91cf\u8303\u56f4\uff1a\n\u00a0\u00a0\u00a0\u00a0 - \u6e7f\u5ea6\uff1a0\uff05 - 80\uff05RH\n\u00a0\u00a0\u00a0\u00a0 - \u6e29\u5ea6\uff1a0\u301c70\u2103  \u51c6\u786e\u6027\uff1a\n\u00a0\u00a0\u00a0\u00a0 - \u6e7f\u5ea6\uff1a\u00b14.5\uff05RH\n\u00a0\u00a0\u00a0\u00a0 - \u6e29\u5ea6\uff1a\u00b10.5\u00b0C  \u5177\u6709 I2C \u4e3b\u673a\u63a5\u53e3  \u5177\u6709\u957f\u671f\u8fd0\u884c\u7684\u7a33\u5b9a\u6027    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u53c2\u6570"
        }, 
        {
            "location": "/Grove-TemptureAndHumidity_Sensor_High_Accuracy_AndMini-v1.0/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-TemptureAndHumidity_Sensor_High_Accuracy_AndMini-v1.0/#_2", 
            "text": "\u5de5\u4e1aHVAC / R  \u6052\u6e29\u5668/\u6e7f\u5ea6\u8ba1  \u5fae\u73af\u5883/\u6570\u636e\u4e2d\u5fc3", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-TemptureAndHumidity_Sensor_High_Accuracy_AndMini-v1.0/#_3", 
            "text": "\u8be5\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8be5 Grove - Temperature Humidity Sensor (High-Accuracy  Mini) Sensor \u8bfb\u53d6\u6e29\u5ea6\u548c\u6e7f\u5ea6\u4fe1\u606f\u3002  \n\u5c06 Temperature and Humidity sensor \u8fde\u63a5\u5230 Grove - Base Shield \u7684\u6a21\u62df\u7aef\u53e3  I2C \u3002   \u4e0b\u8f7d   Grove_Temper_Humidity_TH02 \u5e93  \u5e76\u4e14\u5b89\u88c5\u8fd9\u4e2a\u5e93\u5230 Arduino \u5e93\u6587\u4ef6\u3002   /*\n * Demo name  ?: TH02_dev demo\n * Usage      ?: DIGITAL I2C HUMIDITY AND TEMPERATURE SENSOR\n * Author     ?: Oliver Wang from Seeed Studio\n * Version    ?: V0.1\n */\n\n#include  TH02_dev.h \n#include  Arduino.h \n#include  Wire.h \n\nvoid setup()\n{\n    Serial.begin(9600);        // start serial for output\n\n    Serial.println( ****TH02_dev demo by seeed studio****\\n );\n    /* Power up,delay 150ms,until voltage is stable */\n    delay(150);\n    /* Reset HP20x_dev */\n    TH02.begin();\n    delay(100);\n\n    /* Determine TH02_dev is available or not */\n    Serial.println( TH02_dev is available.\\n );\n}\n\n\nvoid loop()\n{\n    float temper = TH02.ReadTemperature();\n    Serial.println( Temperature:  );\n    Serial.print(temper);\n    Serial.println( C\\r\\n );\n\n    float humidity = TH02.ReadHumidity();\n    Serial.println( Humidity:  );\n    Serial.print(humidity);\n    Serial.println( %\\r\\n );\n    delay(1000);\n}  \u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684 Arduino \u677f\u4e0a\uff0c\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u89c2\u5bdf\u73af\u5883\u7684\u6e29\u5ea6\u548c\u76f8\u5bf9\u6e7f\u5ea6\u4fe1\u606f\u3002", 
            "title": "\u793a\u8303"
        }, 
        {
            "location": "/Grove-TemptureAndHumidity_Sensor_High_Accuracy_AndMini-v1.0/#_4", 
            "text": "Grove - Temperature Humidity Sensor (High-Accuracy   Mini) V1.0 sch pcb  TH02_SENSOR.pdf  Grove_Temper_Humidity_TH02 library", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-UV_Sensor/", 
            "text": "UV\u4f20\u611f\u5668\u7528\u4e8e\u68c0\u6d4b\u5c04\u5165\u7d2b\u5916\u7ebf\uff08UV\uff09\u8f90\u5c04\u7684\u5f3a\u5ea6\u3002 \u8fd9\u79cd\u5f62\u5f0f\u7684\u7535\u78c1\u8f90\u5c04\u5177\u6709\u6bd4\u53ef\u89c1\u5149\u8f90\u5c04\u66f4\u77ed\u7684\u6ce2\u957f\u3002 Grove-UV\u4f20\u611f\u5668\u57fa\u4e8e\u4f20\u611f\u5668GUVA-S12D\uff0c\u5176\u5bbd\u8303\u56f4\u4e3a200nm-400nm\u3002 \u8be5\u6a21\u5757\u8f93\u51fa\u968f\u7d2b\u5916\u7ebf\u5f3a\u5ea6\u53d8\u5316\u7684\u7535\u4fe1\u53f7\uff0c\u8fd9\u5c06\u7ed9\u60a8\u7684\u5efa\u8bae\u662f\u5426\u4eca\u5929\u9002\u5408\u53bb\u6c99\u6ee9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u9ad8\u7a33\u5b9a\u6027\n\n\n\u826f\u597d\u7684\u7075\u654f\u5ea6\n\n\n\u4f4e\u529f\u8017\n\n\n\u5177\u6709Schottky\u5149\u7535\u4e8c\u6781\u7ba1\u4f20\u611f\u5668\n\n\n\u54cd\u5e94\u8303\u56f4\u5e7f\n\n\n\u5177\u6709Grove\u63a5\u53e3\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\n\n\n\u6807\u51c6\n\n\n\u6700\u5927\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3.0\n\n\n5.0\n\n\n5.1\n\n\nVDC\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n\n\n0.31\n\n\n\n\nmA\n\n\n\n\n\n\n\u8f93\u51fa\u7535\u538b\n\n\n\n\n\n\n\n\nmV\n\n\n\n\n\n\n\u54cd\u5e94\u6ce2\u957f\n\n\n240\n\n\n~\n\n\n370\n\n\nnm\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-30\n\n\n~\n\n\n85\n\n\n\u2103\n\n\n\n\n\n\n\n\nPlatform Support\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7d2b\u5916\u7ebf\u4f20\u611f\u5668\u7528\u4e8e\u8bb8\u591a\u4e0d\u540c\u7684\u5e94\u7528\uff0c\u5305\u62ec\u836f\u54c1\uff0c\u6c7d\u8f66\u548c\u673a\u5668\u4eba\u3002\n\n\nUV\u4f20\u611f\u5668\u4e5f\u7528\u4e8e\u5370\u5237\u884c\u4e1a\uff0c\u7528\u4e8e\u6eb6\u5242\u5904\u7406\u548c\u67d3\u8272\u5de5\u827a\u3002\n\n\n\u6b64\u5916\uff0c\u7d2b\u5916\u7ebf\u4f20\u611f\u5668\u4e5f\u7528\u4e8e\u5316\u5b66\u5de5\u4e1a\u7528\u4e8e\u5316\u5b66\u54c1\u7684\u751f\u4ea7\uff0c\u50a8\u5b58\u548c\u8fd0\u8f93\u3002\n\n\n\n\nUV\u4f20\u611f\u5668\u7684\u7406\u8bba\u662f\uff1a\u5728\u9633\u5149\u4e0b\uff0cUV\u6307\u6570\u548c\u5149\u7535\u6d41\u662f\u7ebf\u6027\u76f8\u5173\u7684\u5173\u7cfb\u3002\n\n\n\n\n\u5173\u4e8e\u6211\u4eec\u7684Grove-UV\u4f20\u611f\u5668\uff0c\u6211\u4eec\u5df2\u5c06\u5149\u7535\u8f6c\u6362\u4e3aArduino / Seeeduino\u6536\u96c6\u7684\u76f8\u5e94\u7535\u538b\u503c\u3002 \u8f93\u51fa\u7535\u538b\u548cUV\u6307\u6570\u662f\u7ebf\u6027\u7684\uff1a\n\n\n\u7167\u660e\u5f3a\u5ea6= 307 * Vsig\n\n\nVsig\u662f\u4eceGrove\u63a5\u53e3\u7684SIG\u5f15\u811a\u6d4b\u5f97\u7684\u7535\u538b\u503c\u3002\n\u5bf9\u4e8e\u6ce2\u957f\u6d4b\u91cf\u8303\u56f4\u4e3a240nm\u301c370nm\n\u7167\u660e\u5f3a\u5ea6\u5355\u4f4d\uff1amW / m \n 2 \n\n\n\n\nNote\n\n\u8981\u8ba1\u7b97\u7d2b\u5916\u7ebf\u6307\u6570\u503c\uff0c\u8bf7\u53c2\u8003\n\u7f8e\u56fdEPA \n\u3002 \u5f88\u96be\u8bf4\u8fd9\u4e2a\u4f20\u611f\u5668\u7684\u6d4b\u91cf\u503c\u53ef\u4ee5\u8f6c\u6362\u6210EPA\u6807\u51c6\u7684\u7d2b\u5916\u7ebf\u6307\u6570\uff0c\u4f46\u53ef\u4ee5\u5927\u81f4\u4f30\u8ba1\u3002\n\n\n\n\nUV\u6307\u6570=\u7167\u660e\u5f3a\u5ea6/ 200\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\nNote\n\n\n\u672c\u7ae0\u57fa\u4e8eWin10\u548cArduino IDE 1.6.9\n\n\n\n\n\u6211\u4eec\u5c06\u901a\u8fc7\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u6b3eGroove-UV\u4f20\u611f\u5668\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - UV Sensor\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u7531\u4e8eGrove\u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u5236\u4f5c\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230Base Shield\u7684\u6b63\u786e\u7aef\u53e3\u3002 \u5bf9\u4e8e\u6b64\u6f14\u793a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2aGrove\u6a21\u5757\u3002\n- \u5c06Grove UV\u4f20\u611f\u5668\u8fde\u63a5\u5230Grove - Base Shield\u7684A0\u7aef\u53e3\u3002\n- \u5c06Grove - Base Shield\u63d2\u5165Arduino / Seeeduino\uff0c\u5e76\u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06\u5176\u8fde\u63a5\u5230PC\u3002\n- \u6f14\u793a\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\n\n\n\n\n\u5c06\u7a0b\u5e8f\u4e0a\u4f20\u5230Arduino\u5e76\u6253\u5f00\u4e32\u53e3\u76d1\u63a7\u6570\u636e\n\n\n// modified by Victor\n// to calculate UV index directly\nvoid setup(){\n\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int sensorValue;\n    long  sum=0;\n    for(int i=0;i\n1024;i++)// accumulate readings for 1024 times\n    {\n        sensorValue=analogRead(A0);\n        sum=sensorValue+sum;\n        delay(2);\n    }\n    long meanVal = sum/1024;  // get mean value\n    Serial.print(\nThe current UV index is:\n);\n    Serial.print((meanVal*1000/4.3-83)/21);// get a detailed calculating expression for UV index in schematic files.\n    Serial.print(\n\\n\n);\n    delay(20);\n\n}\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - UV Sensor v1.1 PCB and schematics(current version) in Eagle format\n\n\nGrove - UV Sensor v1.1 PCB(current version) in PDF format\n\n\nGrove - UV Sensor v1.1 schematics(current version) in PDF format\n\n\nGrove\u00a0-\u00a0UV\u00a0Sensor\u00a0v1.1 Sensor Datasheets(current version)\n\n\nUS EPA Suggestions About UV Radiation\n\n\nGrove - UV Sensor v1.0 schematics and datasheets(older version)", 
            "title": "Grove-UV Sensor"
        }, 
        {
            "location": "/Grove-UV_Sensor/#_1", 
            "text": "\u9ad8\u7a33\u5b9a\u6027  \u826f\u597d\u7684\u7075\u654f\u5ea6  \u4f4e\u529f\u8017  \u5177\u6709Schottky\u5149\u7535\u4e8c\u6781\u7ba1\u4f20\u611f\u5668  \u54cd\u5e94\u8303\u56f4\u5e7f  \u5177\u6709Grove\u63a5\u53e3    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-UV_Sensor/#_2", 
            "text": "\u9879\u76ee  \u6700\u5c0f  \u6807\u51c6  \u6700\u5927  \u5355\u4f4d      \u5de5\u4f5c\u7535\u538b  3.0  5.0  5.1  VDC    \u5de5\u4f5c\u7535\u6d41   0.31   mA    \u8f93\u51fa\u7535\u538b     mV    \u54cd\u5e94\u6ce2\u957f  240  ~  370  nm    \u5de5\u4f5c\u6e29\u5ea6  -30  ~  85  \u2103", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-UV_Sensor/#platform-support", 
            "text": "", 
            "title": "Platform Support"
        }, 
        {
            "location": "/Grove-UV_Sensor/#_3", 
            "text": "\u7d2b\u5916\u7ebf\u4f20\u611f\u5668\u7528\u4e8e\u8bb8\u591a\u4e0d\u540c\u7684\u5e94\u7528\uff0c\u5305\u62ec\u836f\u54c1\uff0c\u6c7d\u8f66\u548c\u673a\u5668\u4eba\u3002  UV\u4f20\u611f\u5668\u4e5f\u7528\u4e8e\u5370\u5237\u884c\u4e1a\uff0c\u7528\u4e8e\u6eb6\u5242\u5904\u7406\u548c\u67d3\u8272\u5de5\u827a\u3002  \u6b64\u5916\uff0c\u7d2b\u5916\u7ebf\u4f20\u611f\u5668\u4e5f\u7528\u4e8e\u5316\u5b66\u5de5\u4e1a\u7528\u4e8e\u5316\u5b66\u54c1\u7684\u751f\u4ea7\uff0c\u50a8\u5b58\u548c\u8fd0\u8f93\u3002   UV\u4f20\u611f\u5668\u7684\u7406\u8bba\u662f\uff1a\u5728\u9633\u5149\u4e0b\uff0cUV\u6307\u6570\u548c\u5149\u7535\u6d41\u662f\u7ebf\u6027\u76f8\u5173\u7684\u5173\u7cfb\u3002   \u5173\u4e8e\u6211\u4eec\u7684Grove-UV\u4f20\u611f\u5668\uff0c\u6211\u4eec\u5df2\u5c06\u5149\u7535\u8f6c\u6362\u4e3aArduino / Seeeduino\u6536\u96c6\u7684\u76f8\u5e94\u7535\u538b\u503c\u3002 \u8f93\u51fa\u7535\u538b\u548cUV\u6307\u6570\u662f\u7ebf\u6027\u7684\uff1a  \u7167\u660e\u5f3a\u5ea6= 307 * Vsig  Vsig\u662f\u4eceGrove\u63a5\u53e3\u7684SIG\u5f15\u811a\u6d4b\u5f97\u7684\u7535\u538b\u503c\u3002\n\u5bf9\u4e8e\u6ce2\u957f\u6d4b\u91cf\u8303\u56f4\u4e3a240nm\u301c370nm\n\u7167\u660e\u5f3a\u5ea6\u5355\u4f4d\uff1amW / m   2    Note \n\u8981\u8ba1\u7b97\u7d2b\u5916\u7ebf\u6307\u6570\u503c\uff0c\u8bf7\u53c2\u8003 \u7f8e\u56fdEPA  \u3002 \u5f88\u96be\u8bf4\u8fd9\u4e2a\u4f20\u611f\u5668\u7684\u6d4b\u91cf\u503c\u53ef\u4ee5\u8f6c\u6362\u6210EPA\u6807\u51c6\u7684\u7d2b\u5916\u7ebf\u6307\u6570\uff0c\u4f46\u53ef\u4ee5\u5927\u81f4\u4f30\u8ba1\u3002  UV\u6307\u6570=\u7167\u660e\u5f3a\u5ea6/ 200", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-UV_Sensor/#_4", 
            "text": "Note  \u672c\u7ae0\u57fa\u4e8eWin10\u548cArduino IDE 1.6.9   \u6211\u4eec\u5c06\u901a\u8fc7\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u6b3eGroove-UV\u4f20\u611f\u5668\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - UV Sensor  Base Shield           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70     \u786c\u4ef6\u8fde\u63a5  \u7531\u4e8eGrove\u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u5236\u4f5c\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230Base Shield\u7684\u6b63\u786e\u7aef\u53e3\u3002 \u5bf9\u4e8e\u6b64\u6f14\u793a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2aGrove\u6a21\u5757\u3002\n- \u5c06Grove UV\u4f20\u611f\u5668\u8fde\u63a5\u5230Grove - Base Shield\u7684A0\u7aef\u53e3\u3002\n- \u5c06Grove - Base Shield\u63d2\u5165Arduino / Seeeduino\uff0c\u5e76\u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06\u5176\u8fde\u63a5\u5230PC\u3002\n- \u6f14\u793a\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002   \u5c06\u7a0b\u5e8f\u4e0a\u4f20\u5230Arduino\u5e76\u6253\u5f00\u4e32\u53e3\u76d1\u63a7\u6570\u636e  // modified by Victor\n// to calculate UV index directly\nvoid setup(){\n\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int sensorValue;\n    long  sum=0;\n    for(int i=0;i 1024;i++)// accumulate readings for 1024 times\n    {\n        sensorValue=analogRead(A0);\n        sum=sensorValue+sum;\n        delay(2);\n    }\n    long meanVal = sum/1024;  // get mean value\n    Serial.print( The current UV index is: );\n    Serial.print((meanVal*1000/4.3-83)/21);// get a detailed calculating expression for UV index in schematic files.\n    Serial.print( \\n );\n    delay(20);\n\n}", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-UV_Sensor/#_5", 
            "text": "Grove - UV Sensor v1.1 PCB and schematics(current version) in Eagle format  Grove - UV Sensor v1.1 PCB(current version) in PDF format  Grove - UV Sensor v1.1 schematics(current version) in PDF format  Grove\u00a0-\u00a0UV\u00a0Sensor\u00a0v1.1 Sensor Datasheets(current version)  US EPA Suggestions About UV Radiation  Grove - UV Sensor v1.0 schematics and datasheets(older version)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Vibration_Motor/", 
            "text": "\u8fd9\u662f\u4e00\u79cd\u9002\u5408\u4f5c\u4e3a\u975e\u542c\u89c9\u6307\u793a\u5668\u7684\u8ff7\u4f60\u632f\u52a8\u7535\u673a\u3002 \u5f53\u8f93\u5165\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u7535\u673a\u5c06\u50cf\u9759\u97f3\u6a21\u5f0f\u4e0b\u7684\u624b\u673a\u4e00\u6837\u632f\u52a8\u3002\n\n\n\n\u7248\u672c\u4fe1\u606f\n\n\n\n\n\n\n\n\n\n\n\u8c03\u6574\u7248\u672c\n\n\n\u63cf\u8ff0\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\n\n\n\n\n\n\n\nv0.9b\n\n\n\u521d\u59cb\u7248\u672c\n\n\n2011\u5e745\u670810\u65e5\n\n\n\n\n\n\nv1.0\n\n\n\u80fd\u591f\u76f4\u63a5\u4f7f\u7528I / O\u7aef\u53e3\u9a71\u52a8\u632f\u52a8\u7535\u673a\n\n\n2011\u5e7411\u67085\u65e5\n\n\n\n\n\n\nv1.2\n\n\n\u589e\u52a0\u4e86\u6676\u4f53\u7ba1\uff0c\u80fd\u591f\u4f7f\u7528\u8f83\u5927\u7535\u6d41\u9a71\u52a8\u632f\u52a8\u7535\u673a\n\n\n2013\u5e747\u670811\u65e5\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u80fd\u591f\u517c\u5bb9Grove\n\n\n\u65e0\u58f0\n\n\n\u4f4e\u529f\u8017\n\n\n\u9ad8\u53ef\u9760\u6027\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u4ea7\u54c1\u89c4\u683c\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\n\n\n\n\n\u4e00\u822c\n\n\n\n\n\u6700\u5927\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n3.0V\n\n\n\n\n5.0V\n\n\n\n\n5.5V\n\n\n\n\n\n\n\n\n\u63a7\u5236\u6a21\u5f0f\n\n\n\n\n\u903b\u8f91\u7535\u5e73\n\uff08\u5f53\u903b\u8f91\u9ad8\u7535\u5e73\u65f6\uff0c\u7535\u673a\u4e3aON\uff0c\u4f4e\u7535\u5e73\u65f6\uff0c\u7535\u673a\u4e3aOFF\u3002\uff09\n\n\n\n\n\n\n\n\n\u989d\u5b9a\u8f6c\u901f\n\n\n\n\n9000 rpm\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u4f7f\u7528 Arduino\n\n\n\u5176\u5b9e\u8ba9\u5b83\u632f\u52a8\u8ddf\u70b9\u4eaeLED\u4e00\u6837\u5bb9\u6613\u3002 \u4ee5\u4e0b\u662f\u663e\u793a\u5982\u4f55\u6253\u5f00\u632f\u52a8\u7535\u673a\u7684\u793a\u4f8b\u3002\n\n\n\n\n\u4f7f\u7528Grove\u8fde\u63a5\u7ebf\u5c06\u5176\u63d2\u5165Grove - Base Shield\u7684\u6570\u5b57\u7aef\u53e3 \nD9\n \u3002\n\n\n\u5c06 Grove - Base Shield\u63d2\u5165Arduino\u3002\n\n\n\n\u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06Arduino\u4e0ePC\u8fdb\u884c\u8fde\u63a5\n\n\n\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684Arduino\u7f16\u8f91\u9875\u9762\u4e0a\uff0c\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684Arduino\u3002\n\n\n\n\n\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u793a\u4f8b\u4ee3\u7801\uff1a\n\n\nint MoPin = 9;    // vibrator Grove connected to digital pin 9\n\nvoid setup()  {\n    pinMode( MoPin, OUTPUT );\n}\n\nvoid loop()  {\n\n    digitalWrite(MoPin, HIGH);\n    delay(1000);\n\n    digitalWrite(MoPin, LOW);\n    delay(1000);\n}\n\n\n\n\n\u73b0\u5728\uff0c\u611f\u53d7\u4f60\u7535\u673a\u7684\u632f\u52a8\u5427\uff01\n\n\n\u4f7f\u7528Raspberry Pi\n\n\n1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2aRaspberry Pi\u548c\u4e00\u4e2agrovepi\u6216grovepi +\u3002\n\n\n2.\u60a8\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa\n\u8bf4\u660e\n \u8fdb\u884c\u914d\u7f6e\u3002\n\n\n3.\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u7528Grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi \nD8\n \u63a5\u53e3\u3002\n\n\n\n\n4.\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\uff1a\n\ncd yourpath/GrovePi/Software/Python/\n\n\n-  \u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\nnano grove_vibration_motor.py   # \nCtrl+x\n to exit #\n\n\n\nimport time\nimport grovepi\n\n#\u5c06Grove Vibration Motor\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3D8\n#SIG,NC,VCC,GND\nvibration_motor = 8\n\ngrovepi.pinMode(vibration_motor,\nOUTPUT\n)\n\nwhile True:\n    try:\n        # Start vibrating for 1 second\n        grovepi.digitalWrite(vibration_motor,1)\n        print \nstart\n\n        time.sleep(1)\n\n        # Stop vibrating for 1 second, then repeat\n        grovepi.digitalWrite(vibration_motor,0)\n        print \nstop\n\n        time.sleep(1)\n\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(vibration_motor,0)\n        break\n    except IOError:\n        print \nError\n\n\n\n5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\nsudo python grove_vibration_motor.py\n\n\n\n\u9879\u76ee\n\n\n\n\nInspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!\n\n\nThe Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.    \n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - Vibration Motor Eagle File\n\n\nS9013 Datasheet\n\n\nANDA-B1020 Datasheet", 
            "title": "Grove-Vibration Motor"
        }, 
        {
            "location": "/Grove-Vibration_Motor/#_1", 
            "text": "\u80fd\u591f\u517c\u5bb9Grove  \u65e0\u58f0  \u4f4e\u529f\u8017  \u9ad8\u53ef\u9760\u6027    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Vibration_Motor/#_2", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f  \n\u4e00\u822c  \n\u6700\u5927    \n\u5de5\u4f5c\u7535\u538b  \n3.0V  \n5.0V  \n5.5V    \n\u63a7\u5236\u6a21\u5f0f  \n\u903b\u8f91\u7535\u5e73\n\uff08\u5f53\u903b\u8f91\u9ad8\u7535\u5e73\u65f6\uff0c\u7535\u673a\u4e3aON\uff0c\u4f4e\u7535\u5e73\u65f6\uff0c\u7535\u673a\u4e3aOFF\u3002\uff09    \n\u989d\u5b9a\u8f6c\u901f  \n9000 rpm", 
            "title": "\u4ea7\u54c1\u89c4\u683c"
        }, 
        {
            "location": "/Grove-Vibration_Motor/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Vibration_Motor/#_4", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Vibration_Motor/#arduino", 
            "text": "\u5176\u5b9e\u8ba9\u5b83\u632f\u52a8\u8ddf\u70b9\u4eaeLED\u4e00\u6837\u5bb9\u6613\u3002 \u4ee5\u4e0b\u662f\u663e\u793a\u5982\u4f55\u6253\u5f00\u632f\u52a8\u7535\u673a\u7684\u793a\u4f8b\u3002   \u4f7f\u7528Grove\u8fde\u63a5\u7ebf\u5c06\u5176\u63d2\u5165Grove - Base Shield\u7684\u6570\u5b57\u7aef\u53e3  D9  \u3002  \u5c06 Grove - Base Shield\u63d2\u5165Arduino\u3002  \u4f7f\u7528USB\u6570\u636e\u7ebf\u5c06Arduino\u4e0ePC\u8fdb\u884c\u8fde\u63a5  \u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684Arduino\u7f16\u8f91\u9875\u9762\u4e0a\uff0c\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684Arduino\u3002   \u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u793a\u4f8b\u4ee3\u7801\uff1a  int MoPin = 9;    // vibrator Grove connected to digital pin 9\n\nvoid setup()  {\n    pinMode( MoPin, OUTPUT );\n}\n\nvoid loop()  {\n\n    digitalWrite(MoPin, HIGH);\n    delay(1000);\n\n    digitalWrite(MoPin, LOW);\n    delay(1000);\n}  \u73b0\u5728\uff0c\u611f\u53d7\u4f60\u7535\u673a\u7684\u632f\u52a8\u5427\uff01", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Vibration_Motor/#raspberry-pi", 
            "text": "1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2aRaspberry Pi\u548c\u4e00\u4e2agrovepi\u6216grovepi +\u3002  2.\u60a8\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \u8bf4\u660e  \u8fdb\u884c\u914d\u7f6e\u3002  3.\u786c\u4ef6\u8fde\u63a5   \u7528Grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi  D8  \u63a5\u53e3\u3002   4.\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\uff1a cd yourpath/GrovePi/Software/Python/ \n-  \u627e\u5230\u8fd9\u884c\u4ee3\u7801 nano grove_vibration_motor.py   #  Ctrl+x  to exit #  import time\nimport grovepi\n\n#\u5c06Grove Vibration Motor\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3D8\n#SIG,NC,VCC,GND\nvibration_motor = 8\n\ngrovepi.pinMode(vibration_motor, OUTPUT )\n\nwhile True:\n    try:\n        # Start vibrating for 1 second\n        grovepi.digitalWrite(vibration_motor,1)\n        print  start \n        time.sleep(1)\n\n        # Stop vibrating for 1 second, then repeat\n        grovepi.digitalWrite(vibration_motor,0)\n        print  stop \n        time.sleep(1)\n\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(vibration_motor,0)\n        break\n    except IOError:\n        print  Error  \n5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b sudo python grove_vibration_motor.py", 
            "title": "\u4f7f\u7528Raspberry Pi"
        }, 
        {
            "location": "/Grove-Vibration_Motor/#_5", 
            "text": "Inspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!  The Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.", 
            "title": "\u9879\u76ee"
        }, 
        {
            "location": "/Grove-Vibration_Motor/#_6", 
            "text": "Grove - Vibration Motor Eagle File  S9013 Datasheet  ANDA-B1020 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Barometer_High_Accuracy/", 
            "text": "\u8be5 Grove - Barometer (High-Accuracy) Sensor \u91c7\u7528 HP206C \u9ad8\u7cbe\u5ea6\u82af\u7247\uff0c\u53ef\u68c0\u6d4b\u6c14\u538b\uff0c\u9ad8\u5ea6\u8ba1\u548c\u6e29\u5ea6\u3002 \u53ef\u4ee5\u5e7f\u6cdb\u6d4b\u91cf 300mbar\u301c1200mbar \u7684\u538b\u529b\uff0c\u8d85\u9ad8\u5206\u8fa8\u7387\u6a21\u5f0f\u4e0b\u7684\u8d85\u9ad8\u7cbe\u5ea6\u4e3a 0.01mbar\uff080.1m\uff09\uff0c\u82af\u7247\u4ec5\u63a5\u53d7 1.8V \u81f3 3.6V \u7684\u8f93\u5165\u7535\u538b\u3002 \u7136\u800c\uff0c\u52a0\u4e0a\u5916\u90e8\u7535\u8def\uff0c\u8be5\u6a21\u5757\u53ef\u4ee5\u4e0e 3.3V \u548c 5V \u517c\u5bb9\u3002 \u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u5728 Arduino / Seeeduino \u6216 Seeeduino Stalker \u4e0a\u4f7f\u7528\uff0c\u65e0\u9700\u4fee\u6539\u3002\u5b83\u7684\u8bbe\u8ba1\u662f\u901a\u8fc7 I2C\u603b\u7ebf\u76f4\u63a5\u8fde\u63a5\u5230\u5fae\u63a7\u5236\u5668\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5177\u6709\u6570\u5b57\u4f20\u8f93\u7ebf\u7ebf\uff08I2C\uff09\u63a5\u53e3\n\n\n\u57fa\u4e8e\u6307\u4ee4\u7684\u8bfb\u53d6\u65b9\u5f0f\uff0c\u6709\u8865\u507f\u529f\u80fd\uff08\u53ef\u9009\uff09\n\n\n\u53ef\u7f16\u5199\u7a0b\u5e8f\u8bbe\u7f6e\u4e2d\u65ad\u63a7\u5236\n\n\n\u5168\u6570\u636e\u8865\u507f\n\n\n\u5bbd\u6c14\u538b\u8303\u56f4\n\n\n\u7075\u6d3b\u7684\u7535\u6e90\u7535\u538b\u8303\u56f4\n\n\n\u8d85\u4f4e\u529f\u8017\n\n\n\u9ad8\u5ea6\u5206\u8fa8\u7387\u53ef\u8fbe0.01\u7c73\n\n\n\u80fd\u591f\u8fdb\u884c\u6e29\u5ea6\u6d4b\u91cf\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u9ad8\u7cbe\u5ea6\u79fb\u52a8\u7684\u9ad8\u5ea6\u8ba1/\u6674\u96e8\u8868\n\n\n\u5de5\u4e1a\u538b\u529b\u548c\u6e29\u5ea6\u4f20\u611f\u5668\u7cfb\u7edf\n\n\n\u6c7d\u8f66\u7cfb\u7edf\n\n\n\u4e2a\u4eba\u7535\u5b50\u6d4b\u6e29\u4eea\n\n\n\u5192\u9669\u548c\u8fd0\u52a8\u7684\u624b\u8868\n\n\n\u533b\u7528\u6c14\u4f53\u63a7\u5236\u7cfb\u7edf\n\n\n\u6c14\u8c61\u7ad9\u8bbe\u5907\n\n\n\u5ba4\u5185\u5bfc\u822a\u548c\u5730\u56fe\u8f85\u52a9\n\n\n\u6696\u6c14\uff0c\u901a\u98ce\uff0c\u7a7a\u8c03\n\n\n\n\n\u4ea7\u54c1\u89c4\u683c\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\n\n\n\n\n\u6807\u51c6\n\n\n\n\n\u6700\u5927\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n3.3\n\n\n\n\n5\n\n\n\n\n5.5\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n\n\n635\n\n\n\n\n/\n\n\n\n\n1100\n\n\n\n\nuA\n\n\n\n\n\n\n\n\n\u538b\u529b\u8303\u56f4\n\n\n\n\n300\n\n\n\n\n/\n\n\n\n\n1200\n\n\n\n\nhPa\n\n\n\n\n\n\n\n\nI2C \u6570\u636e\u4f20\u8f93\u9891\u7387\n\n\n\n\n/\n\n\n\n\n/\n\n\n\n\n10\n\n\n\n\nMHz\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n\n\n20.4x41.8x9.7\n\n\n\n\nmm\n\n\n\n\n\n\n\n\n\u8d28\u91cf\n\n\n\n\n/\n\n\n\n\ng\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\u4f7f\u7528\u65b9\u5f0f\n\n\n\u4f7f\u7528 Arduino\n\n\n\u6c14\u538b\u6761\u4ef6\u662f\u7528\u4e8e\u9884\u6d4b\u5929\u6c14\u53d8\u5316\u548c\u63a8\u65ad\u6d77\u62d4\u9ad8\u5ea6\u7684\u6807\u51c6\u4e4b\u4e00\u3002 \u8fd9\u662f\u4e00\u4e2a\u6f14\u793a\uff0c\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8fd9\u4e2a Grove - Barometer Sensor \u8bfb\u53d6\u6c14\u538b\u6570\u636e\u3002\n\n\n1.\u901a\u8fc7 Grove \u8fde\u63a5\u7ebf\u5c06\u5176\u8fde\u63a5\u5230 Seeeduino \u6216 Grove - Base Shield \u7684 \nI2C\n \u7aef\u53e3\u3002 \u5e76\u901a\u8fc7 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002\n\n\n\n\n2.\u4e0b\u8f7d\u5e93\u6587\u4ef6 \nGrove_Barometer_HP20x\n \u901a\u8fc7\u8def\u5f84\uff1a.\\arduino-1.0.1\\libraries \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\u3002\n\n\n3.\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\uff0c\u5e76\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u5176\u4e2d\u6216\u76f4\u63a5\u901a\u8fc7\u8def\u5f84\u6253\u5f00\u4ee3\u7801\uff1aFile\uff08\u6587\u4ef6\uff09-\n Example\uff08\u793a\u4f8b\uff09 - \n Barometer_Sensor-\n Barometer_Sensor\u3002\n\n\n/*\n* Demo name  ?: HP20x_dev demo\n* Usage      ?: I2C PRECISION BAROMETER AND ALTIMETER [HP206C hopeRF]\n* Author     ?: Oliver Wang from Seeed Studio\n* Version    ?: V0.1\n* Change log ?: Add kalman filter 2014/04/04\n*/\n\n#include \nHP20x_dev.h\n\n#include \nKalmanFilter.h\n\n\n#include \nArduino.h\n\n#include \nWire.h\n\n\nunsigned char ret = 0;\n\n    /* Instance */\nKalmanFilter t_filter;    //temperature filter\nKalmanFilter p_filter;    //pressure filter\nKalmanFilter a_filter;    //altitude filter\n\n\nvoid setup()\n{\n    Serial.begin(9600);        // start serial for output\n\n    Serial.println(\n****HP20x_dev demo by seeed studio****\\n\n);\n    Serial.println(\nCalculation formula: H = [8.5(101325-P)]/100 \\n\n);\n      /* Power up,delay 150ms,until voltage is stable */\n    delay(150);\n      /* Reset HP20x_dev */\n    HP20x.begin();\n    delay(100);\n\n      /* Determine HP20x_dev is available or not */\n    ret = HP20x.isAvailable();\n    if(OK_HP20X_DEV == ret)\n    {\n        Serial.println(\nHP20x_dev is available.\\n\n);\n    }\n    else\n    {\n        Serial.println(\nHP20x_dev isn\nt available.\\n\n);\n    }\n\n}\n\n\nvoid loop()\n{\n    char display[40];\n    if(OK_HP20X_DEV == ret)\n    {\n        Serial.println(\n------------------\\n\n);\n        long Temper = HP20x.ReadTemperature();\n        Serial.println(\nTemper:\n);\n        float t = Temper/100.0;\n        Serial.print(t);\n        Serial.println(\nC.\\n\n);\n        Serial.println(\nFilter:\n);\n        Serial.print(t_filter.Filter(t));\n        Serial.println(\nC.\\n\n);\n\n        long Pressure = HP20x.ReadPressure();\n        Serial.println(\nPressure:\n);\n        t = Pressure/100.0;\n        Serial.print(t);\n        Serial.println(\nhPa.\\n\n);\n        Serial.println(\nFilter:\n);\n        Serial.print(p_filter.Filter(t));\n        Serial.println(\nhPa\\n\n);\n\n        long Altitude = HP20x.ReadAltitude();\n        Serial.println(\nAltitude:\n);\n        t = Altitude/100.0;\n        Serial.print(t);\n        Serial.println(\nm.\\n\n);\n        Serial.println(\nFilter:\n);\n        Serial.print(a_filter.Filter(t));\n        Serial.println(\nm.\\n\n);\n        Serial.println(\n------------------\\n\n);\n        delay(1000);\n    }\n}\n\n\n\n\n4.\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u63a5\u6536\u4f20\u611f\u5668\u7684\u6570\u636e\uff0c\u5305\u62ec\u6e29\u5ea6\uff0c\u6c14\u538b\u503c\uff0c\u76f8\u5bf9\u6c14\u538b\u548c\u9ad8\u5ea6\u3002\n\n\n\n\n\u4ee5\u4e0b\u662f\u7ed8\u5236\u6d77\u62d4\u9ad8\u5ea6\u4e0e\u5927\u6c14\u538b\u529b\u4e4b\u95f4\u5173\u7cfb\u7684\u53c2\u8003\u56fe\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove_Barometer_High-Accuracy_v1.0_sch_pcb Eagle File\n\n\nHP206C Datasheet\n\n\nGithub repository for Grove_Barometer_HP20x", 
            "title": "Grove-Barometer High Accuracy"
        }, 
        {
            "location": "/Grove-Barometer_High_Accuracy/#_1", 
            "text": "\u5177\u6709\u6570\u5b57\u4f20\u8f93\u7ebf\u7ebf\uff08I2C\uff09\u63a5\u53e3  \u57fa\u4e8e\u6307\u4ee4\u7684\u8bfb\u53d6\u65b9\u5f0f\uff0c\u6709\u8865\u507f\u529f\u80fd\uff08\u53ef\u9009\uff09  \u53ef\u7f16\u5199\u7a0b\u5e8f\u8bbe\u7f6e\u4e2d\u65ad\u63a7\u5236  \u5168\u6570\u636e\u8865\u507f  \u5bbd\u6c14\u538b\u8303\u56f4  \u7075\u6d3b\u7684\u7535\u6e90\u7535\u538b\u8303\u56f4  \u8d85\u4f4e\u529f\u8017  \u9ad8\u5ea6\u5206\u8fa8\u7387\u53ef\u8fbe0.01\u7c73  \u80fd\u591f\u8fdb\u884c\u6e29\u5ea6\u6d4b\u91cf    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Barometer_High_Accuracy/#_2", 
            "text": "\u9ad8\u7cbe\u5ea6\u79fb\u52a8\u7684\u9ad8\u5ea6\u8ba1/\u6674\u96e8\u8868  \u5de5\u4e1a\u538b\u529b\u548c\u6e29\u5ea6\u4f20\u611f\u5668\u7cfb\u7edf  \u6c7d\u8f66\u7cfb\u7edf  \u4e2a\u4eba\u7535\u5b50\u6d4b\u6e29\u4eea  \u5192\u9669\u548c\u8fd0\u52a8\u7684\u624b\u8868  \u533b\u7528\u6c14\u4f53\u63a7\u5236\u7cfb\u7edf  \u6c14\u8c61\u7ad9\u8bbe\u5907  \u5ba4\u5185\u5bfc\u822a\u548c\u5730\u56fe\u8f85\u52a9  \u6696\u6c14\uff0c\u901a\u98ce\uff0c\u7a7a\u8c03", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Barometer_High_Accuracy/#_3", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f  \n\u6807\u51c6  \n\u6700\u5927  \n\u5355\u4f4d    \n\u5de5\u4f5c\u7535\u538b  \n3.3  \n5  \n5.5  \nVDC    \n\u5de5\u4f5c\u7535\u6d41  \n635  \n/  \n1100  \nuA    \n\u538b\u529b\u8303\u56f4  \n300  \n/  \n1200  \nhPa    \nI2C \u6570\u636e\u4f20\u8f93\u9891\u7387  \n/  \n/  \n10  \nMHz    \n\u5c3a\u5bf8  \n20.4x41.8x9.7  \nmm    \n\u8d28\u91cf  \n/  \ng", 
            "title": "\u4ea7\u54c1\u89c4\u683c"
        }, 
        {
            "location": "/Grove-Barometer_High_Accuracy/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Barometer_High_Accuracy/#_4", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u5f0f"
        }, 
        {
            "location": "/Grove-Barometer_High_Accuracy/#arduino", 
            "text": "\u6c14\u538b\u6761\u4ef6\u662f\u7528\u4e8e\u9884\u6d4b\u5929\u6c14\u53d8\u5316\u548c\u63a8\u65ad\u6d77\u62d4\u9ad8\u5ea6\u7684\u6807\u51c6\u4e4b\u4e00\u3002 \u8fd9\u662f\u4e00\u4e2a\u6f14\u793a\uff0c\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8fd9\u4e2a Grove - Barometer Sensor \u8bfb\u53d6\u6c14\u538b\u6570\u636e\u3002  1.\u901a\u8fc7 Grove \u8fde\u63a5\u7ebf\u5c06\u5176\u8fde\u63a5\u5230 Seeeduino \u6216 Grove - Base Shield \u7684  I2C  \u7aef\u53e3\u3002 \u5e76\u901a\u8fc7 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002   2.\u4e0b\u8f7d\u5e93\u6587\u4ef6  Grove_Barometer_HP20x  \u901a\u8fc7\u8def\u5f84\uff1a.\\arduino-1.0.1\\libraries \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\u3002  3.\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\uff0c\u5e76\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u5176\u4e2d\u6216\u76f4\u63a5\u901a\u8fc7\u8def\u5f84\u6253\u5f00\u4ee3\u7801\uff1aFile\uff08\u6587\u4ef6\uff09-  Example\uff08\u793a\u4f8b\uff09 -   Barometer_Sensor-  Barometer_Sensor\u3002  /*\n* Demo name  ?: HP20x_dev demo\n* Usage      ?: I2C PRECISION BAROMETER AND ALTIMETER [HP206C hopeRF]\n* Author     ?: Oliver Wang from Seeed Studio\n* Version    ?: V0.1\n* Change log ?: Add kalman filter 2014/04/04\n*/\n\n#include  HP20x_dev.h \n#include  KalmanFilter.h \n\n#include  Arduino.h \n#include  Wire.h \n\nunsigned char ret = 0;\n\n    /* Instance */\nKalmanFilter t_filter;    //temperature filter\nKalmanFilter p_filter;    //pressure filter\nKalmanFilter a_filter;    //altitude filter\n\n\nvoid setup()\n{\n    Serial.begin(9600);        // start serial for output\n\n    Serial.println( ****HP20x_dev demo by seeed studio****\\n );\n    Serial.println( Calculation formula: H = [8.5(101325-P)]/100 \\n );\n      /* Power up,delay 150ms,until voltage is stable */\n    delay(150);\n      /* Reset HP20x_dev */\n    HP20x.begin();\n    delay(100);\n\n      /* Determine HP20x_dev is available or not */\n    ret = HP20x.isAvailable();\n    if(OK_HP20X_DEV == ret)\n    {\n        Serial.println( HP20x_dev is available.\\n );\n    }\n    else\n    {\n        Serial.println( HP20x_dev isn t available.\\n );\n    }\n\n}\n\n\nvoid loop()\n{\n    char display[40];\n    if(OK_HP20X_DEV == ret)\n    {\n        Serial.println( ------------------\\n );\n        long Temper = HP20x.ReadTemperature();\n        Serial.println( Temper: );\n        float t = Temper/100.0;\n        Serial.print(t);\n        Serial.println( C.\\n );\n        Serial.println( Filter: );\n        Serial.print(t_filter.Filter(t));\n        Serial.println( C.\\n );\n\n        long Pressure = HP20x.ReadPressure();\n        Serial.println( Pressure: );\n        t = Pressure/100.0;\n        Serial.print(t);\n        Serial.println( hPa.\\n );\n        Serial.println( Filter: );\n        Serial.print(p_filter.Filter(t));\n        Serial.println( hPa\\n );\n\n        long Altitude = HP20x.ReadAltitude();\n        Serial.println( Altitude: );\n        t = Altitude/100.0;\n        Serial.print(t);\n        Serial.println( m.\\n );\n        Serial.println( Filter: );\n        Serial.print(a_filter.Filter(t));\n        Serial.println( m.\\n );\n        Serial.println( ------------------\\n );\n        delay(1000);\n    }\n}  4.\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u63a5\u6536\u4f20\u611f\u5668\u7684\u6570\u636e\uff0c\u5305\u62ec\u6e29\u5ea6\uff0c\u6c14\u538b\u503c\uff0c\u76f8\u5bf9\u6c14\u538b\u548c\u9ad8\u5ea6\u3002   \u4ee5\u4e0b\u662f\u7ed8\u5236\u6d77\u62d4\u9ad8\u5ea6\u4e0e\u5927\u6c14\u538b\u529b\u4e4b\u95f4\u5173\u7cfb\u7684\u53c2\u8003\u56fe\u3002", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Barometer_High_Accuracy/#_5", 
            "text": "Grove_Barometer_High-Accuracy_v1.0_sch_pcb Eagle File  HP206C Datasheet  Github repository for Grove_Barometer_HP20x", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/", 
            "text": "\u8be5\u6a21\u5757\u57fa\u4e8e\u5c06\u5149\u5f3a\u5ea6\u8f6c\u6362\u4e3a\u6570\u5b57\u4fe1\u53f7\u7684 I2C\u5149\u6570\u8f6c\u6362\u5668 TSL2561\u3002 \u4e0e\u4f20\u7edf\u7684\u6a21\u62df\u5149\u4f20\u611f\u5668\u4e0d\u540c\uff0c \nGrove - Light Sensor\n \u8be5\u6570\u5b57\u6a21\u5757\u7531\u4e8e\u5b83\u6709\u53cc\u91cd\u5149\u654f\u4e8c\u6781\u7ba1\uff1a\u7ea2\u5916\u548c\u5168\u5149\u8c31\u7684\uff0c\u6240\u6709\u5177\u6709\u53ef\u62e9\u5149\u8c31\u8303\u56f4\u529f\u80fd\u3002\n\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u4e09\u79cd\u68c0\u6d4b\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u8bfb\u53d6\u6570\u636e\u3002 \u5b83\u4eec\u662f\u7ea2\u5916\u6a21\u5f0f\uff0c\u5168\u5149\u8c31\u548c\u4eba\u7c7b\u53ef\u89c1\u6a21\u5f0f\u3002 \u5f53\u5728\u4eba\u7c7b\u53ef\u89c6\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u663e\u793a\u7684\u8bfb\u6570\u6070\u597d\u63a5\u8fd1\u60a8\u7684\u773c\u775b\u611f\u89c9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u53ef\u9009\u62e9\u68c0\u6d4b\u6a21\u5f0f\n\n\n\u5728 400 kHz I2C \u5feb\u901f\u6a21\u5f0f\u4e0b\uff0c\u80fd\u591f\u4fdd\u6301\u9ad8\u5206\u8fa8\u7387\u7684\u4ee5 16 \u4f4d\u6570\u5b57\u4fe1\u53f7\u8f93\u51fa\n\n\n\u5bbd\u52a8\u6001\u8303\u56f4\uff1a0.1 - 40,000 LUX\n\n\n\u5bbd\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\uff1a-40\u00b0C\u81f385\u00b0C\n\n\n\u5177\u6709\u53ef\u7f16\u7a0b\u7684\u4e2d\u65ad\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\u4e0a\u9650\u548c\u4e0b\u9650\u7684\u9608\u503c\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\n\n\n\u6807\u51c6\n\n\n\u6700\u5927\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u7535\u6e90\u7535\u538b\uff0cVDD\n\n\n3.3\n\n\n5\n\n\n5.1\n\n\nV\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-30\n\n\n\\\n\n\n70\n\n\n\u2103\n\n\n\n\n\n\nSCL\uff0cSDA\u8f93\u5165\u4f4e\u7535\u538b\n\n\n-0.5\n\n\n\\\n\n\n0.8\n\n\nV\n\n\n\n\n\n\nSCL\uff0cSDA\u8f93\u5165\u9ad8\u7535\u538b\n\n\n2.3\n\n\n\\\n\n\n5.1\n\n\nV\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nU1:\n TSL2561 IC\uff0c\u5149\u6570\u5b57\u8f6c\u6362\u5668\u3002 \u8fd9\u662f\u529f\u80fd\u6846\u56fe\n\n\n- \n\u5bc4\u5b58\u5668\u56fe\u8868\n\n\nTSL2561\u753116\u4e2a\u5bc4\u5b58\u5668\uff083\u4e2a\u4fdd\u7559\uff09\u548c\u901a\u8fc7\u4e32\u884c\u63a5\u53e3\u8bbf\u95ee\u547d\u4ee4\u5bc4\u5b58\u5668\u6765\u5b9e\u73b0\u8fdb\u884c\u63a7\u5236\u548c\u76d1\u89c6\u7684\u3002 \u8fd9\u4e9b\u5bc4\u5b58\u5668\u63d0\u4f9b\u5404\u79cd\u63a7\u5236\u529f\u80fd\uff0c\u53ef\u4ee5\u8bfb\u53d6\u51c6\u786e\u7684 ADC \u8f6c\u6362\u7ed3\u679c\u3002 \u5bc4\u5b58\u5668\u96c6\u5408\u5982\u4e0b\u6240\u793a\u3002\n\n\n\n\n\n\n\u9891\u8c31\u54cd\u5e94\u66f2\u7ebf\n\n\n\n\n\n\nDigital light sensor \u7684\u4e24\u4e2a\u901a\u9053\u5177\u6709\u4e0d\u540c\u7684\u54cd\u5e94\u7279\u6027\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f60\u53ef\u4ee5\u9009\u62e9\u5b83\u4eec\u7684\u5de5\u4f5c\u6a21\u5f0f\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u540c\u65f6\u5de5\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u53ea\u6709\u5176\u4e2d\u4e00\u4e2a\u5de5\u4f5c\u3002\n\n\nU3:\n XC6206MR332 IC\uff0c\u6b63\u7a33\u538b\u5668\u3002\n\n\nQ1,Q2:\n BSN20 IC\uff0cN\u6c9f\u9053\u589e\u5f3a\u578b\u5782\u76f4D-MOS\u6676\u4f53\u7ba1\u3002\n\n\nSCL,SDA:\n I2C\u4fe1\u53f7\u63a5\u53e3\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4f7f\u7528 Arduino\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a Grove - Digital light sensor \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Digital light sensor\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u5c06 Grove - Digital light Sensor \u8fde\u63a5\u5230 Base shield \u7684 \nI2C\n \u7aef\u53e3\u3002\n\n\n\u5c06 Base shield \u63d2\u5165 Arduino\u3002\n\n\n\u4f7f\u7528 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002\n\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\n\n\u4ece\u8fd9\u91cc\u4e0b\u8f7d\u5e93\u6587\u4ef6 \nDigital Light Sensor \u5e93\n;\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5 Arduino \u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\n\u901a\u8fc7\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u4ee3\u7801\uff1a \nFile\uff08\u6587\u4ef6\uff09 -\n Example\uff08\u793a\u4f8b\uff09 -\nDigital_Light_Sensor-\nDigital_Light_Sensor\n.\n\n\n\n\n\n\n\n\n\n\n\u6216\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230IDE\u5e76\u4e0a\u4f20\u5230Arduino\u3002\n\n    /*\n     * Digital_Light_Sensor.ino\n     * A library for TSL2561\n     *\n     * Copyright (c) 2012 seeed technology inc.\n     * Website   \u00a0: www.seeed.cc\n     * Author    \u00a0: zhangkun\n     * Create Time:\n     * Change Log\u00a0:\n     *\n     * The MIT License (MIT)\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \nSoftware\n), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in\n     * all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \nAS IS\n, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     */\n\n    #include \nWire.h\n\n    #include \nDigital_Light_TSL2561.h\n\n    void setup()\n    {\n      Wire.begin();\n      Serial.begin(9600);\n      TSL2561.init();\n    }\n\n    void loop()\n    {\n      Serial.print(\nThe Light value is: \n);\n      Serial.println(TSL2561.readVisibleLux());\n      delay(1000);\n    }\n\n\n\n\n\n\n\n\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u770b\u76d1\u89c6\u7684\u7ed3\u679c\u3002\n\n\n\n\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - Digital light sensor\n\n\nGrovePi_Plus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n\n\n\u4f7f\u7528 grove \u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165 Grovepi + \u63d2\u5ea7 \nI2C\n\u3002\n\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\n\n\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a\n\n    cd yourpath/GrovePi/Software/Python/grove_i2c_digital_light_sensor/\n\n\n\n\u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\n\n\n\n    nano grove_i2c_digital_light_sensor.py  # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import smbus\n    from Adafruit_I2C import Adafruit_I2C\n    import RPi.GPIO as GPIO\n    import grovepi\n    from smbus import SMBus\n\n    global I2C_ADDRESS\n    global I2C_SMBUS\n    global _CMD\n    global _CMD_CLEAR\n    global _CMD_WORD\n    global _CMD_BLOCK\n    global _REG_CONTROL\n    global _REG_TIMING\n    global _REG_ID\n    global _REG_BLOCKREAD\n    global _REG_DATA0\n    global _REG_DATA1\n    global _POWER_UP\n    global _POWER_DOWN\n    global _GAIN_LOW\n    global _GAIN_HIGH\n    global _INTEGRATION_START\n    global _INTEGRATION_STOP\n    global _INTEGRATE_13\n    global _INTEGRATE_101\n    global _INTEGRATE_402\n    global _INTEGRATE_DEFAULT\n    global _INTEGRATE_NA\n    global _GAIN\n    global _MANUAL\n    global _INTEG\n    global _CHANNEL0\n    global _CHANNEL1\n    global _D0\n    global _D1\n    global _LUX\n\n\n    # bus parameters\n    rev = GPIO.RPI_REVISION\n    if rev == 2 or rev == 3:\n        I2C_SMBUS = smbus.SMBus(1)\n    else:\n        I2C_SMBUS = smbus.SMBus(0)\n\n    # Default I2C address\n    I2C_ADDRESS = 0x29\n\n    # Commands\n    _CMD       = 0x80\n    _CMD_CLEAR = 0x40\n    _CMD_WORD  = 0x20\n    _CMD_BLOCK = 0x10\n\n    # Registers\n    _REG_CONTROL   = 0x00\n    _REG_TIMING    = 0x01\n    _REG_ID        = 0x0A\n    _REG_BLOCKREAD = 0x0B\n    _REG_DATA0     = 0x0C\n    _REG_DATA1     = 0x0E\n\n    # Control parameters\n    _POWER_UP   = 0x03\n    _POWER_DOWN = 0x00\n\n    # Timing parameters\n    _GAIN_LOW          = 0b00000000\n    _GAIN_HIGH         = 0b00010000\n    _INTEGRATION_START = 0b00001000\n    _INTEGRATION_STOP  = 0b00000000\n    _INTEGRATE_13      = 0b00000000\n    _INTEGRATE_101     = 0b00000001\n    _INTEGRATE_402     = 0b00000010\n    _INTEGRATE_DEFAULT = _INTEGRATE_402\n    _INTEGRATE_NA      = 0b00000011\n\n    # Testing parameters\n    ambient  = None\n    IR       = None\n    _ambient = 0\n    _IR      = 0\n    _LUX     = None\n\n\n    class Tsl2561(object):\n            i2c = None\n\n            def _init__(self, bus = I2C_SMBUS, addr = I2C_ADDRESS, debug = 1, pause = 0.8):  # set debug = 0 stops debugging output on screen\n                    assert(bus is not None)\n                assert(addr \n 0b000111 and addr \n 0b1111000)\n\n                    self.i2c     = Adafruit_I2C(addr)\n                    self.pause   = pause\n                    self.debug   = debug\n                    self.gain    = 0\n                self._bus    = bus\n                    self._addr   = addr\n\n                ambient        = None\n                    IR             = None\n                self._ambient  = 0\n                    self._IR       = 0\n                self._LUX      = None\n                    self._control(_POWER_UP)\n                    self._partno_revision()\n\n    #        @property\n\n            def _lux(self, gain):\n                    \n\n                    Returns a lux value.  Returns None if no valid value is set yet.\n                    \n\n                    var = readLux(gain)\n                    ambient = var[0]\n                    IR = var[1]\n                    self._ambient = var[2]\n                    self._IR = var[3]\n                    self_LUX = var[4]\n                    return (ambient, IR, self._ambient, self._IR, self._LUX)\n\n\n            def setGain(self, gain = 1):\n                    \n Set the gain \n\n                    if (gain\u00a0!= self.gain):\n                            if (gain==1):\n                                    cmd = _CMD | _REG_TIMING\n                                    value = 0x02\n                                    self.i2c.write8(cmd, value)  # Set gain = 1X and timing = 402 mSec\n                                    if (self.debug):\n                                            print \nSetting low gain\n\n                            else:\n                                    cmd = _CMD | _REG_TIMING\n                                    value = 0x12\n                                    self.i2c.write8(cmd, value)  # Set gain = 16X and timing = 402 mSec\n                                    if (self.debug):\n                                            print \nSetting high gain\n\n                            self.gain=gain;  # Safe gain for calculation\n                            time.sleep(self.pause)  # Pause for integration (self.pause must be bigger than integration time)\n\n\n            def readWord(self, reg):\n                    \n Reads a word from the TSL2561 I2C device \n\n                    try:\n                            wordval = self.i2c.readU16(reg)\n                            newval = self.i2c.reverseByteOrder(wordval)\n                            if (self.debug):\n                                    print(\nI2C: Device 0x%02X: returned 0x%04X from reg 0x%02X\n\u00a0% (self._addr, wordval \n 0xFFFF, reg))\n                            return newval\n                    except IOError:\n                            print(\nError accessing 0x%02X: Chcekcyour I2C address\n\u00a0% self._addr)\n                            return -1\n\n\n            def readFull(self, reg = 0x8C):\n                    \n Read visible + IR diode from the TSL2561 I2C device \n\n                    return self.readWord(reg);\n\n            def readIR(self, reg = 0x8E):\n                    \n Reads only IR diode from the TSL2561 I2C device \n\n                    return self.readWord(reg);\n\n            def readLux(self, gain = 0):\n                    \n Grabs a lux reading either with autoranging (gain=0) or with specific gain (1, 16) \n\n                    if (self.debug):\n                            print \ngain = \n, gain\n                    if (gain == 1 or gain == 16):\n                            self.setGain(gain)  # Low/highGain\n                            ambient = self.readFull()\n                            IR = self.readIR()\n                    elif (gain == 0):  # Auto gain\n                            self.setGain(16)  # First try highGain\n                            ambient = self.readFull()\n                            if (ambient \n 65535):\n                                    IR = self.readIR()\n                            if (ambient \n= 65535 or IR \n= 65535):  # Value(s) exeed(s) datarange\n                                    self.setGain(1)  # Set lowGain\n                                    ambient = self.readFull()\n                                    IR = self.readIR()\n\n                    # If either sensor is saturated, no acculate lux value can be achieved.\n                    if (ambient == 0xffff or IR == 0xffff):\n                    self._LUX = None\n                    self._ambient = None\n                    self._IR = None\n                    return (self.ambient, self.IR, self._ambient, self._IR, self._LUX)\n                    if (self.gain == 1):\n                            self._ambient = 16 * ambient  # Scale 1x to 16x\n                            self._IR = 16 * IR            # Scale 1x to 16x\n                    else:\n                            self._ambient = 1 * ambient\n                            self._IR = 1 * IR\n                    if (self.debug):\n                            print \nIR Result without scaling: \n, IR\n                            print \nIR Result: \n, self._IR\n                            print \nAmbient Result without scaling: \n, ambient\n                            print \nAmbient Result: \n, self._ambient\n\n                    if (self._ambient == 0):\n                    # Sometimes, the channel 0 returns 0 when dark ...\n                    self._LUX = 0.0\n                    return (ambient, IR, self._ambient, self._IR, self._LUX)\n\n                    ratio = (self._IR / float(self._ambient))  # Change to make it run under python 2\n\n                    if (self.debug):\n                            print \nratio: \n, ratio\n\n                    if ((ratio \n= 0) and (ratio \n= 0.52)):\n                            self._LUX = (0.0315 * self._ambient) - (0.0593 * self._ambient * (ratio ** 1.4))\n                    elif (ratio \n= 0.65):\n                            self._LUX = (0.0229 * self._ambient) - (0.0291 * self._IR)\n                    elif (ratio \n= 0.80):\n                            self._LUX = (0.0157 * self._ambient) - (0.018 * self._IR)\n                    elif (ratio \n= 1.3):\n                            self._LUX = (0.00338 * self._ambient) - (0.0026 * self._IR)\n                    elif (ratio \n 1.3):\n                            self._LUX = 0\n\n                    return (ambient, IR, self._ambient, self._IR, self._LUX)\n\n            def _partno_revision(self):\n                    \n Read Partnumber and revision of the sensor \n\n                    cmd = _CMD | _REG_ID\n                    value = self.i2c.readS8(cmd)\n                    part = str(value)[7:4]\n                    if (part == \n0000\n):\n                            PartNo = \nTSL2560CS\n\n                    elif (part == \n0001\n):\n                            PartNo = \nTSL2561CS\n\n                    elif (part == \n0100\n):\n                            PartNo = \nTSL2560T/FN/CL\n\n                    elif (part == \n0101\n):\n                            PartNo = \nTSL2561T/FN/CL\n\n                    else:\n                            PartNo = \nnot TSL2560 or TSL 2561\n\n                    RevNo = str(value)[3:0]\n                    if (self.debug):\n                            print \nresponce: \n, value\n                            print \nPartNo = \n, PartNo\n                            print \nRevNo = \n, RevNo\n                    return (PartNo, RevNo)\n\n            def _control(self, params):\n                    if (params == _POWER_UP):\n                            print \nPower ON\n\n                    elif (params == _POWER_DOWN):\n                            print \nPower OFF\n\n                    else:\n                            print \nNo params given\n\n                    cmd = _CMD | _REG_CONTROL | params\n                    self.i2c.write8(self._addr, cmd)  # select command register and power on\n                time.sleep(0.4)  # Wait for 400ms to power up or power down.\n\n\n\n    def main():\n            TSL2561 = Tsl2561()\n            TSL2561._init__(I2C_SMBUS, I2C_ADDRESS)\n            while (True):\n                    gain=0\n                    val = TSL2561.readLux(gain)\n                    ambient = val[0]\n                    IR = val[1]\n                    _ambient = val[2]\n                    _IR = val[3]\n                    _LUX = val[4]\n                    if (ambient == 0xffff or IR == 0xffff):\n                            print (\nSensor is saturated, no lux value can be achieved:\n)\n                    print (\nambient = \n + ambient)\n                        print (\nIR = \n + IR)\n                            print (\nlight = \n + _LUX)\n                elif (_ambient == 0):\n                        print (\nIt\ns dark:\n)\n                            print (\nambient = \n + str(ambient))\n                    print (\nIR = \n + str(IR))\n                        print (\n_ambient = \n + str(_ambient))\n                            print (\n_IR = \n + str(_IR))\n                    print (\nLight = \n + str(_LUX) + \n lux.\n)\n                    else:\n                            print (\nThere is light:\n)\n                    print (\nambient = \n + str(ambient))\n                            print (\nIR = \n + str(IR))\n                            print (\n_ambient = \n + str(_ambient))\n                            print (\n_IR = \n + str(_IR))\n                            print (\nLight = \n + str(_LUX) + \n lux.\n)\n                    time.sleep(2)\n                    ambient  = None\n                    IR       = None\n                    _ambient = 0\n                    _IR      = 0\n                    _LUX     = None\n                TSL2561._control(_POWER_DOWN)\n\n\n    if __name__==\n__main__\n:\n            main()\n\n\n\n\n\n\n\n\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n    sudo python grove_i2c_digital_light_sensor.py\n\n\n\n\n\n\n\n\u8fd9\u4e2a\u5c31\u662f\u5f97\u5230\u7684\u7ed3\u679c\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle]\n \nGrove - Digital Light Sensor Eagle File\n\n\n[PDF]\n \nGrove - Digital Light Sensor Sch PDF File\n\n\n[PDF]\n \nGrove - Digital Light Sensor PCB PDF File\n\n\n[Library]\n \nLibrary Github Grove-Digital Light\n\n\n[Datasheet]\n \nTSL2561 Datasheet", 
            "title": "Grove-Digital Light Sensor"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#_1", 
            "text": "\u53ef\u9009\u62e9\u68c0\u6d4b\u6a21\u5f0f  \u5728 400 kHz I2C \u5feb\u901f\u6a21\u5f0f\u4e0b\uff0c\u80fd\u591f\u4fdd\u6301\u9ad8\u5206\u8fa8\u7387\u7684\u4ee5 16 \u4f4d\u6570\u5b57\u4fe1\u53f7\u8f93\u51fa  \u5bbd\u52a8\u6001\u8303\u56f4\uff1a0.1 - 40,000 LUX  \u5bbd\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\uff1a-40\u00b0C\u81f385\u00b0C  \u5177\u6709\u53ef\u7f16\u7a0b\u7684\u4e2d\u65ad\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\u4e0a\u9650\u548c\u4e0b\u9650\u7684\u9608\u503c    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#_2", 
            "text": "\u9879\u76ee  \u6700\u5c0f  \u6807\u51c6  \u6700\u5927  \u5355\u4f4d      \u7535\u6e90\u7535\u538b\uff0cVDD  3.3  5  5.1  V    \u5de5\u4f5c\u6e29\u5ea6  -30  \\  70  \u2103    SCL\uff0cSDA\u8f93\u5165\u4f4e\u7535\u538b  -0.5  \\  0.8  V    SCL\uff0cSDA\u8f93\u5165\u9ad8\u7535\u538b  2.3  \\  5.1  V", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#_3", 
            "text": "U1:  TSL2561 IC\uff0c\u5149\u6570\u5b57\u8f6c\u6362\u5668\u3002 \u8fd9\u662f\u529f\u80fd\u6846\u56fe \n-  \u5bc4\u5b58\u5668\u56fe\u8868  TSL2561\u753116\u4e2a\u5bc4\u5b58\u5668\uff083\u4e2a\u4fdd\u7559\uff09\u548c\u901a\u8fc7\u4e32\u884c\u63a5\u53e3\u8bbf\u95ee\u547d\u4ee4\u5bc4\u5b58\u5668\u6765\u5b9e\u73b0\u8fdb\u884c\u63a7\u5236\u548c\u76d1\u89c6\u7684\u3002 \u8fd9\u4e9b\u5bc4\u5b58\u5668\u63d0\u4f9b\u5404\u79cd\u63a7\u5236\u529f\u80fd\uff0c\u53ef\u4ee5\u8bfb\u53d6\u51c6\u786e\u7684 ADC \u8f6c\u6362\u7ed3\u679c\u3002 \u5bc4\u5b58\u5668\u96c6\u5408\u5982\u4e0b\u6240\u793a\u3002    \u9891\u8c31\u54cd\u5e94\u66f2\u7ebf    Digital light sensor \u7684\u4e24\u4e2a\u901a\u9053\u5177\u6709\u4e0d\u540c\u7684\u54cd\u5e94\u7279\u6027\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f60\u53ef\u4ee5\u9009\u62e9\u5b83\u4eec\u7684\u5de5\u4f5c\u6a21\u5f0f\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u540c\u65f6\u5de5\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u53ea\u6709\u5176\u4e2d\u4e00\u4e2a\u5de5\u4f5c\u3002  U3:  XC6206MR332 IC\uff0c\u6b63\u7a33\u538b\u5668\u3002  Q1,Q2:  BSN20 IC\uff0cN\u6c9f\u9053\u589e\u5f3a\u578b\u5782\u76f4D-MOS\u6676\u4f53\u7ba1\u3002  SCL,SDA:  I2C\u4fe1\u53f7\u63a5\u53e3", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#arduino", 
            "text": "", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#_5", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a Grove - Digital light sensor \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Digital light sensor  Base Shield           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u5c06 Grove - Digital light Sensor \u8fde\u63a5\u5230 Base shield \u7684  I2C  \u7aef\u53e3\u3002  \u5c06 Base shield \u63d2\u5165 Arduino\u3002  \u4f7f\u7528 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#_6", 
            "text": "\u4ece\u8fd9\u91cc\u4e0b\u8f7d\u5e93\u6587\u4ef6  Digital Light Sensor \u5e93 ;  \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5 Arduino \u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002  \u901a\u8fc7\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u4ee3\u7801\uff1a  File\uff08\u6587\u4ef6\uff09 -  Example\uff08\u793a\u4f8b\uff09 - Digital_Light_Sensor- Digital_Light_Sensor .      \u6216\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230IDE\u5e76\u4e0a\u4f20\u5230Arduino\u3002     /*\n     * Digital_Light_Sensor.ino\n     * A library for TSL2561\n     *\n     * Copyright (c) 2012 seeed technology inc.\n     * Website   \u00a0: www.seeed.cc\n     * Author    \u00a0: zhangkun\n     * Create Time:\n     * Change Log\u00a0:\n     *\n     * The MIT License (MIT)\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the  Software ), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in\n     * all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED  AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     */\n\n    #include  Wire.h \n    #include  Digital_Light_TSL2561.h \n    void setup()\n    {\n      Wire.begin();\n      Serial.begin(9600);\n      TSL2561.init();\n    }\n\n    void loop()\n    {\n      Serial.print( The Light value is:  );\n      Serial.println(TSL2561.readVisibleLux());\n      delay(1000);\n    }    \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u770b\u76d1\u89c6\u7684\u7ed3\u679c\u3002", 
            "title": "\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#raspberry-pi", 
            "text": "", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#_7", 
            "text": "\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Raspberry pi  Grove - Digital light sensor  GrovePi_Plus           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa  \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002  \u4f7f\u7528 grove \u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165 Grovepi + \u63d2\u5ea7  I2C \u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#_8", 
            "text": "\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a     cd yourpath/GrovePi/Software/Python/grove_i2c_digital_light_sensor/  \u627e\u5230\u8fd9\u884c\u4ee3\u7801       nano grove_i2c_digital_light_sensor.py  #  Ctrl+x  to exit #      import time\n    import smbus\n    from Adafruit_I2C import Adafruit_I2C\n    import RPi.GPIO as GPIO\n    import grovepi\n    from smbus import SMBus\n\n    global I2C_ADDRESS\n    global I2C_SMBUS\n    global _CMD\n    global _CMD_CLEAR\n    global _CMD_WORD\n    global _CMD_BLOCK\n    global _REG_CONTROL\n    global _REG_TIMING\n    global _REG_ID\n    global _REG_BLOCKREAD\n    global _REG_DATA0\n    global _REG_DATA1\n    global _POWER_UP\n    global _POWER_DOWN\n    global _GAIN_LOW\n    global _GAIN_HIGH\n    global _INTEGRATION_START\n    global _INTEGRATION_STOP\n    global _INTEGRATE_13\n    global _INTEGRATE_101\n    global _INTEGRATE_402\n    global _INTEGRATE_DEFAULT\n    global _INTEGRATE_NA\n    global _GAIN\n    global _MANUAL\n    global _INTEG\n    global _CHANNEL0\n    global _CHANNEL1\n    global _D0\n    global _D1\n    global _LUX\n\n\n    # bus parameters\n    rev = GPIO.RPI_REVISION\n    if rev == 2 or rev == 3:\n        I2C_SMBUS = smbus.SMBus(1)\n    else:\n        I2C_SMBUS = smbus.SMBus(0)\n\n    # Default I2C address\n    I2C_ADDRESS = 0x29\n\n    # Commands\n    _CMD       = 0x80\n    _CMD_CLEAR = 0x40\n    _CMD_WORD  = 0x20\n    _CMD_BLOCK = 0x10\n\n    # Registers\n    _REG_CONTROL   = 0x00\n    _REG_TIMING    = 0x01\n    _REG_ID        = 0x0A\n    _REG_BLOCKREAD = 0x0B\n    _REG_DATA0     = 0x0C\n    _REG_DATA1     = 0x0E\n\n    # Control parameters\n    _POWER_UP   = 0x03\n    _POWER_DOWN = 0x00\n\n    # Timing parameters\n    _GAIN_LOW          = 0b00000000\n    _GAIN_HIGH         = 0b00010000\n    _INTEGRATION_START = 0b00001000\n    _INTEGRATION_STOP  = 0b00000000\n    _INTEGRATE_13      = 0b00000000\n    _INTEGRATE_101     = 0b00000001\n    _INTEGRATE_402     = 0b00000010\n    _INTEGRATE_DEFAULT = _INTEGRATE_402\n    _INTEGRATE_NA      = 0b00000011\n\n    # Testing parameters\n    ambient  = None\n    IR       = None\n    _ambient = 0\n    _IR      = 0\n    _LUX     = None\n\n\n    class Tsl2561(object):\n            i2c = None\n\n            def _init__(self, bus = I2C_SMBUS, addr = I2C_ADDRESS, debug = 1, pause = 0.8):  # set debug = 0 stops debugging output on screen\n                    assert(bus is not None)\n                assert(addr   0b000111 and addr   0b1111000)\n\n                    self.i2c     = Adafruit_I2C(addr)\n                    self.pause   = pause\n                    self.debug   = debug\n                    self.gain    = 0\n                self._bus    = bus\n                    self._addr   = addr\n\n                ambient        = None\n                    IR             = None\n                self._ambient  = 0\n                    self._IR       = 0\n                self._LUX      = None\n                    self._control(_POWER_UP)\n                    self._partno_revision()\n\n    #        @property\n\n            def _lux(self, gain):\n                     \n                    Returns a lux value.  Returns None if no valid value is set yet.\n                     \n                    var = readLux(gain)\n                    ambient = var[0]\n                    IR = var[1]\n                    self._ambient = var[2]\n                    self._IR = var[3]\n                    self_LUX = var[4]\n                    return (ambient, IR, self._ambient, self._IR, self._LUX)\n\n\n            def setGain(self, gain = 1):\n                      Set the gain  \n                    if (gain\u00a0!= self.gain):\n                            if (gain==1):\n                                    cmd = _CMD | _REG_TIMING\n                                    value = 0x02\n                                    self.i2c.write8(cmd, value)  # Set gain = 1X and timing = 402 mSec\n                                    if (self.debug):\n                                            print  Setting low gain \n                            else:\n                                    cmd = _CMD | _REG_TIMING\n                                    value = 0x12\n                                    self.i2c.write8(cmd, value)  # Set gain = 16X and timing = 402 mSec\n                                    if (self.debug):\n                                            print  Setting high gain \n                            self.gain=gain;  # Safe gain for calculation\n                            time.sleep(self.pause)  # Pause for integration (self.pause must be bigger than integration time)\n\n\n            def readWord(self, reg):\n                      Reads a word from the TSL2561 I2C device  \n                    try:\n                            wordval = self.i2c.readU16(reg)\n                            newval = self.i2c.reverseByteOrder(wordval)\n                            if (self.debug):\n                                    print( I2C: Device 0x%02X: returned 0x%04X from reg 0x%02X \u00a0% (self._addr, wordval   0xFFFF, reg))\n                            return newval\n                    except IOError:\n                            print( Error accessing 0x%02X: Chcekcyour I2C address \u00a0% self._addr)\n                            return -1\n\n\n            def readFull(self, reg = 0x8C):\n                      Read visible + IR diode from the TSL2561 I2C device  \n                    return self.readWord(reg);\n\n            def readIR(self, reg = 0x8E):\n                      Reads only IR diode from the TSL2561 I2C device  \n                    return self.readWord(reg);\n\n            def readLux(self, gain = 0):\n                      Grabs a lux reading either with autoranging (gain=0) or with specific gain (1, 16)  \n                    if (self.debug):\n                            print  gain =  , gain\n                    if (gain == 1 or gain == 16):\n                            self.setGain(gain)  # Low/highGain\n                            ambient = self.readFull()\n                            IR = self.readIR()\n                    elif (gain == 0):  # Auto gain\n                            self.setGain(16)  # First try highGain\n                            ambient = self.readFull()\n                            if (ambient   65535):\n                                    IR = self.readIR()\n                            if (ambient  = 65535 or IR  = 65535):  # Value(s) exeed(s) datarange\n                                    self.setGain(1)  # Set lowGain\n                                    ambient = self.readFull()\n                                    IR = self.readIR()\n\n                    # If either sensor is saturated, no acculate lux value can be achieved.\n                    if (ambient == 0xffff or IR == 0xffff):\n                    self._LUX = None\n                    self._ambient = None\n                    self._IR = None\n                    return (self.ambient, self.IR, self._ambient, self._IR, self._LUX)\n                    if (self.gain == 1):\n                            self._ambient = 16 * ambient  # Scale 1x to 16x\n                            self._IR = 16 * IR            # Scale 1x to 16x\n                    else:\n                            self._ambient = 1 * ambient\n                            self._IR = 1 * IR\n                    if (self.debug):\n                            print  IR Result without scaling:  , IR\n                            print  IR Result:  , self._IR\n                            print  Ambient Result without scaling:  , ambient\n                            print  Ambient Result:  , self._ambient\n\n                    if (self._ambient == 0):\n                    # Sometimes, the channel 0 returns 0 when dark ...\n                    self._LUX = 0.0\n                    return (ambient, IR, self._ambient, self._IR, self._LUX)\n\n                    ratio = (self._IR / float(self._ambient))  # Change to make it run under python 2\n\n                    if (self.debug):\n                            print  ratio:  , ratio\n\n                    if ((ratio  = 0) and (ratio  = 0.52)):\n                            self._LUX = (0.0315 * self._ambient) - (0.0593 * self._ambient * (ratio ** 1.4))\n                    elif (ratio  = 0.65):\n                            self._LUX = (0.0229 * self._ambient) - (0.0291 * self._IR)\n                    elif (ratio  = 0.80):\n                            self._LUX = (0.0157 * self._ambient) - (0.018 * self._IR)\n                    elif (ratio  = 1.3):\n                            self._LUX = (0.00338 * self._ambient) - (0.0026 * self._IR)\n                    elif (ratio   1.3):\n                            self._LUX = 0\n\n                    return (ambient, IR, self._ambient, self._IR, self._LUX)\n\n            def _partno_revision(self):\n                      Read Partnumber and revision of the sensor  \n                    cmd = _CMD | _REG_ID\n                    value = self.i2c.readS8(cmd)\n                    part = str(value)[7:4]\n                    if (part ==  0000 ):\n                            PartNo =  TSL2560CS \n                    elif (part ==  0001 ):\n                            PartNo =  TSL2561CS \n                    elif (part ==  0100 ):\n                            PartNo =  TSL2560T/FN/CL \n                    elif (part ==  0101 ):\n                            PartNo =  TSL2561T/FN/CL \n                    else:\n                            PartNo =  not TSL2560 or TSL 2561 \n                    RevNo = str(value)[3:0]\n                    if (self.debug):\n                            print  responce:  , value\n                            print  PartNo =  , PartNo\n                            print  RevNo =  , RevNo\n                    return (PartNo, RevNo)\n\n            def _control(self, params):\n                    if (params == _POWER_UP):\n                            print  Power ON \n                    elif (params == _POWER_DOWN):\n                            print  Power OFF \n                    else:\n                            print  No params given \n                    cmd = _CMD | _REG_CONTROL | params\n                    self.i2c.write8(self._addr, cmd)  # select command register and power on\n                time.sleep(0.4)  # Wait for 400ms to power up or power down.\n\n\n\n    def main():\n            TSL2561 = Tsl2561()\n            TSL2561._init__(I2C_SMBUS, I2C_ADDRESS)\n            while (True):\n                    gain=0\n                    val = TSL2561.readLux(gain)\n                    ambient = val[0]\n                    IR = val[1]\n                    _ambient = val[2]\n                    _IR = val[3]\n                    _LUX = val[4]\n                    if (ambient == 0xffff or IR == 0xffff):\n                            print ( Sensor is saturated, no lux value can be achieved: )\n                    print ( ambient =   + ambient)\n                        print ( IR =   + IR)\n                            print ( light =   + _LUX)\n                elif (_ambient == 0):\n                        print ( It s dark: )\n                            print ( ambient =   + str(ambient))\n                    print ( IR =   + str(IR))\n                        print ( _ambient =   + str(_ambient))\n                            print ( _IR =   + str(_IR))\n                    print ( Light =   + str(_LUX) +   lux. )\n                    else:\n                            print ( There is light: )\n                    print ( ambient =   + str(ambient))\n                            print ( IR =   + str(IR))\n                            print ( _ambient =   + str(_ambient))\n                            print ( _IR =   + str(_IR))\n                            print ( Light =   + str(_LUX) +   lux. )\n                    time.sleep(2)\n                    ambient  = None\n                    IR       = None\n                    _ambient = 0\n                    _IR      = 0\n                    _LUX     = None\n                TSL2561._control(_POWER_DOWN)\n\n\n    if __name__== __main__ :\n            main()    \u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b     sudo python grove_i2c_digital_light_sensor.py    \u8fd9\u4e2a\u5c31\u662f\u5f97\u5230\u7684\u7ed3\u679c", 
            "title": "\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Digital_Light_Sensor/#_9", 
            "text": "[Eagle]   Grove - Digital Light Sensor Eagle File  [PDF]   Grove - Digital Light Sensor Sch PDF File  [PDF]   Grove - Digital Light Sensor PCB PDF File  [Library]   Library Github Grove-Digital Light  [Datasheet]   TSL2561 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Electromagnet/", 
            "text": "Electromagnet\u662f\u4e00\u79cd\u901a\u8fc7\u7535\u6d41\u4ea7\u751f\u78c1\u573a\u7684\u78c1\u4f53\u3002 \u6839\u636e\u5b89\u57f9\u5b9a\u5f8b\uff0c\u6d41\u5165\u7535\u7ebf\u7684\u7535\u6d41\u5728\u7535\u7ebf\u5468\u56f4\u4ea7\u751f\u78c1\u573a\uff08\u5982\u56fe\u6240\u793a\uff09\u3002 \u4e3a\u4e86\u4f7f\u78c1\u573a\u66f4\u52a0\u96c6\u4e2d\uff0c\u5728Electromagnet\u4e2d\uff0c\u7f20\u7ed5\u7740\u5f88\u591a\u6574\u9f50\u6392\u5e03\u7684\u7ebf\u5708\u3002 \u6240\u6709\u7ebf\u5708\u7684\u78c1\u573a\u901a\u8fc7\u7ebf\u5708\u7684\u4e2d\u5fc3\uff0c\u5728\u90a3\u91cc\u4ea7\u751f\u5f3a\u78c1\u573a\u3002 \u8fd9\u6837Grove - Electromagnet\u53ef\u4ee5\u5438\u8d771KG\u91cd\u7684\u94c1\u3002 \u5b83\u4f7f\u7528\u5f88\u65b9\u4fbf\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u5b66\u4e60\u5230\u7535\u78c1\u94c1\u7684\u539f\u7406\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u517c\u5bb9Grove\u63a5\u53e3\n\n\n\u6700\u5927\u80fd\u591f\u5438\u6c141KG\n\n\n\u5f85\u673a\u7535\u6d41\u6bd4\u8f83\u4f4e\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\uff1aDC 5V\n\n\n\u5de5\u4f5c\u7535\u6d41\uff1a400mA\n\n\n\u5f85\u673a\u7535\u6d41\uff1a200uA\n\n\n\u5438\u8d77\u91cd\u91cf\uff1a1KG\n\n\n\n\n\u5e73\u53f0\u652f\u6301\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u4f7f\u7528 Arduino\n\n\n\n\n\n\n\u7a0b\u5e8f:\n\n\n/*\n  Turns on an Electromagnet on for one second, then off for one second, repeatedly.\n  This example code is in the public domain.\n*/\n\nint Electromagnet = 0;\nint LED = 13;\n\n// the setup routine runs once when you press reset:\nvoid setup() {\n    // initialize the digital pin as an output.\n    pinMode(Electromagnet, OUTPUT);\n    pinMode(LED, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop() {\n    digitalWrite(Electromagnet, HIGH);  // turn the Electromagnet on (HIGH is the voltage level)\n    digitalWrite(LED, HIGH);            // turn the LED on (HIGH is the voltage level)\n    delay(1000);                        // wait for a second\n    digitalWrite(Electromagnet, LOW);   // turn the Electromagnet off by making the voltage LOW\n    digitalWrite(LED, LOW);             // turn the LED off by making the voltage LOW\n    delay(1000);                        // wait for a second\n}\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a raspberry pi\u548cgrovepi\u6216grovepi +\u3002\n\n\n2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa\n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n\n\n3.\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u4f7f\u7528 grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi \u63d2\u5ea7 \nD4\n \u7aef\u53e3\u3002\n\n\n\n\n4.\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\n\n\n\n    nano grove_electromagnet.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # The electromagnet can hold a 1KG weight\n\n    # Connect the Grove Electromagnet to digital port D4\n    # SIG,NC,VCC,GND\n    electromagnet = 4\n\n    grovepi.pinMode(electromagnet,\nOUTPUT\n)\n    time.sleep(1)\n\n    while True:\n        try:\n            # Switch on electromagnet\n            grovepi.digitalWrite(electromagnet,1)\n            print \non\n\n            time.sleep(2)\n\n            # Switch off electromagnet\n            grovepi.digitalWrite(electromagnet,0)\n            print \noff\n\n            time.sleep(2)\n\n        except KeyboardInterrupt:\n            grovepi.digitalWrite(electromagnet,0)\n            break\n        except IOError:\n            print \nError\n\n\n\n\n5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\u3002\n\n    sudo python grove_electromagnet.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove Electromagnet v1.0 SCH PCB.zip\n\n\nDatasheet ZYE1-P20-15 PDF", 
            "title": "Grove-Electromagnet"
        }, 
        {
            "location": "/Grove-Electromagnet/#_1", 
            "text": "\u517c\u5bb9Grove\u63a5\u53e3  \u6700\u5927\u80fd\u591f\u5438\u6c141KG  \u5f85\u673a\u7535\u6d41\u6bd4\u8f83\u4f4e    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Electromagnet/#_2", 
            "text": "\u5de5\u4f5c\u7535\u538b\uff1aDC 5V  \u5de5\u4f5c\u7535\u6d41\uff1a400mA  \u5f85\u673a\u7535\u6d41\uff1a200uA  \u5438\u8d77\u91cd\u91cf\uff1a1KG", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Electromagnet/#_3", 
            "text": "", 
            "title": "\u5e73\u53f0\u652f\u6301"
        }, 
        {
            "location": "/Grove-Electromagnet/#_4", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Electromagnet/#arduino", 
            "text": "\u7a0b\u5e8f:  /*\n  Turns on an Electromagnet on for one second, then off for one second, repeatedly.\n  This example code is in the public domain.\n*/\n\nint Electromagnet = 0;\nint LED = 13;\n\n// the setup routine runs once when you press reset:\nvoid setup() {\n    // initialize the digital pin as an output.\n    pinMode(Electromagnet, OUTPUT);\n    pinMode(LED, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop() {\n    digitalWrite(Electromagnet, HIGH);  // turn the Electromagnet on (HIGH is the voltage level)\n    digitalWrite(LED, HIGH);            // turn the LED on (HIGH is the voltage level)\n    delay(1000);                        // wait for a second\n    digitalWrite(Electromagnet, LOW);   // turn the Electromagnet off by making the voltage LOW\n    digitalWrite(LED, LOW);             // turn the LED off by making the voltage LOW\n    delay(1000);                        // wait for a second\n}", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Electromagnet/#raspberry-pi", 
            "text": "1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a raspberry pi\u548cgrovepi\u6216grovepi +\u3002  2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002  3.\u786c\u4ef6\u8fde\u63a5   \u4f7f\u7528 grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi \u63d2\u5ea7  D4  \u7aef\u53e3\u3002   4.\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a     cd yourpath/GrovePi/Software/Python/   \u627e\u5230\u8fd9\u884c\u4ee3\u7801       nano grove_electromagnet.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # The electromagnet can hold a 1KG weight\n\n    # Connect the Grove Electromagnet to digital port D4\n    # SIG,NC,VCC,GND\n    electromagnet = 4\n\n    grovepi.pinMode(electromagnet, OUTPUT )\n    time.sleep(1)\n\n    while True:\n        try:\n            # Switch on electromagnet\n            grovepi.digitalWrite(electromagnet,1)\n            print  on \n            time.sleep(2)\n\n            # Switch off electromagnet\n            grovepi.digitalWrite(electromagnet,0)\n            print  off \n            time.sleep(2)\n\n        except KeyboardInterrupt:\n            grovepi.digitalWrite(electromagnet,0)\n            break\n        except IOError:\n            print  Error   5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\u3002     sudo python grove_electromagnet.py", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-Electromagnet/#_5", 
            "text": "Grove Electromagnet v1.0 SCH PCB.zip  Datasheet ZYE1-P20-15 PDF", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-EMG_Detector/", 
            "text": "EMG detector \u662f\u8fde\u63a5\u4eba\u4f53\u548c\u7535\u8def\u7684\u7684\u6865\u6881\uff0c\u4f20\u611f\u5668\u80fd\u591f\u6536\u96c6\u808c\u8089\u6536\u7f29\u7684\u7535\u4fe1\u53f7\uff0c\u7136\u540e\u8fdb\u884c\u4e8c\u6b21\u653e\u5927\u548c\u6ee4\u6ce2\uff0c\u8f93\u51fa\u7684\u4fe1\u53f7\u53ef\u4ee5\u88ab Arduino \u8bc6\u522b\u3002 \u60a8\u53ef\u4ee5\u628a\u6b64\u4e2a\u4fe1\u53f7\u6dfb\u52a0\u5230\u60a8\u7684\u63a7\u5236\u7cfb\u7edf\u4e2d\u3002\n\n\n\n\nNote\n\n\u4f20\u611f\u5668\u4e0d\u80fd\u7528\u4e8e\u533b\u7597\u7528\u9014\u3002\n\n\n\n\n\u5728\u5f85\u673a\u6a21\u5f0f\u4e0b\uff0c\u8f93\u51fa\u7535\u538b\u4e3a1.5V\u3002 \u5f53\u68c0\u6d4b\u5230\u808c\u8089\u6d3b\u52a8\u65f6\uff0c\u8f93\u51fa\u4e0a\u5347\u7684\u4fe1\u53f7\uff0c\u6700\u5927\u7535\u538b\u4e3a3.3V\u3002 \u60a8\u53ef\u4ee5\u57283.3V\u62165V\u7cfb\u7edf\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u4f20\u611f\u5668\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u80fd\u591f\u517c\u5bb9Grove\u63a5\u53e3\n\n\n\u9700\u89813.5mm\u63d2\u5934\u7684\u8fde\u63a5\u7ebf\n\n\n\u5305\u542b\u67096\u4e2a\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u7684\u8868\u9762\u7535\u6781\n\n\n\u7535\u6e90\u7535\u538b\uff1a3.3V-5V\n\n\n\u67091000mm\u957f\u7684\u6570\u636e\u7ebf\n\n\n\u65e0\u9700\u989d\u5916\u7684\u7535\u6e90\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nJ2\uff1agrove\u63a5\u53e3\uff0c\u8fde\u63a5\u5230\u6a21\u62dfI / O;\n\n\nJ1\uff1aEMG\u7684\u53ef\u968f\u610f\u4f7f\u7528\u7684\u8868\u9762\u7535\u6781\u8fde\u63a5\u5668\u3002\n\n\nU1\uff1aINA331IDGKT\uff0c\u5dee\u5206\u653e\u5927\u5668\u3002\n\n\nU2\uff0cU3\uff1aOPA333\uff0c\u96f6\u6f02\u79fb\u653e\u5927\u5668\u3002\n\n\n\n\n\u793a\u8303\n\n\n\u8fd9\u4e2a\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Grove - LCD RGB Backlight\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a \nSeeeduino V3.0\n \uff0c\nGrove - LED Bar\n \u548c \nGrove - Base Shield\n\u3002\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\u5c06 Grove - Base Shield \u63d2\u5165\u5230 Seeeduino\uff0c\u7136\u540e\u5c06 Grove - LED Bar \u8fde\u63a5\u5230 \nD8\n \u7aef\u53e3\uff0c\u5c06 Grove - EMG \u4f20\u611f\u5668\u8fde\u63a5\u5230 \nA0\n \u7aef\u53e3\u3002\n\n\n\u6700\u540e\uff0c\u628a\u4e09\u4e2a\u7535\u6781\u7c98\u5230\u4f60\u7684\u808c\u8089\u4e0a\uff0c\u5e76\u4fdd\u6301\u6bcf\u4e2a\u7535\u6781\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n\n\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u548c\u4e0a\u4f20\n\n\n\u60a8\u53ef\u4ee5\u5728 github \u4e2d\u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801\uff0c\u70b9\u51fb\n\n\u8fd9\u91cc\n\uff0c\u7136\u540e\u5c06\u5176\u89e3\u538b\u5230\u4efb\u4f55\u5730\u65b9\u3002\n\n\n\u7136\u540e\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230 Seeeduino\uff0c\u5982\u679c\u60a8\u5bf9\u4ee3\u7801\u4e0a\u4f20\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u53c2\u9605\n  \nSeeeduino\u5165\u95e8\n\n\n\n\n\u66f4\u591a\n\n\n\u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801\u540e\uff0c\u521d\u59cb\u5316\u5927\u7ea6\u9700\u89815\u79d2\u949f\uff0c\u8bf7\u5148\u4e0d\u8981\u8fd0\u52a8\u3002\n\n\n\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u521d\u59cb\u5316\u65f6\uff0cLed Bar\u5c06\u4f1a\u4ece10\u7ea7\u8f6c\u4e3a0\u7ea7\u3002\u5f53Led Bar\u5168\u90e8\u5173\u95ed\u65f6\uff0c\u60a8\u53ef\u4ee5\u9a6c\u4e0a\u505a\u4e00\u4e9b\u52a8\u4f5c\u3002\n\n\n\u5f53\u4f60\u79fb\u52a8\u65f6\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0Led Bar\u7684\u7ea7\u522b\u4f1a\u53d1\u751f\u53d8\u5316\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove-EMG Sensor v1.0 Eagle File\n\n\nGrove-EMG Sensor v1.1 Eagle File\n\n\nGrove-EMG Sensor v1.1 schematic PDF\n\n\nDemo Code", 
            "title": "Grove-EMG Detector"
        }, 
        {
            "location": "/Grove-EMG_Detector/#_1", 
            "text": "\u80fd\u591f\u517c\u5bb9Grove\u63a5\u53e3  \u9700\u89813.5mm\u63d2\u5934\u7684\u8fde\u63a5\u7ebf  \u5305\u542b\u67096\u4e2a\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u7684\u8868\u9762\u7535\u6781  \u7535\u6e90\u7535\u538b\uff1a3.3V-5V  \u67091000mm\u957f\u7684\u6570\u636e\u7ebf  \u65e0\u9700\u989d\u5916\u7684\u7535\u6e90    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-EMG_Detector/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-EMG_Detector/#_2", 
            "text": "J2\uff1agrove\u63a5\u53e3\uff0c\u8fde\u63a5\u5230\u6a21\u62dfI / O;  J1\uff1aEMG\u7684\u53ef\u968f\u610f\u4f7f\u7528\u7684\u8868\u9762\u7535\u6781\u8fde\u63a5\u5668\u3002  U1\uff1aINA331IDGKT\uff0c\u5dee\u5206\u653e\u5927\u5668\u3002  U2\uff0cU3\uff1aOPA333\uff0c\u96f6\u6f02\u79fb\u653e\u5927\u5668\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-EMG_Detector/#_3", 
            "text": "\u8fd9\u4e2a\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Grove - LCD RGB Backlight\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a  Seeeduino V3.0  \uff0c Grove - LED Bar  \u548c  Grove - Base Shield \u3002", 
            "title": "\u793a\u8303"
        }, 
        {
            "location": "/Grove-EMG_Detector/#_4", 
            "text": "\u5c06 Grove - Base Shield \u63d2\u5165\u5230 Seeeduino\uff0c\u7136\u540e\u5c06 Grove - LED Bar \u8fde\u63a5\u5230  D8  \u7aef\u53e3\uff0c\u5c06 Grove - EMG \u4f20\u611f\u5668\u8fde\u63a5\u5230  A0  \u7aef\u53e3\u3002  \u6700\u540e\uff0c\u628a\u4e09\u4e2a\u7535\u6781\u7c98\u5230\u4f60\u7684\u808c\u8089\u4e0a\uff0c\u5e76\u4fdd\u6301\u6bcf\u4e2a\u7535\u6781\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-EMG_Detector/#_5", 
            "text": "\u60a8\u53ef\u4ee5\u5728 github \u4e2d\u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801\uff0c\u70b9\u51fb \u8fd9\u91cc \uff0c\u7136\u540e\u5c06\u5176\u89e3\u538b\u5230\u4efb\u4f55\u5730\u65b9\u3002  \u7136\u540e\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230 Seeeduino\uff0c\u5982\u679c\u60a8\u5bf9\u4ee3\u7801\u4e0a\u4f20\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u53c2\u9605\n   Seeeduino\u5165\u95e8", 
            "title": "\u4e0b\u8f7d\u4ee3\u7801\u548c\u4e0a\u4f20"
        }, 
        {
            "location": "/Grove-EMG_Detector/#_6", 
            "text": "\u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801\u540e\uff0c\u521d\u59cb\u5316\u5927\u7ea6\u9700\u89815\u79d2\u949f\uff0c\u8bf7\u5148\u4e0d\u8981\u8fd0\u52a8\u3002  \u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u521d\u59cb\u5316\u65f6\uff0cLed Bar\u5c06\u4f1a\u4ece10\u7ea7\u8f6c\u4e3a0\u7ea7\u3002\u5f53Led Bar\u5168\u90e8\u5173\u95ed\u65f6\uff0c\u60a8\u53ef\u4ee5\u9a6c\u4e0a\u505a\u4e00\u4e9b\u52a8\u4f5c\u3002  \u5f53\u4f60\u79fb\u52a8\u65f6\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0Led Bar\u7684\u7ea7\u522b\u4f1a\u53d1\u751f\u53d8\u5316\u3002", 
            "title": "\u66f4\u591a"
        }, 
        {
            "location": "/Grove-EMG_Detector/#_7", 
            "text": "Grove-EMG Sensor v1.0 Eagle File  Grove-EMG Sensor v1.1 Eagle File  Grove-EMG Sensor v1.1 schematic PDF  Demo Code", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Flame_Sensor/", 
            "text": "Grove - Flame Sensor \u53ef\u7528\u4e8e\u68c0\u6d4b\u6ce2\u957f760nm\u81f31100nm\u8303\u56f4\u5185\u6ce2\u957f\u7684\u706b\u6e90\u6216\u5176\u4ed6\u5149\u6e90\u3002 \u5b83\u662f\u57fa\u4e8eYG1006\u4f20\u611f\u5668\uff0c\u5b83\u662f\u4e00\u79cd\u80fd\u591f\u5feb\u901f\u5904\u7406\u4fe1\u53f7\u548c\u5177\u6709\u9ad8\u7075\u654f\u5ea6\u7684NPN\u7845\u5149\u7535\u6676\u4f53\u7ba1\u3002 \u7531\u4e8e\u91c7\u7528\u9ed1\u8272\u73af\u6c27\u6811\u8102\u6750\u8d28\uff0c\u4f20\u611f\u5668\u5bf9\u7ea2\u5916\u8f90\u5c04\u654f\u611f\u3002 \u5728\u6d88\u9632\u673a\u5668\u4eba\u7ec4\u6210\u4e2d\uff0c\u4f20\u611f\u5668\u8d77\u7740\u975e\u5e38\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u673a\u5668\u4eba\u627e\u5230\u706b\u6e90\u7684\u773c\u775b\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u517c\u5bb9Grove\u63a5\u53e3\n\n\n\u5bf9\u4e8e\u706b\u5149\u5177\u6709\u5f88\u9ad8\u7684\u7075\u654f\u5ea6\n\n\n\u54cd\u5e94\u65f6\u95f4\u5f88\u5feb\n\n\n\u4f7f\u7528\u65b9\u4fbf\n\n\n\u7075\u654f\u5ea6\u53ef\u8c03\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\n\n\n\n\n\u6807\u51c6\n\n\n\n\n\u6700\u5927\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n4.75\n\n\n\n\n5.0\n\n\n\n\n5.30\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n\n\n/\n\n\n\n\n20\n\n\n\n\n/\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u68c0\u6d4b\u5230\u5149\u8c31\u5e26\u5bbd\u7684\u8303\u56f4\n\n\n\n\n760\n\n\n\n\n940\n\n\n\n\n1100\n\n\n\n\nnm\n\n\n\n\n\n\n\n\n\u68c0\u6d4b\u8303\u56f4\n\n\n\n\n0\n\n\n\n\n~\n\n\n\n\n1\n\n\n\n\nm\n\n\n\n\n\n\n\n\n\u54cd\u5e94\u65f6\u95f4\n\n\n\n\n15\n\n\n\n\n\u03bcS\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n\n\n-25\n\n\n\n\n~\n\n\n\n\n85\n\n\n\n\n\u2103\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u8be5\u6a21\u5757\u4e3b\u8981\u7528\u4e8e\u68c0\u6d4b\u7ea2\u5916\u7ebf\u3002 \u5b83\u901a\u8fc7\u6bd4\u8f83\u5668\u8f93\u51fa\u6570\u5b57\u4fe1\u53f7 \n0\n \u548c \n1\n\u3002 \u68c0\u6d4b\u5230\u7ea2\u5916\u706f\u65f6\uff0c\u8f93\u51fa\u503c\u4e3a \n0\n\u3002 \u5b83\u7684\u7075\u654f\u5ea6\u53ef\u7531\u7cbe\u5bc6\u7684\u7535\u4f4d\u8ba1\u8c03\u8282\u3002\n\n\n\u6211\u4eec\u6765\u7528\u5b83\u6765\u63a7\u5236\u3002 \u5f53\u8f93\u51fa\u503c\u4e3a \n0\n \u65f6\uff0cLED\u5c06\u4eae\u8d77\u3002\n\n\n1.\u4f7f\u75284\u9488\u7684 grove \u8fde\u63a5\u7ebf\u5c06\u6a21\u5757\u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684 \nD3\n \u7aef\u53e3\u3002\n\n\n2.\u5c06 Grove - Base Shield \u63d2\u5165\u5230 Arduino\u3002\n\n\n3.\u4f7f\u7528 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002\n\n\n4.\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002\n\n\n    /******************************************************************************/\n\n    #define SENSOR 3 //connect SENSOR to digital pin3\n    #define LED 2//connect Grove - LED to pin2\n\nvoid setup()\n{\n    pinsInit();\n}\nvoid loop()\n{\n    if(isFlameDetected())\n    turnOnLED();\n    else turnOffLED();\n}\n    /********************************/\nvoid pinsInit()\n{\n    pinMode(FLAME_SENSOR, INPUT);\n    pinMode(LED,OUTPUT);\n    digitalWrite(LED,LOW);\n}\nvoid turnOnLED()\n{\n    digitalWrite(LED,HIGH);\n}\nvoid turnOffLED()\n{\n    digitalWrite(LED,LOW);\n}\nboolean isFlameDetected()\n{\n    if(digitalRead(FLAME_SENSOR))\n    return false;\n    else return true;\n}\n\n\n\n\n5.\u5f53\u6709\u68c0\u6d4b\u5230\u7ea2\u5916\u7ebf\u7684\u65f6\u5019\uff0cLED\u4f1a\u70b9\u4eae\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8bbe\u8ba1\u60a8\u7684\u4ea7\u54c1\u3002\n\n\n\u53c2\u8003\n\n\n\u4f20\u611f\u5668\u53ef\u4ee5\u68c0\u6d4b\u6ce2\u957f\u5728760nm-1100nm\u8303\u56f4\u5185\u7684\u5149\u6e90\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u5149\u8c31\u7075\u654f\u5ea6\u3002\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - Flame Sensor Eagle File\n\n\nGithub repository for Grove_Flame_Sensor Library\n\n\nLM293D datasheet", 
            "title": "Grove-Flame Sensor"
        }, 
        {
            "location": "/Grove-Flame_Sensor/#_1", 
            "text": "\u517c\u5bb9Grove\u63a5\u53e3  \u5bf9\u4e8e\u706b\u5149\u5177\u6709\u5f88\u9ad8\u7684\u7075\u654f\u5ea6  \u54cd\u5e94\u65f6\u95f4\u5f88\u5feb  \u4f7f\u7528\u65b9\u4fbf  \u7075\u654f\u5ea6\u53ef\u8c03    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Flame_Sensor/#_2", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f  \n\u6807\u51c6  \n\u6700\u5927  \n\u5355\u4f4d    \n\u5de5\u4f5c\u7535\u538b  \n4.75  \n5.0  \n5.30  \nVDC    \n\u5de5\u4f5c\u7535\u6d41  \n/  \n20  \n/  \nmA    \n\u68c0\u6d4b\u5230\u5149\u8c31\u5e26\u5bbd\u7684\u8303\u56f4  \n760  \n940  \n1100  \nnm    \n\u68c0\u6d4b\u8303\u56f4  \n0  \n~  \n1  \nm    \n\u54cd\u5e94\u65f6\u95f4  \n15  \n\u03bcS    \n\u5de5\u4f5c\u6e29\u5ea6  \n-25  \n~  \n85  \n\u2103", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Flame_Sensor/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Flame_Sensor/#_4", 
            "text": "\u8be5\u6a21\u5757\u4e3b\u8981\u7528\u4e8e\u68c0\u6d4b\u7ea2\u5916\u7ebf\u3002 \u5b83\u901a\u8fc7\u6bd4\u8f83\u5668\u8f93\u51fa\u6570\u5b57\u4fe1\u53f7  0  \u548c  1 \u3002 \u68c0\u6d4b\u5230\u7ea2\u5916\u706f\u65f6\uff0c\u8f93\u51fa\u503c\u4e3a  0 \u3002 \u5b83\u7684\u7075\u654f\u5ea6\u53ef\u7531\u7cbe\u5bc6\u7684\u7535\u4f4d\u8ba1\u8c03\u8282\u3002  \u6211\u4eec\u6765\u7528\u5b83\u6765\u63a7\u5236\u3002 \u5f53\u8f93\u51fa\u503c\u4e3a  0  \u65f6\uff0cLED\u5c06\u4eae\u8d77\u3002  1.\u4f7f\u75284\u9488\u7684 grove \u8fde\u63a5\u7ebf\u5c06\u6a21\u5757\u8fde\u63a5\u5230  Grove - Base Shield  \u7684  D3  \u7aef\u53e3\u3002  2.\u5c06 Grove - Base Shield \u63d2\u5165\u5230 Arduino\u3002  3.\u4f7f\u7528 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002  4.\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002      /******************************************************************************/\n\n    #define SENSOR 3 //connect SENSOR to digital pin3\n    #define LED 2//connect Grove - LED to pin2\n\nvoid setup()\n{\n    pinsInit();\n}\nvoid loop()\n{\n    if(isFlameDetected())\n    turnOnLED();\n    else turnOffLED();\n}\n    /********************************/\nvoid pinsInit()\n{\n    pinMode(FLAME_SENSOR, INPUT);\n    pinMode(LED,OUTPUT);\n    digitalWrite(LED,LOW);\n}\nvoid turnOnLED()\n{\n    digitalWrite(LED,HIGH);\n}\nvoid turnOffLED()\n{\n    digitalWrite(LED,LOW);\n}\nboolean isFlameDetected()\n{\n    if(digitalRead(FLAME_SENSOR))\n    return false;\n    else return true;\n}  5.\u5f53\u6709\u68c0\u6d4b\u5230\u7ea2\u5916\u7ebf\u7684\u65f6\u5019\uff0cLED\u4f1a\u70b9\u4eae\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8bbe\u8ba1\u60a8\u7684\u4ea7\u54c1\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Flame_Sensor/#_5", 
            "text": "\u4f20\u611f\u5668\u53ef\u4ee5\u68c0\u6d4b\u6ce2\u957f\u5728760nm-1100nm\u8303\u56f4\u5185\u7684\u5149\u6e90\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u5149\u8c31\u7075\u654f\u5ea6\u3002", 
            "title": "\u53c2\u8003"
        }, 
        {
            "location": "/Grove-Flame_Sensor/#_6", 
            "text": "Grove - Flame Sensor Eagle File  Github repository for Grove_Flame_Sensor Library  LM293D datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-HCHO_Sensor/", 
            "text": "Grove - HCHO Sensor\u662f\u4e00\u79cd\u534a\u5bfc\u4f53VOC\u6c14\u4f53\u4f20\u611f\u5668\u3002 \u5176\u8bbe\u8ba1\u57fa\u4e8eWSP2110\uff0c\u5b83\u7684\u7535\u5bfc\u7387\u53ef\u4ee5\u968f\u7740\u7a7a\u6c14\u4e2dVOC\u6c14\u4f53\u6d53\u5ea6\u800c\u53d8\u5316\u3002 \u901a\u8fc7\u7535\u8def\uff0c\u7535\u5bfc\u7387\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5bf9\u5e94\u4e8e\u6c14\u4f53\u6d53\u5ea6\u7684\u8f93\u51fa\u4fe1\u53f7\u3002 \u8be5\u4f20\u611f\u5668\u53ef\u4ee5\u68c0\u6d4b\u6d53\u5ea6\u9ad8\u8fbe1ppm\u7684\u6c14\u4f53\u3002 \u9002\u7528\u4e8e\u68c0\u6d4b\u7532\u919b\uff0c\u82ef\uff0c\u7532\u82ef\u7b49\u6325\u53d1\u6027\u6210\u5206\u3002 \u672c\u4ea7\u54c1\u53ef\u7528\u4e8e\u5728\u5bb6\u5ead\u73af\u5883\u4e2d\u68c0\u6d4b\u6709\u5bb3\u6c14\u4f53\u3002 \u56e0\u6b64\uff0c\u8fd9\u662f\u63d0\u5347\u5ba4\u5185\u73af\u5883\u8d28\u7d20\u7684\u597d\u5e2e\u624b\u3002\n\n\n\n\n\n\nWarning\n\n\u8fd9\u4e2a\u4f20\u611f\u5668\u8f93\u51fa\u7684\u6570\u503c\u4ec5\u4ec5\u80fd\u591f\u53cd\u6620\u5728\u5141\u8bb8\u8bef\u5dee\u8303\u56f4\u5185\u6c14\u4f53\u6d53\u5ea6\u7684\u8fd1\u4f3c\u8d8b\u52bf\uff0c\u5b83\u4e0d\u80fd\u7cbe\u786e\u7684\u8868\u793a\u6c14\u4f53\u6d53\u5ea6\u3002 \u7a7a\u6c14\u4e2d\u7279\u5b9a\u6210\u5206\u7684\u68c0\u6d4b\u901a\u5e38\u9700\u8981\u66f4\u7cbe\u786e\u3001\u66f4\u52a0\u6602\u8d35\u7684\u4eea\u5668\uff0c\u8fd9\u4e0d\u80fd\u53ea\u4f7f\u7528\u4e00\u4e2a\u6c14\u4f53\u4f20\u611f\u5668\u6765\u5b8c\u6210\u3002 \u5982\u679c\u60a8\u7684\u9879\u76ee\u65e8\u5728\u83b7\u5f97\u975e\u5e38\u7cbe\u786e\u7684\u6c14\u4f53\u6d53\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u6c14\u4f53\u4f20\u611f\u5668\u3002\n\n\n\n\n\u4ea7\u54c1\u53c2\u6570\n\n\n\n\n\u5de5\u4f5c\u7535\u538b: 5.0V \u00b1 0.3V\n\n\n\u76ee\u6807\u6c14\u4f53\uff1aHCHO\uff0c\u82ef\uff0c\u7532\u82ef\uff0c\u9152\u7cbe\n\n\n\u6d53\u5ea6\u8303\u56f4\uff1a1\u301c50 ppm\n\n\n\u4f20\u611f\u5668\u7535\u963b\u503c\uff08Rs\uff09\uff1a10K\u03a9-100K\u03a9\uff0810ppm HCHO\uff09\n\n\n\u7075\u654f\u5ea6\uff1aRs\uff08\u7a7a\u6c14\u4e2d\uff09/ Rs\uff0810ppm HCHO\uff09\u22655\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\nGrove - HCHO Sensor\u53ef\u7528\u4e8e\u68c0\u6d4bVOC\uff0c\u5982HCHO\uff0c\u7532\u82ef\uff0c\u82ef\uff0c\u9152\u7cbe\u3002 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ee5HCHO\u4e3a\u4f8b\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u3002\n\n\n\n\n// demo of Grove - HCHO Sensor\n\n#define Vc 4.95\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int sensorValue=analogRead(A0);\n    float R0=(1023.0/sensorValue)-1;\n    Serial.print(\nR0 = \n);\n    Serial.println(R0);\n    delay(500);\n}\n\n\n\n\n\u5728\u4e0a\u4f20\u4ee3\u7801\u540e\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u4f7fR0\u8f93\u51fa\u7684\u6570\u503c\u663e\u793a\u5728\u6b63\u5e38\u72b6\u6001\u4e0b\uff08\u5728\u5ba4\u5916\u662f\u6700\u597d\u7684\uff09\u3002\n\n\n\u4f7f\u7528\u5c0f\u8d77\u5b50\u8c03\u6574R1\uff08\u84dd\u8272\u7535\u4f4d\u5668\uff09\u7684\u7535\u963b\uff0c\u4f7fR0\u7684\u6570\u503c\u572810-100\u8303\u56f4\u5185\uff0c\u5e76\u8bb0\u5f55\u8be5\u6570\u5b57\uff08\u6211\u7684R0\u663e\u793a\u7684\u5728\u6b63\u5e38\u72b6\u51b5\u4e0b\u4e3a34.28\uff09\u3002\n\n\n\n\n\u5728 \n#define R0 ***\n\u4e2d\u8f93\u5165\u4e4b\u524dR0\u7684\u663e\u793a\u7684\u6570\u503c\uff0c\u7136\u540e\u4e0a\u4f20\u4ee3\u7801\u3002 \u8bb0\u4f4f\u4e0d\u8981\u518d\u62e7\u7d27R1\uff0c\u9664\u975e\u4f60\u51b3\u5b9a\u518d\u6b21\u68c0\u6d4bR0\u7684\u503c\u3002\n\n\n// demo of Grove - HCHO Sensor\n#include \nmath.h\n\n#define Vc 4.95\n//the number of R0 you detected just now\n#define R0 34.28\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int sensorValue=analogRead(A0);\n    double Rs=(1023.0/sensorValue)-1;\n    Serial.print(\nRs = \n);\n    Serial.println(Rs);\n    double ppm=pow(10.0,((log10(Rs/R0)-0.0827)/(-0.4807)));\n    Serial.print(\nHCHO ppm = \n);\n    Serial.println(ppm);\n    delay(1000);\n}\n\n\n\n\n\u7136\u540e\u5c06\u4f20\u611f\u5668\u79fb\u5165\u529e\u516c\u5ba4\uff0c\u5e76\u8bfb\u53d6HCHO ppm\u503c\uff1a\n\n\n\n\n\u4ece\u5178\u578b\u7075\u654f\u5ea6\u66f2\u7ebf\u56fe\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u68c0\u6d4b\u8303\u56f4\u662f1-50ppm\u3002\n\n\n\n\n\u8981\u68c0\u6d4b\u5176\u4ed6VOC\u6c14\u4f53\uff0c\u53ef\u4ee5\u8ba1\u7b97Rs / R0\uff0c\u7136\u540e\u53c2\u8003\u7075\u654f\u5ea6\u7279\u6027\u66f2\u7ebf\u56fe\uff0c\u627e\u5230\u76f8\u5e94\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u6216\u8005\u4f7f\u7528\u4ee5\u4e0bpython\u7a0b\u5e8f\u6765\u5339\u914d\u5bf9\u5e94\u7684\u66f2\u7ebf\u5e76\u8ba1\u7b97a\u548cb\u7684\u503c\uff1a\n\n\nppm = 10 ^ ((log10(Rs/R0) + a) / b)\n\n\n# coding=utf-8\n# calculate a and b of HCHO\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n#get the measure data from the Typical Sensitivity Curve\nx = np.array([1, 5, 10, 20, 40])\ny = np.array([1.21, 0.56, 0.4, 0.3, 0.21])\n\nplt.subplot(221)\nplt.loglog(x,y,lw=2)\n#plt.ylim(0,1.5)  \nplt.xlabel(\nlog(x)\n)  \nplt.ylabel(\nlog(y)\n)  \nplt.show()  \n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - HCHO Sensor Eagle File\n\n\nGrove - HCHO Sensor Schematic in PDF\n\n\nWSP2110 Datasheet (Chinese)\n\n\nWSP2110 Datasheet (English)", 
            "title": "Grove-HCHO Sensor"
        }, 
        {
            "location": "/Grove-HCHO_Sensor/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b: 5.0V \u00b1 0.3V  \u76ee\u6807\u6c14\u4f53\uff1aHCHO\uff0c\u82ef\uff0c\u7532\u82ef\uff0c\u9152\u7cbe  \u6d53\u5ea6\u8303\u56f4\uff1a1\u301c50 ppm  \u4f20\u611f\u5668\u7535\u963b\u503c\uff08Rs\uff09\uff1a10K\u03a9-100K\u03a9\uff0810ppm HCHO\uff09  \u7075\u654f\u5ea6\uff1aRs\uff08\u7a7a\u6c14\u4e2d\uff09/ Rs\uff0810ppm HCHO\uff09\u22655    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u53c2\u6570"
        }, 
        {
            "location": "/Grove-HCHO_Sensor/#_2", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-HCHO_Sensor/#_3", 
            "text": "Grove - HCHO Sensor\u53ef\u7528\u4e8e\u68c0\u6d4bVOC\uff0c\u5982HCHO\uff0c\u7532\u82ef\uff0c\u82ef\uff0c\u9152\u7cbe\u3002 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ee5HCHO\u4e3a\u4f8b\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u4f20\u611f\u5668\u3002   // demo of Grove - HCHO Sensor\n\n#define Vc 4.95\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int sensorValue=analogRead(A0);\n    float R0=(1023.0/sensorValue)-1;\n    Serial.print( R0 =  );\n    Serial.println(R0);\n    delay(500);\n}  \u5728\u4e0a\u4f20\u4ee3\u7801\u540e\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u4f7fR0\u8f93\u51fa\u7684\u6570\u503c\u663e\u793a\u5728\u6b63\u5e38\u72b6\u6001\u4e0b\uff08\u5728\u5ba4\u5916\u662f\u6700\u597d\u7684\uff09\u3002  \u4f7f\u7528\u5c0f\u8d77\u5b50\u8c03\u6574R1\uff08\u84dd\u8272\u7535\u4f4d\u5668\uff09\u7684\u7535\u963b\uff0c\u4f7fR0\u7684\u6570\u503c\u572810-100\u8303\u56f4\u5185\uff0c\u5e76\u8bb0\u5f55\u8be5\u6570\u5b57\uff08\u6211\u7684R0\u663e\u793a\u7684\u5728\u6b63\u5e38\u72b6\u51b5\u4e0b\u4e3a34.28\uff09\u3002   \u5728  #define R0 *** \u4e2d\u8f93\u5165\u4e4b\u524dR0\u7684\u663e\u793a\u7684\u6570\u503c\uff0c\u7136\u540e\u4e0a\u4f20\u4ee3\u7801\u3002 \u8bb0\u4f4f\u4e0d\u8981\u518d\u62e7\u7d27R1\uff0c\u9664\u975e\u4f60\u51b3\u5b9a\u518d\u6b21\u68c0\u6d4bR0\u7684\u503c\u3002  // demo of Grove - HCHO Sensor\n#include  math.h \n#define Vc 4.95\n//the number of R0 you detected just now\n#define R0 34.28\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int sensorValue=analogRead(A0);\n    double Rs=(1023.0/sensorValue)-1;\n    Serial.print( Rs =  );\n    Serial.println(Rs);\n    double ppm=pow(10.0,((log10(Rs/R0)-0.0827)/(-0.4807)));\n    Serial.print( HCHO ppm =  );\n    Serial.println(ppm);\n    delay(1000);\n}  \u7136\u540e\u5c06\u4f20\u611f\u5668\u79fb\u5165\u529e\u516c\u5ba4\uff0c\u5e76\u8bfb\u53d6HCHO ppm\u503c\uff1a   \u4ece\u5178\u578b\u7075\u654f\u5ea6\u66f2\u7ebf\u56fe\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u68c0\u6d4b\u8303\u56f4\u662f1-50ppm\u3002   \u8981\u68c0\u6d4b\u5176\u4ed6VOC\u6c14\u4f53\uff0c\u53ef\u4ee5\u8ba1\u7b97Rs / R0\uff0c\u7136\u540e\u53c2\u8003\u7075\u654f\u5ea6\u7279\u6027\u66f2\u7ebf\u56fe\uff0c\u627e\u5230\u76f8\u5e94\u7684\u6c14\u4f53\u6d53\u5ea6\u3002 \u6216\u8005\u4f7f\u7528\u4ee5\u4e0bpython\u7a0b\u5e8f\u6765\u5339\u914d\u5bf9\u5e94\u7684\u66f2\u7ebf\u5e76\u8ba1\u7b97a\u548cb\u7684\u503c\uff1a  ppm = 10 ^ ((log10(Rs/R0) + a) / b)  # coding=utf-8\n# calculate a and b of HCHO\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n#get the measure data from the Typical Sensitivity Curve\nx = np.array([1, 5, 10, 20, 40])\ny = np.array([1.21, 0.56, 0.4, 0.3, 0.21])\n\nplt.subplot(221)\nplt.loglog(x,y,lw=2)\n#plt.ylim(0,1.5)  \nplt.xlabel( log(x) )  \nplt.ylabel( log(y) )  \nplt.show()", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-HCHO_Sensor/#_4", 
            "text": "Grove - HCHO Sensor Eagle File  Grove - HCHO Sensor Schematic in PDF  WSP2110 Datasheet (Chinese)  WSP2110 Datasheet (English)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/", 
            "text": "\u8be5\u6a21\u5757\u57fa\u4e8e\u6709 \nI2C\n \u6570\u5b57\u8f93\u51fa\u7aef\u53e3\u7684 color sensor TCS3414CS\u3002 \u4e5f\u57fa\u4e8e 8\u00d72 \u9635\u5217\u7684\u6ee4\u6ce2\u5149\u7535\u4e8c\u6781\u7ba1\u548c 16\u4f4d\u6a21\u6570\u8f6c\u6362\u5668\uff0c\u53ef\u4ee5\u6d4b\u91cf\u73af\u5883\u5149\u7684\u8272\u5ea6\u6216\u7269\u4f53\u7684\u989c\u8272\u3002 \u572816\u4e2a\u5149\u7535\u4e8c\u6781\u7ba1\u4e2d\uff0c4\u4e2a\u5177\u6709\u7ea2\u8272\u6ee4\u5149\u7247\uff0c4\u4e2a\u5177\u6709\u7eff\u8272\u6ee4\u5149\u7247\uff0c4\u4e2a\u5177\u6709\u84dd\u8272\u6ee4\u5149\u7247\uff0c4\u4e2a\u6ca1\u6709\u6ee4\u5149\u7247\uff08\u900f\u660e\uff09\u3002 \u4ed6\u4eec\u4f7f\u7528\u540c\u6b65\u8f93\u5165\u5f15\u811a\uff0c\u5916\u90e8\u8109\u51b2\u5149\u6e90\u53ef\u4ee5\u63d0\u4f9b\u7cbe\u786e\u7684\u540c\u6b65\u8f6c\u6362\u63a7\u5236\u3002\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0c\u6700\u65b0\u7248\u672cV2.0\u5df2\u7ecf\u7528 TCS3472 \u66ff\u6362\u4e86 IC \uff0c\u800c\u65e7\u7684\u5e93\u4e5f\u5df2\u66f4\u65b0\uff0c\u5982\u679c\u60a8\u4f7f\u7528V2.0\u7248\u672c\uff0c\u8bf7\u4f7f\u7528 \n\u65b0\u7684\u5e93\u6587\u4ef6\n\u3002\n\n\n\n\n\u7248\u672c\u4fe1\u606f\n\n\n\n\n\n\n\n\n\u7248\u672c\u8c03\u6574\n\n\n\u63cf\u8ff0\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nv1.2\n\n\n\u521d\u6b21\u516c\u5f00\u53d1\u5e03\uff08\u6d4b\u8bd5\u7248\uff09\n\n\n2013\u5e741\u670817\u65e5\n\n\n\u65e0\n\n\n\n\n\n\nv2.0\n\n\n\u7528 TCS34725FN \u66ff\u6362 TCS3472\uff08EOL\uff09\u5e76\u4f18\u5316\u4e86 PCB \u5e03\u5c40\n\n\n2010\u5e744\u670827\u65e5\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u80fd\u591f\u517c\u5bb9 Grove \u63a5\u53e3\n\n\n\u5e26 I2C \u7aef\u53e3\u7684 16\u4f4d\u6570\u5b57\u8f93\u51fa\n\n\nSYNC \u8f93\u5165\u5c06\u79ef\u5206\u5468\u671f\u540c\u6b65\u5230\u8c03\u5236\u5149\u6e90\n\n\n\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\u4e3a -40\u00b0C \u81f3 85\u00b0C\n\n\n\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u5b9e\u73b0\u4e2d\u65ad\u529f\u80fd\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e0a\u9650\u548c\u4e0b\u9650\u9608\u503c\n\n\n\u7b26\u5408RoHS\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u4ea7\u54c1\u89c4\u683c\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c/\u8303\u56f4\n\n\n\n\n\n\n\n\n\n\nPCB\u5c3a\u5bf8\n\n\n2.0 cm x 4.0 cm\n\n\n\n\n\n\n\u63a5\u53e3\n\n\n2.0mm\u8282\u8ddd\u7684\u5f15\u811a\n\n\n\n\n\n\nVCC\n\n\n3.3 - 6.0 V\n\n\n\n\n\n\nI2C \u9891\u7387\n\n\n400 kHz\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u4ee5\u4e0b\u6587\u6863\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528 Grove \u8fdb\u884c\u5165\u95e8\u5b66\u4e60\u3002\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u5173\u4e8e grove\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\nGrove\u4ea7\u54c1\u5177\u6709\u73af\u4fdd\u6027\uff0c\u5e76\u4e14\u90fd\u5177\u6709\u53ef\u63d2\u5165\nGrove Base Shield\n \u7684\u76f8\u540c\u8fde\u63a5\u53e3\u3002 \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684 \nI2C\n \u7aef\u53e3\u3002 \u5982\u679c\u4f60\u6ca1\u6709 Base Shield\uff0c\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u7ebf\u5c06 Grove - I2C Color Sensor \u8fde\u63a5\u5230 Arduino\u3002\n\n\n\n\n\n\n\n\nArduino UNO\n\n\nGrove - I2C Color Sensor\n\n\n\n\n\n\n\n\n\n\n5V\n\n\nVCC\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nSDA\n\n\nSDA\n\n\n\n\n\n\nSCL\n\n\nSCL\n\n\n\n\n\n\n\n\n\u8f6f\u4ef6\u5b89\u88c5\n\n\nSeeed\u5165\u95e8\u6307\u5bfc\n\n\n\u6f14\u793a\n\n\n\u8be5\u6a21\u5757\u53ef\u7528\u4e8e\u68c0\u6d4b\u5149\u6e90\u7684\u989c\u8272\u6216\u7269\u4f53\u7684\u989c\u8272\u3002 \u5f53\u7528\u4e8e\u68c0\u6d4b\u5149\u6e90\u7684\u989c\u8272\u65f6\uff0c\u5e94\u5173\u95ed LED \u5f00\u5173\uff0c\u5e76\u4e14\u5149\u6e90\u5e94\u76f4\u63a5\u7167\u5c04\u5230\u4f20\u611f\u5668\u4e0a\u3002 \u5f53\u7528\u4e8e\u68c0\u6d4b\u7269\u4f53\u7684\u989c\u8272\u65f6\uff0cLED \u5e94\u8be5\u662f\u6253\u5f00\u7684\uff0c\u4f60\u5e94\u8be5\u4f20\u611f\u5668\u653e\u5728\u7269\u4f53\u7684\u4e0a\u9762\u3002\u901a\u8fc7\u53cd\u5c04\u7406\u8bba\u6765\u611f\u77e5\u989c\u8272\u3002 \u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\u5f69\u8272\u4f20\u611f\u5668\u5e93\n\n\n\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Seeeduino / Arduino\uff0c\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u8bbe\u7f6e\u5e93\u3002\n\n\n\u5f00\u59cb\u5efa\u7acb\n\n\n\n\n\u4ece Grove_I2C_Color_Sensor github \u9875\u9762\u4e0b\u8f7d \n\u5e93\u4ee3\u7801\n\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u6700\u65b0\u7248\u672cV2.0\uff08IC \u4e3a TCS3472\uff09\uff0c\u8bf7\u4f7f\u7528\n \n\u65b0\u5e93\n\n\n\u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u89e3\u538b\u7f29\u5230... / arduino / libraries \u4e2d\u3002\n\n\n\u53ef\u4ee5\u89e3\u538b\u540e\u91cd\u547d\u540d\u6587\u4ef6\u5939\u4e3a \u201cColor_Sensor\u201d\n\n\n\u542f\u52a8 Arduino IDE\uff08\u5982\u679c\u6253\u5f00\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8\uff09\u3002\n\n\n\n\n\u529f\u80fd\u8bf4\u660e\n\n\n\u8fd9\u662f\u5e93\u4e2d\u6700\u91cd\u8981/\u6700\u6709\u7528\u7684\u529f\u80fd\uff0c\u6211\u4eec\u9080\u8bf7\u60a8\u81ea\u5df1\u67e5\u770b .h \u548c .cpp \u6587\u4ef6\uff0c\u4ee5\u67e5\u770b\u6240\u6709\u53ef\u7528\u7684\u529f\u80fd\u3002\n\n\n\u901a\u8fc7\u5e93\u51fd\u6570\u8bfb\u53d6RGB\u6570\u636e\n\n\nreadRGB(int *red, int *green, int *blue)\n\n\n\n\nred:\n \u4f7f\u7528\u53ef\u53d8\u5730\u5740\u4fdd\u5b58 \nR\n.\n\n\ngreen:\n \u4f7f\u7528\u53ef\u53d8\u5730\u5740\u4fdd\u5b58\u4e3a \nG\n.\n\n\nblue:\n \u4f7f\u7528\u53ef\u53d8\u5730\u5740\u4fdd\u5b58\u4e3a \nB\n.\n\n\n\n\nvoid loop()\n{\n    int red, green, blue;\n    GroveColorSensor colorSensor;\n    colorSensor.ledStatus = 1;            // When turn on the color sensor LED, ledStatus = 1; When turn off the color sensor LED, ledStatus = 0.\n    while(1)\n    {\n        colorSensor.readRGB(\nred, \ngreen, \nblue);    //Read RGB values to variables.\n        delay(300);\n        Serial.print(\nThe RGB value are: RGB( \n);\n        Serial.print(red,DEC);\n        Serial.print(\n, \n);\n        Serial.print(green,DEC);\n        Serial.print(\n, \n);\n        Serial.print(blue,DEC);\n        Serial.println(\n )\n);\n        colorSensor.clearInterrupt();\n    }\n}\n\n\n\n\n\u989c\u8272\u4f20\u611f\u5668\u793a\u4f8b/\u5e94\u7528\n\n\n\u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u4f7f\u7528 Grove - I2C Color Sensor \u7684\u529f\u80fd\uff0c\u5e76\u4f7f\u7528 \nChainable RGB LED Grove\n \u663e\u793a\u68c0\u6d4b\u5230\u7684\u989c\u8272\u3002\n\n\n\n\nNote\n\n\u5982\u679c\u60a8\u4e4b\u524d\u5c1a\u672a\u5c06 \nGrove-Chainable RGB LED \u5e93\n \u4e0b\u8f7d\u5230\u4f60\u7684 Arduino IDE , \u8bf7\u5148\u4e0b\u8f7d\u5e76\u8bbe\u7f6e\u5e93\u3002\n\n\n\n\n\u6253\u5f00 \nFile\uff08\u6587\u4ef6\uff09 - \nExamples\uff08\u793a\u4f8b\uff09 - \nColor_Sensor - \nexample - \nColorSensorWithRGB-LED\n \u4f7f\u7528 RGB-LED \u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u6216\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002\n\n\n\u63cf\u8ff0\n: \u8be5\u793a\u4f8b\u53ef\u4ee5\u6d4b\u91cf\u73af\u5883\u5149\u7684\u989c\u8272\u8272\u5ea6\u6216\u7269\u4f53\u7684\u989c\u8272\uff0c\u5e76\u901a\u8fc7\u53ef\u8fde\u63a5\u7684 RGB LED Grove\uff0c\u663e\u793a\u68c0\u6d4b\u5230\u7684\u989c\u8272\u3002\n\n\n\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u663e\u793a\u6a21\u5757\u901a\u8fc7 Grove - I2C Color Sensor \u663e\u793a\u68c0\u6d4b\u5230\u7684\u989c\u8272\u3002\n\n\n#include \nWire.h\n\n#include \nGroveColorSensor.h\n\n#include \nChainableLED.h\n\n\u00a0\n#define CLK_PIN   7\n#define DATA_PIN  8\n#define NUM_LEDS  1            //The number of Chainable RGB LED\n\u00a0\nChainableLED leds(CLK_PIN, DATA_PIN, NUM_LEDS);\n\u00a0\nvoid setup()\n{\n    Serial.begin(9600);\n    Wire.begin();\n}\n\u00a0\nvoid loop()\n{\n    int red, green, blue;\n    GroveColorSensor colorSensor;\n    colorSensor.ledStatus = 1;            // When turn on the color sensor LED, ledStatus = 1; When turn off the color sensor LED, ledStatus = 0.\n    while(1)\n    {\n        colorSensor.readRGB(\nred, \ngreen, \nblue);    //Read RGB values to variables.\n        delay(300);\n        Serial.print(\nThe RGB value are: RGB( \n);\n        Serial.print(red,DEC);\n        Serial.print(\n, \n);\n        Serial.print(green,DEC);\n        Serial.print(\n, \n);\n        Serial.print(blue,DEC);\n        Serial.println(\n )\n);\n        colorSensor.clearInterrupt();\n        for(int i = 0; i\nNUM_LEDS; i++)\n        {\n            leds.setColorRGB(i, red, green, blue);\n        }\n    }\n}\n\n\n\n\n\n\n\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u5f00\u53d1\u677f\u3002\n\n\n\u7136\u540e Grove _ Chainable_RGB_LED \u5c06\u663e\u793a\u68c0\u6d4b\u5230\u7684\u989c\u8272\u3002\n\n\n\n\n\u5176\u4ed6\u53c2\u8003\n\n\n\u8be5\u6a21\u5757\u57fa\u4e8e color sensor TCS3414CS\u3002 TCS3414CS digital color sensor \u4ece\u56db\u4e2a\u901a\u9053\u8fd4\u56de\u6570\u636e\uff1a\u7ea2\u8272\uff08R\uff09\uff0c\u7eff\u8272\uff08G\uff09\uff0c\u84dd\u8272\uff08B\uff09\u548c\u6e05\u9664\uff08C\uff09\uff08\u672a\u8fc7\u6ee4\uff09\u3002 \u7ea2\u8272\uff0c\u7eff\u8272\u548c\u84dd\u8272\u901a\u9053\uff08RGB\uff09\u7684\u54cd\u5e94\u53ef\u7528\u4e8e\u786e\u5b9a\u7279\u5b9a\u5149\u6e90\u7684\u8272\u5ea6\u5750\u6807\uff08x\uff0cy\uff09\u3002 \u8fd9\u4e9b\u6807\u51c6\u7531\u56fd\u9645\u6cd5\u59d4\u5458\u4f1a\uff08CIE\uff09\u5236\u5b9a\u3002 CIE\u662f\u6d89\u53ca\u989c\u8272\u548c\u989c\u8272\u6d4b\u91cf\u7684\u4e3b\u8981\u56fd\u9645\u7ec4\u7ec7\u3002\u4e3a\u4e86\u4f7f\u7528 TCS3414CS \u83b7\u53d6\u7ed9\u5b9a\u5bf9\u8c61\u7684\u989c\u8272\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5c06\u4f20\u611f\u5668\u54cd\u5e94\uff08RGB\uff09\u6620\u5c04\u5230CIE\u7684\u6807\u51c6\u503c\uff08XYZ\uff09\u3002 \u7136\u540e\u9700\u8981\u8ba1\u7b97\u8272\u5ea6\u5750\u6807\uff08x\uff0cy\uff09\u3002\n\n\n\n\n\u8272\u5ea6\u8ba1\u7b97\u8fc7\u7a0b\u6982\u8ff0\n\n\n\u8fdb\u884c\u8f6c\u6362\u7684\u65b9\u7a0b\u5f0f\uff1a\n\n\n\n\n\u53d8\u6362\u65b9\u7a0b\n\n\n\n\n\u5f53\u6211\u4eec\u5f97\u5230\u5750\u6807\uff08x\uff0cy\uff09\u65f6\uff0c\u8bf7\u53c2\u8003\u4e0b\u56fe\uff0c\u4ee5\u83b7\u5f97\u63a8\u8350\u7684\u989c\u8272\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Library]\nLibrary for Grove - I2C Color Sensor V1.2\n\n\n[Library]\nLibrary for Grove - I2C Color Sensor V2.0\n\n\n[Eagle]\nGrove-I2C Color Sensor Eagle File V1.2\n\n\n[Eagle]\nGrove-I2C Color Sensor Eagle File V2.0\n\n\n[PDF]\nGrove-I2C Color Sensor SCH File V1.2\n\n\n[PDF]\nGrove-I2C Color Sensor SCH File V2.0\n\n\n[PDF]\nGrove-I2C Color Sensor PCB File V1.2\n\n\n[PDF]\nGrove-I2C Color Sensor PCB File V2.0\n\n\n[Datasheet]\nTCS3414-A Datasheet\n\n\n[Datasheet]\nTCS3472 Datasheet", 
            "title": "Grove-I2C Color Sensor"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_1", 
            "text": "\u7248\u672c\u8c03\u6574  \u63cf\u8ff0  \u53d1\u5e03\u65e5\u671f  \u8d2d\u4e70\u94fe\u63a5      v1.2  \u521d\u6b21\u516c\u5f00\u53d1\u5e03\uff08\u6d4b\u8bd5\u7248\uff09  2013\u5e741\u670817\u65e5  \u65e0    v2.0  \u7528 TCS34725FN \u66ff\u6362 TCS3472\uff08EOL\uff09\u5e76\u4f18\u5316\u4e86 PCB \u5e03\u5c40  2010\u5e744\u670827\u65e5  \u9a6c\u4e0a\u8d2d\u4e70", 
            "title": "\u7248\u672c\u4fe1\u606f"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_2", 
            "text": "\u80fd\u591f\u517c\u5bb9 Grove \u63a5\u53e3  \u5e26 I2C \u7aef\u53e3\u7684 16\u4f4d\u6570\u5b57\u8f93\u51fa  SYNC \u8f93\u5165\u5c06\u79ef\u5206\u5468\u671f\u540c\u6b65\u5230\u8c03\u5236\u5149\u6e90  \u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\u4e3a -40\u00b0C \u81f3 85\u00b0C  \u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u5b9e\u73b0\u4e2d\u65ad\u529f\u80fd\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e0a\u9650\u548c\u4e0b\u9650\u9608\u503c  \u7b26\u5408RoHS    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_3", 
            "text": "\u53c2\u6570  \u503c/\u8303\u56f4      PCB\u5c3a\u5bf8  2.0 cm x 4.0 cm    \u63a5\u53e3  2.0mm\u8282\u8ddd\u7684\u5f15\u811a    VCC  3.3 - 6.0 V    I2C \u9891\u7387  400 kHz", 
            "title": "\u4ea7\u54c1\u89c4\u683c"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_4", 
            "text": "\u4ee5\u4e0b\u6587\u6863\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528 Grove \u8fdb\u884c\u5165\u95e8\u5b66\u4e60\u3002   \u5165\u95e8\u6307\u5bfc  \u5173\u4e8e grove", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_5", 
            "text": "Grove\u4ea7\u54c1\u5177\u6709\u73af\u4fdd\u6027\uff0c\u5e76\u4e14\u90fd\u5177\u6709\u53ef\u63d2\u5165 Grove Base Shield  \u7684\u76f8\u540c\u8fde\u63a5\u53e3\u3002 \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684  I2C  \u7aef\u53e3\u3002 \u5982\u679c\u4f60\u6ca1\u6709 Base Shield\uff0c\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u7ebf\u5c06 Grove - I2C Color Sensor \u8fde\u63a5\u5230 Arduino\u3002     Arduino UNO  Grove - I2C Color Sensor      5V  VCC    GND  GND    SDA  SDA    SCL  SCL", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_6", 
            "text": "Seeed\u5165\u95e8\u6307\u5bfc", 
            "title": "\u8f6f\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_7", 
            "text": "\u8be5\u6a21\u5757\u53ef\u7528\u4e8e\u68c0\u6d4b\u5149\u6e90\u7684\u989c\u8272\u6216\u7269\u4f53\u7684\u989c\u8272\u3002 \u5f53\u7528\u4e8e\u68c0\u6d4b\u5149\u6e90\u7684\u989c\u8272\u65f6\uff0c\u5e94\u5173\u95ed LED \u5f00\u5173\uff0c\u5e76\u4e14\u5149\u6e90\u5e94\u76f4\u63a5\u7167\u5c04\u5230\u4f20\u611f\u5668\u4e0a\u3002 \u5f53\u7528\u4e8e\u68c0\u6d4b\u7269\u4f53\u7684\u989c\u8272\u65f6\uff0cLED \u5e94\u8be5\u662f\u6253\u5f00\u7684\uff0c\u4f60\u5e94\u8be5\u4f20\u611f\u5668\u653e\u5728\u7269\u4f53\u7684\u4e0a\u9762\u3002\u901a\u8fc7\u53cd\u5c04\u7406\u8bba\u6765\u611f\u77e5\u989c\u8272\u3002 \u5982\u4e0b\u56fe\u6240\u793a\u3002", 
            "title": "\u6f14\u793a"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_8", 
            "text": "\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Seeeduino / Arduino\uff0c\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u8bbe\u7f6e\u5e93\u3002", 
            "title": "\u5f69\u8272\u4f20\u611f\u5668\u5e93"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_9", 
            "text": "\u4ece Grove_I2C_Color_Sensor github \u9875\u9762\u4e0b\u8f7d  \u5e93\u4ee3\u7801 \u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u6700\u65b0\u7248\u672cV2.0\uff08IC \u4e3a TCS3472\uff09\uff0c\u8bf7\u4f7f\u7528\n  \u65b0\u5e93  \u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u89e3\u538b\u7f29\u5230... / arduino / libraries \u4e2d\u3002  \u53ef\u4ee5\u89e3\u538b\u540e\u91cd\u547d\u540d\u6587\u4ef6\u5939\u4e3a \u201cColor_Sensor\u201d  \u542f\u52a8 Arduino IDE\uff08\u5982\u679c\u6253\u5f00\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8\uff09\u3002", 
            "title": "\u5f00\u59cb\u5efa\u7acb"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_10", 
            "text": "\u8fd9\u662f\u5e93\u4e2d\u6700\u91cd\u8981/\u6700\u6709\u7528\u7684\u529f\u80fd\uff0c\u6211\u4eec\u9080\u8bf7\u60a8\u81ea\u5df1\u67e5\u770b .h \u548c .cpp \u6587\u4ef6\uff0c\u4ee5\u67e5\u770b\u6240\u6709\u53ef\u7528\u7684\u529f\u80fd\u3002", 
            "title": "\u529f\u80fd\u8bf4\u660e"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#rgb", 
            "text": "readRGB(int *red, int *green, int *blue)   red:  \u4f7f\u7528\u53ef\u53d8\u5730\u5740\u4fdd\u5b58  R .  green:  \u4f7f\u7528\u53ef\u53d8\u5730\u5740\u4fdd\u5b58\u4e3a  G .  blue:  \u4f7f\u7528\u53ef\u53d8\u5730\u5740\u4fdd\u5b58\u4e3a  B .   void loop()\n{\n    int red, green, blue;\n    GroveColorSensor colorSensor;\n    colorSensor.ledStatus = 1;            // When turn on the color sensor LED, ledStatus = 1; When turn off the color sensor LED, ledStatus = 0.\n    while(1)\n    {\n        colorSensor.readRGB( red,  green,  blue);    //Read RGB values to variables.\n        delay(300);\n        Serial.print( The RGB value are: RGB(  );\n        Serial.print(red,DEC);\n        Serial.print( ,  );\n        Serial.print(green,DEC);\n        Serial.print( ,  );\n        Serial.print(blue,DEC);\n        Serial.println(  ) );\n        colorSensor.clearInterrupt();\n    }\n}", 
            "title": "\u901a\u8fc7\u5e93\u51fd\u6570\u8bfb\u53d6RGB\u6570\u636e"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_11", 
            "text": "\u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u4f7f\u7528 Grove - I2C Color Sensor \u7684\u529f\u80fd\uff0c\u5e76\u4f7f\u7528  Chainable RGB LED Grove  \u663e\u793a\u68c0\u6d4b\u5230\u7684\u989c\u8272\u3002   Note \n\u5982\u679c\u60a8\u4e4b\u524d\u5c1a\u672a\u5c06  Grove-Chainable RGB LED \u5e93  \u4e0b\u8f7d\u5230\u4f60\u7684 Arduino IDE , \u8bf7\u5148\u4e0b\u8f7d\u5e76\u8bbe\u7f6e\u5e93\u3002  \u6253\u5f00  File\uff08\u6587\u4ef6\uff09 -  Examples\uff08\u793a\u4f8b\uff09 -  Color_Sensor -  example -  ColorSensorWithRGB-LED  \u4f7f\u7528 RGB-LED \u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u6216\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002  \u63cf\u8ff0 : \u8be5\u793a\u4f8b\u53ef\u4ee5\u6d4b\u91cf\u73af\u5883\u5149\u7684\u989c\u8272\u8272\u5ea6\u6216\u7269\u4f53\u7684\u989c\u8272\uff0c\u5e76\u901a\u8fc7\u53ef\u8fde\u63a5\u7684 RGB LED Grove\uff0c\u663e\u793a\u68c0\u6d4b\u5230\u7684\u989c\u8272\u3002  \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u663e\u793a\u6a21\u5757\u901a\u8fc7 Grove - I2C Color Sensor \u663e\u793a\u68c0\u6d4b\u5230\u7684\u989c\u8272\u3002  #include  Wire.h \n#include  GroveColorSensor.h \n#include  ChainableLED.h \n\u00a0\n#define CLK_PIN   7\n#define DATA_PIN  8\n#define NUM_LEDS  1            //The number of Chainable RGB LED\n\u00a0\nChainableLED leds(CLK_PIN, DATA_PIN, NUM_LEDS);\n\u00a0\nvoid setup()\n{\n    Serial.begin(9600);\n    Wire.begin();\n}\n\u00a0\nvoid loop()\n{\n    int red, green, blue;\n    GroveColorSensor colorSensor;\n    colorSensor.ledStatus = 1;            // When turn on the color sensor LED, ledStatus = 1; When turn off the color sensor LED, ledStatus = 0.\n    while(1)\n    {\n        colorSensor.readRGB( red,  green,  blue);    //Read RGB values to variables.\n        delay(300);\n        Serial.print( The RGB value are: RGB(  );\n        Serial.print(red,DEC);\n        Serial.print( ,  );\n        Serial.print(green,DEC);\n        Serial.print( ,  );\n        Serial.print(blue,DEC);\n        Serial.println(  ) );\n        colorSensor.clearInterrupt();\n        for(int i = 0; i NUM_LEDS; i++)\n        {\n            leds.setColorRGB(i, red, green, blue);\n        }\n    }\n}   \u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u5f00\u53d1\u677f\u3002  \u7136\u540e Grove _ Chainable_RGB_LED \u5c06\u663e\u793a\u68c0\u6d4b\u5230\u7684\u989c\u8272\u3002", 
            "title": "\u989c\u8272\u4f20\u611f\u5668\u793a\u4f8b/\u5e94\u7528"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_12", 
            "text": "\u8be5\u6a21\u5757\u57fa\u4e8e color sensor TCS3414CS\u3002 TCS3414CS digital color sensor \u4ece\u56db\u4e2a\u901a\u9053\u8fd4\u56de\u6570\u636e\uff1a\u7ea2\u8272\uff08R\uff09\uff0c\u7eff\u8272\uff08G\uff09\uff0c\u84dd\u8272\uff08B\uff09\u548c\u6e05\u9664\uff08C\uff09\uff08\u672a\u8fc7\u6ee4\uff09\u3002 \u7ea2\u8272\uff0c\u7eff\u8272\u548c\u84dd\u8272\u901a\u9053\uff08RGB\uff09\u7684\u54cd\u5e94\u53ef\u7528\u4e8e\u786e\u5b9a\u7279\u5b9a\u5149\u6e90\u7684\u8272\u5ea6\u5750\u6807\uff08x\uff0cy\uff09\u3002 \u8fd9\u4e9b\u6807\u51c6\u7531\u56fd\u9645\u6cd5\u59d4\u5458\u4f1a\uff08CIE\uff09\u5236\u5b9a\u3002 CIE\u662f\u6d89\u53ca\u989c\u8272\u548c\u989c\u8272\u6d4b\u91cf\u7684\u4e3b\u8981\u56fd\u9645\u7ec4\u7ec7\u3002\u4e3a\u4e86\u4f7f\u7528 TCS3414CS \u83b7\u53d6\u7ed9\u5b9a\u5bf9\u8c61\u7684\u989c\u8272\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5c06\u4f20\u611f\u5668\u54cd\u5e94\uff08RGB\uff09\u6620\u5c04\u5230CIE\u7684\u6807\u51c6\u503c\uff08XYZ\uff09\u3002 \u7136\u540e\u9700\u8981\u8ba1\u7b97\u8272\u5ea6\u5750\u6807\uff08x\uff0cy\uff09\u3002   \u8272\u5ea6\u8ba1\u7b97\u8fc7\u7a0b\u6982\u8ff0  \u8fdb\u884c\u8f6c\u6362\u7684\u65b9\u7a0b\u5f0f\uff1a   \u53d8\u6362\u65b9\u7a0b   \u5f53\u6211\u4eec\u5f97\u5230\u5750\u6807\uff08x\uff0cy\uff09\u65f6\uff0c\u8bf7\u53c2\u8003\u4e0b\u56fe\uff0c\u4ee5\u83b7\u5f97\u63a8\u8350\u7684\u989c\u8272\u3002", 
            "title": "\u5176\u4ed6\u53c2\u8003"
        }, 
        {
            "location": "/Grove-I2C_Color_Sensor/#_13", 
            "text": "[Library] Library for Grove - I2C Color Sensor V1.2  [Library] Library for Grove - I2C Color Sensor V2.0  [Eagle] Grove-I2C Color Sensor Eagle File V1.2  [Eagle] Grove-I2C Color Sensor Eagle File V2.0  [PDF] Grove-I2C Color Sensor SCH File V1.2  [PDF] Grove-I2C Color Sensor SCH File V2.0  [PDF] Grove-I2C Color Sensor PCB File V1.2  [PDF] Grove-I2C Color Sensor PCB File V2.0  [Datasheet] TCS3414-A Datasheet  [Datasheet] TCS3472 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/", 
            "text": "Grove - Loudness Sensor \u65e8\u5728\u68c0\u6d4b\u73af\u5883\u7684\u58f0\u97f3\u3002 \u5b83\u57fa\u4e8eLM2904\u653e\u5927\u5668\u548c\u5185\u7f6e\u7684\u9ea6\u514b\u98ce\uff0c\u5b83\u53ef\u4ee5\u4ece\u9ea6\u514b\u98ce\u4e2d\u63a5\u6536\u5230\u9ad8\u9891\u4fe1\u53f7\u5e76\u4e14\u8fdb\u884c\u653e\u5927\u548c\u6ee4\u6ce2\uff0c\u5e76\u8f93\u51fa\u6b63\u5305\u7edc\u3002 \u8fd9\u53ef\u4ee5\u7528Arduino\u8fdb\u884c\u4fe1\u53f7\u91c7\u96c6\u3002 \u800c\u4e14\u5b83\u8f93\u51fa\u503c\u53d6\u51b3\u4e8e\u58f0\u97f3\u8f93\u5165\u7684\u7535\u5e73\u9ad8\u4f4e\u3002\u8f93\u5165\u4fe1\u53f7\u4f1a\u7ecf\u8fc7\u6a21\u5757\u7684\u4e24\u6b21\u6ee4\u6ce2\u6765\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4fe1\u53f7\u5e72\u6270\u3002 \u800c\u4e14\u8fd9\u91cc\u6709\u4e00\u4e2a\u87ba\u65cb\u7535\u4f4d\u8ba1\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u8c03\u6574\u8f93\u51fa\u589e\u76ca\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5de5\u4f5c\u7535\u538b \uff1a3.5~10 VDC\n\n\n\u5de5\u4f5c\u9891\u7387 \uff1a50~2000 Hz\n\n\n\u7075\u654f\u5ea6\u00a0: -48~66 dB\n\n\n\u4fe1\u566a\u6bd4\uff1a\n 58 dB\n\n\n\u8f93\u51fa\u4fe1\u53f7\u8303\u56f4\uff1a\u6a21\u62df\u4fe1\u53f7\uff080-1023\uff09\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u4f7f\u7528 Arduino\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u8be5\u6a21\u5757\u4f7f\u7528\u82af\u7247LM2904\u5c06\u8ff7\u4f60\u9ea6\u514b\u98ce\u4ea7\u751f\u7684\u7535\u5b50\u4fe1\u53f7\u8fdb\u884c\u653e\u5927\u3002 \u6700\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u6a21\u6570\u8f6c\u6362\u503c\u3002 \u6211\u4eec\u5c1d\u8bd5\u8bfb\u53d6\u8f93\u51fa\u503c\u3002\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a Grove - Loudness Sensor\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Loudness Sensor\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5c06 Loudness sensor \u8fde\u63a5\u5230 Grove-Base Shield \u7684\u6a21\u62df\u7aef\u53e3 \nA0\n\u3002\n\n\n\n\n\n\n\n\n\u4f7f\u7528  USB\u6570\u636e\u7ebf\u5c06 Arduino / Seeeduino \u8fde\u63a5\u5230 PC\u3002\n\n\n\n\n\u7a0b\u5e8f\n\n\n\n\n\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002\n\n\n\n\nint val;\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    analogRead(0);\n    delay(10);\n    val = analogRead(0);\n    Serial.println(val);\n    delay(200);\n}\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\n\n\n\u7136\u540e\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u89c2\u5bdf\u8f93\u51fa\u7ed3\u679c\u3002 \u5f53\u5411\u4f20\u611f\u5668\u5439\u6c14\u65f6\u4f1a\u770b\u5230\u6570\u503c\u53d1\u751f\u4e86\u5f88\u5927\u53d8\u5316\u3002\n\n\n\n\n\n\n\u8fd9\u662f\u793a\u6ce2\u5668\u7684\u6d4b\u8bd5\u622a\u56fe\n\n\u84dd\u7ebf\u662f\u6765\u81ea\u9ea6\u514b\u98ce\u7684\u539f\u59cb\u4fe1\u53f7\uff0c\u9ec4\u8272\u662f Loudness Sensor \u8f93\u5165\u7684\u4fe1\u53f7\u3002 \u5b83\u662f\u6a21\u5757\u8f93\u51fa\u7684\u539f\u59cb\u4fe1\u53f7\u3002\n\n\n\u7136\u540e\u5411\u8fd9\u4e2a\u4f20\u611f\u5668\u5439\u6c14:\n\n\n\n\n\u5411\u8fd9\u4e2a\u4f20\u611f\u5668\u8bf4\u8bdd\uff1a\n\n\n\n\n\u4f7f\u7528Raspberry Pi\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\u3002\n\n\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - DHT Sensor pro\n\n\nGrovepi+\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\n\n\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa\n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n\n\n\n\n\n\n\u901a\u8fc7\u4f7f\u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u63d2\u5ea7 \nA0\n \u7aef\u53e3 \u3002\n\n\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\n\n\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a\n\n\n\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\n\n\n\u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\n    nano grove_loudness_sensor.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Loudness Sensor to analog port A0\n    # SIG,NC,VCC,GND\n    loudness_sensor = 0\n\n    while True:\n        try:\n            # Read the sound level\n            sensor_value = grovepi.analogRead(loudness_sensor)\n\n            print \nsensor_value =\n, sensor_value\n            time.sleep(.5)\n\n        except IOError:\n            print \nError\n\n\n\n\n\n\n\n\n\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n    sudo python grove_loudness_sensor.py\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\u3010Eagle\u3011\n \nGrove - Loudness Sensor in Eagle format\n\n\n\u3010PDF\u3011\n \nGrove - loudness sensor Schematic in PDF format\n\n\n\u3010PDF\u3011\n \nGrove - loudness sensor PCB in PDF format\n\n\n\u3010Datasheet\u3011\n \nLM2904DR Datasheet", 
            "title": "Grove-Loudness Sensor"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b \uff1a3.5~10 VDC  \u5de5\u4f5c\u9891\u7387 \uff1a50~2000 Hz  \u7075\u654f\u5ea6\u00a0: -48~66 dB  \u4fe1\u566a\u6bd4\uff1a  58 dB  \u8f93\u51fa\u4fe1\u53f7\u8303\u56f4\uff1a\u6a21\u62df\u4fe1\u53f7\uff080-1023\uff09    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#_2", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#_3", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#arduino", 
            "text": "", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#_4", 
            "text": "\u8be5\u6a21\u5757\u4f7f\u7528\u82af\u7247LM2904\u5c06\u8ff7\u4f60\u9ea6\u514b\u98ce\u4ea7\u751f\u7684\u7535\u5b50\u4fe1\u53f7\u8fdb\u884c\u653e\u5927\u3002 \u6700\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u6a21\u6570\u8f6c\u6362\u503c\u3002 \u6211\u4eec\u5c1d\u8bd5\u8bfb\u53d6\u8f93\u51fa\u503c\u3002  \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a Grove - Loudness Sensor\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Loudness Sensor  Base Shield           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5c06 Loudness sensor \u8fde\u63a5\u5230 Grove-Base Shield \u7684\u6a21\u62df\u7aef\u53e3  A0 \u3002     \u4f7f\u7528  USB\u6570\u636e\u7ebf\u5c06 Arduino / Seeeduino \u8fde\u63a5\u5230 PC\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#_5", 
            "text": "\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002   int val;\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    analogRead(0);\n    delay(10);\n    val = analogRead(0);\n    Serial.println(val);\n    delay(200);\n}   \u4e0a\u4f20\u4ee3\u7801  \u7136\u540e\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u89c2\u5bdf\u8f93\u51fa\u7ed3\u679c\u3002 \u5f53\u5411\u4f20\u611f\u5668\u5439\u6c14\u65f6\u4f1a\u770b\u5230\u6570\u503c\u53d1\u751f\u4e86\u5f88\u5927\u53d8\u5316\u3002    \u8fd9\u662f\u793a\u6ce2\u5668\u7684\u6d4b\u8bd5\u622a\u56fe \n\u84dd\u7ebf\u662f\u6765\u81ea\u9ea6\u514b\u98ce\u7684\u539f\u59cb\u4fe1\u53f7\uff0c\u9ec4\u8272\u662f Loudness Sensor \u8f93\u5165\u7684\u4fe1\u53f7\u3002 \u5b83\u662f\u6a21\u5757\u8f93\u51fa\u7684\u539f\u59cb\u4fe1\u53f7\u3002  \u7136\u540e\u5411\u8fd9\u4e2a\u4f20\u611f\u5668\u5439\u6c14:   \u5411\u8fd9\u4e2a\u4f20\u611f\u5668\u8bf4\u8bdd\uff1a", 
            "title": "\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#raspberry-pi", 
            "text": "", 
            "title": "\u4f7f\u7528Raspberry Pi"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#_6", 
            "text": "\u9996\u5148\uff0c\u4f60\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\u3002      Raspberry pi  Grove - DHT Sensor pro  Grovepi+           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70       \u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002    \u901a\u8fc7\u4f7f\u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u63d2\u5ea7  A0  \u7aef\u53e3 \u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#_7", 
            "text": "\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a       cd yourpath/GrovePi/Software/Python/    \u627e\u5230\u8fd9\u884c\u4ee3\u7801     nano grove_loudness_sensor.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Loudness Sensor to analog port A0\n    # SIG,NC,VCC,GND\n    loudness_sensor = 0\n\n    while True:\n        try:\n            # Read the sound level\n            sensor_value = grovepi.analogRead(loudness_sensor)\n\n            print  sensor_value = , sensor_value\n            time.sleep(.5)\n\n        except IOError:\n            print  Error     \u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b     sudo python grove_loudness_sensor.py", 
            "title": "\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Loudness_Sensor/#_8", 
            "text": "\u3010Eagle\u3011   Grove - Loudness Sensor in Eagle format  \u3010PDF\u3011   Grove - loudness sensor Schematic in PDF format  \u3010PDF\u3011   Grove - loudness sensor PCB in PDF format  \u3010Datasheet\u3011   LM2904DR Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Moisture_Sensor/", 
            "text": "\u8fd9\u4e2aMoisture Senor\u53ef\u4ee5\u7528\u4e8e\u68c0\u6d4b\u571f\u58e4\u7684\u6c34\u5206\uff0c\u6216\u8005\u5224\u65ad\u4f20\u611f\u5668\u5468\u56f4\u662f\u5426\u6709\u6c34\u5206\uff0c\u8ba9\u60a8\u82b1\u56ed\u91cc\u7684\u690d\u7269\u5728\u6e34\u671b\u65f6\u80fd\u591f\u4f38\u51fa\u63f4\u624b\u3002 \u8be5\u4f20\u611f\u5668\u975e\u5e38\u6613\u4e8e\u4f7f\u7528\uff0c\u60a8\u53ea\u9700\u5c06\u5b83\u63d2\u5165\u571f\u58e4\u5e76\u8bfb\u53d6\u6570\u636e\u5373\u53ef\u3002 \u4f7f\u7528\u8fd9\u4e2a\u4f20\u611f\u5668\uff0c\u60a8\u53ef\u4ee5\u5236\u4f5c\u4e00\u4e2a\u5c0f\u5de5\u7a0b\uff0c\u8ba9\u690d\u7269\u7ed9\u60a8\u53d1\u9001\u6d88\u606f\uff0c\u5982\u201c\u6211\u73b0\u5728\u53e3\u6e34\uff0c\u8bf7\u7ed9\u6211\u4e00\u4e9b\u6c34\u201d\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u80fd\u591f\u901a\u8fc7\u571f\u58e4\u7535\u963b\u7387\uff0c\u6d4b\u91cf\u51fa\u7684\u571f\u58e4\u6c34\u5206\u542b\u91cf\n\n\n\u65b9\u4fbf\u4f7f\u7528\n\n\n2.0 cm X 6.0 cm \u7684grove \u6a21\u5757\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove_System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u4f7f\u7528\u73af\u5883\n\n\n\u6700\u5c0f\n\n\n\u6807\u51c6\n\n\n\u6700\u5927\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n-\n\n\n3.3\n\n\n-\n\n\n5\n\n\nV\n\n\n\n\n\n\n\u7535\u6d41\n\n\n-\n\n\n0\n\n\n-\n\n\n35\n\n\nmA\n\n\n\n\n\n\n\u8f93\u51fa\u6570\u503c\n\n\n\u5728\u5e72\u71e5\u7684\u571f\u58e4\u4e2d\n\u5728\u6f6e\u6e7f\u7684\u571f\u58e4\u4e2d\n\u5728\u6c34\u4e2d\n\n\n0\n300\n700\n\n\n-\n\n\n300\n700\n950\n\n\n-\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u5e94\u7528\u5728\u690d\u7269\u56ed\u6797\u4e2d\n\n\n\u6e7f\u5ea6\u68c0\u6d4b\n\n\n\u6d53\u5ea6\u68c0\u6d4b\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4f7f\u7528Arduino\n\n\n\u8fd9\u662f\u53ef\u4ee5\u7528\u4e8e\u68c0\u6d4b\u571f\u58e4\u6c34\u5206\u7684moisture sensor\u7684\u4f7f\u7528\u8bf4\u660e\u3002 \u5f53\u68c0\u6d4b\u5230\u571f\u58e4\u6c34\u5206\u6d88\u5931\u65f6\uff0c\u4f20\u611f\u5668\u8f93\u51fa\u503c\u4f1a\u964d\u4f4e\u3002 \u60a8\u53ef\u4ee5\u89c2\u5bdf\u4f20\u611f\u5668\u8f93\u51fa\u7684\u7ed3\u679c\u77e5\u9053\u690d\u7269\u662f\u5426\u9700\u8981\u6c34\u3002 \u4e0b\u9762\u5c55\u793a\u8fd9\u4e2a\u4f20\u611f\u5668\u5728\u611f\u5e94\u571f\u58e4\u6c34\u5206\u65b9\u9762\u7684\u7b80\u5355\u5e94\u7528\u3002\n\n\n\n\n\n\n\u4f7f\u75284\u9488\u7684Grove\u8fde\u63a5\u7ebf\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684 \nA0\n \u7684\u6a21\u62df\u7aef\u53e3\uff0c\uff0c\u7136\u540e\u5c06\u4f20\u611f\u5668\u63d2\u5165\u571f\u58e4\u6216\u653e\u7f6e\u5728\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u5730\u65b9\u3002\n\n\n\n\n\n\n\u5c06Grove-Base Shield\u63d2\u5165Arduino Seeeduino\uff0c\u5e76\u901a\u8fc7USB\u6570\u636e\u7ebf\u5c06Arduino\u8fde\u63a5\u5230PC\u3002\n\n\n\n\n\n\n\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n\n\n\n\n\nNote\n\n\n\u8be5\u4f20\u611f\u5668\u4e0d\u4f1a\u56e0\u4e3a\u63a7\u5236\u7535\u8def\u4e0e\u6c34\u63a5\u89e6\u800c\u5931\u6548\uff0c\u4f46\u662f\u53ef\u80fd\u5bb9\u6613\u5728\u63a2\u9488\u4e4b\u95f4\u53d1\u751f\u7535\u89e3\u8150\u8680\uff0c\u56e0\u6b64\u4e0d\u9002\u5408\u4e00\u76f4\u7559\u5728\u6c34\u91cc\u6216\u5728\u5ba4\u5916\u4f7f\u7528\u3002\n\n\n\n\n\n\n\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684Arduino\u7f16\u8f91\u9875\u9762\u4e0a\n\n\n\n\n// Test code for Grove - Moisture Sensor\n\n\nint\n \nsensorPin\n \n=\n \nA0\n;\n \n// select the input pin for the potentiometer\n\n\nint\n \nsensorValue\n \n=\n \n0\n;\n \n// variable to store the value coming from the sensor7\n\n\n\nvoid\n \nsetup\n()\n \n{\n\n    \n// declare the ledPin as an OUTPUT:\n\n    \nSerial\n.\nbegin\n(\n9600\n);\n\n\n}\n\n\nvoid\n \nloop\n()\n \n{\n\n    \n// read the value from the sensor:\n\n    \nsensorValue\n \n=\n \nanalogRead\n(\nsensorPin\n);\n\n    \nSerial\n.\nprint\n(\nsensor = \n \n);\n\n    \nSerial\n.\nprintln\n(\nsensorValue\n);\n\n    \ndelay\n(\n1000\n);\n\n\n}\n\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n\n\n\n\n\u4f7f\u7528TI LaunchPad\n\n\n\u7167\u987e\u4f60\u7684\u690d\u7269\uff08\u4f7f\u7528Moisture Sensor\uff09\n\n\n\u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u4e2a\u5728\u571f\u58e4\u4e2d\u68c0\u6d4b\u6c34\u5206\u7684\u7b80\u5355\u5e94\u7528\u3002\u901a\u8fc7\u89c2\u5bdf\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u60a8\u53ef\u4ee5\u77e5\u9053\u690d\u7269\u662f\u5426\u9700\u8981\u6c34\n\n\n\n\n/*\n\n\n  Moisture-Sensor\n\n\n  The following sketch demonstrates a simple application of sensing\n\n\n  the moisture of the soil. You can know whether a plant needs water\n\n\n  or not by observing the results that the sensor outputs.\n\n\n  The circuit:\n\n\n    * Moisture-Sensor attached to pin 24 (J6 plug on Grove Base BoosterPack)\n\n\n    * one side pin (either one) to ground\n\n\n    * the other side pin to +VCC\n\n\n    * LED anode (long leg) attached to RED_LED\n\n\n    * LED cathode (short leg) attached to ground\n\n\n  - NOTE:\n\n\n    This example code is in the public domain.\n\n\n    http://seeedstudio.com/wiki/Grove_-_Moisture_Sensor\n\n\n*/\n\n\n#include\n \nTM1637.h\n\n\n/* Macro Define */\n\n\n#define CLK 39              \n/* 4-digital display clock pin */\n\n\n#define DIO 38              \n/* 4-digiral display data pin */\n\n\n#define BLINK_LED RED_LED   \n/* blink led */\n\n\n#define MOISTURE_PIN 24     \n/* pin of moisture sensor */\n\n\n#define THRESHOLD_VALUE 300 \n/* threshold for watering the flowers */\n\n\n#define ON HIGH             \n/* led on */\n\n\n#define OFF LOW             \n/* led off */\n\n\n#define _handle_led(x) digitalWrite(BLINK_LED, x) \n/* handle led */\n\n\n\n/* Global Varibles */\n\n\nTM1637\n \ntm1637\n(\nCLK\n,\n \nDIO\n);\n    \n/* 4-digital display object */\n\n\nint\n \nanalog_value\n \n=\n \n0\n;\n       \n/* varible to store the value coming from rotary angle\n\n\nsensor */\n\n\nint8_t\n \nbits\n[\n4\n]\n \n=\n \n{\n0\n};\n       \n/* array to store the single bits of the value */\n\n\n/* the setup() method runs once, when the sketch starts */\n\n\nvoid\n \nsetup\n()\n \n{\n\n\n/* Initialize 4-digital display */\n\n    \ntm1637\n.\ninit\n();\n\n    \ntm1637\n.\nset\n(\nBRIGHT_TYPICAL\n);\n\n\n/* declare the red_led pin as an OUTPUT */\n\n    \npinMode\n(\nBLINK_LED\n,\n \nOUTPUT\n);\n\n\n}\n\n\n/* the loop() method runs over and over again */\n\n\nvoid\n \nloop\n()\n \n{\n\n    \nanalog_value\n \n=\n \nanalogRead\n(\nMOISTURE_PIN\n);\n \n/* read the value from the sensor */\n\n\n/* if the value is smaller than threshold, turn on led */\n\n    \nif\n(\nanalog_value\n \n \nTHRESHOLD_VALUE\n)\n \n{\n\n        \n_handle_led\n(\nON\n);\n\n    \n}\n \nelse\n \n{\n\n        \n_handle_led\n(\nOFF\n);\n\n    \n}\n\n    \nmemset\n(\nbits\n,\n \n0\n,\n \n4\n);\n \n/* reset array when we use it */\n\n    \nfor\n(\nint\n \ni\n \n=\n \n3\n;\n \ni\n \n=\n \n0\n;\n \ni\n--\n)\n \n{\n\n\n/* get single bits of the analog value */\n\n        \nbits\n[\ni\n]\n \n=\n \nanalog_value\n \n%\n \n10\n;\n\n        \nanalog_value\n \n=\n \nanalog_value\n \n/\n \n10\n;\n\n        \ntm1637\n.\ndisplay\n(\ni\n,\n \nbits\n[\ni\n]);\n \n/* display by 4-digital display */\n\n    \n}\n\n    \ndelay\n(\n200\n);\n\n\n}\n\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n1. \u4f60\u5e94\u8be5\u51c6\u5907\u4e00\u4e2aRaspberry Pi\u548c\u4e00\u4e2agrove pi\u6216grove pi +\n2. \u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa\n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n3. \u786c\u4ef6\u8fde\u63a5\n- \u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165grove pi\u7684 \nA0\n \u7aef\u53e3\u3002\n4. \u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\n\n\ncd yourpath/GrovePi/Software/Python/\n\n\n\n\n\u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\n\nnano\n \ngrove_moisture_sensor\n.\npy\n \n# \nCtrl+x\n to exit #\n\n\nimport\n \ntime\n\n\nimport\n \ngrovepi\n\n\n# Connect the Grove Moisture Sensor to analog port A0\n\n\n# SIG,NC,VCC,GND\n\n\nsensor\n \n=\n \n0\n\n\nwhile\n \nTrue\n:\n\n\ntry\n:\n\n\nprint\n \ngrovepi\n.\nanalogRead\n(\nsensor\n)\n\n\ntime\n.\nsleep\n(\n.\n5\n)\n\n\nexcept\n \nKeyboardInterrupt\n:\n\n\nbreak\n\n\nexcept\n \nIOError\n:\n\n\nprint\n \nError\n\n\n\n\n\n\n\n\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n\n\n\nsudo python grove_moisture_sensor.py\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n202000089_PCBA-Grove Moisture sensor V1.3_schemic file", 
            "title": "Grove-Moisture Sensor"
        }, 
        {
            "location": "/Grove-Moisture_Sensor/#_1", 
            "text": "\u80fd\u591f\u901a\u8fc7\u571f\u58e4\u7535\u963b\u7387\uff0c\u6d4b\u91cf\u51fa\u7684\u571f\u58e4\u6c34\u5206\u542b\u91cf  \u65b9\u4fbf\u4f7f\u7528  2.0 cm X 6.0 cm \u7684grove \u6a21\u5757    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove_System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Moisture_Sensor/#_2", 
            "text": "\u9879\u76ee  \u4f7f\u7528\u73af\u5883  \u6700\u5c0f  \u6807\u51c6  \u6700\u5927  \u5355\u4f4d      \u7535\u538b  -  3.3  -  5  V    \u7535\u6d41  -  0  -  35  mA    \u8f93\u51fa\u6570\u503c  \u5728\u5e72\u71e5\u7684\u571f\u58e4\u4e2d \u5728\u6f6e\u6e7f\u7684\u571f\u58e4\u4e2d \u5728\u6c34\u4e2d  0 300 700  -  300 700 950  -", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Moisture_Sensor/#_3", 
            "text": "\u5e94\u7528\u5728\u690d\u7269\u56ed\u6797\u4e2d  \u6e7f\u5ea6\u68c0\u6d4b  \u6d53\u5ea6\u68c0\u6d4b", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Moisture_Sensor/#_4", 
            "text": "\u4f7f\u7528Arduino  \u8fd9\u662f\u53ef\u4ee5\u7528\u4e8e\u68c0\u6d4b\u571f\u58e4\u6c34\u5206\u7684moisture sensor\u7684\u4f7f\u7528\u8bf4\u660e\u3002 \u5f53\u68c0\u6d4b\u5230\u571f\u58e4\u6c34\u5206\u6d88\u5931\u65f6\uff0c\u4f20\u611f\u5668\u8f93\u51fa\u503c\u4f1a\u964d\u4f4e\u3002 \u60a8\u53ef\u4ee5\u89c2\u5bdf\u4f20\u611f\u5668\u8f93\u51fa\u7684\u7ed3\u679c\u77e5\u9053\u690d\u7269\u662f\u5426\u9700\u8981\u6c34\u3002 \u4e0b\u9762\u5c55\u793a\u8fd9\u4e2a\u4f20\u611f\u5668\u5728\u611f\u5e94\u571f\u58e4\u6c34\u5206\u65b9\u9762\u7684\u7b80\u5355\u5e94\u7528\u3002    \u4f7f\u75284\u9488\u7684Grove\u8fde\u63a5\u7ebf\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230  Grove - Base Shield  \u7684  A0  \u7684\u6a21\u62df\u7aef\u53e3\uff0c\uff0c\u7136\u540e\u5c06\u4f20\u611f\u5668\u63d2\u5165\u571f\u58e4\u6216\u653e\u7f6e\u5728\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u5730\u65b9\u3002    \u5c06Grove-Base Shield\u63d2\u5165Arduino Seeeduino\uff0c\u5e76\u901a\u8fc7USB\u6570\u636e\u7ebf\u5c06Arduino\u8fde\u63a5\u5230PC\u3002    \u786c\u4ef6\u5b89\u88c5\u5982\u4e0b\u56fe\u6240\u793a\uff1a    Note  \u8be5\u4f20\u611f\u5668\u4e0d\u4f1a\u56e0\u4e3a\u63a7\u5236\u7535\u8def\u4e0e\u6c34\u63a5\u89e6\u800c\u5931\u6548\uff0c\u4f46\u662f\u53ef\u80fd\u5bb9\u6613\u5728\u63a2\u9488\u4e4b\u95f4\u53d1\u751f\u7535\u89e3\u8150\u8680\uff0c\u56e0\u6b64\u4e0d\u9002\u5408\u4e00\u76f4\u7559\u5728\u6c34\u91cc\u6216\u5728\u5ba4\u5916\u4f7f\u7528\u3002    \u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684Arduino\u7f16\u8f91\u9875\u9762\u4e0a   // Test code for Grove - Moisture Sensor  int   sensorPin   =   A0 ;   // select the input pin for the potentiometer  int   sensorValue   =   0 ;   // variable to store the value coming from the sensor7  void   setup ()   { \n     // declare the ledPin as an OUTPUT: \n     Serial . begin ( 9600 );  }  void   loop ()   { \n     // read the value from the sensor: \n     sensorValue   =   analogRead ( sensorPin ); \n     Serial . print ( sensor =    ); \n     Serial . println ( sensorValue ); \n     delay ( 1000 );  }    \u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002    \u4f7f\u7528TI LaunchPad  \u7167\u987e\u4f60\u7684\u690d\u7269\uff08\u4f7f\u7528Moisture Sensor\uff09  \u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u4e2a\u5728\u571f\u58e4\u4e2d\u68c0\u6d4b\u6c34\u5206\u7684\u7b80\u5355\u5e94\u7528\u3002\u901a\u8fc7\u89c2\u5bdf\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u60a8\u53ef\u4ee5\u77e5\u9053\u690d\u7269\u662f\u5426\u9700\u8981\u6c34   /*    Moisture-Sensor    The following sketch demonstrates a simple application of sensing    the moisture of the soil. You can know whether a plant needs water    or not by observing the results that the sensor outputs.    The circuit:      * Moisture-Sensor attached to pin 24 (J6 plug on Grove Base BoosterPack)      * one side pin (either one) to ground      * the other side pin to +VCC      * LED anode (long leg) attached to RED_LED      * LED cathode (short leg) attached to ground    - NOTE:      This example code is in the public domain.      http://seeedstudio.com/wiki/Grove_-_Moisture_Sensor  */  #include   TM1637.h  /* Macro Define */  #define CLK 39               /* 4-digital display clock pin */  #define DIO 38               /* 4-digiral display data pin */  #define BLINK_LED RED_LED    /* blink led */  #define MOISTURE_PIN 24      /* pin of moisture sensor */  #define THRESHOLD_VALUE 300  /* threshold for watering the flowers */  #define ON HIGH              /* led on */  #define OFF LOW              /* led off */  #define _handle_led(x) digitalWrite(BLINK_LED, x)  /* handle led */  /* Global Varibles */  TM1637   tm1637 ( CLK ,   DIO );      /* 4-digital display object */  int   analog_value   =   0 ;         /* varible to store the value coming from rotary angle  sensor */  int8_t   bits [ 4 ]   =   { 0 };         /* array to store the single bits of the value */  /* the setup() method runs once, when the sketch starts */  void   setup ()   {  /* Initialize 4-digital display */ \n     tm1637 . init (); \n     tm1637 . set ( BRIGHT_TYPICAL );  /* declare the red_led pin as an OUTPUT */ \n     pinMode ( BLINK_LED ,   OUTPUT );  }  /* the loop() method runs over and over again */  void   loop ()   { \n     analog_value   =   analogRead ( MOISTURE_PIN );   /* read the value from the sensor */  /* if the value is smaller than threshold, turn on led */ \n     if ( analog_value     THRESHOLD_VALUE )   { \n         _handle_led ( ON ); \n     }   else   { \n         _handle_led ( OFF ); \n     } \n     memset ( bits ,   0 ,   4 );   /* reset array when we use it */ \n     for ( int   i   =   3 ;   i   =   0 ;   i -- )   {  /* get single bits of the analog value */ \n         bits [ i ]   =   analog_value   %   10 ; \n         analog_value   =   analog_value   /   10 ; \n         tm1637 . display ( i ,   bits [ i ]);   /* display by 4-digital display */ \n     } \n     delay ( 200 );  }   \u4f7f\u7528 Raspberry Pi \n1. \u4f60\u5e94\u8be5\u51c6\u5907\u4e00\u4e2aRaspberry Pi\u548c\u4e00\u4e2agrove pi\u6216grove pi +\n2. \u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002\n3. \u786c\u4ef6\u8fde\u63a5\n- \u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165grove pi\u7684  A0  \u7aef\u53e3\u3002\n4. \u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55  cd yourpath/GrovePi/Software/Python/  \u627e\u5230\u8fd9\u884c\u4ee3\u7801  nano   grove_moisture_sensor . py   #  Ctrl+x  to exit #  import   time  import   grovepi  # Connect the Grove Moisture Sensor to analog port A0  # SIG,NC,VCC,GND  sensor   =   0  while   True :  try :  print   grovepi . analogRead ( sensor )  time . sleep ( . 5 )  except   KeyboardInterrupt :  break  except   IOError :  print   Error    \u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b   sudo python grove_moisture_sensor.py", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Moisture_Sensor/#_5", 
            "text": "202000089_PCBA-Grove Moisture sensor V1.3_schemic file", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Touch_Sensor/", 
            "text": "Grove - Touch Sensor \u53ef\u4ee5\u611f\u53d7\u5230\u4f60\u5728\u629a\u6478\u8fc7\u7a0b\u4e2d\u7684\u538b\u529b\u3002 \u5f53\u624b\u6307\u9760\u8fd1\u65f6\uff0c\u5b83\u4e5f\u53ef\u4ee5\u68c0\u6d4b\u7535\u5bb9\u7684\u53d8\u5316\u3002 \u8fd9\u610f\u5473\u7740\u65e0\u8bba\u60a8\u7684\u624b\u6307\u662f\u76f4\u63a5\u89e6\u6478\u8fd8\u662f\u53ea\u662f\u9760\u8fd1\uff0cGrove - Touch Sensor \u4e5f\u4f1a\u8f93\u51fa\u9ad8\u7535\u5e73\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\uff1a2.0 - 5.5V\n\n\n\u5de5\u4f5c\u7535\u6d41\uff08Vcc = 3V\uff09\uff1a1.5 - 3.0\u03bcA\n\n\n\u5de5\u4f5c\u7535\u6d41\uff08VDD = 3V\uff09\uff1a3.5 - 7.0\u03bcA\n\n\n\u8f93\u51fa\u54cd\u5e94\u65f6\u95f4\uff1a60 - 220mS\n\n\n\u4f7f\u7528\u7684\u82af\u7247\uff1aTTP223-BA6\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u9009\u9879\u529f\u80fd\n\n\n\n\n\n\n\n\nAHLB\n\n\nTOG\n\n\nLPMB\n\n\nMOTB\n\n\nSLRFTB\n\n\nRST\n\n\nQ\n\n\nOPDO\n\n\n\n\n\n\n\n\n\n\n\u8f93\u51fa\u6709\u6548\u9ad8/\u4f4e\n\n\n\u5207\u6362\u6a21\u5f0f\n\n\n\u7535\u6e90\u6a21\u5f0f\n\n\nMax. On Time\n\n\n\u53d6\u6837\u65f6\u95f4\u957f\u77ed\n\n\n\u590d\u4f4d\u5f15\u811a\n\n\nCMOS\u8f93\u51fa\n\n\nOpen Drain\u6a21\u5f0f\n\n\n\n\n\n\nV\n\n\nV\n\n\n0\n\n\n1\n\n\n1\n\n\nX\n\n\nV\n\n\nX\n\n\n\n\n\n\n\u6709\u6548\u9ad8\n\n\n\u4e0d\u80fd\n\n\nLOW\n\n\nInfinite\n\n\n1.6\u6beb\u79d2\n\n\nN/A\n\n\nPresent\n\n\nN/A\n\n\n\n\n\n\n\n\n\u793a\u8303\n\n\n\u4f7f\u7528 Arduino\n\n\n\n\u6b64\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u6253\u5f00/\u5173\u95edLED\u3002\n\n\n\u6f14\u793a\u4ee3\u7801:\n\n\nconst int TouchPin=9;\nconst int ledPin=12;\n\nvoid setup() {\n    pinMode(TouchPin, INPUT);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorValue = digitalRead(TouchPin);\n    if(sensorValue==1)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n}\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n\n\n\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a raspberry pi \u548c\u4e00\u4e2a grovepi \u6216 grovepi +\u3002\n\n\n\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n- \u4f7f\u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165 Grovepi \u63d2\u5ea7 \nD4\n \u7aef\u53e3\u3002\n\n\n\n\n\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a\n\n\n\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\n\u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\n\n\n\n    nano grove_touch_sensor.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Touch Sensor to digital port D4\n    # SIG,NC,VCC,GND\n    touch_sensor = 4\n\n    grovepi.pinMode(touch_sensor,\nINPUT\n)\n\n    while True:\n        try:\n            print grovepi.digitalRead(touch_sensor)\n            time.sleep(.5)\n\n        except IOError:\n            print \nError\n\n\n\n\n5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n\n    sudo python grove_touch_sensor.py\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nEagle Files\n\n\nTTP223pdf", 
            "title": "Grove-Touch Sensor"
        }, 
        {
            "location": "/Grove-Touch_Sensor/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b\uff1a2.0 - 5.5V  \u5de5\u4f5c\u7535\u6d41\uff08Vcc = 3V\uff09\uff1a1.5 - 3.0\u03bcA  \u5de5\u4f5c\u7535\u6d41\uff08VDD = 3V\uff09\uff1a3.5 - 7.0\u03bcA  \u8f93\u51fa\u54cd\u5e94\u65f6\u95f4\uff1a60 - 220mS  \u4f7f\u7528\u7684\u82af\u7247\uff1aTTP223-BA6    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Touch_Sensor/#platforms-supported", 
            "text": "\u9009\u9879\u529f\u80fd     AHLB  TOG  LPMB  MOTB  SLRFTB  RST  Q  OPDO      \u8f93\u51fa\u6709\u6548\u9ad8/\u4f4e  \u5207\u6362\u6a21\u5f0f  \u7535\u6e90\u6a21\u5f0f  Max. On Time  \u53d6\u6837\u65f6\u95f4\u957f\u77ed  \u590d\u4f4d\u5f15\u811a  CMOS\u8f93\u51fa  Open Drain\u6a21\u5f0f    V  V  0  1  1  X  V  X    \u6709\u6548\u9ad8  \u4e0d\u80fd  LOW  Infinite  1.6\u6beb\u79d2  N/A  Present  N/A", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Touch_Sensor/#_2", 
            "text": "", 
            "title": "\u793a\u8303"
        }, 
        {
            "location": "/Grove-Touch_Sensor/#arduino", 
            "text": "\u6b64\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u6253\u5f00/\u5173\u95edLED\u3002  \u6f14\u793a\u4ee3\u7801:  const int TouchPin=9;\nconst int ledPin=12;\n\nvoid setup() {\n    pinMode(TouchPin, INPUT);\n    pinMode(ledPin,OUTPUT);\n}\n\nvoid loop() {\n    int sensorValue = digitalRead(TouchPin);\n    if(sensorValue==1)\n    {\n        digitalWrite(ledPin,HIGH);\n    }\n    else\n    {\n        digitalWrite(ledPin,LOW);\n    }\n}", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Touch_Sensor/#raspberry-pi", 
            "text": "\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a raspberry pi \u548c\u4e00\u4e2a grovepi \u6216 grovepi +\u3002  \u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa  \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002  \u786c\u4ef6\u8fde\u63a5   - \u4f7f\u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165 Grovepi \u63d2\u5ea7  D4  \u7aef\u53e3\u3002   \u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a       cd yourpath/GrovePi/Software/Python/   \u627e\u5230\u8fd9\u884c\u4ee3\u7801       nano grove_touch_sensor.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Touch Sensor to digital port D4\n    # SIG,NC,VCC,GND\n    touch_sensor = 4\n\n    grovepi.pinMode(touch_sensor, INPUT )\n\n    while True:\n        try:\n            print grovepi.digitalRead(touch_sensor)\n            time.sleep(.5)\n\n        except IOError:\n            print  Error   5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b      sudo python grove_touch_sensor.py", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-Touch_Sensor/#_3", 
            "text": "Eagle Files  TTP223pdf", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/", 
            "text": "Grove-Q Touch Sensor \u662f\u9ad8\u7075\u654f\u5ea6\u548c\u9ad8\u6297\u566a\u58f0\u89e6\u6478\u8f93\u5165\u8bbe\u5907\u3002 \u5b83\u57fa\u4e8e Atmel AT42QT1070 \u82af\u7247\u901a\u8fc7\u6269\u9891\u7684\u65b9\u5f0f\u8c03\u5236\u5904\u7406\u4fe1\u53f7\uff0c\u80fd\u591f\u6291\u5236\u5916\u90e8\u566a\u58f0\u7684\u5f71\u54cd\uff0c\u5e76\u6291\u5236 RF \u4fe1\u53f7\u7684\u53d1\u5c04\u3002 QT1070 \u91c7\u7528\u53cc\u8109\u51b2\u91c7\u96c6\u4fe1\u53f7\u7684\u65b9\u5f0f\u3002 \u8fd9\u7ed9\u5b83\u63d0\u4f9b\u4e86\u66f4\u5f3a\u7684\u6297\u566a\u58f0\u7684\u80fd\u529b\uff0c\u5e76\u4e14\u80fd\u591f\u4f7f\u7528\u5355\u4e2a\u5f15\u811a\u63a5\u6536\u89e6\u6478\u611f\u5e94\u4fe1\u53f7\uff0c\u51cf\u5c11\u4e86\u5bf9\u5916\u90e8\u91c7\u6837\u7535\u5bb9\u7684\u9700\u6c42\uff0c\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\uff1a3\u301c5.5V\n\n\n\u5de5\u4f5c\u7535\u6d41\u5728 3.3V\u65f6\uff1a1mA\n\n\n7\u952e\u89e6\u6478\uff1akey0\uff0ckey1\uff0ckey2\u4f4d\u4e8e Grove PCB \u5e95\u90e8\n\n\n\u901a\u8baf\u534f\u8bae\uff1aI2C\n\n\nI2C\u5730\u5740\uff1a0x1B\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u2460 - \u677f\u4e0a\u89e6\u6478\u952e0\n\n\n\u2461 - \u677f\u4e0a\u89e6\u6478\u952e1\n\n\n\u2462 - \u677f\u4e0a\u89e6\u6478\u952e2\n\n\n\u2463 - \u89e6\u6478\u952e key0\u301ckey6 \u5f00\u53d1\n\n\n\n\n\u4e3b\u8981\u7535\u5bb9 Cx \u7684\u63a8\u8350\u8303\u56f4\u4e3a1 pF - 30 pF\u3002 \u8f83\u5927\u7684 Cx \u503c\u4f1a\u964d\u4f4e\u7075\u654f\u5ea6\u3002\n\n\n\n\n\u2464 - GND\n\n\n\u2465 - Grove \u754c\u9762\n\n\n\u7528\u6cd5\n\n\n\u6f14\u793a\uff1a\u8c01\u89e6\u52a8\u6211\u7684\u8354\u679d\uff1f\n\n\n\u4f60\u6709\u6ca1\u6709\u542c\u8bf4\u8fc7\u8354\u679d\uff1f \u662f\u7684\uff0c\u8fd9\u662f\u4e2d\u56fd\u5357\u65b9\u975e\u5e38\u6709\u540d\u7684\u6c34\u679c\u3002 \u5982\u679c\u4f60\u66fe\u5c1d\u8fc7\uff0c\u4f1a\u7231\u4e0a\u5b83\u3002\n\n\n\u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u6211\u4eec\u7684\u6f14\u793a\u3002 \u5f53\u60a8\u78b0\u89e6\u51fb\u76d8\uff08\u8354\u679d\uff09\u65f6\uff0c LED \u5c06\u4f1a\u4eae\u8d77\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u5c06 Grove-Q Touch Sensor \u7684 \nI2C\n \u8fde\u63a5\u5230 Grove Base Shield \u4e0a\u7684 \nI2C\n \u7aef\u53e3\u3002\n\n\n\u5c06 Grove-LED \u8fde\u63a5\u5230 Grove Base Shield \u4e0a\u7684 \nD3\n \uff08\u6570\u5b57\u5f15\u811a 3 \uff09\u3002\n\n\n\u5c06 Grove-Q Touch \u4f20\u611f\u5668\u4e0a\u7684 \nKey0\n \uff08\u6807\u8bb0\u4e3a K0 \uff09\u8fde\u63a5\u5230\u8354\u679d\uff08\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u5728\u6d4b\u8bd5\u65f6\u7528\u624b\u6307\u89e6\u6478\u8fde\u63a5\u7ebf\u7684\u5f00\u53e3\u7aef\uff09\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\u90e8\u5206\n\n\n\n\n\u4e0b\u8f7d \nQ Touch \u5e93\n.\n\n\n\u5c06\u5176\u89e3\u538b\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u5939\u4e2d\uff0c\u4f8b\u5982\u8def\u5f84\u53ef\u4ee5\u662f..  arduino-1.0.5  libraries\u3002\n\n\n\n\n\u4f8b\u4e00\n\n\na. \u901a\u8fc7 Arduino \u83dc\u5355 \n\u201cFile\uff08\u6587\u4ef6\uff09 - \nexsample\uff08\u793a\u4f8b\uff09 - \n Seeed_QTouch-master - \n Grove_QTouch_demoCode_v_1_0\u201d\n  \u6253\u5f00\u793a\u4f8b\u3002\n\n\nb. \u4e0a\u4f20\u4ee3\u7801 \u8bf7\u6ce8\u610f\uff0c\u60a8\u5e94\u8be5\u9009\u62e9\u6b63\u786e\u7684\u7535\u8def\u677f\u7c7b\u578b\u548c COM \u7aef\u53e3\u3002\n\n\nC. \u89e6\u6478\u8354\u679d\u65f6\uff0c LED \u4f1a\u53d1\u5149\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\u4f8b\u4e8c\n\n\na. \u901a\u8fc7 Arduino \u83dc\u5355 \n\u201cFile\uff08\u6587\u4ef6\uff09 - \nexsample\uff08\u793a\u4f8b\uff09- \n Seeed_QTouch-master - \n isTouch\u201d\n  \u6253\u5f00\u793a\u4f8b\u3002\n\n\nb. \u4e0a\u4f20\u4ee3\u7801\n\n\nc. \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u3002\n\n\nd. \u89e6\u6478\u8354\u679d\u540e\u653e\u5f00; \u4e32\u884c\u76d1\u89c6\u5668\u5c06\u663e\u793a\u89e6\u6478\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u5982\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u6240\u793a\n\n\n\n\n\u60a8\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u9762\u7684\nCodebender\n\u5c0f\u90e8\u4ef6\u6765\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\n\n\n\u8bf7\u6253\u5f00\u4e0b\u9762\u7684\u4e32\u884c\u76d1\u89c6\u5668\u67e5\u770b\u6570\u636e\u3002\n\n\n\n\n\n\u4f8b\u4e09\n\n\na. \u901a\u8fc7 Arduino \u83dc\u5355\u201c\u6587\u4ef6 - \n\u793a\u4f8b - \n Seeed_QTouch-master - \n getTouchNumber\u201d \u6253\u5f00\u793a\u4f8b\u3002\n\n\nb. \u4e0a\u4f20\u4ee3\u7801\n\n\nc. \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u3002\n\n\nd. \u89e6\u6478\u8354\u679d\u65f6\uff0c\u4e32\u884c\u76d1\u89c6\u5668\u5c06\u663e\u793a\u5df2\u8fde\u63a5\u7684\u5bc6\u94a5\uff0c\u5982\u4e0b\u9762\u7684\u622a\u56fe\u6240\u793a\u3002 \u53ef\u4ee5\u5c06\u6c34\u679c\u8fde\u63a5\u5230\u4efb\u4f55\u5176\u4ed6\u952e\u5e76\u8fdb\u884c\u9a8c\u8bc1\u3002\n\n\n\n\n\u60a8\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u9762\u7684\nCodebender\n\u5c0f\u90e8\u4ef6\u6765\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\n\u8bf7\u6253\u5f00\u4e0b\u9762\u7684\u4e32\u884c\u76d1\u89c6\u5668\u67e5\u770b\u6570\u636e\u3002\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nQ Touch Library\n\n\nSchematic pdf\n\n\nEagle file\n\n\nAT42QT107 datasheet\n\n\nHow to detect finger touch?", 
            "title": "Grove-Q Touch Sensor"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b\uff1a3\u301c5.5V  \u5de5\u4f5c\u7535\u6d41\u5728 3.3V\u65f6\uff1a1mA  7\u952e\u89e6\u6478\uff1akey0\uff0ckey1\uff0ckey2\u4f4d\u4e8e Grove PCB \u5e95\u90e8  \u901a\u8baf\u534f\u8bae\uff1aI2C  I2C\u5730\u5740\uff1a0x1B    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_2", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_3", 
            "text": "\u2460 - \u677f\u4e0a\u89e6\u6478\u952e0  \u2461 - \u677f\u4e0a\u89e6\u6478\u952e1  \u2462 - \u677f\u4e0a\u89e6\u6478\u952e2  \u2463 - \u89e6\u6478\u952e key0\u301ckey6 \u5f00\u53d1   \u4e3b\u8981\u7535\u5bb9 Cx \u7684\u63a8\u8350\u8303\u56f4\u4e3a1 pF - 30 pF\u3002 \u8f83\u5927\u7684 Cx \u503c\u4f1a\u964d\u4f4e\u7075\u654f\u5ea6\u3002   \u2464 - GND  \u2465 - Grove \u754c\u9762", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_4", 
            "text": "\u6f14\u793a\uff1a\u8c01\u89e6\u52a8\u6211\u7684\u8354\u679d\uff1f  \u4f60\u6709\u6ca1\u6709\u542c\u8bf4\u8fc7\u8354\u679d\uff1f \u662f\u7684\uff0c\u8fd9\u662f\u4e2d\u56fd\u5357\u65b9\u975e\u5e38\u6709\u540d\u7684\u6c34\u679c\u3002 \u5982\u679c\u4f60\u66fe\u5c1d\u8fc7\uff0c\u4f1a\u7231\u4e0a\u5b83\u3002  \u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u6211\u4eec\u7684\u6f14\u793a\u3002 \u5f53\u60a8\u78b0\u89e6\u51fb\u76d8\uff08\u8354\u679d\uff09\u65f6\uff0c LED \u5c06\u4f1a\u4eae\u8d77\u3002", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_5", 
            "text": "\u5c06 Grove-Q Touch Sensor \u7684  I2C  \u8fde\u63a5\u5230 Grove Base Shield \u4e0a\u7684  I2C  \u7aef\u53e3\u3002  \u5c06 Grove-LED \u8fde\u63a5\u5230 Grove Base Shield \u4e0a\u7684  D3  \uff08\u6570\u5b57\u5f15\u811a 3 \uff09\u3002  \u5c06 Grove-Q Touch \u4f20\u611f\u5668\u4e0a\u7684  Key0  \uff08\u6807\u8bb0\u4e3a K0 \uff09\u8fde\u63a5\u5230\u8354\u679d\uff08\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u5728\u6d4b\u8bd5\u65f6\u7528\u624b\u6307\u89e6\u6478\u8fde\u63a5\u7ebf\u7684\u5f00\u53e3\u7aef\uff09\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_6", 
            "text": "\u4e0b\u8f7d  Q Touch \u5e93 .  \u5c06\u5176\u89e3\u538b\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u5939\u4e2d\uff0c\u4f8b\u5982\u8def\u5f84\u53ef\u4ee5\u662f..  arduino-1.0.5  libraries\u3002", 
            "title": "\u8f6f\u4ef6\u90e8\u5206"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_7", 
            "text": "a. \u901a\u8fc7 Arduino \u83dc\u5355  \u201cFile\uff08\u6587\u4ef6\uff09 -  exsample\uff08\u793a\u4f8b\uff09 -   Seeed_QTouch-master -   Grove_QTouch_demoCode_v_1_0\u201d   \u6253\u5f00\u793a\u4f8b\u3002  b. \u4e0a\u4f20\u4ee3\u7801 \u8bf7\u6ce8\u610f\uff0c\u60a8\u5e94\u8be5\u9009\u62e9\u6b63\u786e\u7684\u7535\u8def\u677f\u7c7b\u578b\u548c COM \u7aef\u53e3\u3002  C. \u89e6\u6478\u8354\u679d\u65f6\uff0c LED \u4f1a\u53d1\u5149\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002", 
            "title": "\u4f8b\u4e00"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_8", 
            "text": "a. \u901a\u8fc7 Arduino \u83dc\u5355  \u201cFile\uff08\u6587\u4ef6\uff09 -  exsample\uff08\u793a\u4f8b\uff09-   Seeed_QTouch-master -   isTouch\u201d   \u6253\u5f00\u793a\u4f8b\u3002  b. \u4e0a\u4f20\u4ee3\u7801  c. \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u3002  d. \u89e6\u6478\u8354\u679d\u540e\u653e\u5f00; \u4e32\u884c\u76d1\u89c6\u5668\u5c06\u663e\u793a\u89e6\u6478\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u5982\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u6240\u793a   \u60a8\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u9762\u7684 Codebender \u5c0f\u90e8\u4ef6\u6765\u4e0a\u4f20\u4ee3\u7801\u3002   \u8bf7\u6253\u5f00\u4e0b\u9762\u7684\u4e32\u884c\u76d1\u89c6\u5668\u67e5\u770b\u6570\u636e\u3002", 
            "title": "\u4f8b\u4e8c"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_9", 
            "text": "a. \u901a\u8fc7 Arduino \u83dc\u5355\u201c\u6587\u4ef6 -  \u793a\u4f8b -   Seeed_QTouch-master -   getTouchNumber\u201d \u6253\u5f00\u793a\u4f8b\u3002  b. \u4e0a\u4f20\u4ee3\u7801  c. \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u3002  d. \u89e6\u6478\u8354\u679d\u65f6\uff0c\u4e32\u884c\u76d1\u89c6\u5668\u5c06\u663e\u793a\u5df2\u8fde\u63a5\u7684\u5bc6\u94a5\uff0c\u5982\u4e0b\u9762\u7684\u622a\u56fe\u6240\u793a\u3002 \u53ef\u4ee5\u5c06\u6c34\u679c\u8fde\u63a5\u5230\u4efb\u4f55\u5176\u4ed6\u952e\u5e76\u8fdb\u884c\u9a8c\u8bc1\u3002   \u60a8\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u9762\u7684 Codebender \u5c0f\u90e8\u4ef6\u6765\u4e0a\u4f20\u4ee3\u7801\u3002  \u8bf7\u6253\u5f00\u4e0b\u9762\u7684\u4e32\u884c\u76d1\u89c6\u5668\u67e5\u770b\u6570\u636e\u3002", 
            "title": "\u4f8b\u4e09"
        }, 
        {
            "location": "/Grove-Q_Touch_Sensor/#_10", 
            "text": "Q Touch Library  Schematic pdf  Eagle file  AT42QT107 datasheet  How to detect finger touch?", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-I2C_Touch_Sensor/", 
            "text": "\u57fa\u4e8e FreeScale - MPR121 \u7684 I2C Touch Sensor \u4e0e Proximity Capacitive Touch Sensor \u6bd4\u8f83\u7c7b\u4f3c\u3002 \u5b83\u80fd\u591f\u68c0\u6d4b\u5230\u4eba\u624b\u6307\u7684\u89e6\u6478\u6216\u63a5\u8fd1\u3002 \u4f20\u611f\u5668\u5305\u62ec\u4e00\u4e2a\u89e6\u6478\u4f20\u611f\u5668\u63a7\u5236\u5668\u548c\u56db\u4e2a\u624b\u6307\u63a2\u6d4b\u5668\u3002 \u60a8\u53ef\u4ee5\u5c06\u89e6\u6478\u4f20\u611f\u5668\u63d2\u5165\u5230\u63a7\u5236\u5668\u7684\u5e95\u5ea7\uff0c\u5e76\u5f00\u59cb\u68c0\u6d4b\u89e6\u6478\u4fe1\u53f7\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c/\u8303\u56f4\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3~5.5V\n\n\n\n\n\n\n\u5f85\u673a\u6a21\u5f0f\u7535\u6d41\n\n\n2\u03bcA\n\n\n\n\n\n\n\u89e6\u6478\u4fe1\u53f7\u63a5\u6536\u901a\u9053\n\n\n12\uff08\u5305\u542b4\u4e2a\u89e6\u6478\u7684\u4fe1\u53f7\u901a\u9053\uff09\n\n\n\n\n\n\n\u6c9f\u901a\u534f\u8bae\n\n\nI2C\n\n\n\n\n\n\nI2C\u5730\u5740\n\n\n0x5A - 0x5D\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u670912\u4e2a\u7535\u6781\u5305\u62ec CH0-CH11\u3002 \u800c CH0-CH3 \u5c06\u8fde\u63a5\u5230 4 \u4e2a\u89e6\u6478\u611f\u5e94\u5668\u4e0a\u3002\n\n\nCH4-CH11 \u7535\u6781\u53ef\u4ee5\u7531\u7528\u6237\u6269\u5c55\u5b83\u7684\u529f\u80fd\u3002 \u5982\u679c\u4f60\u9700\u8981\u66f4\u591a\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u6269\u5145\u3002\n\n\n\u4f20\u611f\u5668\u4e0a\u7684\u89e6\u611f\u7ebf\u53ef\u4ee5\u901a\u8fc7\u5f2f\u66f2\u5b83\u6765\u51cf\u5c11\u5468\u56f4\u73af\u5883\u7684\u5f71\u54cd\u3002 \u5982\u679c\u9700\u8981\u66f4\u9ad8\u7684\u7075\u654f\u5ea6\uff0c\u5219\u53ef\u4ee5\u5207\u65ad\u9ed1\u8272\u7684\uff08\u63a5\u5730\uff09\u7ebf\u3002\n\n\n\u5982\u679c\u5ba2\u6237\u60f3\u8981\u4f7f\u7528 MPR121 \u7684\u4e2d\u65ad\u5f15\u811a\uff0c\u5219\u5fc5\u987b\u5c06 INT \u5f15\u811a\u5f15\u51fa\u3002\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\nGrove - \u5e2e\u52a9\n\n\n\u4ee5\u4e0b\u6587\u6863\u5e2e\u52a9\u7528\u6237\u5f00\u59cb\u4f7f\u7528Grove\u3002\n\n\n\n\nPreface - Getting Started\n\n\nto Grove\n\n\n\n\n\n\nNote\n\n\u7531\u4e8e\u6bcf\u4e2a\u7535\u6781\u9700\u8981\u5728\u4e0a\u7535\u671f\u95f4\u7531 MPR121 \u81ea\u52a8\u914d\u7f6e\uff0c\u5e76\u4e14\u89e6\u6478\u4f20\u611f\u5668\u63a7\u5236\u5668\u4e0a\u6ca1\u6709\u7535\u6e90\u590d\u4f4d\uff0c\u6bcf\u6b21\u63d2\u5165\u6216\u79fb\u9664\u89e6\u53d1\u5668\u65f6\uff0c\u90fd\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e Seeeduino \u7684\u7535\u6e90\u3002\n\n\n\n\n\u8fd9\u4e2a\u4f20\u611f\u5668\u4e5f\u53ef\u4ee5\u611f\u89c9\u5230\u4eba\u624b\u6307\u4e4b\u95f4\u5b58\u5728\u7684\u4e1c\u897f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u4e0d\u9700\u8981\u7528\u624b\u6307\u5207\u5b9e\u7684\u53bb\u89e6\u6478\u3002\n\n\n\n\n\n\n\u4f7f\u7528\u7ea6 3 \u6beb\u7c73\u539a\u7684\u7eb8\u677f\uff0c\u4f20\u611f\u5668\u53ef\u4ee5\u611f\u53d7\u5230\u624b\u6307\u7684\u89e6\u611f\uff0c\u4f7f\u7528\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u80fd\u591f\u5b8c\u6210\u5404\u79cd\u6709\u8da3\u7684\u5e94\u7528\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nI2C Touch Sensor Library\n\n\nI2C Touch Sensor eagle files(v1.1).zip\n\n\nI2C Touch Sensor PDF\n\n\nHow to detect finger touch?\n\n\nI2C Touch Sensor Datasheet", 
            "title": "Grove-I2C Touch Sensor"
        }, 
        {
            "location": "/Grove-I2C_Touch_Sensor/#_1", 
            "text": "\u53c2\u6570  \u503c/\u8303\u56f4      \u5de5\u4f5c\u7535\u538b  3~5.5V    \u5f85\u673a\u6a21\u5f0f\u7535\u6d41  2\u03bcA    \u89e6\u6478\u4fe1\u53f7\u63a5\u6536\u901a\u9053  12\uff08\u5305\u542b4\u4e2a\u89e6\u6478\u7684\u4fe1\u53f7\u901a\u9053\uff09    \u6c9f\u901a\u534f\u8bae  I2C    I2C\u5730\u5740  0x5A - 0x5D      Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-I2C_Touch_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-I2C_Touch_Sensor/#_2", 
            "text": "\u670912\u4e2a\u7535\u6781\u5305\u62ec CH0-CH11\u3002 \u800c CH0-CH3 \u5c06\u8fde\u63a5\u5230 4 \u4e2a\u89e6\u6478\u611f\u5e94\u5668\u4e0a\u3002  CH4-CH11 \u7535\u6781\u53ef\u4ee5\u7531\u7528\u6237\u6269\u5c55\u5b83\u7684\u529f\u80fd\u3002 \u5982\u679c\u4f60\u9700\u8981\u66f4\u591a\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u6269\u5145\u3002  \u4f20\u611f\u5668\u4e0a\u7684\u89e6\u611f\u7ebf\u53ef\u4ee5\u901a\u8fc7\u5f2f\u66f2\u5b83\u6765\u51cf\u5c11\u5468\u56f4\u73af\u5883\u7684\u5f71\u54cd\u3002 \u5982\u679c\u9700\u8981\u66f4\u9ad8\u7684\u7075\u654f\u5ea6\uff0c\u5219\u53ef\u4ee5\u5207\u65ad\u9ed1\u8272\u7684\uff08\u63a5\u5730\uff09\u7ebf\u3002  \u5982\u679c\u5ba2\u6237\u60f3\u8981\u4f7f\u7528 MPR121 \u7684\u4e2d\u65ad\u5f15\u811a\uff0c\u5219\u5fc5\u987b\u5c06 INT \u5f15\u811a\u5f15\u51fa\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-I2C_Touch_Sensor/#_3", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-I2C_Touch_Sensor/#grove-", 
            "text": "\u4ee5\u4e0b\u6587\u6863\u5e2e\u52a9\u7528\u6237\u5f00\u59cb\u4f7f\u7528Grove\u3002   Preface - Getting Started  to Grove    Note \n\u7531\u4e8e\u6bcf\u4e2a\u7535\u6781\u9700\u8981\u5728\u4e0a\u7535\u671f\u95f4\u7531 MPR121 \u81ea\u52a8\u914d\u7f6e\uff0c\u5e76\u4e14\u89e6\u6478\u4f20\u611f\u5668\u63a7\u5236\u5668\u4e0a\u6ca1\u6709\u7535\u6e90\u590d\u4f4d\uff0c\u6bcf\u6b21\u63d2\u5165\u6216\u79fb\u9664\u89e6\u53d1\u5668\u65f6\uff0c\u90fd\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e Seeeduino \u7684\u7535\u6e90\u3002  \u8fd9\u4e2a\u4f20\u611f\u5668\u4e5f\u53ef\u4ee5\u611f\u89c9\u5230\u4eba\u624b\u6307\u4e4b\u95f4\u5b58\u5728\u7684\u4e1c\u897f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u4e0d\u9700\u8981\u7528\u624b\u6307\u5207\u5b9e\u7684\u53bb\u89e6\u6478\u3002    \u4f7f\u7528\u7ea6 3 \u6beb\u7c73\u539a\u7684\u7eb8\u677f\uff0c\u4f20\u611f\u5668\u53ef\u4ee5\u611f\u53d7\u5230\u624b\u6307\u7684\u89e6\u611f\uff0c\u4f7f\u7528\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u80fd\u591f\u5b8c\u6210\u5404\u79cd\u6709\u8da3\u7684\u5e94\u7528\u3002", 
            "title": "Grove - \u5e2e\u52a9"
        }, 
        {
            "location": "/Grove-I2C_Touch_Sensor/#_4", 
            "text": "I2C Touch Sensor Library  I2C Touch Sensor eagle files(v1.1).zip  I2C Touch Sensor PDF  How to detect finger touch?  I2C Touch Sensor Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Gesture_v1.0/", 
            "text": "Grove - Gesture\u4e0a\u7684\u4f20\u611f\u5668\u662f\u5c06\u624b\u52bf\u8bc6\u522b\u529f\u80fd\u4e0e\u901a\u7528 I2C \u63a5\u53e3\u96c6\u6210\u5230\u5355\u4e2a\u82af\u7247\u4e2d\u7684 PAJ7620U2 \u3002 \u5b83\u53ef\u4ee5\u8bc6\u522b 9 \u79cd\u57fa\u672c\u624b\u52bf\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7 I2C \u603b\u7ebf\u7b80\u5355\u5730\u8bbf\u95ee\u8fd9\u4e9b\u624b\u52bf\u4fe1\u606f\u3002\n\n\n\u5e94\u7528\uff1a\u60a8\u53ef\u4ee5\u4f7f\u7528\u624b\u52bf\u4f5c\u4e3a\u8f93\u5165\u8bbe\u5907\u6765\u63a7\u5236\u53e6\u4e00\u4e2a Grove \u6267\u884c\u5355\u5143 \uff0c\u6216\u8005\u8ba1\u7b97\u673a\uff0c\u624b\u673a\uff0c\u667a\u80fd\u8f66\uff0c\u673a\u5668\u4eba\u7b49\uff0c\u53ea\u9700\u8f7b\u8f7b\u4e00\u6309\u5373\u53ef\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5185\u7f6e\u68c0\u6d4b\n\n\n\u4e3b\u677f\u652f\u6301\uff1aArduino UNO / Seeeduino / Arduino Mega2560\n\n\n9 \u79cd\u57fa\u672c\u624b\u52bf\n\u00a0 - \u5411\u4e0a\n\u00a0 - \u5411\u4e0b\n\u00a0 - \u5411\u5de6\n\u00a0 - \u5411\u53f3\n\u00a0 - \u5411\u524d\n\u00a0 - \u5411\u540e\n\u00a0 - \u987a\u65f6\u9488\n\u00a0 - \u9006\u65f6\u9488\n\u00a0 - \u6325\u624b\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\u540d\u79f0\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u4f20\u611f\u5668\n\n\nPAJ7620U2\n\n\n\n\n\n\n\u7535\u6e90\n\n\n5V\n\n\n\n\n\n\n\u73af\u5883\u5149\u5f3a\n\n\n 100k Lux\n\n\n\n\n\n\n\u6b63\u5e38\u6a21\u5f0f\u4e0b\u7684\u624b\u52bf\u901f\u5ea6\n\n\n60\u00b0/s \u5230 600\u00b0/s\n\n\n\n\n\n\n\u6e38\u620f\u6a21\u5f0f\u4e0b\u7684\u624b\u52bf\u901f\u5ea6\n\n\n60\u00b0/s \u5230 1200\u00b0/s\n\n\n\n\n\n\n\u63a5\u53e3\u7c7b\u578b IIC \u63a5\u53e3\n\n\n\u53d6\u51b3\u4e8e400 kbit/s\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-40\u00b0C\u5230 +85\u00b0C\n\n\n\n\n\n\n\u5916\u5f62\u5c3a\u5bf8\n\n\n20 x20mm\n\n\n\n\n\n\n\u68c0\u6d4b\u8303\u56f4\n\n\n5-10cm\n\n\n\n\n\n\n\n\n\u4f7f\u7528 Arduino/Seeeduino\n\n\n\u63a8\u8350\u9605\u8bfb\u5165\u95e8\n- \n\u4e0b\u8f7d Arduino \u5e76\u5b89\u88c5 Arduino \u9a71\u52a8\u7a0b\u5e8f\n\n- \nSeeed\u5165\u95e8\u6307\u5bfc\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\nGrove \u4ea7\u54c1\u5177\u6709\u4e00\u79cd\u7ecf\u6d4e\u6027\u7684\u7cfb\u7edf\uff0c\u5e76\u4e14\u90fd\u5177\u6709\u76f8\u540c\u7684\u8fde\u63a5\u5668\uff0c\u53ef\u4ee5\u8fde\u63a5\nBase Shield\n\u3002 \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684 \nI2C\n \u7aef\u53e3\uff0c\u5982\u679c\u6ca1\u6709 Base Shield \uff0c\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8df3\u7ebf\u5c06 Grove-Gesture \u76f4\u63a5\u8fde\u63a5\u5230 Arduino \u3002\n\n\n\n\n\n\n\n\nArduino UNO\n\n\nBase Shield\n\n\nGrove - Gesture\n\n\n\n\n\n\n\n\n\n\n5V\n\n\nI2C \u7aef\u53e3\n\n\nVCC\n\n\n\n\n\n\nGND\n\n\nI2C \u7aef\u53e3\n\n\nGND\n\n\n\n\n\n\nSDA\n\n\nI2C \u7aef\u53e3\n\n\nSDA\n\n\n\n\n\n\nSCL\n\n\nI2C \u7aef\u53e3\n\n\nSCL\n\n\n\n\n\n\nDigit 2\n\n\n\u672a\u8fde\u63a5\n\n\nINT (Reserved pad)\n\n\n\n\n\n\n\n\nINT\uff1a\u624b\u52bf\u68c0\u6d4b\u4e2d\u65ad\u6807\u5fd7\u63a9\u7801\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u8df3\u7ebf\u5c06 INT PAD \u8fde\u63a5\u5230 Arduino \u7684 \nDigit 2\n \u3002\n\n\n\u4e0b\u56fe\u663e\u793a\u4e86\u5982\u4f55\u5c06 Grove - Gesture \u8fde\u63a5\u5230 Base shield \u7684 \nI2C\n \u7aef\u53e3\u4e0a\n\n\n\n\n\u7136\u540e\u5c06 Base shield \u8fde\u63a5\u5230 Arduino UNO \u4e0a\n\n\n\n\nGesture \u5e93\n\n\n\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Seeeduino / Arduino \uff0c\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u8bbe\u7f6e\u5e93\u5e76\u4ecb\u7ecd\u4e00\u4e9b\u529f\u80fd\u3002\n\n\n\u521b\u5efa\n\n\n\n\n\u4ece Gesture_PAJ7620 github \u9875\u9762\u5c06\u5e93\u4ee3\u7801\u4f5c\u4e3azip\u6587\u4ef6\u4e0b\u8f7d\n.\n\n\n\u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u89e3\u538b\u7f29\u5230 ... / arduino / libraries \u4e2d\u3002\n\n\n\u91cd\u547d\u540d\u89e3\u538b\u7f29\u7684\u6587\u4ef6\u5939 \"Gesture\"(\u6216:\"Gesture_PAJ7620\")\n\n\n\u542f\u52a8 Arduino IDE\uff08\u5982\u679c\u6253\u5f00\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8\uff09\u3002\n\n\n\n\n\u7b80\u5355\u6f14\u793a\n\n\n\u4ee5\u4e0b\u7b80\u5355\u7684\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5e94\u7528\uff1a\u5f53\u60a8\u5411\u4e0a\u79fb\u52a8\u65f6\uff0c\u7ea2\u8272\u7684LED\u5c06\u88ab\u6253\u5f00\uff0c\u53cd\u4e4b\u7ea2\u8272\u7684LED\u5c06\u88ab\u5173\u95ed\u3002\n\n\n#include\n \nWire.h\n\n\n#include\n \npaj7620.h\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n  \npaj7620Init\n();\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nuint8_t\n \ndata\n \n=\n \n0\n;\n  \n// Read Bank_0_Reg_0x43/0x44 for gesture result.\n\n\n    \npaj7620ReadReg\n(\n0x43\n,\n \n1\n,\n \ndata\n);\n  \n// When different gestures be detected, the variable \ndata\n will be set to different values by paj7620ReadReg(0x43, 1, \ndata).\n\n\n    \nif\n \n(\ndata\n \n==\n \nGES_UP_FLAG\n)\n        \n// When up gesture be detected,the variable \ndata\n will be set to GES_UP_FLAG.\n\n        \ndigitalWrite\n(\n4\n,\n \nHIGH\n);\n      \n// turn the LED on (HIGH is the voltage level)\n\n    \nif\n \n(\ndata\n \n==\n \nGES_DOWN_FLAG\n)\n      \n// When down gesture be detected,the variable \ndata\n will be set to GES_DOWN_FLAG.\n\n        \ndigitalWrite\n(\n4\n,\n \nLOW\n);\n       \n// turn the LED off by making the voltage LOW\n\n\n\n\n\n\n\n\u529f\u80fd\u63cf\u8ff0\n\n\n\u8fd9\u4e9b\u662f\u5e93\u4e2d\u6700\u91cd\u8981/\u6700\u6709\u7528\u7684\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u81ea\u5df1\u67e5\u770b .h \u548c .cpp \u6587\u4ef6\uff0c\u4ee5\u67e5\u770b\u6240\u6709\u53ef\u7528\u7684\u529f\u80fd\u3002\n\n\n1.\u521d\u59cb\u5316\u624b\u52bf\u4f20\u611f\u5668\u82af\u7247PAJ7620\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n  \npaj7620Init\n();\n\n\n}\n\n\n\n\n\n\u8fd9\u4e2a\u521d\u59cb\u5316\u4ee3\u7801\u5e94\u8be5\u6dfb\u52a0\u5230\u6bcf\u4e2a\u6f14\u793a\u3002\n\n\n2.\u901a\u8fc7 I2C \u4ece PAJ7620 \u5bc4\u5b58\u5668\u8bfb\u53d6\u6570\u636e\n\n- paj7620ReadReg(uint8_t addr, uint8_t qty, uint8_t data[])\n - addr: \u6ce8\u518c\u5730\u5740\n - qty: \u8bfb\u53d6\u7684\u6570\u636e\u6570\u91cf\uff0c\u6ce8\u518c\u5730\u5740\u4e0d\u65ad\u589e\u52a0\u3002\n - data[]: \u8d77\u59cb\u5730\u5740\uff08\u4e00\u4e2a\u53d8\u91cf\u6216\u6570\u7ec4\uff09\u6765\u5b58\u50a8\u6570\u636e\u3002\n\n\n \nvoid\n \nloop\n()\n\n \n{\n\n    \nuint8_t\n \ndata\n \n=\n \n0\n;\n  \n// Read Bank_0_Reg_0x43/0x44 for gesture result.\n\n\n    \npaj7620ReadReg\n(\n0x43\n,\n \n1\n,\n \ndata\n);\n  \n// When different gestures be detected, the variable \ndata\n will be set to different values by paj7620ReadReg(0x43, 1, \ndata).\n\n\n    \nif\n \n(\ndata\n \n==\n \nGES_UP_FLAG\n)\n                            \n// When up gesture be detected,the variable \ndata\n will be set to GES_UP_FLAG.\n\n        \ndigitalWrite\n(\n4\n,\n \nHIGH\n);\n                          \n// turn the LED on (HIGH is the voltage level)\n\n    \nif\n \n(\ndata\n \n==\n \nGES_DOWN_FLAG\n)\n                      \n// When down gesture be detected,the variable \ndata\n will be set to GES_DOWN_FLAG.\n\n         \ndigitalWrite\n(\n4\n,\n \nLOW\n);\n                          \n// turn the LED off by making the voltage LOW\n\n \n}\n\n\n\n- \u6211\u4eec\u5b9a\u4e49\u624b\u52bf\u7684\u4e00\u4e9b\u6ce8\u518c\u6570\u636e\uff0c\u8bf7\u53c2\u8003\u4e0b\u8868\u3002\n\n\n\n\n\n\n\n\n\u624b\u52bf\n\n\n\u6ce8\u518c\u6570\u636e\n\n\n\u6ce8\u518c\u5730\u5740\n\n\n\u662f\n\n\n\u4e0d\u662f\n\n\n\n\n\n\n\n\n\n\n\u5411\u4e0a\n\n\ndata==GES_UP_FLAG\n\n\n0x43\n\n\n\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\u672a\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\n\n\n\n\u5411\u4e0b\n\n\ndata==GES_DOWN_FLAG\n\n\n0x43\n\n\n\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\u672a\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\n\n\n\n\u5411\u5de6\n\n\ndata==GES_LEFT_FLAG\n\n\n0x43\n\n\n\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\u672a\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\n\n\n\n\u5411\u53f3\n\n\ndata==GES_RIGHT_FLAG\n\n\n0x43\n\n\n\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\u672a\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\n\n\n\n\u5411\u524d\n\n\ndata==GES_FORWARD_FLAG\n\n\n0x43\n\n\n\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\u672a\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\n\n\n\n\u5411\u540e\n\n\ndata==GES_BACKWARD_FLAG\n\n\n0x43\n\n\n\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\u672a\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\n\n\n\n\u987a\u65f6\u9488\n\n\ndata==GES_CLOCKWISE_FLAG\n\n\n0x43\n\n\n\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\u672a\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\n\n\n\n\u9006\u65f6\u9488\n\n\ndata==GES_COUNT_CLOCKWISE_FLAG\n\n\n0x43\n\n\n\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\u672a\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\n\n\n\n\u6325\u624b\n\n\ndata==GES_WAVE_FLAG\n\n\n0x44\n\n\n\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\u672a\u68c0\u6d4b\u5230\u624b\u52bf\n\n\n\n\n\n\n\n\n\u624b\u52bf\u793a\u4f8b/\u5e94\u7528\u7a0b\u5e8f\n\n\n\u8fd9\u4e9b\u4f8b\u5b50\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u8bc6\u522b\u8fd9\u4e2a Grove \u624b\u52bf\u7684\u624b\u52bf\u3002]\n\n\n\n\n\u6253\u5f00\u6587\u4ef6\n\n\nFile\uff08\u6587\u4ef6\uff09\nexample\uff08\u793a\u4f8b\uff09 - \n Gesture_PAJ7620-\n example-\n paj7620_9\n \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7f16\u8f91\u7a0b\u5e8f\u3002\n\n\n\n\n\u8bf4\u660e\n\uff1a\u672c\u793a\u4f8b\u53ef\u4ee5\u8bc6\u522b 9 \u4e2a\u624b\u52bf\u5e76\u8f93\u51fa\u7ed3\u679c\uff0c\u5305\u62ec\u5411\u4e0a\u79fb\u52a8\uff0c\u5411\u4e0b\u79fb\u52a8\uff0c\u5411\u5de6\u79fb\u52a8\uff0c\u5411\u53f3\u79fb\u52a8\uff0c\u5411\u524d\u79fb\u52a8\uff0c\u5411\u540e\u79fb\u52a8\uff0c\u987a\u65f6\u9488\uff0c\u9006\u65f6\u9488\u548c\u6325\u624b\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u624b\u52bf\u4f5c\u4e3a\u8f93\u5165\u8bbe\u5907\u6765\u63a7\u5236\u53e6\u4e00\u4e2a grove \uff0c\u7535\u8111\uff0c\u624b\u673a\uff0c\u667a\u80fd\u8f66\uff0c\u673a\u5668\u4eba\u7b49\uff0c\u53ea\u9700\u8f7b\u8f7b\u4e00\u6309\u5373\u53ef\u3002\n\n\n\n\nNote\n\n\n\u5f53\u60a8\u60f3\u8981\u8bc6\u522b\u5411\u524d/\u5411\u540e\u7684\u624b\u52bf\u65f6\uff0c\u60a8\u7684\u624b\u52bf\u7684\u53cd\u5e94\u65f6\u95f4\u5fc5\u987b\u5c0f\u4e8eGES_ENTRY_TIME\uff080.8s\uff09\u3002 \u60a8\u8fd8\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\u53cd\u5e94\u65f6\u95f4\u3002\n\n\n\n\n/*\nNotice: When you want to recognize the Forward/Backward gestures, your gestures\n reaction time must less than GES_ENTRY_TIME(0.8s).\n        You also can adjust the reaction time according to the actual circumstance.\n*/\n\n#define GES_REACTION_TIME       500 // You can adjust the reaction time according to the actual circumstance.\n#define GES_ENTRY_TIME          800 // When you want to recognize the Forward/Backward gestures, your gestures\n reaction time must less than GES_ENTRY_TIME(0.8s).\n#define GES_QUIT_TIME           1000\n\n\n\n\n\u4ee5\u4e0b\u662f\u6f14\u793a\u4e2d\u4f7f\u7528\u7684\u4e3b\u8981\u7a0b\u5e8f\uff1a\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nuint8_t\n \nerror\n \n=\n \n0\n;\n\n\n    \nSerial\n.\nbegin\n(\n9600\n);\n\n    \nSerial\n.\nprintln\n(\n\\n\nPAJ7620U2 TEST DEMO: Recognize 9 gestures.\n);\n\n\n    \nerror\n \n=\n \npaj7620Init\n();\n          \n// initialize Paj7620 registers\n\n    \nif\n \n(\nerror\n)\n\n    \n{\n\n        \nSerial\n.\nprint\n(\nINIT ERROR,CODE:\n);\n\n        \nSerial\n.\nprintln\n(\nerror\n);\n\n    \n}\n\n    \nelse\n\n    \n{\n\n        \nSerial\n.\nprintln\n(\nINIT OK\n);\n\n    \n}\n\n    \nSerial\n.\nprintln\n(\nPlease input your gestures:\n\\n\n);\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nuint8_t\n \ndata\n \n=\n \n0\n,\n \ndata1\n \n=\n \n0\n,\n \nerror\n;\n\n\n    \nerror\n \n=\n \npaj7620ReadReg\n(\n0x43\n,\n \n1\n,\n \ndata\n);\n             \n// Read Bank_0_Reg_0x43/0x44 for gesture result.\n\n    \nif\n \n(\n!\nerror\n)\n\n    \n{\n\n        \nswitch\n \n(\ndata\n)\n                                   \n// When different gestures be detected, the variable \ndata\n will be set to different values by paj7620ReadReg(0x43, 1, \ndata).\n\n        \n{\n\n            \ncase\n \nGES_RIGHT_FLAG\n:\n\n                \ndelay\n(\nGES_ENTRY_TIME\n);\n\n                \npaj7620ReadReg\n(\n0x43\n,\n \n1\n,\n \ndata\n);\n\n                \nif\n(\ndata\n \n==\n \nGES_FORWARD_FLAG\n)\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nForward\n);\n\n                    \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \n}\n\n                \nelse\n \nif\n(\ndata\n \n==\n \nGES_BACKWARD_FLAG\n)\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nBackward\n);\n\n                    \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \n}\n\n                \nelse\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nRight\n);\n\n                \n}\n\n                \nbreak\n;\n\n            \ncase\n \nGES_LEFT_FLAG\n:\n\n                \ndelay\n(\nGES_ENTRY_TIME\n);\n\n                \npaj7620ReadReg\n(\n0x43\n,\n \n1\n,\n \ndata\n);\n\n                \nif\n(\ndata\n \n==\n \nGES_FORWARD_FLAG\n)\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nForward\n);\n\n                    \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \n}\n\n                \nelse\n \nif\n(\ndata\n \n==\n \nGES_BACKWARD_FLAG\n)\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nBackward\n);\n\n                    \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \n}\n\n                \nelse\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nLeft\n);\n\n                \n}\n\n                \nbreak\n;\n\n            \ncase\n \nGES_UP_FLAG\n:\n\n                \ndelay\n(\nGES_ENTRY_TIME\n);\n\n                \npaj7620ReadReg\n(\n0x43\n,\n \n1\n,\n \ndata\n);\n\n                \nif\n(\ndata\n \n==\n \nGES_FORWARD_FLAG\n)\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nForward\n);\n\n                    \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \n}\n\n                \nelse\n \nif\n(\ndata\n \n==\n \nGES_BACKWARD_FLAG\n)\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nBackward\n);\n\n                    \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \n}\n\n                \nelse\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nUp\n);\n\n                \n}\n\n                \nbreak\n;\n\n            \ncase\n \nGES_DOWN_FLAG\n:\n\n                \ndelay\n(\nGES_ENTRY_TIME\n);\n\n                \npaj7620ReadReg\n(\n0x43\n,\n \n1\n,\n \ndata\n);\n\n                \nif\n(\ndata\n \n==\n \nGES_FORWARD_FLAG\n)\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nForward\n);\n\n                    \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \n}\n\n                \nelse\n \nif\n(\ndata\n \n==\n \nGES_BACKWARD_FLAG\n)\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nBackward\n);\n\n                    \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \n}\n\n                \nelse\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nDown\n);\n\n                \n}\n\n                \nbreak\n;\n\n            \ncase\n \nGES_FORWARD_FLAG\n:\n\n                \nSerial\n.\nprintln\n(\nForward\n);\n\n                \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \nbreak\n;\n\n            \ncase\n \nGES_BACKWARD_FLAG\n:\n\n                \nSerial\n.\nprintln\n(\nBackward\n);\n\n                \ndelay\n(\nGES_QUIT_TIME\n);\n\n                \nbreak\n;\n\n            \ncase\n \nGES_CLOCKWISE_FLAG\n:\n\n                \nSerial\n.\nprintln\n(\nClockwise\n);\n\n                \nbreak\n;\n\n            \ncase\n \nGES_COUNT_CLOCKWISE_FLAG\n:\n\n                \nSerial\n.\nprintln\n(\nanti-clockwise\n);\n\n                \nbreak\n;\n\n            \ndefault\n:\n\n                \npaj7620ReadReg\n(\n0x44\n,\n \n1\n,\n \ndata1\n);\n\n                \nif\n \n(\ndata1\n \n==\n \nGES_WAVE_FLAG\n)\n\n                \n{\n\n                    \nSerial\n.\nprintln\n(\nwave\n);\n\n                \n}\n\n                \nbreak\n;\n\n        \n}\n\n    \n}\n\n    \ndelay\n(\n100\n);\n\n\n}\n\n\n\n\n\n\u5728\u60a8\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u624b\u52bf\u800c\u4e0d\u662f\u5355\u4e2a\u624b\u52bf\u6765\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\uff0c\u6b22\u8fce\u5206\u4eab\uff01\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\nGrove - Gesture_v1.0 sch pcb.zip\n\n\nPAJ7620U2_Datasheet_V0.8_20140611.pdf\n\n\nLibrary Grove - Guesture", 
            "title": "Grove-Gesture v1.0"
        }, 
        {
            "location": "/Grove-Gesture_v1.0/#_1", 
            "text": "\u5185\u7f6e\u68c0\u6d4b  \u4e3b\u677f\u652f\u6301\uff1aArduino UNO / Seeeduino / Arduino Mega2560  9 \u79cd\u57fa\u672c\u624b\u52bf\n\u00a0 - \u5411\u4e0a\n\u00a0 - \u5411\u4e0b\n\u00a0 - \u5411\u5de6\n\u00a0 - \u5411\u53f3\n\u00a0 - \u5411\u524d\n\u00a0 - \u5411\u540e\n\u00a0 - \u987a\u65f6\u9488\n\u00a0 - \u9006\u65f6\u9488\n\u00a0 - \u6325\u624b    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Gesture_v1.0/#_2", 
            "text": "\u9879\u76ee\u540d\u79f0  \u53c2\u6570      \u4f20\u611f\u5668  PAJ7620U2    \u7535\u6e90  5V    \u73af\u5883\u5149\u5f3a   100k Lux    \u6b63\u5e38\u6a21\u5f0f\u4e0b\u7684\u624b\u52bf\u901f\u5ea6  60\u00b0/s \u5230 600\u00b0/s    \u6e38\u620f\u6a21\u5f0f\u4e0b\u7684\u624b\u52bf\u901f\u5ea6  60\u00b0/s \u5230 1200\u00b0/s    \u63a5\u53e3\u7c7b\u578b IIC \u63a5\u53e3  \u53d6\u51b3\u4e8e400 kbit/s    \u5de5\u4f5c\u6e29\u5ea6  -40\u00b0C\u5230 +85\u00b0C    \u5916\u5f62\u5c3a\u5bf8  20 x20mm    \u68c0\u6d4b\u8303\u56f4  5-10cm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Gesture_v1.0/#arduinoseeeduino", 
            "text": "\u63a8\u8350\u9605\u8bfb\u5165\u95e8\n-  \u4e0b\u8f7d Arduino \u5e76\u5b89\u88c5 Arduino \u9a71\u52a8\u7a0b\u5e8f \n-  Seeed\u5165\u95e8\u6307\u5bfc  \u786c\u4ef6\u5b89\u88c5  Grove \u4ea7\u54c1\u5177\u6709\u4e00\u79cd\u7ecf\u6d4e\u6027\u7684\u7cfb\u7edf\uff0c\u5e76\u4e14\u90fd\u5177\u6709\u76f8\u540c\u7684\u8fde\u63a5\u5668\uff0c\u53ef\u4ee5\u8fde\u63a5 Base Shield \u3002 \u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684  I2C  \u7aef\u53e3\uff0c\u5982\u679c\u6ca1\u6709 Base Shield \uff0c\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8df3\u7ebf\u5c06 Grove-Gesture \u76f4\u63a5\u8fde\u63a5\u5230 Arduino \u3002     Arduino UNO  Base Shield  Grove - Gesture      5V  I2C \u7aef\u53e3  VCC    GND  I2C \u7aef\u53e3  GND    SDA  I2C \u7aef\u53e3  SDA    SCL  I2C \u7aef\u53e3  SCL    Digit 2  \u672a\u8fde\u63a5  INT (Reserved pad)     INT\uff1a\u624b\u52bf\u68c0\u6d4b\u4e2d\u65ad\u6807\u5fd7\u63a9\u7801\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u8df3\u7ebf\u5c06 INT PAD \u8fde\u63a5\u5230 Arduino \u7684  Digit 2  \u3002  \u4e0b\u56fe\u663e\u793a\u4e86\u5982\u4f55\u5c06 Grove - Gesture \u8fde\u63a5\u5230 Base shield \u7684  I2C  \u7aef\u53e3\u4e0a   \u7136\u540e\u5c06 Base shield \u8fde\u63a5\u5230 Arduino UNO \u4e0a   Gesture \u5e93  \u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Seeeduino / Arduino \uff0c\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u8bbe\u7f6e\u5e93\u5e76\u4ecb\u7ecd\u4e00\u4e9b\u529f\u80fd\u3002  \u521b\u5efa   \u4ece Gesture_PAJ7620 github \u9875\u9762\u5c06\u5e93\u4ee3\u7801\u4f5c\u4e3azip\u6587\u4ef6\u4e0b\u8f7d .  \u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u89e3\u538b\u7f29\u5230 ... / arduino / libraries \u4e2d\u3002  \u91cd\u547d\u540d\u89e3\u538b\u7f29\u7684\u6587\u4ef6\u5939 \"Gesture\"(\u6216:\"Gesture_PAJ7620\")  \u542f\u52a8 Arduino IDE\uff08\u5982\u679c\u6253\u5f00\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8\uff09\u3002   \u7b80\u5355\u6f14\u793a  \u4ee5\u4e0b\u7b80\u5355\u7684\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5e94\u7528\uff1a\u5f53\u60a8\u5411\u4e0a\u79fb\u52a8\u65f6\uff0c\u7ea2\u8272\u7684LED\u5c06\u88ab\u6253\u5f00\uff0c\u53cd\u4e4b\u7ea2\u8272\u7684LED\u5c06\u88ab\u5173\u95ed\u3002  #include   Wire.h  #include   paj7620.h  void   setup ()  { \n   paj7620Init ();  }  void   loop ()  { \n     uint8_t   data   =   0 ;    // Read Bank_0_Reg_0x43/0x44 for gesture result. \n\n     paj7620ReadReg ( 0x43 ,   1 ,   data );    // When different gestures be detected, the variable  data  will be set to different values by paj7620ReadReg(0x43, 1,  data). \n\n     if   ( data   ==   GES_UP_FLAG )          // When up gesture be detected,the variable  data  will be set to GES_UP_FLAG. \n         digitalWrite ( 4 ,   HIGH );        // turn the LED on (HIGH is the voltage level) \n     if   ( data   ==   GES_DOWN_FLAG )        // When down gesture be detected,the variable  data  will be set to GES_DOWN_FLAG. \n         digitalWrite ( 4 ,   LOW );         // turn the LED off by making the voltage LOW    \u529f\u80fd\u63cf\u8ff0  \u8fd9\u4e9b\u662f\u5e93\u4e2d\u6700\u91cd\u8981/\u6700\u6709\u7528\u7684\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u81ea\u5df1\u67e5\u770b .h \u548c .cpp \u6587\u4ef6\uff0c\u4ee5\u67e5\u770b\u6240\u6709\u53ef\u7528\u7684\u529f\u80fd\u3002  1.\u521d\u59cb\u5316\u624b\u52bf\u4f20\u611f\u5668\u82af\u7247PAJ7620  void   setup ()  { \n   paj7620Init ();  }   \u8fd9\u4e2a\u521d\u59cb\u5316\u4ee3\u7801\u5e94\u8be5\u6dfb\u52a0\u5230\u6bcf\u4e2a\u6f14\u793a\u3002  2.\u901a\u8fc7 I2C \u4ece PAJ7620 \u5bc4\u5b58\u5668\u8bfb\u53d6\u6570\u636e \n- paj7620ReadReg(uint8_t addr, uint8_t qty, uint8_t data[])\n - addr: \u6ce8\u518c\u5730\u5740\n - qty: \u8bfb\u53d6\u7684\u6570\u636e\u6570\u91cf\uff0c\u6ce8\u518c\u5730\u5740\u4e0d\u65ad\u589e\u52a0\u3002\n - data[]: \u8d77\u59cb\u5730\u5740\uff08\u4e00\u4e2a\u53d8\u91cf\u6216\u6570\u7ec4\uff09\u6765\u5b58\u50a8\u6570\u636e\u3002    void   loop () \n  { \n     uint8_t   data   =   0 ;    // Read Bank_0_Reg_0x43/0x44 for gesture result. \n\n     paj7620ReadReg ( 0x43 ,   1 ,   data );    // When different gestures be detected, the variable  data  will be set to different values by paj7620ReadReg(0x43, 1,  data). \n\n     if   ( data   ==   GES_UP_FLAG )                              // When up gesture be detected,the variable  data  will be set to GES_UP_FLAG. \n         digitalWrite ( 4 ,   HIGH );                            // turn the LED on (HIGH is the voltage level) \n     if   ( data   ==   GES_DOWN_FLAG )                        // When down gesture be detected,the variable  data  will be set to GES_DOWN_FLAG. \n          digitalWrite ( 4 ,   LOW );                            // turn the LED off by making the voltage LOW \n  }  \n- \u6211\u4eec\u5b9a\u4e49\u624b\u52bf\u7684\u4e00\u4e9b\u6ce8\u518c\u6570\u636e\uff0c\u8bf7\u53c2\u8003\u4e0b\u8868\u3002     \u624b\u52bf  \u6ce8\u518c\u6570\u636e  \u6ce8\u518c\u5730\u5740  \u662f  \u4e0d\u662f      \u5411\u4e0a  data==GES_UP_FLAG  0x43  \u68c0\u6d4b\u5230\u624b\u52bf  \u672a\u68c0\u6d4b\u5230\u624b\u52bf    \u5411\u4e0b  data==GES_DOWN_FLAG  0x43  \u68c0\u6d4b\u5230\u624b\u52bf  \u672a\u68c0\u6d4b\u5230\u624b\u52bf    \u5411\u5de6  data==GES_LEFT_FLAG  0x43  \u68c0\u6d4b\u5230\u624b\u52bf  \u672a\u68c0\u6d4b\u5230\u624b\u52bf    \u5411\u53f3  data==GES_RIGHT_FLAG  0x43  \u68c0\u6d4b\u5230\u624b\u52bf  \u672a\u68c0\u6d4b\u5230\u624b\u52bf    \u5411\u524d  data==GES_FORWARD_FLAG  0x43  \u68c0\u6d4b\u5230\u624b\u52bf  \u672a\u68c0\u6d4b\u5230\u624b\u52bf    \u5411\u540e  data==GES_BACKWARD_FLAG  0x43  \u68c0\u6d4b\u5230\u624b\u52bf  \u672a\u68c0\u6d4b\u5230\u624b\u52bf    \u987a\u65f6\u9488  data==GES_CLOCKWISE_FLAG  0x43  \u68c0\u6d4b\u5230\u624b\u52bf  \u672a\u68c0\u6d4b\u5230\u624b\u52bf    \u9006\u65f6\u9488  data==GES_COUNT_CLOCKWISE_FLAG  0x43  \u68c0\u6d4b\u5230\u624b\u52bf  \u672a\u68c0\u6d4b\u5230\u624b\u52bf    \u6325\u624b  data==GES_WAVE_FLAG  0x44  \u68c0\u6d4b\u5230\u624b\u52bf  \u672a\u68c0\u6d4b\u5230\u624b\u52bf     \u624b\u52bf\u793a\u4f8b/\u5e94\u7528\u7a0b\u5e8f  \u8fd9\u4e9b\u4f8b\u5b50\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u8bc6\u522b\u8fd9\u4e2a Grove \u624b\u52bf\u7684\u624b\u52bf\u3002]   \u6253\u5f00\u6587\u4ef6  File\uff08\u6587\u4ef6\uff09 example\uff08\u793a\u4f8b\uff09 -   Gesture_PAJ7620-  example-  paj7620_9  \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7f16\u8f91\u7a0b\u5e8f\u3002   \u8bf4\u660e \uff1a\u672c\u793a\u4f8b\u53ef\u4ee5\u8bc6\u522b 9 \u4e2a\u624b\u52bf\u5e76\u8f93\u51fa\u7ed3\u679c\uff0c\u5305\u62ec\u5411\u4e0a\u79fb\u52a8\uff0c\u5411\u4e0b\u79fb\u52a8\uff0c\u5411\u5de6\u79fb\u52a8\uff0c\u5411\u53f3\u79fb\u52a8\uff0c\u5411\u524d\u79fb\u52a8\uff0c\u5411\u540e\u79fb\u52a8\uff0c\u987a\u65f6\u9488\uff0c\u9006\u65f6\u9488\u548c\u6325\u624b\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u624b\u52bf\u4f5c\u4e3a\u8f93\u5165\u8bbe\u5907\u6765\u63a7\u5236\u53e6\u4e00\u4e2a grove \uff0c\u7535\u8111\uff0c\u624b\u673a\uff0c\u667a\u80fd\u8f66\uff0c\u673a\u5668\u4eba\u7b49\uff0c\u53ea\u9700\u8f7b\u8f7b\u4e00\u6309\u5373\u53ef\u3002   Note  \u5f53\u60a8\u60f3\u8981\u8bc6\u522b\u5411\u524d/\u5411\u540e\u7684\u624b\u52bf\u65f6\uff0c\u60a8\u7684\u624b\u52bf\u7684\u53cd\u5e94\u65f6\u95f4\u5fc5\u987b\u5c0f\u4e8eGES_ENTRY_TIME\uff080.8s\uff09\u3002 \u60a8\u8fd8\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\u53cd\u5e94\u65f6\u95f4\u3002   /*\nNotice: When you want to recognize the Forward/Backward gestures, your gestures  reaction time must less than GES_ENTRY_TIME(0.8s).\n        You also can adjust the reaction time according to the actual circumstance.\n*/\n\n#define GES_REACTION_TIME       500 // You can adjust the reaction time according to the actual circumstance.\n#define GES_ENTRY_TIME          800 // When you want to recognize the Forward/Backward gestures, your gestures  reaction time must less than GES_ENTRY_TIME(0.8s).\n#define GES_QUIT_TIME           1000  \u4ee5\u4e0b\u662f\u6f14\u793a\u4e2d\u4f7f\u7528\u7684\u4e3b\u8981\u7a0b\u5e8f\uff1a  void   setup ()  { \n     uint8_t   error   =   0 ; \n\n     Serial . begin ( 9600 ); \n     Serial . println ( \\n PAJ7620U2 TEST DEMO: Recognize 9 gestures. ); \n\n     error   =   paj7620Init ();            // initialize Paj7620 registers \n     if   ( error ) \n     { \n         Serial . print ( INIT ERROR,CODE: ); \n         Serial . println ( error ); \n     } \n     else \n     { \n         Serial . println ( INIT OK ); \n     } \n     Serial . println ( Please input your gestures: \\n );  }  void   loop ()  { \n     uint8_t   data   =   0 ,   data1   =   0 ,   error ; \n\n     error   =   paj7620ReadReg ( 0x43 ,   1 ,   data );               // Read Bank_0_Reg_0x43/0x44 for gesture result. \n     if   ( ! error ) \n     { \n         switch   ( data )                                     // When different gestures be detected, the variable  data  will be set to different values by paj7620ReadReg(0x43, 1,  data). \n         { \n             case   GES_RIGHT_FLAG : \n                 delay ( GES_ENTRY_TIME ); \n                 paj7620ReadReg ( 0x43 ,   1 ,   data ); \n                 if ( data   ==   GES_FORWARD_FLAG ) \n                 { \n                     Serial . println ( Forward ); \n                     delay ( GES_QUIT_TIME ); \n                 } \n                 else   if ( data   ==   GES_BACKWARD_FLAG ) \n                 { \n                     Serial . println ( Backward ); \n                     delay ( GES_QUIT_TIME ); \n                 } \n                 else \n                 { \n                     Serial . println ( Right ); \n                 } \n                 break ; \n             case   GES_LEFT_FLAG : \n                 delay ( GES_ENTRY_TIME ); \n                 paj7620ReadReg ( 0x43 ,   1 ,   data ); \n                 if ( data   ==   GES_FORWARD_FLAG ) \n                 { \n                     Serial . println ( Forward ); \n                     delay ( GES_QUIT_TIME ); \n                 } \n                 else   if ( data   ==   GES_BACKWARD_FLAG ) \n                 { \n                     Serial . println ( Backward ); \n                     delay ( GES_QUIT_TIME ); \n                 } \n                 else \n                 { \n                     Serial . println ( Left ); \n                 } \n                 break ; \n             case   GES_UP_FLAG : \n                 delay ( GES_ENTRY_TIME ); \n                 paj7620ReadReg ( 0x43 ,   1 ,   data ); \n                 if ( data   ==   GES_FORWARD_FLAG ) \n                 { \n                     Serial . println ( Forward ); \n                     delay ( GES_QUIT_TIME ); \n                 } \n                 else   if ( data   ==   GES_BACKWARD_FLAG ) \n                 { \n                     Serial . println ( Backward ); \n                     delay ( GES_QUIT_TIME ); \n                 } \n                 else \n                 { \n                     Serial . println ( Up ); \n                 } \n                 break ; \n             case   GES_DOWN_FLAG : \n                 delay ( GES_ENTRY_TIME ); \n                 paj7620ReadReg ( 0x43 ,   1 ,   data ); \n                 if ( data   ==   GES_FORWARD_FLAG ) \n                 { \n                     Serial . println ( Forward ); \n                     delay ( GES_QUIT_TIME ); \n                 } \n                 else   if ( data   ==   GES_BACKWARD_FLAG ) \n                 { \n                     Serial . println ( Backward ); \n                     delay ( GES_QUIT_TIME ); \n                 } \n                 else \n                 { \n                     Serial . println ( Down ); \n                 } \n                 break ; \n             case   GES_FORWARD_FLAG : \n                 Serial . println ( Forward ); \n                 delay ( GES_QUIT_TIME ); \n                 break ; \n             case   GES_BACKWARD_FLAG : \n                 Serial . println ( Backward ); \n                 delay ( GES_QUIT_TIME ); \n                 break ; \n             case   GES_CLOCKWISE_FLAG : \n                 Serial . println ( Clockwise ); \n                 break ; \n             case   GES_COUNT_CLOCKWISE_FLAG : \n                 Serial . println ( anti-clockwise ); \n                 break ; \n             default : \n                 paj7620ReadReg ( 0x44 ,   1 ,   data1 ); \n                 if   ( data1   ==   GES_WAVE_FLAG ) \n                 { \n                     Serial . println ( wave ); \n                 } \n                 break ; \n         } \n     } \n     delay ( 100 );  }   \u5728\u60a8\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u624b\u52bf\u800c\u4e0d\u662f\u5355\u4e2a\u624b\u52bf\u6765\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\uff0c\u6b22\u8fce\u5206\u4eab\uff01", 
            "title": "\u4f7f\u7528 Arduino/Seeeduino"
        }, 
        {
            "location": "/Grove-Gesture_v1.0/#_3", 
            "text": "Grove - Gesture_v1.0 sch pcb.zip  PAJ7620U2_Datasheet_V0.8_20140611.pdf  Library Grove - Guesture", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-IMU_9DOF_v2.0/", 
            "text": "Grove - IMU 9DOF v2.0\u662f \nGrove - IMU 9DOF v1.0\n \u7684\u5347\u7ea7\u7248\uff0c\u5b83\u662f\u57fa\u4e8e MPU-9250 \u7684\u9ad8\u6027\u80fd 9 \u8f74\u8fd0\u52a8\u68c0\u6d4b\u6a21\u5757\u3002 MPU-9250 \u662f\u96c6\u6210\u7684 9 \u8f74\u8fd0\u52a8\u68c0\u6d4b\u8bbe\u5907\uff0c\u4e13\u4e3a\u4f4e\u529f\u8017\uff0c\u4f4e\u6210\u672c\u548c\u9ad8\u6027\u80fd\u8981\u6c42\u7684\u6d88\u8d39\u7535\u5b50\u8bbe\u5907\uff08\u5305\u62ec\u667a\u80fd\u624b\u673a\uff0c\u5e73\u677f\u7535\u8111\u548c\u53ef\u7a7f\u6234\u5f0f\u4f20\u611f\u5668\uff09\u800c\u8bbe\u8ba1\u3002 MPU-9250 \u5177\u6709\u4e09\u4e2a 16 \u4f4d ADC\uff0c\u7528\u4e8e\u6570\u5b57\u5316\u9640\u87ba\u4eea\u8f93\u51fa\u548c\u4e09\u4e2a 16 \u4f4d ADC\uff0c\u7528\u4e8e\u6570\u5b57\u5316\u52a0\u901f\u5ea6\u8ba1\u8f93\u51fa\u548c\u4e09\u4e2a16\u4f4dADC\uff0c\u7528\u4e8e\u6570\u5b57\u5316\u78c1\u529b\u8ba1\u8f93\u51fa\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\nI2C / SPI \u63a5\u53e3\n\n\nAuxiliary I2C\n\n\n\u4f4e\u529f\u8017\n\n\n400kHz \u5feb\u901f\u6a21\u5f0f I2C\uff0c\u7528\u4e8e\u4e0e\u6240\u6709\u5bc4\u5b58\u5668\u8fdb\u884c\u901a\u4fe1\n\n\n\u6570\u5b57\u8f93\u51fa 3 \u8f74\u89d2\u901f\u7387\u4f20\u611f\u5668\uff08\u9640\u87ba\u4eea\uff09\uff0c\u7528\u6237\u53ef\u7f16\u7a0b\u7684\u6570\u503c\u8303\u56f4\u4e3a \u00b1250\uff0c\u00b1500\uff0c\u00b11000\u548c\u00b12000\u00b0/\u79d2\n\n\n\u6570\u5b57\u8f93\u51fa 3 \u8f74\u52a0\u901f\u5ea6\u8ba1\uff0c\u53ef\u7f16\u7a0b\u6570\u503c\u8303\u56f4\u4e3a \u00b12g\uff0c\u00b14g\uff0c\u00b18g\u548c\u00b116g\n\n\n\u6ee1\u91cf\u7a0b\u6d4b\u91cf\u8303\u56f4\u7684\u6570\u5b57\u8f93\u51fa\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u4e3a \u00b14800\u03bcT\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u2460 - Grove \u63a5\u53e3\uff0c\u8fde\u63a5\u5230 \nI2C\n \u7aef\u53e3\n\n\n\u2461 - I2C \u6216 SPI \u4e24\u79cd\u7aef\u53e3\u53ef\u4ee5\u4f9b\u9009\u62e9\uff08\u9ed8\u8ba4\u4e3aI2C\uff09\uff0c\u5982\u679c\u8981\u4f7f\u7528SPI\uff0c\u8bf7\u65ad\u5f00\u8fd9\u4e00\u4e2a\u3002\n\n\n\u2462 - \u5730\u5740\u9009\u62e9\u952e\uff0c\u9ed8\u8ba4\u8fde\u63a5 b \u548c c \u5730\u5740\u4e3a 0x68\uff0c\u5982\u679c\u8fde\u63a5 b \u548c a \u5730\u5740\u4e3a0x69\uff0c\u5982\u679c\u8981\u4f7f\u7528 SPI\uff0c\u8bf7\u5c06\u6b64\u8fde\u63a5\u65ad\u5f00\u3002\n\n\n\u2463 - SPI \u63a5\u53e3\n\n\n\u2464 - Auxiliary I2C \u7aef\u53e3\u8fdb\u884c\u4e3b\u673a\u4e32\u884c\u6570\u636e\u4f20\u8f93\u7684\u7aef\u53e3\n\n\n\u2465 - Auxiliary I2C \u7aef\u53e3\u4f5c\u4e3a\u4e3b\u4e32\u884c\u65f6\u949f\n\n\n\u2466 - \u4e2d\u65ad\u6570\u5b57\u8f93\u51fa\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u57fa\u4e8e\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u663e\u793a Accel \u548c Gyro \u548c Magnet \u7684\u503c\u3002 \u73b0\u5728\u6211\u4eec\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u6a21\u5757\u3002\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\u786c\u4ef6\u5b89\u88c5\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a Seeeduino \u6709\u4e00\u4e2a \nI2C Grove\n\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u901a\u8fc7 Grove\u8fde\u63a5\u7ebf\u8fde\u63a5\u5230 \nI2C Grove\n \u7aef\u53e3\u3002\n\n\n\n\n\u7a0b\u5e8f\u90e8\u5206\n\n\n\n\n\u4e0b\u8f7d \n\u5e93\n.\n\n\n\u901a\u8fc7\u8def\u5f84\u5c06\u5e93\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\uff1a ..\\arduino-1.0.5\\libraries.\n\n\n\u5c06IMU_9D0F_Demo \u6587\u4ef6\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d: ..\\arduino-1.0.5\\libraries.\n\n\n\u901a\u8fc7\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u4ee3\u7801\uff1a \nFile(\u6587\u4ef6) -\n Example(\u793a\u4f8b) -\n Grove_IMU_9DOF_9250\n\n\n\u4e0a\u4f20\u4ee3\u7801 \u8bf7\u6ce8\u610f\uff0c\u60a8\u5e94\u8be5\u9009\u62e9\u6b63\u786e\u7684\u7535\u8def\u677f\u7c7b\u578b\u548c COM \u7aef\u53e3\u3002\n\n\n\u4f60\u53ef\u4ee5\u770b\u5230\n\n\n\n\n\n\n\u5728\u9759\u6001\u72b6\u6001\u4e0b\uff0cz \u8f74\u8f93\u51fa\u503c\u7ea6\u4e3a 0.98g\uff0c\u6240\u4ee5\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e00\u70b9\u6765\u6d4b\u8bd5\u4f20\u611f\u5668\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u3002\n\n\n\u8f74\u5b9a\u5411\n\n\n\u4e0b\u56fe\u663e\u793a\u4e86\u7075\u654f\u5ea6\u8f74\u548c\u65cb\u8f6c\u7684\u65b9\u5411\u3002\u6ce8\u610f\u56fe\u4e2d\u7684\u6807\u8bc6\u7b26\uff08\u2022\uff09\u3002\n\n\n\n\n\u52a0\u901f\u5ea6\u8ba1\u548c\u9640\u87ba\u4eea\u7684\u65cb\u8f6c\u7075\u654f\u5ea6\u548c\u6781\u6027\u65b9\u4f4d\n\n\n\n\n\u6307\u5357\u9488\u7075\u654f\u5ea6\u8f74\u65b9\u5411\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle \u6587\u4ef6]\n \nGrove - IMU 9DOF v2.0 Eagle File\n\n\n[\u5e93\u6587\u4ef6]\n \nGrove - IMU 9DOF v2.0 library\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nMPU-9250 datashet\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nMPU-9250 Register Map", 
            "title": "Grove-IMU 9DOF v2.0"
        }, 
        {
            "location": "/Grove-IMU_9DOF_v2.0/#_1", 
            "text": "I2C / SPI \u63a5\u53e3  Auxiliary I2C  \u4f4e\u529f\u8017  400kHz \u5feb\u901f\u6a21\u5f0f I2C\uff0c\u7528\u4e8e\u4e0e\u6240\u6709\u5bc4\u5b58\u5668\u8fdb\u884c\u901a\u4fe1  \u6570\u5b57\u8f93\u51fa 3 \u8f74\u89d2\u901f\u7387\u4f20\u611f\u5668\uff08\u9640\u87ba\u4eea\uff09\uff0c\u7528\u6237\u53ef\u7f16\u7a0b\u7684\u6570\u503c\u8303\u56f4\u4e3a \u00b1250\uff0c\u00b1500\uff0c\u00b11000\u548c\u00b12000\u00b0/\u79d2  \u6570\u5b57\u8f93\u51fa 3 \u8f74\u52a0\u901f\u5ea6\u8ba1\uff0c\u53ef\u7f16\u7a0b\u6570\u503c\u8303\u56f4\u4e3a \u00b12g\uff0c\u00b14g\uff0c\u00b18g\u548c\u00b116g  \u6ee1\u91cf\u7a0b\u6d4b\u91cf\u8303\u56f4\u7684\u6570\u5b57\u8f93\u51fa\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u4e3a \u00b14800\u03bcT    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-IMU_9DOF_v2.0/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-IMU_9DOF_v2.0/#_2", 
            "text": "\u2460 - Grove \u63a5\u53e3\uff0c\u8fde\u63a5\u5230  I2C  \u7aef\u53e3  \u2461 - I2C \u6216 SPI \u4e24\u79cd\u7aef\u53e3\u53ef\u4ee5\u4f9b\u9009\u62e9\uff08\u9ed8\u8ba4\u4e3aI2C\uff09\uff0c\u5982\u679c\u8981\u4f7f\u7528SPI\uff0c\u8bf7\u65ad\u5f00\u8fd9\u4e00\u4e2a\u3002  \u2462 - \u5730\u5740\u9009\u62e9\u952e\uff0c\u9ed8\u8ba4\u8fde\u63a5 b \u548c c \u5730\u5740\u4e3a 0x68\uff0c\u5982\u679c\u8fde\u63a5 b \u548c a \u5730\u5740\u4e3a0x69\uff0c\u5982\u679c\u8981\u4f7f\u7528 SPI\uff0c\u8bf7\u5c06\u6b64\u8fde\u63a5\u65ad\u5f00\u3002  \u2463 - SPI \u63a5\u53e3  \u2464 - Auxiliary I2C \u7aef\u53e3\u8fdb\u884c\u4e3b\u673a\u4e32\u884c\u6570\u636e\u4f20\u8f93\u7684\u7aef\u53e3  \u2465 - Auxiliary I2C \u7aef\u53e3\u4f5c\u4e3a\u4e3b\u4e32\u884c\u65f6\u949f  \u2466 - \u4e2d\u65ad\u6570\u5b57\u8f93\u51fa", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-IMU_9DOF_v2.0/#_3", 
            "text": "\u57fa\u4e8e\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u663e\u793a Accel \u548c Gyro \u548c Magnet \u7684\u503c\u3002 \u73b0\u5728\u6211\u4eec\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u6a21\u5757\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-IMU_9DOF_v2.0/#_4", 
            "text": "\u786c\u4ef6\u5b89\u88c5\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a Seeeduino \u6709\u4e00\u4e2a  I2C Grove \uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u901a\u8fc7 Grove\u8fde\u63a5\u7ebf\u8fde\u63a5\u5230  I2C Grove  \u7aef\u53e3\u3002", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-IMU_9DOF_v2.0/#_5", 
            "text": "\u4e0b\u8f7d  \u5e93 .  \u901a\u8fc7\u8def\u5f84\u5c06\u5e93\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\uff1a ..\\arduino-1.0.5\\libraries.  \u5c06IMU_9D0F_Demo \u6587\u4ef6\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d: ..\\arduino-1.0.5\\libraries.  \u901a\u8fc7\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u4ee3\u7801\uff1a  File(\u6587\u4ef6) -  Example(\u793a\u4f8b) -  Grove_IMU_9DOF_9250  \u4e0a\u4f20\u4ee3\u7801 \u8bf7\u6ce8\u610f\uff0c\u60a8\u5e94\u8be5\u9009\u62e9\u6b63\u786e\u7684\u7535\u8def\u677f\u7c7b\u578b\u548c COM \u7aef\u53e3\u3002  \u4f60\u53ef\u4ee5\u770b\u5230    \u5728\u9759\u6001\u72b6\u6001\u4e0b\uff0cz \u8f74\u8f93\u51fa\u503c\u7ea6\u4e3a 0.98g\uff0c\u6240\u4ee5\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e00\u70b9\u6765\u6d4b\u8bd5\u4f20\u611f\u5668\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u3002  \u8f74\u5b9a\u5411  \u4e0b\u56fe\u663e\u793a\u4e86\u7075\u654f\u5ea6\u8f74\u548c\u65cb\u8f6c\u7684\u65b9\u5411\u3002\u6ce8\u610f\u56fe\u4e2d\u7684\u6807\u8bc6\u7b26\uff08\u2022\uff09\u3002   \u52a0\u901f\u5ea6\u8ba1\u548c\u9640\u87ba\u4eea\u7684\u65cb\u8f6c\u7075\u654f\u5ea6\u548c\u6781\u6027\u65b9\u4f4d   \u6307\u5357\u9488\u7075\u654f\u5ea6\u8f74\u65b9\u5411", 
            "title": "\u7a0b\u5e8f\u90e8\u5206"
        }, 
        {
            "location": "/Grove-IMU_9DOF_v2.0/#_6", 
            "text": "[Eagle \u6587\u4ef6]   Grove - IMU 9DOF v2.0 Eagle File  [\u5e93\u6587\u4ef6]   Grove - IMU 9DOF v2.0 library  [\u82af\u7247\u6570\u636e\u624b\u518c]   MPU-9250 datashet  [\u5176\u4ed6\u8d44\u6e90]   MPU-9250 Register Map", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/", 
            "text": "\u8be5\u4f20\u611f\u5668\u5141\u8bb8\u60a8\u68c0\u6d4b\u52a8\u7269\u7684\u8fd0\u52a8\uff0c\u901a\u5e38\u662f\u7528\u4e8e\u68c0\u6d4b\u5728\u5176\u68c0\u6d4b\u8303\u56f4\u5185\u4eba\u4f53\u7684\u8fd0\u52a8\u3002 \u53ea\u9700\u5c06\u5176\u8fde\u63a5\u5230 Grove - Base shield \u5e76\u5bf9\u5176\u8fdb\u884c\u7f16\u7a0b\uff0c\u5f53\u4efb\u4f55\u4eba\u5728\u5176\u68c0\u6d4b\u8303\u56f4\u5185\u79fb\u52a8\u65f6\uff0c\u4f20\u611f\u5668\u5c06\u5728\u5176 \nSIG\n \u5f15\u811a\u4e0a\u8f93\u51fa\u9ad8\u7535\u4f4d\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5177\u6709 Grove \u517c\u5bb9\u63a5\u53e3\n\n\n\u53ef\u8c03\u68c0\u6d4b\u8ddd\u79bb\n\n\n\u53ef\u8c03\u8282\u4fdd\u6301\u65f6\u95f4\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c/\u8303\u56f4\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3V\u20135V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41(VCC = 3V)\n\n\n100uA\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41(VCC = 5V)\n\n\n150uA\n\n\n\n\n\n\n\u6d4b\u91cf\u8303\u56f4\n\n\n0.1 - 6m\n\n\n\n\n\n\n\u9ed8\u8ba4\u68c0\u6d4b\u8ddd\u79bb\n\n\n3m\n\n\n\n\n\n\n\u4fdd\u6301\u65f6\u95f4\n\n\n1 - 25s\n\n\n\n\n\n\n\u5de5\u4f5c\u6ce2\u957f\n\n\n7 - 14um\n\n\n\n\n\n\n\u68c0\u6d4b\u89d2\u5ea6\n\n\n120\u5ea6\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4f7f\u7528 Arduino\n\n\n\u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u4e86\u611f\u5e94\u8fd0\u52a8\u7684\u7b80\u5355\u5e94\u7528\u3002 \u5f53\u6709\u4eba\u5728\u5176\u68c0\u6d4b\u8303\u56f4\u5185\u79fb\u52a8\u65f6\uff0c\u5b83\u5c06\u901a\u8fc7 SIG \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\uff0cLED \u5c06\u70b9\u4eae\u3002 \u5426\u5219\uff0c\u5b83\u5c06\u8f93\u51fa\u4f4e\u7535\u5e73\u3002 \u8fd9\u6837\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u68c0\u6d4b\u662f\u5426\u6709\u4eba\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a Grove - PIR MOTION SENSOR \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - PIR MOTION SENSOR\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u5c06 Grove - PIR \u8fd0\u52a8\u4f20\u611f\u5668\u8fde\u63a5\u5230 base shield \u7684 \nD2\n \u7aef\u53e3\u3002\n\n\n\u5c06 Grove - LED \u8fde\u63a5\u5230\u57fa\u5ea7\u5c4f\u853d\u7684 \nD4\n \u7aef\u53e3\u3002\n\n\n\u5c06 base Shield \u63d2\u5165 Arduino\u3002\n\n\n\u4f7f\u7528 USB\u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002\n\n\n\n\n\n\n\u4ee3\u7801\n\n\n\n\n\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230Arduino\u3002\n\n\n\n\n/*macro definitions of PIR motion sensor pin and LED pin*/\n\n\n#define PIR_MOTION_SENSOR 2\n//Use pin 2 to receive the signal from the module\n\n\n#define LED 4\n//the Grove - LED is connected to D4 of Arduino\n\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \npinMode\n(\nPIR_MOTION_SENSOR\n,\n \nINPUT\n);\n\n    \npinMode\n(\nLED\n,\nOUTPUT\n);\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nif\n(\nisPeopleDetected\n())\n//if it detects the moving people?\n\n        \ndigitalWrite\n(\nLED\n,\n \nHIGH\n);\n\n    \nelse\n\n        \ndigitalWrite\n(\nLED\n,\n \nLOW\n);\n\n\n}\n\n\n\n\n/***************************************************************/\n\n\n/*Function: Detect whether anyone moves in it\ns detecting range*/\n\n\n/*Return:-boolean, true is someone detected.*/\n\n\nboolean\n \nisPeopleDetected\n()\n\n\n{\n\n    \nint\n \nsensorValue\n \n=\n \ndigitalRead\n(\nPIR_MOTION_SENSOR\n);\n\n    \nif\n(\nsensorValue\n \n==\n \nHIGH\n)\n//if the sensor value is HIGH?\n\n    \n{\n\n        \nreturn\n \ntrue\n;\n//yes,return true\n\n    \n}\n\n    \nelse\n\n    \n{\n\n        \nreturn\n \nfalse\n;\n//no,return false\n\n    \n}\n\n\n}\n\n\n\n- \u5f53\u6211\u4eec\u8d70\u52a8\u65f6\uff0cLED \u706f\u5c06\u4eae\u8d77\u3002\n\n\n\n\nNote\n\n\n\u53ef\u4ee5\u901a\u8fc7\u5728\u677f\u4e0a\u589e\u52a0\u4e24\u4e2a\u989d\u5916\u7684\u7535\u4f4d\u5668\u6765\u8c03\u6574\u68c0\u6d4b\u8ddd\u79bb\u548c\u4fdd\u6301\u65f6\u95f4\u3002 \u8be6\u60c5\u8bf7\u53c2\u8003\u4e0b\u9762\u7684 V1.2 Eagle\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u66f4\u6362\u8df3\u7ebf\u5e3d\u5c06\u6a21\u5757\u8bbe\u7f6e\u4e3a\u53ef\u4ee5\u91cd\u65b0\u89e6\u53d1\u6216\u4e0d\u53ef\u91cd\u65b0\u89e6\u53d1\u3002\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - PIR MOTION SENSOR\n\n\nGrovePi_Plus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n\n\n\u4f7f\u7528Grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi +\u63d2\u5ea7 \nD8\n\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a\n\n\n\n\n  cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\n\u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\n\n\n\n   nano grove_pir_motion_sensor.py   # \nCtrl+x\n to exit #\n\n\n\n\nimport\n \ntime\n\n\nimport\n \ngrovepi\n\n\n\n# Connect the Grove PIR Motion Sensor to digital port D8\n\n\n# SIG,NC,VCC,GND\n\n\npir_sensor\n \n=\n \n8\n\n\n\ngrovepi\n.\npinMode\n(\npir_sensor\n,\nINPUT\n)\n\n\n\nwhile\n \nTrue\n:\n\n    \ntry\n:\n\n        \n# Sense motion, usually human, within the target range\n\n        \nif\n \ngrovepi\n.\ndigitalRead\n(\npir_sensor\n):\n\n            \nprint\n \nMotion Detected\n\n        \nelse\n:\n\n            \nprint\n \n-\n\n\n        \n# if your hold time is less than this, you might not see as many detections\n\n        \ntime\n.\nsleep\n(\n.\n2\n)\n\n\n    \nexcept\n \nIOError\n:\n\n        \nprint\n \nError\n\n\n\n- \u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n\n   sudo python grove_pir_motion_sensor.py\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle]\n \nGrove - PIR Motion Sensor Eagle File v1.2\n\n\n[Easyeda]\n \nSchematics at Easyeda\n\n\n[PDF]\n \nGrove - PIR Motion Sensor v1.2 Schematics\n\n\n[PDF]\n \nGrove - PIR Motion Sensor Eagle V1.2 PCB\n\n\n[Library]\n \nGithub repository for PIR Motion Sensor\n\n\n[Datasheet]\n \nBISS0001 Datasheet\n\n\n[Datasheet]\n \nFresnel lens 8120 Datasheet", 
            "title": "Grove-PIR Motion Sensor"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#_1", 
            "text": "\u5177\u6709 Grove \u517c\u5bb9\u63a5\u53e3  \u53ef\u8c03\u68c0\u6d4b\u8ddd\u79bb  \u53ef\u8c03\u8282\u4fdd\u6301\u65f6\u95f4    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#_2", 
            "text": "\u53c2\u6570  \u503c/\u8303\u56f4      \u5de5\u4f5c\u7535\u538b  3V\u20135V    \u5de5\u4f5c\u7535\u6d41(VCC = 3V)  100uA    \u5de5\u4f5c\u7535\u6d41(VCC = 5V)  150uA    \u6d4b\u91cf\u8303\u56f4  0.1 - 6m    \u9ed8\u8ba4\u68c0\u6d4b\u8ddd\u79bb  3m    \u4fdd\u6301\u65f6\u95f4  1 - 25s    \u5de5\u4f5c\u6ce2\u957f  7 - 14um    \u68c0\u6d4b\u89d2\u5ea6  120\u5ea6", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#_3", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#arduino", 
            "text": "\u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u4e86\u611f\u5e94\u8fd0\u52a8\u7684\u7b80\u5355\u5e94\u7528\u3002 \u5f53\u6709\u4eba\u5728\u5176\u68c0\u6d4b\u8303\u56f4\u5185\u79fb\u52a8\u65f6\uff0c\u5b83\u5c06\u901a\u8fc7 SIG \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\uff0cLED \u5c06\u70b9\u4eae\u3002 \u5426\u5219\uff0c\u5b83\u5c06\u8f93\u51fa\u4f4e\u7535\u5e73\u3002 \u8fd9\u6837\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u68c0\u6d4b\u662f\u5426\u6709\u4eba\u3002", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#_4", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a Grove - PIR MOTION SENSOR \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - PIR MOTION SENSOR  Base Shield           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u5c06 Grove - PIR \u8fd0\u52a8\u4f20\u611f\u5668\u8fde\u63a5\u5230 base shield \u7684  D2  \u7aef\u53e3\u3002  \u5c06 Grove - LED \u8fde\u63a5\u5230\u57fa\u5ea7\u5c4f\u853d\u7684  D4  \u7aef\u53e3\u3002  \u5c06 base Shield \u63d2\u5165 Arduino\u3002  \u4f7f\u7528 USB\u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#_5", 
            "text": "\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230Arduino\u3002   /*macro definitions of PIR motion sensor pin and LED pin*/  #define PIR_MOTION_SENSOR 2 //Use pin 2 to receive the signal from the module  #define LED 4 //the Grove - LED is connected to D4 of Arduino  void   setup ()  { \n     pinMode ( PIR_MOTION_SENSOR ,   INPUT ); \n     pinMode ( LED , OUTPUT );  }  void   loop ()  { \n     if ( isPeopleDetected ()) //if it detects the moving people? \n         digitalWrite ( LED ,   HIGH ); \n     else \n         digitalWrite ( LED ,   LOW );  }  /***************************************************************/  /*Function: Detect whether anyone moves in it s detecting range*/  /*Return:-boolean, true is someone detected.*/  boolean   isPeopleDetected ()  { \n     int   sensorValue   =   digitalRead ( PIR_MOTION_SENSOR ); \n     if ( sensorValue   ==   HIGH ) //if the sensor value is HIGH? \n     { \n         return   true ; //yes,return true \n     } \n     else \n     { \n         return   false ; //no,return false \n     }  }  \n- \u5f53\u6211\u4eec\u8d70\u52a8\u65f6\uff0cLED \u706f\u5c06\u4eae\u8d77\u3002   Note  \u53ef\u4ee5\u901a\u8fc7\u5728\u677f\u4e0a\u589e\u52a0\u4e24\u4e2a\u989d\u5916\u7684\u7535\u4f4d\u5668\u6765\u8c03\u6574\u68c0\u6d4b\u8ddd\u79bb\u548c\u4fdd\u6301\u65f6\u95f4\u3002 \u8be6\u60c5\u8bf7\u53c2\u8003\u4e0b\u9762\u7684 V1.2 Eagle\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u66f4\u6362\u8df3\u7ebf\u5e3d\u5c06\u6a21\u5757\u8bbe\u7f6e\u4e3a\u53ef\u4ee5\u91cd\u65b0\u89e6\u53d1\u6216\u4e0d\u53ef\u91cd\u65b0\u89e6\u53d1\u3002", 
            "title": "\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#raspberry-pi", 
            "text": "", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#_6", 
            "text": "\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Raspberry pi  Grove - PIR MOTION SENSOR  GrovePi_Plus           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa  \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002  \u4f7f\u7528Grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi +\u63d2\u5ea7  D8 \u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#_7", 
            "text": "\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a     cd yourpath/GrovePi/Software/Python/   \u627e\u5230\u8fd9\u884c\u4ee3\u7801      nano grove_pir_motion_sensor.py   #  Ctrl+x  to exit #  import   time  import   grovepi  # Connect the Grove PIR Motion Sensor to digital port D8  # SIG,NC,VCC,GND  pir_sensor   =   8  grovepi . pinMode ( pir_sensor , INPUT )  while   True : \n     try : \n         # Sense motion, usually human, within the target range \n         if   grovepi . digitalRead ( pir_sensor ): \n             print   Motion Detected \n         else : \n             print   - \n\n         # if your hold time is less than this, you might not see as many detections \n         time . sleep ( . 2 ) \n\n     except   IOError : \n         print   Error  \n- \u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b     sudo python grove_pir_motion_sensor.py", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-PIR_Motion_Sensor/#_8", 
            "text": "[Eagle]   Grove - PIR Motion Sensor Eagle File v1.2  [Easyeda]   Schematics at Easyeda  [PDF]   Grove - PIR Motion Sensor v1.2 Schematics  [PDF]   Grove - PIR Motion Sensor Eagle V1.2 PCB  [Library]   Github repository for PIR Motion Sensor  [Datasheet]   BISS0001 Datasheet  [Datasheet]   Fresnel lens 8120 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Hall_Sensor/", 
            "text": "Grove - Hall Sensor \u57fa\u4e8e\u970d\u5c14\u6548\u5e94\uff0c\u970d\u5c14\u6548\u5e94\u662f\u6a2a\u8de8\u5bfc\u4f53\u4e2d\u7684\u7535\u6d41\u548c\u5782\u76f4\u4e8e\u7535\u6d41\u7684\u78c1\u573a\u4ea7\u751f\u7535\u5bfc\u4f53\u4e0a\u7684\u7535\u538b\u5dee\u3002 \u8fd9\u4e2a Grove \u6709\u4e00\u4e2a continuous-time \u5f00\u5173\u3002 \u5f53\u5782\u76f4\u4e8e\u970d\u5c14\u4f20\u611f\u5668\u7684\u78c1\u573a\uff08\u5357\u6781\u6027\uff09\u8d85\u8fc7\u6700\u5927\u503c BOP \u65f6\uff0c\u8fd9\u4e9b\u8bbe\u5907\u7684\u8f93\u51fa\u5207\u6362\u4e3a\u4f4e\u7535\u5e73\uff08\u5bfc\u901a\uff09\uff0c\u5e76\u4e14\u5f53\u78c1\u573a\u6d88\u5931\u65f6\uff0c\u5b83\u4f1a\u5207\u6362\u9ad8\u7535\u5e73\uff08\u5173\u95ed\uff09\u3002 \u8be5\u90e8\u4ef6\u53ef\u7528\u4e8e\u6d4b\u91cf RPM \u3002\n\n\n\n\n\u7248\u672c\u66f4\u65b0\n\n\n\n\n\n\n\n\n\u7248\u672c\u8c03\u6574\n\n\n\u63cf\u8ff0\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\n\n\n\n\n\n\n\nv0.9b\n\n\n\u9996\u6b21\u516c\u5f00\u53d1\u884c\n\n\n2011\u5e7410\u67083\u65e5\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\nGrove \u517c\u5bb9\u63a5\u53e3\n\n\n\u6709 400ns \u7684\u4e0a\u5347\u548c\u4e0b\u964d\u8fc7\u6e21\u671f\u3002\n\n\n\u9ad8\u7eed\u822a\u80fd\u529b\u970d\u5c14\u4f20\u611f\u5668\n\n\n\u53cd\u63a5\u7535\u6c60\u4fdd\u62a4\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\u503c\n\n\n\u6807\u51c6\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u7535\u6e90\u7535\u538b\n\n\n3.8\n\n\n5.0\n\n\n24\n\n\nV\n\n\n\n\n\n\n\u7535\u6e90\u7535\u6d41\n\n\n4.1\n\n\n-\n\n\n24\n\n\nmA\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-40\n\n\n-\n\n\n85\n\n\n\u00baC\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u521b\u65b0\u5e94\u7528\n\n\n\n\n\u8f6c\u901f\u4eea\u8868\u3002\n\n\n\u7b80\u5355\u76f4\u6d41\u7535\u673a\u3002\n\n\n\n\n\u5165\u95e8\n\n\nGrove - Hall Sensor \u901a\u8fc7\u5229\u7528 arduino / seeeduino \u4e0a\u53ef\u7528\u7684\u5916\u90e8\u7aef\u53e3\u6765\u4f7f\u7528\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6570\u5b57\u5f15\u811a \n2\n \u4e0a\u7684\u7aef\u53e3 \n0\n \u3002\u5bf9\u4e8e\u5176\u4ed6\u7aef\u53e3\uff0c\u8bf7\u53c2\u9605 \nattachInterrupt()\n\u3002\n\n\n\n\n\u4f7f\u7528\u6709 4 \u4e2a\u5f15\u811a\u7684\u8fde\u63a5\u7ebf\u5c06 Grove - Hall Sensor \u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684\u6570\u5b57\u7aef\u53e3 \n2\n \uff0c\u5e76\u5c06 Grove-LED \u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3 \n4\n \u3002\n\n\n\u7136\u540e\u4f7f\u7528 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC \u3002\n\n\n\u4e0b\u8f7d \n\u970d\u5c14\u4f20\u611f\u5668\u4ee3\u7801\n\n\n\u6253\u5f00\u4e24\u4e2a\u4ee3\u7801\u4e4b\u4e00\u3002 \u4f8b\u5982\u6f14\u793a \nMagnetControlLED\n\n\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\u5f53\u5357\u6781\u671d\u4e0a\u7684\u78c1\u94c1\u63a5\u8fd1\u4f20\u611f\u5668\u65f6\uff0c LED \u5c06\u4f1a\u4eae\u8d77\u3002 \u5426\u5219\uff0c LED \u5c06\u88ab\u5173\u95ed\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove-Hall Sensor Eagle File\n\n\nHall Sensor Demo Code\n\n\nA1101 datasheet", 
            "title": "Grove-Hall Sensor"
        }, 
        {
            "location": "/Grove-Hall_Sensor/#_1", 
            "text": "\u7248\u672c\u8c03\u6574  \u63cf\u8ff0  \u53d1\u5e03\u65e5\u671f      v0.9b  \u9996\u6b21\u516c\u5f00\u53d1\u884c  2011\u5e7410\u67083\u65e5", 
            "title": "\u7248\u672c\u66f4\u65b0"
        }, 
        {
            "location": "/Grove-Hall_Sensor/#_2", 
            "text": "Grove \u517c\u5bb9\u63a5\u53e3  \u6709 400ns \u7684\u4e0a\u5347\u548c\u4e0b\u964d\u8fc7\u6e21\u671f\u3002  \u9ad8\u7eed\u822a\u80fd\u529b\u970d\u5c14\u4f20\u611f\u5668  \u53cd\u63a5\u7535\u6c60\u4fdd\u62a4    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Hall_Sensor/#_3", 
            "text": "\u9879\u76ee  \u6700\u5c0f\u503c  \u6807\u51c6\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u7535\u6e90\u7535\u538b  3.8  5.0  24  V    \u7535\u6e90\u7535\u6d41  4.1  -  24  mA    \u5de5\u4f5c\u6e29\u5ea6  -40  -  85  \u00baC", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Hall_Sensor/#_4", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Hall_Sensor/#_5", 
            "text": "\u8f6c\u901f\u4eea\u8868\u3002  \u7b80\u5355\u76f4\u6d41\u7535\u673a\u3002", 
            "title": "\u521b\u65b0\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Hall_Sensor/#_6", 
            "text": "Grove - Hall Sensor \u901a\u8fc7\u5229\u7528 arduino / seeeduino \u4e0a\u53ef\u7528\u7684\u5916\u90e8\u7aef\u53e3\u6765\u4f7f\u7528\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6570\u5b57\u5f15\u811a  2  \u4e0a\u7684\u7aef\u53e3  0  \u3002\u5bf9\u4e8e\u5176\u4ed6\u7aef\u53e3\uff0c\u8bf7\u53c2\u9605  attachInterrupt() \u3002   \u4f7f\u7528\u6709 4 \u4e2a\u5f15\u811a\u7684\u8fde\u63a5\u7ebf\u5c06 Grove - Hall Sensor \u8fde\u63a5\u5230  Grove - Base Shield  \u7684\u6570\u5b57\u7aef\u53e3  2  \uff0c\u5e76\u5c06 Grove-LED \u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3  4  \u3002  \u7136\u540e\u4f7f\u7528 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC \u3002  \u4e0b\u8f7d  \u970d\u5c14\u4f20\u611f\u5668\u4ee3\u7801  \u6253\u5f00\u4e24\u4e2a\u4ee3\u7801\u4e4b\u4e00\u3002 \u4f8b\u5982\u6f14\u793a  MagnetControlLED     \u4e0a\u4f20\u4ee3\u7801\u3002  \u5f53\u5357\u6781\u671d\u4e0a\u7684\u78c1\u94c1\u63a5\u8fd1\u4f20\u611f\u5668\u65f6\uff0c LED \u5c06\u4f1a\u4eae\u8d77\u3002 \u5426\u5219\uff0c LED \u5c06\u88ab\u5173\u95ed\u3002", 
            "title": "\u5165\u95e8"
        }, 
        {
            "location": "/Grove-Hall_Sensor/#_7", 
            "text": "Grove-Hall Sensor Eagle File  Hall Sensor Demo Code  A1101 datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-3-Axis_Compass_V1.0/", 
            "text": "\u8be5\u6a21\u5757\u57fa\u4e8e\u78c1\u573a\u611f\u5e94\u82af\u7247 HMC5883L\uff0c\u53ef\u63d0\u4f9b\u9ad8\u8fbe 1\u00b0~2\u00b0 \u7684\u822a\u5411\u7cbe\u5ea6\u3002HMC5883L \u5305\u542b\u9ad8\u5206\u8fa8\u7387\u7684 HMC118X \u7cfb\u5217\u78c1\u573a\u4f20\u611f\u5668\uff0c\u53ca Honeywell \u516c\u53f8\u5f00\u53d1\u7684\u4e13\u7528\u653e\u5927\u5668\uff0c\u5177\u6709\u81ea\u52a8\u6d88\u9664\u529f\u80fd\uff0c\u504f\u79fb\u6d88\u9664\u548c 12 \u4f4d ADC\u3002 \u52a0\u4e0a\u5916\u56f4\u7535\u6e90\u7ba1\u7406\u7535\u8def\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ef\u7528\u4e8e\u4f4e\u6210\u672c\u7684\u7f57\u76d8\u548c\u78c1\u529b\u8ba1\u7684\u6613\u4e8e\u4f7f\u7528\u548c\u53ef\u9760\u7684\u7f57\u76d8\u6a21\u5757\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b : 3.3V, 5V\n\n\n\u7761\u7720\u6a21\u5f0f\u4e0b\u529f\u8017 : 2.5uA\n\n\n\u6d4b\u91cf\u6a21\u5f0f\u4e0b\u529f\u8017 : 640uA\n\n\n\u9ad8\u5206\u8fa8\u7387\n\n\nI2C \u63a5\u53e3\n\n\n\u517c\u5bb9 3.3V \u6216 5.0V \u5f00\u53d1\u5e73\u53f0\n\n\n\u6700\u5927 116Hz \u8f93\u51fa\u9891\u7387\n\n\n\u9ad8\u822a\u5411\u7cbe\u5ea6\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u8bfb\u53d6\u539f\u59cb\u6570\u636e\uff0c\u5982\u4f55\u4f7f\u7528\u672c\u5730\u78c1\u504f\u89d2\u6d4b\u91cf\u6570\u636e\uff0c\u4ee5\u53ca\u5982\u4f55\u83b7\u53d6\u65b9\u4f4d\u89d2\u3002\n\n\n\u9996\u5148\uff0c\u5728\u60a8\u8981\u91c7\u53d6\u4efb\u4f55\u64cd\u4f5c\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u51c6\u5907\u8981\u5728\u6f14\u793a\u4e2d\u4f7f\u7528\u7684\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u60a8\u5f53\u5730\u7684\u78c1\u504f\u89d2\u3002\n\n\n\u4f60\u53ef\u4ee5\u901a\u8fc7 \n\u78c1\u504f\u89d2\u7f51\u9875\n \u627e\u5230\u5b83\u3002 \u4f8b\u5982\uff0c\u6211\u7684\u662f -2\u00b037'\uff0c\u4e5f\u5c31\u662f -2.617 \u5ea6\u3002\n\n\n\u7136\u540e\u5c06\u5176\u4ece\u5ea6\u6570\u8f6c\u79fb\u5230\u5f27\u5ea6\uff0c\u7136\u540e\u5f97\u5230\u201c\u504f\u89d2\u201d\u3002 \u4f8b\u5982\uff0c\u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0cdeclinationAngle = -2.617 * \u03c0 / 180 = -0.0456752665 rad\u3002 \u4e09\u4e2a\u6709\u6548\u6570\u5b57\u5c31\u8db3\u591f\u4e86\uff0c\u6240\u4ee5\u6211\u4f1a\u628a\u5b83\u7f29\u77ed\u5230 -0.0456 rad\u3002 \u8fd9\u662f\u60a8\u5c06\u8981\u7528\u6f14\u793a\u4ee3\u7801\u66ff\u6362 \"declinationAngle\" \u503c\u7684\u53c2\u6570\u3002\n\n\n\u8ba9\u6211\u4eec\u5f00\u59cb\u8fd0\u884c\u5427\n\n\n\n\n\n\n\u628a 3-axis compass \u63d2\u5165\u5230 Grove - Base Shield \u7684 I2C \u53e3\n\n\n\n\n\n\n\u4e0b\u8f7d\u5e93\u6587\u4ef6 : \nDigital Compass Library\n\u3002\u901a\u8fc7\u8def\u5f84 : \n..\\arduino-1.0.1\\libraries\n \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\n\n\n\n\n\n\n\u901a\u8fc7\u8def\u5f84 : \nFile(\u6587\u4ef6) -\nExample(\u793a\u4f8b) -\nDigital Compass -\nHMC5883L_Example\n \u6253\u5f00\u793a\u4f8b\n\n\n\n\n\n\n\n\n\u5c06\u53d8\u91cf \"declinitionAngle\" \u7684\u503c\u66ff\u6362\u4e3a\u5df2\u7ecf\u8ba1\u7b97\u51fa\u7684\u503c\u3002\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\n\n\n\n\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u68c0\u67e5\u8f93\u51fa\u7ed3\u679c\u3002\n\n\n\n\n\n\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u4f60\u9700\u8981 Raspberry pi \u548c \u4e00\u4e2a Grovepi \u6216 Grovepi+\u3002\n\n\n2.\u60a8\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u6309\u7167 \n\u8fd9\u91cc\n \u6765\u914d\u7f6e\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165 Grovepi \u7684\u63d2\u5ea7 i2c-x(1~3)\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n\n   cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\n\n\u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\n\n\n\n    nano grove_compass_lib.py       \n    nano grove_compass_example.py    \n\n\n\n    import grove_compass_lib\n    c=grove_compass_lib.compass()\n    while True:\n            print \nX:\n,c.x,\nY:\n,c.y,\nX:\n,c.z,\nHeading:\n,c.headingDegrees\n            c.update()\n            time.sleep(.1)\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\n    sudo python grove_compass_example.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-3-Axis Digital Compass Eagle File\n\n\n[\u5e93\u6587\u4ef6]\n \nDigital Compass Library\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nHMC5883.pdf", 
            "title": "Grove-3 Axis Compass V1.0"
        }, 
        {
            "location": "/Grove-3-Axis_Compass_V1.0/#_1", 
            "text": "\u8f93\u5165\u7535\u538b : 3.3V, 5V  \u7761\u7720\u6a21\u5f0f\u4e0b\u529f\u8017 : 2.5uA  \u6d4b\u91cf\u6a21\u5f0f\u4e0b\u529f\u8017 : 640uA  \u9ad8\u5206\u8fa8\u7387  I2C \u63a5\u53e3  \u517c\u5bb9 3.3V \u6216 5.0V \u5f00\u53d1\u5e73\u53f0  \u6700\u5927 116Hz \u8f93\u51fa\u9891\u7387  \u9ad8\u822a\u5411\u7cbe\u5ea6    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-3-Axis_Compass_V1.0/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-3-Axis_Compass_V1.0/#_2", 
            "text": "", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-3-Axis_Compass_V1.0/#arduino", 
            "text": "\u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u8bfb\u53d6\u539f\u59cb\u6570\u636e\uff0c\u5982\u4f55\u4f7f\u7528\u672c\u5730\u78c1\u504f\u89d2\u6d4b\u91cf\u6570\u636e\uff0c\u4ee5\u53ca\u5982\u4f55\u83b7\u53d6\u65b9\u4f4d\u89d2\u3002  \u9996\u5148\uff0c\u5728\u60a8\u8981\u91c7\u53d6\u4efb\u4f55\u64cd\u4f5c\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u51c6\u5907\u8981\u5728\u6f14\u793a\u4e2d\u4f7f\u7528\u7684\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u60a8\u5f53\u5730\u7684\u78c1\u504f\u89d2\u3002  \u4f60\u53ef\u4ee5\u901a\u8fc7  \u78c1\u504f\u89d2\u7f51\u9875  \u627e\u5230\u5b83\u3002 \u4f8b\u5982\uff0c\u6211\u7684\u662f -2\u00b037'\uff0c\u4e5f\u5c31\u662f -2.617 \u5ea6\u3002  \u7136\u540e\u5c06\u5176\u4ece\u5ea6\u6570\u8f6c\u79fb\u5230\u5f27\u5ea6\uff0c\u7136\u540e\u5f97\u5230\u201c\u504f\u89d2\u201d\u3002 \u4f8b\u5982\uff0c\u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0cdeclinationAngle = -2.617 * \u03c0 / 180 = -0.0456752665 rad\u3002 \u4e09\u4e2a\u6709\u6548\u6570\u5b57\u5c31\u8db3\u591f\u4e86\uff0c\u6240\u4ee5\u6211\u4f1a\u628a\u5b83\u7f29\u77ed\u5230 -0.0456 rad\u3002 \u8fd9\u662f\u60a8\u5c06\u8981\u7528\u6f14\u793a\u4ee3\u7801\u66ff\u6362 \"declinationAngle\" \u503c\u7684\u53c2\u6570\u3002  \u8ba9\u6211\u4eec\u5f00\u59cb\u8fd0\u884c\u5427    \u628a 3-axis compass \u63d2\u5165\u5230 Grove - Base Shield \u7684 I2C \u53e3    \u4e0b\u8f7d\u5e93\u6587\u4ef6 :  Digital Compass Library \u3002\u901a\u8fc7\u8def\u5f84 :  ..\\arduino-1.0.1\\libraries  \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d    \u901a\u8fc7\u8def\u5f84 :  File(\u6587\u4ef6) - Example(\u793a\u4f8b) - Digital Compass - HMC5883L_Example  \u6253\u5f00\u793a\u4f8b     \u5c06\u53d8\u91cf \"declinitionAngle\" \u7684\u503c\u66ff\u6362\u4e3a\u5df2\u7ecf\u8ba1\u7b97\u51fa\u7684\u503c\u3002    \u4e0a\u4f20\u4ee3\u7801\u3002    \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u68c0\u67e5\u8f93\u51fa\u7ed3\u679c\u3002", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-3-Axis_Compass_V1.0/#raspberry-pi", 
            "text": "1.\u4f60\u9700\u8981 Raspberry pi \u548c \u4e00\u4e2a Grovepi \u6216 Grovepi+\u3002  2.\u60a8\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u6309\u7167  \u8fd9\u91cc  \u6765\u914d\u7f6e\u3002  3.\u8fde\u63a5   \u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165 Grovepi \u7684\u63d2\u5ea7 i2c-x(1~3)\u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :     cd yourpath/GrovePi/Software/Python/   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :       nano grove_compass_lib.py       \n    nano grove_compass_example.py          import grove_compass_lib\n    c=grove_compass_lib.compass()\n    while True:\n            print  X: ,c.x, Y: ,c.y, X: ,c.z, Heading: ,c.headingDegrees\n            c.update()\n            time.sleep(.1)  5.\u8fd0\u884c\u4ee3\u7801\u3002     sudo python grove_compass_example.py", 
            "title": "\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-3-Axis_Compass_V1.0/#_3", 
            "text": "[Eagle\u6587\u4ef6]   Grove-3-Axis Digital Compass Eagle File  [\u5e93\u6587\u4ef6]   Digital Compass Library  [\u82af\u7247\u6570\u636e\u624b\u518c]   HMC5883.pdf", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/", 
            "text": "Grove - 6-Axis Accelerometer\nGyroscope \u662f\u4e00\u79cd\u628a Grove \u63a5\u53e3\u548c\u96c6\u6210\u4f20\u611f\u5668\u7ec4\u5408\u7684\u4f20\u611f\u5668\uff0c\u540c\u65f6\u5b83\u4e5f\u5305\u542b 3 \u8f74\u6570\u5b57\u52a0\u901f\u5ea6\u8ba1\u548c 3 \u8f74\u6570\u5b57\u9640\u87ba\u4eea\u3002\n\n\n\u5b83\u5177\u6709\u6781\u4f4e\u529f\u8017\u6570\u5b57\u82af\u7247 LSM6DS3 (\ndatasheet\n) \u548c\u5185\u7f6e\u7535\u6e90\u8c03\u8282\u5668\uff0c\u4ee5\u53ca\u5f88\u9ad8\u7075\u654f\u5ea6\u9ad8\uff0c\u7eff\u8272\u79d1\u6280\u548c\u4f4e\u566a\u97f3\u5e72\u6270\u3002 \u5b83\u53ef\u4ee5\u7528\u4e8e\u5236\u4f5c\u9700\u8981\u4e0d\u540c\u7075\u654f\u5ea6\u52a0\u901f\u5ea6\u8ba1\u548c\u8bbe\u5b9a\u4e0d\u540c\u89d2\u901f\u5ea6\u6d4b\u91cf\u8303\u56f4\u7684\u9879\u76ee\u3002\u5982\u679c\u63d0\u4f9b\u8be6\u7ec6\u7684 SDK \uff0c\u5b83\u53ef\u4ee5\u4f7f\u5236\u4f5c\u5f00\u53d1\u8fc7\u7a0b\u66f4\u5feb\u6377\u3002\n\n\n\u8be5\u4ea7\u54c1\u53ef\u7528\u4e8e\u503e\u659c\uff0c\u8fd0\u52a8\u548c\u6c34\u9f99\u5934\u611f\u5e94\u7b49\u4e0d\u540c\u5e94\u7528\uff0c\u5982\u673a\u5668\u4eba\uff0cIoT \u8bbe\u5907\u548c\u6d88\u8d39\u7535\u5b50\u8bbe\u5907\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\nGrove \u63a5\u53e3\u548c\u9ad8\u7ecf\u6d4e\u6027\u3002\n\n\n6 DOF \u8fd0\u52a8\u6570\u636e\u7684\u6570\u5b57\u8f93\u51fa\u3002\n\n\n\u00b12 /\u00b14 /\u00b18 /\u00b116 g \u5168\u5c3a\u5bf8\u7cbe\u7b80\u52a0\u901f\u5ea6\u611f\u5e94\u8303\u56f4\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u73af\u5883\u3002\n\n\n\u00b1125\uff0c\u00b1245\uff0c\u00b1500\uff0c\u00b11000\uff0c\u00b12000\u5ea6/\u79d2\uff08dps\uff09\uff0c\u7528\u4e8e\u89d2\u901f\u7387\u6d4b\u91cf\u8303\u56f4\u4f7f\u5176\u5177\u6709\u901a\u7528\u6027\u3002\n\n\n\u8be6\u7ec6\u7684 SDK \uff0c\u4fbf\u4e8e\u7f16\u7a0b\u3002\n\n\n\u53ef\u9760\u6570\u636e\u91c7\u96c6\u8c03\u8282\u7535\u6e90\u3002\n\n\n\u9488\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u7684\u7f16\u7a0b\u4e2d\u65ad\u3002\n\n\n8 kB \u6570\u636e\u7f13\u51b2\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u521b\u65b0\u5e94\u7528\n\n\n\n\n\u673a\u5668\u4eba\n\n\n\u5546\u7528\u578b\u98de\u673a\n\n\n\u7535\u8111\u8f93\u5165\u8bbe\u5907\n\n\n\u53ef\u7a7f\u6234\u8bbe\u5907\u3002\n\n\n\u7269\u8054\u7f51\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\n\u6570\u636e\u8868\n.\u3002\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u8303\u56f4\n\n\n\n\n\n\n\n\n\n\n\u6a21\u62df\u7535\u6e90\u7535\u538b\uff1a\n\n\n5V/3.3V(DC)\n\n\n\n\n\n\n\u80fd\u91cf\u6d88\u8017\uff1a\n\n\n\u7ec4\u5408\u6b63\u5e38\u6a21\u5f0f\u4e0b\u4e3a 0.9 mA \uff0c 1.6 kHz \u7684\u7ec4\u5408\u9ad8\u6027\u80fd\u6a21\u5f0f\u4e3a 1.25 mA\n\n\n\n\n\n\n\u7ebf\u6027\u52a0\u901f\u5ea6\u6d4b\u91cf\u8303\u56f4\n\n\n\u00b12 /\u00b14 /\u00b18 /\u00b116g \u6ee1\u91cf\u7a0b\uff08\u6807\u51c6\u503c\uff09\n\n\n\n\n\n\n\u89d2\u901f\u7387\u6d4b\u91cf\u8303\u56f4\n\n\n\u00b1125, \u00b1245, \u00b1500, \u00b11000, \u00b12000 dps(\u6807\u51c6\u503c )\n\n\n\n\n\n\n\u7ebf\u6027\u52a0\u901f\u7075\u654f\u5ea6\n\n\n0.061(FS = \u00b12), 0.122(FS = \u00b14), 0.244(FS = \u00b18), 0.488(FS = \u00b116) mg/LSB\n\n\n\n\n\n\n\u89d2\u901f\u7387\u7075\u654f\u5ea6\n\n\n4.375(FS = \u00b1125), 8.75(FS = \u00b1245), 17.50(FS = \u00b1500), 35(FS = \u00b11000), 70(FS = \u00b12000)\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u6ce8\u610f\n\n\u5982\u679c\u6ca1\u6709\u7279\u5b9a\u5e73\u53f0\u4ee3\u8868\u7248\u672c\u53f7\uff0c\u5219\u8868\u793a\u8be5\u4ea7\u54c1\u652f\u6301\u8be5\u5e73\u53f0\u5185\u7684\u6240\u6709\u7248\u672c\u3002 \u4f46\u662f\u60a8\u5c06\u9700\u8981\u5176\u4ed6\u76f8\u5e94\u7684 Grove \u7248\u5757\uff0c\u4f8b\u5982 Grove - Base Shield v2 \u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\nGrove \u90e8\u4ef6\n \n\n\u8fde\u63a5\u4e3b\u63a7\u677f\u5982 Seeeduino \u677f\u4e0e\u9a71\u52a8\u677f\u3002\n\n\nLSM6DS3\n \n\nMain MCU\n\n\n\u90e8\u4ef6\u5217\u8868\n\n\n\n\n\n\n\n\n\u90e8\u4ef6\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - 6-Axis Accelerometer\nGyroscope\n\n\n1PC\n\n\n\n\n\n\nGrove \u7ebf\n\n\n1PC\n\n\n\n\n\n\n\n\n\u5165\u95e8\n\n\n\u6750\u6599\u51c6\u5907\n\n\n\n\n\n\nSeeeduino * 1\n\n\n\n\n\n\nGrove - Base Shield v2\n\n\n\n\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6307\u5357\u6765\u6784\u5efa\u9002\u5f53\u7684 IDE \uff1a\n\n\n\n\n\u6ce8\u610f\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9009\u62e9\u4e86 Seeeduino \uff0c\u5b83\u4e0e Arduino \u517c\u5bb9\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 Arduino\u677f\u3002\n\n\n\n\nWindows\u5165\u95e8\n\n\n Mac OS X \u5165\u95e8\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\n\nnote\n\n\u5c06 Grove - 6-Axis Accelerometer\n \u8fde\u63a5\u5230 Grove - Base shield \u4e0a\u7684 **I\n2\nC** \u63a5\u53e3\u3002 \u5e76\u7528 USB \u6570\u636e\u7ebf\u8fde\u63a5\u5230\u7535\u6e90\u3002\n\n\n\n\n\u7b80\u5355\u6f14\u793a\n\n\n\u4e0b\u8f7d Grove - 6-Axis Accelerometer\nGyroscope \u7684 \n\u7a0b\u5e8f\u5e93\n\u3002 \u8bf7\u53c2\u9605\n\u4ece Seeed \u7684 Github \u4e0b\u8f7d\u7684\u6f14\u793a\u6307\u5357\n\uff0c\u4ee5\u4fbf\u66f4\u5feb\u5730\u5c06\u4ee3\u7801\u8f7d\u5165\u5230\u4e3b\u63a7\u5236\u5668\u677f\u5b50\u4e0a\u3002 \u603b\u5171\u6709\u4e09\u4e2a\u6f14\u793a\u793a\u4f8b\u5728\u5b50\u76ee\u5f55 \n\u793a\u4f8b\n\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle]\n \nGrove - 6-Axis Accelerometer\nGyroscopev 1.0\n\n\n[PDF]\n \nGrove - 6-Axis Accelerometer\nGyroscopev 1.0 SCH\n\n\n[PDF]\n \nGrove - 6-Axis Accelerometer\nGyroscopev 1.0 PCB\n\n\n[Library]\n \nGrove-6-Axis_AccelerometerAndGyroscope\n\n\n[Datasheet]\n \nDatasheet of LSM6DS3", 
            "title": "Grove-6 Axis AccelerometerAndGyroscope"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_1", 
            "text": "Grove \u63a5\u53e3\u548c\u9ad8\u7ecf\u6d4e\u6027\u3002  6 DOF \u8fd0\u52a8\u6570\u636e\u7684\u6570\u5b57\u8f93\u51fa\u3002  \u00b12 /\u00b14 /\u00b18 /\u00b116 g \u5168\u5c3a\u5bf8\u7cbe\u7b80\u52a0\u901f\u5ea6\u611f\u5e94\u8303\u56f4\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u73af\u5883\u3002  \u00b1125\uff0c\u00b1245\uff0c\u00b1500\uff0c\u00b11000\uff0c\u00b12000\u5ea6/\u79d2\uff08dps\uff09\uff0c\u7528\u4e8e\u89d2\u901f\u7387\u6d4b\u91cf\u8303\u56f4\u4f7f\u5176\u5177\u6709\u901a\u7528\u6027\u3002  \u8be6\u7ec6\u7684 SDK \uff0c\u4fbf\u4e8e\u7f16\u7a0b\u3002  \u53ef\u9760\u6570\u636e\u91c7\u96c6\u8c03\u8282\u7535\u6e90\u3002  \u9488\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u7684\u7f16\u7a0b\u4e2d\u65ad\u3002  8 kB \u6570\u636e\u7f13\u51b2\u3002    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_2", 
            "text": "\u673a\u5668\u4eba  \u5546\u7528\u578b\u98de\u673a  \u7535\u8111\u8f93\u5165\u8bbe\u5907  \u53ef\u7a7f\u6234\u8bbe\u5907\u3002  \u7269\u8054\u7f51", 
            "title": "\u521b\u65b0\u5e94\u7528"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_3", 
            "text": "\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u6570\u636e\u8868 .\u3002     \u53c2\u6570  \u8303\u56f4      \u6a21\u62df\u7535\u6e90\u7535\u538b\uff1a  5V/3.3V(DC)    \u80fd\u91cf\u6d88\u8017\uff1a  \u7ec4\u5408\u6b63\u5e38\u6a21\u5f0f\u4e0b\u4e3a 0.9 mA \uff0c 1.6 kHz \u7684\u7ec4\u5408\u9ad8\u6027\u80fd\u6a21\u5f0f\u4e3a 1.25 mA    \u7ebf\u6027\u52a0\u901f\u5ea6\u6d4b\u91cf\u8303\u56f4  \u00b12 /\u00b14 /\u00b18 /\u00b116g \u6ee1\u91cf\u7a0b\uff08\u6807\u51c6\u503c\uff09    \u89d2\u901f\u7387\u6d4b\u91cf\u8303\u56f4  \u00b1125, \u00b1245, \u00b1500, \u00b11000, \u00b12000 dps(\u6807\u51c6\u503c )    \u7ebf\u6027\u52a0\u901f\u7075\u654f\u5ea6  0.061(FS = \u00b12), 0.122(FS = \u00b14), 0.244(FS = \u00b18), 0.488(FS = \u00b116) mg/LSB    \u89d2\u901f\u7387\u7075\u654f\u5ea6  4.375(FS = \u00b1125), 8.75(FS = \u00b1245), 17.50(FS = \u00b1500), 35(FS = \u00b11000), 70(FS = \u00b12000)", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#platforms-supported", 
            "text": "\u6ce8\u610f \n\u5982\u679c\u6ca1\u6709\u7279\u5b9a\u5e73\u53f0\u4ee3\u8868\u7248\u672c\u53f7\uff0c\u5219\u8868\u793a\u8be5\u4ea7\u54c1\u652f\u6301\u8be5\u5e73\u53f0\u5185\u7684\u6240\u6709\u7248\u672c\u3002 \u4f46\u662f\u60a8\u5c06\u9700\u8981\u5176\u4ed6\u76f8\u5e94\u7684 Grove \u7248\u5757\uff0c\u4f8b\u5982 Grove - Base Shield v2 \u3002", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_4", 
            "text": "Grove \u90e8\u4ef6   \n\u8fde\u63a5\u4e3b\u63a7\u677f\u5982 Seeeduino \u677f\u4e0e\u9a71\u52a8\u677f\u3002  LSM6DS3   \nMain MCU", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_5", 
            "text": "\u90e8\u4ef6\u540d\u79f0  \u6570\u91cf      Grove - 6-Axis Accelerometer Gyroscope  1PC    Grove \u7ebf  1PC", 
            "title": "\u90e8\u4ef6\u5217\u8868"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_6", 
            "text": "", 
            "title": "\u5165\u95e8"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_7", 
            "text": "Seeeduino * 1    Grove - Base Shield v2", 
            "title": "\u6750\u6599\u51c6\u5907"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_8", 
            "text": "\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6307\u5357\u6765\u6784\u5efa\u9002\u5f53\u7684 IDE \uff1a   \u6ce8\u610f \n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9009\u62e9\u4e86 Seeeduino \uff0c\u5b83\u4e0e Arduino \u517c\u5bb9\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 Arduino\u677f\u3002  Windows\u5165\u95e8   Mac OS X \u5165\u95e8", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_9", 
            "text": "note \n\u5c06 Grove - 6-Axis Accelerometer  \u8fde\u63a5\u5230 Grove - Base shield \u4e0a\u7684 **I 2 C** \u63a5\u53e3\u3002 \u5e76\u7528 USB \u6570\u636e\u7ebf\u8fde\u63a5\u5230\u7535\u6e90\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_10", 
            "text": "\u4e0b\u8f7d Grove - 6-Axis Accelerometer Gyroscope \u7684  \u7a0b\u5e8f\u5e93 \u3002 \u8bf7\u53c2\u9605 \u4ece Seeed \u7684 Github \u4e0b\u8f7d\u7684\u6f14\u793a\u6307\u5357 \uff0c\u4ee5\u4fbf\u66f4\u5feb\u5730\u5c06\u4ee3\u7801\u8f7d\u5165\u5230\u4e3b\u63a7\u5236\u5668\u677f\u5b50\u4e0a\u3002 \u603b\u5171\u6709\u4e09\u4e2a\u6f14\u793a\u793a\u4f8b\u5728\u5b50\u76ee\u5f55  \u793a\u4f8b \u3002", 
            "title": "\u7b80\u5355\u6f14\u793a"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndGyroscope/#_11", 
            "text": "[Eagle]   Grove - 6-Axis Accelerometer Gyroscopev 1.0  [PDF]   Grove - 6-Axis Accelerometer Gyroscopev 1.0 SCH  [PDF]   Grove - 6-Axis Accelerometer Gyroscopev 1.0 PCB  [Library]   Grove-6-Axis_AccelerometerAndGyroscope  [Datasheet]   Datasheet of LSM6DS3", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndCompass_V2.0/", 
            "text": "Grove \u20136-Axis Accelerometer\nCompass V2.0 \u662f\u4e00\u4e2a 3 \u8f74\u52a0\u901f\u5ea6\u8ba1\u4e0e 3 \u8f74\u78c1\u4f20\u611f\u5668\u7684\u7ed3\u5408\u3002\u5b83\u662f Grove - 6-Axis Accelerometer\nCompass V1.0 \u7684\u5347\u7ea7\u7248\u672c\uff0c\u5b83\u57fa\u4e8e LSM303D \u4f20\u611f\u5668\u6a21\u5757\uff0cLSM303D \u7684\u53ef\u9009\u7ebf\u6027\u52a0\u901f\u5ea6\u91cf\u7a0b\u4e3a : \u00b12g / \u00b14g / \u00b18g / \u00b116g\uff0c\u53ef\u9009\u78c1\u573a\u91cf\u7a0b\u4e3a : \u00b12 /\u00b14 / \u00b18 / \u00b112 gauss\u3002\u52a0\u901f\u5ea6\u8ba1\u90e8\u4ef6\u548c\u78c1\u6027\u90e8\u4ef6\u90fd\u53ef\u4ee5\u5355\u72ec\u5173\u95ed\u4ee5\u964d\u4f4e\u529f\u8017\u3002\u901a\u8fc7\u8fd9\u4e2a\u6a21\u5757\u7684\u7ed9\u5b9a\u5e93\uff0cArduino \u53ef\u4ee5\u901a\u8fc7 I2C \u63a5\u53e3\u83b7\u53d6\u6570\u636e\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b : 5V\n\n\nSPI\uff0cI2C \u63a5\u53e3\n\n\n\u53ef\u9009\u91cf\u7a0b\n\n\n6 \u65b9\u5411\u68c0\u6d4b\n\n\n2 \u4e2a\u72ec\u7acb\u53ef\u7f16\u7a0b\u4e2d\u65ad\u53d1\u751f\u5668\n\n\n\u6389\u7535\u6a21\u5f0f\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb [Grove System](\n\n\n\n\nhttp://seeed.wiki/Grove_System/\n)\n\n\nPlatforms Supported\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n\u2460I2C \u63a5\u53e3\n\n\n\u2461SPI \u63a5\u53e3\n\n\n\u2462I2C \u6216 SPI \u7684\u9009\u62e9\u710a\u76d8 (\u9ed8\u8ba4 I2C)\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528 SPI\uff0c\u9694\u65ad\u710a\u76d8\u8fde\u63a5\u3002\n\n\n\u2463\u4e2d\u65ad\u6570\u5b57\u8f93\u51fa\n\n\n\u2464\u5730\u5740\u9009\u62e9\u7684\u710a\u76d8\uff0c\u9ed8\u8ba4\u8fde\u63a5 b \u548c a \u7684\u5730\u5740\u662f 0x1E\uff0c\u5982\u679c\u8fde\u63a5 b \u548c c \u7684\u5730\u5740\u662f 0x1D\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528 SPI\uff0c\u8bf7\u5c06\u8be5\u710a\u76d8\u9694\u65ad\u5e76\u8fde\u63a5\u5230\u53e6\u4e00\u4fa7\u3002\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\nLSM303D \u662f\u4e00\u6b3e\u5305\u542b 3 \u8f74\u52a0\u901f\u8ba1\u548c 3 \u8f74\u4f20\u611f\u5668\u7684 6 \u8f74\u4f20\u611f\u5668\u6a21\u5757\u3002\u5b83\u5177\u6709\u4e00\u4e2a I2C \u6570\u5b57\u63a5\u53e3\uff0c\u514d\u53bb\u4f7f\u7528\u6a21\u6570\u8f6c\u6362\u5668\u3002\n\n\nMCU \u53ef\u4ee5\u901a\u8fc7 I2C \u63a5\u53e3\u76f4\u63a5\u91c7\u96c6\u6570\u636e\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u5427\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u5728 Seeeduino \u4e0a\u6709 I2C \u7684 Grove \u63a5\u53e3\uff0c\u53ea\u9700\u8981\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06\u6a21\u5757\u8fde\u63a5\u5230 I2C \u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\u901a\u8fc7 USB \u7ebf\u7f06\u5c06 Seeeduino \u8fde\u63a5\u5230 PC \u4ee5\u7ed9\u7cfb\u7edf\u4f9b\u7535\u3002\n\n\n\n\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20\n\n\n\n\n\u4e0b\u8f7d \ndemo_code\n\uff0c\u5b83\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u8be5\u6a21\u5757\u6765\u8ba1\u7b97\u65b9\u5411\u3002\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u53ef\u4ee5\u770b\u89c1\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b :\n\n\n\n\n\n\n\n\n\u60a8\u53ef\u4ee5\u770b\u5230\u52a0\u901f\u5ea6\u503c\u548c\u78c1\u5317\u4e0e x \u8f74\u4e4b\u95f4\u7684\u987a\u65f6\u9488\u89d2\u5ea6\u3002\n\n\n\n\n\n\n\u5148\u663e\u793a X/Y/Z 3 \u8f74\u7684\u52a0\u901f\u5ea6;\u7136\u540e\u8ba1\u7b97\u78c1\u5317\u548c x \u8f74\u4e4b\u95f4\u7684\u987a\u65f6\u9488\u89d2\u5ea6\u3002\n\n\n\u8fd8\u8ba1\u7b97\u4e86\u78c1\u5317\u4e0e x \u8f74\u6295\u5f71\u4e4b\u95f4\u7684\u987a\u65f6\u9488\u89d2\u5ea6\u3002\n\n\n\u53c2\u9605 \n\u8fd9\u91cc\n \u4e86\u89e3\u6709\u5173\u6b64\u53c2\u6570\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\n\n\n\n\n\n\n\nNotes\n\n\n1.  \u6240\u6709 ST MEMS \u52a0\u901f\u5ea6\u8ba1\u90fd\u7ecf\u8fc7\u5de5\u5382\u6821\u51c6\uff0c\u907f\u514d\u5728\u5927\u591a\u6570\u5e94\u7528\u4e2d\u9700\u8981\u8fdb\u4e00\u6b65\u6821\u51c6\u3002\u4f46\u662f\u4e3a\u4e86\u8fbe\u5230\u4f4e\u4e8e 2\u00b0 \u7684\u822a\u5411\u7cbe\u5ea6\uff0c\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u6821\u51c6\u7a0b\u5e8f\u3002\n\n\n2.  \u6d4b\u8bd5\u78c1\u5317\u548c x \u8f74\u4e4b\u95f4\u7684\u987a\u65f6\u9488\u89d2\u5ea6\u65f6\uff0c\u53ef\u4ee5\u5c06 Xa \u8f74\u5bf9\u9f50\u5230\u4efb\u610f\u65b9\u5411\uff0c\u4f46\u4e0d\u8981\u4f7f\u5176\u671d\u4e0b\u3002 \u53c2\u8003\u4e0b\u9762\u7684\u56fe\u7247 :\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\n \n6-Axis_Accelerometer%26Compass_v2.0 eagle file\n\n\n[\u5e93\u6587\u4ef6]\n \n6-Axis Accelerometer\nCompass v2.0 Library\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nLSM303D_datashet", 
            "title": "Grove-6-Axis AccelerometerAndCompass V2.0"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndCompass_V2.0/#_1", 
            "text": "\u8f93\u5165\u7535\u538b : 5V  SPI\uff0cI2C \u63a5\u53e3  \u53ef\u9009\u91cf\u7a0b  6 \u65b9\u5411\u68c0\u6d4b  2 \u4e2a\u72ec\u7acb\u53ef\u7f16\u7a0b\u4e2d\u65ad\u53d1\u751f\u5668  \u6389\u7535\u6a21\u5f0f    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb [Grove System](   http://seeed.wiki/Grove_System/ )", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndCompass_V2.0/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndCompass_V2.0/#_2", 
            "text": "\u2460I2C \u63a5\u53e3  \u2461SPI \u63a5\u53e3  \u2462I2C \u6216 SPI \u7684\u9009\u62e9\u710a\u76d8 (\u9ed8\u8ba4 I2C)\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528 SPI\uff0c\u9694\u65ad\u710a\u76d8\u8fde\u63a5\u3002  \u2463\u4e2d\u65ad\u6570\u5b57\u8f93\u51fa  \u2464\u5730\u5740\u9009\u62e9\u7684\u710a\u76d8\uff0c\u9ed8\u8ba4\u8fde\u63a5 b \u548c a \u7684\u5730\u5740\u662f 0x1E\uff0c\u5982\u679c\u8fde\u63a5 b \u548c c \u7684\u5730\u5740\u662f 0x1D\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528 SPI\uff0c\u8bf7\u5c06\u8be5\u710a\u76d8\u9694\u65ad\u5e76\u8fde\u63a5\u5230\u53e6\u4e00\u4fa7\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndCompass_V2.0/#_3", 
            "text": "LSM303D \u662f\u4e00\u6b3e\u5305\u542b 3 \u8f74\u52a0\u901f\u8ba1\u548c 3 \u8f74\u4f20\u611f\u5668\u7684 6 \u8f74\u4f20\u611f\u5668\u6a21\u5757\u3002\u5b83\u5177\u6709\u4e00\u4e2a I2C \u6570\u5b57\u63a5\u53e3\uff0c\u514d\u53bb\u4f7f\u7528\u6a21\u6570\u8f6c\u6362\u5668\u3002  MCU \u53ef\u4ee5\u901a\u8fc7 I2C \u63a5\u53e3\u76f4\u63a5\u91c7\u96c6\u6570\u636e\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u5427\u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndCompass_V2.0/#_4", 
            "text": "\u786c\u4ef6\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u5728 Seeeduino \u4e0a\u6709 I2C \u7684 Grove \u63a5\u53e3\uff0c\u53ea\u9700\u8981\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06\u6a21\u5757\u8fde\u63a5\u5230 I2C \u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\u3002  \u901a\u8fc7 USB \u7ebf\u7f06\u5c06 Seeeduino \u8fde\u63a5\u5230 PC \u4ee5\u7ed9\u7cfb\u7edf\u4f9b\u7535\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndCompass_V2.0/#_5", 
            "text": "\u4e0b\u8f7d  demo_code \uff0c\u5b83\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u8be5\u6a21\u5757\u6765\u8ba1\u7b97\u65b9\u5411\u3002  \u4e0a\u4f20\u4ee3\u7801\u3002   \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u53ef\u4ee5\u770b\u89c1\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b :     \u60a8\u53ef\u4ee5\u770b\u5230\u52a0\u901f\u5ea6\u503c\u548c\u78c1\u5317\u4e0e x \u8f74\u4e4b\u95f4\u7684\u987a\u65f6\u9488\u89d2\u5ea6\u3002    \u5148\u663e\u793a X/Y/Z 3 \u8f74\u7684\u52a0\u901f\u5ea6;\u7136\u540e\u8ba1\u7b97\u78c1\u5317\u548c x \u8f74\u4e4b\u95f4\u7684\u987a\u65f6\u9488\u89d2\u5ea6\u3002  \u8fd8\u8ba1\u7b97\u4e86\u78c1\u5317\u4e0e x \u8f74\u6295\u5f71\u4e4b\u95f4\u7684\u987a\u65f6\u9488\u89d2\u5ea6\u3002  \u53c2\u9605  \u8fd9\u91cc  \u4e86\u89e3\u6709\u5173\u6b64\u53c2\u6570\u7684\u66f4\u591a\u4fe1\u606f\u3002     Notes  1.  \u6240\u6709 ST MEMS \u52a0\u901f\u5ea6\u8ba1\u90fd\u7ecf\u8fc7\u5de5\u5382\u6821\u51c6\uff0c\u907f\u514d\u5728\u5927\u591a\u6570\u5e94\u7528\u4e2d\u9700\u8981\u8fdb\u4e00\u6b65\u6821\u51c6\u3002\u4f46\u662f\u4e3a\u4e86\u8fbe\u5230\u4f4e\u4e8e 2\u00b0 \u7684\u822a\u5411\u7cbe\u5ea6\uff0c\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u6821\u51c6\u7a0b\u5e8f\u3002  2.  \u6d4b\u8bd5\u78c1\u5317\u548c x \u8f74\u4e4b\u95f4\u7684\u987a\u65f6\u9488\u89d2\u5ea6\u65f6\uff0c\u53ef\u4ee5\u5c06 Xa \u8f74\u5bf9\u9f50\u5230\u4efb\u610f\u65b9\u5411\uff0c\u4f46\u4e0d\u8981\u4f7f\u5176\u671d\u4e0b\u3002 \u53c2\u8003\u4e0b\u9762\u7684\u56fe\u7247 :", 
            "title": "\u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20"
        }, 
        {
            "location": "/Grove-6-Axis_AccelerometerAndCompass_V2.0/#_6", 
            "text": "[Eagle \u6587\u4ef6]   6-Axis_Accelerometer%26Compass_v2.0 eagle file  [\u5e93\u6587\u4ef6]   6-Axis Accelerometer Compass v2.0 Library  [\u82af\u7247\u6570\u636e\u624b\u518c]   LSM303D_datashet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-3-Axis_Analog_Accelerometer/", 
            "text": "ADXL335 \u662f\u5177\u6709\u4fe1\u53f7\u8c03\u8282\u7535\u538b\u8f93\u51fa\u7684\u8f7b\u8584\uff0c\u4f4e\u529f\u8017\uff0c\u5b8c\u6574\u529f\u80fd\u7684 3 \u8f74\u52a0\u901f\u5ea6\u8ba1\u3002 \u8be5\u4ea7\u54c1\u4ee5 \u00b13 g \u4e3a\u6700\u5c0f\u91cf\u7a0b\u6d4b\u91cf\u52a0\u901f\u5ea6\u3002\n\u8be5\u6a21\u5757\u88ab\u8bbe\u8ba1\u4e3a\u5206\u7ec4\u677f\uff0c\u56e0\u4e3a ADXL335 \u7684\u4fe1\u53f7\u662f\u6a21\u62df(\u66f4\u591a\u7aef\u53e3\u8bf7\u6c42)\u3002\u4f46\u677f\u5916\u578b\u662f Grove \u6a21\u5757\u5316\u7684\uff0c\u60a8\u53ef\u4ee5\u50cf\u5bf9\u5f85\u5176\u4ed6 Grove \u6a21\u5757\u4e00\u6837\u65b9\u4fbf\u5730\u4f7f\u7528\u3002\u4f20\u611f\u5668\u7ec4\u5408 3.3 \u548c 5V \u7535\u6e90\uff0c\u53ef\u7528\u4e8e\u6807\u51c6 Arduino \u8bbe\u5907\u548c Seeeduino Stalker\u3002\u4ee5\u4e0b\u7a0b\u5e8f\u4ee3\u7801\u5305\u62ec\u4e00\u7ea7\u8fc7\u6ee4\u5668\uff0c\u5f53\u4f20\u611f\u5668\u7528\u4e8e\u673a\u5668\u4eba\u6216\u73a9\u5177\u8f66\u65f6\u53ef\u4ee5\u5e73\u6ed1\u5730\u8fdb\u884c\u8f93\u51fa\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n3V \u81f3 5V \u5bbd\u8303\u56f4\u76f4\u6d41\u7535\n\n\nGrove \u5916\u578b\n\n\n3 \u8f74\u611f\u5e94\n\n\n\u5c0f\u5de7\u7684\u5305\u88c5 : 4\u00d74\u00d71.45mm LFCSP (\u5f15\u811a\u67b6\u6784\u82af\u7247\u7ea7\u5c01\u88c5)\n\n\n\u4f4e\u529f\u7387\u4e0b 3V \u65f6 350\u00b5A (\u5178\u578b\u503c)\n\n\n\u9ad8\u7075\u654f\u5ea6\n\n\n\u80fd\u627f\u53d7 10,000 g \u9707\u52a8\u6253\u51fb\n\n\n\u6bcf\u4e2a\u8f74\u4f7f\u7528\u5355\u4e2a\u7535\u5bb9\u5668\u8fdb\u884c BW \u8c03\u6574\n\n\n\u7b26\u5408 RoHS/WEEE \u65e0\u94c5\u6807\u51c6\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u8fd0\u52a8\u4f20\u611f\u5668\n\n\n\u9707\u52a8\u68c0\u6d4b\u5668\n\n\n\u632f\u52a8\u4f20\u611f\u5668\n\n\n\u73a9\u5177\u8f66\n\n\n\u673a\u5668\u4eba\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u4f7f\u7528\u987b\u77e5\n\n\n\n\n\u6211\u4eec\u5efa\u8bae\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\u9605\u8bfb\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u5b83\u5c06\u5e2e\u52a9\u60a8\u66f4\u591a\u5730\u4e86\u89e3 Arduino \u548c\u6211\u4eec\u7684\u4ea7\u54c1\uff0c\u540c\u65f6\u4e5f\u8ba9\u60a8\u66f4\u8f7b\u677e\u5730\u4f7f\u7528\u5f00\u653e\u5f0f\u786c\u4ef6\u3002\n\n\n\n\nArduino \u5165\u95e8\u6307\u5bfc\n\n\n\u4ec0\u4e48\u662f Grove system\n\n\n\u6211\u4e3a\u4ec0\u4e48\u9700\u8981 Base shield?\n\n\n\n\n\u9605\u8bfb\u540e\uff0c\u60a8\u5c06\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 Base shield \u548c Grove \u4ea7\u54c1\u4e0e Arduino \u914d\u5408\u4f7f\u7528\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u5427 !\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u8fd9\u4e2a\u4f20\u611f\u5668\u6ca1\u6709 Grove \u63a5\u53e3\uff0c\u9700\u8981\u901a\u8fc7\u675c\u90a6\u7ebf\u8fde\u63a5\u3002\n\n\n\n\nVCC\n \u63a5\u81f3\u7535\u6e90\u63d2\u53e3 (DC5V \u6216 DC3.3V), \nGND\n \u63a5\u5730, X \u81f3 Arduino \u6a21\u62df\u53e3 \nA0\n, Y \u81f3 \nA1\n, Z \u81f3 \nA2\n.\n    \n\n\n\u4e0b\u8f7d \n3-Axis Analog Accelerometer Library\n \u901a\u8fc7\u8def\u5f84 : \n..\\arduino-1.0.1\\libraries\n \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\u3002\n\n\n\u8c03\u8282\u4f20\u611f\u5668\n\n\n\n\n\u8fd9\u4e2a\u4f20\u611f\u5668\u662f\u6a21\u62df\u8bbe\u5907\uff0c\u5728\u4f7f\u7528\u524d\u9700\u8981\u8fdb\u884c\u6821\u5bf9\n\n\n\u6b65\u9aa4 1:\n \u6253\u5f00\u6f14\u793a : Calibration \u7136\u540e\u4e0b\u8f7d\u5230 Arduino \u4e0a\u3002\n\n\n\u6b65\u9aa4 2:\n \u6253\u5f00\u4e32\u884c\u663e\u793a\u5668\uff0c\u786e\u4fdd\u4f20\u611f\u5668\u5df2\u8fde\u63a5\u3002\u6309\u7167\u5370\u5237\u5728\u4f20\u611f\u5668\u677f\u4e0a\u7684\u8f74\u673a\u6784\u3002 \u9996\u5148\u786e\u5b9aZ\u8f74\u65b9\u5411\u662f\u7ad6\u76f4\u7684\uff0c\u5982\u679c\u4f60\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8f93\u5165\u4efb\u4f55\u5b57\u7b26\u3002 \u8c03\u6574\u4f20\u611f\u5668\u4f4d\u7f6e\uff0c\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\u4ee5\u83b7\u5f97 X \u8f74\u548c Y \u8f74\u65b9\u5411\u7684\u786e\u8ba4\u3002\n\n\n\n\n\u6b65\u9aa4 3:\n \u4f60\u53ef\u4ee5\u5f97\u5230\u5982\u4e0a\u6240\u793a\u7684\u503c\u3002 \u8bf7\u6839\u636e\u4ee5\u4e0b\u6570\u636e\u8c03\u6574 ADXL335.h \u7684\u5b8f\u5b9a\u4e49\n\n\n\n\n\u73b0\u5728\u6821\u51c6\u5df2\u7ecf\u5b8c\u6210\u4e86\n\n\n\n\n\u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801 : Measuring Acceleration\uff0c\u7136\u540e\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5c06\u4f20\u611f\u5668\u8f6c\u52a8\u4efb\u610f\u89d2\u5ea6\uff0c\u53ef\u4ee5\u770b\u5230\u4ece\u52a0\u901f\u5ea6\u8ba1\u53d1\u9001\u5230\u4e32\u884c\u76d1\u89c6\u5668\u7684\u6570\u5b57\u89d2\u5ea6\u503c\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - 3-Axis Analog Accelerometer Eagle File\n\n\n\n\n\n\n[\u5e93\u6587\u4ef6]\n \n3-Axis Analog Accelerometer Library\n\n\n\n\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nADXL335 datasheet.pdf\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \ngithub repository for 3-Axis Analog Accelerometer", 
            "title": "Grove-3 Axis Analog Accelerometer"
        }, 
        {
            "location": "/Grove-3-Axis_Analog_Accelerometer/#_1", 
            "text": "3V \u81f3 5V \u5bbd\u8303\u56f4\u76f4\u6d41\u7535  Grove \u5916\u578b  3 \u8f74\u611f\u5e94  \u5c0f\u5de7\u7684\u5305\u88c5 : 4\u00d74\u00d71.45mm LFCSP (\u5f15\u811a\u67b6\u6784\u82af\u7247\u7ea7\u5c01\u88c5)  \u4f4e\u529f\u7387\u4e0b 3V \u65f6 350\u00b5A (\u5178\u578b\u503c)  \u9ad8\u7075\u654f\u5ea6  \u80fd\u627f\u53d7 10,000 g \u9707\u52a8\u6253\u51fb  \u6bcf\u4e2a\u8f74\u4f7f\u7528\u5355\u4e2a\u7535\u5bb9\u5668\u8fdb\u884c BW \u8c03\u6574  \u7b26\u5408 RoHS/WEEE \u65e0\u94c5\u6807\u51c6    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-3-Axis_Analog_Accelerometer/#_2", 
            "text": "\u8fd0\u52a8\u4f20\u611f\u5668  \u9707\u52a8\u68c0\u6d4b\u5668  \u632f\u52a8\u4f20\u611f\u5668  \u73a9\u5177\u8f66  \u673a\u5668\u4eba", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-3-Axis_Analog_Accelerometer/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-3-Axis_Analog_Accelerometer/#_3", 
            "text": "\u6211\u4eec\u5efa\u8bae\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\u9605\u8bfb\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u5b83\u5c06\u5e2e\u52a9\u60a8\u66f4\u591a\u5730\u4e86\u89e3 Arduino \u548c\u6211\u4eec\u7684\u4ea7\u54c1\uff0c\u540c\u65f6\u4e5f\u8ba9\u60a8\u66f4\u8f7b\u677e\u5730\u4f7f\u7528\u5f00\u653e\u5f0f\u786c\u4ef6\u3002   Arduino \u5165\u95e8\u6307\u5bfc  \u4ec0\u4e48\u662f Grove system  \u6211\u4e3a\u4ec0\u4e48\u9700\u8981 Base shield?   \u9605\u8bfb\u540e\uff0c\u60a8\u5c06\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 Base shield \u548c Grove \u4ea7\u54c1\u4e0e Arduino \u914d\u5408\u4f7f\u7528\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u5427 !", 
            "title": "\u4f7f\u7528\u987b\u77e5"
        }, 
        {
            "location": "/Grove-3-Axis_Analog_Accelerometer/#_4", 
            "text": "\u8fd9\u4e2a\u4f20\u611f\u5668\u6ca1\u6709 Grove \u63a5\u53e3\uff0c\u9700\u8981\u901a\u8fc7\u675c\u90a6\u7ebf\u8fde\u63a5\u3002   VCC  \u63a5\u81f3\u7535\u6e90\u63d2\u53e3 (DC5V \u6216 DC3.3V),  GND  \u63a5\u5730, X \u81f3 Arduino \u6a21\u62df\u53e3  A0 , Y \u81f3  A1 , Z \u81f3  A2 .\n      \u4e0b\u8f7d  3-Axis Analog Accelerometer Library  \u901a\u8fc7\u8def\u5f84 :  ..\\arduino-1.0.1\\libraries  \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\u3002  \u8c03\u8282\u4f20\u611f\u5668   \u8fd9\u4e2a\u4f20\u611f\u5668\u662f\u6a21\u62df\u8bbe\u5907\uff0c\u5728\u4f7f\u7528\u524d\u9700\u8981\u8fdb\u884c\u6821\u5bf9  \u6b65\u9aa4 1:  \u6253\u5f00\u6f14\u793a : Calibration \u7136\u540e\u4e0b\u8f7d\u5230 Arduino \u4e0a\u3002  \u6b65\u9aa4 2:  \u6253\u5f00\u4e32\u884c\u663e\u793a\u5668\uff0c\u786e\u4fdd\u4f20\u611f\u5668\u5df2\u8fde\u63a5\u3002\u6309\u7167\u5370\u5237\u5728\u4f20\u611f\u5668\u677f\u4e0a\u7684\u8f74\u673a\u6784\u3002 \u9996\u5148\u786e\u5b9aZ\u8f74\u65b9\u5411\u662f\u7ad6\u76f4\u7684\uff0c\u5982\u679c\u4f60\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8f93\u5165\u4efb\u4f55\u5b57\u7b26\u3002 \u8c03\u6574\u4f20\u611f\u5668\u4f4d\u7f6e\uff0c\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\u4ee5\u83b7\u5f97 X \u8f74\u548c Y \u8f74\u65b9\u5411\u7684\u786e\u8ba4\u3002   \u6b65\u9aa4 3:  \u4f60\u53ef\u4ee5\u5f97\u5230\u5982\u4e0a\u6240\u793a\u7684\u503c\u3002 \u8bf7\u6839\u636e\u4ee5\u4e0b\u6570\u636e\u8c03\u6574 ADXL335.h \u7684\u5b8f\u5b9a\u4e49   \u73b0\u5728\u6821\u51c6\u5df2\u7ecf\u5b8c\u6210\u4e86   \u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801 : Measuring Acceleration\uff0c\u7136\u540e\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5c06\u4f20\u611f\u5668\u8f6c\u52a8\u4efb\u610f\u89d2\u5ea6\uff0c\u53ef\u4ee5\u770b\u5230\u4ece\u52a0\u901f\u5ea6\u8ba1\u53d1\u9001\u5230\u4e32\u884c\u76d1\u89c6\u5668\u7684\u6570\u5b57\u89d2\u5ea6\u503c\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-3-Axis_Analog_Accelerometer/#_5", 
            "text": "[Eagle\u6587\u4ef6]   Grove - 3-Axis Analog Accelerometer Eagle File    [\u5e93\u6587\u4ef6]   3-Axis Analog Accelerometer Library    [\u82af\u7247\u6570\u636e\u624b\u518c]   ADXL335 datasheet.pdf    [\u5176\u4ed6\u8d44\u6e90]   github repository for 3-Axis Analog Accelerometer", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-1.5g/", 
            "text": "Grove - 3-Axis Digital Accelerometer v1.2\n\n\n\n\nGrove - 3-Axis Digital Accelerometer v1.2b\n\n\n\n\n\n\n\n\n\n\n3-Axis Digital Accelerometer \u662f\u65b9\u5411\u68c0\u6d4b\uff0c\u624b\u52bf\u68c0\u6d4b\u548c\u8fd0\u52a8\u68c0\u6d4b\u7b49\u9879\u76ee\u4e2d\u7684\u5173\u952e\u90e8\u5206\u3002\u8fd9\u6b3e 3-Axis Digital Accelerometer(\u00b11.5g) \u57fa\u4e8e Freescale \u7684\u4f4e\u529f\u8017\u6a21\u5757 MMA7660FC\u3002\u5b83\u5177\u6709\u9ad8\u8fbe 10,000g \u7684\u9ad8\u51b2\u51fb\u8010\u53d7\u6027\u548c\u53ef\u914d\u7f6e\u7684\u6bcf\u79d2\u91c7\u6837\u7387\u3002\u5bf9\u4e8e\u5927\u91cf\u4e0d\u9700\u8981\u592a\u5927\u6d4b\u91cf\u8303\u56f4\u7684\u5e94\u7528\uff0c\u8fd9\u6b3e\u52a0\u901f\u5ea6\u8ba1\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u8010\u7528\uff0c\u8282\u80fd\u548c\u5408\u7b97\u7684\u7279\u70b9\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b : 3.0 - 5.5V\n\n\n\u5173\u95ed\u6a21\u5f0f\u7535\u6d41 : 0.4\u03bcA\n\n\n\u5f85\u673a\u6a21\u5f0f\u7535\u6d41 : 2\u03bcA\n\n\n\u6d3b\u52a8\u6a21\u5f0f\u7535\u6d41 : 47 \u03bcA \u5728 1 ODR\n\n\n\u6d4b\u91cf\u8303\u56f4 : \u00b11.5g\n\n\n\u7075\u654f\u5ea6 : 21LSB/g\n\n\nSuli \u517c\u5bb9\u5e93\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\n\nNote\n\n\u5173\u4e8e Suli \u517c\u5bb9\u5e93\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nSuli\n.\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8fd9\u4e2a\u4f20\u611f\u5668\u83b7\u53d6\u539f\u59cb\u6570\u636e\u548c\u7531 \"g\" \u6d4b\u91cf\u7684\u6570\u636e\u3002\n\n\n\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Grove - Base Shield \u7684 I2C \u7aef\u53e3\u3002\n\n\n\n\nNote\n\n\u5982\u679c\u4f60\u60f3\u6fc0\u6d3b\u8fd9\u4e2a\u6a21\u5757\u7684\u4e2d\u65ad\u529f\u80fd\uff0c\u4f60\u9700\u8981\u5c06\u6211\u4eec\u5728\u677f\u4e0a\u5212\u5206\u51fa\u7684 INT \u710a\u76d8\u8fde\u63a5\u5230\u4e00\u4e2a\u80fd\u591f\u6267\u884c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684 Arduino \u5f15\u811a\u3002\n\n\n\n\n\n\n\u5b89\u88c5\u6211\u4eec\u5728 \nResources\n \u90e8\u5206\u63d0\u4f9b\u7684\u5e93\u3002\n\n\n\u76f4\u63a5\u6309\u8def\u5f84 : \nFile(\u6587\u4ef6) -\n Example(\u793a\u4f8b) -\nDigitalAccelerometer_MMA7660FC -\nMMA7660FC_Demo\n \u6253\u5f00\u4ee3\u7801\u3002\n\n\n\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u52a0\u901f\u5ea6\u4fe1\u606f\u901a\u8fc7 I2C \u603b\u7ebf\u4ece\u4f20\u611f\u5668\u53d1\u9001\u5230 Seeeduino\uff0c\u7136\u540e Seeeduino \u5c06\u5b83\u4eec\u6253\u5370\u5230\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u3002\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u68c0\u67e5\u7ed3\u679c\u3002\n\n\n\n\n\u8be5\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7531\u4e24\u90e8\u5206\u7ec4\u6210 : \u539f\u59cb\u6570\u636e\u548c\u8f6c\u6362\u4e3a\u4ee5\u91cd\u529b \"g\" \u4e3a\u5355\u4f4d\u7684 3 \u8f74\u52a0\u901f\u5ea6\u4fe1\u606f\u3002\n\n\n\u4e0e Raspberry \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216\u8005 Grovepi+.\n\n\n2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \nhere\n\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165 Grovepi socket i2c-x(1~3)\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n\n   cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\n\n\u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\n\n\n\n    nano grove_i2c_accelerometer.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Accelerometer (+/- 1.5g) to any I2C port eg. I2C-1\n    # Can be found at I2C address 0x4c\n    # SCL,SDA,VCC,GND\n\n    while True:\n        try:\n            print grovepi.acc_xyz()\n            time.sleep(.5)\n\n        except IOError:\n            print \nError\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\n    sudo python grove_i2c_accelerometer.py\n\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\n\u4e0b\u9762\u662f\u4e24\u4e2a\u56fe\u5e2e\u52a9\u4f60\u7406\u89e3\u7ed3\u679c\u7684\u7269\u7406\u610f\u4e49\u3002\n\n\n\u7b2c\u4e00\u4e2a\u56fe\u662f\u5173\u4e8e\u6bcf\u4e2a\u8f74\u7684\u65b9\u5411 :\n\n\n\n\u7b2c\u4e8c\u4e2a\u56fe\u7ed9\u51fa\u4e86\u4e00\u4e9b\u4f8b\u5b50 :\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - 3-Axis Digital Accelerometer Eagle File\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nDatasheet of MMA7660FC\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \ngithub repository for 3-Axis Digital Accelerometer(\u00b11.5g)", 
            "title": "Grove-3 Axis Digital Accelerometer 1.5g"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-1.5g/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b : 3.0 - 5.5V  \u5173\u95ed\u6a21\u5f0f\u7535\u6d41 : 0.4\u03bcA  \u5f85\u673a\u6a21\u5f0f\u7535\u6d41 : 2\u03bcA  \u6d3b\u52a8\u6a21\u5f0f\u7535\u6d41 : 47 \u03bcA \u5728 1 ODR  \u6d4b\u91cf\u8303\u56f4 : \u00b11.5g  \u7075\u654f\u5ea6 : 21LSB/g  Suli \u517c\u5bb9\u5e93    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-1.5g/#platforms-supported", 
            "text": "Note \n\u5173\u4e8e Suli \u517c\u5bb9\u5e93\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Suli .", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-1.5g/#_2", 
            "text": "", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-1.5g/#arduino", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8fd9\u4e2a\u4f20\u611f\u5668\u83b7\u53d6\u539f\u59cb\u6570\u636e\u548c\u7531 \"g\" \u6d4b\u91cf\u7684\u6570\u636e\u3002  \u901a\u8fc7 Grove \u7ebf\u7f06\u5c06\u6b64\u6a21\u5757\u8fde\u63a5\u5230 Grove - Base Shield \u7684 I2C \u7aef\u53e3\u3002   Note \n\u5982\u679c\u4f60\u60f3\u6fc0\u6d3b\u8fd9\u4e2a\u6a21\u5757\u7684\u4e2d\u65ad\u529f\u80fd\uff0c\u4f60\u9700\u8981\u5c06\u6211\u4eec\u5728\u677f\u4e0a\u5212\u5206\u51fa\u7684 INT \u710a\u76d8\u8fde\u63a5\u5230\u4e00\u4e2a\u80fd\u591f\u6267\u884c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684 Arduino \u5f15\u811a\u3002   \u5b89\u88c5\u6211\u4eec\u5728  Resources  \u90e8\u5206\u63d0\u4f9b\u7684\u5e93\u3002  \u76f4\u63a5\u6309\u8def\u5f84 :  File(\u6587\u4ef6) -  Example(\u793a\u4f8b) - DigitalAccelerometer_MMA7660FC - MMA7660FC_Demo  \u6253\u5f00\u4ee3\u7801\u3002  \u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u52a0\u901f\u5ea6\u4fe1\u606f\u901a\u8fc7 I2C \u603b\u7ebf\u4ece\u4f20\u611f\u5668\u53d1\u9001\u5230 Seeeduino\uff0c\u7136\u540e Seeeduino \u5c06\u5b83\u4eec\u6253\u5370\u5230\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u3002\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u68c0\u67e5\u7ed3\u679c\u3002   \u8be5\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7531\u4e24\u90e8\u5206\u7ec4\u6210 : \u539f\u59cb\u6570\u636e\u548c\u8f6c\u6362\u4e3a\u4ee5\u91cd\u529b \"g\" \u4e3a\u5355\u4f4d\u7684 3 \u8f74\u52a0\u901f\u5ea6\u4fe1\u606f\u3002", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-1.5g/#raspberry", 
            "text": "1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216\u8005 Grovepi+.  2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa  here \u3002  3.\u8fde\u63a5   \u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165 Grovepi socket i2c-x(1~3)\u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :     cd yourpath/GrovePi/Software/Python/   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :       nano grove_i2c_accelerometer.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Accelerometer (+/- 1.5g) to any I2C port eg. I2C-1\n    # Can be found at I2C address 0x4c\n    # SCL,SDA,VCC,GND\n\n    while True:\n        try:\n            print grovepi.acc_xyz()\n            time.sleep(.5)\n\n        except IOError:\n            print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002     sudo python grove_i2c_accelerometer.py", 
            "title": "\u4e0e Raspberry \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-1.5g/#_3", 
            "text": "\u4e0b\u9762\u662f\u4e24\u4e2a\u56fe\u5e2e\u52a9\u4f60\u7406\u89e3\u7ed3\u679c\u7684\u7269\u7406\u610f\u4e49\u3002  \u7b2c\u4e00\u4e2a\u56fe\u662f\u5173\u4e8e\u6bcf\u4e2a\u8f74\u7684\u65b9\u5411 :  \u7b2c\u4e8c\u4e2a\u56fe\u7ed9\u51fa\u4e86\u4e00\u4e9b\u4f8b\u5b50 :", 
            "title": "\u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-1.5g/#_4", 
            "text": "[Eagle\u6587\u4ef6]   Grove - 3-Axis Digital Accelerometer Eagle File  [\u82af\u7247\u6570\u636e\u624b\u518c]   Datasheet of MMA7660FC  [\u5176\u4ed6\u8d44\u6e90]   github repository for 3-Axis Digital Accelerometer(\u00b11.5g)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-16g/", 
            "text": "\u8fd9\u662f\u4e00\u79cd\u9ad8\u7cbe\u5ea6\u6570\u5b57\u52a0\u901f\u5ea6\u8ba1\uff0c\u53ef\u63d0\u4f9b\u6700\u9ad8 3.9mg / LSB \u5206\u8fa8\u7387\u548c\u9ad8\u8fbe \u00b116g \u6d4b\u91cf\u8303\u56f4\u3002\u5b83\u57fa\u4e8e\u5148\u8fdb\u7684 3 \u8f74 IC ADXL345\u3002\u60a8\u65e0\u9700\u62c5\u5fc3\u81ea\u7531\u843d\u4f53\u5b9e\u9a8c\u5bf9\u8be5\u6a21\u5757\u9020\u6210\u635f\u574f\uff0c\u5b83\u53ef\u4ee5\u627f\u53d7\u81f3\u591a 10000g \u7684\u632f\u52a8\u3002\u6b64\u5916\uff0c\u5b83\u53ef\u4ee5\u7075\u654f\u5730\u68c0\u67e5\u5230\u76f8\u5173\u4fe1\u53f7\uff0c\u56e0\u800c\u53ef\u4ee5\u7528\u4e8e\u8fd0\u52a8\u68c0\u6d4b\u3001\u624b\u52bf\u68c0\u6d4b\u548c\u673a\u5668\u4eba\u5b66\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b : 3.3V, 5V\n\n\n\u6d4b\u8bd5\u8303\u56f4 : \u00b116\n\n\n\u9ad8\u7075\u654f\u5ea6\n\n\n\u5927\u6d4b\u91cf\u8303\u56f4\n\n\n\u4f4e\u529f\u8017\u7535\u6e90 0.1 \u03bcA(\u5728\u6807\u51c6\u6a21\u5f0f\u4e0b VS = 2.5 V (\u5178\u578b\u503c))\n\n\n\u80fd\u627f\u53d7 10,000 g \u632f\u52a8\n\n\n\u7b26\u5408 RoHS/WEEE \u65e0\u94c5\u6807\u51c6\n\n\nSuli \u6807\u51c6\u517c\u5bb9\u5e93\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528\n\n\n\u6bcf\u4e2a\u52a0\u901f\u5ea6\u8ba1\u5df2\u7ecf\u5728\u8fd0\u9001\u5230\u60a8\u4e4b\u524d\u7ecf\u8fc7\u5355\u72ec\u6d4b\u8bd5\u3002\u4f46\u662f\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u81ea\u884c\u590d\u4f4d\u96f6\u70b9\u504f\u79fb\u3002\n\u4e0b\u9762\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8be5\u52a0\u901f\u5ea6\u8ba1\u8bfb\u53d6\u539f\u59cb\u6570\u636e\u5e76\u4ee5g\uff0c\u4e5f\u5c31\u662f\u91cd\u529b\u4e3a\u5355\u4f4d\u83b7\u53d6\u6570\u636e\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 1 :\n \u5c06\u5176\u63d2\u5165\u60a8\u7684 Grove - Base Shield \u7684 I2C \u7aef\u53e3\u3002\n\n\n\u6b65\u9aa4 2 :\n \u4e0b\u8f7d \nDigital Accelerometer(\u00b116g) Library\n \u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino \u5b89\u88c5\u6587\u4ef6\u5939\u4e2d\u7684 \narduino-1.0\\libraries\n \u4e2d\u3002\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u5b89\u88c5 Arduino \u7684\u5e93\u6587\u4ef6\uff0c\u8bf7\u6309\u7167 \n\u5982\u4f55\u5b89\u88c5Arduino\u7684\u5e93\u6587\u4ef6\n \u8fdb\u884c\u64cd\u4f5c\u3002\n\n\n\u6b65\u9aa4 3 :\n \u5982\u679c\u60a8\u5b89\u88c5\u4e86\u8be5\u5e93\uff0c\u8bf7\u901a\u8fc7\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u6f14\u793a\u4ee3\u7801 :\n** File(\u6587\u4ef6) -\n Example(\u793a\u4f8b) -\nDigitalAccelerometer_ADXL345-\nADXL345_demo_code. **\n\n\n\u6b65\u9aa4 4 :\n \u4e0a\u4f20\u4ee3\u7801\u5e76\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668 ( \u901a\u5e38\u4f4d\u4e8e\u53f3\u4e0a\u89d2 )\u3002\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\uff0c\u8bf7\u53c2\u9605 \n\u4e0a\u4f20\u4ee3\u7801\u6307\u5357\n \u3002\n\n\n\u6b65\u9aa4 5 :\n \u7ed3\u679c\u5c06\u663e\u793a\u4e3a\u4e0b\u56fe\u4e2d\u7684\u683c\u5f0f\uff0c\u6447\u52a8 Grove\uff0c\u60a8\u4f1a\u53d1\u73b0\u6570\u5b57\u53d8\u5316\u3002\n\n\n\n\n\n\n\u8be5\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7531\u4e24\u90e8\u5206\u7ec4\u6210 : \u539f\u59cb\u6570\u636e\u548c\u8f6c\u6362\u4e3a\u4ee5\u91cd\u529b 'g' \u4e3a\u5355\u4f4d\u7684 3 \u8f74\u52a0\u901f\u5ea6\u4fe1\u606f\u3002\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n\n\n\n\n\u6b65\u9aa4 1 :\n \u51c6\u5907\u4e00\u4e2a Raspberry Pi \u548c Grovepi \u6216 Grovepi +\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 2 :\n \u60a8\u5e94\u8be5\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa\n\u6b64\u5904\n\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\u6b65\u9aa4 3 :\n \u8fde\u63a5\n\n\n\n\n\u5c06\u4f20\u611f\u5668\u7528 Groov \u7ebf\u5c06\u63d2\u5165 Grovepi \u63d2\u5ea7 i2c-x(1~3)\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 4 :\n \u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55\n\n\n\n\n\n\ncd\n \nyourpath\n/\nGrovePi\n/\nSoftware\n/\nPython\n/\n\n\n\n\u4ee3\u7801\u5982\u4e0b :\n\n\n  nano grovepi_tilt_switch.py   # \nCtrl+x\n to exit #\n\n\n\n\nimport\n \nsmbus\n\n\nfrom\n \ntime\n \nimport\n \nsleep\n\n\n\n# select the correct i2c bus for this revision of Raspberry Pi\n\n\nrevision\n \n=\n \n([\nl\n[\n12\n:\n-\n1\n]\n \nfor\n \nl\n \nin\n \nopen\n(\n/proc/cpuinfo\n,\nr\n)\n.\nreadlines\n()\n \nif\n \nl\n[:\n8\n]\n==\nRevision\n]\n+\n[\n0000\n])[\n0\n]\n\n\nbus\n \n=\n \nsmbus\n.\nSMBus\n(\n1\n \nif\n \nint\n(\nrevision\n,\n \n16\n)\n \n=\n \n4\n \nelse\n \n0\n)\n\n\n\n# ADXL345 constants\n\n\nEARTH_GRAVITY_MS2\n   \n=\n \n9.80665\n\n\nSCALE_MULTIPLIER\n    \n=\n \n0.004\n\n\n\nDATA_FORMAT\n         \n=\n \n0x31\n\n\nBW_RATE\n             \n=\n \n0x2C\n\n\nPOWER_CTL\n           \n=\n \n0x2D\n\n\n\nBW_RATE_1600HZ\n      \n=\n \n0x0F\n\n\nBW_RATE_800HZ\n       \n=\n \n0x0E\n\n\nBW_RATE_400HZ\n       \n=\n \n0x0D\n\n\nBW_RATE_200HZ\n       \n=\n \n0x0C\n\n\nBW_RATE_100HZ\n       \n=\n \n0x0B\n\n\nBW_RATE_50HZ\n        \n=\n \n0x0A\n\n\nBW_RATE_25HZ\n        \n=\n \n0x09\n\n\n\nRANGE_2G\n            \n=\n \n0x00\n\n\nRANGE_4G\n            \n=\n \n0x01\n\n\nRANGE_8G\n            \n=\n \n0x02\n\n\nRANGE_16G\n           \n=\n \n0x03\n\n\n\nMEASURE\n             \n=\n \n0x08\n\n\nAXES_DATA\n           \n=\n \n0x32\n\n\n\nclass\n \nADXL345\n:\n\n\n    \naddress\n \n=\n \nNone\n\n\n    \ndef\n \n__init__\n(\nself\n,\n \naddress\n \n=\n \n0x53\n):\n\n        \nself\n.\naddress\n \n=\n \naddress\n\n        \nself\n.\nsetBandwidthRate\n(\nBW_RATE_100HZ\n)\n\n        \nself\n.\nsetRange\n(\nRANGE_2G\n)\n\n        \nself\n.\nenableMeasurement\n()\n\n\n    \ndef\n \nenableMeasurement\n(\nself\n):\n\n        \nbus\n.\nwrite_byte_data\n(\nself\n.\naddress\n,\n \nPOWER_CTL\n,\n \nMEASURE\n)\n\n\n    \ndef\n \nsetBandwidthRate\n(\nself\n,\n \nrate_flag\n):\n\n        \nbus\n.\nwrite_byte_data\n(\nself\n.\naddress\n,\n \nBW_RATE\n,\n \nrate_flag\n)\n\n\n    \n# set the measurement range for 10-bit readings\n\n    \ndef\n \nsetRange\n(\nself\n,\n \nrange_flag\n):\n\n        \nvalue\n \n=\n \nbus\n.\nread_byte_data\n(\nself\n.\naddress\n,\n \nDATA_FORMAT\n)\n\n\n        \nvalue\n \n=\n \n~\n0x0F\n;\n\n        \nvalue\n \n|=\n \nrange_flag\n;\n\n        \nvalue\n \n|=\n \n0x08\n;\n\n\n        \nbus\n.\nwrite_byte_data\n(\nself\n.\naddress\n,\n \nDATA_FORMAT\n,\n \nvalue\n)\n\n\n    \n# returns the current reading from the sensor for each axis\n\n    \n#\n\n    \n# parameter gforce:\n\n    \n#    False (default): result is returned in m/s^2\n\n    \n#    True           : result is returned in gs\n\n    \ndef\n \ngetAxes\n(\nself\n,\n \ngforce\n \n=\n \nFalse\n):\n\n        \nbytes\n \n=\n \nbus\n.\nread_i2c_block_data\n(\nself\n.\naddress\n,\n \nAXES_DATA\n,\n \n6\n)\n\n\n        \nx\n \n=\n \nbytes\n[\n0\n]\n \n|\n \n(\nbytes\n[\n1\n]\n \n \n8\n)\n\n        \nif\n(\nx\n \n \n(\n1\n \n \n16\n \n-\n \n1\n)):\n\n            \nx\n \n=\n \nx\n \n-\n \n(\n1\n16\n)\n\n\n        \ny\n \n=\n \nbytes\n[\n2\n]\n \n|\n \n(\nbytes\n[\n3\n]\n \n \n8\n)\n\n        \nif\n(\ny\n \n \n(\n1\n \n \n16\n \n-\n \n1\n)):\n\n            \ny\n \n=\n \ny\n \n-\n \n(\n1\n16\n)\n\n\n        \nz\n \n=\n \nbytes\n[\n4\n]\n \n|\n \n(\nbytes\n[\n5\n]\n \n \n8\n)\n\n        \nif\n(\nz\n \n \n(\n1\n \n \n16\n \n-\n \n1\n)):\n\n            \nz\n \n=\n \nz\n \n-\n \n(\n1\n16\n)\n\n\n        \nx\n \n=\n \nx\n \n*\n \nSCALE_MULTIPLIER\n\n        \ny\n \n=\n \ny\n \n*\n \nSCALE_MULTIPLIER\n\n        \nz\n \n=\n \nz\n \n*\n \nSCALE_MULTIPLIER\n\n\n        \nif\n \ngforce\n \n==\n \nFalse\n:\n\n            \nx\n \n=\n \nx\n \n*\n \nEARTH_GRAVITY_MS2\n\n            \ny\n \n=\n \ny\n \n*\n \nEARTH_GRAVITY_MS2\n\n            \nz\n \n=\n \nz\n \n*\n \nEARTH_GRAVITY_MS2\n\n\n        \nx\n \n=\n \nround\n(\nx\n,\n \n4\n)\n\n        \ny\n \n=\n \nround\n(\ny\n,\n \n4\n)\n\n        \nz\n \n=\n \nround\n(\nz\n,\n \n4\n)\n\n\n        \nreturn\n \n{\nx\n:\n \nx\n,\n \ny\n:\n \ny\n,\n \nz\n:\n \nz\n}\n\n\n\nif\n \n__name__\n \n==\n \n__main__\n:\n\n    \n# if run directly we\nll just create an instance of the class and output\n\n    \n# the current readings\n\n    \nadxl345\n \n=\n \nADXL345\n()\n\n\n    \naxes\n \n=\n \nadxl345\n.\ngetAxes\n(\nTrue\n)\n\n    \nprint\n \nADXL345 on address 0x\n%x\n:\n \n%\n \n(\nadxl345\n.\naddress\n)\n\n    \nprint\n \n   x = \n%.3f\nG\n \n%\n \n(\n \naxes\n[\nx\n]\n \n)\n\n    \nprint\n \n   y = \n%.3f\nG\n \n%\n \n(\n \naxes\n[\ny\n]\n \n)\n\n    \nprint\n \n   z = \n%.3f\nG\n \n%\n \n(\n \naxes\n[\nz\n]\n \n)\n\n\n\n\n\n\n\n\u6b65\u9aa4 5 :\n \u8fd0\u884c\u4ee3\u7801\n\n\n\n\n    sudo python grove_tilt_switch.py\n\n\n\n\n\u4e0e Beaglebone Green \u4e00\u8d77\u4f7f\u7528\n\n\n\u53ef\u4ee5\u4f7f\u7528 Cloud9 IDE \u5f00\u59cb\u7f16\u8f91 BBG \u4e0a\u7684\u7a0b\u5e8f\u3002\n\u4f5c\u4e3a\u719f\u6089 Cloud9 IDE \u7684\u7b80\u5355\u7ec3\u4e60\uff0c\u53ef\u4ee5\u4ee5\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u95ea\u70c1 BeagleBone \u4e0a\u7684 4 \u4e2a\u7528\u6237\u53ef\u7f16\u7a0b LED \u4e4b\u4e00\u4f5c\u4e3a\u597d\u7684\u5f00\u59cb\u3002\n\n\n\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 Cloud9 IDE\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 1 :\n \u5c06 Grove - UART \u63d2\u5ea7\u8bbe\u7f6e\u4e3a Grove - GPIO \u63d2\u5ea7\uff0c\u53ea\u9700\u6309\u7167\u6b64\u6b65\u9aa4\u5373\u53ef\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 2 :\n \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \"+\" \u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 3 :\n \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u9009\u9879\u5361\u4e2d\u3002\n\n\n\n\n\n\nimport\n \nsmbus\n\n\nimport\n \ntime\n\n\n\nbus\n \n=\n \nsmbus\n.\nSMBus\n(\n1\n)\n\n\n\n# ADXL345 device address\n\n\nADXL345_DEVICE\n \n=\n \n0x53\n\n\n\n# ADXL345 constants\n\n\nEARTH_GRAVITY_MS2\n   \n=\n \n9.80665\n\n\nSCALE_MULTIPLIER\n    \n=\n \n0.004\n\n\n\nDATA_FORMAT\n         \n=\n \n0x31\n\n\nBW_RATE\n             \n=\n \n0x2C\n\n\nPOWER_CTL\n           \n=\n \n0x2D\n\n\n\nBW_RATE_1600HZ\n      \n=\n \n0x0F\n\n\nBW_RATE_800HZ\n       \n=\n \n0x0E\n\n\nBW_RATE_400HZ\n       \n=\n \n0x0D\n\n\nBW_RATE_200HZ\n       \n=\n \n0x0C\n\n\nBW_RATE_100HZ\n       \n=\n \n0x0B\n\n\nBW_RATE_50HZ\n        \n=\n \n0x0A\n\n\nBW_RATE_25HZ\n        \n=\n \n0x09\n\n\n\nRANGE_2G\n            \n=\n \n0x00\n\n\nRANGE_4G\n            \n=\n \n0x01\n\n\nRANGE_8G\n            \n=\n \n0x02\n\n\nRANGE_16G\n           \n=\n \n0x03\n\n\n\nMEASURE\n             \n=\n \n0x08\n\n\nAXES_DATA\n           \n=\n \n0x32\n\n\n\nclass\n \nADXL345\n:\n\n\n    \naddress\n \n=\n \nNone\n\n\n    \ndef\n \n__init__\n(\nself\n,\n \naddress\n \n=\n \nADXL345_DEVICE\n):\n\n        \nself\n.\naddress\n \n=\n \naddress\n\n        \nself\n.\nsetBandwidthRate\n(\nBW_RATE_100HZ\n)\n\n        \nself\n.\nsetRange\n(\nRANGE_2G\n)\n\n        \nself\n.\nenableMeasurement\n()\n\n\n    \ndef\n \nenableMeasurement\n(\nself\n):\n\n        \nbus\n.\nwrite_byte_data\n(\nself\n.\naddress\n,\n \nPOWER_CTL\n,\n \nMEASURE\n)\n\n\n    \ndef\n \nsetBandwidthRate\n(\nself\n,\n \nrate_flag\n):\n\n        \nbus\n.\nwrite_byte_data\n(\nself\n.\naddress\n,\n \nBW_RATE\n,\n \nrate_flag\n)\n\n\n    \n# set the measurement range for 10-bit readings\n\n    \ndef\n \nsetRange\n(\nself\n,\n \nrange_flag\n):\n\n        \nvalue\n \n=\n \nbus\n.\nread_byte_data\n(\nself\n.\naddress\n,\n \nDATA_FORMAT\n)\n\n\n        \nvalue\n \n=\n \n~\n0x0F\n;\n\n        \nvalue\n \n|=\n \nrange_flag\n;\n\n        \nvalue\n \n|=\n \n0x08\n;\n\n\n        \nbus\n.\nwrite_byte_data\n(\nself\n.\naddress\n,\n \nDATA_FORMAT\n,\n \nvalue\n)\n\n\n    \n# returns the current reading from the sensor for each axis\n\n    \n#\n\n    \n# parameter gforce:\n\n    \n#    False (default): result is returned in m/s^2\n\n    \n#    True           : result is returned in gs\n\n    \ndef\n \ngetAxes\n(\nself\n,\n \ngforce\n \n=\n \nFalse\n):\n\n        \nbytes\n \n=\n \nbus\n.\nread_i2c_block_data\n(\nself\n.\naddress\n,\n \nAXES_DATA\n,\n \n6\n)\n\n\n        \nx\n \n=\n \nbytes\n[\n0\n]\n \n|\n \n(\nbytes\n[\n1\n]\n \n \n8\n)\n\n        \nif\n(\nx\n \n \n(\n1\n \n \n16\n \n-\n \n1\n)):\n\n            \nx\n \n=\n \nx\n \n-\n \n(\n1\n16\n)\n\n\n        \ny\n \n=\n \nbytes\n[\n2\n]\n \n|\n \n(\nbytes\n[\n3\n]\n \n \n8\n)\n\n        \nif\n(\ny\n \n \n(\n1\n \n \n16\n \n-\n \n1\n)):\n\n            \ny\n \n=\n \ny\n \n-\n \n(\n1\n16\n)\n\n\n        \nz\n \n=\n \nbytes\n[\n4\n]\n \n|\n \n(\nbytes\n[\n5\n]\n \n \n8\n)\n\n        \nif\n(\nz\n \n \n(\n1\n \n \n16\n \n-\n \n1\n)):\n\n            \nz\n \n=\n \nz\n \n-\n \n(\n1\n16\n)\n\n\n        \nx\n \n=\n \nx\n \n*\n \nSCALE_MULTIPLIER\n\n        \ny\n \n=\n \ny\n \n*\n \nSCALE_MULTIPLIER\n\n        \nz\n \n=\n \nz\n \n*\n \nSCALE_MULTIPLIER\n\n\n        \nif\n \ngforce\n \n==\n \nFalse\n:\n\n            \nx\n \n=\n \nx\n \n*\n \nEARTH_GRAVITY_MS2\n\n            \ny\n \n=\n \ny\n \n*\n \nEARTH_GRAVITY_MS2\n\n            \nz\n \n=\n \nz\n \n*\n \nEARTH_GRAVITY_MS2\n\n\n        \nx\n \n=\n \nround\n(\nx\n,\n \n4\n)\n\n        \ny\n \n=\n \nround\n(\ny\n,\n \n4\n)\n\n        \nz\n \n=\n \nround\n(\nz\n,\n \n4\n)\n\n\n        \nreturn\n \n{\nx\n:\n \nx\n,\n \ny\n:\n \ny\n,\n \nz\n:\n \nz\n}\n\n\n\nif\n \n__name__\n \n==\n \n__main__\n:\n\n    \n# if run directly we\nll just create an instance of the class and output\n\n    \n# the current readings\n\n    \nadxl345\n \n=\n \nADXL345\n()\n\n\n    \nwhile\n \nTrue\n:\n\n        \naxes\n \n=\n \nadxl345\n.\ngetAxes\n(\nTrue\n)\n\n        \nprint\n \nADXL345 on address 0x\n%x\n:\n \n%\n \n(\nadxl345\n.\naddress\n)\n\n        \nprint\n \n   x = \n%.3f\nG\n \n%\n \n(\n \naxes\n[\nx\n]\n \n)\n\n        \nprint\n \n   y = \n%.3f\nG\n \n%\n \n(\n \naxes\n[\ny\n]\n \n)\n\n        \nprint\n \n   z = \n%.3f\nG\n \n%\n \n(\n \naxes\n[\nz\n]\n \n)\n\n        \ntime\n.\nsleep\n(\n2\n)\n\n\n\n\n\n\n\n\n\n\u6b65\u9aa4 4 :\n \u5355\u51fb\u78c1\u76d8\u56fe\u6807\u4ee5 .py \u6269\u5c55\u540d\u4fdd\u5b58\u6587\u4ef6\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 5 :\n \u5c06 Grove - 3-Axis Digital Accelerometer(\u00b116g) \u8fde\u63a5\u5230 BBG \u4e0a\u7684 Grove I2C \u63d2\u5ea7\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 6 :\n \u8fd0\u884c\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u7ec8\u7aef\u6bcf 2 \u79d2\u8f93\u51fa\u4e00\u6b21\u91cd\u529b\u4fe1\u606f\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nEagle file.zip\n\n\n[\u5e93\u6587\u4ef6]\n \nSuli-compatible Library\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nADXL345 datasheet.pdf\n\n\n[\u5176\u4ed6\u6587\u4ef6]\n \ngithub repository for 3-Axis Digital Accelerometer(\u00b116g)\n\n\n[\u5176\u4ed6\u6587\u4ef6]\n \nGrove - 3-Axis Digital Accelerometer(\u00b116g)", 
            "title": "Grove-3 Axis Digital Accelerometer 16g"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-16g/#_1", 
            "text": "\u8f93\u5165\u7535\u538b : 3.3V, 5V  \u6d4b\u8bd5\u8303\u56f4 : \u00b116  \u9ad8\u7075\u654f\u5ea6  \u5927\u6d4b\u91cf\u8303\u56f4  \u4f4e\u529f\u8017\u7535\u6e90 0.1 \u03bcA(\u5728\u6807\u51c6\u6a21\u5f0f\u4e0b VS = 2.5 V (\u5178\u578b\u503c))  \u80fd\u627f\u53d7 10,000 g \u632f\u52a8  \u7b26\u5408 RoHS/WEEE \u65e0\u94c5\u6807\u51c6  Suli \u6807\u51c6\u517c\u5bb9\u5e93    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-16g/#_2", 
            "text": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528  \u6bcf\u4e2a\u52a0\u901f\u5ea6\u8ba1\u5df2\u7ecf\u5728\u8fd0\u9001\u5230\u60a8\u4e4b\u524d\u7ecf\u8fc7\u5355\u72ec\u6d4b\u8bd5\u3002\u4f46\u662f\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u81ea\u884c\u590d\u4f4d\u96f6\u70b9\u504f\u79fb\u3002\n\u4e0b\u9762\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8be5\u52a0\u901f\u5ea6\u8ba1\u8bfb\u53d6\u539f\u59cb\u6570\u636e\u5e76\u4ee5g\uff0c\u4e5f\u5c31\u662f\u91cd\u529b\u4e3a\u5355\u4f4d\u83b7\u53d6\u6570\u636e\u3002    \u6b65\u9aa4 1 :  \u5c06\u5176\u63d2\u5165\u60a8\u7684 Grove - Base Shield \u7684 I2C \u7aef\u53e3\u3002  \u6b65\u9aa4 2 :  \u4e0b\u8f7d  Digital Accelerometer(\u00b116g) Library  \u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino \u5b89\u88c5\u6587\u4ef6\u5939\u4e2d\u7684  arduino-1.0\\libraries  \u4e2d\u3002\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u5b89\u88c5 Arduino \u7684\u5e93\u6587\u4ef6\uff0c\u8bf7\u6309\u7167  \u5982\u4f55\u5b89\u88c5Arduino\u7684\u5e93\u6587\u4ef6  \u8fdb\u884c\u64cd\u4f5c\u3002  \u6b65\u9aa4 3 :  \u5982\u679c\u60a8\u5b89\u88c5\u4e86\u8be5\u5e93\uff0c\u8bf7\u901a\u8fc7\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u6f14\u793a\u4ee3\u7801 :\n** File(\u6587\u4ef6) -  Example(\u793a\u4f8b) - DigitalAccelerometer_ADXL345- ADXL345_demo_code. **  \u6b65\u9aa4 4 :  \u4e0a\u4f20\u4ee3\u7801\u5e76\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668 ( \u901a\u5e38\u4f4d\u4e8e\u53f3\u4e0a\u89d2 )\u3002\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\uff0c\u8bf7\u53c2\u9605  \u4e0a\u4f20\u4ee3\u7801\u6307\u5357  \u3002  \u6b65\u9aa4 5 :  \u7ed3\u679c\u5c06\u663e\u793a\u4e3a\u4e0b\u56fe\u4e2d\u7684\u683c\u5f0f\uff0c\u6447\u52a8 Grove\uff0c\u60a8\u4f1a\u53d1\u73b0\u6570\u5b57\u53d8\u5316\u3002    \u8be5\u4f20\u611f\u5668\u7684\u8f93\u51fa\u7531\u4e24\u90e8\u5206\u7ec4\u6210 : \u539f\u59cb\u6570\u636e\u548c\u8f6c\u6362\u4e3a\u4ee5\u91cd\u529b 'g' \u4e3a\u5355\u4f4d\u7684 3 \u8f74\u52a0\u901f\u5ea6\u4fe1\u606f\u3002  \u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528    \u6b65\u9aa4 1 :  \u51c6\u5907\u4e00\u4e2a Raspberry Pi \u548c Grovepi \u6216 Grovepi +\u3002    \u6b65\u9aa4 2 :  \u60a8\u5e94\u8be5\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \u6b64\u5904 \u3002       \u6b65\u9aa4 3 :  \u8fde\u63a5   \u5c06\u4f20\u611f\u5668\u7528 Groov \u7ebf\u5c06\u63d2\u5165 Grovepi \u63d2\u5ea7 i2c-x(1~3)\u3002    \u6b65\u9aa4 4 :  \u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55    cd   yourpath / GrovePi / Software / Python /  \n\u4ee3\u7801\u5982\u4e0b :    nano grovepi_tilt_switch.py   #  Ctrl+x  to exit #  import   smbus  from   time   import   sleep  # select the correct i2c bus for this revision of Raspberry Pi  revision   =   ([ l [ 12 : - 1 ]   for   l   in   open ( /proc/cpuinfo , r ) . readlines ()   if   l [: 8 ] == Revision ] + [ 0000 ])[ 0 ]  bus   =   smbus . SMBus ( 1   if   int ( revision ,   16 )   =   4   else   0 )  # ADXL345 constants  EARTH_GRAVITY_MS2     =   9.80665  SCALE_MULTIPLIER      =   0.004  DATA_FORMAT           =   0x31  BW_RATE               =   0x2C  POWER_CTL             =   0x2D  BW_RATE_1600HZ        =   0x0F  BW_RATE_800HZ         =   0x0E  BW_RATE_400HZ         =   0x0D  BW_RATE_200HZ         =   0x0C  BW_RATE_100HZ         =   0x0B  BW_RATE_50HZ          =   0x0A  BW_RATE_25HZ          =   0x09  RANGE_2G              =   0x00  RANGE_4G              =   0x01  RANGE_8G              =   0x02  RANGE_16G             =   0x03  MEASURE               =   0x08  AXES_DATA             =   0x32  class   ADXL345 : \n\n     address   =   None \n\n     def   __init__ ( self ,   address   =   0x53 ): \n         self . address   =   address \n         self . setBandwidthRate ( BW_RATE_100HZ ) \n         self . setRange ( RANGE_2G ) \n         self . enableMeasurement () \n\n     def   enableMeasurement ( self ): \n         bus . write_byte_data ( self . address ,   POWER_CTL ,   MEASURE ) \n\n     def   setBandwidthRate ( self ,   rate_flag ): \n         bus . write_byte_data ( self . address ,   BW_RATE ,   rate_flag ) \n\n     # set the measurement range for 10-bit readings \n     def   setRange ( self ,   range_flag ): \n         value   =   bus . read_byte_data ( self . address ,   DATA_FORMAT ) \n\n         value   =   ~ 0x0F ; \n         value   |=   range_flag ; \n         value   |=   0x08 ; \n\n         bus . write_byte_data ( self . address ,   DATA_FORMAT ,   value ) \n\n     # returns the current reading from the sensor for each axis \n     # \n     # parameter gforce: \n     #    False (default): result is returned in m/s^2 \n     #    True           : result is returned in gs \n     def   getAxes ( self ,   gforce   =   False ): \n         bytes   =   bus . read_i2c_block_data ( self . address ,   AXES_DATA ,   6 ) \n\n         x   =   bytes [ 0 ]   |   ( bytes [ 1 ]     8 ) \n         if ( x     ( 1     16   -   1 )): \n             x   =   x   -   ( 1 16 ) \n\n         y   =   bytes [ 2 ]   |   ( bytes [ 3 ]     8 ) \n         if ( y     ( 1     16   -   1 )): \n             y   =   y   -   ( 1 16 ) \n\n         z   =   bytes [ 4 ]   |   ( bytes [ 5 ]     8 ) \n         if ( z     ( 1     16   -   1 )): \n             z   =   z   -   ( 1 16 ) \n\n         x   =   x   *   SCALE_MULTIPLIER \n         y   =   y   *   SCALE_MULTIPLIER \n         z   =   z   *   SCALE_MULTIPLIER \n\n         if   gforce   ==   False : \n             x   =   x   *   EARTH_GRAVITY_MS2 \n             y   =   y   *   EARTH_GRAVITY_MS2 \n             z   =   z   *   EARTH_GRAVITY_MS2 \n\n         x   =   round ( x ,   4 ) \n         y   =   round ( y ,   4 ) \n         z   =   round ( z ,   4 ) \n\n         return   { x :   x ,   y :   y ,   z :   z }  if   __name__   ==   __main__ : \n     # if run directly we ll just create an instance of the class and output \n     # the current readings \n     adxl345   =   ADXL345 () \n\n     axes   =   adxl345 . getAxes ( True ) \n     print   ADXL345 on address 0x %x :   %   ( adxl345 . address ) \n     print      x =  %.3f G   %   (   axes [ x ]   ) \n     print      y =  %.3f G   %   (   axes [ y ]   ) \n     print      z =  %.3f G   %   (   axes [ z ]   )    \u6b65\u9aa4 5 :  \u8fd0\u884c\u4ee3\u7801       sudo python grove_tilt_switch.py  \u4e0e Beaglebone Green \u4e00\u8d77\u4f7f\u7528  \u53ef\u4ee5\u4f7f\u7528 Cloud9 IDE \u5f00\u59cb\u7f16\u8f91 BBG \u4e0a\u7684\u7a0b\u5e8f\u3002\n\u4f5c\u4e3a\u719f\u6089 Cloud9 IDE \u7684\u7b80\u5355\u7ec3\u4e60\uff0c\u53ef\u4ee5\u4ee5\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u95ea\u70c1 BeagleBone \u4e0a\u7684 4 \u4e2a\u7528\u6237\u53ef\u7f16\u7a0b LED \u4e4b\u4e00\u4f5c\u4e3a\u597d\u7684\u5f00\u59cb\u3002  \u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 Cloud9 IDE\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u3002    \u6b65\u9aa4 1 :  \u5c06 Grove - UART \u63d2\u5ea7\u8bbe\u7f6e\u4e3a Grove - GPIO \u63d2\u5ea7\uff0c\u53ea\u9700\u6309\u7167\u6b64\u6b65\u9aa4\u5373\u53ef\u3002    \u6b65\u9aa4 2 :  \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \"+\" \u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002    \u6b65\u9aa4 3 :  \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u9009\u9879\u5361\u4e2d\u3002    import   smbus  import   time  bus   =   smbus . SMBus ( 1 )  # ADXL345 device address  ADXL345_DEVICE   =   0x53  # ADXL345 constants  EARTH_GRAVITY_MS2     =   9.80665  SCALE_MULTIPLIER      =   0.004  DATA_FORMAT           =   0x31  BW_RATE               =   0x2C  POWER_CTL             =   0x2D  BW_RATE_1600HZ        =   0x0F  BW_RATE_800HZ         =   0x0E  BW_RATE_400HZ         =   0x0D  BW_RATE_200HZ         =   0x0C  BW_RATE_100HZ         =   0x0B  BW_RATE_50HZ          =   0x0A  BW_RATE_25HZ          =   0x09  RANGE_2G              =   0x00  RANGE_4G              =   0x01  RANGE_8G              =   0x02  RANGE_16G             =   0x03  MEASURE               =   0x08  AXES_DATA             =   0x32  class   ADXL345 : \n\n     address   =   None \n\n     def   __init__ ( self ,   address   =   ADXL345_DEVICE ): \n         self . address   =   address \n         self . setBandwidthRate ( BW_RATE_100HZ ) \n         self . setRange ( RANGE_2G ) \n         self . enableMeasurement () \n\n     def   enableMeasurement ( self ): \n         bus . write_byte_data ( self . address ,   POWER_CTL ,   MEASURE ) \n\n     def   setBandwidthRate ( self ,   rate_flag ): \n         bus . write_byte_data ( self . address ,   BW_RATE ,   rate_flag ) \n\n     # set the measurement range for 10-bit readings \n     def   setRange ( self ,   range_flag ): \n         value   =   bus . read_byte_data ( self . address ,   DATA_FORMAT ) \n\n         value   =   ~ 0x0F ; \n         value   |=   range_flag ; \n         value   |=   0x08 ; \n\n         bus . write_byte_data ( self . address ,   DATA_FORMAT ,   value ) \n\n     # returns the current reading from the sensor for each axis \n     # \n     # parameter gforce: \n     #    False (default): result is returned in m/s^2 \n     #    True           : result is returned in gs \n     def   getAxes ( self ,   gforce   =   False ): \n         bytes   =   bus . read_i2c_block_data ( self . address ,   AXES_DATA ,   6 ) \n\n         x   =   bytes [ 0 ]   |   ( bytes [ 1 ]     8 ) \n         if ( x     ( 1     16   -   1 )): \n             x   =   x   -   ( 1 16 ) \n\n         y   =   bytes [ 2 ]   |   ( bytes [ 3 ]     8 ) \n         if ( y     ( 1     16   -   1 )): \n             y   =   y   -   ( 1 16 ) \n\n         z   =   bytes [ 4 ]   |   ( bytes [ 5 ]     8 ) \n         if ( z     ( 1     16   -   1 )): \n             z   =   z   -   ( 1 16 ) \n\n         x   =   x   *   SCALE_MULTIPLIER \n         y   =   y   *   SCALE_MULTIPLIER \n         z   =   z   *   SCALE_MULTIPLIER \n\n         if   gforce   ==   False : \n             x   =   x   *   EARTH_GRAVITY_MS2 \n             y   =   y   *   EARTH_GRAVITY_MS2 \n             z   =   z   *   EARTH_GRAVITY_MS2 \n\n         x   =   round ( x ,   4 ) \n         y   =   round ( y ,   4 ) \n         z   =   round ( z ,   4 ) \n\n         return   { x :   x ,   y :   y ,   z :   z }  if   __name__   ==   __main__ : \n     # if run directly we ll just create an instance of the class and output \n     # the current readings \n     adxl345   =   ADXL345 () \n\n     while   True : \n         axes   =   adxl345 . getAxes ( True ) \n         print   ADXL345 on address 0x %x :   %   ( adxl345 . address ) \n         print      x =  %.3f G   %   (   axes [ x ]   ) \n         print      y =  %.3f G   %   (   axes [ y ]   ) \n         print      z =  %.3f G   %   (   axes [ z ]   ) \n         time . sleep ( 2 )     \u6b65\u9aa4 4 :  \u5355\u51fb\u78c1\u76d8\u56fe\u6807\u4ee5 .py \u6269\u5c55\u540d\u4fdd\u5b58\u6587\u4ef6\u3002    \u6b65\u9aa4 5 :  \u5c06 Grove - 3-Axis Digital Accelerometer(\u00b116g) \u8fde\u63a5\u5230 BBG \u4e0a\u7684 Grove I2C \u63d2\u5ea7\u3002    \u6b65\u9aa4 6 :  \u8fd0\u884c\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u7ec8\u7aef\u6bcf 2 \u79d2\u8f93\u51fa\u4e00\u6b21\u91cd\u529b\u4fe1\u606f\u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Accelerometer-16g/#_3", 
            "text": "[Eagle\u6587\u4ef6]   Eagle file.zip  [\u5e93\u6587\u4ef6]   Suli-compatible Library  [\u82af\u7247\u6570\u636e\u624b\u518c]   ADXL345 datasheet.pdf  [\u5176\u4ed6\u6587\u4ef6]   github repository for 3-Axis Digital Accelerometer(\u00b116g)  [\u5176\u4ed6\u6587\u4ef6]   Grove - 3-Axis Digital Accelerometer(\u00b116g)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Gyro/", 
            "text": "Grove - 3-Axis Digital Gyro \u662f\u4e00\u4e2a\u57fa\u4e8e ITG3200 \u7684\u7535\u5b50\u9640\u87ba\u4eea\u6a21\u5757\u3002ITG3200 \u662f\u76ee\u524d\u4e1a\u754c\u6700\u5feb\u7684\u5355\u82af\u7247\uff0c\u6570\u5b57\u8f93\u51fa\u7684\u4e09\u8f74 MEMS \u8fd0\u52a8\u5904\u7406\u9640\u87ba\u4eea\u3002\u9002\u7528\u4e8e\u6e38\u620f\u30013D \u9f20\u6807\u6216\u5176\u4ed6\u8fd0\u52a8\u68c0\u6d4b\u76f8\u5173\u7684\u5e94\u7528\u3002ITG-3200 \u5177\u6709\u4e09\u4e2a\u7528\u4e8e\u6570\u5b57\u5316\u9640\u87ba\u4eea\u8f93\u51fa\u7684 16 \u4f4d\u6a21\u6570\u8f6c\u6362\u5668\uff0c\u4e00\u4e2a\u7528\u6237\u53ef\u9009\u7684\u5185\u90e8\u4f4e\u901a\u6ee4\u6ce2\u5668\u548c\u4e00\u4e2a\u5feb\u901f\u6a21\u5f0f\u7684 I2C (400kHz) \u63a5\u53e3\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b : 3.3V, 5V\n\n\n\u8f93\u5165\u7535\u538b : 6.5mA\n\n\n\u95f2\u7f6e\u6a21\u5f0f\u7535\u6d41 : 5\u03bcA\n\n\n\u5206\u8fa8\u7387 : 14 LSBs per \u00b0/sec\n\n\n\u6ee1\u91cf\u7a0b\u8303\u56f4 : \u00b12000\u00b0/sec\n\n\n\u52a0\u901f\u5ea6 : 10,000g for 0.3ms\n\n\nI2C \u63a5\u53e3\n\n\n\u4e09\u4e2a 16 \u4f4d\u6a21\u6570\u8f6c\u6362\u5668\n\n\n\u7247\u4e0a\u6e29\u5ea6\u4f20\u611f\u5668\n\n\n\u96c6\u6210\u653e\u5927\u5668\u548c\u4f4e\u901a\u6ee4\u6ce2\u5668\n\n\n\u4fdd\u6e29\u8010\u6e7f\n\n\n\u7b26\u5408 RoHS \u548c\u53ca\u7eff\u8272\u73af\u4fdd\u6807\u51c6\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8fd9\u4e2a\u6570\u5b57\u9640\u87ba\u4eea\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u4ee5 rad/s \u4e3a\u5355\u4f4d\u3002\n\n\n\u51c6\u5907\u4e00\u4e2a Grove - 3-Axis Digital Gyro \u548c\u4e00\u4e2a \nSeeeduino\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u786c\u4ef6\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a Seeeduino \u6709\u4e00\u4e2a I2C Grove \u63a5\u53e3\n\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06\u5176\u8fde\u63a5\u5230 I2C Grove \u63a5\u53e3\u3002\n\n\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u5e76\u76db\u4f20\n\n\n\u70b9\u51fb \n\u8fd9\u91cc\n \u4e0b\u8f7d\u5e93\uff0c\u7136\u540e\u5c06\u5176\u653e\u5230 Arduino \u7684\u5e93\u6587\u4ef6\u5939\u3002\n\n\n\u6253\u5f00 \nFile(\u6587\u4ef6) -\n examples(\u793a\u4f8b) -\n Grove_3_Digital_Gyro -\n ITG3200_gyro\n\uff0c\u6253\u5f00\u6f14\u793a\u4ee3\u7801\n\n\n\n\n\u70b9\u51fb Upload \u4e0a\u4f20\u4ee3\u7801\uff0c\u5982\u679c\u60a8\u5bf9\u5982\u4f55\u542f\u52a8 Arduino \u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\n\u68c0\u67e5\u7ed3\u679c\n\n\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u68c0\u67e5\u7ed3\u679c\u3002\n\n\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\n\u4e0b\u56fe\u663e\u793a\u4e86 3 \u4e2a\u8f74\u7684\u65b9\u5411\u3002\u60a8\u53ef\u4ee5\u501f\u52a9\u5b83\u6765\u7406\u89e3\u7ed3\u679c\u7684\u7269\u7406\u610f\u4e49\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - 3-Axis Digital Gyro Eagle File\n\n\n[\u5e93\u6587\u4ef6]\n \nDigital Gyro Library\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nDatasheet of ITG-3200.", 
            "title": "Grove-3 Axis Digital Gyro"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Gyro/#_1", 
            "text": "\u8f93\u5165\u7535\u538b : 3.3V, 5V  \u8f93\u5165\u7535\u538b : 6.5mA  \u95f2\u7f6e\u6a21\u5f0f\u7535\u6d41 : 5\u03bcA  \u5206\u8fa8\u7387 : 14 LSBs per \u00b0/sec  \u6ee1\u91cf\u7a0b\u8303\u56f4 : \u00b12000\u00b0/sec  \u52a0\u901f\u5ea6 : 10,000g for 0.3ms  I2C \u63a5\u53e3  \u4e09\u4e2a 16 \u4f4d\u6a21\u6570\u8f6c\u6362\u5668  \u7247\u4e0a\u6e29\u5ea6\u4f20\u611f\u5668  \u96c6\u6210\u653e\u5927\u5668\u548c\u4f4e\u901a\u6ee4\u6ce2\u5668  \u4fdd\u6e29\u8010\u6e7f  \u7b26\u5408 RoHS \u548c\u53ca\u7eff\u8272\u73af\u4fdd\u6807\u51c6    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Gyro/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Gyro/#_2", 
            "text": "\u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4ece\u8fd9\u4e2a\u6570\u5b57\u9640\u87ba\u4eea\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u4ee5 rad/s \u4e3a\u5355\u4f4d\u3002  \u51c6\u5907\u4e00\u4e2a Grove - 3-Axis Digital Gyro \u548c\u4e00\u4e2a  Seeeduino", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Gyro/#_3", 
            "text": "\u786c\u4ef6\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a Seeeduino \u6709\u4e00\u4e2a I2C Grove \u63a5\u53e3  \u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06\u5176\u8fde\u63a5\u5230 I2C Grove \u63a5\u53e3\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Gyro/#_4", 
            "text": "\u70b9\u51fb  \u8fd9\u91cc  \u4e0b\u8f7d\u5e93\uff0c\u7136\u540e\u5c06\u5176\u653e\u5230 Arduino \u7684\u5e93\u6587\u4ef6\u5939\u3002  \u6253\u5f00  File(\u6587\u4ef6) -  examples(\u793a\u4f8b) -  Grove_3_Digital_Gyro -  ITG3200_gyro \uff0c\u6253\u5f00\u6f14\u793a\u4ee3\u7801   \u70b9\u51fb Upload \u4e0a\u4f20\u4ee3\u7801\uff0c\u5982\u679c\u60a8\u5bf9\u5982\u4f55\u542f\u52a8 Arduino \u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002", 
            "title": "\u4e0b\u8f7d\u4ee3\u7801\u5e76\u76db\u4f20"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Gyro/#_5", 
            "text": "\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u68c0\u67e5\u7ed3\u679c\u3002", 
            "title": "\u68c0\u67e5\u7ed3\u679c"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Gyro/#_6", 
            "text": "\u4e0b\u56fe\u663e\u793a\u4e86 3 \u4e2a\u8f74\u7684\u65b9\u5411\u3002\u60a8\u53ef\u4ee5\u501f\u52a9\u5b83\u6765\u7406\u89e3\u7ed3\u679c\u7684\u7269\u7406\u610f\u4e49\u3002", 
            "title": "\u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/Grove-3-Axis_Digital_Gyro/#_7", 
            "text": "[Eagle\u6587\u4ef6]   Grove - 3-Axis Digital Gyro Eagle File  [\u5e93\u6587\u4ef6]   Digital Gyro Library  [\u82af\u7247\u6570\u636e\u624b\u518c]   Datasheet of ITG-3200.", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Fingerprint_Sensor/", 
            "text": "\u6307\u7eb9\u4f20\u611f\u5668\u662f\u4e00\u79cd\u5149\u5b66\u6307\u7eb9\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u8d85\u7ea7\u7b80\u5355\u5730\u589e\u52a0\u6307\u7eb9\u68c0\u6d4b\u548c\u9a8c\u8bc1\u7684\u529f\u80fd\u3002\u8be5\u4f20\u611f\u5668\u5e26\u6709\u4e00\u4e2a\u9ad8\u529f\u7387 DSP \u82af\u7247 AS601 \u53ef\u8fdb\u884c\u56fe\u50cf\u6e32\u67d3\uff0c\u8ba1\u7b97\uff0c\u7279\u5f81\u67e5\u627e\u548c\u641c\u7d22\u3002\u60a8\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6ce8\u518c\u5f55\u5165\u65b0\u7684\u624b\u6307\u6307\u7eb9\uff0c\u6700\u591a 162\u4e2a \u624b\u6307\u6307\u7eb9\u53ef\u4ee5\u5b58\u50a8\u5230\u677f\u8f7d\u95ea\u5b58\u4e2d\u3002\u4e14\u5728\u955c\u5934\u4e2d\u6709\u4e00\u4e2a\u7ea2\u8272\u7684 LED \u5728\u7167\u7247\u4e2d\u4eae\u8d77\uff0c\u901a\u8fc7\u5b83\u4f60\u53ef\u5f97\u77e5\u5b83\u7684\u5de5\u4f5c\u60c5\u51b5\u3002\u5b83\u662f\u6613\u4e8e\u4f7f\u7528\u548c\u8fc4\u4eca\u4e3a\u6b62\u6700\u597d\u7684\u6307\u7eb9\u4f20\u611f\u5668\uff0c\u60a8\u503c\u5f97\u62e5\u6709\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u7535\u6e90\u7535\u538b : 3.6~6.0 V\n\n\n\u6700\u5927\u5de5\u4f5c\u7535\u6d41\u00a0: 120 mA\n\n\n\u6307\u7eb9\u6210\u50cf\u65f6\u95f4 : 1.0 S\n\n\n\u5339\u914d\u6a21\u5f0f : Compare Mode 1:1\n\n\n\u641c\u7d22\u6a21\u5f0f : 1:N\n\n\n\u5b58\u50a8\u5bb9\u91cf : 162 \u6a21\u7248\n\n\n\u9519\u8bef\u9a8c\u6536\u7387\u00a0: 0.001% (\u5b89\u5168\u7ea7\u522b 3)\n\n\n\u9519\u8bef\u62d2\u6536\u7387 : 1.0% (\u5b89\u5168\u7ea7\u522b 3)\n\n\n\u6ce2\u7279\u7387 : 9600, 19200, 28800, 38400, 57600bps (\u9ed8\u8ba4 57600)\n\n\n\u63a5\u53e3 : TTL \u4e32\u884c\n\n\n\u5de5\u4f5c\u6e29\u5ea6 : -20 ~ +50 \u2103\n\n\n\u63a5\u53e3\n\n\n\n\n\n\n\n\n\n\n\u5f15\u811a\u6570\n\n\n\u540d\u79f0\n\n\n\u7c7b\u578b\n\n\n\u529f\u80fd\u63cf\u8ff0\n\n\n\n\n\n\n\n\n\n\n1\n\n\nVin\n\n\nin\n\n\n\u6b63\u7535\u6e90\u8f93\u5165\u7aef\u5b50\uff08\u7ebf\u8def\u989c\u8272 : \u7ea2\u8272\uff09\n\n\n\n\n\n\n2\n\n\nTD\n\n\nout\n\n\n\u4e32\u884c\u6570\u636e\u8f93\u51fa\uff0cTTL\u903b\u8f91\u7535\u5e73\uff08\u7ebf\u8def\u989c\u8272 : \u9ec4\u8272\uff09\n\n\n\n\n\n\n3\n\n\nRD\n\n\nin\n\n\n\u4e32\u884c\u6570\u636e\u8f93\u5165\uff0cTTL\u903b\u8f91\u7535\u5e73\uff08\u7ebf\u8def\u989c\u8272 : \u767d\u8272\uff09\n\n\n\n\n\n\n4\n\n\nGND\n\n\n-\n\n\n\u4fe1\u53f7\u5730\uff08\u7ebf\u8def\u989c\u8272 : \u9ed1\u8272\uff09\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u6307\u7eb9\u4f20\u611f\u5668\u6a21\u5757\u901a\u5e38\u7528\u4e8e\u5b89\u5168\u90e8\u95e8\uff0c\u5b83\u6709\u4e00\u4e2a\u9ad8\u529f\u7387 DSP \u82af\u7247\u8fdb\u884c\u56fe\u50cf\u6e32\u67d3\uff0c\u8ba1\u7b97\uff0c\u7279\u5f81\u67e5\u627e\u548c\u641c\u7d22\u3002\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u5177\u6709 TTL \u4e32\u884c\u7684\u4efb\u4f55\u5fae\u63a7\u5236\u5668\u6216\u7cfb\u7edf\uff0c\u5e76\u53d1\u9001\u6570\u636e\u5305\u4ee5\u62cd\u7167\uff0c\u68c0\u6d4b\u6253\u5370\uff0c\u6563\u5217\u548c\u641c\u7d22\u3002\u60a8\u8fd8\u53ef\u4ee5\u76f4\u63a5\u5f55\u5165\u65b0\u7684\u624b\u6307\u6307\u7eb9\uff0c\u6700\u591a\u53ef\u4ee5\u5b58\u50a8 162 \u4e2a\u6307\u7eb9\u5728\u677f\u8f7d\u95ea\u5b58\u4e2d\u3002\u900f\u955c\u4e2d\u6709\u4e00\u4e2a\u7ea2\u8272\u7684 LED\uff0c\u5728\u62cd\u6444\u7167\u7247\u65f6\u4f1a\u70b9\u4eae\uff0c\u4ee5\u4fbf\u60a8\u4e86\u89e3\u5176\u5de5\u4f5c\u72b6\u6001\u3002\n\n\n\n\n\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684\u6570\u5b57\u7aef\u53e3 2\u3002\n\n\n\u5c06 Grove - Base Shield \u63d2\u5165 Arduino\uff0c\u5e76\u4f7f\u7528 USB \u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002\n\n\n\n\n\u5f53\u63d2\u5165\u7535\u6e90\u65f6\uff0c\u60a8\u4f1a\u770b\u5230\u7ea2\u8272 LED \u95ea\u70c1\uff0c\u8fd9\u8868\u793a\u4f20\u611f\u5668\u6b63\u5728\u5de5\u4f5c\u3002\n\n\n\n\n\n\n\u4e0b\u8f7d \nFinger Print Sensor Library\n \u5e76\u901a\u8fc7\u8def\u5f84 : \n..\\arduino-1.0.1\\libraries\n \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\u3002\n\n\n\n\n\u8fd9\u4e2a\u5e93\u6587\u4ef6\u53ef\u4ee5\u767b\u8bb0\u548c\u641c\u7d22\uff0c\u56e0\u6b64\u5b83\u9002\u7528\u4e8e\u4efb\u4f55\u9879\u76ee\u3002 \u5b83\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5728 10 \u5206\u949f\u5185\u5f97\u5230\u8fd0\u884c\u3002 \u4f7f\u7528\u5149\u5b66\u6307\u7eb9\u4f20\u611f\u5668\u4e3b\u8981\u6709\u4e24\u4e2a\u8981\u6c42\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u767b\u8bb0\u6307\u7eb9 - \u8fd9\u610f\u5473\u7740\u4e3a\u6bcf\u4e2a\u6307\u7eb9\u5206\u914d ID #'s\uff0c\u4ee5\u4fbf\u4ee5\u540e\u67e5\u8be2\u3002 \u4e00\u65e6\u60a8\u767b\u8bb0\u4e86\u60a8\u6240\u6709\u7684\u6307\u7eb9\uff0c\u60a8\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u201c\u641c\u7d22\u201d\u4f20\u611f\u5668\uff0c\u8981\u6c42\u5b83\u54ea\u4e00\u4e2a ID (\u5982\u679c\u6709)\u76ee\u524d\u5df2\u88ab\u5f55\u5165\u3002\n\n\n\n\n\u901a\u8fc7\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u6ce8\u518c\u7801 : \nFile-\nExample-\nFingerPrint-\nEnroll\n\u3002\n\n\n\u4e0a\u4f20\u4ee3\u7801\u5230 Arduino\u3002\n\n\n\u542f\u52a8\u4e32\u884c\u5de5\u5177\u5e76\u9009\u62e9 Arduino \u4f7f\u7528\u7684 ComNum \u548c BaudRate\u3002\n\n\n\u9009\u62e9 \"SendNew\" \u9009\u9879\uff0c\u53d1\u9001\u60a8\u60f3\u4f7f\u7528\u7684 ID #\uff0c\u60a8\u6700\u591a\u53ef\u4ee5\u4f7f\u7528 162 \u4e2a ID \u53f7\uff0c\u5e76\u4e14\u4f1a\u8981\u6c42\u60a8\u5c06\u624b\u6307\u6309\u5728\u4f20\u611f\u5668\u4e0a\u3002\u6b64\u65f6\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u7ea2\u8272\u7684LED\u95ea\u70c1\u3002\n\n\n\n\n\n\n\n\n\n\n\u5982\u679c\u60a8\u7684\u6309\u538b\u8db3\u591f\uff0c\u60a8\u4f1a\u770b\u5230\u4ee5\u4e0b\u6d88\u606f\u3002\u7136\u540e\uff0c\u60a8\u5fc5\u987b\u91cd\u590d\u8be5\u8fc7\u7a0b\uff0c\u7528\u540c\u4e00\u4e2a\u624b\u6307\u4ee5\u83b7\u5f97\u7b2c\u4e8c\u4e2a\u5e72\u51c0\u7684\u6307\u7eb9\u3002\u6210\u529f\u540e\uff0c\u60a8\u5c06\u770b\u5230\u6d88\u606f\u3002\n\n\n\n\n\n\n\n\n\u5982\u679c\u6709\u6307\u7eb9\u5f55\u5165\u4e0d\u6210\u529f\u7684\u95ee\u9898\uff0c\u4f60\u5fc5\u987b\u518d\u6b21\u505a\u3002\n\n\n\n\n\n\n\u4e00\u65e6\u4f60\u5f55\u5165\u4e86\u6307\u7eb9\uff0c\u6700\u597d\u505a\u4e00\u4e2a\u5feb\u901f\u6d4b\u8bd5\uff0c\u4ee5\u786e\u4fdd\u5b83\u53ef\u4ee5\u5728\u6570\u636e\u5e93\u4e2d\u627e\u5230\u3002\n\n\n\n\n\u6253\u5f00\u6f14\u793a\u4ee3\u7801 : \nfingerprint\n \u5e76\u4e0a\u4f20\u3002\n\n\n\u51fa\u73b0\u63d0\u793a\u65f6\uff0c\u7528\u5176\u4ed6/\u76f8\u540c\u7684\u624b\u6307\u6309\u538b\u4f20\u611f\u5668\u3002\u5982\u679c\u662f\u540c\u4e00\u4e2a\u624b\u6307\uff0c\u5219\u5e94\u8be5\u4e0e ID # \u5339\u914d\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\n\n\n\n\n\n\n\n\u5982\u679c\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u6307\u7eb9\uff0c\u8be5\u4e32\u884c\u7aef\u53e3\u5c06\u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb [Grove System](\n\n\n\n\nhttp://seeed.wiki/Grove_System/\n)\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u5e93\u6587\u4ef6]\n \nFinger Print Sensor Library File\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nZhianTec ZFM-206 Series Datasheet (for this version, but in Simplified Chinese)\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nZhianTec ZFM-20 Series Datasheet (for older series, but in English)", 
            "title": "Grove-Fingerprint Sensor"
        }, 
        {
            "location": "/Grove-Fingerprint_Sensor/#_1", 
            "text": "\u7535\u6e90\u7535\u538b : 3.6~6.0 V  \u6700\u5927\u5de5\u4f5c\u7535\u6d41\u00a0: 120 mA  \u6307\u7eb9\u6210\u50cf\u65f6\u95f4 : 1.0 S  \u5339\u914d\u6a21\u5f0f : Compare Mode 1:1  \u641c\u7d22\u6a21\u5f0f : 1:N  \u5b58\u50a8\u5bb9\u91cf : 162 \u6a21\u7248  \u9519\u8bef\u9a8c\u6536\u7387\u00a0: 0.001% (\u5b89\u5168\u7ea7\u522b 3)  \u9519\u8bef\u62d2\u6536\u7387 : 1.0% (\u5b89\u5168\u7ea7\u522b 3)  \u6ce2\u7279\u7387 : 9600, 19200, 28800, 38400, 57600bps (\u9ed8\u8ba4 57600)  \u63a5\u53e3 : TTL \u4e32\u884c  \u5de5\u4f5c\u6e29\u5ea6 : -20 ~ +50 \u2103  \u63a5\u53e3      \u5f15\u811a\u6570  \u540d\u79f0  \u7c7b\u578b  \u529f\u80fd\u63cf\u8ff0      1  Vin  in  \u6b63\u7535\u6e90\u8f93\u5165\u7aef\u5b50\uff08\u7ebf\u8def\u989c\u8272 : \u7ea2\u8272\uff09    2  TD  out  \u4e32\u884c\u6570\u636e\u8f93\u51fa\uff0cTTL\u903b\u8f91\u7535\u5e73\uff08\u7ebf\u8def\u989c\u8272 : \u9ec4\u8272\uff09    3  RD  in  \u4e32\u884c\u6570\u636e\u8f93\u5165\uff0cTTL\u903b\u8f91\u7535\u5e73\uff08\u7ebf\u8def\u989c\u8272 : \u767d\u8272\uff09    4  GND  -  \u4fe1\u53f7\u5730\uff08\u7ebf\u8def\u989c\u8272 : \u9ed1\u8272\uff09", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Fingerprint_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Fingerprint_Sensor/#_2", 
            "text": "\u6307\u7eb9\u4f20\u611f\u5668\u6a21\u5757\u901a\u5e38\u7528\u4e8e\u5b89\u5168\u90e8\u95e8\uff0c\u5b83\u6709\u4e00\u4e2a\u9ad8\u529f\u7387 DSP \u82af\u7247\u8fdb\u884c\u56fe\u50cf\u6e32\u67d3\uff0c\u8ba1\u7b97\uff0c\u7279\u5f81\u67e5\u627e\u548c\u641c\u7d22\u3002\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u5177\u6709 TTL \u4e32\u884c\u7684\u4efb\u4f55\u5fae\u63a7\u5236\u5668\u6216\u7cfb\u7edf\uff0c\u5e76\u53d1\u9001\u6570\u636e\u5305\u4ee5\u62cd\u7167\uff0c\u68c0\u6d4b\u6253\u5370\uff0c\u6563\u5217\u548c\u641c\u7d22\u3002\u60a8\u8fd8\u53ef\u4ee5\u76f4\u63a5\u5f55\u5165\u65b0\u7684\u624b\u6307\u6307\u7eb9\uff0c\u6700\u591a\u53ef\u4ee5\u5b58\u50a8 162 \u4e2a\u6307\u7eb9\u5728\u677f\u8f7d\u95ea\u5b58\u4e2d\u3002\u900f\u955c\u4e2d\u6709\u4e00\u4e2a\u7ea2\u8272\u7684 LED\uff0c\u5728\u62cd\u6444\u7167\u7247\u65f6\u4f1a\u70b9\u4eae\uff0c\u4ee5\u4fbf\u60a8\u4e86\u89e3\u5176\u5de5\u4f5c\u72b6\u6001\u3002   \u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230  Grove - Base Shield  \u7684\u6570\u5b57\u7aef\u53e3 2\u3002  \u5c06 Grove - Base Shield \u63d2\u5165 Arduino\uff0c\u5e76\u4f7f\u7528 USB \u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002   \u5f53\u63d2\u5165\u7535\u6e90\u65f6\uff0c\u60a8\u4f1a\u770b\u5230\u7ea2\u8272 LED \u95ea\u70c1\uff0c\u8fd9\u8868\u793a\u4f20\u611f\u5668\u6b63\u5728\u5de5\u4f5c\u3002    \u4e0b\u8f7d  Finger Print Sensor Library  \u5e76\u901a\u8fc7\u8def\u5f84 :  ..\\arduino-1.0.1\\libraries  \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\u3002   \u8fd9\u4e2a\u5e93\u6587\u4ef6\u53ef\u4ee5\u767b\u8bb0\u548c\u641c\u7d22\uff0c\u56e0\u6b64\u5b83\u9002\u7528\u4e8e\u4efb\u4f55\u9879\u76ee\u3002 \u5b83\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5728 10 \u5206\u949f\u5185\u5f97\u5230\u8fd0\u884c\u3002 \u4f7f\u7528\u5149\u5b66\u6307\u7eb9\u4f20\u611f\u5668\u4e3b\u8981\u6709\u4e24\u4e2a\u8981\u6c42\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u767b\u8bb0\u6307\u7eb9 - \u8fd9\u610f\u5473\u7740\u4e3a\u6bcf\u4e2a\u6307\u7eb9\u5206\u914d ID #'s\uff0c\u4ee5\u4fbf\u4ee5\u540e\u67e5\u8be2\u3002 \u4e00\u65e6\u60a8\u767b\u8bb0\u4e86\u60a8\u6240\u6709\u7684\u6307\u7eb9\uff0c\u60a8\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u201c\u641c\u7d22\u201d\u4f20\u611f\u5668\uff0c\u8981\u6c42\u5b83\u54ea\u4e00\u4e2a ID (\u5982\u679c\u6709)\u76ee\u524d\u5df2\u88ab\u5f55\u5165\u3002   \u901a\u8fc7\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u6ce8\u518c\u7801 :  File- Example- FingerPrint- Enroll \u3002  \u4e0a\u4f20\u4ee3\u7801\u5230 Arduino\u3002  \u542f\u52a8\u4e32\u884c\u5de5\u5177\u5e76\u9009\u62e9 Arduino \u4f7f\u7528\u7684 ComNum \u548c BaudRate\u3002  \u9009\u62e9 \"SendNew\" \u9009\u9879\uff0c\u53d1\u9001\u60a8\u60f3\u4f7f\u7528\u7684 ID #\uff0c\u60a8\u6700\u591a\u53ef\u4ee5\u4f7f\u7528 162 \u4e2a ID \u53f7\uff0c\u5e76\u4e14\u4f1a\u8981\u6c42\u60a8\u5c06\u624b\u6307\u6309\u5728\u4f20\u611f\u5668\u4e0a\u3002\u6b64\u65f6\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u7ea2\u8272\u7684LED\u95ea\u70c1\u3002      \u5982\u679c\u60a8\u7684\u6309\u538b\u8db3\u591f\uff0c\u60a8\u4f1a\u770b\u5230\u4ee5\u4e0b\u6d88\u606f\u3002\u7136\u540e\uff0c\u60a8\u5fc5\u987b\u91cd\u590d\u8be5\u8fc7\u7a0b\uff0c\u7528\u540c\u4e00\u4e2a\u624b\u6307\u4ee5\u83b7\u5f97\u7b2c\u4e8c\u4e2a\u5e72\u51c0\u7684\u6307\u7eb9\u3002\u6210\u529f\u540e\uff0c\u60a8\u5c06\u770b\u5230\u6d88\u606f\u3002     \u5982\u679c\u6709\u6307\u7eb9\u5f55\u5165\u4e0d\u6210\u529f\u7684\u95ee\u9898\uff0c\u4f60\u5fc5\u987b\u518d\u6b21\u505a\u3002    \u4e00\u65e6\u4f60\u5f55\u5165\u4e86\u6307\u7eb9\uff0c\u6700\u597d\u505a\u4e00\u4e2a\u5feb\u901f\u6d4b\u8bd5\uff0c\u4ee5\u786e\u4fdd\u5b83\u53ef\u4ee5\u5728\u6570\u636e\u5e93\u4e2d\u627e\u5230\u3002   \u6253\u5f00\u6f14\u793a\u4ee3\u7801 :  fingerprint  \u5e76\u4e0a\u4f20\u3002  \u51fa\u73b0\u63d0\u793a\u65f6\uff0c\u7528\u5176\u4ed6/\u76f8\u540c\u7684\u624b\u6307\u6309\u538b\u4f20\u611f\u5668\u3002\u5982\u679c\u662f\u540c\u4e00\u4e2a\u624b\u6307\uff0c\u5219\u5e94\u8be5\u4e0e ID # \u5339\u914d\uff0c\u5982\u4e0b\u6240\u793a\u3002     \u5982\u679c\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u6307\u7eb9\uff0c\u8be5\u4e32\u884c\u7aef\u53e3\u5c06\u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\u3002    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb [Grove System](   http://seeed.wiki/Grove_System/ )", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Fingerprint_Sensor/#_3", 
            "text": "[\u5e93\u6587\u4ef6]   Finger Print Sensor Library File  [\u82af\u7247\u6570\u636e\u624b\u518c]   ZhianTec ZFM-206 Series Datasheet (for this version, but in Simplified Chinese)  [\u82af\u7247\u6570\u636e\u624b\u518c]   ZhianTec ZFM-20 Series Datasheet (for older series, but in English)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-GPS/", 
            "text": "\u8fd9\u4e2a Grove - GPS \u6a21\u5757\u662f\u4e00\u6b3e\u4f4e\u6210\u672c\u7684\u73b0\u573a\u53ef\u7f16\u7a0b\u5c0f\u914d\u4ef6\uff0c\u5176\u914d\u5907\u4e86 SIM28 ( u-blox 6 \u662f\u65e7\u7248\u672c ) \u548c\u4e32\u884c\u901a\u4fe1\u914d\u7f6e\u3002\u5b83\u914d\u5907\u4e86\u4e00\u4e2a\u5177\u6709 22 \u4e2a\u8ddf\u8e2a\u901a\u9053\uff0c66\u4e2a\u91c7\u96c6\u901a\u9053\u7684 GPS \u63a5\u6536\u5668\u3002\u5b83\u7684\u8ddf\u8e2a\u548c\u91c7\u96c6\u7684\u7075\u654f\u5ea6\u53ef\u8fbe\u5230 -160dBm\uff0c\u8fd9\u4f7f\u5176\u6210\u4e3a\u4e2a\u4eba\u5bfc\u822a\u9879\u76ee\u548c\u5b9a\u4f4d\u670d\u52a1\u7684\u6700\u4f73\u9009\u62e9\uff0c\u540c\u65f6\u4e5f\u662f\u540c\u7c7b\u4ea7\u54c1\u4e2d\u7684\u6027\u4ef7\u6bd4\u4f7c\u4f7c\u8005\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u652f\u6301 NMEA \u548c u-blox 6 \u534f\u8bae\u3002( \u622a\u81f3 2014 \u5e74 1 \u6708 10 \u65e5\uff0c\u4e4b\u540e SIM28 )\n\n\n\u4f4e\u529f\u8017\n\n\n\u53ef\u914d\u7f6e\u6ce2\u7279\u7387\n\n\nGrove \u517c\u5bb9\u63a5\u53e3\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u8303\u56f4/\u503c\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\n\n\n3.\nV\n\n\n\n\n\n\n\u6ce2\u7279\u7387\n\n\n4800 - 57600 (u-blox \u7248\u672c)\n\n\n\n\n\n\n\u6ce2\u7279\u7387\n\n\n9600 - 115200 (SIM28 \u7248\u672c)\n\n\n\n\n\n\n\u9ed8\u8ba4\u6ce2\u7279\u7387\n\n\n9600\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u9075\u5faa \nGrove system\n \u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5b9e\u73b0 Grove \u5165\u95e8\u3002\n\n\n\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528\n\n\n\u8be5\u793a\u4f8b\u4ec5\u4f7f\u7528\u8f6f\u4ef6\u4e32\u884c\u4ece GPS \u8bfb\u53d6\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u56de\u4e32\u884c\u7aef\u53e3\u3002\n\n\n\u8fde\u63a5\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a Grove - GPS \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - GPS\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 Grove-GPS \u8fde\u63a5\u5230 Grove - Base Shield \u4e0a\u7684 \n\u6570\u5b57\u7aef\u53e32\n\u3002\n\n\n\u628a base Shield \u63d2\u5165 Seeeduino-V4\u3002\n\n\n\u4f7f\u7528 USB \u7ebf\u7f06\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\u90e8\u5206\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0cu-center \u8f6f\u4ef6\u4ec5\u9002\u7528\u4e8e Windows\u3002\n\n\n\n\n\n\n\u5b89\u88c5 \nu-center\n\u3002\n\n\n\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684Arduino / Seeeduino\u3002\n\n\n\n\n#include \nSoftwareSerial.h\n\nSoftwareSerial SoftSerial(2, 3);\nunsigned char buffer[64];                   // buffer array for data receive over serial port\nint count=0;                                // counter for buffer array\nvoid setup()\n{\n    SoftSerial.begin(9600);                 // the SoftSerial baud rate\n    Serial.begin(9600);                     // the Serial port of Arduino baud rate.\n}\n\nvoid loop()\n{\n    if (SoftSerial.available())                     // if date is coming from software serial port ==\n data is coming from SoftSerial shield\n    {\n        while(SoftSerial.available())               // reading data into char array\n        {\n            buffer[count++]=SoftSerial.read();      // writing data into array\n            if(count == 64)break;\n        }\n        Serial.write(buffer,count);                 // if no data transmission ends, write buffer to hardware serial port\n        clearBufferArray();                         // call clearBufferArray function to clear the stored data from the array\n        count = 0;                                  // set counter of while loop to zero\u00a0\n    }\n    if (Serial.available())                 // if data is available on hardware serial port ==\n data is coming from PC or notebook\n    SoftSerial.write(Serial.read());        // write it to the SoftSerial shield\n}\n\n\nvoid clearBufferArray()                     // function to clear buffer array\n{\n    for (int i=0; i\ncount;i++)\n    {\n        buffer[i]=NULL;\n    }                      // clear all index of array with command NULL\n}\n\n\n\n\n\n\n\u6253\u5f00 U-center.\n\n\n\u70b9\u51fb \nReceiver -\n Port\n\uff0c\u7136\u540e\u9009\u62e9 Arduino \u6b63\u5728\u4f7f\u7528\u7684 COM \u7aef\u53e3\u3002\n\n\n\u70b9\u51fb \nReceiver -\n Baudrate\n \u786e\u4fdd\u9009\u5230 9600\u3002\n\n\n\u70b9\u51fb \nView -\n Text Console\n \u7136\u540e\u60a8\u4f1a\u5f97\u5230\u4e00\u4e2a NMEA \u6570\u636e\u6d41\u7684\u7a97\u53e3\u3002\n\n\n\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6240\u793a :\n\n\n\n\n\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728 Google Earth \u4e2d\u67e5\u770b\u6570\u636e :\n\n\n\n\n\u70b9\u51fb \nFile(\u6587\u4ef6) -\n Database Export -\n Google Earth KML\n\n\n\u542f\u52a8\u6709 u-center \u6536\u96c6\u4e86\u5386\u53f2\u7684 Google Earth\u3002\n\n\n\u6216\u8005\u53ef\u4ee5\u901a\u8fc7\u6309\u5de5\u5177\u680f\u4e0a\u7684\u7ea2\u8272\u5706\u5708\u6765\u8bb0\u5f55\u6570\u636e\uff0c\u5b83\u8fd8\u4f1a\u8be2\u95ee\u60a8\u8981\u4fdd\u5b58\u8bb0\u5f55\u7684\u4f4d\u7f6e\u3002\n\n\n\u5f53\u6211\u4eec\u6355\u83b7\u4e86\u8db3\u591f\u7684\u6570\u636e\u65f6\uff0c\u70b9\u51fb\u9ed1\u8272\u7684\u65b9\u5757\u6765\u505c\u6b62\u5f55\u5236\u3002\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a ubx \u6587\u4ef6\u4e0a\u4f20\u5230 \nGPSVisualizer\n \uff0c\u5c06\u751f\u6210\u7684 .ubx \u6587\u4ef6\u8f6c\u6362\u4e3a KML\u3002\n\n\n\n\n\u4e0e Raspberry \u4e00\u8d77\u4f7f\u7528\n\n\n\u8fde\u63a5\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9 :\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - GPS\n\n\nGrovePi_Plus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u6309\u7167 \n\u8bf4\u660e\n \u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\n\n\n\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u63d2\u5165 Grovepi + \u63d2\u5ea7 \nRPISER\n\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\u90e8\u5206\n\n\n\n\n\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n\n\u627e\u5230\u4ee3\u7801\u3002\n\n    nano grove_gps.py   # \nCtrl+x\n to exit #\n\n\n\n\n\nimport serial, time\nimport smbus\nimport math\nimport RPi.GPIO as GPIO\nimport struct\nimport sys\n\u00a0\nser = serial.Serial(\n/dev/ttyAMA0\n,  9600, timeout = 0)   #Open the serial port at 9600 baud\nser.flush()\n\u00a0\nclass GPS:\n    #The GPS module used is a Grove GPS module http://www.seeedstudio.com/depot/Grove-GPS-p-959.html\n    inp=[]\n    # Refer to SIM28 NMEA spec file https://raw.githubusercontent.com/SeeedDocument/Grove-GPS/master/res/SIM28_DATA_File.zip\n    GGA=[]\n\u00a0\n    #Read data from the GPS\n    def read(self):\n        while True:\n            GPS.inp=ser.readline()\n            if GPS.inp[:6] ==\n$GPGGA\n: # GGA data , packet 1, has all the data we need\n                break\n            time.sleep(0.1)\n        try:\n            ind=GPS.inp.index(\n$GPGGA\n,5,len(GPS.inp)) #Sometimes multiple GPS data packets come into the stream. Take the data only after the last \n$GPGGA\n is seen\n            GPS.inp=GPS.inp[ind:]\n        except ValueError:\n            print \n\n        GPS.GGA=GPS.inp.split(\n,\n)   #Split the stream into individual parts\n        return [GPS.GGA]\n\u00a0\n    #Split the data into individual elements\n    def vals(self):\n        time=GPS.GGA[1]\n        lat=GPS.GGA[2]\n        lat_ns=GPS.GGA[3]\n        long=GPS.GGA[4]\n        long_ew=GPS.GGA[5]\n        fix=GPS.GGA[6]\n        sats=GPS.GGA[7]\n        alt=GPS.GGA[9]\n        return [time,fix,sats,alt,lat,lat_ns,long,long_ew]\n\u00a0\ng=GPS()\nf=open(\ngps_data.csv\n,\nw\n)   #Open file to log the data\nf.write(\nname,latitude,longitude\\n\n)   #Write the header to the top of the file\nind=0\nwhile True:\n    try:\n        x=g.read()  #Read from GPS\n        [t,fix,sats,alt,lat,lat_ns,long,long_ew]=g.vals() #Get the individial values\n        print \nTime:\n,t,\nFix status:\n,fix,\nSats in view:\n,sats,\nAltitude\n,alt,\nLat:\n,lat,lat_ns,\nLong:\n,long,long_ew\n        s=str(t)+\n,\n+str(float(lat)/100)+\n,\n+str(float(long)/100)+\n\\n\n   \n        f.write(s)   #Save to file\n        time.sleep(2)\n    except IndexError:\n        print \nUnable to read\n\n    except KeyboardInterrupt:\n        f.close()\n        print \nExiting\n\n        sys.exit(0)\n\n\n\n\n\n\n\n\n\u8fd0\u884c\u4ee3\u7801\u3002\n\n    sudo python grove_gps.py\n\n\n\n\n\n\n\n\u7ed3\u679c\u5982\u4e0b\u3002\n\n\n\n\n\n\n\n\n\n\nNote\n\nGPS \u66f4\u9002\u5408\u6237\u5916\u4f7f\u7528\u3002 \u5efa\u8bae\u5c06\u60a8\u7684 raspberry pi \u653e\u5728\u7a97\u5916\u6216\u5ba4\u5916\u4efb\u4f55\u5730\u65b9\u3002\n\n\n\n\nSIM28 \u6a21\u5757\u6ce8\u610f :\n\n\n\n\n\n\nGrove-GPS \u5c06\u6a21\u5757\u66f4\u6539\u4e3a SIM28\uff0c\u4e0e\u539f\u59cb\u7248\u672c\u76f8\u540c\u3002\n\n\n\u6211\u4eec\u5e94\u8be5\u4f7f\u7528 \n\"SIMCom GPS DEMO\"\n \u5de5\u5177\u6765\u63a5\u6536 SIM28 \u6a21\u5757\u6570\u636e\u3002\n\n\n\u6253\u5f00 SIMCom_GPS_DEMO \u5de5\u5177\uff0c\u8f6c\u5230 \nModule-\nproperties-\nmodule-\nselect SIM28\n\u3002.\n\n\n\n\nSIMCom_GPS_DEMO_V1.07 \u4ec5\u9002\u7528\u4e8e Windows\u3002\n\n\n\n\n\n\n\n\n\u6253\u5f00 SIMCom_GPS_DEMO \u5de5\u5177\uff0c\u8f6c\u5230 \nModule-\nconnect\n\u3002 \u9009\u62e9 GPS \u6a21\u5757\u4f7f\u7528\u7684\u4e32\u884c\u7aef\u53e3\u3002\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-GPS Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nGPS Schematic(PDF)\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nE-1612-UB Datasheet\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nU-Blox6 Receiver Description Protocol Spec\n\n\n[\u5176\u4ed6\u6587\u4ef6]\n \nU-Blox u-center GPS evaluation software\n\n\n[\u5176\u4ed6\u6587\u4ef6]\n \nSIM28_DATA_File\n\n\n[\u5176\u4ed6\u6587\u4ef6]\n \nSIMCom_GPS_DEMO_V1.07", 
            "title": "Grove-GPS"
        }, 
        {
            "location": "/Grove-GPS/#_1", 
            "text": "\u652f\u6301 NMEA \u548c u-blox 6 \u534f\u8bae\u3002( \u622a\u81f3 2014 \u5e74 1 \u6708 10 \u65e5\uff0c\u4e4b\u540e SIM28 )  \u4f4e\u529f\u8017  \u53ef\u914d\u7f6e\u6ce2\u7279\u7387  Grove \u517c\u5bb9\u63a5\u53e3    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-GPS/#_2", 
            "text": "\u9879\u76ee  \u8303\u56f4/\u503c      \u8f93\u5165\u7535\u538b  3. V    \u6ce2\u7279\u7387  4800 - 57600 (u-blox \u7248\u672c)    \u6ce2\u7279\u7387  9600 - 115200 (SIM28 \u7248\u672c)    \u9ed8\u8ba4\u6ce2\u7279\u7387  9600", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-GPS/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-GPS/#_3", 
            "text": "\u9075\u5faa  Grove system  \u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5b9e\u73b0 Grove \u5165\u95e8\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-GPS/#arduino", 
            "text": "\u8be5\u793a\u4f8b\u4ec5\u4f7f\u7528\u8f6f\u4ef6\u4e32\u884c\u4ece GPS \u8bfb\u53d6\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u56de\u4e32\u884c\u7aef\u53e3\u3002", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-GPS/#_4", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a Grove - GPS \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - GPS  Base Shield           \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70      \u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 Grove-GPS \u8fde\u63a5\u5230 Grove - Base Shield \u4e0a\u7684  \u6570\u5b57\u7aef\u53e32 \u3002  \u628a base Shield \u63d2\u5165 Seeeduino-V4\u3002  \u4f7f\u7528 USB \u7ebf\u7f06\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002", 
            "title": "\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-GPS/#_5", 
            "text": "Note  \u8bf7\u6ce8\u610f\uff0cu-center \u8f6f\u4ef6\u4ec5\u9002\u7528\u4e8e Windows\u3002    \u5b89\u88c5  u-center \u3002  \u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u4e0a\u4f20\u5230\u60a8\u7684Arduino / Seeeduino\u3002   #include  SoftwareSerial.h \nSoftwareSerial SoftSerial(2, 3);\nunsigned char buffer[64];                   // buffer array for data receive over serial port\nint count=0;                                // counter for buffer array\nvoid setup()\n{\n    SoftSerial.begin(9600);                 // the SoftSerial baud rate\n    Serial.begin(9600);                     // the Serial port of Arduino baud rate.\n}\n\nvoid loop()\n{\n    if (SoftSerial.available())                     // if date is coming from software serial port ==  data is coming from SoftSerial shield\n    {\n        while(SoftSerial.available())               // reading data into char array\n        {\n            buffer[count++]=SoftSerial.read();      // writing data into array\n            if(count == 64)break;\n        }\n        Serial.write(buffer,count);                 // if no data transmission ends, write buffer to hardware serial port\n        clearBufferArray();                         // call clearBufferArray function to clear the stored data from the array\n        count = 0;                                  // set counter of while loop to zero\u00a0\n    }\n    if (Serial.available())                 // if data is available on hardware serial port ==  data is coming from PC or notebook\n    SoftSerial.write(Serial.read());        // write it to the SoftSerial shield\n}\n\n\nvoid clearBufferArray()                     // function to clear buffer array\n{\n    for (int i=0; i count;i++)\n    {\n        buffer[i]=NULL;\n    }                      // clear all index of array with command NULL\n}   \u6253\u5f00 U-center.  \u70b9\u51fb  Receiver -  Port \uff0c\u7136\u540e\u9009\u62e9 Arduino \u6b63\u5728\u4f7f\u7528\u7684 COM \u7aef\u53e3\u3002  \u70b9\u51fb  Receiver -  Baudrate  \u786e\u4fdd\u9009\u5230 9600\u3002  \u70b9\u51fb  View -  Text Console  \u7136\u540e\u60a8\u4f1a\u5f97\u5230\u4e00\u4e2a NMEA \u6570\u636e\u6d41\u7684\u7a97\u53e3\u3002  \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6240\u793a :    \u6211\u4eec\u4e5f\u53ef\u4ee5\u5728 Google Earth \u4e2d\u67e5\u770b\u6570\u636e :   \u70b9\u51fb  File(\u6587\u4ef6) -  Database Export -  Google Earth KML  \u542f\u52a8\u6709 u-center \u6536\u96c6\u4e86\u5386\u53f2\u7684 Google Earth\u3002  \u6216\u8005\u53ef\u4ee5\u901a\u8fc7\u6309\u5de5\u5177\u680f\u4e0a\u7684\u7ea2\u8272\u5706\u5708\u6765\u8bb0\u5f55\u6570\u636e\uff0c\u5b83\u8fd8\u4f1a\u8be2\u95ee\u60a8\u8981\u4fdd\u5b58\u8bb0\u5f55\u7684\u4f4d\u7f6e\u3002  \u5f53\u6211\u4eec\u6355\u83b7\u4e86\u8db3\u591f\u7684\u6570\u636e\u65f6\uff0c\u70b9\u51fb\u9ed1\u8272\u7684\u65b9\u5757\u6765\u505c\u6b62\u5f55\u5236\u3002  \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a ubx \u6587\u4ef6\u4e0a\u4f20\u5230  GPSVisualizer  \uff0c\u5c06\u751f\u6210\u7684 .ubx \u6587\u4ef6\u8f6c\u6362\u4e3a KML\u3002", 
            "title": "\u8f6f\u4ef6\u90e8\u5206"
        }, 
        {
            "location": "/Grove-GPS/#raspberry", 
            "text": "", 
            "title": "\u4e0e Raspberry \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-GPS/#_6", 
            "text": "\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9 :     Raspberry pi  Grove - GPS  GrovePi_Plus           \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70      \u6309\u7167  \u8bf4\u660e  \u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002  \u4f7f\u7528 Grove \u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u63d2\u5165 Grovepi + \u63d2\u5ea7  RPISER \u3002", 
            "title": "\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-GPS/#_7", 
            "text": "\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :     cd yourpath/GrovePi/Software/Python/  \u627e\u5230\u4ee3\u7801\u3002     nano grove_gps.py   #  Ctrl+x  to exit #   import serial, time\nimport smbus\nimport math\nimport RPi.GPIO as GPIO\nimport struct\nimport sys\n\u00a0\nser = serial.Serial( /dev/ttyAMA0 ,  9600, timeout = 0)   #Open the serial port at 9600 baud\nser.flush()\n\u00a0\nclass GPS:\n    #The GPS module used is a Grove GPS module http://www.seeedstudio.com/depot/Grove-GPS-p-959.html\n    inp=[]\n    # Refer to SIM28 NMEA spec file https://raw.githubusercontent.com/SeeedDocument/Grove-GPS/master/res/SIM28_DATA_File.zip\n    GGA=[]\n\u00a0\n    #Read data from the GPS\n    def read(self):\n        while True:\n            GPS.inp=ser.readline()\n            if GPS.inp[:6] == $GPGGA : # GGA data , packet 1, has all the data we need\n                break\n            time.sleep(0.1)\n        try:\n            ind=GPS.inp.index( $GPGGA ,5,len(GPS.inp)) #Sometimes multiple GPS data packets come into the stream. Take the data only after the last  $GPGGA  is seen\n            GPS.inp=GPS.inp[ind:]\n        except ValueError:\n            print  \n        GPS.GGA=GPS.inp.split( , )   #Split the stream into individual parts\n        return [GPS.GGA]\n\u00a0\n    #Split the data into individual elements\n    def vals(self):\n        time=GPS.GGA[1]\n        lat=GPS.GGA[2]\n        lat_ns=GPS.GGA[3]\n        long=GPS.GGA[4]\n        long_ew=GPS.GGA[5]\n        fix=GPS.GGA[6]\n        sats=GPS.GGA[7]\n        alt=GPS.GGA[9]\n        return [time,fix,sats,alt,lat,lat_ns,long,long_ew]\n\u00a0\ng=GPS()\nf=open( gps_data.csv , w )   #Open file to log the data\nf.write( name,latitude,longitude\\n )   #Write the header to the top of the file\nind=0\nwhile True:\n    try:\n        x=g.read()  #Read from GPS\n        [t,fix,sats,alt,lat,lat_ns,long,long_ew]=g.vals() #Get the individial values\n        print  Time: ,t, Fix status: ,fix, Sats in view: ,sats, Altitude ,alt, Lat: ,lat,lat_ns, Long: ,long,long_ew\n        s=str(t)+ , +str(float(lat)/100)+ , +str(float(long)/100)+ \\n    \n        f.write(s)   #Save to file\n        time.sleep(2)\n    except IndexError:\n        print  Unable to read \n    except KeyboardInterrupt:\n        f.close()\n        print  Exiting \n        sys.exit(0)    \u8fd0\u884c\u4ee3\u7801\u3002     sudo python grove_gps.py    \u7ed3\u679c\u5982\u4e0b\u3002      Note \nGPS \u66f4\u9002\u5408\u6237\u5916\u4f7f\u7528\u3002 \u5efa\u8bae\u5c06\u60a8\u7684 raspberry pi \u653e\u5728\u7a97\u5916\u6216\u5ba4\u5916\u4efb\u4f55\u5730\u65b9\u3002", 
            "title": "\u8f6f\u4ef6\u90e8\u5206"
        }, 
        {
            "location": "/Grove-GPS/#sim28", 
            "text": "Grove-GPS \u5c06\u6a21\u5757\u66f4\u6539\u4e3a SIM28\uff0c\u4e0e\u539f\u59cb\u7248\u672c\u76f8\u540c\u3002  \u6211\u4eec\u5e94\u8be5\u4f7f\u7528  \"SIMCom GPS DEMO\"  \u5de5\u5177\u6765\u63a5\u6536 SIM28 \u6a21\u5757\u6570\u636e\u3002  \u6253\u5f00 SIMCom_GPS_DEMO \u5de5\u5177\uff0c\u8f6c\u5230  Module- properties- module- select SIM28 \u3002.   SIMCom_GPS_DEMO_V1.07 \u4ec5\u9002\u7528\u4e8e Windows\u3002     \u6253\u5f00 SIMCom_GPS_DEMO \u5de5\u5177\uff0c\u8f6c\u5230  Module- connect \u3002 \u9009\u62e9 GPS \u6a21\u5757\u4f7f\u7528\u7684\u4e32\u884c\u7aef\u53e3\u3002", 
            "title": "SIM28 \u6a21\u5757\u6ce8\u610f :"
        }, 
        {
            "location": "/Grove-GPS/#_8", 
            "text": "[Eagle\u6587\u4ef6]   Grove-GPS Eagle File  [\u539f\u7406\u56fePDF]   GPS Schematic(PDF)  [\u82af\u7247\u6570\u636e\u624b\u518c]   E-1612-UB Datasheet  [\u82af\u7247\u6570\u636e\u624b\u518c]   U-Blox6 Receiver Description Protocol Spec  [\u5176\u4ed6\u6587\u4ef6]   U-Blox u-center GPS evaluation software  [\u5176\u4ed6\u6587\u4ef6]   SIM28_DATA_File  [\u5176\u4ed6\u6587\u4ef6]   SIMCom_GPS_DEMO_V1.07", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Line_Finder/", 
            "text": "Grove-Line finder \u4e3a\u7ebf\u8ddf\u968f\u673a\u5668\u4eba\u8bbe\u8ba1\u3002\u5b83\u5177\u6709\u7ea2\u5916\u53d1\u5c04 LED \u548c\u7ea2\u5916\u654f\u611f\u5149\u7535\u6676\u4f53\u7ba1\u3002\u5b83\u53ef\u4ee5\u5c06\u6570\u5b57\u4fe1\u53f7\u8f93\u51fa\u5230\u5fae\u63a7\u5236\u5668\uff0c\u8fd9\u6837\u673a\u5668\u4eba\u53ef\u4ee5\u7a33\u5b9a\u5730\u8ddf\u968f\u767d\u8272\u80cc\u666f\u4e0a\u7684\u9ed1\u7ebf\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u7535\u6e90 : 5V \u76f4\u6d41\u7535\n\n\n\u6570\u5b57\u8f93\u51fa\u6a21\u5f0f : TTL ( \u68c0\u6d4b\u5230\u9ed1\u8272\u65f6\u4e3a\u9ad8\u7535\u5e73\uff0c\u68c0\u6d4b\u5230\u767d\u8272\u65f6\u4e3a\u4f4e\u7535\u5e73 )\n\n\n\u8fde\u63a5\u5668 : 4 \u5f15\u811a\u6263 Grove \u63a5\u53e3\n\n\n\u5c3a\u5bf8 : 20mm * 20mm\n\n\n\u6ee1\u8db3\u9650\u5236\u6709\u5bb3\u7269\u8d28\u6307\u4ee4\n\n\n\u6bd4\u6d4b\u4eea : MV358\n\n\n\u5149\u53cd\u5c04\u4e8c\u6781\u7ba1 : RS-06WD\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528\n\n\n\u5f53\u68c0\u6d4b\u5230\u9ed1\u7ebf\u65f6\uff0cBrick \u5c06\u8fd4\u56de HIGH\uff0c\u5f53\u68c0\u6d4b\u5230\u767d\u7ebf\u65f6\uff0c\u8fd4\u56de LOW\u3002 \u4f7f\u7528\u53ef\u8c03\u7535\u963b\uff0c\u68c0\u6d4b\u8303\u56f4\u53ef\u4ee5\u4ece 1.5cm \u53d8\u5316\u5230 5cm\u3002 \u5982\u679c\u4f20\u611f\u5668\u5728\u9ed1\u8272\u548c\u767d\u8272\u8868\u9762\u4e4b\u95f4\u65e0\u6cd5\u8fa8\u522b\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53ef\u8c03\u7535\u963b\u6765\u8bbe\u7f6e\u5408\u9002\u7684\u53c2\u8003\u7535\u538b\u3002\n\n\n\u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\n\nDemo code\n{\n\n//------------------------------------------------------------\n//Name: Line finder digital mode\n//Function: detect black line or white line\n//Parameter:   When digital signal is HIGH, black line\n//             When digital signal is LOW, white line\n//-------------------------------------------------------------\nint signalPin =  3;    // connected to digital pin 3\nvoid setup()   {\n  pinMode(signalPin, INPUT); // initialize the digital pin as an output:\n  Serial.begin(9600);  // initialize serial communications at 9600 bps:\n}\n// the loop() method runs over and over again,\n// as long as the Arduino has power\nvoid loop()\n{\n  if(HIGH == digitalRead(signalPin))\n    Serial.println(\nblack\n);\n    else  Serial.println(\nwhite\n);  // display the color\n    //delay(1000);                  // wait for a second\n}\n\n}\n\n\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n\n\n\u4f60\u9700\u8981\u6709 Raspberry pi \u548c Grovepi \u6216 Grovepi+\u3002\n\n\n\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \n\u8fd9\u91cc\n\u3002\n\n\n\u8fde\u63a5\n\n\n\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u63d2\u5165 Grovepi \u7684\u63d2\u5ea7 \nD7\n\u3002\n\n\n\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n\n\n\n cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\n\n   nano grove_line_finder.py   # \nCtrl+x\n to exit #\n\n\n\nimport time\nimport grovepi\n\n# Connect the Grove Line Finder to digital port D7\n# SIG,NC,VCC,GND\nline_finder = 7\n\ngrovepi.pinMode(line_finder,\nINPUT\n)\n\nwhile True:\n    try:\n        # Return HIGH when black line is detected, and LOW when white line is detected\n        if grovepi.digitalRead(line_finder) == 1:\n            print \nblack line detected\n\n        else:\n            print \nwhite line detected\n\n\n        time.sleep(.5)\n\n    except IOError:\n        print \nError\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\n\n   sudo python grove_line_finder.py\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u539f\u7406\u56fe\u6587\u4ef6]\n \nEagle files\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nLMV358.PDF\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nSchematic at Easyeda", 
            "title": "Grove-Line Finder"
        }, 
        {
            "location": "/Grove-Line_Finder/#_1", 
            "text": "\u7535\u6e90 : 5V \u76f4\u6d41\u7535  \u6570\u5b57\u8f93\u51fa\u6a21\u5f0f : TTL ( \u68c0\u6d4b\u5230\u9ed1\u8272\u65f6\u4e3a\u9ad8\u7535\u5e73\uff0c\u68c0\u6d4b\u5230\u767d\u8272\u65f6\u4e3a\u4f4e\u7535\u5e73 )  \u8fde\u63a5\u5668 : 4 \u5f15\u811a\u6263 Grove \u63a5\u53e3  \u5c3a\u5bf8 : 20mm * 20mm  \u6ee1\u8db3\u9650\u5236\u6709\u5bb3\u7269\u8d28\u6307\u4ee4  \u6bd4\u6d4b\u4eea : MV358  \u5149\u53cd\u5c04\u4e8c\u6781\u7ba1 : RS-06WD    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Line_Finder/#_2", 
            "text": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528  \u5f53\u68c0\u6d4b\u5230\u9ed1\u7ebf\u65f6\uff0cBrick \u5c06\u8fd4\u56de HIGH\uff0c\u5f53\u68c0\u6d4b\u5230\u767d\u7ebf\u65f6\uff0c\u8fd4\u56de LOW\u3002 \u4f7f\u7528\u53ef\u8c03\u7535\u963b\uff0c\u68c0\u6d4b\u8303\u56f4\u53ef\u4ee5\u4ece 1.5cm \u53d8\u5316\u5230 5cm\u3002 \u5982\u679c\u4f20\u611f\u5668\u5728\u9ed1\u8272\u548c\u767d\u8272\u8868\u9762\u4e4b\u95f4\u65e0\u6cd5\u8fa8\u522b\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53ef\u8c03\u7535\u963b\u6765\u8bbe\u7f6e\u5408\u9002\u7684\u53c2\u8003\u7535\u538b\u3002  \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :  Demo code\n{\n\n//------------------------------------------------------------\n//Name: Line finder digital mode\n//Function: detect black line or white line\n//Parameter:   When digital signal is HIGH, black line\n//             When digital signal is LOW, white line\n//-------------------------------------------------------------\nint signalPin =  3;    // connected to digital pin 3\nvoid setup()   {\n  pinMode(signalPin, INPUT); // initialize the digital pin as an output:\n  Serial.begin(9600);  // initialize serial communications at 9600 bps:\n}\n// the loop() method runs over and over again,\n// as long as the Arduino has power\nvoid loop()\n{\n  if(HIGH == digitalRead(signalPin))\n    Serial.println( black );\n    else  Serial.println( white );  // display the color\n    //delay(1000);                  // wait for a second\n}\n\n}  \u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528   \u4f60\u9700\u8981\u6709 Raspberry pi \u548c Grovepi \u6216 Grovepi+\u3002  \u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa  \u8fd9\u91cc \u3002  \u8fde\u63a5  \u4f7f\u7528 Grove \u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u63d2\u5165 Grovepi \u7684\u63d2\u5ea7  D7 \u3002  \u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :    cd yourpath/GrovePi/Software/Python/  \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :     nano grove_line_finder.py   #  Ctrl+x  to exit #  import time\nimport grovepi\n\n# Connect the Grove Line Finder to digital port D7\n# SIG,NC,VCC,GND\nline_finder = 7\n\ngrovepi.pinMode(line_finder, INPUT )\n\nwhile True:\n    try:\n        # Return HIGH when black line is detected, and LOW when white line is detected\n        if grovepi.digitalRead(line_finder) == 1:\n            print  black line detected \n        else:\n            print  white line detected \n\n        time.sleep(.5)\n\n    except IOError:\n        print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002     sudo python grove_line_finder.py", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Line_Finder/#_3", 
            "text": "[\u539f\u7406\u56fe\u6587\u4ef6]   Eagle files  [\u82af\u7247\u6570\u636e\u624b\u518c]   LMV358.PDF  [\u5176\u4ed6\u8d44\u6e90]   Schematic at Easyeda", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/", 
            "text": "\u7535\u4f4d\u8ba1\u5728\u5176 D1 \u8fde\u63a5\u5668\u4e0a\u4ea7\u751f 0 \u548c Vcc \u4e4b\u95f4\u7684\u6a21\u62df\u8f93\u51fa ( 5V \u76f4\u6d41\uff0c\u4f7f\u7528Seeeduino)\u3002D2 \u8fde\u63a5\u5668\u672a\u4f7f\u7528\u3002\u89d2\u5ea6\u8303\u56f4\u4e3a 300 \u5ea6\uff0c\u5177\u6709\u7ebf\u6027\u53d8\u5316\u7684\u7279\u6027\u3002\u7535\u963b\u503c\u4e3a 10 \u6b27\u59c6\uff0c\u975e\u5e38\u9002\u5408 Arduino \u4f7f\u7528\u3002\u8fd9\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u65cb\u8f6c\u89d2\u5ea6\u4f20\u611f\u5668\u3002\n\n\n\n\n\u8fd8\u6709\u53e6\u4e00\u4e2a\u4ea7\u54c1 - \nGrove - Rotary Angle Sensor(P)\n\u3002 \"P\" \u662f\u4ec0\u4e48\u610f\u601d? \"P\" \u662f\u672c\u4ea7\u54c1\u4e2d\u7684\u201c\u9762\u677f\u5b89\u88c5\u201d\u3002\u5b83\u662f Grove - Rotary Angle Sensor \u7684\u59d0\u59b9\u7248\u672c\u3002 \u5b83\u4eec\u662f\u76f8\u540c\u7684\uff0c\u9664\u4e86 Grove \u8fde\u63a5\u5668\u88ab\u79fb\u52a8\u5230\u540e\u9762\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u5176\u7528\u4f5c\u4e00\u4e2a\u6574\u6d01\u7684\u65e0\u7ebf\u4eba\u673a\u754c\u9762\u8bbe\u5907\u3002\n\n\n\n    \n\n        \n\n            \n\n        \n\n        \n\n            \n\n        \n\n    \n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u63a5\u53e3\n\n\n\u6613\u4e8e\u4f7f\u7528\n\n\nGrove Base \u6a21\u5757\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n\n\n4.75\n\n\n\n\n5.0\n\n\n\n\n5.25\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u65cb\u8f6c\u89d2\u5ea6\n\n\n\n\n0\n\n\n\n\n~\n\n\n\n\n300\n\n\n\n\nDeg\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n\n\n19x19x30.1\n\n\n\n\nmm\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u4ee5\u4e0b\u8349\u56fe\u6f14\u793a\u4e86\u4f7f\u7528\u65cb\u8f6c\u89d2\u5ea6\u4f20\u611f\u5668\u63a7\u5236 LED \u4eae\u5ea6\u7684\u7b80\u5355\u5e94\u7528\u3002\u65cb\u8f6c\u89d2\u5ea6\u4f20\u611f\u5668\u7684\u89d2\u5ea6\u4e3a 0~300 \u5ea6\uff0c\u4e3a\u4e86\u63a7\u5236 LED \u7684\u4eae\u5ea6\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u6f14\u793a\u4ee3\u7801\u4e2d\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u7535\u538b\u503c\u3002\n\n\n\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u65cb\u8f6c\u89d2\u4f20\u611f\u5668\u4f20\u611f\u5668\u8fde\u63a5\u5230 Grove - Base Shield \u7684\u6a21\u62df\u7aef\u53e3 \nA0\n\uff0cLED \u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3 \n2\n\u3002\n\n\n\n\n\n\n\n\n\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u6587\u4ef6\u4e0a\u3002\n\n\n\n\n    /******************************************************************************/\n    /*macro definitions of Rotary angle sensor and LED pin*/\n    #define ROTARY_ANGLE_SENSOR A0\n    #define LED 2//the Grove - LED is connected to D3 of Arduino\n    #define ADC_REF 5//reference voltage of ADC is 5v.If the Vcc switch on the seeeduino\n                     //board switches to 3V3, the ADC_REF should be 3.3\n    #define GROVE_VCC 5//VCC of the grove interface is normally 5v\n    #define FULL_ANGLE 300//full value of the rotary angle is 300 degrees\n    void setup()\n    {\n        Serial.begin(9600);\n        pinsInit();\n    }\n\n    void loop()\n    {\n        int degrees;\n        degrees = getDegree();\n        Serial.println(\nThe angle between the mark and the starting position:\n);\n        Serial.println(degrees);\n\n        int brightness;\n        /*The degrees is 0~300, should be converted to be 0~255 to control the*/\n        /*brightness of LED                                                   */\n        brightness = map(degrees, 0, FULL_ANGLE, 0, 255);\n        controlBrightness(brightness);\n\n        delay(500);\n    }\n    void pinsInit()\n    {\n        pinMode(ROTARY_ANGLE_SENSOR, INPUT);\n        pinMode(LED,OUTPUT);\n    }\n\n    /*PWM control brightness                        */\n    /*If brightness is 0,the LED is off.            */\n    /*The Greater the brightness, the brighter the LED.*/\n    /*The range of brightness is 0~255              */\n    void controlBrightness(int brightness)\n    {\n        analogWrite(LED,brightness);\n    }\n    /************************************************************************/\n    /*Function: Get the angle between the mark and the starting position    */\n    /*Parameter:-void                                                       */\n    /*Return:   -int,the range of degrees is 0~300                          */\n    int getDegree()\n    {\n        int sensor_value = analogRead(ROTARY_ANGLE_SENSOR);\n        float voltage;\n        voltage = (float)sensor_value*ADC_REF/1023;\n        float degrees = (voltage*FULL_ANGLE)/GROVE_VCC;\n        return degrees;\n    }\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\u7136\u540e\u60a8\u5c31\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c\u4f20\u611f\u5668\u6765\u63a7\u5236 LED \u4e86\u3002\u8bd5\u8bd5\u5427!\n\n\n\n\n\u4e0e TI LaunchPad \u4e00\u8d77\u4f7f\u7528\n\n\n\u8bfb\u53d6\u7535\u4f4d\u5668 (\u65cb\u8f6c\u89d2\u5ea6\u4f20\u611f\u5668)\n\n\n\u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u8bfb\u53d6\u6765\u81ea Grove \u7535\u4f4d\u5668\u6a21\u5757\u7684\u6a21\u62df\u8f93\u51fa\u3002\u6211\u4eec\u5c06\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7ec4\u5408\u51e0\u4e2a Grove \u6a21\u5757\uff01\u901a\u8fc7\u65cb\u8f6c\u7535\u4f4d\u5668\u65cb\u94ae\uff0c\u6211\u4eec\u5c06\u5728 Grove 4 \u6570\u5b57\u663e\u793a\u5c4f\u4e0a\u663e\u793a\u6a21\u62df\u8bfb\u6570\u503c\u3002\n\n\n\n\n    /*\n      Rotary Angle Sensor\n     Demonstrates analog input by reading an analog sensor on J16 of the Grove Base BoosterPack. The speed of the red LED on the LaunchPad will change depending on the position of the potentiometer knob. This example will also display the analog reading value on the Grove 4-digital display.\n\n     The circuit:\n     * Potentiometer attached to pin 24 (J6 on Grove Base BoosterPack)\n     * center pin of the potentiometer to the analog pin\n     * one side pin (either one) to ground\n     * the other side pin to VCC (3.3V)\n\n     * Note: Because of unstable of the voltage, the value of the rotary angle sensor\n             varies slightly from run to run even you don\nt touch it.  \n\n     Created by Oliver Wang\n\n     This example code is in the public domain.\n\n     http://www.seeedstudio.com/wiki/GROVE_-_Starter_Kit_v1.1b#Grove_-_Rotary_Angle_Sensor\n     */\n\n    #include \nTM1637.h\n\n\n    /* Macro Define */\n    #define CLK               39                  /* 4-digital display clock pin */\n    #define DIO               38                /* 4-digital display data pin */\n    #define ROTARY_ANGLE_P    24               /* pin of rotary angle sensor */\n\n    /* Global Variables */\n    TM1637 tm1637(CLK, DIO);                  /* 4-digital display object */\n    int analog_value = 0;                     /* variable to store the value coming from rotary angle sensor */\n\n    int8_t bits[4] = {0};                     /* array to store the single bits of the value */\n\n    /* the setup() method runs once, when the sketch starts */\n    void setup() {\n\n        /* Initialize 4-digital display */\n        tm1637.init();\n        tm1637.set(BRIGHT_TYPICAL);\n\n    }\n\n    /* the loop() method runs over and over again */\n    void loop() {   \n\n        analog_value = analogRead(ROTARY_ANGLE_P);      /* read the value from the sensor */\n        memset(bits, 0, 4);                             /* reset array when we use it */\n        for(int i = 3; i \n= 0; i--) {\n            /* get single bits of the analog value */\n            bits[i] = analog_value\u00a0% 10;\n            analog_value = analog_value / 10;  \n            tm1637.display(i, bits[i]);                 /* display by 4-digital display */\n        }\n        delay(100);\n    }\n\n\n\n\n\u4e0e \nRaspberry Pi\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u672c\u793a\u4f8b\u4f7f\u7528 ADC \u901a\u9053 \n0\n \u6765\u83b7\u5f97\u65cb\u8f6c\u89d2\u5ea6\u7684\u503c\u3002\u7136\u540e\u7ed9\u51fa PWM \u8f93\u51fa\u4ee5\u6539\u53d8 LED \u7684\u4eae\u5ea6\u3002\n\n\n\n\n    # GrovePi + Grove Rotary Angle Sensor (Potentiometer) + Grove LED\n    import time\n    import grovepi\n\n    # Connect the Grove Rotary Angle Sensor to analog port A0\n    # SIG,NC,VCC,GND\n    potentiometer = 0\n\n    # Connect the LED to digital port D5\n    # SIG,NC,VCC,GND\n    led = 5\n\n    grovepi.pinMode(potentiometer,\nINPUT\n)\n    grovepi.pinMode(led,\nOUTPUT\n)\n    time.sleep(1)\n\n    # Reference voltage of ADC is 5v\n    adc_ref = 5\n\n    # Vcc of the grove interface is normally 5v\n    grove_vcc = 5\n\n    # Full value of the rotary angle is 300 degrees, as per it\ns specs (0 to 300)\n    full_angle = 300\n\n    while True:\n        try:\n            # Read sensor value from potentiometer\n            sensor_value = grovepi.analogRead(potentiometer)\n\n            # Calculate voltage\n            voltage = round((float)(sensor_value) * adc_ref / 1023, 2)\n\n            # Calculate rotation in degrees (0 to 300)\n            degrees = round((voltage * full_angle) / grove_vcc, 2)\n\n            # Calculate LED brightess (0 to 255) from degrees (0 to 300)\n            brightness = int(degrees / full_angle * 255)\n\n            # Give PWM output to LED\n            grovepi.analogWrite(led,brightness)\n\n            print \nsensor_value =\n, sensor_value, \n voltage =\n, voltage, \n degrees =\n, degrees, \n brightness =\n, brightness\n\n        except IOError:\n            print \nError\n\n\n\n\n\n\u8fd0\u884c\u7a0b\u5e8f\n\n\n\n\n\u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84 ( \u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84 )\u3002\n\n\n\n\n    cd GrovePi/Software/Python/\n\n\n-   \u8fd0\u884c\u7a0b\u5e8f\u3002\n\n\n    sudo python grove_rotary_angle_sensor.py\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-Rotary Angle v1.2 Sensor Eagle File\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-Rotary Angle Sensor Eagle File\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nGithub repository for Rotary Angle Sensor", 
            "title": "Grove-Rotary Angle Sensor"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/#_1", 
            "text": "Grove \u63a5\u53e3  \u6613\u4e8e\u4f7f\u7528  Grove Base \u6a21\u5757    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/#_2", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u7535\u538b  \n4.75  \n5.0  \n5.25  \nVDC    \n\u65cb\u8f6c\u89d2\u5ea6  \n0  \n~  \n300  \nDeg    \n\u5c3a\u5bf8  \n19x19x30.1  \nmm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/#_3", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/#arduino", 
            "text": "\u4ee5\u4e0b\u8349\u56fe\u6f14\u793a\u4e86\u4f7f\u7528\u65cb\u8f6c\u89d2\u5ea6\u4f20\u611f\u5668\u63a7\u5236 LED \u4eae\u5ea6\u7684\u7b80\u5355\u5e94\u7528\u3002\u65cb\u8f6c\u89d2\u5ea6\u4f20\u611f\u5668\u7684\u89d2\u5ea6\u4e3a 0~300 \u5ea6\uff0c\u4e3a\u4e86\u63a7\u5236 LED \u7684\u4eae\u5ea6\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u6f14\u793a\u4ee3\u7801\u4e2d\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u7535\u538b\u503c\u3002   \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u65cb\u8f6c\u89d2\u4f20\u611f\u5668\u4f20\u611f\u5668\u8fde\u63a5\u5230 Grove - Base Shield \u7684\u6a21\u62df\u7aef\u53e3  A0 \uff0cLED \u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3  2 \u3002     \u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u6587\u4ef6\u4e0a\u3002       /******************************************************************************/\n    /*macro definitions of Rotary angle sensor and LED pin*/\n    #define ROTARY_ANGLE_SENSOR A0\n    #define LED 2//the Grove - LED is connected to D3 of Arduino\n    #define ADC_REF 5//reference voltage of ADC is 5v.If the Vcc switch on the seeeduino\n                     //board switches to 3V3, the ADC_REF should be 3.3\n    #define GROVE_VCC 5//VCC of the grove interface is normally 5v\n    #define FULL_ANGLE 300//full value of the rotary angle is 300 degrees\n    void setup()\n    {\n        Serial.begin(9600);\n        pinsInit();\n    }\n\n    void loop()\n    {\n        int degrees;\n        degrees = getDegree();\n        Serial.println( The angle between the mark and the starting position: );\n        Serial.println(degrees);\n\n        int brightness;\n        /*The degrees is 0~300, should be converted to be 0~255 to control the*/\n        /*brightness of LED                                                   */\n        brightness = map(degrees, 0, FULL_ANGLE, 0, 255);\n        controlBrightness(brightness);\n\n        delay(500);\n    }\n    void pinsInit()\n    {\n        pinMode(ROTARY_ANGLE_SENSOR, INPUT);\n        pinMode(LED,OUTPUT);\n    }\n\n    /*PWM control brightness                        */\n    /*If brightness is 0,the LED is off.            */\n    /*The Greater the brightness, the brighter the LED.*/\n    /*The range of brightness is 0~255              */\n    void controlBrightness(int brightness)\n    {\n        analogWrite(LED,brightness);\n    }\n    /************************************************************************/\n    /*Function: Get the angle between the mark and the starting position    */\n    /*Parameter:-void                                                       */\n    /*Return:   -int,the range of degrees is 0~300                          */\n    int getDegree()\n    {\n        int sensor_value = analogRead(ROTARY_ANGLE_SENSOR);\n        float voltage;\n        voltage = (float)sensor_value*ADC_REF/1023;\n        float degrees = (voltage*FULL_ANGLE)/GROVE_VCC;\n        return degrees;\n    }   \u4e0a\u4f20\u4ee3\u7801\u3002  \u7136\u540e\u60a8\u5c31\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c\u4f20\u611f\u5668\u6765\u63a7\u5236 LED \u4e86\u3002\u8bd5\u8bd5\u5427!", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/#ti-launchpad", 
            "text": "\u8bfb\u53d6\u7535\u4f4d\u5668 (\u65cb\u8f6c\u89d2\u5ea6\u4f20\u611f\u5668)  \u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u8bfb\u53d6\u6765\u81ea Grove \u7535\u4f4d\u5668\u6a21\u5757\u7684\u6a21\u62df\u8f93\u51fa\u3002\u6211\u4eec\u5c06\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7ec4\u5408\u51e0\u4e2a Grove \u6a21\u5757\uff01\u901a\u8fc7\u65cb\u8f6c\u7535\u4f4d\u5668\u65cb\u94ae\uff0c\u6211\u4eec\u5c06\u5728 Grove 4 \u6570\u5b57\u663e\u793a\u5c4f\u4e0a\u663e\u793a\u6a21\u62df\u8bfb\u6570\u503c\u3002       /*\n      Rotary Angle Sensor\n     Demonstrates analog input by reading an analog sensor on J16 of the Grove Base BoosterPack. The speed of the red LED on the LaunchPad will change depending on the position of the potentiometer knob. This example will also display the analog reading value on the Grove 4-digital display.\n\n     The circuit:\n     * Potentiometer attached to pin 24 (J6 on Grove Base BoosterPack)\n     * center pin of the potentiometer to the analog pin\n     * one side pin (either one) to ground\n     * the other side pin to VCC (3.3V)\n\n     * Note: Because of unstable of the voltage, the value of the rotary angle sensor\n             varies slightly from run to run even you don t touch it.  \n\n     Created by Oliver Wang\n\n     This example code is in the public domain.\n\n     http://www.seeedstudio.com/wiki/GROVE_-_Starter_Kit_v1.1b#Grove_-_Rotary_Angle_Sensor\n     */\n\n    #include  TM1637.h \n\n    /* Macro Define */\n    #define CLK               39                  /* 4-digital display clock pin */\n    #define DIO               38                /* 4-digital display data pin */\n    #define ROTARY_ANGLE_P    24               /* pin of rotary angle sensor */\n\n    /* Global Variables */\n    TM1637 tm1637(CLK, DIO);                  /* 4-digital display object */\n    int analog_value = 0;                     /* variable to store the value coming from rotary angle sensor */\n\n    int8_t bits[4] = {0};                     /* array to store the single bits of the value */\n\n    /* the setup() method runs once, when the sketch starts */\n    void setup() {\n\n        /* Initialize 4-digital display */\n        tm1637.init();\n        tm1637.set(BRIGHT_TYPICAL);\n\n    }\n\n    /* the loop() method runs over and over again */\n    void loop() {   \n\n        analog_value = analogRead(ROTARY_ANGLE_P);      /* read the value from the sensor */\n        memset(bits, 0, 4);                             /* reset array when we use it */\n        for(int i = 3; i  = 0; i--) {\n            /* get single bits of the analog value */\n            bits[i] = analog_value\u00a0% 10;\n            analog_value = analog_value / 10;  \n            tm1637.display(i, bits[i]);                 /* display by 4-digital display */\n        }\n        delay(100);\n    }", 
            "title": "\u4e0e TI LaunchPad \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/#raspberry-pi", 
            "text": "\u672c\u793a\u4f8b\u4f7f\u7528 ADC \u901a\u9053  0  \u6765\u83b7\u5f97\u65cb\u8f6c\u89d2\u5ea6\u7684\u503c\u3002\u7136\u540e\u7ed9\u51fa PWM \u8f93\u51fa\u4ee5\u6539\u53d8 LED \u7684\u4eae\u5ea6\u3002       # GrovePi + Grove Rotary Angle Sensor (Potentiometer) + Grove LED\n    import time\n    import grovepi\n\n    # Connect the Grove Rotary Angle Sensor to analog port A0\n    # SIG,NC,VCC,GND\n    potentiometer = 0\n\n    # Connect the LED to digital port D5\n    # SIG,NC,VCC,GND\n    led = 5\n\n    grovepi.pinMode(potentiometer, INPUT )\n    grovepi.pinMode(led, OUTPUT )\n    time.sleep(1)\n\n    # Reference voltage of ADC is 5v\n    adc_ref = 5\n\n    # Vcc of the grove interface is normally 5v\n    grove_vcc = 5\n\n    # Full value of the rotary angle is 300 degrees, as per it s specs (0 to 300)\n    full_angle = 300\n\n    while True:\n        try:\n            # Read sensor value from potentiometer\n            sensor_value = grovepi.analogRead(potentiometer)\n\n            # Calculate voltage\n            voltage = round((float)(sensor_value) * adc_ref / 1023, 2)\n\n            # Calculate rotation in degrees (0 to 300)\n            degrees = round((voltage * full_angle) / grove_vcc, 2)\n\n            # Calculate LED brightess (0 to 255) from degrees (0 to 300)\n            brightness = int(degrees / full_angle * 255)\n\n            # Give PWM output to LED\n            grovepi.analogWrite(led,brightness)\n\n            print  sensor_value = , sensor_value,   voltage = , voltage,   degrees = , degrees,   brightness = , brightness\n\n        except IOError:\n            print  Error", 
            "title": "\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/#_4", 
            "text": "\u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84 ( \u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84 )\u3002       cd GrovePi/Software/Python/ \n-   \u8fd0\u884c\u7a0b\u5e8f\u3002      sudo python grove_rotary_angle_sensor.py", 
            "title": "\u8fd0\u884c\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Rotary_Angle_Sensor/#_5", 
            "text": "[Eagle\u6587\u4ef6]   Grove-Rotary Angle v1.2 Sensor Eagle File  [Eagle\u6587\u4ef6]   Grove-Rotary Angle Sensor Eagle File  [\u5176\u4ed6\u8d44\u6e90]   Github repository for Rotary Angle Sensor", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Collision_Sensor/", 
            "text": "Grove - Collision Sensor\u53ef\u4ee5\u68c0\u6d4b\u78b0\u649e\u548c\u632f\u52a8\uff0c\u5f53\u68c0\u6d4b\u5230\u65f6\u4f1a\u8f93\u51fa\u4e00\u4e2a\u4f4e\u4f4d\u8109\u51b2\u4fe1\u53f7\u3002\u4e3a\u4e86\u4f7f\u8f93\u51fa\u4fe1\u53f7\u66f4\u7a33\u5b9a\u51c6\u786e\uff0c\u6211\u4eec\u589e\u52a0\u4e86\u7535\u8def\u4ee5\u8fc7\u6ee4\u566a\u97f3\uff0c\u56e0\u6b64\u6b63\u5e38\u7684\u632f\u52a8\u4e0d\u4f1a\u4fc3\u53d1\u4fe1\u53f7\u8f93\u51fa\u3002\u4f20\u611f\u5668\u6709\u8f83\u9ad8\u7684\u7075\u654f\u5ea6\uff0c\u53ef\u7528\u4e8e\u7535\u6e90\u7684\u5524\u8d77\u548c\u4f11\u7720\u7ba1\u7406\u3002\n\n\n\u5b83\u7684\u5de5\u4f5c\u7535\u538b\u662f 5V\uff0c\u53ef\u4ee5\u548c\u6807\u51c6\u7684 Arduino/Seeeduino 5V \u7cfb\u7edf\u517c\u5bb9\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u7535\u538b : 3.\nV\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u6839\u636e\u53d1\u751f\u78b0\u649e\u65f6\u8f93\u51fa\u4fe1\u53f7\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u8fd9\u4e2a\u6f14\u793a : \u6bcf\u5f53\u4f20\u611f\u5668\u68c0\u6d4b\u5230\u78b0\u649e\uff0cLED \u5c31\u4f1a\u4eae\u8d77\u6765\u3002\u8fd9\u91cc\u7684 LED \u662f\u4f5c\u4e3a\u4e00\u4e2a\u53d7\u7ba1\u8bbe\u5907\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u6f14\u793a\u6765\u63a7\u5236\u4f60\u7684\u8bbe\u5907\uff0c\u5982\u81ea\u884c\u8f66\u706f\u3002\n\n\n\u6b65\u9aa4\u5982\u4e0b :\n\n\n1.\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 collision sensor \u8fde\u63a5\u5230 Grove - Basic Shield \u7684\u6570\u5b57\u7aef\u53e3 \n2\n\uff0c\u5e76\u5c06 LED \u8fde\u63a5\u5230\u5f15\u811a \n13\n\u3002\n\n\n2.\u5c06 Grove - Basic Shield \u63d2\u5165 Arduino\u3002\n\n\n3.\u4f7f\u7528 USB \u7535\u7f06\u5c06 Arduino/Seeeduino \u8fde\u63a5\u5230 PC\u3002\n\n\n4.\u590d\u5236\u5e76\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\u5230\u4e00\u4e2a\u65b0\u7684 Arduino \u5de5\u7a0b\u6587\u4ef6\u3002\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684 Arduino\u3002\n\n\n// Test Grove - Collision Sensor\n\n\n#define LED 13 \n//the onboard LED of Arduino or Seeeduino\n\n\n#define COLLISION_SENSOR 2\n//collision sensor is connected with D2 of Arduino\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \npins_init\n();\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nif\n(\nisTriggered\n())\n\n    \n{\n\n        \nturnOnLED\n();\n\n        \ndelay\n(\n2000\n);\n\n    \n}\n\n    \nelse\n \nturnOffLED\n();\n\n\n}\n\n\n\nvoid\n \npins_init\n()\n\n\n{\n\n    \npinMode\n(\nLED\n,\nOUTPUT\n);\n\n    \nturnOffLED\n();\n\n    \npinMode\n(\nCOLLISION_SENSOR\n,\nINPUT\n);\n\n\n}\n\n\n\nboolean\n \nisTriggered\n()\n\n\n{\n\n    \nif\n(\n!\ndigitalRead\n(\nCOLLISION_SENSOR\n))\n\n    \n{\n\n        \ndelay\n(\n50\n);\n\n        \nif\n(\n!\ndigitalRead\n(\nCOLLISION_SENSOR\n))\n\n        \nreturn\n \ntrue\n;\n//the collision sensor triggers\n\n    \n}\n\n    \nreturn\n \nfalse\n;\n\n\n}\n\n\n\nvoid\n \nturnOnLED\n()\n\n\n{\n\n    \ndigitalWrite\n(\nLED\n,\nHIGH\n);\n//the LED is on\n\n\n}\n\n\n\nvoid\n \nturnOffLED\n()\n\n\n{\n\n    \ndigitalWrite\n(\nLED\n,\nLOW\n);\n//the LED is off\n\n\n}\n\n\n\n\n\n5.\u73b0\u5728\u4f60\u53ef\u4ee5\u68c0\u67e5 LED \u7684\u72b6\u6001\u3002 \u6bcf\u5f53\u4f60\u5728\u684c\u5b50\u4e0a\u6572\u6253\u624b\u6307\u65f6\uff0cLED \u5e94\u8be5\u70b9\u4eae\u3002\n\n\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u4ee3\u7801\u4e2d\u7684\u529f\u80fd delay(50) \u6765\u8c03\u6574\u4f20\u611f\u5668\u7075\u654f\u5ea6\u3002\n\n\nif\n(\n!\ndigitalRead\n(\nCOLLISION_SENSOR\n))\n\n\n{\n\n    \nreturn\n \ntrue\n;\n//the collision sensor triggers\n\n\n}\n\n\nreturn\n \nfalse\n;\n\n\n\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.\n\n\n2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \nhere\n\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi socket \nD2\n\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\ncd yourpath/GrovePi/Software/Python/\n\n\n-   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\n\nnano grove_collision_sensor.py   # \nCtrl+x\n to exit #\n\n\n\nimport time\nimport grovepi\n\n# Connect the Grove Collision Sensor to digital port D2\n# SIG,NC,VCC,GND\ncollision_sensor = 2\n\ngrovepi.pinMode(collision_sensor,\nINPUT\n)\n\nwhile True:\n    try:\n        print grovepi.digitalRead(collision_sensor)\n        time.sleep(.5)\n\n    except IOError:\n        print \nError\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\nsudo python grove_collision_sensor.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - Collision Sensor Eagle File\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nMVS0608.02 datasheet", 
            "title": "Grove-Collision Sensor"
        }, 
        {
            "location": "/Grove-Collision_Sensor/#_1", 
            "text": "\u7535\u538b : 3. V    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Collision_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Collision_Sensor/#_2", 
            "text": "", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Collision_Sensor/#arduino", 
            "text": "\u6839\u636e\u53d1\u751f\u78b0\u649e\u65f6\u8f93\u51fa\u4fe1\u53f7\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u8fd9\u4e2a\u6f14\u793a : \u6bcf\u5f53\u4f20\u611f\u5668\u68c0\u6d4b\u5230\u78b0\u649e\uff0cLED \u5c31\u4f1a\u4eae\u8d77\u6765\u3002\u8fd9\u91cc\u7684 LED \u662f\u4f5c\u4e3a\u4e00\u4e2a\u53d7\u7ba1\u8bbe\u5907\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u6f14\u793a\u6765\u63a7\u5236\u4f60\u7684\u8bbe\u5907\uff0c\u5982\u81ea\u884c\u8f66\u706f\u3002  \u6b65\u9aa4\u5982\u4e0b :  1.\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 collision sensor \u8fde\u63a5\u5230 Grove - Basic Shield \u7684\u6570\u5b57\u7aef\u53e3  2 \uff0c\u5e76\u5c06 LED \u8fde\u63a5\u5230\u5f15\u811a  13 \u3002  2.\u5c06 Grove - Basic Shield \u63d2\u5165 Arduino\u3002  3.\u4f7f\u7528 USB \u7535\u7f06\u5c06 Arduino/Seeeduino \u8fde\u63a5\u5230 PC\u3002  4.\u590d\u5236\u5e76\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\u5230\u4e00\u4e2a\u65b0\u7684 Arduino \u5de5\u7a0b\u6587\u4ef6\u3002\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684 Arduino\u3002  // Test Grove - Collision Sensor  #define LED 13  //the onboard LED of Arduino or Seeeduino  #define COLLISION_SENSOR 2 //collision sensor is connected with D2 of Arduino  void   setup ()  { \n     pins_init ();  }  void   loop ()  { \n     if ( isTriggered ()) \n     { \n         turnOnLED (); \n         delay ( 2000 ); \n     } \n     else   turnOffLED ();  }  void   pins_init ()  { \n     pinMode ( LED , OUTPUT ); \n     turnOffLED (); \n     pinMode ( COLLISION_SENSOR , INPUT );  }  boolean   isTriggered ()  { \n     if ( ! digitalRead ( COLLISION_SENSOR )) \n     { \n         delay ( 50 ); \n         if ( ! digitalRead ( COLLISION_SENSOR )) \n         return   true ; //the collision sensor triggers \n     } \n     return   false ;  }  void   turnOnLED ()  { \n     digitalWrite ( LED , HIGH ); //the LED is on  }  void   turnOffLED ()  { \n     digitalWrite ( LED , LOW ); //the LED is off  }   5.\u73b0\u5728\u4f60\u53ef\u4ee5\u68c0\u67e5 LED \u7684\u72b6\u6001\u3002 \u6bcf\u5f53\u4f60\u5728\u684c\u5b50\u4e0a\u6572\u6253\u624b\u6307\u65f6\uff0cLED \u5e94\u8be5\u70b9\u4eae\u3002  \u60a8\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u4ee3\u7801\u4e2d\u7684\u529f\u80fd delay(50) \u6765\u8c03\u6574\u4f20\u611f\u5668\u7075\u654f\u5ea6\u3002  if ( ! digitalRead ( COLLISION_SENSOR ))  { \n     return   true ; //the collision sensor triggers  }  return   false ;", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Collision_Sensor/#raspberry-pi", 
            "text": "1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.  2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa  here \u3002  3.\u8fde\u63a5   \u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi socket  D2 \u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 : cd yourpath/GrovePi/Software/Python/ \n-   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :  nano grove_collision_sensor.py   #  Ctrl+x  to exit #  import time\nimport grovepi\n\n# Connect the Grove Collision Sensor to digital port D2\n# SIG,NC,VCC,GND\ncollision_sensor = 2\n\ngrovepi.pinMode(collision_sensor, INPUT )\n\nwhile True:\n    try:\n        print grovepi.digitalRead(collision_sensor)\n        time.sleep(.5)\n\n    except IOError:\n        print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002 sudo python grove_collision_sensor.py", 
            "title": "\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Collision_Sensor/#_3", 
            "text": "[Eagle\u6587\u4ef6]   Grove - Collision Sensor Eagle File  [\u82af\u7247\u6570\u636e\u624b\u518c]   MVS0608.02 datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Water_Sensor/", 
            "text": "Water Sensor \u6a21\u5757\u662f Grove \u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u5b83\u901a\u8fc7\u6d4b\u91cf\u7535\u5bfc\u7387\u6307\u793a\u4f20\u611f\u5668\u662f\u5426\u5e72\u71e5\uff0c\u6f6e\u6e7f\u6216\u5b8c\u5168\u6d78\u5165\u6c34\u4e2d\u3002\u4f20\u611f\u5668\u8d70\u7ebf\u4f7f\u7528 1M\u03a9 \u4e0a\u62c9\u7535\u963b\u3002\u7535\u963b\u5c06\u62c9\u9ad8\u4f20\u611f\u5668\u7684\u6570\u503c\uff0c\u76f4\u5230\u6c34\u5c06\u4f20\u611f\u5668\u7684\u4fe1\u53f7\u7ebf\u77ed\u63a5\u5230\u5730\u3002\u6b64\u7535\u8def\u5c06\u4f7f\u7528 Arduino \u7684\u6570\u5b57 I/O \u5f15\u811a\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6a21\u62df\u5f15\u811a\u6765\u68c0\u6d4b\u5730\u548c\u4f20\u611f\u5668\u4fe1\u53f7\u7ebf\u4e4b\u95f4\u6c34\u7684\u63a5\u89e6\u91cf\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u517c\u5bb9\u7684\u63a5\u53e3\n\n\n\u4f4e\u529f\u8017\n\n\n2.0cm x 2.0cm Grove \u6a21\u5757\n\n\n\u7075\u654f\u5ea6\u9ad8\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u964d\u96e8\u68c0\u6d4b\n\n\n\u6db2\u4f53\u6cc4\u6f0f\n\n\n\u7bb1\u4f53\u6ea2\u51fa\u63a2\u6d4b\u5668\n\n\n\n\n\n\nCaution\n\n\u6b64\u8bbe\u5907\u4ec5\u9002\u7528\u4e8e\u6559\u80b2\u548c\u4e1a\u4f59\u7231\u597d\u5e94\u7528\u7a0b\u5e8f\u3002\u4e0d\u80fd\u7528\u4e8e\u53d1\u751f\u6545\u969c\u65f6\u53ef\u80fd\u5bfc\u81f4\u8d22\u4ea7\u635f\u5931\u6216\u4eba\u8eab\u5b89\u5168\u7684\u5e94\u7528\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n4.75\n\n\n\n\n5.0\n\n\n\n\n5.25\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u7535\u6d41\n\n\n\n\n\n20\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n\n\n10\n\n\n\n\n-\n\n\n\n\n30\n\n\n\n\n\u2103\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u6e7f\u5ea6 (\u4e0d\u7ed3\u9732)\n\n\n\n\n10\n\n\n\n\n-\n\n\n\n\n90\n\n\n\n\n\u00a0%\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u4f7f\u7528\u4efb\u4f55\u6570\u5b57\u5f15\u811a\u5c06\u6a21\u5757\u8fde\u63a5\u5230 Basic board\u3002\u60a8\u53ef\u4ee5\u83b7\u5f97\u4fe1\u53f7\u5f15\u811a\u7684\u503c\u3002\u88f8\u5bfc\u7ebf\u4e0a\u6709\u6c34\u65f6\uff0c\u5f97\u5230 LOW\u3002 \u5426\u5219\uff0c\u5c06\u662f HIGH\u3002\n\n\n\u4ee5\u4e0b\u8349\u56fe\u6f14\u793a\u4e86\u4f7f\u7528 Water sensor \u63a7\u5236\u8702\u9e23\u5668\u7684\u7b80\u5355\u5e94\u7528\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c Water sensor \u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684\u6570\u5b57\u7aef\u53e3 \n8\n\uff0c\u8702\u9e23\u5668\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3 \n12\n\u3002\u5f53\u88f8\u5bfc\u7ebf\u4e0a\u6709\u6c34\u65f6\uff0c\nSIG\n \u5f15\u811a\u8f93\u51fa\u4e00\u4e2a LOW \u7535\u5e73\u3002\u7136\u540e\u8702\u9e23\u5668\u54cd\u8d77\u3002\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b :\n\n\n\n\n\n\n\u7136\u540e\u4f7f\u7528 USB \u7535\u7f06\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002\n\n\n\u590d\u5236\u5e76\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\u5230\u4e00\u4e2a\u65b0\u7684 Arduino \u8349\u56fe\u7a0b\u5e8f\u3002\n\n\n\n\n/*macro definition of water sensor and the buzzer*/\n\n\n#define WATER_SENSOR 8\n\n\n#define BUZZER 12\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \npins_init\n();\n\n\n}\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nif\n(\nisExposedToWater\n())\n\n    \nsoundAlarm\n();\n\n\n}\n\n\n\nvoid\n \npins_init\n()\n\n\n{\n\n    \npinMode\n(\nWATER_SENSOR\n,\n \nINPUT\n);\n\n    \npinMode\n(\nBUZZER\n,\n \nOUTPUT\n);\n\n\n}\n\n\n\n/************************************************************************/\n\n\n/*Function: When the sensor is exposed to the water, the buzzer sounds  */\n\n\n/*          for 2 seconds.                                              */\n\n\n/************************************************************************/\n\n\nvoid\n \nsoundAlarm\n()\n\n\n{\n\n    \nfor\n(\nuint8_t\n \ni\n \n=\n \n0\n;\ni\n \n \n20\n;\ni\n \n++\n)\n\n    \n{\n\n        \ndigitalWrite\n(\nBUZZER\n,\n \nHIGH\n);\n\n        \ndelay\n(\n50\n);\n\n        \ndigitalWrite\n(\nBUZZER\n,\n \nLOW\n);\n\n        \ndelay\n(\n50\n);\n\n    \n}\n\n\n}\n\n\n\n/************************************************************************/\n\n\n/*Function: Determine whether the sensor is exposed to the water        */\n\n\n/*Parameter:-void                                                       */\n\n\n/*Return:   -boolean,if it is exposed to the water,it will return true. */\n\n\n/************************************************************************/\n\n\nboolean\n \nisExposedToWater\n()\n\n\n{\n\n    \nif\n(\ndigitalRead\n(\nWATER_SENSOR\n)\n \n==\n \nLOW\n)\n\n    \nreturn\n \ntrue\n;\n\n    \nelse\n \nreturn\n \nfalse\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\n\n\n\n\u5f53\u4f20\u611f\u5668\u53d7\u6f6e\u6216\u5b8c\u5168\u6d78\u5165\u6c34\u4e2d\u65f6\uff0c\u8702\u9e23\u5668\u54cd\u8d77\u3002 \u5feb\u8bd5\u8bd5\u5427 !\n\n\n\n\n\n\n\u4e0e Raspberry \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi or Grovepi+.\n\n\n2.\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5982\u679c\u6ca1\u6709\u5b8c\u6210\u8bf7\u6309\u7167 \n\u8fd9\u91cc\n \u8fdb\u884c\u914d\u7f6e\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u7528 Grove \u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi socket \nD2\n\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55\n\ncd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\u4ee3\u7801\u5982\u4e0b :\n\nnano grove_water_sensor.py   # \nCtrl+x\n to exit #\n\n\n\n\n\nimport time\nimport grovepi\n\n# Connect the Grove Water Sensor to digital port D2\n# SIG,NC,VCC,GND\nwater_sensor = 2\n\ngrovepi.pinMode(water_sensor,\nINPUT\n)\n\nwhile True:\n    try:\n        print grovepi.digitalRead(water_sensor)\n        time.sleep(.5)\n\n    except IOError:\n        print \nError\n\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\nsudo python grove_water_sensor.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nWater Sensor Eagle Files\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nDemo code for Water Sensor", 
            "title": "Grove-Water Sensor"
        }, 
        {
            "location": "/Grove-Water_Sensor/#_1", 
            "text": "Grove \u517c\u5bb9\u7684\u63a5\u53e3  \u4f4e\u529f\u8017  2.0cm x 2.0cm Grove \u6a21\u5757  \u7075\u654f\u5ea6\u9ad8    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Water_Sensor/#_2", 
            "text": "\u964d\u96e8\u68c0\u6d4b  \u6db2\u4f53\u6cc4\u6f0f  \u7bb1\u4f53\u6ea2\u51fa\u63a2\u6d4b\u5668    Caution \n\u6b64\u8bbe\u5907\u4ec5\u9002\u7528\u4e8e\u6559\u80b2\u548c\u4e1a\u4f59\u7231\u597d\u5e94\u7528\u7a0b\u5e8f\u3002\u4e0d\u80fd\u7528\u4e8e\u53d1\u751f\u6545\u969c\u65f6\u53ef\u80fd\u5bfc\u81f4\u8d22\u4ea7\u635f\u5931\u6216\u4eba\u8eab\u5b89\u5168\u7684\u5e94\u7528\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Water_Sensor/#_3", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u5de5\u4f5c\u7535\u538b  \n4.75  \n5.0  \n5.25  \nV    \n\u7535\u6d41   20  \nmA    \n\u5de5\u4f5c\u6e29\u5ea6  \n10  \n-  \n30  \n\u2103    \n\u5de5\u4f5c\u6e7f\u5ea6 (\u4e0d\u7ed3\u9732)  \n10  \n-  \n90  \n\u00a0%", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Water_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Water_Sensor/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Water_Sensor/#arduino", 
            "text": "\u4f7f\u7528\u4efb\u4f55\u6570\u5b57\u5f15\u811a\u5c06\u6a21\u5757\u8fde\u63a5\u5230 Basic board\u3002\u60a8\u53ef\u4ee5\u83b7\u5f97\u4fe1\u53f7\u5f15\u811a\u7684\u503c\u3002\u88f8\u5bfc\u7ebf\u4e0a\u6709\u6c34\u65f6\uff0c\u5f97\u5230 LOW\u3002 \u5426\u5219\uff0c\u5c06\u662f HIGH\u3002  \u4ee5\u4e0b\u8349\u56fe\u6f14\u793a\u4e86\u4f7f\u7528 Water sensor \u63a7\u5236\u8702\u9e23\u5668\u7684\u7b80\u5355\u5e94\u7528\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c Water sensor \u8fde\u63a5\u5230  Grove - Base Shield  \u7684\u6570\u5b57\u7aef\u53e3  8 \uff0c\u8702\u9e23\u5668\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3  12 \u3002\u5f53\u88f8\u5bfc\u7ebf\u4e0a\u6709\u6c34\u65f6\uff0c SIG  \u5f15\u811a\u8f93\u51fa\u4e00\u4e2a LOW \u7535\u5e73\u3002\u7136\u540e\u8702\u9e23\u5668\u54cd\u8d77\u3002\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b :    \u7136\u540e\u4f7f\u7528 USB \u7535\u7f06\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002  \u590d\u5236\u5e76\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\u5230\u4e00\u4e2a\u65b0\u7684 Arduino \u8349\u56fe\u7a0b\u5e8f\u3002   /*macro definition of water sensor and the buzzer*/  #define WATER_SENSOR 8  #define BUZZER 12  void   setup ()  { \n     pins_init ();  }  void   loop ()  { \n     if ( isExposedToWater ()) \n     soundAlarm ();  }  void   pins_init ()  { \n     pinMode ( WATER_SENSOR ,   INPUT ); \n     pinMode ( BUZZER ,   OUTPUT );  }  /************************************************************************/  /*Function: When the sensor is exposed to the water, the buzzer sounds  */  /*          for 2 seconds.                                              */  /************************************************************************/  void   soundAlarm ()  { \n     for ( uint8_t   i   =   0 ; i     20 ; i   ++ ) \n     { \n         digitalWrite ( BUZZER ,   HIGH ); \n         delay ( 50 ); \n         digitalWrite ( BUZZER ,   LOW ); \n         delay ( 50 ); \n     }  }  /************************************************************************/  /*Function: Determine whether the sensor is exposed to the water        */  /*Parameter:-void                                                       */  /*Return:   -boolean,if it is exposed to the water,it will return true. */  /************************************************************************/  boolean   isExposedToWater ()  { \n     if ( digitalRead ( WATER_SENSOR )   ==   LOW ) \n     return   true ; \n     else   return   false ;  }     \u4e0a\u4f20\u4ee3\u7801\u3002    \u5f53\u4f20\u611f\u5668\u53d7\u6f6e\u6216\u5b8c\u5168\u6d78\u5165\u6c34\u4e2d\u65f6\uff0c\u8702\u9e23\u5668\u54cd\u8d77\u3002 \u5feb\u8bd5\u8bd5\u5427 !", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Water_Sensor/#raspberry", 
            "text": "1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi or Grovepi+.  2.\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5982\u679c\u6ca1\u6709\u5b8c\u6210\u8bf7\u6309\u7167  \u8fd9\u91cc  \u8fdb\u884c\u914d\u7f6e\u3002  3.\u8fde\u63a5   \u7528 Grove \u7ebf\u7f06\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi socket  D2 \u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 cd yourpath/GrovePi/Software/Python/   \u4ee3\u7801\u5982\u4e0b : nano grove_water_sensor.py   #  Ctrl+x  to exit #   import time\nimport grovepi\n\n# Connect the Grove Water Sensor to digital port D2\n# SIG,NC,VCC,GND\nwater_sensor = 2\n\ngrovepi.pinMode(water_sensor, INPUT )\n\nwhile True:\n    try:\n        print grovepi.digitalRead(water_sensor)\n        time.sleep(.5)\n\n    except IOError:\n        print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002 sudo python grove_water_sensor.py", 
            "title": "\u4e0e Raspberry \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Water_Sensor/#_5", 
            "text": "[Eagle\u6587\u4ef6]   Water Sensor Eagle Files  [\u5176\u4ed6\u8d44\u6e90]   Demo code for Water Sensor", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Speech_Recognizer/", 
            "text": "\u4f7f\u7528\u58f0\u97f3\u4e0e\u60a8\u5468\u56f4\u7684\u4e8b\u7269\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fd9\u662fIOT\u5e94\u7528\u4e2d\u6700\u6709\u8da3\u7684\u4e8b\u60c5\u4e4b\u4e00\uff0c\u6211\u4eec\u671f\u671b\u8ba9\u8fd9\u53d8\u5f97\u66f4\u52a0\u4e0e\u4f17\u4e0d\u540c\u548c\u70ab\u9177\u3002\u6700\u8fd1\uff0c\u6211\u4eec\u521a\u521a\u5728 Kickstarter \u4e0a\u9686\u91cd\u63a8\u51fa\u4e86 \u201cRespeaker\u201d \u8bed\u97f3\u63a7\u5236\u89e3\u51b3\u65b9\u6848\u3002\u7136\u800c\uff0c\u5e76\u975e\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u7528 Respeaker \u6765\u5efa\u7acb\u8bed\u97f3\u63a7\u5236\u9879\u76ee\uff0c\u6709\u65f6\u5019\u4eba\u4eec\u4ec5\u4ec5\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5728\u6b64\u91cc\u6211\u4eec\u5411\u60a8\u4ecb\u7ecd\u7b2c\u4e00\u4ee3 Grove \u8bed\u97f3\u8bc6\u522b\u5668\uff0c\u5b83\u53ef\u4ee5\u8f7b\u677e\u5feb\u901f\u5730\u5b9e\u73b0\u667a\u80fd\u5bb6\u5c45\u7684\u68a6\u60f3\u3002\n\n\nGrove speech recognizer \u662f\u4e13\u95e8\u4e3a\u8bed\u97f3\u63a7\u5236\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\uff0c\u5982\u667a\u80fd\u5bb6\u5c45\uff0c\u667a\u80fd\u73a9\u5177\uff0c\u8bed\u97f3\u63a7\u5236\u673a\u5668\u4eba\uff0c\u4efb\u4f55\u60a8\u60f3\u8981\u901a\u8fc7\u8bed\u97f3\u63a7\u5236\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u5b83\u503c\u5f97\u4e00\u8bd5\u3002\u8be5\u677f\u5305\u62ec Nuvoton ISD9160\uff0c\u9ea6\u514b\u98ce\uff0c1 \u4e2a SPI flash\uff0c1 \u4e2a Grove \u8fde\u63a5\u5668\uff0c1 \u4e2a\u626c\u58f0\u5668\u8fde\u63a5\u5668\u548c 1 \u4e2a\u6307\u793a\u60a8\u7684\u58f0\u97f3\u7684 led\u3002\n\n\nNuvoton ISD9160 \u662f\u57fa\u4e8e Cortex\u2122-M0 \u7684 (SoC) Chipcorder\uff0c\u5b83\u4e3a\u8bed\u97f3\u63a7\u5236\u5e94\u7528\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u89e3\u51b3\u65b9\u6848\u3002ISD9160 \u4e0d\u662f\u8fd9\u4e2a Grove \u6a21\u5757\u91cc\u552f\u4e00\u4ee4\u4eba\u60ca\u559c\u7684\u4e8b\u60c5\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u9ea6\u514b\u98ce\u5427\uff01\u8fd8\u8bb0\u5f97\u5fc5\u987b\u76f4\u63a5\u5730\u5e76\u4e14\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\u8bed\u97f3\u8bc6\u522b\u8bbe\u5907\u53d1\u58f0\uff0c\u4ee5\u786e\u4fdd\u5b83\u53ef\u4ee5\u8bc6\u522b\uff0c\u8fd9\u6837\u7684\u4ee4\u60a8\u975e\u5e38\u4e0d\u8212\u670d\u7684\u4f53\u9a8c\u5417\uff1f\u8fd9\u6b21\u4e0d\u4f1a\u518d\u53d1\u751f\uff01Grove speech recognizer \u4e0a\u7684\u9ea6\u514b\u98ce\u662f\u5168\u65b9\u4f4d\u65e0\u6b7b\u89d2\u7684\uff0c\u8fd9\u610f\u5473\u7740\u65e0\u8bba\u7528\u6237\u662f\u4ece\u524d\u9762\uff0c\u540e\u9762\uff0c\u5de6\u4fa7\u8fd8\u662f\u53f3\u4fa7\u5411\u9ea6\u514b\u98ce\u8bf4\u8bdd\uff0c\u9ea6\u514b\u98ce\u5c06\u4ee5\u76f8\u7b49\u7684\u589e\u76ca\u8bb0\u5f55\u4fe1\u53f7\u3002\n\n\n\u8be5\u8bed\u97f3\u8bc6\u522b\u5668\u53ef\u4ee5\u8bc6\u522b 22 \u79cd\u547d\u4ee4\uff0c\u5305\u62ec\u201cstart\u201d\uff0c\u201cstop\u201d\uff0c\u201cplay music\u201d\u7b49\u3002\u6bcf\u5f53\u5b83\u8bc6\u522b\u5230\u4e00\u4e2a\u547d\u4ee4\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u4e0e\u5176\u8fde\u63a5\u7684\u626c\u58f0\u5668\u5c06\u91cd\u590d\u547d\u4ee4\u3002\u8be5\u503c\u53ef\u7528\u4e8e\u63a7\u5236\u5176\u4ed6\u8bbe\u5907\uff0c\u5982\u7535\u673a\uff0c\u97f3\u4e50\u64ad\u653e\u5668\u3002\u4e3a\u4e86\u786e\u4fdd\u5b83\u5177\u6709\u9ad8\u8bc6\u522b\u7387\u548c\u975e\u5e38\u4f4e\u7684\u8bef\u89e6\u53d1\uff0c\u6211\u4eec\u5df2\u7ecf\u6d4b\u8bd5\u4e86\u597d\u51e0\u4e2a\u5c0f\u65f6\u3002\n\n\n\n\n\u4f7f\u7528\u987b\u77e5 :\n\u5524\u9192\u8bcd : Hicell (\u8bf7\u5c06\u5b83\u53d1\u97f3\u4e3a\u4e00\u4e2a\u5355\u8bcd)\u3002\n\u5f53\u5b83\u8bc6\u522b\u5230\u5524\u9192\u8bcd\u65f6\uff0cLED\u53d8\u6210\u7ea2\u8272\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u8bf4\u51fa\u547d\u4ee4\u5b57\uff0c\u5982\u679c\u5b83\u8bc6\u522b\u547d\u4ee4\u5b57\uff0cLED\u5c06\u53d8\u6210\u84dd\u8272\u3002\n\n\n\n\nNote\n\n\n\u8be5\u6a21\u5757\u7684\u56fa\u4ef6\u662f\u7531\u7b2c\u4e09\u65b9\u5199\u7684\uff0c\u5b83\u4e0d\u662f\u5f00\u6e90\u7684\u3002\u8be5\u6a21\u5757\u6682\u65f6\u53ea\u652f\u6301\u82f1\u6587\uff0c\u56e0\u6b64\u60a8\u7684\u547d\u4ee4\u4e5f\u53ea\u80fd\u662f\u82f1\u6587\u3002\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7269\u8054\u7f51\n\n\n\u667a\u80fd\u4f4f\u5b85\n\n\n\u4eba\u673a\u754c\u9762\n\n\n\u706f\u5149\u63a7\u5236\n\n\n\u4f20\u611f\u5668\u4e2d\u67a2\n\n\n\u673a\u5668\u4eba\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u672c\u5730\u8bed\u97f3\u8bc6\u522b\n\n\n\u975e\u5e38\u4f4e\u7684\u8bef\u89e6\u53d1\u7387\n\n\n\u626c\u58f0\u5668\u8fde\u63a5\u5668( JST2.0\uff0c\u626c\u58f0\u5668\u4e0d\u5305\u62ec)\n\n\n\u5185\u7f6e\u9ea6\u514b\u98ce\n\n\n3.\nV \u5de5\u4f5c\u7535\u538b\n\n\n22 \u4e2a\u8bc6\u522b\u9879\n\n\n\u9ed8\u8ba4\u6ce2\u7279\u7387 : 9600\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatform Support\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u6761\u4ef6\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3V\n\n\n3.3V\n\n\n5V\n\n\n25 \u2103\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n25mA\n\n\n26.5mA\n\n\n80mA@playing\n\n\nVCC = 3.3V 25\u2103\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n25mA\n\n\n26.5mA\n\n\n130mA@playing\n\n\nVCC = 5V 25\u2103\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n0\u2103\n\n\n25\u2103\n\n\n85\u2103\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n\n\n40*20mm\n\n\n\n\n\n\n\n\n\n\n\u8d28\u91cf\n\n\n\n\n5g\n\n\n\n\n\n\n\n\n\n\nFlash\n\n\n\n\n2Mbytes\n\n\n\n\n\n\n\n\n\n\n\u9ea6\u514b\u98ce\u7075\u654f\u5ea6\n\n\n-43dB\n\n\n-40dB\n\n\n-37dB\n\n\nVCC = 5V 25\u2103\n\n\n\n\n\n\n\u9ea6\u514b\u98ce SNR\n\n\n58dB\n\n\n\n\n\n\n\n\n\n\n\n\n\u9ea6\u514b\u98ce\u65b9\u5411\u6027\n\n\n\n\n\u5168\u65b9\u5411\n\n\n\n\n\n\n\n\n\n\n\u626c\u58f0\u5668\u529f\u7387\n\n\n\n\n\n\n1W\n\n\nVCC = 5V 25\u2103\n\n\n\n\n\n\n\u5904\u7406\u5668 core\n\n\n\n\nCortex-M0\n\n\n\n\n\n\n\n\n\n\n\u5904\u7406\u5668\u9891\u7387\n\n\n\n\n32.768MHz\n\n\n50MHz\n\n\nVCC = 5V 25\u2103\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nGrove \u63a5\u53e3\n\n\nRed Led - \u8bc6\u522b\u5230\u5524\u9192\u8bcd\u65f6\u53d1\u5149\n\n\nBlue Led - \u8bc6\u522b\u5230\u547d\u4ee4\u5b57\u65f6\u53d1\u5149\n\n\nSpeaker Connector - \u8fde\u63a5\u626c\u58f0\u5668\u6765\u83b7\u5f97\u8bed\u97f3\u53cd\u9988\n\n\n\u9ea6\u514b\u98ce\n\n\nISD9160CFI\n\n\n\n\n\u547d\u4ee4\u8fd4\u56de\u503c\n\n\n\n\n\n\n\n\n\u547d\u4ee4\n\n\n\u8fd4\u56de\u503c\n\n\n\n\n\n\n\n\n\n\nTurn on the light\n\n\n1\n\n\n\n\n\n\nTurn off the light\n\n\n2\n\n\n\n\n\n\nPlay music\n\n\n3\n\n\n\n\n\n\nPause\n\n\n4\n\n\n\n\n\n\nNext\n\n\n5\n\n\n\n\n\n\nPrevious\n\n\n6\n\n\n\n\n\n\nUp\n\n\n7\n\n\n\n\n\n\nDown\n\n\n8\n\n\n\n\n\n\nTurn on the TV\n\n\n9\n\n\n\n\n\n\nTurn off the TV\n\n\n10\n\n\n\n\n\n\nIncrease temperature\n\n\n11\n\n\n\n\n\n\nDecrease temperature\n\n\n12\n\n\n\n\n\n\nWhat\u2019s the time\n\n\n13\n\n\n\n\n\n\nOpen the door\n\n\n14\n\n\n\n\n\n\nClose the door\n\n\n15\n\n\n\n\n\n\nLeft\n\n\n16\n\n\n\n\n\n\nRight\n\n\n17\n\n\n\n\n\n\nStop\n\n\n18\n\n\n\n\n\n\nStart\n\n\n19\n\n\n\n\n\n\nMode 1\n\n\n20\n\n\n\n\n\n\nMode 2\n\n\n21\n\n\n\n\n\n\nGo\n\n\n22\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a Grove - Speech Recognizer \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\u9700\u8981\u51c6\u5907\u4e0b\u9762\u7684\u4e1c\u897f :\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Speech Recognizer\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u7531\u4e8e Grove \u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u53ea\u9700\u8981\u5c06\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684\u6b63\u786e\u7aef\u53e3\u3002\u5728\u8fd9\u4e2a\u6f14\u793a\u4e2d\uff0c\u6211\u4eec\u5c06 Grove - Speech Recognizer \u8fde\u63a5\u5230 \nD2\n\u3002\n\n\n\n\n\u8f6f\u4ef6\u90e8\u5206\n\n\n\u590d\u5236\u4e0b\u9762\u7684\u4ee3\u7801\u5e76\u7c98\u8d34\u5230\u60a8\u7684 Arduino IDE\uff0c\u5e76\u4e0a\u4f20\u5230\u60a8\u7684 Seeeduino V4\u3002\u5c06\u4ee3\u7801\u4e0a\u4f20\u540e\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u3002\n\n\n#include \nSoftwareSerial.h\n\n\n#define SOFTSERIAL_RX_PIN  2\n#define SOFTSERIAL_TX_PIN  3\n\nSoftwareSerial softSerial(SOFTSERIAL_RX_PIN,SOFTSERIAL_TX_PIN);\n\nconst char *voiceBuffer[] =\n{\n    \nTurn on the light\n,\n    \nTurn off the light\n,\n    \nPlay music\n,\n    \nPause\n,\n    \nNext\n,\n    \nPrevious\n,\n    \nUp\n,\n    \nDown\n,\n    \nTurn on the TV\n,\n    \nTurn off the TV\n,\n    \nIncrease temperature\n,\n    \nDecrease temperature\n,\n    \nWhat\ns the time\n,\n    \nOpen the door\n,\n    \nClose the door\n,\n    \nLeft\n,\n    \nRight\n,\n    \nStop\n,\n    \nStart\n,\n    \nMode 1\n,\n    \nMode 2\n,\n    \nGo\n,\n};\n\nvoid setup()\n{\n    Serial.begin(9600);\n    softSerial.begin(9600);\n    softSerial.listen();\n}\n\nvoid loop()\n{\n    char cmd;\n\n    if(softSerial.available())\n    {\n        cmd = softSerial.read();\n        Serial.println(voiceBuffer[cmd - 1]);\n    }\n}\n\n\n\n\n\u5524\u9192\u6a21\u5757\n\n\n\u5f53\u6709\u547d\u4ee4 \nHicell\n \u65f6\uff0c\u6a21\u5757\u4f1a\u5524\u9192\uff0c\u7136\u540e\u7ea2\u706f\u4eae\u3002\u7ea2\u706f\u7184\u706d\u540e\u518d\u8bd5\u8bd5\u3002\n\n\n\n\nNote\n\n\n\u7ea2\u8272 LED \u5c06\u6301\u7eed5\u79d2\u3002\u5982\u679c\u5728\u547d\u4ee4\u88ab\u8bc6\u522b\u4e4b\u524d\u7ea2\u706f\u7184\u706d\uff0c\u518d\u6b21\u5c1d\u8bd5\u5524\u9192\u3002\n\n\n\n\n\u547d\u4ee4\n\n\n\u6a21\u5757\u88ab\u5524\u9192\u540e\uff0c\u60a8\u53ef\u4ee5\u53d1\u5e03\u547d\u4ee4\uff0c\u6bd4\u5982 :\n\n\nturn on the TV\n\n\n\n\n\n\n\u5982\u679c\u84dd\u8272\u6307\u793a\u706f\u662f\u4eae\u7684(\u6301\u7eed\u7ea6 1 \u79d2)\uff0c\u5219\u8868\u793a\u8be5\u6307\u4ee4\u88ab\u6b63\u786e\u8bc6\u522b\u3002\u68c0\u67e5\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u547d\u4ee4\u88ab\u6253\u5370\u5728\u4e0a\u9762\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nSchematics in Eagle\n\n\n[\u539f\u7406\u56fePDF]\n \nSchematics in PDF", 
            "title": "Grove-Speech Recognizer"
        }, 
        {
            "location": "/Grove-Speech_Recognizer/#_1", 
            "text": "\u7269\u8054\u7f51  \u667a\u80fd\u4f4f\u5b85  \u4eba\u673a\u754c\u9762  \u706f\u5149\u63a7\u5236  \u4f20\u611f\u5668\u4e2d\u67a2  \u673a\u5668\u4eba", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Speech_Recognizer/#_2", 
            "text": "\u672c\u5730\u8bed\u97f3\u8bc6\u522b  \u975e\u5e38\u4f4e\u7684\u8bef\u89e6\u53d1\u7387  \u626c\u58f0\u5668\u8fde\u63a5\u5668( JST2.0\uff0c\u626c\u58f0\u5668\u4e0d\u5305\u62ec)  \u5185\u7f6e\u9ea6\u514b\u98ce  3. V \u5de5\u4f5c\u7535\u538b  22 \u4e2a\u8bc6\u522b\u9879  \u9ed8\u8ba4\u6ce2\u7279\u7387 : 9600    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Speech_Recognizer/#platform-support", 
            "text": "", 
            "title": "Platform Support"
        }, 
        {
            "location": "/Grove-Speech_Recognizer/#_3", 
            "text": "\u9879\u76ee  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u6761\u4ef6      \u5de5\u4f5c\u7535\u538b  3V  3.3V  5V  25 \u2103    \u5de5\u4f5c\u7535\u6d41  25mA  26.5mA  80mA@playing  VCC = 3.3V 25\u2103    \u5de5\u4f5c\u7535\u6d41  25mA  26.5mA  130mA@playing  VCC = 5V 25\u2103    \u5de5\u4f5c\u6e29\u5ea6  0\u2103  25\u2103  85\u2103     \u5c3a\u5bf8   40*20mm      \u8d28\u91cf   5g      Flash   2Mbytes      \u9ea6\u514b\u98ce\u7075\u654f\u5ea6  -43dB  -40dB  -37dB  VCC = 5V 25\u2103    \u9ea6\u514b\u98ce SNR  58dB       \u9ea6\u514b\u98ce\u65b9\u5411\u6027   \u5168\u65b9\u5411      \u626c\u58f0\u5668\u529f\u7387    1W  VCC = 5V 25\u2103    \u5904\u7406\u5668 core   Cortex-M0      \u5904\u7406\u5668\u9891\u7387   32.768MHz  50MHz  VCC = 5V 25\u2103", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Speech_Recognizer/#_4", 
            "text": "Grove \u63a5\u53e3  Red Led - \u8bc6\u522b\u5230\u5524\u9192\u8bcd\u65f6\u53d1\u5149  Blue Led - \u8bc6\u522b\u5230\u547d\u4ee4\u5b57\u65f6\u53d1\u5149  Speaker Connector - \u8fde\u63a5\u626c\u58f0\u5668\u6765\u83b7\u5f97\u8bed\u97f3\u53cd\u9988  \u9ea6\u514b\u98ce  ISD9160CFI", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Speech_Recognizer/#_5", 
            "text": "\u547d\u4ee4  \u8fd4\u56de\u503c      Turn on the light  1    Turn off the light  2    Play music  3    Pause  4    Next  5    Previous  6    Up  7    Down  8    Turn on the TV  9    Turn off the TV  10    Increase temperature  11    Decrease temperature  12    What\u2019s the time  13    Open the door  14    Close the door  15    Left  16    Right  17    Stop  18    Start  19    Mode 1  20    Mode 2  21    Go  22", 
            "title": "\u547d\u4ee4\u8fd4\u56de\u503c"
        }, 
        {
            "location": "/Grove-Speech_Recognizer/#_6", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a Grove - Speech Recognizer \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\u9700\u8981\u51c6\u5907\u4e0b\u9762\u7684\u4e1c\u897f :     Seeeduino V4  Grove - Speech Recognizer  Base Shield           \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70     \u786c\u4ef6\u8fde\u63a5  \u7531\u4e8e Grove \u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u710a\u63a5\u6216\u9762\u5305\u677f\uff0c\u60a8\u53ea\u9700\u8981\u5c06\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684\u6b63\u786e\u7aef\u53e3\u3002\u5728\u8fd9\u4e2a\u6f14\u793a\u4e2d\uff0c\u6211\u4eec\u5c06 Grove - Speech Recognizer \u8fde\u63a5\u5230  D2 \u3002   \u8f6f\u4ef6\u90e8\u5206  \u590d\u5236\u4e0b\u9762\u7684\u4ee3\u7801\u5e76\u7c98\u8d34\u5230\u60a8\u7684 Arduino IDE\uff0c\u5e76\u4e0a\u4f20\u5230\u60a8\u7684 Seeeduino V4\u3002\u5c06\u4ee3\u7801\u4e0a\u4f20\u540e\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u3002  #include  SoftwareSerial.h \n\n#define SOFTSERIAL_RX_PIN  2\n#define SOFTSERIAL_TX_PIN  3\n\nSoftwareSerial softSerial(SOFTSERIAL_RX_PIN,SOFTSERIAL_TX_PIN);\n\nconst char *voiceBuffer[] =\n{\n     Turn on the light ,\n     Turn off the light ,\n     Play music ,\n     Pause ,\n     Next ,\n     Previous ,\n     Up ,\n     Down ,\n     Turn on the TV ,\n     Turn off the TV ,\n     Increase temperature ,\n     Decrease temperature ,\n     What s the time ,\n     Open the door ,\n     Close the door ,\n     Left ,\n     Right ,\n     Stop ,\n     Start ,\n     Mode 1 ,\n     Mode 2 ,\n     Go ,\n};\n\nvoid setup()\n{\n    Serial.begin(9600);\n    softSerial.begin(9600);\n    softSerial.listen();\n}\n\nvoid loop()\n{\n    char cmd;\n\n    if(softSerial.available())\n    {\n        cmd = softSerial.read();\n        Serial.println(voiceBuffer[cmd - 1]);\n    }\n}  \u5524\u9192\u6a21\u5757  \u5f53\u6709\u547d\u4ee4  Hicell  \u65f6\uff0c\u6a21\u5757\u4f1a\u5524\u9192\uff0c\u7136\u540e\u7ea2\u706f\u4eae\u3002\u7ea2\u706f\u7184\u706d\u540e\u518d\u8bd5\u8bd5\u3002   Note  \u7ea2\u8272 LED \u5c06\u6301\u7eed5\u79d2\u3002\u5982\u679c\u5728\u547d\u4ee4\u88ab\u8bc6\u522b\u4e4b\u524d\u7ea2\u706f\u7184\u706d\uff0c\u518d\u6b21\u5c1d\u8bd5\u5524\u9192\u3002   \u547d\u4ee4  \u6a21\u5757\u88ab\u5524\u9192\u540e\uff0c\u60a8\u53ef\u4ee5\u53d1\u5e03\u547d\u4ee4\uff0c\u6bd4\u5982 :  turn on the TV   \u5982\u679c\u84dd\u8272\u6307\u793a\u706f\u662f\u4eae\u7684(\u6301\u7eed\u7ea6 1 \u79d2)\uff0c\u5219\u8868\u793a\u8be5\u6307\u4ee4\u88ab\u6b63\u786e\u8bc6\u522b\u3002\u68c0\u67e5\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u547d\u4ee4\u88ab\u6253\u5370\u5728\u4e0a\u9762\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Speech_Recognizer/#_7", 
            "text": "[Eagle\u6587\u4ef6]   Schematics in Eagle  [\u539f\u7406\u56fePDF]   Schematics in PDF", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/", 
            "text": "Electricity sensor \u6a21\u5757\u662f Grove \u7cfb\u5217\u7684\u6210\u5458\u3002\u5b83\u57fa\u4e8e TA12-200 \u578b\u7535\u6d41\u4e92\u611f\u5668\uff0c\u8fd9\u79cd\u7535\u6d41\u4e92\u611f\u5668\u53ef\u5c06\u5e45\u5ea6\u8c03\u4f4e\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u6d4b\u8bd5\u9ad8\u8fbe 5A \u7684\u4ea4\u6d41\u7535\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u63a5\u53e3\n\n\n\u6700\u5927\u8f93\u5165 :  5A\n\n\n\u51c6\u786e\u7387\u9ad8\n\n\n\u4f53\u5f62\u5c0f\u5de7\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u4ea4\u6d41\u7535\u6d4b\u91cf\n\n\n\u8bbe\u5907\u72b6\u6001\u76d1\u6d4b\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u5173\u952e\u53c2\u6570\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\n\n\n\n\n\nPCB \u5c3a\u5bf8\n\n\n2.0cm*4.0cm\n\n\n\n\n\n\n\u63a5\u53e3\n\n\n2.0mm \u95f4\u8ddd\u5f15\u811a\n\n\n\n\n\n\nIO \u53e3\n\n\nSIG,NC,NC,GND\n\n\n\n\n\n\nRoHS \u8ba4\u8bc1\n\n\n\u901a\u8fc7\n\n\n\n\n\n\n\n\n\u7535\u6c14\u7279\u6027\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u8f6c\u6362\u7387\n\n\n-\n\n\n2000:1\n\n\n-\n\n\n-\n\n\n\n\n\n\n\u8f93\u5165\u7535\u6d41\n\n\n0\n\n\n-\n\n\n5\n\n\nA\n\n\n\n\n\n\n\u8f93\u51fa\u7535\u6d41\n\n\n0\n\n\n-\n\n\n2.5\n\n\nmA\n\n\n\n\n\n\n\u91c7\u6837\u7535\u963b\n\n\n-\n\n\n800\n\n\n-\n\n\n\u03a9\n\n\n\n\n\n\n\u91c7\u6837\u7535\u538b\n\n\n0\n\n\n-\n\n\n2\n\n\nV\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u7387\n\n\n20\n\n\n-\n\n\n20K\n\n\nHZ\n\n\n\n\n\n\n\u975e\u7ebf\u6027\u5c3a\u5ea6\n\n\n-\n\n\n-\n\n\n0.2%\n\n\n-\n\n\n\n\n\n\n\u76f8\u79fb\n\n\n-\n\n\n-\n\n\n5'\n\n\n-\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-55\n\n\n-\n\n\n85\n\n\n\u2103\n\n\n\n\n\n\n\u4ecb\u7535\u5f3a\u5ea6\n\n\n-\n\n\n6\n\n\n-\n\n\nKVAC/1min\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u4ee5\u4e0b\u5de5\u7a0b\u6f14\u793a\u4e86\u6d4b\u91cf\u4ea4\u6d41\u7535\u538b\u5e45\u5ea6\u7684\u7b80\u5355\u5e94\u7528\u3002SIG\u5f15\u811a\u5c06\u6839\u636e\u6d4b\u91cf\u7684\u4ea4\u6d41\u7535\u6d41\u8f93\u51fa\u4ea4\u6d41\u7535\u538b\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 ADC \u6765\u6d4b\u91cf\u8be5\u503c\u3002\n\n\n\n\n\u5c06\u6a21\u5757\u8fde\u63a5\u5230 \nGrove - Base shield\n \u7684 \nA0\n\u3002\n\n\n\u628a\u4ea4\u6d41\u7535\u7ebf\u7f06\u7a7f\u8fc7\u7535\u6d41\u4e92\u611f\u5668\u7684\u5b54\u3002\n\n\n\n\n\n\n\n\n\u590d\u5236\u5e76\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\u5230\u4e00\u4e2a\u65b0\u7684 Arduino \u5de5\u7a0b\u3002\n\n\n\n\n    /****************************************************************************/  \n    //  Function: Measure the amplitude current of the alternating current and\n    //            the effective current of the sinusoidal alternating current.\n    //  Hardware: Grove - Electricity Sensor        \n    //  Date:    Jan 19,2013\n    //  by www.seeedstudio.com\n    #define ELECTRICITY_SENSOR A0 // Analog input pin that sensor is attached to\n\n    float amplitude_current;               //amplitude current\n    float effective_value;       //effective current\n\n    void setup()\n    {\n        Serial.begin(9600);\n        pins_init();\n    }\n    void loop()\n    {\n        int sensor_max;\n        sensor_max = getMaxValue();\n        Serial.print(\nsensor_max = \n);\n        Serial.println(sensor_max);\n        //the VCC on the Grove interface of the sensor is 5v\n        amplitude_current=(float)sensor_max/1024*5/800*2000000;\n        effective_value=amplitude_current/1.414;//minimum_current=1/1024*5/800*2000000/1.414=8.6(mA)\n                            //Only for sinusoidal alternating current\n        Serial.println(\nThe amplitude of the current is(in mA)\n);\n        Serial.println(amplitude_current,1);//Only one number after the decimal point\n        Serial.println(\nThe effective value of the current is(in mA)\n);\n        Serial.println(effective_value,1);\n    }\n    void pins_init()\n    {\n        pinMode(ELECTRICITY_SENSOR, INPUT);\n    }\n    /*Function: Sample for 1000ms and get the maximum value from the SIG pin*/\n    int getMaxValue()\n    {\n        int sensorValue;             //value read from the sensor\n        int sensorMax = 0;\n        uint32_t start_time = millis();\n        while((millis()-start_time) \n 1000)//sample for 1000ms\n        {\n            sensorValue = analogRead(ELECTRICITY_SENSOR);\n            if (sensorValue \n sensorMax)\n            {\n                /*record the maximum sensor value*/\n                sensorMax = sensorValue;\n            }\n        }\n        return sensorMax;\n    }\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\n\n\n\nNote\n\n\u4ee3\u7801\u53ef\u4ee5\u68c0\u6d4b\u7684\u6700\u5c0f\u6709\u6548\u7535\u6d41\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u8ba1\u7b97 : minimum_current=1/1024*5/800*2000000/1.414=8.6(mA)\n\n\n\n\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u7ed3\u679c\u5982\u4e0b :\n\n\n\n\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.\n\n\n2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \n\u8fd9\u91cc\n\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi  \nA0\n \u63d2\u53e3\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n\n   cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\n\n\u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\n\n\n\n    nano grove_electricity_sensor.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Electricity Sensor to analog port A0\n    # SIG,NC,NC,GND\n    sensor = 0\n\n    grovepi.pinMode(sensor,\nINPUT\n)\n\n    # Vcc of the grove interface is normally 5v\n    grove_vcc = 5\n\n    while True:\n        try:\n            # Get sensor value\n            sensor_value = grovepi.analogRead(sensor)\n\n            # Calculate amplitude current (mA)\n            amplitude_current = (float)(sensor_value / 1024 * grove_vcc / 800 * 2000000)\n\n            # Calculate effective value (mA)\n            effective_value = amplitude_current / 1.414\n\n            # minimum_current = 1 / 1024 * grove_vcc / 800 * 2000000 / 1.414 = 8.6(mA)\n            # Only for sinusoidal alternating current\n\n            print \nsensor_value\n, sensor_value\n            print \nThe amplitude of the current is\n, amplitude_current, \nmA\n\n            print \nThe effective value of the current is\n, effective_value, \nmA\n\n            time.sleep(1)\n\n        except IOError:\n            print \nError\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\n    sudo python grove_electricity_sensor.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove -Electricity Sensor Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nSchematic in PDF", 
            "title": "Grove-Electricity Sensor"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#_1", 
            "text": "Grove \u63a5\u53e3  \u6700\u5927\u8f93\u5165 :  5A  \u51c6\u786e\u7387\u9ad8  \u4f53\u5f62\u5c0f\u5de7    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#_2", 
            "text": "\u4ea4\u6d41\u7535\u6d4b\u91cf  \u8bbe\u5907\u72b6\u6001\u76d1\u6d4b", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#_3", 
            "text": "", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#_4", 
            "text": "\u540d\u79f0  \u6700\u5c0f\u503c      PCB \u5c3a\u5bf8  2.0cm*4.0cm    \u63a5\u53e3  2.0mm \u95f4\u8ddd\u5f15\u811a    IO \u53e3  SIG,NC,NC,GND    RoHS \u8ba4\u8bc1  \u901a\u8fc7", 
            "title": "\u5173\u952e\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#_5", 
            "text": "\u540d\u79f0  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u8f6c\u6362\u7387  -  2000:1  -  -    \u8f93\u5165\u7535\u6d41  0  -  5  A    \u8f93\u51fa\u7535\u6d41  0  -  2.5  mA    \u91c7\u6837\u7535\u963b  -  800  -  \u03a9    \u91c7\u6837\u7535\u538b  0  -  2  V    \u5de5\u4f5c\u9891\u7387  20  -  20K  HZ    \u975e\u7ebf\u6027\u5c3a\u5ea6  -  -  0.2%  -    \u76f8\u79fb  -  -  5'  -    \u5de5\u4f5c\u6e29\u5ea6  -55  -  85  \u2103    \u4ecb\u7535\u5f3a\u5ea6  -  6  -  KVAC/1min", 
            "title": "\u7535\u6c14\u7279\u6027"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#_6", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#arduino", 
            "text": "\u4ee5\u4e0b\u5de5\u7a0b\u6f14\u793a\u4e86\u6d4b\u91cf\u4ea4\u6d41\u7535\u538b\u5e45\u5ea6\u7684\u7b80\u5355\u5e94\u7528\u3002SIG\u5f15\u811a\u5c06\u6839\u636e\u6d4b\u91cf\u7684\u4ea4\u6d41\u7535\u6d41\u8f93\u51fa\u4ea4\u6d41\u7535\u538b\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 ADC \u6765\u6d4b\u91cf\u8be5\u503c\u3002   \u5c06\u6a21\u5757\u8fde\u63a5\u5230  Grove - Base shield  \u7684  A0 \u3002  \u628a\u4ea4\u6d41\u7535\u7ebf\u7f06\u7a7f\u8fc7\u7535\u6d41\u4e92\u611f\u5668\u7684\u5b54\u3002     \u590d\u5236\u5e76\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\u5230\u4e00\u4e2a\u65b0\u7684 Arduino \u5de5\u7a0b\u3002       /****************************************************************************/  \n    //  Function: Measure the amplitude current of the alternating current and\n    //            the effective current of the sinusoidal alternating current.\n    //  Hardware: Grove - Electricity Sensor        \n    //  Date:    Jan 19,2013\n    //  by www.seeedstudio.com\n    #define ELECTRICITY_SENSOR A0 // Analog input pin that sensor is attached to\n\n    float amplitude_current;               //amplitude current\n    float effective_value;       //effective current\n\n    void setup()\n    {\n        Serial.begin(9600);\n        pins_init();\n    }\n    void loop()\n    {\n        int sensor_max;\n        sensor_max = getMaxValue();\n        Serial.print( sensor_max =  );\n        Serial.println(sensor_max);\n        //the VCC on the Grove interface of the sensor is 5v\n        amplitude_current=(float)sensor_max/1024*5/800*2000000;\n        effective_value=amplitude_current/1.414;//minimum_current=1/1024*5/800*2000000/1.414=8.6(mA)\n                            //Only for sinusoidal alternating current\n        Serial.println( The amplitude of the current is(in mA) );\n        Serial.println(amplitude_current,1);//Only one number after the decimal point\n        Serial.println( The effective value of the current is(in mA) );\n        Serial.println(effective_value,1);\n    }\n    void pins_init()\n    {\n        pinMode(ELECTRICITY_SENSOR, INPUT);\n    }\n    /*Function: Sample for 1000ms and get the maximum value from the SIG pin*/\n    int getMaxValue()\n    {\n        int sensorValue;             //value read from the sensor\n        int sensorMax = 0;\n        uint32_t start_time = millis();\n        while((millis()-start_time)   1000)//sample for 1000ms\n        {\n            sensorValue = analogRead(ELECTRICITY_SENSOR);\n            if (sensorValue   sensorMax)\n            {\n                /*record the maximum sensor value*/\n                sensorMax = sensorValue;\n            }\n        }\n        return sensorMax;\n    }   \u4e0a\u4f20\u4ee3\u7801\u3002    Note \n\u4ee3\u7801\u53ef\u4ee5\u68c0\u6d4b\u7684\u6700\u5c0f\u6709\u6548\u7535\u6d41\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u8ba1\u7b97 : minimum_current=1/1024*5/800*2000000/1.414=8.6(mA)   \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u7ed3\u679c\u5982\u4e0b :", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#raspberry-pi", 
            "text": "1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.  2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa  \u8fd9\u91cc \u3002  3.\u8fde\u63a5   \u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi   A0  \u63d2\u53e3\u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :     cd yourpath/GrovePi/Software/Python/   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :       nano grove_electricity_sensor.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Electricity Sensor to analog port A0\n    # SIG,NC,NC,GND\n    sensor = 0\n\n    grovepi.pinMode(sensor, INPUT )\n\n    # Vcc of the grove interface is normally 5v\n    grove_vcc = 5\n\n    while True:\n        try:\n            # Get sensor value\n            sensor_value = grovepi.analogRead(sensor)\n\n            # Calculate amplitude current (mA)\n            amplitude_current = (float)(sensor_value / 1024 * grove_vcc / 800 * 2000000)\n\n            # Calculate effective value (mA)\n            effective_value = amplitude_current / 1.414\n\n            # minimum_current = 1 / 1024 * grove_vcc / 800 * 2000000 / 1.414 = 8.6(mA)\n            # Only for sinusoidal alternating current\n\n            print  sensor_value , sensor_value\n            print  The amplitude of the current is , amplitude_current,  mA \n            print  The effective value of the current is , effective_value,  mA \n            time.sleep(1)\n\n        except IOError:\n            print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002     sudo python grove_electricity_sensor.py", 
            "title": "\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Electricity_Sensor/#_7", 
            "text": "[Eagle\u6587\u4ef6]   Grove -Electricity Sensor Eagle File  [\u539f\u7406\u56fePDF]   Schematic in PDF", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Luminance_Sensor/", 
            "text": "Grove - Luminance Sensor \u68c0\u6d4b\u8868\u9762\u533a\u57df\u7684\u73af\u5883\u5149\u5f3a\u5ea6\u3002 \u5b83\u4f7f\u7528 \nAPDS-9002\n \u6a21\u62df\u8f93\u51fa\u73af\u5883\u5149\u7167\u4f20\u611f\u5668\u3002APDS-9002 \u6d4b\u91cf\u9891\u8c31\u548c\u4eba\u773c\u6781\u5176\u63a5\u8fd1\u3002Grove - Luminance Sensor \u53ef\u7528\u4e8e\u8981\u6c42\u7167\u660e\u81ea\u52a8\u8c03\u8282\u7684\u4f4f\u5b85\u6216\u5546\u4e1a\u5e94\u7528\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\nVcc\n\n\n2.4V ~ 5.5V\n\n\n\n\n\n\n\u7ebf\u6027\u8f93\u51fa\u8303\u56f4\n\n\n0.0 ~ 2.3V\n\n\n\n\n\n\n\u4eae\u5ea6\u6d4b\u91cf\u8303\u56f4\n\n\n0 ~ 1000 Lux\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u5728 Seeduino Lotus \u4e0a\u4f7f\u7528 Grove Luminance sensor\n\n\n1.\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 Grove-Luminance sensor \u8fde\u63a5\u5230 Seeeduino Lotus \u7684 \nA0\n \u7aef\u53e3\u3002\n\n\n\n\n2.\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino IDE \u4e2d\u3002\n\n\nfloat VoutArray[] =  { 0.0011498,  0.0033908,   0.011498, 0.041803,0.15199,     0.53367, 1.3689,   1.9068,  2.3};\nfloat  LuxArray[] =  { 1.0108,     3.1201,  9.8051,   27.43,   69.545,   232.67,  645.11,   73.52,  1000};\n\nvoid setup() {\n    // put your setup code here, to run once:\n    Serial.begin(9600);\n\n}\n\nvoid loop() {\n    // put your main code here, to run repeatedly:\n\n    Serial.print(\nVout =\n);\n    Serial.print(readAPDS9002Vout(A0));\n    Serial.print(\n V,Luminance =\n);\n    Serial.print(readLuminance(A0));\n    Serial.println(\nLux\n);\n    delay(500);\n}\n\nfloat readAPDS9002Vout(uint8_t analogpin)\n{\n    // MeasuredVout = ADC Value * (Vcc / 1023) * (3 / Vcc)\n    // Vout samples are with reference to 3V Vcc\n    // The above expression is simplified by cancelling out Vcc\n    float MeasuredVout = analogRead(A0) * (3.0 / 1023.0);\n    //Above 2.3V , the sensor value is saturated\n\n    return MeasuredVout;\n\n}\n\nfloat readLuminance(uint8_t analogpin)\n{\n\n    // MeasuredVout = ADC Value * (Vcc / 1023) * (3 / Vcc)\n    // Vout samples are with reference to 3V Vcc\n    // The above expression is simplified by cancelling out Vcc\n    float MeasuredVout = analogRead(A0) * (3.0 / 1023.0);\n    float Luminance = FmultiMap(MeasuredVout, VoutArray, LuxArray, 9);\n\n    /**************************************************************************\n\n    The Luminance in Lux is calculated based on APDS9002 datasheet -- \n Graph 1\n    ( Output voltage vs. luminance at different load resistor)\n    The load resistor is 1k in this board. Vout is referenced to 3V Vcc.\n\n    The data from the graph is extracted using WebPlotDigitizer\n    http://arohatgi.info/WebPlotDigitizer/app/\n\n    VoutArray[] and LuxArray[] are these extracted data. Using MultiMap, the data\n    is interpolated to get the Luminance in Lux.\n\n    This implementation uses floating point arithmetic and hence will consume\n    more flash, RAM and time.\n\n    The Luminance in Lux is an approximation and depends on the accuracy of\n    Graph 1 used.\n\n    ***************************************************************************/\n\n    return Luminance;\n}\n\n\n//This code uses MultiMap implementation from http://playground.arduino.cc/Main/MultiMap\n\nfloat FmultiMap(float val, float * _in, float * _out, uint8_t size)\n{\n    // take care the value is within range\n    // val = constrain(val, _in[0], _in[size-1]);\n    if (val \n= _in[0]) return _out[0];\n    if (val \n= _in[size-1]) return _out[size-1];\n\n    // search right interval\n    uint8_t pos = 1;  // _in[0] allready tested\n    while(val \n _in[pos]) pos++;\n\n    // this will handle all exact \npoints\n in the _in array\n    if (val == _in[pos]) return _out[pos];\n\n    // interpolate in the right segment for the rest\n    return (val - _in[pos-1]) * (_out[pos] - _out[pos-1]) / (_in[pos] - _in[pos-1]) + _out[pos-1];\n}\n\n\n\n\n3.\u4e0a\u4f20\u4ee3\u7801\u81f3 seeeduino lotus\u3002\n\n\n4.\u5c06 Grove Luminance sensor \u653e\u5728\u5149\u6e90\u4e0b\u9762\u6216\u9700\u8981\u68c0\u6d4b\u4eae\u5ea6\u7684\u5730\u65b9\u3002\n\n\n5.\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u3002\n\n\n\n\n6.\u6570\u636e\u5c06\u663e\u793a\u5728\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\n \nGrove-Luminance Sensor eagle file\n\n\n[\u539f\u7406\u56fe PDF]\n \nGrove-Luminance Sensor Schematic (PDF)\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nAPDS-900 Datasheet\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nGrove-Luminance Sensor Demo code", 
            "title": "Grove-Luminance Sensor"
        }, 
        {
            "location": "/Grove-Luminance_Sensor/#_1", 
            "text": "\u9879\u76ee  \u53c2\u6570      Vcc  2.4V ~ 5.5V    \u7ebf\u6027\u8f93\u51fa\u8303\u56f4  0.0 ~ 2.3V    \u4eae\u5ea6\u6d4b\u91cf\u8303\u56f4  0 ~ 1000 Lux      Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Luminance_Sensor/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Luminance_Sensor/#_2", 
            "text": "\u5728 Seeduino Lotus \u4e0a\u4f7f\u7528 Grove Luminance sensor  1.\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 Grove-Luminance sensor \u8fde\u63a5\u5230 Seeeduino Lotus \u7684  A0  \u7aef\u53e3\u3002   2.\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230 Arduino IDE \u4e2d\u3002  float VoutArray[] =  { 0.0011498,  0.0033908,   0.011498, 0.041803,0.15199,     0.53367, 1.3689,   1.9068,  2.3};\nfloat  LuxArray[] =  { 1.0108,     3.1201,  9.8051,   27.43,   69.545,   232.67,  645.11,   73.52,  1000};\n\nvoid setup() {\n    // put your setup code here, to run once:\n    Serial.begin(9600);\n\n}\n\nvoid loop() {\n    // put your main code here, to run repeatedly:\n\n    Serial.print( Vout = );\n    Serial.print(readAPDS9002Vout(A0));\n    Serial.print(  V,Luminance = );\n    Serial.print(readLuminance(A0));\n    Serial.println( Lux );\n    delay(500);\n}\n\nfloat readAPDS9002Vout(uint8_t analogpin)\n{\n    // MeasuredVout = ADC Value * (Vcc / 1023) * (3 / Vcc)\n    // Vout samples are with reference to 3V Vcc\n    // The above expression is simplified by cancelling out Vcc\n    float MeasuredVout = analogRead(A0) * (3.0 / 1023.0);\n    //Above 2.3V , the sensor value is saturated\n\n    return MeasuredVout;\n\n}\n\nfloat readLuminance(uint8_t analogpin)\n{\n\n    // MeasuredVout = ADC Value * (Vcc / 1023) * (3 / Vcc)\n    // Vout samples are with reference to 3V Vcc\n    // The above expression is simplified by cancelling out Vcc\n    float MeasuredVout = analogRead(A0) * (3.0 / 1023.0);\n    float Luminance = FmultiMap(MeasuredVout, VoutArray, LuxArray, 9);\n\n    /**************************************************************************\n\n    The Luminance in Lux is calculated based on APDS9002 datasheet --   Graph 1\n    ( Output voltage vs. luminance at different load resistor)\n    The load resistor is 1k in this board. Vout is referenced to 3V Vcc.\n\n    The data from the graph is extracted using WebPlotDigitizer\n    http://arohatgi.info/WebPlotDigitizer/app/\n\n    VoutArray[] and LuxArray[] are these extracted data. Using MultiMap, the data\n    is interpolated to get the Luminance in Lux.\n\n    This implementation uses floating point arithmetic and hence will consume\n    more flash, RAM and time.\n\n    The Luminance in Lux is an approximation and depends on the accuracy of\n    Graph 1 used.\n\n    ***************************************************************************/\n\n    return Luminance;\n}\n\n\n//This code uses MultiMap implementation from http://playground.arduino.cc/Main/MultiMap\n\nfloat FmultiMap(float val, float * _in, float * _out, uint8_t size)\n{\n    // take care the value is within range\n    // val = constrain(val, _in[0], _in[size-1]);\n    if (val  = _in[0]) return _out[0];\n    if (val  = _in[size-1]) return _out[size-1];\n\n    // search right interval\n    uint8_t pos = 1;  // _in[0] allready tested\n    while(val   _in[pos]) pos++;\n\n    // this will handle all exact  points  in the _in array\n    if (val == _in[pos]) return _out[pos];\n\n    // interpolate in the right segment for the rest\n    return (val - _in[pos-1]) * (_out[pos] - _out[pos-1]) / (_in[pos] - _in[pos-1]) + _out[pos-1];\n}  3.\u4e0a\u4f20\u4ee3\u7801\u81f3 seeeduino lotus\u3002  4.\u5c06 Grove Luminance sensor \u653e\u5728\u5149\u6e90\u4e0b\u9762\u6216\u9700\u8981\u68c0\u6d4b\u4eae\u5ea6\u7684\u5730\u65b9\u3002  5.\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u3002   6.\u6570\u636e\u5c06\u663e\u793a\u5728\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Luminance_Sensor/#_3", 
            "text": "[Eagle \u6587\u4ef6]   Grove-Luminance Sensor eagle file  [\u539f\u7406\u56fe PDF]   Grove-Luminance Sensor Schematic (PDF)  [\u82af\u7247\u6570\u636e\u624b\u518c]   APDS-900 Datasheet  [\u5176\u4ed6\u8d44\u6e90]   Grove-Luminance Sensor Demo code", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Actuator/", 
            "text": "Grove - \u6267\u884c\u5668\u5305\u62ec\u7535\u673a\u9a71\u52a8\u5668\uff0cLED\u663e\u793a\u5c4f\uff0c\u7ee7\u7535\u5668\uff0c\u626c\u58f0\u5668\uff0c\u8702\u9e23\u5668\u7b49\u6a21\u5757\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u6267\u884c\u5668\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGrove-2-Coil_Latching_Relay\n\n\nGrove-Button\n\n\nGrove-Buzzer\n\n\nGrove-Chainable_RGB_LED\n\n\nGrove-Dry-Reed_Relay\n\n\nGrove-EL_Driver\n\n\nGrove-Haptic_Motor\n\n\nGrove-I2C_Motor_Driver_V1.3\n\n\nGrove-Infrared_Emitter\n\n\nGrove-Mini_Fan\n\n\nGrove-MP3_v2.0\n\n\nGrove-Recorder_v3.0\n\n\nGrove-Relay\n\n\nGrove-Servo\n\n\nGrove-Solid_State_Relay\n\n\nGrove-Speaker\n\n\nGrove-Variable_Color_LED\n\n\nGrove-Vibration_Motor\n\n\nGrove-Water_Atomization", 
            "title": "Actuator"
        }, 
        {
            "location": "/Actuator/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u6267\u884c\u5668\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Grove-2-Coil_Latching_Relay  Grove-Button  Grove-Buzzer  Grove-Chainable_RGB_LED  Grove-Dry-Reed_Relay  Grove-EL_Driver  Grove-Haptic_Motor  Grove-I2C_Motor_Driver_V1.3  Grove-Infrared_Emitter  Grove-Mini_Fan  Grove-MP3_v2.0  Grove-Recorder_v3.0  Grove-Relay  Grove-Servo  Grove-Solid_State_Relay  Grove-Speaker  Grove-Variable_Color_LED  Grove-Vibration_Motor  Grove-Water_Atomization", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove-MP3_v2.0/", 
            "text": "\u7b80\u4ecb\n\n\nGrove \u2013 MP3 V2.0\u662f\u4e00\u6b3e\u5916\u5f62\u5c0f\u5de7\uff0c\u8bbe\u8ba1\u7d27\u51d1\u7684\u97f3\u9891\u6a21\u5757\u3002\u672c\u6a21\u5757\u652f\u6301\u591a\u79cd\u683c\u5f0f\u7684\u64ad\u653e\uff0cMP3, WAV\u4ee5\u53caWMV\u706f\u3002\u5e76\u652f\u6301\u591a\u79cd\u64ad\u653e\u6a21\u5f0f\uff0c\u968f\u673a\u64ad\u653e\uff0c\u5faa\u73af\u64ad\u653e\u4ee5\u53ca\u5355\u66f2\u5faa\u73af\u7b49\u3002Grove \u2013 MP3 V2\u91c7\u7528\u4e32\u53e3\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8e\u4efb\u4f55\u5177\u6709\u4e32\u53e3\u7684\u4e3b\u63a7\u677f\uff0c\u4f8b\u5982Arduino, Raspberry, LaunchPad\u7b49\u4e3b\u6d41\u7684\u5f00\u6e90\u786c\u4ef6\u5f00\u53d1\u677f\u3002\u53e6\u5916\uff0c\u6a21\u5757\u4e0a\u96c6\u6210\u6709micro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54\uff0c\u4e3a\u4f60\u97f3\u9891\u65b9\u9762\u7684\u5e94\u7528\u5e26\u6765\u6781\u5927\u7684\u4fbf\u5229\u3002\n\n\n\n\n\u7248\u672c\u66f4\u65b0\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7248\u672c\n\n\n\u53d1\u5e03\u65f6\u95f4\n\n\n\u5f53\u524d\u652f\u6301\u72b6\u6001\n\n\n\n\n\n\n\n\n\n\nVersion 1.0\n\n\n2013 04 28\n\n\n\u652f\u6301\n\n\n\n\n\n\nVersion 2.0\n\n\n2015 11 15\n\n\n\u652f\u6301\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5185\u7f6e\u57fa\u672c\u7684\u97f3\u9891\u64cd\u4f5c\n\n\n\u534a\u8f7dmicro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54\n\n\n\u591a\u79cd\u91c7\u6837\u7387\u652f\u6301\uff0c8/11.025/12/16/22.05/24/32/44.1/48K\n\n\n24\u4f4dDAC\u9ad8\u7cbe\u5ea6\u8f93\u51fa\uff0c\u6700\u592790dB\u52a8\u6001\u8f93\u51fa@85dB SNR\n\n\n\u652f\u6301\u591a\u79cd\u97f3\u9891\u683c\u5f0f\uff0cMP3, WAV, WMV\u706f\n\n\n10\u79cd\u5747\u8861\u6a21\u5f0f\n\n\n\n\n\n\nNote\n\n\n\n\n\u66f4\u591a\u5173\u4e8eGrove\u63a5\u53e3\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u4e0b\u9762\u94fe\u63a5 \nGrove System\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u9002\u5408\u5404\u79cd\u97f3\u9891\u5e94\u7528\u7684\u4e2d\u95f4\u89e3\u51b3\u65b9\u6848.\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u6570\u503c\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\n\n\n5 V (DC)\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41 (\u65e0\u4fe1\u53f7\u8f93\u51fa\u65f6)\n\n\n 15 mA\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n 40 mA\n\n\n\n\n\n\n\u4e3b\u63a7\u82af\u7247\n\n\nKT403A \n(datasheet)\n\n\n\n\n\n\n\u82af\u7247\u8f93\u51fa\u7535\u538b\n\n\n3.3 V\n\n\n\n\n\n\n\u82af\u7247\u8f93\u51fa\u7535\u6d41\n\n\n100mA(at Max.)\n\n\n\n\n\n\n\u652f\u6301\u97f3\u9891\u683c\u5f0f\n\n\nMP3, WAV, WMA\n\n\n\n\n\n\n\u652f\u6301SD\u5361\u6700\u5927\u5bb9\u91cf\n\n\n32 GB\n\n\n\n\n\n\n\u91c7\u6837\u9891\u7387\n\n\n8 / 11.025 / 12 / 16 / 22.05 / 24 / 32 / 44.1 / 48(KHz)\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\nArduino, Raspberrypi, bbg, linkitone\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\n\u7ec4\u4ef6\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - MP3 v2.0\n\n\n1PC\n\n\n\n\n\n\nGrove - Universal Cable\n\n\n1PC\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u9700\u8981\u7684\u7d20\u6750\n\n\n\n\nSeeeduino \u00d7 1\n\n\nGrove - Base Shield v2 \u00d7 1\n\n\nGrove - MP3 v2.0 \u00d7 1\n\n\n\u88c5\u6709\u97f3\u9891\u6587\u4ef6\u7684SD\u5361 \u00d7 1\n\n\nUSB \u9002\u914d\u7ebf (type A to micro type-B) \u00d7 1\n\n\n\u5e26\u67093.5mm\u63a5\u53e3\u7684\u8033\u673a\u6216\u97f3\u7bb1 \u00d7 1\n\n\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u70b9\u51fb\u4e0b\u9762\u7684\u6307\u5357\u6765\u642d\u5efa\u597d\u60a8\u7684IDE\u7f16\u8bd1\u5de5\u5177:.\n\n\nWindows\u7cfb\u7edfIDE\u6307\u5357\n\n\nMac OS X IDE\u6307\u5357\n\n\n\n\n\u63d0\u793a\n\n\u6211\u4eec\u9009\u53d6\u7684Seeeduino\u4f5c\u4e3a\u6b64\u5b9e\u4f8b\u7684\u5f00\u53d1\u677f\uff0c\u4f46\u662f\u60a8\u4e5f\u53ef\u4ee5\u9009\u7528Arduino\u7684\u5f00\u53d1\u677f\u6765\u5b9e\u73b0\u6240\u6709\u529f\u80fd\uff0c\u4ed6\u4eec\u662f\u5b8c\u5168\u517c\u5bb9\u7684\u3002\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\u56fe\n\n\n\n\n\u8f6f\u4ef6\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\n\n\nTip\n\n\n\n\n\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n\n\n\n\n\u70e7\u5f55\u4f8b\u7a0b\n\n\n\n\n\u5230 \n\u8fd9\u91cc\n \u4e0b\u8f7d\u9a71\u52a8\u5e93\u3002\n\n\n\u628a\u4e0b\u8f7d\u7684\u9a71\u52a8\u5e93\u653e\u5230Arduino IDE\u7684 \nlibraries\n \u6587\u4ef6\u5939\n\n\n\u6253\u5f00MP3_Play_Test\u7684example\uff0c\u628a\u4ee3\u7801\u70e7\u5f55\u5230Seeeduino\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08Ctrl + Shift + M\uff09\uff0c\u53d1\u9001\u547d\u4ee4\u64ad\u653e\u97f3\u4e50\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u786c\u4ef6\u539f\u7406\u56fe]\n Hardware \nSchematic files\n\n\n[\u5e93]\nLibraries\n on Github.\n\n\n[\u6570\u636e\u624b\u518c]\n KT403A \nDatasheet\n (part)", 
            "title": "Grove-MP3 v2.0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_1", 
            "text": "Grove \u2013 MP3 V2.0\u662f\u4e00\u6b3e\u5916\u5f62\u5c0f\u5de7\uff0c\u8bbe\u8ba1\u7d27\u51d1\u7684\u97f3\u9891\u6a21\u5757\u3002\u672c\u6a21\u5757\u652f\u6301\u591a\u79cd\u683c\u5f0f\u7684\u64ad\u653e\uff0cMP3, WAV\u4ee5\u53caWMV\u706f\u3002\u5e76\u652f\u6301\u591a\u79cd\u64ad\u653e\u6a21\u5f0f\uff0c\u968f\u673a\u64ad\u653e\uff0c\u5faa\u73af\u64ad\u653e\u4ee5\u53ca\u5355\u66f2\u5faa\u73af\u7b49\u3002Grove \u2013 MP3 V2\u91c7\u7528\u4e32\u53e3\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8e\u4efb\u4f55\u5177\u6709\u4e32\u53e3\u7684\u4e3b\u63a7\u677f\uff0c\u4f8b\u5982Arduino, Raspberry, LaunchPad\u7b49\u4e3b\u6d41\u7684\u5f00\u6e90\u786c\u4ef6\u5f00\u53d1\u677f\u3002\u53e6\u5916\uff0c\u6a21\u5757\u4e0a\u96c6\u6210\u6709micro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54\uff0c\u4e3a\u4f60\u97f3\u9891\u65b9\u9762\u7684\u5e94\u7528\u5e26\u6765\u6781\u5927\u7684\u4fbf\u5229\u3002", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_2", 
            "text": "\u4ea7\u54c1\u7248\u672c  \u53d1\u5e03\u65f6\u95f4  \u5f53\u524d\u652f\u6301\u72b6\u6001      Version 1.0  2013 04 28  \u652f\u6301    Version 2.0  2015 11 15  \u652f\u6301", 
            "title": "\u7248\u672c\u66f4\u65b0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_3", 
            "text": "\u5185\u7f6e\u57fa\u672c\u7684\u97f3\u9891\u64cd\u4f5c  \u534a\u8f7dmicro-SD\u5361\u69fd\u4ee5\u53ca3.5mm\u97f3\u9891\u63d2\u5b54  \u591a\u79cd\u91c7\u6837\u7387\u652f\u6301\uff0c8/11.025/12/16/22.05/24/32/44.1/48K  24\u4f4dDAC\u9ad8\u7cbe\u5ea6\u8f93\u51fa\uff0c\u6700\u592790dB\u52a8\u6001\u8f93\u51fa@85dB SNR  \u652f\u6301\u591a\u79cd\u97f3\u9891\u683c\u5f0f\uff0cMP3, WAV, WMV\u706f  10\u79cd\u5747\u8861\u6a21\u5f0f    Note   \u66f4\u591a\u5173\u4e8eGrove\u63a5\u53e3\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb\u4e0b\u9762\u94fe\u63a5  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_4", 
            "text": "\u9002\u5408\u5404\u79cd\u97f3\u9891\u5e94\u7528\u7684\u4e2d\u95f4\u89e3\u51b3\u65b9\u6848.", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_5", 
            "text": "\u53c2\u6570  \u6570\u503c      \u8f93\u5165  5 V (DC)    \u5de5\u4f5c\u7535\u6d41 (\u65e0\u4fe1\u53f7\u8f93\u51fa\u65f6)   15 mA    \u5de5\u4f5c\u7535\u6d41   40 mA    \u4e3b\u63a7\u82af\u7247  KT403A  (datasheet)    \u82af\u7247\u8f93\u51fa\u7535\u538b  3.3 V    \u82af\u7247\u8f93\u51fa\u7535\u6d41  100mA(at Max.)    \u652f\u6301\u97f3\u9891\u683c\u5f0f  MP3, WAV, WMA    \u652f\u6301SD\u5361\u6700\u5927\u5bb9\u91cf  32 GB    \u91c7\u6837\u9891\u7387  8 / 11.025 / 12 / 16 / 22.05 / 24 / 32 / 44.1 / 48(KHz)", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_6", 
            "text": "Arduino, Raspberrypi, bbg, linkitone", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_7", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_8", 
            "text": "\u7ec4\u4ef6\u540d\u79f0  \u6570\u91cf      Grove - MP3 v2.0  1PC    Grove - Universal Cable  1PC", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_9", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_10", 
            "text": "Seeeduino \u00d7 1  Grove - Base Shield v2 \u00d7 1  Grove - MP3 v2.0 \u00d7 1  \u88c5\u6709\u97f3\u9891\u6587\u4ef6\u7684SD\u5361 \u00d7 1  USB \u9002\u914d\u7ebf (type A to micro type-B) \u00d7 1  \u5e26\u67093.5mm\u63a5\u53e3\u7684\u8033\u673a\u6216\u97f3\u7bb1 \u00d7 1", 
            "title": "\u9700\u8981\u7684\u7d20\u6750"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_11", 
            "text": "\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u70b9\u51fb\u4e0b\u9762\u7684\u6307\u5357\u6765\u642d\u5efa\u597d\u60a8\u7684IDE\u7f16\u8bd1\u5de5\u5177:.  Windows\u7cfb\u7edfIDE\u6307\u5357  Mac OS X IDE\u6307\u5357   \u63d0\u793a \n\u6211\u4eec\u9009\u53d6\u7684Seeeduino\u4f5c\u4e3a\u6b64\u5b9e\u4f8b\u7684\u5f00\u53d1\u677f\uff0c\u4f46\u662f\u60a8\u4e5f\u53ef\u4ee5\u9009\u7528Arduino\u7684\u5f00\u53d1\u677f\u6765\u5b9e\u73b0\u6240\u6709\u529f\u80fd\uff0c\u4ed6\u4eec\u662f\u5b8c\u5168\u517c\u5bb9\u7684\u3002", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_12", 
            "text": "", 
            "title": "\u786c\u4ef6\u8fde\u63a5\u56fe"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_13", 
            "text": "\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002   Tip   \u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_14", 
            "text": "\u5230  \u8fd9\u91cc  \u4e0b\u8f7d\u9a71\u52a8\u5e93\u3002  \u628a\u4e0b\u8f7d\u7684\u9a71\u52a8\u5e93\u653e\u5230Arduino IDE\u7684  libraries  \u6587\u4ef6\u5939  \u6253\u5f00MP3_Play_Test\u7684example\uff0c\u628a\u4ee3\u7801\u70e7\u5f55\u5230Seeeduino  \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff08Ctrl + Shift + M\uff09\uff0c\u53d1\u9001\u547d\u4ee4\u64ad\u653e\u97f3\u4e50", 
            "title": "\u70e7\u5f55\u4f8b\u7a0b"
        }, 
        {
            "location": "/Grove-MP3_v2.0/#_15", 
            "text": "[\u786c\u4ef6\u539f\u7406\u56fe]  Hardware  Schematic files  [\u5e93] Libraries  on Github.  [\u6570\u636e\u624b\u518c]  KT403A  Datasheet  (part)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/", 
            "text": "Infrared Receiver \u7528\u4e8e\u63a5\u6536\u7ea2\u5916\u4fe1\u53f7\uff0c\u4e5f\u53ef\u7528\u4e8e\u8fdc\u7a0b\u63a7\u5236\u68c0\u6d4b\u3002 Infrared Receiver \u4e0a\u6709\u4e00\u4e2a IR \u63a2\u6d4b\u5668\uff0c\u7528\u4e8e\u83b7\u5f97\u7ea2\u5916\u53d1\u5c04\u5668\u53d1\u51fa\u7684\u7ea2\u5916\u7ebf\u3002 IR \u68c0\u6d4b\u5668\u5185\u90e8\u6709\u4e00\u4e2a\u89e3\u8c03\u5668\uff0c\u5bfb\u627e 38 KHz\u7684\u4fe1\u53f7\u3002 Infrared Receiver\u53ef\u4ee5\u572810\u7c73\u4ee5\u5185\u63a5\u6536\u4fe1\u53f7\u3002 \u5982\u679c\u8d85\u8fc710\u7c73\uff0c\u63a5\u6536\u5668\u53ef\u80fd\u65e0\u6cd5\u5f97\u5230\u4fe1\u53f7\u3002 \u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u4e24\u4e2a Groves-Infrared Receiver \u548c \nGrove - Infrared Emitter\n \u6765\u4e00\u8d77\u5de5\u4f5c\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5de5\u4f5c\u7535\u538b: 3.3-5V\n\n\n\u63a5\u6536\u8ddd\u79bb: 10m\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u793a\u4f8b\n\n\n\u6211\u4eec\u5c06\u5728\u672c\u793a\u4f8b\u4e2d\u4f7f\u7528 Grove-Infrared Receiver \u548c Grove - Infrared Emitter\u3002 Infrared Receiver\u5c06\u6536\u5230  Grove - Infrared Emitter \u53d1\u9001\u7684\u6570\u636e\u3002\n\n\n\n\n\u5c06 Grove - Infrared Emitter \u8fde\u63a5\u5230 \nD3\n\u3002\n\n\n\u5c06 Grove - Infrared Emitter \u8fde\u63a5\u5230 \nD2\n\u3002\n\n\n\n\n\u4f7f\u7528 Arduino/Seeeduino\n\n\n\u63a8\u8350\u9605\u8bfb\u5165\u95e8\n\n\n\n\n\n\nArduino\u5165\u95e8\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n\n\n\n\nIRSendRev \u5e93\n\n\n\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Seeeduino / Arduino\uff0c\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u8bbe\u7f6e\u5e93\u3002\n\n\n\u8bbe\u7f6e\n\n\n\n\n\u4ece IRSendRev github \u9875\u9762\u4e0a\u4e0b\u8f7d \n\u5e93\u6587\u4ef6\u538b\u7f29\u5305\n \u3002\n\n\n\u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u89e3\u538b\u7f29\u5230... / arduino / libraries \u4e2d\u3002\n\n\n\u89e3\u538b\u6587\u4ef6\u5939\u5e76\u547d\u540d\u4e3a \u201cIRSendRev\u201d\n\n\n\u542f\u52a8 Arduino IDE\uff08\u5982\u679c\u5df2\u7ecf\u6253\u5f00\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8\uff09\u3002\n\n\n\n\nInfrared Receiver\u7684\u793a\u4f8b/\u5e94\u7528\n\n\n\u8fd9\u4e9b\u4f8b\u5b50\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Grove - Infrared Receiver \u7684\u529f\u80fd\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 Infrared Receiver \u4e0e Grove - Infrared Emitter \u7ec4\u5408\u4f7f\u7528\u3002 \u5c06 \nIR\u53d1\u5c04\n  \u5f15\u811a\u8fde\u63a5\u5230 \nD2\n \u8fdb\u884c\u6f14\u793a\u3002\n\n\n\u63a5\u6536\u5668\n\n\n\n\n\u6253\u5f00File\uff08\u6587\u4ef6\uff09 - \nExamples\uff08\u793a\u4f8b\uff09 - \n IRSendRev-\n example-\n recv \u67e5\u770b\u5b8c\u6574\u7684\u793a\u4f8b\u7a0b\u5e8f\uff0c\u6216\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002\n\n\n\n\n\u63cf\u8ff0\n:\n\u6b64\u793a\u4f8b\u5c06 \nIR\u63a5\u6536\u5668\n \u5f15\u811a\u8fde\u63a5\u5230 \nD2\n\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u76d1\u89c6\u5668\u770b\u5230\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5c06\u63a5\u6536\u5230\u7684\u7ea2\u5916\u6570\u636e\u5199\u5165 send.ino\uff0c\u5e76\u4f7f\u7528 Infrared Emitter \u4e0a\u4f20\u5230\u7535\u8def\u677f\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4f7f\u7528\u9065\u63a7\u5668\u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\u3002\n\n\n\u521b\u610f\u5e94\u7528\n:\n\u60a8\u53ef\u4ee5\u901a\u8fc7 Infrared Receiver \u77e5\u9053\u9065\u63a7\u5668\u53d1\u9001\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u901a\u8fc7 Infrared Emitter \u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5ba4\u5185\u6e29\u5ea6\u5927\u4e8e26\u5ea6\u65f6\u6253\u5f00\u98ce\u6247\u5f00\u5173\u3002\n\n\n#include \nIRSendRev.h\n\n\u00a0\n#define BIT_LEN         0\n#define BIT_START_H     1\n#define BIT_START_L     2\n#define BIT_DATA_H      3\n#define BIT_DATA_L      4\n#define BIT_DATA_LEN    5\n#define BIT_DATA        6\n\u00a0\nconst int pinRecv = 2;              // ir receiver connect to D2\n\u00a0\nvoid setup()\n{\n    Serial.begin(115200);\n    IR.Init(pinRecv);\n    Serial.println(\ninit over\n);\n}\n\u00a0\nunsigned char dta[20];\n\u00a0\nvoid loop()\n{\n    if(IR.IsDta())                  // get IR data\n    {\n        IR.Recv(dta);               // receive data to dta\n\u00a0\n        Serial.println(\n+------------------------------------------------------+\n);\n        Serial.print(\nLEN = \n);\n        Serial.println(dta[BIT_LEN]);\n        Serial.print(\nSTART_H: \n);\n        Serial.print(dta[BIT_START_H]);\n        Serial.print(\n\\tSTART_L: \n);\n        Serial.println(dta[BIT_START_L]);\n\u00a0\n        Serial.print(\nDATA_H: \n);\n        Serial.print(dta[BIT_DATA_H]);\n        Serial.print(\n\\tDATA_L: \n);\n        Serial.println(dta[BIT_DATA_L]);\n\u00a0\n        Serial.print(\n\\r\\nDATA_LEN = \n);\n        Serial.println(dta[BIT_DATA_LEN]);\n\u00a0\n        Serial.print(\nDATA: \n);\n        for(int i=0; i\ndta[BIT_DATA_LEN]; i++)\n        {\n            Serial.print(\n0x\n);\n            Serial.print(dta[i+BIT_DATA], HEX);\n            Serial.print(\n\\t\n);\n        }\n        Serial.println();\n\u00a0\n        Serial.print(\nDATA: \n);\n        for(int i=0; i\ndta[BIT_DATA_LEN]; i++)\n        {\n            Serial.print(dta[i+BIT_DATA], DEC);\n            Serial.print(\n\\t\n);\n        }\n        Serial.println();\n        Serial.println(\n+------------------------------------------------------+\\r\\n\\r\\n\n);\n    }\n}\n\n\n\n\n\n\n\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u5f00\u53d1\u677f\u3002\n\n\n\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u7b49\u5f85\u6570\u636e\u8f93\u5165\u3002\n\n\n\u4f7f\u7528\u7ea2\u5916\u9065\u63a7\u53d1\u9001\u6570\u636e\n\uff08\u6b64\u793a\u4f8b\u4f7f\u7528 MIDEA \u516c\u53f8\u7684\u7ea2\u5916\u9065\u63a7\u5668\u7684\u98ce\u6247\uff0c\u7136\u540e\u6309\u5f00/\u5173\u952e\uff09\n\u3002\n\n\n\u60a8\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u4fe1\u606f\u3002\n\n\n\n\n\n\n\u53d1\u5c04\u5668\n\n\n\n\n\u6253\u5f00 \nFile\uff08\u6587\u4ef6\uff09 - \nExamples\uff08\u793a\u4f8b\uff09 - \n IRSendRev-\n example\n \u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f\uff0c\u6216\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002\n\n\n\n\n\u63cf\u8ff0\n:\n\u5728\u8fd9\u4e2a\u6f14\u793a\u4e2d\u6211\u4eec\u5c06 \nIR\u53d1\u5c04\n \u5f15\u811a\u8fde\u63a5\u5230 \nD3\n \u7aef\u53e3\u3002 \u60a8\u53ef\u4ee5\u770b\u5230\u901a\u8fc7 Infrared Receiver \u63a5\u6536\u5230\u7684\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u5982\u4e0a\u8ff0\u793a\u4f8b\u3002 \u7136\u540e\u5c06\u63a5\u6536\u5230\u7684\u7ea2\u5916\u6570\u636e\u5199\u5165\u6b64\u793a\u4f8b\uff0c\u5e76\u4f7f\u7528 Infrared Emitter \u4e0a\u4f20\u5230\u7535\u8def\u677f\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u9065\u63a7\u5668\u53d1\u9001\u51fa\u76f8\u540c\u7684\u6570\u636e\u3002\n\n\n\n\nNote\n\n\u6b64\u6f14\u793a\u5fc5\u987b\u5c06 **IR\u53d1\u5c04** \u5f15\u811a\u8fde\u63a5\u5230 **D3** \u7aef\u53e3\u3002\n\n\n\n\n#include \nIRSendRev.h\n\n\u00a0\n#define BIT_LEN         0\n#define BIT_START_H     1\n#define BIT_START_L     2\n#define BIT_DATA_H      3\n#define BIT_DATA_L      4\n#define BIT_DATA_LEN    5\n#define BIT_DATA        6\n\u00a0\nconst int ir_freq = 38;                 // 38k\n\u00a0\nunsigned char dtaSend[20];\n\u00a0\nvoid dtaInit()\n{\n    dtaSend[BIT_LEN]        = 11;          // all data that needs to be sent\n    dtaSend[BIT_START_H]    = 180;         // the logic high duration of \nStart\n\n    dtaSend[BIT_START_L]    = 91;          // the logic low duration of \nStart\n\n    dtaSend[BIT_DATA_H]     = 11;          // the logic \nlong\n duration in the communication\n    dtaSend[BIT_DATA_L]     = 33;          // the logic \nshort\n duration in the communication\n\u00a0\n    dtaSend[BIT_DATA_LEN]   = 6;           // Number of data which will sent. If the number is other, you should increase or reduce dtaSend[BIT_DATA+x].\n\u00a0\n    dtaSend[BIT_DATA+0]     = 128;           // data that will sent\n    dtaSend[BIT_DATA+1]     = 127;\n    dtaSend[BIT_DATA+2]     = 192;\n    dtaSend[BIT_DATA+3]     = 63;\n    dtaSend[BIT_DATA+4]     = 192;\n    dtaSend[BIT_DATA+5]     = 63;\n}\n\u00a0\nvoid setup()\n{\n    dtaInit();\n}\n\u00a0\nvoid loop()\n{\n    IR.Send(dtaSend, 38);\n\u00a0\n    delay(2000);\n}\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - Infrared Receiver eagle files\n\n\nIR Send and Receiver Library\n\n\nIR Receive Library for LinkIt ONE\n\n\nTSOP282 Datasheet", 
            "title": "Grove-Infrared Receiver"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b: 3.3-5V  \u63a5\u6536\u8ddd\u79bb: 10m    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#_2", 
            "text": "\u6211\u4eec\u5c06\u5728\u672c\u793a\u4f8b\u4e2d\u4f7f\u7528 Grove-Infrared Receiver \u548c Grove - Infrared Emitter\u3002 Infrared Receiver\u5c06\u6536\u5230  Grove - Infrared Emitter \u53d1\u9001\u7684\u6570\u636e\u3002   \u5c06 Grove - Infrared Emitter \u8fde\u63a5\u5230  D3 \u3002  \u5c06 Grove - Infrared Emitter \u8fde\u63a5\u5230  D2 \u3002", 
            "title": "\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#arduinoseeeduino", 
            "text": "", 
            "title": "\u4f7f\u7528 Arduino/Seeeduino"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#_3", 
            "text": "Arduino\u5165\u95e8    \u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u4e0b\u8f7d\u4ee3\u7801\u5230\u60a8\u7684\u677f\u5b50\u91cc\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002", 
            "title": "\u63a8\u8350\u9605\u8bfb\u5165\u95e8"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#irsendrev", 
            "text": "\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Seeeduino / Arduino\uff0c\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u8bbe\u7f6e\u5e93\u3002", 
            "title": "IRSendRev \u5e93"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#_4", 
            "text": "\u4ece IRSendRev github \u9875\u9762\u4e0a\u4e0b\u8f7d  \u5e93\u6587\u4ef6\u538b\u7f29\u5305  \u3002  \u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u89e3\u538b\u7f29\u5230... / arduino / libraries \u4e2d\u3002  \u89e3\u538b\u6587\u4ef6\u5939\u5e76\u547d\u540d\u4e3a \u201cIRSendRev\u201d  \u542f\u52a8 Arduino IDE\uff08\u5982\u679c\u5df2\u7ecf\u6253\u5f00\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8\uff09\u3002", 
            "title": "\u8bbe\u7f6e"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#infrared-receiver", 
            "text": "\u8fd9\u4e9b\u4f8b\u5b50\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Grove - Infrared Receiver \u7684\u529f\u80fd\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 Infrared Receiver \u4e0e Grove - Infrared Emitter \u7ec4\u5408\u4f7f\u7528\u3002 \u5c06  IR\u53d1\u5c04   \u5f15\u811a\u8fde\u63a5\u5230  D2  \u8fdb\u884c\u6f14\u793a\u3002", 
            "title": "Infrared Receiver\u7684\u793a\u4f8b/\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#_5", 
            "text": "\u6253\u5f00File\uff08\u6587\u4ef6\uff09 -  Examples\uff08\u793a\u4f8b\uff09 -   IRSendRev-  example-  recv \u67e5\u770b\u5b8c\u6574\u7684\u793a\u4f8b\u7a0b\u5e8f\uff0c\u6216\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002   \u63cf\u8ff0 :\n\u6b64\u793a\u4f8b\u5c06  IR\u63a5\u6536\u5668  \u5f15\u811a\u8fde\u63a5\u5230  D2 \u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u76d1\u89c6\u5668\u770b\u5230\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5c06\u63a5\u6536\u5230\u7684\u7ea2\u5916\u6570\u636e\u5199\u5165 send.ino\uff0c\u5e76\u4f7f\u7528 Infrared Emitter \u4e0a\u4f20\u5230\u7535\u8def\u677f\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4f7f\u7528\u9065\u63a7\u5668\u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\u3002  \u521b\u610f\u5e94\u7528 :\n\u60a8\u53ef\u4ee5\u901a\u8fc7 Infrared Receiver \u77e5\u9053\u9065\u63a7\u5668\u53d1\u9001\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u901a\u8fc7 Infrared Emitter \u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5ba4\u5185\u6e29\u5ea6\u5927\u4e8e26\u5ea6\u65f6\u6253\u5f00\u98ce\u6247\u5f00\u5173\u3002  #include  IRSendRev.h \n\u00a0\n#define BIT_LEN         0\n#define BIT_START_H     1\n#define BIT_START_L     2\n#define BIT_DATA_H      3\n#define BIT_DATA_L      4\n#define BIT_DATA_LEN    5\n#define BIT_DATA        6\n\u00a0\nconst int pinRecv = 2;              // ir receiver connect to D2\n\u00a0\nvoid setup()\n{\n    Serial.begin(115200);\n    IR.Init(pinRecv);\n    Serial.println( init over );\n}\n\u00a0\nunsigned char dta[20];\n\u00a0\nvoid loop()\n{\n    if(IR.IsDta())                  // get IR data\n    {\n        IR.Recv(dta);               // receive data to dta\n\u00a0\n        Serial.println( +------------------------------------------------------+ );\n        Serial.print( LEN =  );\n        Serial.println(dta[BIT_LEN]);\n        Serial.print( START_H:  );\n        Serial.print(dta[BIT_START_H]);\n        Serial.print( \\tSTART_L:  );\n        Serial.println(dta[BIT_START_L]);\n\u00a0\n        Serial.print( DATA_H:  );\n        Serial.print(dta[BIT_DATA_H]);\n        Serial.print( \\tDATA_L:  );\n        Serial.println(dta[BIT_DATA_L]);\n\u00a0\n        Serial.print( \\r\\nDATA_LEN =  );\n        Serial.println(dta[BIT_DATA_LEN]);\n\u00a0\n        Serial.print( DATA:  );\n        for(int i=0; i dta[BIT_DATA_LEN]; i++)\n        {\n            Serial.print( 0x );\n            Serial.print(dta[i+BIT_DATA], HEX);\n            Serial.print( \\t );\n        }\n        Serial.println();\n\u00a0\n        Serial.print( DATA:  );\n        for(int i=0; i dta[BIT_DATA_LEN]; i++)\n        {\n            Serial.print(dta[i+BIT_DATA], DEC);\n            Serial.print( \\t );\n        }\n        Serial.println();\n        Serial.println( +------------------------------------------------------+\\r\\n\\r\\n );\n    }\n}   \u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u5f00\u53d1\u677f\u3002  \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u7b49\u5f85\u6570\u636e\u8f93\u5165\u3002  \u4f7f\u7528\u7ea2\u5916\u9065\u63a7\u53d1\u9001\u6570\u636e \uff08\u6b64\u793a\u4f8b\u4f7f\u7528 MIDEA \u516c\u53f8\u7684\u7ea2\u5916\u9065\u63a7\u5668\u7684\u98ce\u6247\uff0c\u7136\u540e\u6309\u5f00/\u5173\u952e\uff09 \u3002  \u60a8\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u4fe1\u606f\u3002", 
            "title": "\u63a5\u6536\u5668"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#_6", 
            "text": "\u6253\u5f00  File\uff08\u6587\u4ef6\uff09 -  Examples\uff08\u793a\u4f8b\uff09 -   IRSendRev-  example  \u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f\uff0c\u6216\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u8f91\u9875\u9762\u4e0a\u3002   \u63cf\u8ff0 :\n\u5728\u8fd9\u4e2a\u6f14\u793a\u4e2d\u6211\u4eec\u5c06  IR\u53d1\u5c04  \u5f15\u811a\u8fde\u63a5\u5230  D3  \u7aef\u53e3\u3002 \u60a8\u53ef\u4ee5\u770b\u5230\u901a\u8fc7 Infrared Receiver \u63a5\u6536\u5230\u7684\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u5982\u4e0a\u8ff0\u793a\u4f8b\u3002 \u7136\u540e\u5c06\u63a5\u6536\u5230\u7684\u7ea2\u5916\u6570\u636e\u5199\u5165\u6b64\u793a\u4f8b\uff0c\u5e76\u4f7f\u7528 Infrared Emitter \u4e0a\u4f20\u5230\u7535\u8def\u677f\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u9065\u63a7\u5668\u53d1\u9001\u51fa\u76f8\u540c\u7684\u6570\u636e\u3002   Note \n\u6b64\u6f14\u793a\u5fc5\u987b\u5c06 **IR\u53d1\u5c04** \u5f15\u811a\u8fde\u63a5\u5230 **D3** \u7aef\u53e3\u3002  #include  IRSendRev.h \n\u00a0\n#define BIT_LEN         0\n#define BIT_START_H     1\n#define BIT_START_L     2\n#define BIT_DATA_H      3\n#define BIT_DATA_L      4\n#define BIT_DATA_LEN    5\n#define BIT_DATA        6\n\u00a0\nconst int ir_freq = 38;                 // 38k\n\u00a0\nunsigned char dtaSend[20];\n\u00a0\nvoid dtaInit()\n{\n    dtaSend[BIT_LEN]        = 11;          // all data that needs to be sent\n    dtaSend[BIT_START_H]    = 180;         // the logic high duration of  Start \n    dtaSend[BIT_START_L]    = 91;          // the logic low duration of  Start \n    dtaSend[BIT_DATA_H]     = 11;          // the logic  long  duration in the communication\n    dtaSend[BIT_DATA_L]     = 33;          // the logic  short  duration in the communication\n\u00a0\n    dtaSend[BIT_DATA_LEN]   = 6;           // Number of data which will sent. If the number is other, you should increase or reduce dtaSend[BIT_DATA+x].\n\u00a0\n    dtaSend[BIT_DATA+0]     = 128;           // data that will sent\n    dtaSend[BIT_DATA+1]     = 127;\n    dtaSend[BIT_DATA+2]     = 192;\n    dtaSend[BIT_DATA+3]     = 63;\n    dtaSend[BIT_DATA+4]     = 192;\n    dtaSend[BIT_DATA+5]     = 63;\n}\n\u00a0\nvoid setup()\n{\n    dtaInit();\n}\n\u00a0\nvoid loop()\n{\n    IR.Send(dtaSend, 38);\n\u00a0\n    delay(2000);\n}", 
            "title": "\u53d1\u5c04\u5668"
        }, 
        {
            "location": "/Grove-Infrared_Receiver/#_7", 
            "text": "Grove - Infrared Receiver eagle files  IR Send and Receiver Library  IR Receive Library for LinkIt ONE  TSOP282 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Relay/", 
            "text": "Grove-Relay\u6a21\u5757\u662f\u4e00\u4e2a\u6570\u5b57\u5e38\u5f00\u5f00\u5173\u3002 \u901a\u8fc7\u5b83\u4f60\u53ef\u4ee5\u4f7f\u7528\u8f83\u4f4e\u7684\u7535\u538b\u8fbe\u5230\u63a7\u5236\u9ad8\u7535\u538b\u7684\u76ee\u7684\uff0c\u5982\u63a7\u5236\u5668\u4e0a\u7684 5V \u7535\u538b\u5c31\u53ef\u4ee5\u3002 \u677f\u4e0a\u6709\u4e00\u4e2a LED\u6307\u793a\u706f\uff0c\u5f53\u53d7\u63a7\u7aef\u95ed\u5408\u65f6\uff0c\u5b83\u5c06\u4eae\u8d77\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\nV1.1\n\n\nV1.2\n\n\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u53d1\u5e03\u65e5\u671f\n\n\n2013\u5e741\u670827\u65e5\n\n\n2014\u5e746\u67089\u65e5\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n5V\n\n\n3.3V~5V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n60mA\n\n\n100mA\n\n\n\n\n\n\n\u4f7f\u7528\u5bff\u547d\n\n\n100,000\u5468\u671f\n\n\n100,000\u5468\u671f\n\n\n\n\n\n\n\u6700\u5927\u5f00\u5173\u7535\u538b\n\n\n250VAC/30VDC\n\n\n250VAC/30VDC\n\n\n\n\n\n\n\u6700\u5927\u5f00\u5173\u7535\u6d41\n\n\n5A\n\n\n5A\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4f7f\u7528 Arduino\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a Grove - Relay \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Relay\n\n\nGrove -  Button\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u5c06 Grove-Relay \u6a21\u5757\u8fde\u63a5\u5230 Grove-Base Shield \u7684 \nD4\n \u7aef\u53e3\u3002\n\n\n\u5c06 Grove-Button \u6a21\u5757\u8fde\u63a5\u5230 Grove-Base Shield \u7684 \nD2\n \u548c \nD3\n \u7aef\u53e3\u3002\n\n\n\u5c06 Grove-Base Shield \u63d2\u5165 Arduino\u3002\n\n\n\u901a\u8fc7 USB\u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002\n\n\n\n\n\n\n\nNote\n\n\n\u5982\u679c\u6211\u4eec\u6ca1\u6709base shield\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06 Grove-Relay \u548c Grove-Button \u8fde\u63a5\u5230 Arduino \u677f\u4e0a\u3002 \u8bf7\u6309\u7167\u4e0b\u9762\u7684\u8fde\u63a5\u3002\n\n\n\n\n\n\n\n\n\n\nGrove-Relay\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nVCC\n\n\n5V\n\n\n\n\n\n\nSIG\n\n\nD4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove-Button#1\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nVCC\n\n\n5V\n\n\n\n\n\n\nSIG\n\n\nD2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrove-Button#2\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nVCC\n\n\n5V\n\n\n\n\n\n\nSIG\n\n\nD3\n\n\n\n\n\n\n\n\nSoftware\n\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u6f14\u793a\uff0c\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Grove - Button \u63a7\u5236 Grove - Relay\u3002 \u5f53\u6309\u4e0b\u4e00\u4e2a\u6309\u94ae\u65f6\uff0c\u7ee7\u7535\u5668\u5c06\u5173\u95ed\u3002 \u5f53\u5176\u4ed6\u6309\u94ae\u88ab\u6309\u4e0b\u65f6\uff0c\u7ee7\u7535\u5668\u5c06\u6253\u5f00\u3002\n\n\n// Relay Control\n\nvoid setup()\n{\n  pinMode(2, INPUT);\n  pinMode(3, INPUT);\n  pinMode(4, OUTPUT);\n}\n\nvoid loop()\n{\n  if (digitalRead(2)==HIGH)\n  {\n    digitalWrite(4, HIGH);\n    delay(100);\n  }\n  if (digitalRead(3)==HIGH)\n  {\n    digitalWrite(4, LOW);\n  }\n}\n\n\n\n\n\u4f7f\u7528 TI LaunchPad\n\n\n\u63a7\u5236\u5176\u4ed6\u7535\u5b50\u8bbe\u5907\uff08\u4f7f\u7528\u7ee7\u7535\u5668\uff09\n\n\n\n\n\u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u4f7f\u7528 Grove-relay \u6a21\u5757\u6765\u63a7\u5236\u8f83\u5927\u7684\u8d1f\u8f7d\uff0c\u4f8b\u5982\u53f0\u706f\u3002 \u4f7f\u7528 3V\u7535\u538b\u4fe1\u53f7\u8ba9\u7ee7\u7535\u5668\u63a5\u901a\uff0c\u5141\u8bb8\u7535\u6d41\u6d41\u8fc7\u6240\u8fde\u63a5\u7684\u8bbe\u5907\u3002\n\n\n/*\nRelay\nThe basic Energia example.\nThis example code is in the public domain.\n*/\n\n#define RELAY_PIN 39\n\n// the setup routine runs once when you press reset:\nvoid setup() {\n         pinMode(RELAY_PIN, OUTPUT); // initialize the digital pin as an output.\n}\n\n// the loop routine runs over and over again forever:\nvoid loop() {\n         digitalWrite(RELAY_PIN, HIGH); // turn the relay on (HIGH is the voltage level)\n         delay(1000);   // wait for a second\n         digitalWrite(RELAY_PIN, LOW);   // turn the relay o by making the voltage LOW\n         delay(1000);   // wait for a second\n}\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - Relay\n\n\nGrove - Button\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n\n\n\u5c06 Grove-Button \u63d2\u5165\u5230 Grovepi + \u7684 \nD3\n \u7aef\u53e3\u3002\n\n\n\u5c06 Grove-Relay \u63d2\u5165 Grovepi + \u7684 \nD4\n \u7aef\u53e3\u3002\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\u6b64\u6f14\u793a\u5411\u60a8\u5c55\u793a\u5982\u4f55\u901a\u8fc7 Raspberry Pi \u4f7f\u7528 Grove - Relay\u3002\n\n# Raspberry Pi + Grove Switch + Grove Relay\n\nimport time\nimport grovepi\n# Connect the Grove Switch to digital port D3\n# SIG,NC,VCC,GND\n\nswitch = 3\n# Connect the Grove Relay to digital port D4\n# SIG,NC,VCC,GND\n\nrelay = 4\ngrovepi.pinMode(switch,\nINPUT\n)\ngrovepi.pinMode(relay,\nOUTPUT\n)\nwhile True:\n    try:\n        if grovepi.digitalRead(switch):\n            grovepi.digitalWrite(relay,1)\n        else:\n            grovepi.digitalWrite(relay,0)\n            time.sleep(.05)\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(relay,0)\n        break\n    except IOError:\n        print \nError\n\n\n\n\n\n\n\u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84\uff08\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84\u6765\u5b9a\uff09\n\ncd GrovePi/Software/Python/\n\n\n\n\u8fd0\u884c\u8fd9\u4e2a\u4ee3\u7801\n\nsudo python grove_switch_relay.py\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle]\n \nGrove - Relay Schematic and PCB in Eagle format\n\n\n[PDF]\n \nGrove - Relay PCB in PDF format\n\n\n[PDF]\n \nGrove - Relay Schematic in PDF format\n\n\n[Datasheet]\n \nHLS8-T73 Series Relay Datasheet", 
            "title": "Grove-Relay"
        }, 
        {
            "location": "/Grove-Relay/#_1", 
            "text": "\u53c2\u6570  V1.1  V1.2      \u4ea7\u54c1\u53d1\u5e03\u65e5\u671f  2013\u5e741\u670827\u65e5  2014\u5e746\u67089\u65e5    \u5de5\u4f5c\u7535\u538b  5V  3.3V~5V    \u5de5\u4f5c\u7535\u6d41  60mA  100mA    \u4f7f\u7528\u5bff\u547d  100,000\u5468\u671f  100,000\u5468\u671f    \u6700\u5927\u5f00\u5173\u7535\u538b  250VAC/30VDC  250VAC/30VDC    \u6700\u5927\u5f00\u5173\u7535\u6d41  5A  5A      Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Relay/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Relay/#_2", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Relay/#arduino", 
            "text": "", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Relay/#_3", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a Grove - Relay \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Relay  Grove -  Button  Base Shield            \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u5c06 Grove-Relay \u6a21\u5757\u8fde\u63a5\u5230 Grove-Base Shield \u7684  D4  \u7aef\u53e3\u3002  \u5c06 Grove-Button \u6a21\u5757\u8fde\u63a5\u5230 Grove-Base Shield \u7684  D2  \u548c  D3  \u7aef\u53e3\u3002  \u5c06 Grove-Base Shield \u63d2\u5165 Arduino\u3002  \u901a\u8fc7 USB\u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002    Note  \u5982\u679c\u6211\u4eec\u6ca1\u6709base shield\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06 Grove-Relay \u548c Grove-Button \u8fde\u63a5\u5230 Arduino \u677f\u4e0a\u3002 \u8bf7\u6309\u7167\u4e0b\u9762\u7684\u8fde\u63a5\u3002      Grove-Relay  Arduino      GND  GND    VCC  5V    SIG  D4        Grove-Button#1  Arduino      GND  GND    VCC  5V    SIG  D2        Grove-Button#2  Arduino      GND  GND    VCC  5V    SIG  D3", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Relay/#software", 
            "text": "\u4e0b\u9762\u662f\u4e00\u4e2a\u6f14\u793a\uff0c\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Grove - Button \u63a7\u5236 Grove - Relay\u3002 \u5f53\u6309\u4e0b\u4e00\u4e2a\u6309\u94ae\u65f6\uff0c\u7ee7\u7535\u5668\u5c06\u5173\u95ed\u3002 \u5f53\u5176\u4ed6\u6309\u94ae\u88ab\u6309\u4e0b\u65f6\uff0c\u7ee7\u7535\u5668\u5c06\u6253\u5f00\u3002  // Relay Control\n\nvoid setup()\n{\n  pinMode(2, INPUT);\n  pinMode(3, INPUT);\n  pinMode(4, OUTPUT);\n}\n\nvoid loop()\n{\n  if (digitalRead(2)==HIGH)\n  {\n    digitalWrite(4, HIGH);\n    delay(100);\n  }\n  if (digitalRead(3)==HIGH)\n  {\n    digitalWrite(4, LOW);\n  }\n}", 
            "title": "Software"
        }, 
        {
            "location": "/Grove-Relay/#ti-launchpad", 
            "text": "\u63a7\u5236\u5176\u4ed6\u7535\u5b50\u8bbe\u5907\uff08\u4f7f\u7528\u7ee7\u7535\u5668\uff09   \u6b64\u793a\u4f8b\u663e\u793a\u5982\u4f55\u4f7f\u7528 Grove-relay \u6a21\u5757\u6765\u63a7\u5236\u8f83\u5927\u7684\u8d1f\u8f7d\uff0c\u4f8b\u5982\u53f0\u706f\u3002 \u4f7f\u7528 3V\u7535\u538b\u4fe1\u53f7\u8ba9\u7ee7\u7535\u5668\u63a5\u901a\uff0c\u5141\u8bb8\u7535\u6d41\u6d41\u8fc7\u6240\u8fde\u63a5\u7684\u8bbe\u5907\u3002  /*\nRelay\nThe basic Energia example.\nThis example code is in the public domain.\n*/\n\n#define RELAY_PIN 39\n\n// the setup routine runs once when you press reset:\nvoid setup() {\n         pinMode(RELAY_PIN, OUTPUT); // initialize the digital pin as an output.\n}\n\n// the loop routine runs over and over again forever:\nvoid loop() {\n         digitalWrite(RELAY_PIN, HIGH); // turn the relay on (HIGH is the voltage level)\n         delay(1000);   // wait for a second\n         digitalWrite(RELAY_PIN, LOW);   // turn the relay o by making the voltage LOW\n         delay(1000);   // wait for a second\n}", 
            "title": "\u4f7f\u7528 TI LaunchPad"
        }, 
        {
            "location": "/Grove-Relay/#raspberry-pi", 
            "text": "", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-Relay/#_4", 
            "text": "\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a      Raspberry pi  Grove - Relay  Grove - Button           \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70  \u9a6c\u4e0a\u8d2d\u4e70      \u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa  \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002  \u5c06 Grove-Button \u63d2\u5165\u5230 Grovepi + \u7684  D3  \u7aef\u53e3\u3002  \u5c06 Grove-Relay \u63d2\u5165 Grovepi + \u7684  D4  \u7aef\u53e3\u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Relay/#_5", 
            "text": "\u6b64\u6f14\u793a\u5411\u60a8\u5c55\u793a\u5982\u4f55\u901a\u8fc7 Raspberry Pi \u4f7f\u7528 Grove - Relay\u3002 # Raspberry Pi + Grove Switch + Grove Relay\n\nimport time\nimport grovepi\n# Connect the Grove Switch to digital port D3\n# SIG,NC,VCC,GND\n\nswitch = 3\n# Connect the Grove Relay to digital port D4\n# SIG,NC,VCC,GND\n\nrelay = 4\ngrovepi.pinMode(switch, INPUT )\ngrovepi.pinMode(relay, OUTPUT )\nwhile True:\n    try:\n        if grovepi.digitalRead(switch):\n            grovepi.digitalWrite(relay,1)\n        else:\n            grovepi.digitalWrite(relay,0)\n            time.sleep(.05)\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(relay,0)\n        break\n    except IOError:\n        print  Error    \u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84\uff08\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84\u6765\u5b9a\uff09 cd GrovePi/Software/Python/  \u8fd0\u884c\u8fd9\u4e2a\u4ee3\u7801 sudo python grove_switch_relay.py", 
            "title": "\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Relay/#_6", 
            "text": "[Eagle]   Grove - Relay Schematic and PCB in Eagle format  [PDF]   Grove - Relay PCB in PDF format  [PDF]   Grove - Relay Schematic in PDF format  [Datasheet]   HLS8-T73 Series Relay Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Dry-Reed_Relay/", 
            "text": "Grove-Dry Reed Relay\n \u662f\u4e00\u4e2a\u7ee7\u7535\u5668\u6a21\u5757\uff0c\u901a\u8fc7\u7ebf\u5708\u4e2d\u7684\u7535\u6d41\u4f7f\u632f\u52a8\u7c27\u7247\u78c1\u5316\u3002 \u4e0e\u7535\u78c1\u7ee7\u7535\u5668\u76f8\u6bd4\uff0c\u5b83\u5177\u6709\u5b8c\u5168\u5bc6\u5c01\u7684\u89e6\u70b9\uff0c\u8fd9\u662f Grove - Dry-Reed Relay \u7684\u6700\u5927\u7279\u70b9\u3002 \u6b64\u5916\uff0c\u5176\u7ed3\u6784\u7b80\u5355\uff0c\u7d27\u51d1\uff0c\u901f\u5ea6\u5feb\uff0c\u4f7f\u7528\u5bff\u547d\u957f\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5fae\u7535\u5b50\u68c0\u6d4b\uff0c\u81ea\u52a8\u63a7\u5236\u7b49\u591a\u4e2a\u9886\u57df\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\nGrove \u63a5\u53e3\n\n\n\u9ad8\u901f\n\n\n\u7a33\u5b9a\u6027\u597d\n\n\n\u89e6\u70b9\u5bff\u547d\u957f\n\n\n\u89e6\u70b9\u5b8c\u5168\u5bc6\u5c01\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u6807\u51c6\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n\n\n4.8\n\n\n\n\n5.0\n\n\n\n\n5.2\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u7ebf\u5708\u7535\u963b\n\n\n\n\n225\n\n\n\n\n250\n\n\n\n\n275\n\n\n\n\n\u03a9\n\n\n\n\n\n\n\n\n\u63a5\u89e6\u7535\u538b\n\n\n\n\n3.75\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u5f00\u5173\u7535\u6d41\uff08\u6700\u5927\u503c\uff09\n\n\n\n\n0.5\n\n\n\n\nA\n\n\n\n\n\n\n\n\n\u5f00\u5173\u7535\u538b\uff08\u6700\u5927\u503c\uff09\n\n\n\n\n120 VAC/60VDC\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\u8d1f\u8f7d\u7535\u6d41\uff08\u6700\u5927\u503c\uff09\n\n\n\n\n1.0\n\n\n\n\nA\n\n\n\n\n\n\n\n\n\u52a8\u4f5c\u65f6\u95f4\uff08\u6700\u5927\u503c\uff09\n\n\n\n\n1.0\n\n\n\n\nmS\n\n\n\n\n\n\n\n\n\u91ca\u653e\u65f6\u95f4\uff08\u6700\u5927\u503c\uff09\n\n\n\n\n0.5\n\n\n\n\nmS\n\n\n\n\n\n\n\n\n\u673a\u68b0\u5bff\u547d\uff08\u65e0\u8d1f\u8f7d\uff09\n\n\n\n\n1\u00d7108 operations\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\u73af\u5883\u6e29\u5ea6\n\n\n\n\n-30\n\n\n\n\n/\n\n\n\n\n70\n\n\n\n\n\u02daC\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\u4f7f\u7528\u65b9\u5f0f\n\n\n\u4f7f\u7528 Arduino\n\n\nGrove - Dry-Reed Relay \u53ef\u652f\u6301\u9ad8\u8fbe 60VDC 1A \u7684\u8d1f\u8f7d\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u63a7\u5236\u7535\u963b\u8d1f\u8f7d\uff0c\n \n\u4f46\u4e0d\u9002\u7528\u4e8e\u6709\u4e9b\u8d1f\u8f7d\uff08\u5982 \u7535\u673a \uff09\n\u3002\n\n\n\u8fd9\u79cd Grove - Dry-Reed Relay \u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e\u666e\u901a\u7ee7\u7535\u5668\u76f8\u4f3c\u3002\n\n\n\n\n\u5c06\u7535\u706f\u8fde\u63a5\u5230 Grove - Dry-Reed Relay \u548c\u7535\u6e90\u3002\n\n\n\n\n\u5c06 Grove - Dry-Reed Relay \u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684\u7aef\u53e3 \nD2\n \uff0c\u5e76\u5c06\u5176\u8fde\u63a5\u5230 Arduino / Seeeduino\u3002\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u3002\n\n\n\n\n\n\n    int Relay = 2;\n\n    // the setup routine runs once when you press reset:\n    void setup() {                \n      // initialize the digital pin as an output.\n      pinMode(Relay, OUTPUT);     \n    }\n\n    // the loop routine runs over and over again forever:\n    void loop() {\n      digitalWrite(Relay, HIGH);   //the Relay close(HIGH is the voltage level)\n      delay(5000);               // wait for five seconds\n      digitalWrite(Relay, LOW);    //the Relay normally open by making the voltage LOW\n      delay(5000);               // wait for five seconds\n    }\n\n\n\n\n\n\n\u7535\u706f\u5c06\u53cd\u590d\u4eae\u8d77\u51e0\u79d2\u949f\uff0c\u7136\u540e\u5173\u95ed\u51e0\u79d2\u949f\u3002\u5bf9\u4e8e\u7279\u6b8a\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\u3002\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a raspberry pi \u548c\u4e00\u4e2a grovepi \u6216 grovepi + \u3002\n\n\n2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa\n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n\n\n3.\u8fde\u63a5\u65b9\u5f0f\n\n\n\n\n\u4f7f\u7528 grove \u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230 Grovepi \u7684 \nD4\n \u7aef\u53e3 \u3002\n\n\n\n\n4.\u6d4f\u89c8\u6f14\u793a\u76ee\u5f55\uff1a\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\u53c2\u8003\u4ee3\u7801\n\n    nano grove_relay.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Relay to digital port D4\n    # SIG,NC,VCC,GND\n    relay = 4\n\n    grovepi.pinMode(relay,\nOUTPUT\n)\n\n    while True:\n        try:\n            # switch on for 5 seconds\n            grovepi.digitalWrite(relay,1)\n            print \non\n\n            time.sleep(5)\n\n            # switch off for 5 seconds\n            grovepi.digitalWrite(relay,0)\n            print \noff\n\n            time.sleep(5)\n\n        except KeyboardInterrupt:\n            grovepi.digitalWrite(relay,0)\n            break\n        except IOError:\n            print \nError\n\n\n\n\n\n\n5.\u8fd0\u884c\u6f14\u793a\n\n    sudo python grove_relay.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - Dry-Reed Relay Eagle File\n\n\nDry-Reed Relay Datasheet", 
            "title": "Grove-Dry Reed Relay"
        }, 
        {
            "location": "/Grove-Dry-Reed_Relay/#_1", 
            "text": "Grove \u63a5\u53e3  \u9ad8\u901f  \u7a33\u5b9a\u6027\u597d  \u89e6\u70b9\u5bff\u547d\u957f  \u89e6\u70b9\u5b8c\u5168\u5bc6\u5c01    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Dry-Reed_Relay/#_2", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u6807\u51c6\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u7535\u538b  \n4.8  \n5.0  \n5.2  \nVDC    \n\u7ebf\u5708\u7535\u963b  \n225  \n250  \n275  \n\u03a9    \n\u63a5\u89e6\u7535\u538b  \n3.75  \nVDC    \n\u5f00\u5173\u7535\u6d41\uff08\u6700\u5927\u503c\uff09  \n0.5  \nA    \n\u5f00\u5173\u7535\u538b\uff08\u6700\u5927\u503c\uff09  \n120 VAC/60VDC  \n-    \n\u8d1f\u8f7d\u7535\u6d41\uff08\u6700\u5927\u503c\uff09  \n1.0  \nA    \n\u52a8\u4f5c\u65f6\u95f4\uff08\u6700\u5927\u503c\uff09  \n1.0  \nmS    \n\u91ca\u653e\u65f6\u95f4\uff08\u6700\u5927\u503c\uff09  \n0.5  \nmS    \n\u673a\u68b0\u5bff\u547d\uff08\u65e0\u8d1f\u8f7d\uff09  \n1\u00d7108 operations  \n-    \n\u73af\u5883\u6e29\u5ea6  \n-30  \n/  \n70  \n\u02daC", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Dry-Reed_Relay/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Dry-Reed_Relay/#_3", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u5f0f"
        }, 
        {
            "location": "/Grove-Dry-Reed_Relay/#arduino", 
            "text": "Grove - Dry-Reed Relay \u53ef\u652f\u6301\u9ad8\u8fbe 60VDC 1A \u7684\u8d1f\u8f7d\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u63a7\u5236\u7535\u963b\u8d1f\u8f7d\uff0c   \u4f46\u4e0d\u9002\u7528\u4e8e\u6709\u4e9b\u8d1f\u8f7d\uff08\u5982 \u7535\u673a \uff09 \u3002  \u8fd9\u79cd Grove - Dry-Reed Relay \u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e\u666e\u901a\u7ee7\u7535\u5668\u76f8\u4f3c\u3002   \u5c06\u7535\u706f\u8fde\u63a5\u5230 Grove - Dry-Reed Relay \u548c\u7535\u6e90\u3002   \u5c06 Grove - Dry-Reed Relay \u8fde\u63a5\u5230  Grove - Base Shield  \u7684\u7aef\u53e3  D2  \uff0c\u5e76\u5c06\u5176\u8fde\u63a5\u5230 Arduino / Seeeduino\u3002    \u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u3002        int Relay = 2;\n\n    // the setup routine runs once when you press reset:\n    void setup() {                \n      // initialize the digital pin as an output.\n      pinMode(Relay, OUTPUT);     \n    }\n\n    // the loop routine runs over and over again forever:\n    void loop() {\n      digitalWrite(Relay, HIGH);   //the Relay close(HIGH is the voltage level)\n      delay(5000);               // wait for five seconds\n      digitalWrite(Relay, LOW);    //the Relay normally open by making the voltage LOW\n      delay(5000);               // wait for five seconds\n    }   \u7535\u706f\u5c06\u53cd\u590d\u4eae\u8d77\u51e0\u79d2\u949f\uff0c\u7136\u540e\u5173\u95ed\u51e0\u79d2\u949f\u3002\u5bf9\u4e8e\u7279\u6b8a\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\u3002", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Dry-Reed_Relay/#raspberry-pi", 
            "text": "1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a raspberry pi \u548c\u4e00\u4e2a grovepi \u6216 grovepi + \u3002  2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002  3.\u8fde\u63a5\u65b9\u5f0f   \u4f7f\u7528 grove \u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230 Grovepi \u7684  D4  \u7aef\u53e3 \u3002   4.\u6d4f\u89c8\u6f14\u793a\u76ee\u5f55\uff1a     cd yourpath/GrovePi/Software/Python/   \u53c2\u8003\u4ee3\u7801     nano grove_relay.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Relay to digital port D4\n    # SIG,NC,VCC,GND\n    relay = 4\n\n    grovepi.pinMode(relay, OUTPUT )\n\n    while True:\n        try:\n            # switch on for 5 seconds\n            grovepi.digitalWrite(relay,1)\n            print  on \n            time.sleep(5)\n\n            # switch off for 5 seconds\n            grovepi.digitalWrite(relay,0)\n            print  off \n            time.sleep(5)\n\n        except KeyboardInterrupt:\n            grovepi.digitalWrite(relay,0)\n            break\n        except IOError:\n            print  Error    5.\u8fd0\u884c\u6f14\u793a     sudo python grove_relay.py", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-Dry-Reed_Relay/#_4", 
            "text": "Grove - Dry-Reed Relay Eagle File  Dry-Reed Relay Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Solid_State_Relay/", 
            "text": "Grove \u2013 Solid State Relay \u662f\u5177\u6709\u7ee7\u7535\u5668\u7279\u6027\u7684\u975e\u63a5\u89e6\u5f0f\u7535\u5b50\u5f00\u5173\u6a21\u5757\u3002 \u5b83\u57fa\u4e8e S208T02 \u8bbe\u8ba1\uff0c\u6700\u5927\u8f93\u51fa\u4e3a 250VAC/4A\uff0c\u5f00\u5173\u901f\u5ea6\u5c0f\u4e8e 10ms\u3002 \u8be5\u6a21\u5757\u914d\u5907\u4e86\u4e19\u70ef\u9178\u57fa\u5e95\u548c 3D \u6253\u5370\u7684\u7edd\u7f18\u62a4\u7f69\u6765\u4fdd\u8bc1\u7528\u6237\u7684\u5b89\u5168\u3002\u7ee7\u7535\u5668\u63a5\u901a\u65f6\u6709 LED \u6307\u793a\u3002 \u53ef\u5e7f\u6cdb\u5e94\u7528\u4e8e\u8ba1\u7b97\u673a\u5916\u56f4\u63a5\u53e3\uff0c\u6e29\u5ea6/\u901f\u5ea6/\u8c03\u5149\uff0c\u4f3a\u670d\u63a7\u5236\uff0c\u77f3\u6cb9\u5316\u5de5\uff0c\u533b\u7597\u4eea\u5668\uff0c\u91d1\u878d\u8bbe\u5907\uff0c\u7164\u70ad\uff0c\u4eea\u8868\uff0c\u4ea4\u901a\u4fe1\u53f7\u706f\u7b49\u5404\u4e2a\u9886\u57df\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n3D \u6253\u5370\u7684\u7edd\u7f18\u4fdd\u62a4\u62a4\u7f69\n\n\n\u517c\u5bb9 3.3V \u548c 5V \u63a7\u5236\u7535\u5e73\n\n\n\u4f4e\u5f00\u5173\u5ef6\u8fdf\uff08\u226410ms\uff09\n\n\nLED \u6307\u793a\u706f\n\n\n\u6709\u6563\u70ed\u5668\u63d0\u4f9b\u66f4\u597d\u7684\u7a33\u5b9a\u6027\n\n\n\u4e19\u70ef\u9178\u57fa\u548c\u7edd\u7f18\u7eb8\u589e\u52a0\u5b89\u5168\u6027\u80fd\n\n\n\u517c\u5bb9 Grove\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u9700\u8981\u4f4e\u5f00\u5173\u5ef6\u8fdf\u7684\u64cd\u4f5c\u573a\u5408\uff0c\u4f8b\u5982\u821e\u53f0\u706f\u5149\u63a7\u5236\n\n\n\u9700\u8981\u9ad8\u7a33\u5b9a\u6027\u7684\u88c5\u7f6e\uff0c\u4f8b\u5982\u533b\u7597\u5668\u68b0\uff0c\u4ea4\u901a\u4fe1\u53f7\u706f\n\n\n\u9700\u8981\u9632\u7206\uff0c\u9632\u8150\uff0c\u9632\u6f6e\u7684\u60c5\u51b5\u3002 \u5982\u7164\u70ad\uff0c\u5316\u5de5\u7b49\u884c\u4e1a\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\n\n\n3.0\n\n\n3.3\n\n\n5.0\n\n\nVDC\n\n\n\n\n\n\n\u8f93\u5165\u7535\u6d41\n\n\n16\n\n\n20\n\n\n50\n\n\nmA\n\n\n\n\n\n\n\u8f93\u51fa\u7535\u538b\n\n\n-\n\n\n220\n\n\n250\n\n\nVAC\n\n\n\n\n\n\n\u8f93\u51fa\u7535\u6d41\n\n\n--\n\n\n--\n\n\n4.0\n\n\nA\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u7387\n\n\n45\n\n\n50\n\n\n65\n\n\nHz\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-25\n\n\n25\n\n\n85\n\n\n\u2103\n\n\n\n\n\n\n\u95ed\u5408\u65f6\u95f4\n\n\n--\n\n\n10\n\n\n--\n\n\nms\n\n\n\n\n\n\n\u65ad\u5f00\u65f6\u95f4\n\n\n--\n\n\n10\n\n\n--\n\n\nms\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n-\n\n\n44x44x32\n\n\n-\n\n\nmm\n\n\n\n\n\n\n\u51c0\u91cd\n\n\n-\n\n\n25.5\n\n\n-\n\n\ng\n\n\n\n\n\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n\n\n\n\nCautions\n\n\n\n\n\u5982\u679c\u8f93\u51fa\u7535\u538b\u9ad8\u4e8e 36V\uff0c\u5219\u5728\u8f6c\u52a8\u87ba\u4e1d\u4e4b\u524d\uff0c\u9700\u8981\u786e\u4fdd\u6a21\u5757\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u3002\n\n\n\u6563\u70ed\u5668\u53ef\u80fd\u5904\u4e8e\u975e\u5e38\u9ad8\u7684\u6e29\u5ea6\uff0c\u4f7f\u7528\u65f6\u8bf7\u52ff\u89e6\u6478\u3002\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u4f7f\u7528 Arduino\n\n\nGrove - Solid State Relay \u6709\u5404\u79cd\u5e94\u7528\u3002 \u8fd9\u91cc\u6211\u4eec\u8be6\u7ec6\u8bf4\u660e\u5982\u4f55\u4f7f\u7528\u5b83\u6765\u63a7\u5236\u706f\u6ce1\u3002\n\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\u6309\u5982\u4e0b\u6240\u8ff0\u8fde\u63a5 Arduino:\n\n\n\n\n\u4f7f\u7528 Grove 4 pin \u7535\u7f06\u628a Grove - Solid State Relay \u8fde\u63a5\u5230 Grove-Base Shield \u7684 \nD13\n \u7aef\u53e3\u3002\n\n\n\u5c06 Grove-Base Shield \u63d2\u5728 Arduino \u4e0a\uff0c\u5e76\u901a\u8fc7 USB \u7535\u7f06\u5c06 Arduino \u8fde\u63a5\u5230\u7535\u8111\u3002\n\n\n\u5c06\u706f\u6ce1\u8fde\u63a5\u5230 Grove - Solid State Relay \u7684 \nOUTPUT\n\u3002\n\n\n\n\n\n\n\u60a8\u9700\u8981\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u3002 \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u3002\n\n\n/*\n  Grove - Solid State Relay \u793a\u4f8b\u4ee3\u7801\n  ssr \u4f1a\u6253\u5f00 5 \u79d2\u7136\u540e\u5173\u95ed 5 \u79d2\uff0c\u5e76\u5faa\u73af\u3002\n  http://www.seeedstudio.com\n*/\n\nint ssrControlPin = 13;\nvoid setup() {\n    // \u521d\u59cb\u5316\u6570\u5b57\u5f15\u811a\u4f5c\u4e3a\u8f93\u51fa\n    pinMode(ssrControlPin, OUTPUT);\n}\n\nvoid loop() {\n    digitalWrite(ssrControlPin, HIGH);      // \u628a ssr \u6253\u5f00\n    delay(5000);                            // \u7b49\u5f85 5 \u79d2\n    digitalWrite(ssrControlPin, LOW);       // \u628a ssr \u5173\u95ed\n    delay(5000);                            // \u7b49\u5f85 5 \u79d2\n}\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u540e, \u4f60\u4f1a\u770b\u5230\u706f\u6ce1\u5148\u4eae 5 \u79d2\u7136\u540e\u7184\u706d 5 \u79d2\uff0c\u5e76\u5faa\u73af\u4e0b\u53bb\u3002\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n1 \u4f60\u5e94\u8be5\u6709\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.\n\n2 \u60a8\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u6309\u7167 \n\u8fd9\u91cc\n \u914d\u7f6e\u3002\n\n3 \u8fde\u63a5 - \u4f7f\u7528 Grove \u7535\u7f06\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230 Grovepi \u7684\u63d2\u5ea7 D4\u3002\n\n4 \u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55:  \n\n\ncd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\n\u770b\u4ee3\u7801\n\n\n\n\n   nano grove_solid_state_relay.py   # \nCtrl+x\n to exit #\n\n\n\n\nimport time\nimport grovepi\n\n# Connect the Grove Solid State Relay to digital port D4\n# CTR,NC,VCC,GND\nrelay = 4\n\ngrovepi.pinMode(relay,\nOUTPUT\n)\n\nwhile True:\n    try:\n        # switch on for 5 seconds\n        grovepi.digitalWrite(relay,1)\n        print \non\n\n        time.sleep(5)\n\n        # switch off for 5 seconds\n        grovepi.digitalWrite(relay,0)\n        print \noff\n\n        time.sleep(5)\n\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(relay,0)\n        break\n    except IOError:\n        print \nError\n\n\n\n\n\n5 \u8fd0\u884c\u6f14\u793a\u3002  \n\n\n   sudo python grove_solid_state_relay.py\n\n\n\n\n\u6d4b\u8bd5\u7ed3\u679c\n\n\n\n\n1.\u5b9e\u9a8c\u76ee\u7684\n\n- Grove \u2013 Solid State Relay(S208T02) \u7684\u6563\u70ed\u6027\u80fd\u3002\n- Grove \u2013 SSR \u7684\u6781\u9650\u8d1f\u8f7d\u7535\u6d41\u3002\n- \u63d0\u9ad8\u6781\u9650\u8f7d\u8377\u7535\u6d41\u7684\u63aa\u65bd\u3002\n\n\n2.\u5b9e\u9a8c\u539f\u7406\n\n\n\u901a\u8fc7\u8bb0\u5f55\u4e0d\u540c\u7535\u6d41\u548c\u4e0d\u540c\u65f6\u95f4\u70b9\u7684 SSR \u82af\u7247\u6e29\u5ea6\uff0c\u5206\u6790\u6570\u636e\u5e76\u5f97\u51fa\u7ed3\u8bba\u3002\n\n\n\u56fe 1 \u662f S208T02 \u6570\u636e\u8868\u7684\u622a\u56fe\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u4e0d\u540c\u6563\u70ed\u7247\u548c\u4e0d\u540c\u6e29\u5ea6\u4e0b\uff0cSSR \u7684\u7535\u6d41\u4e0d\u540c\u3002\n\n\n\n\n\u8fd9\u91cc\u9700\u8981\u4e00\u4e2a\u6e29\u5ea6\u4f20\u611f\u5668\u6765\u83b7\u5f97\u82af\u7247\u7684\u6e29\u5ea6\u3002 \u6211\u4f7f\u7528 DS18B20\uff0c\u5176\u68c0\u6d4b\u8303\u56f4\u4e3a -25-125\u2103\uff0c\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\u3002\n\n\n\u56fe 2 \u663e\u793a\u4e86\u5b9e\u9a8c\u8bbe\u5907\u548c\u5b89\u88c5\u65b9\u6848\uff0c\u5c06\u6e29\u5ea6\u4f20\u611f\u5668\u8fde\u63a5\u5230\u6563\u70ed\u5668\u7684\u53f3\u4fa7\uff0c\u4f7f18b20\u68c0\u6d4b\u5230\u7684\u6e29\u5ea6\u5c3d\u53ef\u80fd\u63a5\u8fd1\u6563\u70ed\u5668\u6e29\u5ea6\uff0c\u4f20\u611f\u5668\u548c\u6563\u70ed\u5668\u4e4b\u95f4\u4f7f\u7528\u70ed\u5851\u6027\u5851\u6599\u3002 \u6563\u70ed\u7247\u548cSSR\u4e4b\u95f4\u4f7f\u7528\u70ed\u5851\u6027\u5851\u6599\u6d82\u5c42\u3002 \u56e0\u6b64\uff0c18b20\u7684\u6e29\u5ea6\u7b49\u4e8eSSR\u7684\u6e29\u5ea6\u3002\n\n\n\n\n3.\u5b9e\u9a8c\u6570\u636e\n\n\n\n\n\n\n\n\n\u7535\u6d41\n\n\n1 \u5206\u949f\n\n\n5 \u5206\u949f\n\n\n10 \u5206\u949f\n\n\n20 \u5206\u949f\n\n\n\u7a33\u5b9a\u65f6\u95f4\n\n\n\n\n\n\n\n\n\n\n0.5A\n\n\n31.40\n\n\n33.75\n\n\n34.75\n\n\n35.00\n\n\n15  \u5206\u949f\n\n\n\n\n\n\n1A\n\n\n31.8\n\n\n36.75\n\n\n39.6\n\n\n40.56\n\n\n18 \u5206\u949f\n\n\n\n\n\n\n2A\n\n\n34.5\n\n\n46.6\n\n\n48.88\n\n\n51.13\n\n\n20 \u5206\u949f\n\n\n\n\n\n\n3A\n\n\n35.56\n\n\n52.81\n\n\n58.88\n\n\n60.06\n\n\n17 \u5206\u949f\n\n\n\n\n\n\n4A\n\n\n38.00\n\n\n57.88\n\n\n63.88\n\n\n67.00\n\n\n19 \u5206\u949f\n\n\n\n\n\n\n5A\n\n\n44.00\n\n\n66.00\n\n\n73.12\n\n\n75.37\n\n\n19 \u5206\u949f\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u8868\u4e2d\u6e29\u5ea6\u5355\u4f4d\u4e3a\u2103\n\n\n\u5ba4\u6e29\u4e3a28\u2103\n\n\n\n\n\n\n4.\u6269\u5c55\u5b9e\u9a8c\n\n\n\u4e3a\u4e86\u8bc1\u660e\u63d0\u9ad8\u6563\u70ed\u5668\u7684\u6563\u70ed\u6027\u80fd\u5c06\u63d0\u9ad8SSR\u9650\u5236\u5de5\u4f5c\u7535\u6d41\uff0c\u6211\u505a\u4e86\u4e00\u4e2a\u6269\u5c55\u5b9e\u9a8c\u3002\n\n\n\u56e0\u4e3a\u6211\u624b\u4e0a\u6ca1\u6709\u66f4\u5927\u7684\u6563\u70ed\u5668\uff0c\u6240\u4ee5\u6211\u5728SSR\u4e0a\u5b89\u88c5\u4e86\u4e00\u4e2a\u98ce\u6247\uff08\u4ece\u6211\u7535\u8111\u7684 CPU \u4e0a\u62ff\u4e0b\u6765\u7684\uff09\u3002 \u5982\u56fe 3 \u6240\u793a\u3002\n\n\n\n\n\u6211\u53ea\u6d4b\u8bd5\u4e0d\u540c\u5de5\u4f5c\u7535\u6d41\u7684\u7a33\u5b9a\u6e29\u5ea6\uff0c\u5982\u8868 2 \u6240\u793a\u3002\n\n\n\n\n\n\n\n\n-\n\n\n6.0A\n\n\n6.5A\n\n\n7.0A\n\n\n7.5A\n\n\n\n\n\n\n\n\n\n\n\u7a33\u5b9a\u6e29\u5ea6\n\n\n54.44\u2103\n\n\n57.63\u2103\n\n\n60.06\u2103\n\n\n62.38\u2103\n\n\n\n\n\n\n\n\n5.\u7ed3\u8bba\n\n\n\u4ece\u4e0a\u8ff0\u5b9e\u9a8c\u7ed3\u679c\u53ef\u4ee5\u5f97\u51fa\u4ee5\u4e0b\u7ed3\u8bba\uff1a\n\n\n\n\n\n\n\u5f53\u7535\u6d41\u56fa\u5b9a\u65f6\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6e29\u5ea6\u5c06\u7a33\u5b9a\u5728\u4e00\u5b9a\u503c\u3002 \u8be5\u503c\u4e0e\u5f53\u524d\u72b6\u6001\u76f8\u5173\uff0c\u7535\u6d41\u589e\u52a0\uff0c\u7a33\u5b9a\u540e\u7684\u6e29\u5ea6\u4e5f\u589e\u52a0\u3002 \u57282A\u7535\u6d41\u65f6\uff0c\u6e29\u5ea6\u7a33\u5b9a\u5728 50\u2103 \u4ee5\u4e0a\uff0c\u6240\u4ee5\u4e0d\u8981\u5728 SSR \u5de5\u4f5c\u65f6\u78b0\u5b83\u3002\n\n\n\n\n\n\n\u7ed3\u5408\u56fe 1 \u548c\u6211\u4eec\u7684\u6570\u636e\uff0c\u6211\u8ba4\u4e3a Grove-SSR \u7684\u6700\u5927\u8d1f\u8f7d\u7535\u6d41\u4e3a 4A\u3002\n\n\n\n\n\n\n\u5982\u679c\u8d1f\u8f7d\u7535\u6d41\u5927\u4e8e 5A\uff0c\u5982 7A\uff0c\u4f60\u5e94\u8be5\u5b89\u88c5\u5176\u4ed6\u7684\u964d\u6e29\u8bbe\u5907\uff0c\u4f46\u5e76\u4e0d\u63a8\u8350\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\nGrove - Solid State Relay Eagle File\n\n\n[\u4ee3\u7801]\nGrove - Solid State Relay Demo Code\n\n\n[\u6570\u636e\u624b\u518c]\nS208T02 Datasheet\n\n\n[PDF\u6587\u4ef6]\nGrove - Solid State Relay in PDF\n\n\n[\u5b9e\u9a8c\u62a5\u544a]\nGrove - Solid State Relay Test Report", 
            "title": "Grove-Solid State Relay"
        }, 
        {
            "location": "/Grove-Solid_State_Relay/#_1", 
            "text": "3D \u6253\u5370\u7684\u7edd\u7f18\u4fdd\u62a4\u62a4\u7f69  \u517c\u5bb9 3.3V \u548c 5V \u63a7\u5236\u7535\u5e73  \u4f4e\u5f00\u5173\u5ef6\u8fdf\uff08\u226410ms\uff09  LED \u6307\u793a\u706f  \u6709\u6563\u70ed\u5668\u63d0\u4f9b\u66f4\u597d\u7684\u7a33\u5b9a\u6027  \u4e19\u70ef\u9178\u57fa\u548c\u7edd\u7f18\u7eb8\u589e\u52a0\u5b89\u5168\u6027\u80fd  \u517c\u5bb9 Grove    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Solid_State_Relay/#_2", 
            "text": "\u9700\u8981\u4f4e\u5f00\u5173\u5ef6\u8fdf\u7684\u64cd\u4f5c\u573a\u5408\uff0c\u4f8b\u5982\u821e\u53f0\u706f\u5149\u63a7\u5236  \u9700\u8981\u9ad8\u7a33\u5b9a\u6027\u7684\u88c5\u7f6e\uff0c\u4f8b\u5982\u533b\u7597\u5668\u68b0\uff0c\u4ea4\u901a\u4fe1\u53f7\u706f  \u9700\u8981\u9632\u7206\uff0c\u9632\u8150\uff0c\u9632\u6f6e\u7684\u60c5\u51b5\u3002 \u5982\u7164\u70ad\uff0c\u5316\u5de5\u7b49\u884c\u4e1a\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Solid_State_Relay/#_3", 
            "text": "\u9879\u76ee  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u8f93\u5165\u7535\u538b  3.0  3.3  5.0  VDC    \u8f93\u5165\u7535\u6d41  16  20  50  mA    \u8f93\u51fa\u7535\u538b  -  220  250  VAC    \u8f93\u51fa\u7535\u6d41  --  --  4.0  A    \u5de5\u4f5c\u9891\u7387  45  50  65  Hz    \u5de5\u4f5c\u6e29\u5ea6  -25  25  85  \u2103    \u95ed\u5408\u65f6\u95f4  --  10  --  ms    \u65ad\u5f00\u65f6\u95f4  --  10  --  ms    \u5c3a\u5bf8  -  44x44x32  -  mm    \u51c0\u91cd  -  25.5  -  g", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Solid_State_Relay/#_4", 
            "text": "Cautions   \u5982\u679c\u8f93\u51fa\u7535\u538b\u9ad8\u4e8e 36V\uff0c\u5219\u5728\u8f6c\u52a8\u87ba\u4e1d\u4e4b\u524d\uff0c\u9700\u8981\u786e\u4fdd\u6a21\u5757\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u3002  \u6563\u70ed\u5668\u53ef\u80fd\u5904\u4e8e\u975e\u5e38\u9ad8\u7684\u6e29\u5ea6\uff0c\u4f7f\u7528\u65f6\u8bf7\u52ff\u89e6\u6478\u3002", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Grove-Solid_State_Relay/#_5", 
            "text": "\u4f7f\u7528 Arduino  Grove - Solid State Relay \u6709\u5404\u79cd\u5e94\u7528\u3002 \u8fd9\u91cc\u6211\u4eec\u8be6\u7ec6\u8bf4\u660e\u5982\u4f55\u4f7f\u7528\u5b83\u6765\u63a7\u5236\u706f\u6ce1\u3002  \u9996\u5148\uff0c\u4f60\u9700\u8981\u6309\u5982\u4e0b\u6240\u8ff0\u8fde\u63a5 Arduino:   \u4f7f\u7528 Grove 4 pin \u7535\u7f06\u628a Grove - Solid State Relay \u8fde\u63a5\u5230 Grove-Base Shield \u7684  D13  \u7aef\u53e3\u3002  \u5c06 Grove-Base Shield \u63d2\u5728 Arduino \u4e0a\uff0c\u5e76\u901a\u8fc7 USB \u7535\u7f06\u5c06 Arduino \u8fde\u63a5\u5230\u7535\u8111\u3002  \u5c06\u706f\u6ce1\u8fde\u63a5\u5230 Grove - Solid State Relay \u7684  OUTPUT \u3002    \u60a8\u9700\u8981\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u3002 \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u3002  /*\n  Grove - Solid State Relay \u793a\u4f8b\u4ee3\u7801\n  ssr \u4f1a\u6253\u5f00 5 \u79d2\u7136\u540e\u5173\u95ed 5 \u79d2\uff0c\u5e76\u5faa\u73af\u3002\n  http://www.seeedstudio.com\n*/\n\nint ssrControlPin = 13;\nvoid setup() {\n    // \u521d\u59cb\u5316\u6570\u5b57\u5f15\u811a\u4f5c\u4e3a\u8f93\u51fa\n    pinMode(ssrControlPin, OUTPUT);\n}\n\nvoid loop() {\n    digitalWrite(ssrControlPin, HIGH);      // \u628a ssr \u6253\u5f00\n    delay(5000);                            // \u7b49\u5f85 5 \u79d2\n    digitalWrite(ssrControlPin, LOW);       // \u628a ssr \u5173\u95ed\n    delay(5000);                            // \u7b49\u5f85 5 \u79d2\n}  \u4e0a\u4f20\u4ee3\u7801\u540e, \u4f60\u4f1a\u770b\u5230\u706f\u6ce1\u5148\u4eae 5 \u79d2\u7136\u540e\u7184\u706d 5 \u79d2\uff0c\u5e76\u5faa\u73af\u4e0b\u53bb\u3002  \u4f7f\u7528 Raspberry Pi  1 \u4f60\u5e94\u8be5\u6709\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+. \n2 \u60a8\u5e94\u8be5\u5df2\u7ecf\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u6309\u7167  \u8fd9\u91cc  \u914d\u7f6e\u3002 \n3 \u8fde\u63a5 - \u4f7f\u7528 Grove \u7535\u7f06\u5c06\u4f20\u611f\u5668\u8fde\u63a5\u5230 Grovepi \u7684\u63d2\u5ea7 D4\u3002 \n4 \u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55:    cd yourpath/GrovePi/Software/Python/   \u770b\u4ee3\u7801      nano grove_solid_state_relay.py   #  Ctrl+x  to exit #  import time\nimport grovepi\n\n# Connect the Grove Solid State Relay to digital port D4\n# CTR,NC,VCC,GND\nrelay = 4\n\ngrovepi.pinMode(relay, OUTPUT )\n\nwhile True:\n    try:\n        # switch on for 5 seconds\n        grovepi.digitalWrite(relay,1)\n        print  on \n        time.sleep(5)\n\n        # switch off for 5 seconds\n        grovepi.digitalWrite(relay,0)\n        print  off \n        time.sleep(5)\n\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(relay,0)\n        break\n    except IOError:\n        print  Error   5 \u8fd0\u884c\u6f14\u793a\u3002       sudo python grove_solid_state_relay.py", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Solid_State_Relay/#_6", 
            "text": "1.\u5b9e\u9a8c\u76ee\u7684 \n- Grove \u2013 Solid State Relay(S208T02) \u7684\u6563\u70ed\u6027\u80fd\u3002\n- Grove \u2013 SSR \u7684\u6781\u9650\u8d1f\u8f7d\u7535\u6d41\u3002\n- \u63d0\u9ad8\u6781\u9650\u8f7d\u8377\u7535\u6d41\u7684\u63aa\u65bd\u3002  2.\u5b9e\u9a8c\u539f\u7406  \u901a\u8fc7\u8bb0\u5f55\u4e0d\u540c\u7535\u6d41\u548c\u4e0d\u540c\u65f6\u95f4\u70b9\u7684 SSR \u82af\u7247\u6e29\u5ea6\uff0c\u5206\u6790\u6570\u636e\u5e76\u5f97\u51fa\u7ed3\u8bba\u3002  \u56fe 1 \u662f S208T02 \u6570\u636e\u8868\u7684\u622a\u56fe\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u4e0d\u540c\u6563\u70ed\u7247\u548c\u4e0d\u540c\u6e29\u5ea6\u4e0b\uff0cSSR \u7684\u7535\u6d41\u4e0d\u540c\u3002   \u8fd9\u91cc\u9700\u8981\u4e00\u4e2a\u6e29\u5ea6\u4f20\u611f\u5668\u6765\u83b7\u5f97\u82af\u7247\u7684\u6e29\u5ea6\u3002 \u6211\u4f7f\u7528 DS18B20\uff0c\u5176\u68c0\u6d4b\u8303\u56f4\u4e3a -25-125\u2103\uff0c\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\u3002  \u56fe 2 \u663e\u793a\u4e86\u5b9e\u9a8c\u8bbe\u5907\u548c\u5b89\u88c5\u65b9\u6848\uff0c\u5c06\u6e29\u5ea6\u4f20\u611f\u5668\u8fde\u63a5\u5230\u6563\u70ed\u5668\u7684\u53f3\u4fa7\uff0c\u4f7f18b20\u68c0\u6d4b\u5230\u7684\u6e29\u5ea6\u5c3d\u53ef\u80fd\u63a5\u8fd1\u6563\u70ed\u5668\u6e29\u5ea6\uff0c\u4f20\u611f\u5668\u548c\u6563\u70ed\u5668\u4e4b\u95f4\u4f7f\u7528\u70ed\u5851\u6027\u5851\u6599\u3002 \u6563\u70ed\u7247\u548cSSR\u4e4b\u95f4\u4f7f\u7528\u70ed\u5851\u6027\u5851\u6599\u6d82\u5c42\u3002 \u56e0\u6b64\uff0c18b20\u7684\u6e29\u5ea6\u7b49\u4e8eSSR\u7684\u6e29\u5ea6\u3002   3.\u5b9e\u9a8c\u6570\u636e     \u7535\u6d41  1 \u5206\u949f  5 \u5206\u949f  10 \u5206\u949f  20 \u5206\u949f  \u7a33\u5b9a\u65f6\u95f4      0.5A  31.40  33.75  34.75  35.00  15  \u5206\u949f    1A  31.8  36.75  39.6  40.56  18 \u5206\u949f    2A  34.5  46.6  48.88  51.13  20 \u5206\u949f    3A  35.56  52.81  58.88  60.06  17 \u5206\u949f    4A  38.00  57.88  63.88  67.00  19 \u5206\u949f    5A  44.00  66.00  73.12  75.37  19 \u5206\u949f      Note   \u8868\u4e2d\u6e29\u5ea6\u5355\u4f4d\u4e3a\u2103  \u5ba4\u6e29\u4e3a28\u2103    4.\u6269\u5c55\u5b9e\u9a8c  \u4e3a\u4e86\u8bc1\u660e\u63d0\u9ad8\u6563\u70ed\u5668\u7684\u6563\u70ed\u6027\u80fd\u5c06\u63d0\u9ad8SSR\u9650\u5236\u5de5\u4f5c\u7535\u6d41\uff0c\u6211\u505a\u4e86\u4e00\u4e2a\u6269\u5c55\u5b9e\u9a8c\u3002  \u56e0\u4e3a\u6211\u624b\u4e0a\u6ca1\u6709\u66f4\u5927\u7684\u6563\u70ed\u5668\uff0c\u6240\u4ee5\u6211\u5728SSR\u4e0a\u5b89\u88c5\u4e86\u4e00\u4e2a\u98ce\u6247\uff08\u4ece\u6211\u7535\u8111\u7684 CPU \u4e0a\u62ff\u4e0b\u6765\u7684\uff09\u3002 \u5982\u56fe 3 \u6240\u793a\u3002   \u6211\u53ea\u6d4b\u8bd5\u4e0d\u540c\u5de5\u4f5c\u7535\u6d41\u7684\u7a33\u5b9a\u6e29\u5ea6\uff0c\u5982\u8868 2 \u6240\u793a\u3002     -  6.0A  6.5A  7.0A  7.5A      \u7a33\u5b9a\u6e29\u5ea6  54.44\u2103  57.63\u2103  60.06\u2103  62.38\u2103     5.\u7ed3\u8bba  \u4ece\u4e0a\u8ff0\u5b9e\u9a8c\u7ed3\u679c\u53ef\u4ee5\u5f97\u51fa\u4ee5\u4e0b\u7ed3\u8bba\uff1a    \u5f53\u7535\u6d41\u56fa\u5b9a\u65f6\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6e29\u5ea6\u5c06\u7a33\u5b9a\u5728\u4e00\u5b9a\u503c\u3002 \u8be5\u503c\u4e0e\u5f53\u524d\u72b6\u6001\u76f8\u5173\uff0c\u7535\u6d41\u589e\u52a0\uff0c\u7a33\u5b9a\u540e\u7684\u6e29\u5ea6\u4e5f\u589e\u52a0\u3002 \u57282A\u7535\u6d41\u65f6\uff0c\u6e29\u5ea6\u7a33\u5b9a\u5728 50\u2103 \u4ee5\u4e0a\uff0c\u6240\u4ee5\u4e0d\u8981\u5728 SSR \u5de5\u4f5c\u65f6\u78b0\u5b83\u3002    \u7ed3\u5408\u56fe 1 \u548c\u6211\u4eec\u7684\u6570\u636e\uff0c\u6211\u8ba4\u4e3a Grove-SSR \u7684\u6700\u5927\u8d1f\u8f7d\u7535\u6d41\u4e3a 4A\u3002    \u5982\u679c\u8d1f\u8f7d\u7535\u6d41\u5927\u4e8e 5A\uff0c\u5982 7A\uff0c\u4f60\u5e94\u8be5\u5b89\u88c5\u5176\u4ed6\u7684\u964d\u6e29\u8bbe\u5907\uff0c\u4f46\u5e76\u4e0d\u63a8\u8350\u3002", 
            "title": "\u6d4b\u8bd5\u7ed3\u679c"
        }, 
        {
            "location": "/Grove-Solid_State_Relay/#_7", 
            "text": "[Eagle \u6587\u4ef6] Grove - Solid State Relay Eagle File  [\u4ee3\u7801] Grove - Solid State Relay Demo Code  [\u6570\u636e\u624b\u518c] S208T02 Datasheet  [PDF\u6587\u4ef6] Grove - Solid State Relay in PDF  [\u5b9e\u9a8c\u62a5\u544a] Grove - Solid State Relay Test Report", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-SPDT_Relay_30A/", 
            "text": "Grove - SPDT Relay(30A) \u662f\u4e00\u4e2a\u9ad8\u54c1\u8d28\u7684\u5355\u5200\u53cc\u63b7\u7ee7\u7535\u5668 (SPDT)\u3002\u8fd9\u4e2a\u7ee7\u7535\u5668\u5305\u542b\u4e86\u4e00\u4e2a\u7ebf\u5708\uff0c\u4e00\u4e2a\u516c\u5171\u7aef\uff0c\u4e00\u4e2a\u5e38\u95ed\u7aef\uff0c\u4e00\u4e2a\u5e38\u5f00\u7aef\u3002\u5f53\u7ebf\u5708\u672a\u901a\u7535\u65f6\uff0c\u516c\u5171\u7aef\u548c\u5e38\u95ed\u7aef\u8fde\u63a5\u3002\u5f53\u7ebf\u5708\u901a\u7535\u65f6\uff0c\u516c\u5171\u7aef\u548c\u5e38\u5f00\u7aef\u8fde\u63a5\u3002\u7ebf\u5708\u7684\u989d\u5b9a\u7535\u538b\u662f 5V\uff0c\u989d\u5b9a\u7535\u6d41\u662f 30A (@250VAC, 30VDC)\uff0c\u8fd9\u4e2a\u7ee7\u7535\u5668\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u9ad8\u7535\u6d41\u8bbe\u5907\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u9ad8\u5408\u95f8\u7535\u6d41\n\n\n\u5355\u5200\u53cc\u63b7\u7ee7\u7535\u5668\n\n\n\u5e38\u95ed\u7ee7\u7535\u5668\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n4.75\n\n\n5.0\n\n\n5.25\n\n\nVDC\n\n\n\n\n\n\n\u7535\u6d41\n\n\n-\n\n\n185\n\n\n-\n\n\nmA\n\n\n\n\n\n\n\u5438\u5408\u7535\u538b (Max)\n\n\n-\n\n\n3.75\n\n\n-\n\n\nVDC\n\n\n\n\n\n\n\u52a8\u4f5c\u65f6\u95f4 (Max)\n\n\n-\n\n\n15\n\n\n-\n\n\nms\n\n\n\n\n\n\n\u91ca\u653e\u65f6\u95f4 (Max)\n\n\n-\n\n\n10\n\n\n-\n\n\nms\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\n\n\n-25\n\n\n-\n\n\n70\n\n\n\u00b0C\n\n\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528\n\n\n\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u7528\u7ee7\u7535\u5668\uff0c\u6211\u4eec\u771f\u7684\u9700\u8981\u5417\uff1f\u5982\u679c\u60a8\u60f3\u5f00\u5173\u63a7\u5236\u4e00\u4e2a\u9700\u8981\u66f4\u5927\u7535\u6d41\u6216\u9ad8\u538b\u4e0b\u5de5\u4f5c\u7684\u8bbe\u5907\uff0c\u5219\u9700\u8981\u4f7f\u7528\u7ee7\u7535\u5668\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7ee7\u7535\u5668\u662f\"\u4ee5\u4f4e\u538b\u63a7\u5236\u7684\u9ad8\u538b\u6216\u9ad8\u7535\u6d41\u7684\u5f00\u5173\"\u3002\u6700\u5e38\u7528\u7684 SPDT \u7ee7\u7535\u5668\u7ebf\u5708\u7684\u7535\u6d41\u5f88\u5c0f (\nGrove - Relay\n \u652f\u6301 10A)\u3002\u73b0\u5728\uff0c\u4f7f\u7528\u8fd9\u4e2a\u652f\u6301 30A \u7684\u7ee7\u7535\u5668\uff0c\u60a8\u53ef\u4ee5\u63a7\u5236\u66f4\u591a\u7684\u9ad8\u7535\u6d41\u5f00\u5173\u8bbe\u5907\u3002\n\n\nSPDT \u7ee7\u7535\u5668\u5185\u90e8\u7ed3\u6784 :\n\n\n\n\n\u5f53\u7ebf\u5708\u672a\u901a\u7535\u65f6\uff0c\u516c\u5171\u7aef\u548c\u5e38\u95ed\u7aef\u8fde\u63a5\u3002\n\n\n\u5f53\u7ebf\u5708\u901a\u7535\u65f6\uff0c\u516c\u5171\u7aef\u548c\u5e38\u5f00\u7aef\u8fde\u63a5\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\u53c2\u8003\u4e0b\u56fe :\n\n\n\n\n\u6b64\u7ee7\u7535\u5668\u7684\u63a7\u5236\u4ee3\u7801\u4e0e \nGrove - Relay\n \u76f8\u540c\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+\u3002\n\n\n2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \n\u8fd9\u91cc\n\u3002\n\n\n3.\u8fde\u63a5\n- \u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi \u63d2\u53e3 \nD4\n\u3002\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n   cd yourpath/GrovePi/Software/Python/\n\n\n\u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\n   nano grove_spdt_relay.py   # \nCtrl+x\n to exit #\n\n\n\nimport time\nimport grovepi\n\n# Connect the Grove SPDT Relay to digital port D4\n# SIG,NC,VCC,GND\nrelay = 4\n\ngrovepi.pinMode(relay,\nOUTPUT\n)\n\nwhile True:\n    try:\n        # switch on for 5 seconds\n        grovepi.digitalWrite(relay,1)\n        print \non\n\n        time.sleep(5)\n\n        # switch off for 5 seconds\n        grovepi.digitalWrite(relay,0)\n        print \noff\n\n        time.sleep(5)\n\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(relay,0)\n        break\n    except IOError:\n        print \nError\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\n   sudo python grove_spdt_relay.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - SPDT Relay(30A) Eagle File\n \n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nSLA-05VDC-SL-C Datasheet", 
            "title": "Grove-SPDT Relay 30A"
        }, 
        {
            "location": "/Grove-SPDT_Relay_30A/#_1", 
            "text": "\u9ad8\u5408\u95f8\u7535\u6d41  \u5355\u5200\u53cc\u63b7\u7ee7\u7535\u5668  \u5e38\u95ed\u7ee7\u7535\u5668    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-SPDT_Relay_30A/#_2", 
            "text": "\u9879\u76ee  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u5de5\u4f5c\u7535\u538b  4.75  5.0  5.25  VDC    \u7535\u6d41  -  185  -  mA    \u5438\u5408\u7535\u538b (Max)  -  3.75  -  VDC    \u52a8\u4f5c\u65f6\u95f4 (Max)  -  15  -  ms    \u91ca\u653e\u65f6\u95f4 (Max)  -  10  -  ms    \u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4  -25  -  70  \u00b0C", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-SPDT_Relay_30A/#_3", 
            "text": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528  \u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u7528\u7ee7\u7535\u5668\uff0c\u6211\u4eec\u771f\u7684\u9700\u8981\u5417\uff1f\u5982\u679c\u60a8\u60f3\u5f00\u5173\u63a7\u5236\u4e00\u4e2a\u9700\u8981\u66f4\u5927\u7535\u6d41\u6216\u9ad8\u538b\u4e0b\u5de5\u4f5c\u7684\u8bbe\u5907\uff0c\u5219\u9700\u8981\u4f7f\u7528\u7ee7\u7535\u5668\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7ee7\u7535\u5668\u662f\"\u4ee5\u4f4e\u538b\u63a7\u5236\u7684\u9ad8\u538b\u6216\u9ad8\u7535\u6d41\u7684\u5f00\u5173\"\u3002\u6700\u5e38\u7528\u7684 SPDT \u7ee7\u7535\u5668\u7ebf\u5708\u7684\u7535\u6d41\u5f88\u5c0f ( Grove - Relay  \u652f\u6301 10A)\u3002\u73b0\u5728\uff0c\u4f7f\u7528\u8fd9\u4e2a\u652f\u6301 30A \u7684\u7ee7\u7535\u5668\uff0c\u60a8\u53ef\u4ee5\u63a7\u5236\u66f4\u591a\u7684\u9ad8\u7535\u6d41\u5f00\u5173\u8bbe\u5907\u3002  SPDT \u7ee7\u7535\u5668\u5185\u90e8\u7ed3\u6784 :   \u5f53\u7ebf\u5708\u672a\u901a\u7535\u65f6\uff0c\u516c\u5171\u7aef\u548c\u5e38\u95ed\u7aef\u8fde\u63a5\u3002  \u5f53\u7ebf\u5708\u901a\u7535\u65f6\uff0c\u516c\u5171\u7aef\u548c\u5e38\u5f00\u7aef\u8fde\u63a5\u3002  \u786c\u4ef6\u8fde\u63a5\u53c2\u8003\u4e0b\u56fe :   \u6b64\u7ee7\u7535\u5668\u7684\u63a7\u5236\u4ee3\u7801\u4e0e  Grove - Relay  \u76f8\u540c  \u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528  1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+\u3002  2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa  \u8fd9\u91cc \u3002  3.\u8fde\u63a5\n- \u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi \u63d2\u53e3  D4 \u3002  4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :    cd yourpath/GrovePi/Software/Python/ \n\u6f14\u793a\u4ee3\u7801\u5982\u4e0b :    nano grove_spdt_relay.py   #  Ctrl+x  to exit #  import time\nimport grovepi\n\n# Connect the Grove SPDT Relay to digital port D4\n# SIG,NC,VCC,GND\nrelay = 4\n\ngrovepi.pinMode(relay, OUTPUT )\n\nwhile True:\n    try:\n        # switch on for 5 seconds\n        grovepi.digitalWrite(relay,1)\n        print  on \n        time.sleep(5)\n\n        # switch off for 5 seconds\n        grovepi.digitalWrite(relay,0)\n        print  off \n        time.sleep(5)\n\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(relay,0)\n        break\n    except IOError:\n        print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002    sudo python grove_spdt_relay.py", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-SPDT_Relay_30A/#_4", 
            "text": "[Eagle\u6587\u4ef6]   Grove - SPDT Relay(30A) Eagle File    [\u82af\u7247\u6570\u636e\u624b\u518c]   SLA-05VDC-SL-C Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Buzzer/", 
            "text": "Grove - Buzzer \u6a21\u5757\u4ee5\n\u538b\u7535\u8702\u9e23\u5668\n\u4f5c\u4e3a\u4e3b\u8981\u7ec4\u4ef6\u3002 \u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3\u8f93\u51fa\uff0c\u5f53\u8f93\u51fa\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u4f1a\u53d1\u51fa\u4e00\u4e2a\u97f3\u8c03\u3002 \u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u6a21\u62df\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u5904\u7406\u5668\u6765\u8f93\u51fa\u5404\u79cd\u97f3\u8c03\uff0c\u80fd\u591f\u4ea7\u751f\u5404\u79cd\u4e0d\u540c\u7684\u6548\u679c\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u6613\u4e8e\u4f7f\u7528\u7684\u538b\u7535\u8702\u9e23\u5668\n\n\n\u4f7f\u7528\u6807\u51c6\u7684 4 \u9488 Grove \u8fde\u63a5\u7ebf\u8fde\u63a5\u5230\u5176\u4ed6 Grove \u6a21\u5757\uff0c\u4f8b\u5982 -Grove Power Modules \u548c Grove - Base Shield\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\uff1a4-8V\n\n\n\u58f0\u97f3\u8f93\u51fa\uff1a\u226585dB\n\n\n\u5171\u632f\u9891\u7387\uff1a2300\u00b1300Hz\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u5355\u72ec\u4f7f\u7528\n\n\n\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b64\u6a21\u5757\u6784\u5efa\u4e00\u4e2a\u91c7\u6837\u7535\u8def\u5e76\u4e14\u4e0d\u9700\u8981\u4f7f\u7528\u4efb\u4f55\u5fae\u63a7\u5236\u5668\uff1a\n\n\n\n\n\u5c06\u8702\u9e23\u5668\u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u51fa\u7aef\uff08\u7535\u6e90\u6a21\u5757\u53f3\u4fa7\uff09\u3002 \u5728\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u57fa\u4e8e\u4f20\u611f\u5668\u7684\u8f93\u5165\u6a21\u5757 (\nGrove - Light Sensor\n, \nGrove - Button\n \u548c \nGrove - Slide Potentiometer\n)\u3002\n\n\n\u542f\u52a8\u7535\u8def\u3002\n\n\n\u5f53\u8f93\u5165\u6a21\u5757\u63d0\u4f9b\u89e6\u53d1\u65f6\uff0c\u8702\u9e23\u5668\u5c06\u5f00\u59cb\u53d1\u51fa \u201c\u8702\u9e23\u201d \u58f0\uff1a\n\u00a0\u00a0 - \u5982\u679c\u4f7f\u7528\u50cf \nGrove - Button module\n \u90a3\u6837\u7684\u77ac\u95f4\u5f00\u5173\uff0c\u53ea\u9700\u6309\u4e0b\u6309\u94ae\u5373\u53ef\u6253\u5f00\u8702\u9e23\u5668\u3002\n\u00a0\u00a0 - \u5982\u679c\u4f7f\u7528 \nGrove - Slide Potentiometer\n\uff0c\u5c06\u6ed1\u5757\u4ece GND \u4f4d\u7f6e\u79fb\u52a8\u5230 VCC\uff0c\u5e76\u67e5\u770b\u8702\u9e23\u5668\u7684\u97f3\u8c03\u548c\u9891\u7387\u968f\u4f9b\u7535\u7535\u538b\u7684\u589e\u52a0\u800c\u53d8\u5316\u3002\n\u00a0\u00a0 - \u5982\u679c\u4f7f\u7528 \nGrove - Light Sensor\n \u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u5e94\u8be5\u5728\u660e\u4eae\u7684\u5149\u7ebf\u4e0b\u542c\u5230\u8702\u9e23\u5668\uff0c\u5e76\u5728\u9ed1\u6697\u4e2d\u505c\u6b62 \u201c\u55e1\u55e1\u201d\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u8702\u9e23\u5668\u5728\u9ed1\u6697\u4e2d\u53d1\u51fa\u58f0\u97f3\uff0c\u8bf7\u5728\u5149\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a \nGrove - NOT\n \u6a21\u5757\u3002\n\n\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528 \nGrove - USB Power\n  \u6a21\u5757\u6216  \nGrove - DC Jack Power\n \u6a21\u5757\u4f5c\u4e3a Grove \u7535\u8def\u3002\n\n\n\u4f7f\u7528 Arduino\n\n\n\u6309\u7167\u4ee5\u4e0b\u7b80\u5355\u7684\u6b65\u9aa4\uff0c\u4f7f\u7528\u8702\u9e23\u5668\u6784\u5efa Grove \u7535\u8def\uff1a\n\n\n1.\u5c06\u6a21\u5757\u4e0e Arduino \u6216 \nSeeeduino\n \u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u8bf7\u4f7f\u7528 \nGrove - Base Shield\n\uff0c\u5e76\u4f7f\u7528\u6307\u5b9a\u7684 Grove \u63a5\u53e3\u5c06 Grove - Buzzer \u6a21\u5757\u8fde\u63a5\u5230 Grove - Base Shield\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n2.\u4e0a\u4f20\u4ee5\u4e0b\u7a0b\u5e8f\u793a\u4f8b\uff0c\u4f7f\u8702\u9e23\u5668\u53d1\u51fa\u54d4\u58f0\uff1a\n\n\n// Project Four - Noise maker\n\n\n//\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n  \npinMode\n(\n6\n,\n \nOUTPUT\n);\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n  \ndigitalWrite\n(\n6\n,\n \nHIGH\n);\n\n  \ndelay\n(\nanalogRead\n(\n0\n));\n\n  \ndigitalWrite\n(\n6\n,\n \nLOW\n);\n\n  \ndelay\n(\nanalogRead\n(\n0\n));\n\n\n}\n\n\n\n\n\u4f7f\u7528 TI LaunchPad\n\n\n\u64ad\u653e\u97f3\u4e50\uff08\u8702\u9e23\u5668\uff09\n\n\n\n\n\u6b64\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u4f7f\u7528 Grove buzzer \u6a21\u5757\u64ad\u653e\u65cb\u5f8b\u3002 \u5b83\u5411\u8702\u9e23\u5668\u53d1\u9001\u9002\u5f53\u9891\u7387\u7684\u65b9\u6ce2\uff0c\u4ea7\u751f\u76f8\u5e94\u7684\u97f3\u8c03\u3002\n\n\n\n\n\n\n/*\n\n\n  Buzzer\n\n\n The example use a buzzer to play melodies. It sends a square wave of the\n\n\n appropriate frequency to the buzzer, generating the corresponding tone.\n\n\n\n The circuit:\n\n\n * Buzzer attached to pin39 (J14 plug on Grove Base BoosterPack)\n\n\n * one side pin (either one) to ground\n\n\n * the other side pin to VCC\n\n\n * LED anode (long leg) attached to RED_LED\n\n\n * LED cathode (short leg) attached to ground\n\n\n\n * Note:\n\n\n This example code is in the public domain.\n\n\n\n http://www.seeedstudio.com/wiki/index.php?title=GROVE_-_Starter_Kit_v1.1b#Grove_-_Buzzer\n\n\n\n*/\n\n\n\n/* Macro Define */\n\n\n#define BUZZER_PIN               39            \n/* sig pin of the buzzer */\n\n\n\nint\n \nlength\n \n=\n \n15\n;\n         \n/* the number of notes */\n\n\nchar\n \nnotes\n[]\n \n=\n \nccggaagffeeddc \n;\n\n\nint\n \nbeats\n[]\n \n=\n \n{\n \n1\n,\n \n1\n,\n \n1\n,\n \n1\n,\n \n1\n,\n \n1\n,\n \n2\n,\n \n1\n,\n \n1\n,\n \n1\n,\n \n1\n,\n \n1\n,\n \n1\n,\n \n2\n,\n \n4\n \n};\n\n\nint\n \ntempo\n \n=\n \n300\n;\n\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \n/* set buzzer pin as output */\n\n    \npinMode\n(\nBUZZER_PIN\n,\n \nOUTPUT\n);\n\n\n}\n\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \nfor\n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n \nlength\n;\n \ni\n++\n)\n \n{\n\n        \nif\n(\nnotes\n[\ni\n]\n \n==\n \n \n)\n \n{\n\n            \ndelay\n(\nbeats\n[\ni\n]\n \n*\n \ntempo\n);\n\n        \n}\n \nelse\n \n{\n\n            \nplayNote\n(\nnotes\n[\ni\n],\n \nbeats\n[\ni\n]\n \n*\n \ntempo\n);\n\n        \n}\n\n        \ndelay\n(\ntempo\n \n/\n \n2\n);\n    \n/* delay between notes */\n\n    \n}\n\n\n\n}\n\n\n\n/* play tone */\n\n\nvoid\n \nplayTone\n(\nint\n \ntone\n,\n \nint\n \nduration\n)\n \n{\n\n    \nfor\n \n(\nlong\n \ni\n \n=\n \n0\n;\n \ni\n \n \nduration\n \n*\n \n1000L\n;\n \ni\n \n+=\n \ntone\n \n*\n \n2\n)\n \n{\n\n        \ndigitalWrite\n(\nBUZZER_PIN\n,\n \nHIGH\n);\n\n        \ndelayMicroseconds\n(\ntone\n);\n\n        \ndigitalWrite\n(\nBUZZER_PIN\n,\n \nLOW\n);\n\n        \ndelayMicroseconds\n(\ntone\n);\n\n    \n}\n\n\n}\n\n\n\nvoid\n \nplayNote\n(\nchar\n \nnote\n,\n \nint\n \nduration\n)\n \n{\n\n    \nchar\n \nnames\n[]\n \n=\n \n{\n \nc\n,\n \nd\n,\n \ne\n,\n \nf\n,\n \ng\n,\n \na\n,\n \nb\n,\n \nC\n \n};\n\n    \nint\n \ntones\n[]\n \n=\n \n{\n \n1915\n,\n \n1700\n,\n \n1519\n,\n \n1432\n,\n \n1275\n,\n \n1136\n,\n \n1014\n,\n \n956\n \n};\n\n\n    \n// play the tone corresponding to the note name\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n \n8\n;\n \ni\n++\n)\n \n{\n\n        \nif\n \n(\nnames\n[\ni\n]\n \n==\n \nnote\n)\n \n{\n\n            \nplayTone\n(\ntones\n[\ni\n],\n \nduration\n);\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u5982\u4f55\u5728 Raspberry Pi \u4e0a\u4f7f\u7528 Grove-Buzzer \u6a21\u5757\u3002 \u8702\u9e23\u5668\u4ea7\u751f\u566a\u97f3\u5e76\u5ef6\u8fdf\u4e00\u79d2\u949f\u3002 \u7136\u540e\u5b89\u9759\u4e00\u79d2\u949f\u3002\u8ba9\u5b83\u91cd\u590d\u4e0a\u8ff0\u52a8\u4f5c\u3002\n\n\n\n\n# GrovePi + Grove Buzzer\n\n\nimport\n \ntime\n\n\nimport\n \ngrovepi\n\n\n\n# Connect the Grove Buzzer to digital port D8\n\n\n# SIG,NC,VCC,GND\n\n\nbuzzer\n \n=\n \n8\n\n\n\ngrovepi\n.\npinMode\n(\nbuzzer\n,\nOUTPUT\n)\n\n\n\nwhile\n \nTrue\n:\n\n    \ntry\n:\n\n        \n# Buzz for 1 second\n\n        \ngrovepi\n.\ndigitalWrite\n(\nbuzzer\n,\n1\n)\n\n        \nprint\n \nstart\n\n        \ntime\n.\nsleep\n(\n1\n)\n\n\n        \n# Stop buzzing for 1 second and repeat\n\n        \ngrovepi\n.\ndigitalWrite\n(\nbuzzer\n,\n0\n)\n\n        \nprint\n \nstop\n\n        \ntime\n.\nsleep\n(\n1\n)\n\n\n    \nexcept\n \nKeyboardInterrupt\n:\n\n        \ngrovepi\n.\ndigitalWrite\n(\nbuzzer\n,\n0\n)\n\n        \nbreak\n\n    \nexcept\n \nIOError\n:\n\n        \nprint\n \nError\n\n\n\n\n\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n\n\u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84\uff08\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84\uff09\n```cd GrovePi/Software/Python/\n\n\u8fd0\u884c\u7a0b\u5e8f\n```sudo python grove_buzzer.py\n\n\n\n\u9879\u76ee\n\n\n\n\nInspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!\n\n\nThe Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.    \n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\nGrove - Buzzer Source Files v1.1\n\n\nGrove - Buzzer Source Files v1.0 (Eagle and pdf)\n\n\nS9013datasheet\n\n\nSchematic at Easyeda", 
            "title": "Grove-Buzzer"
        }, 
        {
            "location": "/Grove-Buzzer/#_1", 
            "text": "\u6613\u4e8e\u4f7f\u7528\u7684\u538b\u7535\u8702\u9e23\u5668  \u4f7f\u7528\u6807\u51c6\u7684 4 \u9488 Grove \u8fde\u63a5\u7ebf\u8fde\u63a5\u5230\u5176\u4ed6 Grove \u6a21\u5757\uff0c\u4f8b\u5982 -Grove Power Modules \u548c Grove - Base Shield    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Buzzer/#_2", 
            "text": "\u5de5\u4f5c\u7535\u538b\uff1a4-8V  \u58f0\u97f3\u8f93\u51fa\uff1a\u226585dB  \u5171\u632f\u9891\u7387\uff1a2300\u00b1300Hz", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Buzzer/#_3", 
            "text": "\u5355\u72ec\u4f7f\u7528  \u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b64\u6a21\u5757\u6784\u5efa\u4e00\u4e2a\u91c7\u6837\u7535\u8def\u5e76\u4e14\u4e0d\u9700\u8981\u4f7f\u7528\u4efb\u4f55\u5fae\u63a7\u5236\u5668\uff1a   \u5c06\u8702\u9e23\u5668\u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u51fa\u7aef\uff08\u7535\u6e90\u6a21\u5757\u53f3\u4fa7\uff09\u3002 \u5728\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u57fa\u4e8e\u4f20\u611f\u5668\u7684\u8f93\u5165\u6a21\u5757 ( Grove - Light Sensor ,  Grove - Button  \u548c  Grove - Slide Potentiometer )\u3002  \u542f\u52a8\u7535\u8def\u3002  \u5f53\u8f93\u5165\u6a21\u5757\u63d0\u4f9b\u89e6\u53d1\u65f6\uff0c\u8702\u9e23\u5668\u5c06\u5f00\u59cb\u53d1\u51fa \u201c\u8702\u9e23\u201d \u58f0\uff1a\n\u00a0\u00a0 - \u5982\u679c\u4f7f\u7528\u50cf  Grove - Button module  \u90a3\u6837\u7684\u77ac\u95f4\u5f00\u5173\uff0c\u53ea\u9700\u6309\u4e0b\u6309\u94ae\u5373\u53ef\u6253\u5f00\u8702\u9e23\u5668\u3002\n\u00a0\u00a0 - \u5982\u679c\u4f7f\u7528  Grove - Slide Potentiometer \uff0c\u5c06\u6ed1\u5757\u4ece GND \u4f4d\u7f6e\u79fb\u52a8\u5230 VCC\uff0c\u5e76\u67e5\u770b\u8702\u9e23\u5668\u7684\u97f3\u8c03\u548c\u9891\u7387\u968f\u4f9b\u7535\u7535\u538b\u7684\u589e\u52a0\u800c\u53d8\u5316\u3002\n\u00a0\u00a0 - \u5982\u679c\u4f7f\u7528  Grove - Light Sensor  \u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u5e94\u8be5\u5728\u660e\u4eae\u7684\u5149\u7ebf\u4e0b\u542c\u5230\u8702\u9e23\u5668\uff0c\u5e76\u5728\u9ed1\u6697\u4e2d\u505c\u6b62 \u201c\u55e1\u55e1\u201d\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u8702\u9e23\u5668\u5728\u9ed1\u6697\u4e2d\u53d1\u51fa\u58f0\u97f3\uff0c\u8bf7\u5728\u5149\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a  Grove - NOT  \u6a21\u5757\u3002   \u60a8\u53ef\u4ee5\u4f7f\u7528  Grove - USB Power   \u6a21\u5757\u6216   Grove - DC Jack Power  \u6a21\u5757\u4f5c\u4e3a Grove \u7535\u8def\u3002  \u4f7f\u7528 Arduino  \u6309\u7167\u4ee5\u4e0b\u7b80\u5355\u7684\u6b65\u9aa4\uff0c\u4f7f\u7528\u8702\u9e23\u5668\u6784\u5efa Grove \u7535\u8def\uff1a  1.\u5c06\u6a21\u5757\u4e0e Arduino \u6216  Seeeduino  \u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u8bf7\u4f7f\u7528  Grove - Base Shield \uff0c\u5e76\u4f7f\u7528\u6307\u5b9a\u7684 Grove \u63a5\u53e3\u5c06 Grove - Buzzer \u6a21\u5757\u8fde\u63a5\u5230 Grove - Base Shield\uff0c\u5982\u4e0b\u6240\u793a\uff1a   2.\u4e0a\u4f20\u4ee5\u4e0b\u7a0b\u5e8f\u793a\u4f8b\uff0c\u4f7f\u8702\u9e23\u5668\u53d1\u51fa\u54d4\u58f0\uff1a  // Project Four - Noise maker  //  void   setup ()  { \n   pinMode ( 6 ,   OUTPUT );  }  void   loop ()  { \n   digitalWrite ( 6 ,   HIGH ); \n   delay ( analogRead ( 0 )); \n   digitalWrite ( 6 ,   LOW ); \n   delay ( analogRead ( 0 ));  }   \u4f7f\u7528 TI LaunchPad  \u64ad\u653e\u97f3\u4e50\uff08\u8702\u9e23\u5668\uff09   \u6b64\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u4f7f\u7528 Grove buzzer \u6a21\u5757\u64ad\u653e\u65cb\u5f8b\u3002 \u5b83\u5411\u8702\u9e23\u5668\u53d1\u9001\u9002\u5f53\u9891\u7387\u7684\u65b9\u6ce2\uff0c\u4ea7\u751f\u76f8\u5e94\u7684\u97f3\u8c03\u3002    /*    Buzzer   The example use a buzzer to play melodies. It sends a square wave of the   appropriate frequency to the buzzer, generating the corresponding tone.   The circuit:   * Buzzer attached to pin39 (J14 plug on Grove Base BoosterPack)   * one side pin (either one) to ground   * the other side pin to VCC   * LED anode (long leg) attached to RED_LED   * LED cathode (short leg) attached to ground   * Note:   This example code is in the public domain.   http://www.seeedstudio.com/wiki/index.php?title=GROVE_-_Starter_Kit_v1.1b#Grove_-_Buzzer  */  /* Macro Define */  #define BUZZER_PIN               39             /* sig pin of the buzzer */  int   length   =   15 ;           /* the number of notes */  char   notes []   =   ccggaagffeeddc  ;  int   beats []   =   {   1 ,   1 ,   1 ,   1 ,   1 ,   1 ,   2 ,   1 ,   1 ,   1 ,   1 ,   1 ,   1 ,   2 ,   4   };  int   tempo   =   300 ;  void   setup ()  { \n     /* set buzzer pin as output */ \n     pinMode ( BUZZER_PIN ,   OUTPUT );  }  void   loop ()  { \n     for ( int   i   =   0 ;   i     length ;   i ++ )   { \n         if ( notes [ i ]   ==     )   { \n             delay ( beats [ i ]   *   tempo ); \n         }   else   { \n             playNote ( notes [ i ],   beats [ i ]   *   tempo ); \n         } \n         delay ( tempo   /   2 );      /* delay between notes */ \n     }  }  /* play tone */  void   playTone ( int   tone ,   int   duration )   { \n     for   ( long   i   =   0 ;   i     duration   *   1000L ;   i   +=   tone   *   2 )   { \n         digitalWrite ( BUZZER_PIN ,   HIGH ); \n         delayMicroseconds ( tone ); \n         digitalWrite ( BUZZER_PIN ,   LOW ); \n         delayMicroseconds ( tone ); \n     }  }  void   playNote ( char   note ,   int   duration )   { \n     char   names []   =   {   c ,   d ,   e ,   f ,   g ,   a ,   b ,   C   }; \n     int   tones []   =   {   1915 ,   1700 ,   1519 ,   1432 ,   1275 ,   1136 ,   1014 ,   956   }; \n\n     // play the tone corresponding to the note name \n     for   ( int   i   =   0 ;   i     8 ;   i ++ )   { \n         if   ( names [ i ]   ==   note )   { \n             playTone ( tones [ i ],   duration ); \n         } \n     }  }   \u4f7f\u7528 Raspberry Pi \n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u5982\u4f55\u5728 Raspberry Pi \u4e0a\u4f7f\u7528 Grove-Buzzer \u6a21\u5757\u3002 \u8702\u9e23\u5668\u4ea7\u751f\u566a\u97f3\u5e76\u5ef6\u8fdf\u4e00\u79d2\u949f\u3002 \u7136\u540e\u5b89\u9759\u4e00\u79d2\u949f\u3002\u8ba9\u5b83\u91cd\u590d\u4e0a\u8ff0\u52a8\u4f5c\u3002   # GrovePi + Grove Buzzer  import   time  import   grovepi  # Connect the Grove Buzzer to digital port D8  # SIG,NC,VCC,GND  buzzer   =   8  grovepi . pinMode ( buzzer , OUTPUT )  while   True : \n     try : \n         # Buzz for 1 second \n         grovepi . digitalWrite ( buzzer , 1 ) \n         print   start \n         time . sleep ( 1 ) \n\n         # Stop buzzing for 1 second and repeat \n         grovepi . digitalWrite ( buzzer , 0 ) \n         print   stop \n         time . sleep ( 1 ) \n\n     except   KeyboardInterrupt : \n         grovepi . digitalWrite ( buzzer , 0 ) \n         break \n     except   IOError : \n         print   Error   \u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b  \u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84\uff08\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84\uff09\n```cd GrovePi/Software/Python/ \u8fd0\u884c\u7a0b\u5e8f\n```sudo python grove_buzzer.py", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Buzzer/#_4", 
            "text": "Inspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!  The Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.", 
            "title": "\u9879\u76ee"
        }, 
        {
            "location": "/Grove-Buzzer/#_5", 
            "text": "Grove - Buzzer Source Files v1.1  Grove - Buzzer Source Files v1.0 (Eagle and pdf)  S9013datasheet  Schematic at Easyeda", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Chainable_RGB_LED/", 
            "text": "Grove - Chainable RGB LED\n \u662f\u57fa\u4e8e P9813 \u82af\u7247\u7684\uff0c\u5b83\u662f\u5168\u5f69 LED \u706f\u7684\u9a71\u52a8\u5668\u3002 \u5b83\u63d0\u4f9b 3 \u4e2a\u6052\u6d41\u7684\u9a71\u52a8\u5668\u4ee5\u53ca 256 \u4e2a\u7070\u5ea6\u8c03\u5236\u7684\u8f93\u51fa\u4fe1\u53f7\u3002 \u5b83\u4f7f\u7528\u4e24\u7ebf\u4f20\u8f93\uff08\u6570\u636e\u548c\u65f6\u949f\uff09\u80fd\u591f\u4e0e MCU \u8fdb\u884c\u901a\u4fe1\u3002 \u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u4e24\u7ebf\u4f20\u8f93\u7684\u529f\u80fd\u5b9e\u73b0 \nGrove - Chainable RGB LED\n \u6a21\u5757\u7684\u591a\u4e2a\u8fde\u63a5\u3002 \u5185\u7f6e\u7684\u65f6\u949f\u4f20\u8f93\u80fd\u591f\u589e\u5927\u4f20\u8f93\u8ddd\u79bb\u3002 \u8be5 Grove \u6a21\u5757\u80fd\u591f\u9002\u7528\u4e8e\u4efb\u4f55\u4f7f\u7528\u5f69\u8272 LED \u706f\u9879\u76ee\u3002\n\n\n\n\n\u7248\u672c\u4fe1\u606f\n\n\n\n\n\n\n\n\n\u7248\u672c\u8c03\u6574\n\n\n\u63cf\u8ff0\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\u8d2d\u4e70\u65b9\u5f0f\n\n\n\n\n\n\n\n\n\n\nv1\n\n\n\u521d\u6b21\u516c\u5f00\u53d1\u5e03\uff08\u6d4b\u8bd5\u7248\uff09\n\n\n2011\u5e745\u67085\u65e5\n\n\n\u65e0\n\n\n\n\n\n\nv2\n\n\n\u7528 P9813S14 \u66ff\u6362 P9813S16\uff0c\u5e76\u5c06 Grove \u8fde\u63a5\u5668\u4ece\u5782\u76f4\u66f4\u6539\u4e3a\u6c34\u5e73\n\n\n2016\u5e744\u670819\u65e5\n\n\n\u9a6c\u4e0a\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\uff1a5V\n\n\n\u5de5\u4f5c\u7535\u6d41\uff1a20mA\n\n\n\u901a\u8baf\u534f\u8bae\uff1a\u4e32\u53e3\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u4f7f\u7528\u65b9\u5f0f\n\n\n\u4f7f\u7528 Arduino\n\n\n\u5f53\u60a8\u83b7\u5f97 Grove - Chainble RGB LED \u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u8003\u8651\u5982\u4f55\u70b9\u4eae\u5b83\u3002 \u73b0\u5728\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a\u6f14\u793a\uff1a\u4f7f RGB \u706f\u91cc\u7684\u989c\u8272\u5faa\u73af\u7684\u53d1\u5149\u3002\n\n\n\u8981\u5b8c\u6210\u6b64\u6f14\u793a\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a Grove - Chainable RGB LED\u3002 \u8bf7\u6ce8\u610f\uff0c\u4e00\u4e2aGrove - Chainable RGB LED\u7684 \nIN\n \u63a5\u53e3\u5e94\u8fde\u63a5\u5230 \nGrove - Base Shield\n\u7684 \nD7 / D8\n\uff0c\u5176 \nOUT\n \u63a5\u53e3\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a Grove - Chainable RGB LED \u7684 \nIN\n \u63a5\u53e3\uff0c\u8fd9\u6837\u53ef\u4ee5\u8fde\u63a5\u66f4\u591a\u7684 LED\u3002\n\n\n\n\n\u4e0b\u8f7d \nChainable LED \u5e93\n \u5e76\u5c06\u5176\u5b89\u88c5\u5230 Arduino \u5e93\u3002 \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5 Arduino \u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\n\u901a\u8fc7\u8def\u5f84\u6253\u5f00\u793a\u4f8b CycleThroughColors\uff1a\nFile\uff08\u6587\u4ef6\uff09-\n Examples\uff08\u793a\u4f8b\uff09-\n ChainableLED_master\n \u5e76\u5c06\u5176\u4e0a\u4f20\u5230 Seeeduino\u3002\n\n\n\n\n    /*\n     * Example of using the ChainableRGB library for controlling a Grove RGB.\n     * This code cycles through all the colors in an uniform way. This is accomplished using a HSB color space.\n     */\n    #include \nChainableLED.h\n\n\n    #define NUM_LEDS  5\n\n    ChainableLED leds(7, 8, NUM_LEDS);\n\n    void setup()\n    {\n    }\n\n    float hue = 0.0;\n    boolean up = true;\n\n    void loop()\n    {\n      for (byte i=0; i\nNUM_LEDS; i++)\n        leds.setColorHSB(i, hue, 1.0, 0.5);\n\n      delay(50);\n\n      if (up)\n        hue+= 0.025;\n      else\n        hue-= 0.025;\n\n      if (hue\n=1.0 \n up)\n        up = false;\n      else if (hue\n=0.0 \n\u00a0!up)\n        up = true;\n    }\n\n\n\n\n\u60a8\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u60c5\u51b5\uff1a\u4e24\u4e2aLED\u7684\u989c\u8272\u5c06\u4e00\u81f4\u5730\u6e10\u53d8\u3002\n\n\n\u6269\u5c55\u8bbe\u8ba1\uff1a\n\n\u57fa\u4e8e\nChainable LED \u5e93\n\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u8fd9\u4e2a\u6f14\u793a\uff1aRGB \u706f\u7684\u989c\u8272\u968f  Grove - temperature \u6d4b\u91cf\u7684\u6e29\u5ea6\u503c\u800c\u53d1\u751f\u53d8\u5316\u3002 \u5f53\u6e29\u5ea6\u4e3a25\u81f332\u2103\u65f6\uff0cRGB \u989c\u8272\u4ece\u7eff\u8272\u53d8\u4e3a\u7ea2\u8272\u3002\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\n\n\n    // demo of temperature -\n rgbLED\n    // temperature form 25 - 32, rgbLed from green -\n red\n    // Grove-temperature plu to A0\n    // LED plug to D7,D8\n\n    #include \nStreaming.h\n\n    #include \nChainableLED.h\n\n\n    #define TEMPUP 32\n    #define TEMPDOWN 25\n\n    ChainableLED leds(7, 8, 1); // connect to pin7 and pin8 , one led\n\n    int getAnalog() // get value from A0\n    {\n        int sum = 0;\n        for(int i=0; i\n32; i++)\n        {\n            sum += analogRead(A0);\n        }\n\n        return sum\n5;\n    }\n\n    float getTemp() // get temperature\n    {\n        float temperature = 0.0;\n        float resistance = 0.0;\n        int B = 3975; //B value of the thermistor\n\n        int a = getAnalog();\n\n        resistance = (float)(1023-a)*10000/a; //get the resistance of the sensor;\n        temperature = 1/(log(resistance/10000)/B+1/298.15)-273.15; //convert to temperature via datasheet\u00a0;\n        return temperature;\n    }\n\n    void ledLight(int dta) // light led\n    {\n\n        dta = dta/4; // 0 - 255\n\n        int colorR = dta;\n        int colorG = 255-dta;\n        int colorB = 0;\n\n        leds.setColorRGB(0, colorR, colorG, colorB);\n    }\n\n    void setup()\n    {\n        Serial.begin(38400);\n        cout \n \nhello world\u00a0!\n \n endl;\n    }\n\n    void loop()\n    {\n        float temp = getTemp();\n        int nTemp = temp*100;\n\n        nTemp = nTemp \n TEMPUP*100\u00a0? TEMPUP*100\u00a0: (nTemp \n TEMPDOWN*100\u00a0? TEMPDOWN*100\u00a0: nTemp);\n        nTemp = map(nTemp, TEMPDOWN*100, TEMPUP*100, 0, 1023);\n        ledLight(nTemp);\n        delay(100);\n    }\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a raspberry pi \u548c\u4e00\u4e2a grovepi \u6216 grovepi +\u3002\n\n\n2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa\n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n\n\n3.\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u4f7f\u7528 grove \u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165 grovepi socket \nD7\n\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55\uff1a\n\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\n\u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\n     nano grove_chainable_rgb_led.py   # \nCtrl+x\n to exit #\n\n\n\n\n\n    import time\n    import grovepi\n\n    # Connect first LED in Chainable RGB LED chain to digital port D7\n    # In: CI,DI,VCC,GND\n    # Out: CO,DO,VCC,GND\n    pin = 7\n\n    # I have 10 LEDs connected in series with the first connected to the GrovePi and the last not connected\n    # First LED input socket connected to GrovePi, output socket connected to second LED input and so on\n    numleds = 1  \n\n    grovepi.pinMode(pin,\nOUTPUT\n)\n    time.sleep(1)\n\n    # Chainable RGB LED methods\n    # grovepi.storeColor(red, green, blue)\n    # grovepi.chainableRgbLed_init(pin, numLeds)\n    # grovepi.chainableRgbLed_test(pin, numLeds, testColor)\n    # grovepi.chainableRgbLed_pattern(pin, pattern, whichLed)\n    # grovepi.chainableRgbLed_modulo(pin, offset, divisor)\n    # grovepi.chainableRgbLed_setLevel(pin, level, reverse)\n\n    # test colors used in grovepi.chainableRgbLed_test()\n    testColorBlack = 0   # 0b000 #000000\n    testColorBlue = 1    # 0b001 #0000FF\n    testColorGreen = 2   # 0b010 #00FF00\n    testColorCyan = 3    # 0b011 #00FFFF\n    testColorRed = 4     # 0b100 #FF0000\n    testColorMagenta = 5 # 0b101 #FF00FF\n    testColorYellow = 6  # 0b110 #FFFF00\n    testColorWhite = 7   # 0b111 #FFFFFF\n\n    # patterns used in grovepi.chainableRgbLed_pattern()\n    thisLedOnly = 0\n    allLedsExceptThis = 1\n    thisLedAndInwards = 2\n    thisLedAndOutwards = 3\n\n    try:\n\n        print \nTest 1) Initialise\n\n\n        # init chain of leds\n        grovepi.chainableRgbLed_init(pin, numleds)\n        time.sleep(.5)\n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set led 1 to green\n        grovepi.chainableRgbLed_pattern(pin, thisLedOnly, 0)\n        time.sleep(.5)\n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set led 10 to red\n        grovepi.chainableRgbLed_pattern(pin, thisLedOnly, 9)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 2a) Test Patterns - black\n\n\n        # test pattern 0 - black (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(1)\n\n\n        print \nTest 2b) Test Patterns - blue\n\n\n        # test pattern 1 blue\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlue)\n        time.sleep(1)\n\n\n        print \nTest 2c) Test Patterns - green\n\n\n        # test pattern 2 green\n        grovepi.chainableRgbLed_test(pin, numleds, testColorGreen)\n        time.sleep(1)\n\n\n        print \nTest 2d) Test Patterns - cyan\n\n\n        # test pattern 3 cyan\n        grovepi.chainableRgbLed_test(pin, numleds, testColorCyan)\n        time.sleep(1)\n\n\n        print \nTest 2e) Test Patterns - red\n\n\n        # test pattern 4 red\n        grovepi.chainableRgbLed_test(pin, numleds, testColorRed)\n        time.sleep(1)\n\n\n        print \nTest 2f) Test Patterns - magenta\n\n\n        # test pattern 5 magenta\n        grovepi.chainableRgbLed_test(pin, numleds, testColorMagenta)\n        time.sleep(1)\n\n\n        print \nTest 2g) Test Patterns - yellow\n\n\n        # test pattern 6 yellow\n        grovepi.chainableRgbLed_test(pin, numleds, testColorYellow)\n        time.sleep(1)\n\n\n        print \nTest 2h) Test Patterns - white\n\n\n        # test pattern 7 white\n        grovepi.chainableRgbLed_test(pin, numleds, testColorWhite)\n        time.sleep(1)\n\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 3a) Set using pattern - this led only\n\n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set led 3 to red\n        grovepi.chainableRgbLed_pattern(pin, thisLedOnly, 2)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 3b) Set using pattern - all leds except this\n\n\n        # change color to blue\n        grovepi.storeColor(0,0,255)\n        time.sleep(.5)\n\n        # set all leds except for 3 to blue\n        grovepi.chainableRgbLed_pattern(pin, allLedsExceptThis, 3)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 3c) Set using pattern - this led and inwards\n\n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set leds 1-3 to green\n        grovepi.chainableRgbLed_pattern(pin, thisLedAndInwards, 2)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 3d) Set using pattern - this led and outwards\n\n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set leds 7-10 to green\n        grovepi.chainableRgbLed_pattern(pin, thisLedAndOutwards, 6)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 4a) Set using modulo - all leds\n\n\n        # change color to black (fully off)\n        grovepi.storeColor(0,0,0)\n        time.sleep(.5)\n\n        # set all leds black\n        # offset 0 means start at first led\n        # divisor 1 means every led\n        grovepi.chainableRgbLed_modulo(pin, 0, 1)\n        time.sleep(.5)\n\n        # change color to white (fully on)\n        grovepi.storeColor(255,255,255)\n        time.sleep(.5)\n\n        # set all leds white\n        grovepi.chainableRgbLed_modulo(pin, 0, 1)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 4b) Set using modulo - every 2\n\n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set every 2nd led to red\n        grovepi.chainableRgbLed_modulo(pin, 0, 2)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n\n        print \nTest 4c) Set using modulo - every 2, offset 1\n\n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set every 2nd led to green, offset 1\n        grovepi.chainableRgbLed_modulo(pin, 1, 2)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 4d) Set using modulo - every 3, offset 0\n\n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set every 3nd led to red\n        grovepi.chainableRgbLed_modulo(pin, 0, 3)\n        time.sleep(.5)\n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set every 3nd led to green, offset 1\n        grovepi.chainableRgbLed_modulo(pin, 1, 3)\n        time.sleep(.5)\n\n        # change color to blue\n        grovepi.storeColor(0,0,255)\n        time.sleep(.5)\n\n        # set every 3nd led to blue, offset 2\n        grovepi.chainableRgbLed_modulo(pin, 2, 3)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 4e) Set using modulo - every 3, offset 1\n\n\n        # change color to yellow\n        grovepi.storeColor(255,255,0)\n        time.sleep(.5)\n\n        # set every 4nd led to yellow\n        grovepi.chainableRgbLed_modulo(pin, 1, 3)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n\n        print \nTest 4f) Set using modulo - every 3, offset 2\n\n\n        # change color to magenta\n        grovepi.storeColor(255,0,255)\n        time.sleep(.5)\n\n        # set every 4nd led to magenta\n        grovepi.chainableRgbLed_modulo(pin, 2, 3)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 5a) Set level 6\n\n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set leds 1-6 to green\n        grovepi.write_i2c_block(0x04,[95,pin,6,0])\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print \nTest 5b) Set level 7 - reverse\n\n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set leds 4-10 to red\n        grovepi.write_i2c_block(0x04,[95,pin,7,1])\n        time.sleep(.5)\n\n\n    except KeyboardInterrupt:\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        break\n    except IOError:\n        print \nError\n\n\n\n\n\n\n\n\u8bf7\u6ce8\u610f\uff0c\u60a8\u6709\u4ee5\u4e0b\u9700\u8981\u5173\u6ce8\u7684\u4e8b\u9879\uff1a\n\n\n\n\n    pin = 7         #setting up the output pin\n    numleds = 1     #how many leds you plug\n\n\n\n\n\n\n\u60a8\u8fd8\u53ef\u4ee5\u5728 grovepi.py \u4e2d\u770b\u5230\u6240\u6709\u7684\u65b9\u6cd5\uff1a\n\n\n\n\n    storeColor(red, green, blue)\n    chainableRgbLed_init(pin, numLeds)\n    chainableRgbLed_test(pin, numLeds, testColor)\n    chainableRgbLed_pattern(pin, pattern, whichLed)\n    chainableRgbLed_modulo(pin, offset, divisor)\n    chainableRgbLed_setLevel(pin, level, reverse)\n\n\n\n\n5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\n    sudo python grove_chainable_rgb_led.py\n\n\n\n6.\u5982\u679c\u60a8\u7684 Grove pi \u6ca1\u6709\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u8bf7\u66f4\u65b0\u56fa\u4ef6\uff0c\u5426\u5219\u6b64\u6f14\u793a\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\n\n    cd yourpath/GrovePi/Firmware\n    sudo ./firmware_update.sh\n\n\n\n\u4f7f\u7528 Beaglebone Green\n\n\n\u8981\u5f00\u59cb\u7f16\u8f91 BBG \u4e0a\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528 Cloud9 IDE\u3002\n\n\n\u4f5c\u4e3a\u719f\u6089 Cloud9 IDE \u7684\u7b80\u5355\u7ec3\u4e60\uff0c\u4e00\u4e2a\u597d\u7684\u5f00\u59cb\u662f\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u95ea\u70c1 BeagleBone \u4e0a\u7684 4 \u4e2a\u53ef\u7f16\u7a0b\u7684 LED \u706f\u3002\n\n\n\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 Cloud9 IDE\uff0c\u8bf7\u6309\u7167 \nlink\n.\n\n\n\u6b65\u9aa41\n \u5c06 Grove-UART \u63d2\u5ea7\u8bbe\u7f6e\u4e3a Grove - GPIO Socket\uff0c\u53ea\u9700\u6309\u7167 \n\u94fe\u63a5\n.\n\u3002\n\n\n\u6b65\u9aa42\n \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u201c+\u201d \u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\n\n\n\n\n\n\n\u6b65\u9aa43\n \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684\u7f16\u8f91\u5668\u4e2d\n\n\nimport time\nimport Adafruit_BBIO.GPIO as GPIO\n\u00a0\nCLK_PIN = \nP9_22\n\nDATA_PIN = \nP9_21\n\nNUMBER_OF_LEDS = 1\n\u00a0\nclass ChainableLED():\n    def __init__(self, clk_pin, data_pin, number_of_leds):\n        self.__clk_pin = clk_pin\n        self.__data_pin = data_pin\n        self.__number_of_leds = number_of_leds\n\u00a0\n        GPIO.setup(self.__clk_pin, GPIO.OUT)\n        GPIO.setup(self.__data_pin, GPIO.OUT)\n\u00a0\n        for i in range(self.__number_of_leds):\n            self.setColorRGB(i, 0, 0, 0)\n\u00a0\n    def clk(self):\n        GPIO.output(self.__clk_pin, GPIO.LOW)\n        time.sleep(0.00002)\n        GPIO.output(self.__clk_pin, GPIO.HIGH)\n        time.sleep(0.00002)\n\u00a0\n    def sendByte(self, b):\n        \nSend one bit at a time, starting with the MSB\n\n        for i in range(8):\n            # If MSB is 1, write one and clock it, else write 0 and clock\n            if (b \n 0x80) != 0:\n                GPIO.output(self.__data_pin, GPIO.HIGH)\n            else:\n                GPIO.output(self.__data_pin, GPIO.LOW)\n            self.clk()\n\u00a0\n            # Advance to the next bit to send\n            b = b \n 1\n\u00a0\n    def sendColor(self, red, green, blue):\n        \nStart by sending a byte with the format \n1 1 /B7 /B6 /G7 /G6 /R7 /R6\n \n\n        #prefix = B11000000\n        prefix = 0xC0\n        if (blue \n 0x80) == 0:     \n            #prefix |= B00100000\n            prefix |= 0x20\n        if (blue \n 0x40) == 0:     \n            #prefix |= B00010000\n            prefix |= 0x10\n        if (green \n 0x80) == 0:    \n            #prefix |= B00001000\n            prefix |= 0x08\n        if (green \n 0x40) == 0:    \n            #prefix |= B00000100\n            prefix |= 0x04\n        if (red \n 0x80) == 0:      \n            #prefix |= B00000010\n            prefix |= 0x02\n        if (red \n 0x40) == 0:      \n            #prefix |= B00000001\n            prefix |= 0x01\n        self.sendByte(prefix)\n\u00a0\n        # Now must send the 3 colors\n        self.sendByte(blue)\n        self.sendByte(green)\n        self.sendByte(red)\n\u00a0\n    def setColorRGB(self, led, red, green, blue):\n        # Send data frame prefix (32x \n0\n)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n\u00a0\n        # Send color data for each one of the leds\n        for i in range(self.__number_of_leds):\n            \n\n            if i == led:\n                _led_state[i*3 + _CL_RED] = red;\n                _led_state[i*3 + _CL_GREEN] = green;\n                _led_state[i*3 + _CL_BLUE] = blue;\n            sendColor(_led_state[i*3 + _CL_RED],\n                      _led_state[i*3 + _CL_GREEN],\n                      _led_state[i*3 + _CL_BLUE]);\n            \n\n            self.sendColor(red, green, blue)\n\u00a0\n        # Terminate data frame (32x \n0\n)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n\u00a0\n\u00a0\n# Note: Use P9_22(UART2_RXD) and P9_21(UART2_TXD) as GPIO.\n# Connect the Grove - Chainable RGB LED to UART Grove port of Beaglebone Green.\nif __name__ == \n__main__\n:\n    rgb_led = ChainableLED(CLK_PIN, DATA_PIN, NUMBER_OF_LEDS)\n\u00a0\n    while True:\n        # The first parameter: NUMBER_OF_LEDS - 1; Other parameters: the RGB values.\n        rgb_led.setColorRGB(0, 255, 0, 0)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 0, 255, 0)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 0, 0, 255)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 0, 255, 255)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 255, 0, 255)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 255, 255, 0)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 255, 255, 255)\n        time.sleep(2)\n\n\n\n\n\u6b65\u9aa44\n \u901a\u8fc7\u5355\u51fb\u78c1\u76d8\u56fe\u6807\u4fdd\u5b58\u6587\u4ef6\uff0c\u5e76\u4e3a\u6587\u4ef6\u63d0\u4f9b.py \u6269\u5c55\u540d\u3002\n\n\n\u6b65\u9aa45\n \u5c06 Grove Chainable RGB LED \u8fde\u63a5\u5230 BBG \u4e0a\u7684 \nGrove UART\n \u7aef\u53e3\u3002\n\n\n\u6b65\u9aa46\n \u8fd0\u884c\u4ee3\u7801\u3002 \u60a8\u4f1a\u53d1\u73b0 RGB LED \u6bcf 2 \u79d2\u949f\u66f4\u6539\u4e00\u6b21\u989c\u8272\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Library]\nChainable RGB LED Library for the P9813\n\n\n[Library]\nGithub repository for Chainable RGB LED Library (new)\n\n\n[Eagle]\nChainable RGB LED eagle file V1\n\n\n[Eagle]\nChainable RGB LED eagle file V2\n\n\n[PDF]\nChainable RGB LED SCH file V1\n\n\n[PDF]\nChainable RGB LED SCH file V2\n\n\n[PDF]\nChainable RGB LED PCB file V1\n\n\n[PDF]\nChainable RGB LED PCB file V2\n\n\n[Datasheet]\nP9813 Datasheet", 
            "title": "Grove-Chainable RGB LED"
        }, 
        {
            "location": "/Grove-Chainable_RGB_LED/#_1", 
            "text": "\u7248\u672c\u8c03\u6574  \u63cf\u8ff0  \u53d1\u5e03\u65e5\u671f  \u8d2d\u4e70\u65b9\u5f0f      v1  \u521d\u6b21\u516c\u5f00\u53d1\u5e03\uff08\u6d4b\u8bd5\u7248\uff09  2011\u5e745\u67085\u65e5  \u65e0    v2  \u7528 P9813S14 \u66ff\u6362 P9813S16\uff0c\u5e76\u5c06 Grove \u8fde\u63a5\u5668\u4ece\u5782\u76f4\u66f4\u6539\u4e3a\u6c34\u5e73  2016\u5e744\u670819\u65e5  \u9a6c\u4e0a\u8d2d\u4e70", 
            "title": "\u7248\u672c\u4fe1\u606f"
        }, 
        {
            "location": "/Grove-Chainable_RGB_LED/#_2", 
            "text": "\u5de5\u4f5c\u7535\u538b\uff1a5V  \u5de5\u4f5c\u7535\u6d41\uff1a20mA  \u901a\u8baf\u534f\u8bae\uff1a\u4e32\u53e3    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Chainable_RGB_LED/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Chainable_RGB_LED/#_3", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u5f0f"
        }, 
        {
            "location": "/Grove-Chainable_RGB_LED/#arduino", 
            "text": "\u5f53\u60a8\u83b7\u5f97 Grove - Chainble RGB LED \u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u8003\u8651\u5982\u4f55\u70b9\u4eae\u5b83\u3002 \u73b0\u5728\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u8fd9\u4e2a\u6f14\u793a\uff1a\u4f7f RGB \u706f\u91cc\u7684\u989c\u8272\u5faa\u73af\u7684\u53d1\u5149\u3002  \u8981\u5b8c\u6210\u6b64\u6f14\u793a\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a Grove - Chainable RGB LED\u3002 \u8bf7\u6ce8\u610f\uff0c\u4e00\u4e2aGrove - Chainable RGB LED\u7684  IN  \u63a5\u53e3\u5e94\u8fde\u63a5\u5230  Grove - Base Shield \u7684  D7 / D8 \uff0c\u5176  OUT  \u63a5\u53e3\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a Grove - Chainable RGB LED \u7684  IN  \u63a5\u53e3\uff0c\u8fd9\u6837\u53ef\u4ee5\u8fde\u63a5\u66f4\u591a\u7684 LED\u3002   \u4e0b\u8f7d  Chainable LED \u5e93  \u5e76\u5c06\u5176\u5b89\u88c5\u5230 Arduino \u5e93\u3002 \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5 Arduino \u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002  \u901a\u8fc7\u8def\u5f84\u6253\u5f00\u793a\u4f8b CycleThroughColors\uff1a File\uff08\u6587\u4ef6\uff09-  Examples\uff08\u793a\u4f8b\uff09-  ChainableLED_master  \u5e76\u5c06\u5176\u4e0a\u4f20\u5230 Seeeduino\u3002       /*\n     * Example of using the ChainableRGB library for controlling a Grove RGB.\n     * This code cycles through all the colors in an uniform way. This is accomplished using a HSB color space.\n     */\n    #include  ChainableLED.h \n\n    #define NUM_LEDS  5\n\n    ChainableLED leds(7, 8, NUM_LEDS);\n\n    void setup()\n    {\n    }\n\n    float hue = 0.0;\n    boolean up = true;\n\n    void loop()\n    {\n      for (byte i=0; i NUM_LEDS; i++)\n        leds.setColorHSB(i, hue, 1.0, 0.5);\n\n      delay(50);\n\n      if (up)\n        hue+= 0.025;\n      else\n        hue-= 0.025;\n\n      if (hue =1.0   up)\n        up = false;\n      else if (hue =0.0  \u00a0!up)\n        up = true;\n    }  \u60a8\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u60c5\u51b5\uff1a\u4e24\u4e2aLED\u7684\u989c\u8272\u5c06\u4e00\u81f4\u5730\u6e10\u53d8\u3002  \u6269\u5c55\u8bbe\u8ba1\uff1a \n\u57fa\u4e8e Chainable LED \u5e93 \uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u8fd9\u4e2a\u6f14\u793a\uff1aRGB \u706f\u7684\u989c\u8272\u968f  Grove - temperature \u6d4b\u91cf\u7684\u6e29\u5ea6\u503c\u800c\u53d1\u751f\u53d8\u5316\u3002 \u5f53\u6e29\u5ea6\u4e3a25\u81f332\u2103\u65f6\uff0cRGB \u989c\u8272\u4ece\u7eff\u8272\u53d8\u4e3a\u7ea2\u8272\u3002\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002      // demo of temperature -  rgbLED\n    // temperature form 25 - 32, rgbLed from green -  red\n    // Grove-temperature plu to A0\n    // LED plug to D7,D8\n\n    #include  Streaming.h \n    #include  ChainableLED.h \n\n    #define TEMPUP 32\n    #define TEMPDOWN 25\n\n    ChainableLED leds(7, 8, 1); // connect to pin7 and pin8 , one led\n\n    int getAnalog() // get value from A0\n    {\n        int sum = 0;\n        for(int i=0; i 32; i++)\n        {\n            sum += analogRead(A0);\n        }\n\n        return sum 5;\n    }\n\n    float getTemp() // get temperature\n    {\n        float temperature = 0.0;\n        float resistance = 0.0;\n        int B = 3975; //B value of the thermistor\n\n        int a = getAnalog();\n\n        resistance = (float)(1023-a)*10000/a; //get the resistance of the sensor;\n        temperature = 1/(log(resistance/10000)/B+1/298.15)-273.15; //convert to temperature via datasheet\u00a0;\n        return temperature;\n    }\n\n    void ledLight(int dta) // light led\n    {\n\n        dta = dta/4; // 0 - 255\n\n        int colorR = dta;\n        int colorG = 255-dta;\n        int colorB = 0;\n\n        leds.setColorRGB(0, colorR, colorG, colorB);\n    }\n\n    void setup()\n    {\n        Serial.begin(38400);\n        cout    hello world\u00a0!    endl;\n    }\n\n    void loop()\n    {\n        float temp = getTemp();\n        int nTemp = temp*100;\n\n        nTemp = nTemp   TEMPUP*100\u00a0? TEMPUP*100\u00a0: (nTemp   TEMPDOWN*100\u00a0? TEMPDOWN*100\u00a0: nTemp);\n        nTemp = map(nTemp, TEMPDOWN*100, TEMPUP*100, 0, 1023);\n        ledLight(nTemp);\n        delay(100);\n    }", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Chainable_RGB_LED/#raspberry-pi", 
            "text": "1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a raspberry pi \u548c\u4e00\u4e2a grovepi \u6216 grovepi +\u3002  2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002  3.\u786c\u4ef6\u8fde\u63a5   \u4f7f\u7528 grove \u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165 grovepi socket  D7 \u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55\uff1a      cd yourpath/GrovePi/Software/Python/   \u627e\u5230\u8fd9\u884c\u4ee3\u7801      nano grove_chainable_rgb_led.py   #  Ctrl+x  to exit #       import time\n    import grovepi\n\n    # Connect first LED in Chainable RGB LED chain to digital port D7\n    # In: CI,DI,VCC,GND\n    # Out: CO,DO,VCC,GND\n    pin = 7\n\n    # I have 10 LEDs connected in series with the first connected to the GrovePi and the last not connected\n    # First LED input socket connected to GrovePi, output socket connected to second LED input and so on\n    numleds = 1  \n\n    grovepi.pinMode(pin, OUTPUT )\n    time.sleep(1)\n\n    # Chainable RGB LED methods\n    # grovepi.storeColor(red, green, blue)\n    # grovepi.chainableRgbLed_init(pin, numLeds)\n    # grovepi.chainableRgbLed_test(pin, numLeds, testColor)\n    # grovepi.chainableRgbLed_pattern(pin, pattern, whichLed)\n    # grovepi.chainableRgbLed_modulo(pin, offset, divisor)\n    # grovepi.chainableRgbLed_setLevel(pin, level, reverse)\n\n    # test colors used in grovepi.chainableRgbLed_test()\n    testColorBlack = 0   # 0b000 #000000\n    testColorBlue = 1    # 0b001 #0000FF\n    testColorGreen = 2   # 0b010 #00FF00\n    testColorCyan = 3    # 0b011 #00FFFF\n    testColorRed = 4     # 0b100 #FF0000\n    testColorMagenta = 5 # 0b101 #FF00FF\n    testColorYellow = 6  # 0b110 #FFFF00\n    testColorWhite = 7   # 0b111 #FFFFFF\n\n    # patterns used in grovepi.chainableRgbLed_pattern()\n    thisLedOnly = 0\n    allLedsExceptThis = 1\n    thisLedAndInwards = 2\n    thisLedAndOutwards = 3\n\n    try:\n\n        print  Test 1) Initialise \n\n        # init chain of leds\n        grovepi.chainableRgbLed_init(pin, numleds)\n        time.sleep(.5)\n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set led 1 to green\n        grovepi.chainableRgbLed_pattern(pin, thisLedOnly, 0)\n        time.sleep(.5)\n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set led 10 to red\n        grovepi.chainableRgbLed_pattern(pin, thisLedOnly, 9)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 2a) Test Patterns - black \n\n        # test pattern 0 - black (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(1)\n\n\n        print  Test 2b) Test Patterns - blue \n\n        # test pattern 1 blue\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlue)\n        time.sleep(1)\n\n\n        print  Test 2c) Test Patterns - green \n\n        # test pattern 2 green\n        grovepi.chainableRgbLed_test(pin, numleds, testColorGreen)\n        time.sleep(1)\n\n\n        print  Test 2d) Test Patterns - cyan \n\n        # test pattern 3 cyan\n        grovepi.chainableRgbLed_test(pin, numleds, testColorCyan)\n        time.sleep(1)\n\n\n        print  Test 2e) Test Patterns - red \n\n        # test pattern 4 red\n        grovepi.chainableRgbLed_test(pin, numleds, testColorRed)\n        time.sleep(1)\n\n\n        print  Test 2f) Test Patterns - magenta \n\n        # test pattern 5 magenta\n        grovepi.chainableRgbLed_test(pin, numleds, testColorMagenta)\n        time.sleep(1)\n\n\n        print  Test 2g) Test Patterns - yellow \n\n        # test pattern 6 yellow\n        grovepi.chainableRgbLed_test(pin, numleds, testColorYellow)\n        time.sleep(1)\n\n\n        print  Test 2h) Test Patterns - white \n\n        # test pattern 7 white\n        grovepi.chainableRgbLed_test(pin, numleds, testColorWhite)\n        time.sleep(1)\n\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 3a) Set using pattern - this led only \n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set led 3 to red\n        grovepi.chainableRgbLed_pattern(pin, thisLedOnly, 2)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 3b) Set using pattern - all leds except this \n\n        # change color to blue\n        grovepi.storeColor(0,0,255)\n        time.sleep(.5)\n\n        # set all leds except for 3 to blue\n        grovepi.chainableRgbLed_pattern(pin, allLedsExceptThis, 3)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 3c) Set using pattern - this led and inwards \n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set leds 1-3 to green\n        grovepi.chainableRgbLed_pattern(pin, thisLedAndInwards, 2)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 3d) Set using pattern - this led and outwards \n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set leds 7-10 to green\n        grovepi.chainableRgbLed_pattern(pin, thisLedAndOutwards, 6)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 4a) Set using modulo - all leds \n\n        # change color to black (fully off)\n        grovepi.storeColor(0,0,0)\n        time.sleep(.5)\n\n        # set all leds black\n        # offset 0 means start at first led\n        # divisor 1 means every led\n        grovepi.chainableRgbLed_modulo(pin, 0, 1)\n        time.sleep(.5)\n\n        # change color to white (fully on)\n        grovepi.storeColor(255,255,255)\n        time.sleep(.5)\n\n        # set all leds white\n        grovepi.chainableRgbLed_modulo(pin, 0, 1)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 4b) Set using modulo - every 2 \n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set every 2nd led to red\n        grovepi.chainableRgbLed_modulo(pin, 0, 2)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n\n        print  Test 4c) Set using modulo - every 2, offset 1 \n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set every 2nd led to green, offset 1\n        grovepi.chainableRgbLed_modulo(pin, 1, 2)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 4d) Set using modulo - every 3, offset 0 \n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set every 3nd led to red\n        grovepi.chainableRgbLed_modulo(pin, 0, 3)\n        time.sleep(.5)\n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set every 3nd led to green, offset 1\n        grovepi.chainableRgbLed_modulo(pin, 1, 3)\n        time.sleep(.5)\n\n        # change color to blue\n        grovepi.storeColor(0,0,255)\n        time.sleep(.5)\n\n        # set every 3nd led to blue, offset 2\n        grovepi.chainableRgbLed_modulo(pin, 2, 3)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 4e) Set using modulo - every 3, offset 1 \n\n        # change color to yellow\n        grovepi.storeColor(255,255,0)\n        time.sleep(.5)\n\n        # set every 4nd led to yellow\n        grovepi.chainableRgbLed_modulo(pin, 1, 3)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n\n        print  Test 4f) Set using modulo - every 3, offset 2 \n\n        # change color to magenta\n        grovepi.storeColor(255,0,255)\n        time.sleep(.5)\n\n        # set every 4nd led to magenta\n        grovepi.chainableRgbLed_modulo(pin, 2, 3)\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 5a) Set level 6 \n\n        # change color to green\n        grovepi.storeColor(0,255,0)\n        time.sleep(.5)\n\n        # set leds 1-6 to green\n        grovepi.write_i2c_block(0x04,[95,pin,6,0])\n        time.sleep(.5)\n\n        # pause so you can see what happened\n        time.sleep(2)\n\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        time.sleep(.5)\n\n\n        print  Test 5b) Set level 7 - reverse \n\n        # change color to red\n        grovepi.storeColor(255,0,0)\n        time.sleep(.5)\n\n        # set leds 4-10 to red\n        grovepi.write_i2c_block(0x04,[95,pin,7,1])\n        time.sleep(.5)\n\n\n    except KeyboardInterrupt:\n        # reset (all off)\n        grovepi.chainableRgbLed_test(pin, numleds, testColorBlack)\n        break\n    except IOError:\n        print  Error    \u8bf7\u6ce8\u610f\uff0c\u60a8\u6709\u4ee5\u4e0b\u9700\u8981\u5173\u6ce8\u7684\u4e8b\u9879\uff1a       pin = 7         #setting up the output pin\n    numleds = 1     #how many leds you plug   \u60a8\u8fd8\u53ef\u4ee5\u5728 grovepi.py \u4e2d\u770b\u5230\u6240\u6709\u7684\u65b9\u6cd5\uff1a       storeColor(red, green, blue)\n    chainableRgbLed_init(pin, numLeds)\n    chainableRgbLed_test(pin, numLeds, testColor)\n    chainableRgbLed_pattern(pin, pattern, whichLed)\n    chainableRgbLed_modulo(pin, offset, divisor)\n    chainableRgbLed_setLevel(pin, level, reverse)  5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b     sudo python grove_chainable_rgb_led.py  6.\u5982\u679c\u60a8\u7684 Grove pi \u6ca1\u6709\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u8bf7\u66f4\u65b0\u56fa\u4ef6\uff0c\u5426\u5219\u6b64\u6f14\u793a\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002     cd yourpath/GrovePi/Firmware\n    sudo ./firmware_update.sh", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-Chainable_RGB_LED/#beaglebone-green", 
            "text": "\u8981\u5f00\u59cb\u7f16\u8f91 BBG \u4e0a\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528 Cloud9 IDE\u3002  \u4f5c\u4e3a\u719f\u6089 Cloud9 IDE \u7684\u7b80\u5355\u7ec3\u4e60\uff0c\u4e00\u4e2a\u597d\u7684\u5f00\u59cb\u662f\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u95ea\u70c1 BeagleBone \u4e0a\u7684 4 \u4e2a\u53ef\u7f16\u7a0b\u7684 LED \u706f\u3002  \u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 Cloud9 IDE\uff0c\u8bf7\u6309\u7167  link .  \u6b65\u9aa41  \u5c06 Grove-UART \u63d2\u5ea7\u8bbe\u7f6e\u4e3a Grove - GPIO Socket\uff0c\u53ea\u9700\u6309\u7167  \u94fe\u63a5 .\n\u3002  \u6b65\u9aa42  \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u201c+\u201d \u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002    \u6b65\u9aa43  \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684\u7f16\u8f91\u5668\u4e2d  import time\nimport Adafruit_BBIO.GPIO as GPIO\n\u00a0\nCLK_PIN =  P9_22 \nDATA_PIN =  P9_21 \nNUMBER_OF_LEDS = 1\n\u00a0\nclass ChainableLED():\n    def __init__(self, clk_pin, data_pin, number_of_leds):\n        self.__clk_pin = clk_pin\n        self.__data_pin = data_pin\n        self.__number_of_leds = number_of_leds\n\u00a0\n        GPIO.setup(self.__clk_pin, GPIO.OUT)\n        GPIO.setup(self.__data_pin, GPIO.OUT)\n\u00a0\n        for i in range(self.__number_of_leds):\n            self.setColorRGB(i, 0, 0, 0)\n\u00a0\n    def clk(self):\n        GPIO.output(self.__clk_pin, GPIO.LOW)\n        time.sleep(0.00002)\n        GPIO.output(self.__clk_pin, GPIO.HIGH)\n        time.sleep(0.00002)\n\u00a0\n    def sendByte(self, b):\n         Send one bit at a time, starting with the MSB \n        for i in range(8):\n            # If MSB is 1, write one and clock it, else write 0 and clock\n            if (b   0x80) != 0:\n                GPIO.output(self.__data_pin, GPIO.HIGH)\n            else:\n                GPIO.output(self.__data_pin, GPIO.LOW)\n            self.clk()\n\u00a0\n            # Advance to the next bit to send\n            b = b   1\n\u00a0\n    def sendColor(self, red, green, blue):\n         Start by sending a byte with the format  1 1 /B7 /B6 /G7 /G6 /R7 /R6   \n        #prefix = B11000000\n        prefix = 0xC0\n        if (blue   0x80) == 0:     \n            #prefix |= B00100000\n            prefix |= 0x20\n        if (blue   0x40) == 0:     \n            #prefix |= B00010000\n            prefix |= 0x10\n        if (green   0x80) == 0:    \n            #prefix |= B00001000\n            prefix |= 0x08\n        if (green   0x40) == 0:    \n            #prefix |= B00000100\n            prefix |= 0x04\n        if (red   0x80) == 0:      \n            #prefix |= B00000010\n            prefix |= 0x02\n        if (red   0x40) == 0:      \n            #prefix |= B00000001\n            prefix |= 0x01\n        self.sendByte(prefix)\n\u00a0\n        # Now must send the 3 colors\n        self.sendByte(blue)\n        self.sendByte(green)\n        self.sendByte(red)\n\u00a0\n    def setColorRGB(self, led, red, green, blue):\n        # Send data frame prefix (32x  0 )\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n\u00a0\n        # Send color data for each one of the leds\n        for i in range(self.__number_of_leds):\n             \n            if i == led:\n                _led_state[i*3 + _CL_RED] = red;\n                _led_state[i*3 + _CL_GREEN] = green;\n                _led_state[i*3 + _CL_BLUE] = blue;\n            sendColor(_led_state[i*3 + _CL_RED],\n                      _led_state[i*3 + _CL_GREEN],\n                      _led_state[i*3 + _CL_BLUE]);\n             \n            self.sendColor(red, green, blue)\n\u00a0\n        # Terminate data frame (32x  0 )\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n        self.sendByte(0x00)\n\u00a0\n\u00a0\n# Note: Use P9_22(UART2_RXD) and P9_21(UART2_TXD) as GPIO.\n# Connect the Grove - Chainable RGB LED to UART Grove port of Beaglebone Green.\nif __name__ ==  __main__ :\n    rgb_led = ChainableLED(CLK_PIN, DATA_PIN, NUMBER_OF_LEDS)\n\u00a0\n    while True:\n        # The first parameter: NUMBER_OF_LEDS - 1; Other parameters: the RGB values.\n        rgb_led.setColorRGB(0, 255, 0, 0)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 0, 255, 0)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 0, 0, 255)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 0, 255, 255)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 255, 0, 255)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 255, 255, 0)\n        time.sleep(2)\n        rgb_led.setColorRGB(0, 255, 255, 255)\n        time.sleep(2)  \u6b65\u9aa44  \u901a\u8fc7\u5355\u51fb\u78c1\u76d8\u56fe\u6807\u4fdd\u5b58\u6587\u4ef6\uff0c\u5e76\u4e3a\u6587\u4ef6\u63d0\u4f9b.py \u6269\u5c55\u540d\u3002  \u6b65\u9aa45  \u5c06 Grove Chainable RGB LED \u8fde\u63a5\u5230 BBG \u4e0a\u7684  Grove UART  \u7aef\u53e3\u3002  \u6b65\u9aa46  \u8fd0\u884c\u4ee3\u7801\u3002 \u60a8\u4f1a\u53d1\u73b0 RGB LED \u6bcf 2 \u79d2\u949f\u66f4\u6539\u4e00\u6b21\u989c\u8272\u3002", 
            "title": "\u4f7f\u7528 Beaglebone Green"
        }, 
        {
            "location": "/Grove-Chainable_RGB_LED/#_4", 
            "text": "[Library] Chainable RGB LED Library for the P9813  [Library] Github repository for Chainable RGB LED Library (new)  [Eagle] Chainable RGB LED eagle file V1  [Eagle] Chainable RGB LED eagle file V2  [PDF] Chainable RGB LED SCH file V1  [PDF] Chainable RGB LED SCH file V2  [PDF] Chainable RGB LED PCB file V1  [PDF] Chainable RGB LED PCB file V2  [Datasheet] P9813 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/", 
            "text": "Grove - I2C Motor Driver V1.3\uff08\u6700\u65b0\u7248\u672c\uff09\u53ef\u4ee5\u76f4\u63a5\u63a7\u5236\u6b65\u8fdb\u7535\u673a\u6216\u76f4\u6d41\u7535\u673a\u3002 \u5b83\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u53cc\u901a\u9053 H \u6865\u9a71\u52a8\u82af\u7247 \uff08L298N\uff09 \uff0c\u53ef\u4ee5\u5904\u7406\u9ad8\u8fbe\u6bcf\u901a\u9053 2A \u7684\u7535\u6d41\uff0c\u7531 Atmel ATmega8L \u63a7\u5236\uff0c\u5b83\u5904\u7406\u4e0e Arduino \u7b49\u5e73\u53f0\u7684 I2C \u901a\u4fe1\u3002 \u4e24\u53f0\u7535\u673a\u53ef\u4ee5\u540c\u65f6\u9a71\u52a8\uff0c\u540c\u65f6\u8bbe\u5b9a\u4e3a\u4e0d\u540c\u7684\u901f\u5ea6\u548c\u65b9\u5411\u3002 \u5b83\u53ef\u4ee5\u4e3a\u4e24\u4e2a\u6709\u5237\u76f4\u6d41\u7535\u673a\u6216\u4e00\u4e2a 4 \u7ebf\u5236\u7684\u4e24\u76f8\u6b65\u8fdb\u7535\u673a\u4f9b\u7535\u3002 \u5b83\u9700\u8981 6V \u81f3 15V \u7535\u6e90\u4e3a\u7535\u673a\u4f9b\u7535\uff0c\u5e76\u5177\u6709\u677f\u8f7d 5V \u7a33\u538b\u5668\uff0c\u53ef\u4e3a I2C \u603b\u7ebf\u548c Arduino \u4f9b\u7535\uff08\u53ef\u7531\u8df3\u7ebf\u9009\u62e9\uff09\u3002 \u6240\u6709\u9a71\u52a8\u7ebf\u8def\u90fd\u53d7\u5230\u53cd\u7535\u52a8\u52bf\u7684\u4e8c\u6781\u7ba1\u4fdd\u62a4\u3002\n\n\n\u4e0e \nGrove - I2C motor driver V1.2\n\u5bf9\u6bd4\uff0c V1.3 \u4f7f\u7528\u6237\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u63a7\u5236\u6b65\u8fdb\u7535\u673a\u3002 \u60a8\u4e0d\u9700\u8981\u4e00\u76f4\u63a7\u5236\u6b65\u8fdb\u5668\uff0c\u53ea\u9700\u53d1\u9001\u547d\u4ee4\u5230I2C motor driver V1.2\u9a71\u52a8\u6b65\u8fdb\u7535\u673a\uff0c\u5b83\u5c06\u4f5c\u4e3a\u60a8\u7684\u547d\u4ee4\uff0c\u8fd9\u5c06\u8282\u7701\u60a8\u7684 Arduino \u8d44\u6e90\u5e76\u7b80\u5316\u60a8\u7684\u4ee3\u7801\u3002\n\n\n\n\n\u7248\u672c\u4fe1\u606f\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u7248\u672c\u63cf\u8ff0\n\n\n\u53d1\u5e03\u65f6\u95f4\n\n\n\n\n\n\n\n\n\n\nv1.0\n\n\n\u9996\u6b21\u516c\u5f00\u53d1\u5e03\n\n\n2012\u5e745\u670817\u65e5\n\n\n\n\n\n\nv1.2\n\n\n\u4fee\u6539\u7531\u786c\u4ef6\u8bbe\u7f6e\u7684 I2C \u5730\u5740\n\n\n2012\u5e747\u67082\u65e5\n\n\n\n\n\n\nv1.3\n\n\n\u4fee\u6539\u56fa\u4ef6\u4ee5\u652f\u6301\u79bb\u7ebf Stepper\n\n\n2013\u5e742\u670818\u65e5\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\nGrove \u517c\u5bb9\n\n\nI2C \u63a5\u53e3\n\n\n\u53ef\u8c03\u7535\u673a\u8f6c\u901f\u548c\u8f6c\u52a8\u65b9\u5411\n\n\n\u786c\u4ef6\u53ef\u66f4\u6539\u4ece\u7ad9\u5730\u5740\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u6807\u51c6\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n6\n\n\n\n\n-\n\n\n\n\n15\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u5355\u901a\u9053\u6700\u5927\u8f93\u51fa\u7535\u6d41\n\n\n\n\n0.5\n\n\n\n\nA\n\n\n\n\n\n\n\n\n\u6700\u5927\u603b\u7535\u6d41\n\n\n\n\n1.0\n\n\n\n\nA\n\n\n\n\n\n\n\n\nI2C \u603b\u7ebf\u4e0a\u7684\u8f93\u5165/\u8f93\u51fa\u7535\u538b\n\n\n\n\n5\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u901a\u8baf\u534f\u8bae\n\n\n\n\nI2C\n\n\n\n\n/\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n78M05 IC:\n  5V \u7a33\u538b\u5668\n\n\nL298 IC:\n \u53cc\u5168\u6865\u9a71\u52a8\n\n\nATmega8 IC:\n \u63a7\u5236\u7535\u673a\u65cb\u8f6c.\n\n\n\n\n\u6ce8\u610f\n\n\u87ba\u4e1d\u7aef\u5b50\u4e0a\u7684\u8f93\u5165\u7535\u538b\u8c03\u8282\u5230 5V \uff0c\u5e76\u901a\u8fc7\u8df3\u7ebf \uff08J4\uff09 \u8fde\u63a5\u5230 I2C\u7684  + 5V \u3002 \u5982\u679c\u4f7f\u7528\u87ba\u4e1d\u7aef\u5b50\u7684\u5916\u90e8\u7535\u6e90\u548c I2C \u63a5\u5934\u8fde\u63a5\u7684\u7535\u6e90\uff0c\u8bf7\u62c6\u4e0b\u8df3\u7ebf\u3002 \u5982\u679c\u5c06 5V \u63d0\u4f9b\u7ed9 I2C \u603b\u7ebf\uff0c\u5219\u4f7f\u7528\u8df3\u7ebf\u3002\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u673a\u5668\u4eba\n\n\n\u5bb6\u7528 RC \u8f66\n\n\n\u98ce\u6247\n\n\n\u5927\u529f\u7387LED\u7167\u660e\u603b\u7ebf\u3002\n\n\n\n\n\n\u8b66\u544a\n\n\n\n\u8be5\u677f\u5728\u5de5\u4f5c\u7535\u6d41\u8d85\u8fc7 1A \u65f6\u677f\u5b50\u5c06\u4f1a\u975e\u5e38\u70ed\u3002 \u8bf7\u52ff\u89e6\u6478\uff01\n\n\n\n\u5165\u95e8\n\n\nI2C Motor Driver \u53ef\u4ee5\u63a7\u5236\u57fa\u4e8e\u82af\u7247 L298 \u7684\u7535\u673a\u3002 L298 \u4e0d\u4ec5\u662f\u53cc\u7535\u673a\u9a71\u52a8\u5668\uff0c\u5b83\u662f\u53cc H \u6865\u3002  h \u6865\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u7279\u5b9a\u7684\u6676\u4f53\u7ba1\u8bbe\u7f6e\uff0c\u5141\u8bb8\u60a8\u5207\u6362\u7535\u6d41\u65b9\u5411\u3002 \u8fde\u63a5\u7535\u673a\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u6cbf\u53cc\u5411\u65cb\u8f6c; \u901a\u8fc7 PWM \u8f93\u5165\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Arduino \u4ee5\u4efb\u610f\u901f\u5ea6\u65cb\u8f6c\u3002 \u56e0\u4e3a L298 \u67092\u4e2a H \u6865\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u901a\u8fc7\u5728\u4e0d\u540c\u7684\u65b9\u5411\u4e0a\u65cb\u8f6c\u6bcf\u4e2a\u8f6e\u5b50\u6765\u4f7f\u673a\u5668\u4eba\u8f6c\u52a8\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5411\u524d\u548c\u5411\u540e\u65cb\u8f6c\u3002\n\n\n1. \u5b89\u88c5\u5e93\n\n\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002\n\n\n\n\n\u76f4\u63a5\u8fd0\u884c\u547d\u4ee4\u6216\u6216\u8005\u4e0b\u8f7d\nzip \u6587\u4ef6\n\n\n  git clone https://github.com/Seeed-Studio/Grove_I2C_Motor_Driver_v1_3.git\n\n\n\n\n\n\n\u53ea\u9700\u5c06 Grove_I2C_Motor_Driver_v1_3 \u6587\u4ef6\u5939\u590d\u5236\u5230 Arduino \u5e93\u96c6\u5408\u4e2d\u5373\u53ef\u3002 \u4f8b\u5982\uff0c arduino-1.6.12 / \u5e93\u3002 \u4e0b\u6b21\u8fd0\u884c Arduino IDE \u65f6\uff0c\u60a8\u5c06\u5728 \nfile(\u6587\u4ef6) - \nSketch - \n Include Library - \n Grove_I2C_Motor_Driver_v1_3\n  \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u9009\u9879\u3002 \u5728 Grove_I2C_Motor_Driver_v1_3 \u4e2d\u67e5\u770b\u5305\u542b\u7684\u793a\u4f8b\u3002 \u6211\u4eec\u63d0\u4f9b\u76f4\u6d41\u548c\u6b65\u8fdb\u7535\u673a\u63a7\u5236\u793a\u4f8b\u3002\n\n\n\n\n\n2. \u8bbe\u7f6e I2C \u7535\u673a\u9a71\u52a8\u7a0b\u5e8f\u7684\u5730\u5740\n\n\n\n\n\n\n\u901a\u8fc7\u62e8\u53f7\u5f00\u5173\u8bbe\u7f6e\u5730\u5740\u662f\u6dfb\u52a0\u5230\u65b0\u7684 I2C \u7535\u673a\u9a71\u52a8\u7a0b\u5e8f\u7684\u65b0\u529f\u80fd\u3002\n\n\n\n\n\n\n\n\n\u7136\u540e\u5c06\u7a0b\u5e8f\u4e2d\u7684\u5730\u5740\u8bbe\u7f6e\u4e0e I2C \u7535\u673a\u9a71\u52a8\u7a0b\u5e8f\u4e0a\u7684\u5730\u5740\u8bbe\u7f6e\u4fdd\u6301\u4e00\u81f4\u3002 \u7a0b\u5e8f\u4e2d\u7684\u9ed8\u8ba4\u5730\u5740\u8bbe\u7f6e\u4e3a 0x0f \u3002\n\n\n\n\n\n\n// default I2C address is 0x0f\n#define I2C_ADDRESS 0x0f\n\nvoid setup()\n{\n    Motor.begin(I2C_ADDRESS);\n}\n\n\n\n\n3. \u9a71\u52a8 2 \u53f0\u76f4\u6d41\u7535\u673a\n\n\n\n\n\n\n\u6ce8\u610f\n\n\u9996\u5148\u8981\u6ce8\u610f\u7684\u662f\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u5916\u90e8\u7535\u6e90\u4f5c\u4e3a\u60a8\u7684\u76f4\u6d41\u7535\u673a\u3002  Arduino \u4e0a\u7684 5V \u5f15\u811a\u65e0\u6cd5\u63d0\u4f9b\u8db3\u591f\u7684\u7535\u529b\u6765\u9a71\u52a8 2 \u4e2a\u7535\u673a\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u635f\u574f Arduino \u3002\n\n\n\n\n\n\n\u63a7\u5236\u76f4\u6d41\u7535\u673a\u6709\u4e24\u9879\u529f\u80fd\uff1a\n\n\n\n\n// Set the speed of a motor, speed is equal to duty cycle here\nvoid speed(unsigned char motor_id, int _speed);\n\n// Stop one motor\nvoid stop(unsigned char motor_id);\n\n\n\n\n\u4f7f\u7528 speed\uff08\uff09\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u6309\u6240\u9700\u7684\u901f\u5ea6\u9a71\u52a8\u4e00\u53f0\u7535\u673a\u3002\n\n\n\n\n\n\nmotor_id\n  \u8868\u793a\u8981\u4f7f\u7528\u7684\u7535\u673a\u3002 \u60a8\u53ef\u4ee5\u586b\u5199 MOTOR1 \u6216 MOTOR2 \u3002\n\n\n\n\n\n\n_speed\n  \u8868\u793a\u60a8\u8bbe\u7f6e\u5230\u7535\u673a\u7684\u901f\u5ea6\u3002 \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u586b -100\u301c100\u3002 \u5f53_speed\n 0\u65f6\uff0c\u76f4\u6d41\u7535\u673a\u987a\u65f6\u9488\u8fd0\u884c\uff0c\u800c_speed \n0\u65f6\uff0c\u76f4\u6d41\u7535\u673a\u9006\u65f6\u9488\u8fd0\u8f6c\u3002 \u800c_speed\u7684\u7edd\u5bf9\u503c\u8d8a\u5927\uff0c\u76f4\u6d41\u7535\u673a\u7684\u901f\u5ea6\u8d8a\u5feb\u3002\n\n\n\n\n\n\n\u4f7f\u7528 stop\uff08\uff09\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u505c\u6b62\u6b63\u5728\u8fd0\u884c\u7684\u76f4\u6d41\u7535\u52a8\u673a\u3002\n\n\n\n\nmotor_id\n \u8868\u793a\u8981\u4f7f\u7528\u7684\u7535\u673a\u3002 \u60a8\u53ef\u4ee5\u586b\u5199 MOTOR1 \u6216 MOTOR2 \u3002\n\n\n\n\n4. \u9a71\u52a8\u6b65\u8fdb\u7535\u673a\n\n\n\u4ee5 \n24BYJ48 \u6b65\u8fdb\u7535\u673a\n\u4e3a\u4f8b\uff0c\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n\n\n\n24BYJ48\n \u6b65\u8fdb\u7535\u673a\u548c I2C \u7535\u673a\u9a71\u52a8\u5668\u4e4b\u95f4\u7684\u8fde\u63a5\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n\n\n\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u9a71\u52a8\u6b65\u8fdb\u7535\u673a\u7684\u529f\u80fd\u3002\n\n\n\n\n// Drive a stepper motor\nvoid StepperRun(int _step);\n\n\n\n\n_step\n  \u8868\u793a\u60a8\u8bbe\u7f6e\u4e3a\u6b65\u8fdb\u7535\u673a\u8fd0\u884c\u7684\u6b65\u9aa4\u3002 \u53ef\u4ee5\u586b-1024\u301c1024\u3002 \u5f53_step\n 0\u65f6\uff0c\u6b65\u8fdb\u7535\u673a\u987a\u65f6\u9488\u8fd0\u884c\uff0c\u800c_step \n0\u65f6\uff0c\u6b65\u8fdb\u7535\u673a\u9006\u65f6\u9488\u8fd0\u884c\u3002 \u5f53_step\u4e3a512 / -512\u65f6\uff0c\u6b65\u8fdb\u7535\u673a\u5c06\u8fd0\u884c\u4e00\u6574\u5708\uff0c\u5982\u679c_step\u4e3a1024 / -1024\uff0c\u5219\u6b65\u8fdb\u7535\u673a\u5c06\u8fd0\u884c2\u5708\u3002 \u6b65\u8fdb\u7535\u673a\u5728\u5b8c\u6210\u6b65\u9aa4\u540e\u4f1a\u81ea\u52a8\u505c\u6b62\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - I2C Motor Driver V1.3 in Eagle Format\n\n\nGrove - I2C Motor Driver V1.3 PCB in PDF Format\n\n\nGrove - I2C Motor Driver V1.3 Schematic in PDF Format\n\n\nGrove - I2C Motor Driver V1.3 Library\n\n\nL298 Datasheet\n\n\n78M05 Datasheet\n\n\nOn-Chip Firmware for I2C motor driver", 
            "title": "Grove-I2C Motor Driver V1.3"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#_1", 
            "text": "\u7248\u672c  \u7248\u672c\u63cf\u8ff0  \u53d1\u5e03\u65f6\u95f4      v1.0  \u9996\u6b21\u516c\u5f00\u53d1\u5e03  2012\u5e745\u670817\u65e5    v1.2  \u4fee\u6539\u7531\u786c\u4ef6\u8bbe\u7f6e\u7684 I2C \u5730\u5740  2012\u5e747\u67082\u65e5    v1.3  \u4fee\u6539\u56fa\u4ef6\u4ee5\u652f\u6301\u79bb\u7ebf Stepper  2013\u5e742\u670818\u65e5", 
            "title": "\u7248\u672c\u4fe1\u606f"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#_2", 
            "text": "Grove \u517c\u5bb9  I2C \u63a5\u53e3  \u53ef\u8c03\u7535\u673a\u8f6c\u901f\u548c\u8f6c\u52a8\u65b9\u5411  \u786c\u4ef6\u53ef\u66f4\u6539\u4ece\u7ad9\u5730\u5740    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#_3", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u6807\u51c6\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u5de5\u4f5c\u7535\u538b  \n6  \n-  \n15  \nVDC    \n\u5355\u901a\u9053\u6700\u5927\u8f93\u51fa\u7535\u6d41  \n0.5  \nA    \n\u6700\u5927\u603b\u7535\u6d41  \n1.0  \nA    \nI2C \u603b\u7ebf\u4e0a\u7684\u8f93\u5165/\u8f93\u51fa\u7535\u538b  \n5  \nV    \n\u901a\u8baf\u534f\u8bae  \nI2C  \n/", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#_4", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#_5", 
            "text": "78M05 IC:   5V \u7a33\u538b\u5668  L298 IC:  \u53cc\u5168\u6865\u9a71\u52a8  ATmega8 IC:  \u63a7\u5236\u7535\u673a\u65cb\u8f6c.   \u6ce8\u610f \n\u87ba\u4e1d\u7aef\u5b50\u4e0a\u7684\u8f93\u5165\u7535\u538b\u8c03\u8282\u5230 5V \uff0c\u5e76\u901a\u8fc7\u8df3\u7ebf \uff08J4\uff09 \u8fde\u63a5\u5230 I2C\u7684  + 5V \u3002 \u5982\u679c\u4f7f\u7528\u87ba\u4e1d\u7aef\u5b50\u7684\u5916\u90e8\u7535\u6e90\u548c I2C \u63a5\u5934\u8fde\u63a5\u7684\u7535\u6e90\uff0c\u8bf7\u62c6\u4e0b\u8df3\u7ebf\u3002 \u5982\u679c\u5c06 5V \u63d0\u4f9b\u7ed9 I2C \u603b\u7ebf\uff0c\u5219\u4f7f\u7528\u8df3\u7ebf\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#_6", 
            "text": "\u673a\u5668\u4eba  \u5bb6\u7528 RC \u8f66  \u98ce\u6247  \u5927\u529f\u7387LED\u7167\u660e\u603b\u7ebf\u3002   \u8b66\u544a  \u8be5\u677f\u5728\u5de5\u4f5c\u7535\u6d41\u8d85\u8fc7 1A \u65f6\u677f\u5b50\u5c06\u4f1a\u975e\u5e38\u70ed\u3002 \u8bf7\u52ff\u89e6\u6478\uff01", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#_7", 
            "text": "I2C Motor Driver \u53ef\u4ee5\u63a7\u5236\u57fa\u4e8e\u82af\u7247 L298 \u7684\u7535\u673a\u3002 L298 \u4e0d\u4ec5\u662f\u53cc\u7535\u673a\u9a71\u52a8\u5668\uff0c\u5b83\u662f\u53cc H \u6865\u3002  h \u6865\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u7279\u5b9a\u7684\u6676\u4f53\u7ba1\u8bbe\u7f6e\uff0c\u5141\u8bb8\u60a8\u5207\u6362\u7535\u6d41\u65b9\u5411\u3002 \u8fde\u63a5\u7535\u673a\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u6cbf\u53cc\u5411\u65cb\u8f6c; \u901a\u8fc7 PWM \u8f93\u5165\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Arduino \u4ee5\u4efb\u610f\u901f\u5ea6\u65cb\u8f6c\u3002 \u56e0\u4e3a L298 \u67092\u4e2a H \u6865\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u901a\u8fc7\u5728\u4e0d\u540c\u7684\u65b9\u5411\u4e0a\u65cb\u8f6c\u6bcf\u4e2a\u8f6e\u5b50\u6765\u4f7f\u673a\u5668\u4eba\u8f6c\u52a8\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5411\u524d\u548c\u5411\u540e\u65cb\u8f6c\u3002", 
            "title": "\u5165\u95e8"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#1", 
            "text": "\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\u3002   \u76f4\u63a5\u8fd0\u884c\u547d\u4ee4\u6216\u6216\u8005\u4e0b\u8f7d zip \u6587\u4ef6    git clone https://github.com/Seeed-Studio/Grove_I2C_Motor_Driver_v1_3.git   \u53ea\u9700\u5c06 Grove_I2C_Motor_Driver_v1_3 \u6587\u4ef6\u5939\u590d\u5236\u5230 Arduino \u5e93\u96c6\u5408\u4e2d\u5373\u53ef\u3002 \u4f8b\u5982\uff0c arduino-1.6.12 / \u5e93\u3002 \u4e0b\u6b21\u8fd0\u884c Arduino IDE \u65f6\uff0c\u60a8\u5c06\u5728  file(\u6587\u4ef6) -  Sketch -   Include Library -   Grove_I2C_Motor_Driver_v1_3   \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u9009\u9879\u3002 \u5728 Grove_I2C_Motor_Driver_v1_3 \u4e2d\u67e5\u770b\u5305\u542b\u7684\u793a\u4f8b\u3002 \u6211\u4eec\u63d0\u4f9b\u76f4\u6d41\u548c\u6b65\u8fdb\u7535\u673a\u63a7\u5236\u793a\u4f8b\u3002", 
            "title": "1. \u5b89\u88c5\u5e93"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#2-i2c", 
            "text": "\u901a\u8fc7\u62e8\u53f7\u5f00\u5173\u8bbe\u7f6e\u5730\u5740\u662f\u6dfb\u52a0\u5230\u65b0\u7684 I2C \u7535\u673a\u9a71\u52a8\u7a0b\u5e8f\u7684\u65b0\u529f\u80fd\u3002     \u7136\u540e\u5c06\u7a0b\u5e8f\u4e2d\u7684\u5730\u5740\u8bbe\u7f6e\u4e0e I2C \u7535\u673a\u9a71\u52a8\u7a0b\u5e8f\u4e0a\u7684\u5730\u5740\u8bbe\u7f6e\u4fdd\u6301\u4e00\u81f4\u3002 \u7a0b\u5e8f\u4e2d\u7684\u9ed8\u8ba4\u5730\u5740\u8bbe\u7f6e\u4e3a 0x0f \u3002    // default I2C address is 0x0f\n#define I2C_ADDRESS 0x0f\n\nvoid setup()\n{\n    Motor.begin(I2C_ADDRESS);\n}", 
            "title": "2. \u8bbe\u7f6e I2C \u7535\u673a\u9a71\u52a8\u7a0b\u5e8f\u7684\u5730\u5740"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#3-2", 
            "text": "\u6ce8\u610f \n\u9996\u5148\u8981\u6ce8\u610f\u7684\u662f\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u5916\u90e8\u7535\u6e90\u4f5c\u4e3a\u60a8\u7684\u76f4\u6d41\u7535\u673a\u3002  Arduino \u4e0a\u7684 5V \u5f15\u811a\u65e0\u6cd5\u63d0\u4f9b\u8db3\u591f\u7684\u7535\u529b\u6765\u9a71\u52a8 2 \u4e2a\u7535\u673a\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u635f\u574f Arduino \u3002   \u63a7\u5236\u76f4\u6d41\u7535\u673a\u6709\u4e24\u9879\u529f\u80fd\uff1a   // Set the speed of a motor, speed is equal to duty cycle here\nvoid speed(unsigned char motor_id, int _speed);\n\n// Stop one motor\nvoid stop(unsigned char motor_id);  \u4f7f\u7528 speed\uff08\uff09\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u6309\u6240\u9700\u7684\u901f\u5ea6\u9a71\u52a8\u4e00\u53f0\u7535\u673a\u3002    motor_id   \u8868\u793a\u8981\u4f7f\u7528\u7684\u7535\u673a\u3002 \u60a8\u53ef\u4ee5\u586b\u5199 MOTOR1 \u6216 MOTOR2 \u3002    _speed   \u8868\u793a\u60a8\u8bbe\u7f6e\u5230\u7535\u673a\u7684\u901f\u5ea6\u3002 \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u586b -100\u301c100\u3002 \u5f53_speed  0\u65f6\uff0c\u76f4\u6d41\u7535\u673a\u987a\u65f6\u9488\u8fd0\u884c\uff0c\u800c_speed  0\u65f6\uff0c\u76f4\u6d41\u7535\u673a\u9006\u65f6\u9488\u8fd0\u8f6c\u3002 \u800c_speed\u7684\u7edd\u5bf9\u503c\u8d8a\u5927\uff0c\u76f4\u6d41\u7535\u673a\u7684\u901f\u5ea6\u8d8a\u5feb\u3002    \u4f7f\u7528 stop\uff08\uff09\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u505c\u6b62\u6b63\u5728\u8fd0\u884c\u7684\u76f4\u6d41\u7535\u52a8\u673a\u3002   motor_id  \u8868\u793a\u8981\u4f7f\u7528\u7684\u7535\u673a\u3002 \u60a8\u53ef\u4ee5\u586b\u5199 MOTOR1 \u6216 MOTOR2 \u3002", 
            "title": "3. \u9a71\u52a8 2 \u53f0\u76f4\u6d41\u7535\u673a"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#4", 
            "text": "\u4ee5  24BYJ48 \u6b65\u8fdb\u7535\u673a \u4e3a\u4f8b\uff0c\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b\u56fe\u6240\u793a\uff1a   24BYJ48  \u6b65\u8fdb\u7535\u673a\u548c I2C \u7535\u673a\u9a71\u52a8\u5668\u4e4b\u95f4\u7684\u8fde\u63a5\u5982\u4e0b\u6240\u793a\uff1a    \u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u9a71\u52a8\u6b65\u8fdb\u7535\u673a\u7684\u529f\u80fd\u3002   // Drive a stepper motor\nvoid StepperRun(int _step);  _step   \u8868\u793a\u60a8\u8bbe\u7f6e\u4e3a\u6b65\u8fdb\u7535\u673a\u8fd0\u884c\u7684\u6b65\u9aa4\u3002 \u53ef\u4ee5\u586b-1024\u301c1024\u3002 \u5f53_step  0\u65f6\uff0c\u6b65\u8fdb\u7535\u673a\u987a\u65f6\u9488\u8fd0\u884c\uff0c\u800c_step  0\u65f6\uff0c\u6b65\u8fdb\u7535\u673a\u9006\u65f6\u9488\u8fd0\u884c\u3002 \u5f53_step\u4e3a512 / -512\u65f6\uff0c\u6b65\u8fdb\u7535\u673a\u5c06\u8fd0\u884c\u4e00\u6574\u5708\uff0c\u5982\u679c_step\u4e3a1024 / -1024\uff0c\u5219\u6b65\u8fdb\u7535\u673a\u5c06\u8fd0\u884c2\u5708\u3002 \u6b65\u8fdb\u7535\u673a\u5728\u5b8c\u6210\u6b65\u9aa4\u540e\u4f1a\u81ea\u52a8\u505c\u6b62\u3002", 
            "title": "4. \u9a71\u52a8\u6b65\u8fdb\u7535\u673a"
        }, 
        {
            "location": "/Grove-I2C_Motor_Driver_V1.3/#_8", 
            "text": "Grove - I2C Motor Driver V1.3 in Eagle Format  Grove - I2C Motor Driver V1.3 PCB in PDF Format  Grove - I2C Motor Driver V1.3 Schematic in PDF Format  Grove - I2C Motor Driver V1.3 Library  L298 Datasheet  78M05 Datasheet  On-Chip Firmware for I2C motor driver", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Haptic_Motor/", 
            "text": "Grove - Haptic motor \u662f\u4e0e \nDRV2605L\n \u96c6\u6210\u7684 Grove \u6a21\u5757\uff0c\u5b83\u5c06\u4e3a\u60a8\u5e26\u6765\u66f4\u597d\u7684\u9879\u76ee\u4f53\u9a8c\u3002 \u8be5\u7535\u673a\u4e13\u4e3a\u5404\u79cd\u6548\u679c\u800c\u8bbe\u8ba1\uff0c\u4f8b\u5982\u4e0a\u4e0b\u6446\u52a8\u3001\u9707\u52a8\u7684\uff0c\u53ef\u7a7f\u6234\u5f0f\u53ca\u5176\u4ed6 IoT \u8bbe\u5907\u3002 \u73b0\u5728\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u5e93\uff0c\u53ef\u4ee5\u6a21\u62df 123 \u79cd\u632f\u52a8\u6a21\u5f0f\uff0c\u8fd9\u5c06\u4f7f\u60a8\u9879\u76ee\u5236\u4f5c\u66f4\u5feb\u6377\u3002 \u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u9a71\u52a8\u5668 DRV2605L \u5f00\u53d1\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\uff0c\u5b83\u5728\u542f\u52a8\u65f6\u95f4\u548c\u4e2d\u65ad\u65f6\u95f4\u65b9\u9762\u4f1a\u6709\u66f4\u9ad8\u7684\u6267\u884c\u6027\u80fd\uff0c\u5e76\u53ef\u901a\u8fc7\u5171\u4eab I2C \u517c\u5bb9\u603b\u7ebf\u6216 PWM \u8f93\u5165\u4fe1\u53f7\u8fdb\u884c\u8bbf\u95ee\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u80fd\u591f\u8bc6\u522b\u5f88\u591a\u632f\u52a8\u6548\u679c\u3002\n\n\n\u80fd\u591f\u52a0\u5feb\u9879\u76ee\u5236\u4f5c\u5f00\u53d1\u8fc7\u7a0b\u3002\n\n\n\u6709123 \u79cd\u632f\u52a8\u6a21\u5f0f\u548c\u6613\u4e8e\u4f7f\u7528\u7684\u5e93\u3002\n\n\n\u6709\u5f3a\u5927\u7684\u9a71\u52a8\u7a0b\u5e8f\u6765\u914d\u7f6e\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u53c2\u6570\u89c4\u683c\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3.3\u301c5.0 V\n\n\n\n\n\n\n\u7535\u538b\uff08\u6700\u5927\u529f\u7387\uff09\n\n\n50\u301c100 mV\n\n\n\n\n\n\n\u6700\u5927\u529f\u7387\n\n\n750 mW\n\n\n\n\n\n\nI2C \u9891\u7387\n\n\n100 kHz\n\n\n\n\n\n\n\u632f\u52a8\u6548\u5e94\n\n\n123 \u79cd\n\n\n\n\n\n\n\u9a71\u52a8\u5668\n\n\nDRV2605L\n\n\n\n\n\n\n\u63a5\u53e3\n\n\nI\n2\nC\n\n\n\n\n\n\n\u9ed8\u8ba4 I\n2\nC \u5730\u5740\n\n\n0x5A\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u521b\u65b0\u5e94\u7528\n\n\n\n\n\u624b\u673a\uff0c\u5e73\u677f\u7535\u8111\n\n\n\u53ef\u7a7f\u6234\u8bbe\u5907\u3002\n\n\n\u9065\u63a7\u5668\uff0c\u542f\u7528\u89e6\u63a7\u529f\u80fd\u7684\u8bbe\u5907\u3002\n\n\n\u5de5\u4e1a\u4eba\u673a\u754c\u9762\u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\u6b63\u89c6\u56fe:\n\n\n\n\n\u540e\u89c6\u56fe:\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u6ce8\u610f\n\n\u672c\u8282\u4ec5\u663e\u793a\u5982\u4f55\u6784\u5efa\u57fa\u672c\u5f00\u53d1\u73af\u5883\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6307\u5357\u4e3a\u9879\u76ee\u6784\u5efa\u5f00\u53d1\u73af\u5883\uff1a\n\n\n\n\n\u521b\u5efa IDE\n\n\n\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6307\u5357\u6765\u6784\u5efa\u9002\u5f53\u7684IDE\uff1a\n\n\nWindows \u5165\u95e8\n\n\nMac OS X \u5165\u95e8\n\n\n\n\n\u6ce8\u610f\n\n\u7531\u4e8e \nSeeeduino\n \u4e0e Arduino \u517c\u5bb9\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u6ca1\u6709 Seeeduino \u677f\uff0c Arduino \u677f\u4e5f\u53ef\u4ee5\u4ee3\u66ff\u3002\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u6ce8\u610f\n\n\na. \u786e\u4fdd\u60a8\u5df2\u7ecf\u901a\u8fc7\u4e4b\u524d\u7684\u6b65\u9aa4\u6210\u529f\u6784\u5efa\u4e86\u5f00\u53d1\u73af\u5883.\n\n\nb.\u786e\u4fdd\u60a8\u9009\u62e9\u4e86\u7535\u8def\u677f\u7684 Arduino Uno \u548c COM \u7aef\u53e3\u3002 \u5e76\u8fde\u63a5\u5230 Seeeduino \u677f\u4e0a\u7684 I\n2\nC \u63a5\u53e3\u548c Haptic motor.\n\n\n\n\n\n\n\n\u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801\n\n\n\n\n\u60a8\u53ef\u4ee5\u4e0b\u8f7d \n\u793a\u4f8b\u4ee3\u7801\n \u548c\u5e93\u6216\u5934\u6587\u4ef6\u3002\n\n\n\u70b9\u51fb\nGithub\n \u4e0a\u540d\u4e3a \u201cDownload Zip\u201d \u7684\u6309\u94ae\u3002\n\n\n\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684 ZIP \u6587\u4ef6\u3002\n\n\n\u5728\u89e3\u538b\u6587\u4ef6\u540d\u4e2d\u5220\u9664 \u201c-master\u201d \u4e24\u6b21\u3002\n\n\n\u5c06\u6587\u4ef6\u5939 Grove_Haptic_Motor \u590d\u5236\u5230\u5e93\u6587\u4ef6\u5939\u4e2d\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4e0e Sketchbook \u4f4d\u7f6e\u76f8\u540c\uff0c\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb \n\u6587\u4ef6\n\u9996\u9009\u9879\n \u627e\u5230\uff09\u3002\u5728Windows\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u88ab\u79f0\u4e3a\u201c\u6211\u7684\u6587\u6863 Arduino \\\u5e93\u201d\u3002 \u5bf9\u4e8eMac\u7528\u6237\u6765\u8bf4\uff0c\u5b83\u53ef\u80fd\u88ab\u79f0\u4e3a\u201c\u6587\u6863/ Arduino /\u5e93\u201d\u3002 \u5728Linux\u4e0a\uff0c\u5b83\u5c06\u662f\u60a8\u7684 sketchbook \u4e2d\u7684\u201c\u5e93\u201d\u6587\u4ef6\u5939\u3002\n\n\n\u5c06\u6587\u4ef6 \ndrv2605.cpp\n \u548c\u6587\u4ef6 \ndrv2605.h\n \u590d\u5236\u5230\u5176\u4e0a\u4e00\u7ea7\u76ee\u5f55\u4e2d\u3002\n\n\n\n\n\u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801\n\n\n\n\n\u6ce8\u610f\n\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528\n Seeeduino 4.2 \n\u4f5c\u4e3a\u4e0e Arduino \u517c\u5bb9\u7684\u5b9e\u9a8c\u677f\u3002\n\n\n\n\n\n\n\u5c0f\u63d0\u793a\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\n Base Shield v2 \n\u4f5c\u4e3a\u6269\u5c55\u677f\uff0c\u8fd9\u5c06\u4f7f\u60a8\u7684\u6a21\u5757\u8fde\u63a5\u53d8\u5f97\u7b80\u5355\u3002\n\n\n\n\n\n\n\u8b66\u544a\n\n\u5728 DRV2605L \u9a71\u52a8\u5668\u4f7f\u7528\u4e2d\u8bf7\u4e0d\u8981\u89e6\u6478\uff0c\u5426\u5219\u8fd9\u6709\u53ef\u80fd\u4f1a\u635f\u574f\u5b83\u3002\n\n\n\n\n\n\n\n\n\u786e\u4fdd haptic motor \u548c\u4e3b\u63a7\u677f\u826f\u597d\u8fde\u63a5\u3002\n\n\n\u5c06\u793a\u4f8b\u4ee3\u7801 drv2605.ino \u52a0\u8f7d\u5230\u89e3\u538b\u7f29\u6587\u4ef6\u7684\u793a\u4f8b\u6587\u4ef6\u4e2d\u3002\n\n\n\u901a\u8fc7\u5355\u51fb \nProject\uff08\u9879\u76ee\uff09-\n Upload\uff08CTRL + U\uff09\n \u5c06\u4ee3\u7801\u8f7d\u5165\u5230\u4e3b\u63a7\u677f\u4e0a\u3002\n\n\n\u4e0a\u4f20\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u8ba9 haptic motor \u7a33\u5b9a\u7684\u8fd0\u884c\u4e86\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nSchematic files in \nEagle format\n and \nPDF format\n.\n\n\nMore about drive circuit DRV2605L\n.\n\n\nGit repository", 
            "title": "Grove-Haptic Motor"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_1", 
            "text": "\u80fd\u591f\u8bc6\u522b\u5f88\u591a\u632f\u52a8\u6548\u679c\u3002  \u80fd\u591f\u52a0\u5feb\u9879\u76ee\u5236\u4f5c\u5f00\u53d1\u8fc7\u7a0b\u3002  \u6709123 \u79cd\u632f\u52a8\u6a21\u5f0f\u548c\u6613\u4e8e\u4f7f\u7528\u7684\u5e93\u3002  \u6709\u5f3a\u5927\u7684\u9a71\u52a8\u7a0b\u5e8f\u6765\u914d\u7f6e\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\u3002    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_2", 
            "text": "\u9879\u76ee  \u53c2\u6570      \u5de5\u4f5c\u7535\u538b  3.3\u301c5.0 V    \u7535\u538b\uff08\u6700\u5927\u529f\u7387\uff09  50\u301c100 mV    \u6700\u5927\u529f\u7387  750 mW    I2C \u9891\u7387  100 kHz    \u632f\u52a8\u6548\u5e94  123 \u79cd    \u9a71\u52a8\u5668  DRV2605L    \u63a5\u53e3  I 2 C    \u9ed8\u8ba4 I 2 C \u5730\u5740  0x5A", 
            "title": "\u53c2\u6570\u89c4\u683c"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_4", 
            "text": "\u624b\u673a\uff0c\u5e73\u677f\u7535\u8111  \u53ef\u7a7f\u6234\u8bbe\u5907\u3002  \u9065\u63a7\u5668\uff0c\u542f\u7528\u89e6\u63a7\u529f\u80fd\u7684\u8bbe\u5907\u3002  \u5de5\u4e1a\u4eba\u673a\u754c\u9762\u3002", 
            "title": "\u521b\u65b0\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_5", 
            "text": "\u6b63\u89c6\u56fe:   \u540e\u89c6\u56fe:", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_6", 
            "text": "\u6ce8\u610f \n\u672c\u8282\u4ec5\u663e\u793a\u5982\u4f55\u6784\u5efa\u57fa\u672c\u5f00\u53d1\u73af\u5883\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6307\u5357\u4e3a\u9879\u76ee\u6784\u5efa\u5f00\u53d1\u73af\u5883\uff1a", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#ide", 
            "text": "\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6307\u5357\u6765\u6784\u5efa\u9002\u5f53\u7684IDE\uff1a  Windows \u5165\u95e8  Mac OS X \u5165\u95e8   \u6ce8\u610f \n\u7531\u4e8e  Seeeduino  \u4e0e Arduino \u517c\u5bb9\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u6ca1\u6709 Seeeduino \u677f\uff0c Arduino \u677f\u4e5f\u53ef\u4ee5\u4ee3\u66ff\u3002", 
            "title": "\u521b\u5efa IDE"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_7", 
            "text": "\u6ce8\u610f  a. \u786e\u4fdd\u60a8\u5df2\u7ecf\u901a\u8fc7\u4e4b\u524d\u7684\u6b65\u9aa4\u6210\u529f\u6784\u5efa\u4e86\u5f00\u53d1\u73af\u5883.  b.\u786e\u4fdd\u60a8\u9009\u62e9\u4e86\u7535\u8def\u677f\u7684 Arduino Uno \u548c COM \u7aef\u53e3\u3002 \u5e76\u8fde\u63a5\u5230 Seeeduino \u677f\u4e0a\u7684 I 2 C \u63a5\u53e3\u548c Haptic motor.", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_8", 
            "text": "\u60a8\u53ef\u4ee5\u4e0b\u8f7d  \u793a\u4f8b\u4ee3\u7801  \u548c\u5e93\u6216\u5934\u6587\u4ef6\u3002  \u70b9\u51fb Github  \u4e0a\u540d\u4e3a \u201cDownload Zip\u201d \u7684\u6309\u94ae\u3002  \u89e3\u538b\u7f29\u4e0b\u8f7d\u7684 ZIP \u6587\u4ef6\u3002  \u5728\u89e3\u538b\u6587\u4ef6\u540d\u4e2d\u5220\u9664 \u201c-master\u201d \u4e24\u6b21\u3002  \u5c06\u6587\u4ef6\u5939 Grove_Haptic_Motor \u590d\u5236\u5230\u5e93\u6587\u4ef6\u5939\u4e2d\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4e0e Sketchbook \u4f4d\u7f6e\u76f8\u540c\uff0c\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb  \u6587\u4ef6 \u9996\u9009\u9879  \u627e\u5230\uff09\u3002\u5728Windows\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u88ab\u79f0\u4e3a\u201c\u6211\u7684\u6587\u6863 Arduino \\\u5e93\u201d\u3002 \u5bf9\u4e8eMac\u7528\u6237\u6765\u8bf4\uff0c\u5b83\u53ef\u80fd\u88ab\u79f0\u4e3a\u201c\u6587\u6863/ Arduino /\u5e93\u201d\u3002 \u5728Linux\u4e0a\uff0c\u5b83\u5c06\u662f\u60a8\u7684 sketchbook \u4e2d\u7684\u201c\u5e93\u201d\u6587\u4ef6\u5939\u3002  \u5c06\u6587\u4ef6  drv2605.cpp  \u548c\u6587\u4ef6  drv2605.h  \u590d\u5236\u5230\u5176\u4e0a\u4e00\u7ea7\u76ee\u5f55\u4e2d\u3002", 
            "title": "\u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_9", 
            "text": "\u6ce8\u610f \n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528  Seeeduino 4.2  \u4f5c\u4e3a\u4e0e Arduino \u517c\u5bb9\u7684\u5b9e\u9a8c\u677f\u3002   \u5c0f\u63d0\u793a \n\u60a8\u53ef\u4ee5\u4f7f\u7528  Base Shield v2  \u4f5c\u4e3a\u6269\u5c55\u677f\uff0c\u8fd9\u5c06\u4f7f\u60a8\u7684\u6a21\u5757\u8fde\u63a5\u53d8\u5f97\u7b80\u5355\u3002   \u8b66\u544a \n\u5728 DRV2605L \u9a71\u52a8\u5668\u4f7f\u7528\u4e2d\u8bf7\u4e0d\u8981\u89e6\u6478\uff0c\u5426\u5219\u8fd9\u6709\u53ef\u80fd\u4f1a\u635f\u574f\u5b83\u3002    \u786e\u4fdd haptic motor \u548c\u4e3b\u63a7\u677f\u826f\u597d\u8fde\u63a5\u3002  \u5c06\u793a\u4f8b\u4ee3\u7801 drv2605.ino \u52a0\u8f7d\u5230\u89e3\u538b\u7f29\u6587\u4ef6\u7684\u793a\u4f8b\u6587\u4ef6\u4e2d\u3002  \u901a\u8fc7\u5355\u51fb  Project\uff08\u9879\u76ee\uff09-  Upload\uff08CTRL + U\uff09  \u5c06\u4ee3\u7801\u8f7d\u5165\u5230\u4e3b\u63a7\u677f\u4e0a\u3002  \u4e0a\u4f20\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u8ba9 haptic motor \u7a33\u5b9a\u7684\u8fd0\u884c\u4e86\u3002", 
            "title": "\u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-Haptic_Motor/#_10", 
            "text": "Schematic files in  Eagle format  and  PDF format .  More about drive circuit DRV2605L .  Git repository", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-DMX512/", 
            "text": "Grove - DMX512 \u662f\u4ece Grove \u63a5\u53e3\u5230 DMX512 \u63a5\u53e3\uff08\u5de5\u4e1a\u6807\u51c6 EIA-485 \u63a5\u53e3\uff09\u7684\u9002\u914d\u5668\u3002\u8be5\u6a21\u5757\u57fa\u4e8e\u53ef\u5e73\u8861\u4f20\u8f93\u7ebf\u8def\u5e76\u7b26\u5408 ANSI \u6807\u51c6 EIA-485 \u63a5\u53e3\u7684 SN75176 \u82af\u7247\u3002\u5bf9\u4e8e Arduino\uff0c\u73b0\u5728\u53ef\u4ee5\u65b9\u4fbf\u5730\u63a7\u5236\u821e\u53f0\u706f\u5149\u548c DMX512 \u63a7\u5236\u53f0\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\nGrove \u63a5\u53e3\u548c\u6807\u51c6 EIA-485 \u63a5\u53e3\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u4fbf\n\n\n\n\n\n\n\u5b9e\u7528\u6027\u5f3a\n\n\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\nArduino \u53ef\u4ee5\u4f7f\u7528 Grove - DXM512 \u6a21\u5757\u8f7b\u677e\u63a7\u5236 DMX512 \u8bbe\u5907\u3002\u4ee5 LED \u6c34\u6676\u9b54\u672f\u706f\u4e3a\u4f8b\u3002 \u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\u5c06 Grove-DMX512 \u7684 Grove \u63a5\u53e3\u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684 \nD3\n \u7aef\u53e3\uff0c\u5e76\u5c06  Grove - Base \u6269\u5c55\u7248\u63d2\u5165 Arduino.\n\n\n\n\n\n\n\u4f7f\u7528 DMX \u7ebf\u7f06\u5c06 Grove-DMX512 \u7684 DMX512 \u63a5\u53e3\u8fde\u63a5\u5230 LED \u6c34\u6676\u9b54\u672f\u706f\u7684 DMX IN \u63a5\u53e3\u3002 \u5e76\u4e14\u4e3a LED \u6c34\u6676\u9b54\u7403\u706f\u63d0\u4f9b\u7535\u6e90\u3002\n\n\n\n\n\n\n\u5c06 LED \u6c34\u6676\u9b54\u7403\u706f\u8bbe\u7f6e\u4e3a DMX512 \u63a7\u5236\u6a21\u5f0f\u3002 \u6b64\u65f6\u63a7\u5236\u9762\u677f\u663e\u793a \u201cA001\u201d\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\u4e0b\u8f7d \nFile: DmxSimple Library\n \u5e76\u901a\u8fc7\u8def\u5f84 \uff1a\n..  arduino-1.0.1  libraries\n \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\u3002\n\n\n\n\n\n\n\u76f4\u63a5\u6253\u5f00\u4ee3\u7801\u7684\u8def\u5f84 :\nFile(\u6587\u4ef6) -\n Example(\u793a\u4f8b) -\nDmxSimple-\nFadup1.\n\n\n\n\n\n\n\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u6709\u8da3\u7684\u573a\u666f\u3002 \u5c1d\u8bd5\u6839\u636e\u60a8\u4e2a\u4eba\u7684\u559c\u597d\u6765\u66f4\u6539\u4ee3\u7801\u3002\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\nGrove - DMX512 Eagle File\n\n\n\n\n\n\n[\u5e93\u6587\u4ef6]\nDmxSimple Library\n\n\n\n\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\nSN75176 Datasheet", 
            "title": "Grove-DMX512"
        }, 
        {
            "location": "/Grove-DMX512/#_1", 
            "text": "Grove \u63a5\u53e3\u548c\u6807\u51c6 EIA-485 \u63a5\u53e3    \u4f7f\u7528\u65b9\u4fbf    \u5b9e\u7528\u6027\u5f3a", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-DMX512/#_2", 
            "text": "Arduino \u53ef\u4ee5\u4f7f\u7528 Grove - DXM512 \u6a21\u5757\u8f7b\u677e\u63a7\u5236 DMX512 \u8bbe\u5907\u3002\u4ee5 LED \u6c34\u6676\u9b54\u672f\u706f\u4e3a\u4f8b\u3002 \u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a    \u5c06 Grove-DMX512 \u7684 Grove \u63a5\u53e3\u8fde\u63a5\u5230  Grove - Base Shield  \u7684  D3  \u7aef\u53e3\uff0c\u5e76\u5c06  Grove - Base \u6269\u5c55\u7248\u63d2\u5165 Arduino.    \u4f7f\u7528 DMX \u7ebf\u7f06\u5c06 Grove-DMX512 \u7684 DMX512 \u63a5\u53e3\u8fde\u63a5\u5230 LED \u6c34\u6676\u9b54\u672f\u706f\u7684 DMX IN \u63a5\u53e3\u3002 \u5e76\u4e14\u4e3a LED \u6c34\u6676\u9b54\u7403\u706f\u63d0\u4f9b\u7535\u6e90\u3002    \u5c06 LED \u6c34\u6676\u9b54\u7403\u706f\u8bbe\u7f6e\u4e3a DMX512 \u63a7\u5236\u6a21\u5f0f\u3002 \u6b64\u65f6\u63a7\u5236\u9762\u677f\u663e\u793a \u201cA001\u201d\u3002       \u4e0b\u8f7d  File: DmxSimple Library  \u5e76\u901a\u8fc7\u8def\u5f84 \uff1a ..  arduino-1.0.1  libraries  \u5c06\u5176\u89e3\u538b\u7f29\u5230 Arduino IDE \u7684\u5e93\u6587\u4ef6\u4e2d\u3002    \u76f4\u63a5\u6253\u5f00\u4ee3\u7801\u7684\u8def\u5f84 : File(\u6587\u4ef6) -  Example(\u793a\u4f8b) - DmxSimple- Fadup1.    \u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u6709\u8da3\u7684\u573a\u666f\u3002 \u5c1d\u8bd5\u6839\u636e\u60a8\u4e2a\u4eba\u7684\u559c\u597d\u6765\u66f4\u6539\u4ee3\u7801\u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-DMX512/#_3", 
            "text": "[Eagle \u6587\u4ef6] Grove - DMX512 Eagle File    [\u5e93\u6587\u4ef6] DmxSimple Library    [\u82af\u7247\u6570\u636e\u624b\u518c] SN75176 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-NFC/", 
            "text": "\u8fd1\u573a\u901a\u4fe1\uff08NFC\uff09\u662f\u4e00\u5957\u77ed\u8ddd\u79bb\u65e0\u7ebf\u6280\u672f\u3002 \u5b83\u5e94\u7528\u4e8e\u65e5\u5e38\u751f\u6d3b\u4e2d\uff0c\u5982\u95e8\u7981\u7cfb\u7edf\u548c\u79fb\u52a8\u652f\u4ed8\u7cfb\u7edf\u3002Grove NFC \u5177\u6709\u9ad8\u5ea6\u96c6\u6210\u7684\u6536\u53d1\u5668\u6a21\u5757 PN532\uff0c\u80fd\u591f\u5904\u7406 13.56MHz \u7684\u975e\u63a5\u89e6\u5f0f\u901a\u4fe1\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u6a21\u5757\u8bfb\u53d6\u548c\u5199\u5165 13.56MHz \u6807\u7b7e\uff0c\u6216\u4f7f\u7528\u4e24\u4e2a NFC \u5b9e\u73b0\u70b9\u5bf9\u70b9\u6570\u636e\u4ea4\u6362\u3002Grove NFC \u8bbe\u8ba1\u4e3a\u4f7f\u7528 I2C \u6216 UART \u901a\u4fe1\u534f\u8bae\uff0cUART \u662f\u9ed8\u8ba4\u6a21\u5f0f\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u5206\u914d\u4e00\u4e2a\u72ec\u7acb\u7684 PCB \u5929\u7ebf\uff0c\u53ef\u4ee5\u8f7b\u677e\u4f38\u51fa\u60a8\u4f7f\u7528\u7684\u4efb\u4f55\u5916\u58f3\uff0c\u4e3a\u60a8\u8bbe\u8ba1\u5916\u90e8\u8bbe\u8ba1\u9879\u76ee\u9884\u7559\u66f4\u591a\u7a7a\u95f4\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b : 3.3V\n\n\n\u5de5\u4f5c\u7535\u6d41 :\n\n\n\u9759\u6001\u6a21\u5f0f : 73mA\n\n\n\u8bfb\u5199\u6a21\u5f0f : 83mA\n\n\n\n\n\n\n\u652f\u6301\u4e3b\u673a\u63a5\u53e3 : I2C, UART( default )\u3002\n\n\n\u5de5\u4f5c\u4e8e 13.56MHz \u7684\u975e\u63a5\u89e6\u5f0f\u901a\u4fe1\u3002\n\n\n\u652f\u6301 ISO14443 A \u7c7b\u548c B \u7c7b\u534f\u8bae\u3002\n\n\n\u7528\u4e8e\u68c0\u6d4b NFC \u6807\u7b7e\u7684\u6700\u5927\u64cd\u4f5c\u8ddd\u79bb\u4e3a 28 \u6beb\u7c73\uff0c\u5176\u53d6\u51b3\u4e8e\u5f53\u524d\u7684\u5929\u7ebf\u5c3a\u5bf8\u3002\n\n\n\u652f\u6301 P2P \u901a\u4fe1\u3002\n\n\n\u5916\u5f62\u5c3a\u5bf8: 25.43mm x 20.35mm\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\n\u4e0b\u8f7d \nPN532 \u5e93\u6587\u4ef6\n\uff0c\u5e76\u5c06 4 \u4e2a\u6587\u4ef6\u5939( PN532, PN532_SPI, PN532_I2C and PN532_HSU )\u653e\u5165 Arduino \u7684\u5e93\u4e2d\u3002\n\n\n\u4e0b\u8f7d \nNDEF \u5e93\n, \u5c06\u5176\u653e\u5165 Arduino \u7684\u5e93\u4e2d\uff0c\u5e76\u5c06\u5176\u91cd\u547d\u540d\u4e3a NDEF\u3002\n\n\n\u6253\u5f00 Arduino IDE\uff0c\u5982\u679c Arduino IDE \u5df2\u7ecf\u6253\u5f00\uff0c\u8bf7\u91cd\u542f\u8f6f\u4ef6\u3002\n\n\n\u5728 Arduino IDE \u4e2d\uff0c\u70b9\u51fb\u83dc\u5355 : \nFile\uff08\u6587\u4ef6\uff09 -\n Example\uff08\u793a\u4f8b\uff09 -\n NDEF -\n ReadTag\n\u3002\n\n\n\u6211\u4eec\u5728 NDEF \u5e93\u4e2d\u4f7f\u7528\u4e86 I2C \u63a5\u53e3\uff0c\u56e0\u6b64\u8bf7\u901a\u8fc7\u4e00\u628a\u5c0f\u5200\u5207\u65ad P1 \u548c UART \u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u5e76\u5c06 P1 \u548c I2C \u710a\u63a5\u5728\u4e00\u8d77\u3002\n\n\n\n\n\n\n\n\nCaution\n\nGrove - NFC v1.0 \u7684\u8c03\u8bd5 \uff1a\u5728\u4f7f\u7528 I2C \u901a\u4fe1\u65f6\u6709\u4e00\u4e2a\u9519\u8bef\uff0c\u8bf7\u4f7f\u7528\u8df3\u7ebf\u6765\u8ddf\u8e2a\u8fd9\u4e9b\u8fde\u63a5\n\n\n\n\n\n\n\n\n\n\nArduino/Arduino Mega\n\n\nGrove - NFC\n\n\n\n\n\n\n\n\n\n\nSCL\n\n\nRX\n\n\n\n\n\n\nSDA\n\n\nTX\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\n5V\n\n\nVCC\n\n\n\n\n\n\n\n\n\u60a8\u4ecd\u7136\u53ef\u4ee5\u5728\u4e0d\u65ad\u5f00\u4efb\u4f55\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528 UART \u63a5\u53e3\uff0cSeeeduino Mega( Arduino Mega ) \u6216 Seeeduino lite( Arduino Leonardo )\u662f\u9996\u9009\u3002 \u4ee5\u4e0b\u662f\u4fee\u6539\u540e\u7684\u7a0b\u5e8f\u3002\n\n\n#include \nPN532_HSU.h\n\n#include \nPN532.h\n\n#include \nNfcAdapter.h\n\n\u00a0\nPN532_HSU interface(Serial1);\nNfcAdapter nfc = NfcAdapter(interface);\n\u00a0\nvoid setup(void) {\n    Serial.begin(115200);\n    Serial.println(\nNDEF Reader\n);\n    nfc.begin();\n}\n\u00a0\nvoid loop(void) {\n    Serial.println(\n\\nScan a NFC tag\\n\n);\n    if (nfc.tagPresent())\n    {\n        NfcTag tag = nfc.read();\n        tag.print();\n    }\n    delay(5000);\n}\n\n\n\n\n\n\nNote\n\n\u5982\u679c\u548c Seeeduino \u6216 Arduino UNO \u4e00\u8d77\u4f7f\u7528\u5b83\uff0c\u83b7\u53d6\u8fd4\u56de\u6d88\u606f\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u5c06\u5176\u8bbe\u7f6e\u4e3a I\n2\nC \u63a5\u53e3\u603b\u7ebf\u3002\u5728\u548c Mega \u6216 Leonardo \u4e00\u8d77\u4f7f\u7528\u5b83\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 UART \u63a5\u53e3\u603b\u7ebf\u3002 \u786e\u4fdd\u4e3a Arduino \u5e93\u4e0b\u8f7d\u4e86 PN532 \u5e93\u548c Don's NDEF \u5e93\u3002 \u60a8\u53ef\u4ee5\u5728\u6587\u4ef6\u5939 \nexample\n \u4e0b\u6d4b\u8bd5\u793a\u4f8b \nReadTag.ino\n\u3002\u5220\u9664\u7b2c1\u884c\u5230\u7b2c10\u884c\uff08\u884c  \n\\#else ......\n \u548c\u4e0a\u9762\u7684\u884c\u5230\u9876\u90e8\uff09\u3002\n\n\n\n\n\u5207\u65ad\u4ee5\u4e0b\u8fde\u63a5 :\n\n\n\n\nTP1 to UART\n\n\nTP2 to RX\n\n\nTP3 to TX\n\n\n\n\n\u710a\u63a5\u4ee5\u4e0b\u8fde\u63a5 :\n\n\n\n\nTP1 to I2C\n\n\nTP2 to SCL\n\n\nTP3 to SDA\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - NFC v1.0 EAGLE (schematic and board) files\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - NFC v1.1 EAGLE (schematic and board) files\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nPN532 Datasheet PDF", 
            "title": "Grove-NFC"
        }, 
        {
            "location": "/Grove-NFC/#_1", 
            "text": "\u5de5\u4f5c\u7535\u538b : 3.3V  \u5de5\u4f5c\u7535\u6d41 :  \u9759\u6001\u6a21\u5f0f : 73mA  \u8bfb\u5199\u6a21\u5f0f : 83mA    \u652f\u6301\u4e3b\u673a\u63a5\u53e3 : I2C, UART( default )\u3002  \u5de5\u4f5c\u4e8e 13.56MHz \u7684\u975e\u63a5\u89e6\u5f0f\u901a\u4fe1\u3002  \u652f\u6301 ISO14443 A \u7c7b\u548c B \u7c7b\u534f\u8bae\u3002  \u7528\u4e8e\u68c0\u6d4b NFC \u6807\u7b7e\u7684\u6700\u5927\u64cd\u4f5c\u8ddd\u79bb\u4e3a 28 \u6beb\u7c73\uff0c\u5176\u53d6\u51b3\u4e8e\u5f53\u524d\u7684\u5929\u7ebf\u5c3a\u5bf8\u3002  \u652f\u6301 P2P \u901a\u4fe1\u3002  \u5916\u5f62\u5c3a\u5bf8: 25.43mm x 20.35mm\u3002    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-NFC/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-NFC/#_2", 
            "text": "\u4e0b\u8f7d  PN532 \u5e93\u6587\u4ef6 \uff0c\u5e76\u5c06 4 \u4e2a\u6587\u4ef6\u5939( PN532, PN532_SPI, PN532_I2C and PN532_HSU )\u653e\u5165 Arduino \u7684\u5e93\u4e2d\u3002  \u4e0b\u8f7d  NDEF \u5e93 , \u5c06\u5176\u653e\u5165 Arduino \u7684\u5e93\u4e2d\uff0c\u5e76\u5c06\u5176\u91cd\u547d\u540d\u4e3a NDEF\u3002  \u6253\u5f00 Arduino IDE\uff0c\u5982\u679c Arduino IDE \u5df2\u7ecf\u6253\u5f00\uff0c\u8bf7\u91cd\u542f\u8f6f\u4ef6\u3002  \u5728 Arduino IDE \u4e2d\uff0c\u70b9\u51fb\u83dc\u5355 :  File\uff08\u6587\u4ef6\uff09 -  Example\uff08\u793a\u4f8b\uff09 -  NDEF -  ReadTag \u3002  \u6211\u4eec\u5728 NDEF \u5e93\u4e2d\u4f7f\u7528\u4e86 I2C \u63a5\u53e3\uff0c\u56e0\u6b64\u8bf7\u901a\u8fc7\u4e00\u628a\u5c0f\u5200\u5207\u65ad P1 \u548c UART \u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u5e76\u5c06 P1 \u548c I2C \u710a\u63a5\u5728\u4e00\u8d77\u3002     Caution \nGrove - NFC v1.0 \u7684\u8c03\u8bd5 \uff1a\u5728\u4f7f\u7528 I2C \u901a\u4fe1\u65f6\u6709\u4e00\u4e2a\u9519\u8bef\uff0c\u8bf7\u4f7f\u7528\u8df3\u7ebf\u6765\u8ddf\u8e2a\u8fd9\u4e9b\u8fde\u63a5     Arduino/Arduino Mega  Grove - NFC      SCL  RX    SDA  TX    GND  GND    5V  VCC     \u60a8\u4ecd\u7136\u53ef\u4ee5\u5728\u4e0d\u65ad\u5f00\u4efb\u4f55\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528 UART \u63a5\u53e3\uff0cSeeeduino Mega( Arduino Mega ) \u6216 Seeeduino lite( Arduino Leonardo )\u662f\u9996\u9009\u3002 \u4ee5\u4e0b\u662f\u4fee\u6539\u540e\u7684\u7a0b\u5e8f\u3002  #include  PN532_HSU.h \n#include  PN532.h \n#include  NfcAdapter.h \n\u00a0\nPN532_HSU interface(Serial1);\nNfcAdapter nfc = NfcAdapter(interface);\n\u00a0\nvoid setup(void) {\n    Serial.begin(115200);\n    Serial.println( NDEF Reader );\n    nfc.begin();\n}\n\u00a0\nvoid loop(void) {\n    Serial.println( \\nScan a NFC tag\\n );\n    if (nfc.tagPresent())\n    {\n        NfcTag tag = nfc.read();\n        tag.print();\n    }\n    delay(5000);\n}   Note \n\u5982\u679c\u548c Seeeduino \u6216 Arduino UNO \u4e00\u8d77\u4f7f\u7528\u5b83\uff0c\u83b7\u53d6\u8fd4\u56de\u6d88\u606f\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u5c06\u5176\u8bbe\u7f6e\u4e3a I 2 C \u63a5\u53e3\u603b\u7ebf\u3002\u5728\u548c Mega \u6216 Leonardo \u4e00\u8d77\u4f7f\u7528\u5b83\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 UART \u63a5\u53e3\u603b\u7ebf\u3002 \u786e\u4fdd\u4e3a Arduino \u5e93\u4e0b\u8f7d\u4e86 PN532 \u5e93\u548c Don's NDEF \u5e93\u3002 \u60a8\u53ef\u4ee5\u5728\u6587\u4ef6\u5939  example  \u4e0b\u6d4b\u8bd5\u793a\u4f8b  ReadTag.ino \u3002\u5220\u9664\u7b2c1\u884c\u5230\u7b2c10\u884c\uff08\u884c   \\#else ......  \u548c\u4e0a\u9762\u7684\u884c\u5230\u9876\u90e8\uff09\u3002  \u5207\u65ad\u4ee5\u4e0b\u8fde\u63a5 :   TP1 to UART  TP2 to RX  TP3 to TX   \u710a\u63a5\u4ee5\u4e0b\u8fde\u63a5 :   TP1 to I2C  TP2 to SCL  TP3 to SDA", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-NFC/#_3", 
            "text": "[Eagle\u6587\u4ef6]   Grove - NFC v1.0 EAGLE (schematic and board) files  [Eagle\u6587\u4ef6]   Grove - NFC v1.1 EAGLE (schematic and board) files  [\u82af\u7247\u6570\u636e\u624b\u518c]   PN532 Datasheet PDF", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-NFC_Tag/", 
            "text": "Grove-NFC Tag \u662f\u4e00\u6b3e\u9ad8\u5ea6\u96c6\u6210\u7684\u8fd1\u573a\u901a\u4fe1 Tag \u6a21\u5757\uff0c\u8be5\u6a21\u5757\u4e3a I2C \u63a5\u53e3\uff0c\u57fa\u4e8e M24LR64E-R\uff0cM24LR64E-R \u5177\u670964\u4f4d\u6807\u8bc6\u7b26\u548c 64-Kbit EEPROM \u3002Grove\u2013NFC Tag \u9644\u5e26\u4e00\u4e2a\u72ec\u7acb\u7684 PCB \u5929\u7ebf\uff0c\u53ef\u4ee5\u8f7b\u677e\u5730\u4f38\u51fa\u60a8\u4f7f\u7528\u7684\u4efb\u4f55\u5916\u58f3\uff0c\u7559\u4e0b\u66f4\u591a\u7a7a\u95f4\u6765\u8bbe\u8ba1\u9879\u76ee\u7684\u5916\u89c2\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n=============\n\n\n\n\n\u5de5\u4f5c\u7535\u538b :5V \u6216 3V3\n\n\n\u5de5\u4f5c\u7535\u6d41:\n1mA\n\n\n2cm\u6700\u5927\u6709\u6548\u8303\u56f4\n\n\n13.56MHz\u7684\u975e\u63a5\u89e6\u5f0f\u901a\u4fe1\n\n\n\u517c\u5bb9ISO 15693 \u548c ISO 18000-3 Model1\n\n\n64 \u4f4d\u552f\u4e00\u6807\u8bc6\u7b26\uff08UID\uff09\n\n\n\u8bfb\u5757\u548c\u5199\uff0832-bit blocks\uff09\n\n\nGrove I2C \u63a5\u53e3\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n=====\n\n\n\u4ece\u624b\u673a\u8bfb/\u5199\n\n\n\n\n\n\n\u4e0b\u8f7d\u5e76\u5b89\u88c5 \nNfcV-reader for Android\n\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u624b\u673a\u5bf9\u5b83\u5b9e\u73b0\u8bfb\u548c\u5199\n\n\n\n\n\n\n\n\n\n\n\n\n\u63a7\u5236 LED\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\n\n\n\n\u4e0b\u8f7d\u5e76\u5b89\u88c5 \nNfcV-reader for Android\n\n\n\u4e0b\u8f7d \nNFC Tag Lib\n, \u5c06\u5176\u91cd\u547d\u540d\u4e3a  NFC_Tag_M24LR6E \u5e76\u628a\u5b83\u653e\u5165 Arduino \u7684\u5e93\u91cc .\n\n\n\u6253\u5f00 Arduino IDE \u8f6f\u4ef6. \u5982\u679c Arduino IDE \u5df2\u7ecf\u6253\u5f00, \u5173\u95ed\u5e76\u91cd\u65b0\u6253\u5f00\u5b83.\n\n\n\u5728 Arduino IDE \u8f6f\u4ef6\u4e2d, \u70b9\u51fb\u4e0b\u62c9\u83dc\u5355 :\nFile(\u6587\u4ef6) -\n Example(\u793a\u4f8b) -\n NFC_Tag_M24LR6E -\n ledControl\n\n\n\u73b0\u5728\u60a8\u5c31\u53ef\u4ee5\u901a\u8fc7\u624b\u673a\u63a7\u5236 LED \u706f\u4e86.\n\n\n\n\n\u00a0\n#include \nNfcTag.h\n\n#include \nWire.h\n\n\u00a0\nNfcTag nfcTag;\nint led = 5;\nbool flag = false;\nbool preFlag = false;\nvoid setup(){\n  Serial.begin(9600);\n  pinMode(led,OUTPUT);\n  nfcTag.init();\n}\n\u00a0\nvoid loop(){\n  flag = nfcTag.readByte(EEPROM_I2C_LENGTH-1) == 0xff?true:false;\n  if(flag != preFlag){\n    Serial.println(\nget remote NFC control signal!\n);\n    if(flag == true){\n      Serial.println(\nled will light up!\n);\n      digitalWrite(led,HIGH);\n    }else{\n      Serial.println(\nled will turn dark!\n);\n      digitalWrite(led,LOW);\n    }\n    preFlag = flag;\n  }\n  delay(5*1000);\n}\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u539f\u7406\u56fePDF]\n  \nGrove - NFC Tag.PDF\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - NFC Tag Eagle file\n\n\n[\u5e93\u6587\u4ef6]\n \nNFC Tag M24LR6E Lib\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nM24LR64E-R datasheet.pdf\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nNfcV-reader for Android", 
            "title": "Grove-NFC Tag"
        }, 
        {
            "location": "/Grove-NFC_Tag/#_1", 
            "text": "=============   \u5de5\u4f5c\u7535\u538b :5V \u6216 3V3  \u5de5\u4f5c\u7535\u6d41: 1mA  2cm\u6700\u5927\u6709\u6548\u8303\u56f4  13.56MHz\u7684\u975e\u63a5\u89e6\u5f0f\u901a\u4fe1  \u517c\u5bb9ISO 15693 \u548c ISO 18000-3 Model1  64 \u4f4d\u552f\u4e00\u6807\u8bc6\u7b26\uff08UID\uff09  \u8bfb\u5757\u548c\u5199\uff0832-bit blocks\uff09  Grove I2C \u63a5\u53e3    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-NFC_Tag/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-NFC_Tag/#_2", 
            "text": "=====", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-NFC_Tag/#_3", 
            "text": "\u4e0b\u8f7d\u5e76\u5b89\u88c5  NfcV-reader for Android  \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u624b\u673a\u5bf9\u5b83\u5b9e\u73b0\u8bfb\u548c\u5199", 
            "title": "\u4ece\u624b\u673a\u8bfb/\u5199"
        }, 
        {
            "location": "/Grove-NFC_Tag/#led", 
            "text": "", 
            "title": "\u63a7\u5236 LED"
        }, 
        {
            "location": "/Grove-NFC_Tag/#_4", 
            "text": "\u4e0b\u8f7d\u5e76\u5b89\u88c5  NfcV-reader for Android  \u4e0b\u8f7d  NFC Tag Lib , \u5c06\u5176\u91cd\u547d\u540d\u4e3a  NFC_Tag_M24LR6E \u5e76\u628a\u5b83\u653e\u5165 Arduino \u7684\u5e93\u91cc .  \u6253\u5f00 Arduino IDE \u8f6f\u4ef6. \u5982\u679c Arduino IDE \u5df2\u7ecf\u6253\u5f00, \u5173\u95ed\u5e76\u91cd\u65b0\u6253\u5f00\u5b83.  \u5728 Arduino IDE \u8f6f\u4ef6\u4e2d, \u70b9\u51fb\u4e0b\u62c9\u83dc\u5355 : File(\u6587\u4ef6) -  Example(\u793a\u4f8b) -  NFC_Tag_M24LR6E -  ledControl  \u73b0\u5728\u60a8\u5c31\u53ef\u4ee5\u901a\u8fc7\u624b\u673a\u63a7\u5236 LED \u706f\u4e86.   \u00a0\n#include  NfcTag.h \n#include  Wire.h \n\u00a0\nNfcTag nfcTag;\nint led = 5;\nbool flag = false;\nbool preFlag = false;\nvoid setup(){\n  Serial.begin(9600);\n  pinMode(led,OUTPUT);\n  nfcTag.init();\n}\n\u00a0\nvoid loop(){\n  flag = nfcTag.readByte(EEPROM_I2C_LENGTH-1) == 0xff?true:false;\n  if(flag != preFlag){\n    Serial.println( get remote NFC control signal! );\n    if(flag == true){\n      Serial.println( led will light up! );\n      digitalWrite(led,HIGH);\n    }else{\n      Serial.println( led will turn dark! );\n      digitalWrite(led,LOW);\n    }\n    preFlag = flag;\n  }\n  delay(5*1000);\n}", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-NFC_Tag/#_5", 
            "text": "[\u539f\u7406\u56fePDF]    Grove - NFC Tag.PDF  [Eagle\u6587\u4ef6]   Grove - NFC Tag Eagle file  [\u5e93\u6587\u4ef6]   NFC Tag M24LR6E Lib  [\u82af\u7247\u6570\u636e\u624b\u518c]   M24LR64E-R datasheet.pdf  [\u5176\u4ed6\u8d44\u6e90]   NfcV-reader for Android", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-UART_Wifi/", 
            "text": "Grove - UART WiFi \u662f\u4e00\u79cd\u4e32\u884c\u6536\u53d1\u5668\u6a21\u5757\uff0c\u5177\u6709\u65e0\u5904\u4e0d\u5728\u7684 ESP8266 IoT SoC \u3002 \u901a\u8fc7\u96c6\u6210\u7684 TCP / IP \u534f\u8bae\u6808\uff0c\u53ea\u9700\u51e0\u884c\u4ee3\u7801\uff0c\u8be5\u6a21\u5757\u5c31\u53ef\u8ba9\u60a8\u7684\u5fae\u63a7\u5236\u5668\u4e0e WiFi \u7f51\u7edc\u4ea4\u4e92\u3002 \u6bcf\u4e2a ESP8266 \u6a21\u5757\u90fd\u4f7f\u7528 AT \u547d\u4ee4\u96c6\u56fa\u4ef6\u8fdb\u884c\u9884\u7f16\u7a0b\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u53d1\u9001\u7b80\u5355\u7684\u6587\u672c\u547d\u4ee4\u6765\u63a7\u5236\u8bbe\u5907\u3002 SoC \u529f\u80fd\u96c6\u6210\u7684 WEP\uff0cWPA / WPA2\uff0cTKIP\uff0cAES \u548c WAPI \u5f15\u64ce\uff0c\u53ef\u4ee5\u5145\u5f53 DHCP \u7684\u63a5\u5165\u70b9\uff0c\u53ef\u4ee5\u52a0\u5165\u73b0\u6709\u7684 WiFi \u7f51\u7edc\uff0c\u5e76\u5177\u6709\u53ef\u914d\u7f6e\u7684 MAC \u548c IP \u5730\u5740\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\nGrove 4 \u5f15\u811a\u8fde\u63a5\u5668\uff08RX\uff0cTX\uff0cVCC\uff0cGND\uff09\n\n\n802.11 b / g / n \u534f\u8bae\uff082.4GHz\uff09\n\n\nWiFi Direct\uff08P2P\uff09\uff0csoft-AP\n\n\n\u652f\u6301AP\uff0cSTA \u548c AP + STA \u5171\u5b58\u6a21\u5f0f\u4e09\u79cd\u6a21\u5f0f\n\n\n\u96c6\u6210 TCP / IP \u534f\u8bae\u6808\n\n\nLwIP \uff08\u8f7b\u91cf IP \uff09\n\n\n\u96c6\u6210\u7684\u4f4e\u529f\u8017 32 \u4f4d CPU \u53ef\u4ee5\u4f5c\u4e3a\u5e94\u7528\u5904\u7406\u5668\u8fdb\u884c\u91cd\u65b0\u7f16\u7a0b\n\n\n\u96c6\u6210\u6e29\u5ea6\u4f20\u611f\u5668\n\n\n\u4e32\u884c UART \u63a5\u53e3\n\n\n\u591a\u961f\u5217 QoS \u7ba1\u7406\n\n\n\u5728 \n2ms \u5185\u80fd\u591f\u6fc0\u6d3b\u5e76\u53d1\u9001\u6570\u636e\n\n\n\u91d1\u5c5e\u5c4f\u853d\n\n\n\u677f\u4e0a\u9676\u74f7\u5929\u7ebf\n\n\n\u91cd\u7f6e\u5f00\u5173\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\u4ee5\u4e0b\u662f Grove-UART WiF \u6a21\u5757\u7684\u6846\u56fe\uff0c\u8be5\u6a21\u5757\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\u3002\n\n\n\n\n\n\nGrove - \u7528\u4e8e\u901a\u8fc7\u677f\u4e0a\u7684\u63a5\u53e3\u5c06\uff08\u5982 Seeeduino \u6216 Grove Base Shield \uff09\u8fde\u63a5\u5230\u5904\u7406\u5668\u3002\n\n\nWiFi \u5929\u7ebf - ESP8266 \u5929\u7ebf\uff08\u6a21\u5757\u578b\u53f7\uff09\n\n\n\u6309\u94ae - \u5177\u6709\u591a\u529f\u80fd\n\u00a0\u00a0\u00a0\u00a0 * \u91cd\u7f6e - \u6309\u4e0b\u5e76\u5feb\u901f\u91ca\u653e\u3002\n\u00a0\u00a0\u00a0\u00a0 * \u5c06 ESP8266 \uff08\u6a21\u5757\u578b\u53f7\uff09\u8bbe\u7f6e\u4e3a UART \u5f15\u5bfc\u6a21\u5f0f - \u6309\u4f4f\u6309\u94ae\uff0c\u76f4\u5230\u4e2d\u95f4\u7ea2\u8272\u7684 LED \u6307\u793a\u706f\u4eae\u8d77\u3002\n\n\nLED \u6307\u793a\u706f - \u7528\u4e8e\u6307\u793a\u7528\u6237\u7684\u5de5\u4f5c\u72b6\u6001\u548c\u64cd\u4f5c\u3002\n\u00a0\u00a0\u00a0\u00a0 * \u5de6 - \u84dd\u8272 LED \u6307\u793a\u706f - \u7531\u7528\u6237\u901a\u8fc7\u547d\u4ee4\u201c AT + LEDON \u201d\u548c\u201c AT + LEDOFF \u201d\u63a7\u5236\u3002\n\u00a0\u00a0\u00a0\u00a0 * \u4e2d\u95f4 - \u7ea2\u8272 LED \u6307\u793a\u706f Wifi \u8fde\u63a5\u65f6\u6216\u8fdb\u5165 UART \u542f\u52a8\u6a21\u5f0f\u65f6\u4eae\u8d77\n\u00a0\u00a0\u00a0\u00a0 * \u53f3 - \u7eff\u8272 LED \u6307\u793a\u706f\u4e0a\u7535\u65f6\u4eae\u8d77\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u8f93\u5165\u7535\u538b\uff1a3V / 5V\n\n\n\u6ce2\u7279\u7387\uff1a115200\n\n\n\u57fa\u4e8e ESP8266 ESP-06 SoC\n\n\nAT \u56fa\u4ef6\uff1a esp_iot_sdk_v1.1.0 + Seeed \u4fee\u6539\uff1a\n\u00a0\u00a0\u00a0\u00a0 * 2x \u9644\u52a0 AT \u547d\u4ee4\u63a7\u5236\u84dd\u8272 Link LED \u3002\n\u00a0\u00a0\u00a0\u00a0 * \u6ce8\u518c\u7ea2\u8272 WiFi LED \u5230 ESP8266 wifi \u72b6\u6001 LED \u3002\n\n\nAT \u547d\u4ee4\u96c6\n\n\nSDIO 1.1 / 2.0\uff0cSPI\uff0cUART\n\n\n\u4e94\u4e2a\u7535\u6e90\u72b6\u6001\uff1a OFF\uff0cDEEP_SLEEP\uff0cSLEEP\uff0cWAKEUP \u548c ON\u3002\n\n\n\u5f85\u673a\u529f\u8017 \n1.0mW\uff08DTIM = 3\uff09\n\n\n\u96c6\u6210 TR \u5f00\u5173\uff0c\u5e73\u8861 - \u4e0d\u5e73\u8861\u53d8\u538b\u5668\uff0cLNA \uff0c\u529f\u7387\u653e\u5927\u5668\u548c\u5339\u914d\u7f51\u7edc\n\n\n\u96c6\u6210 PLL \uff0c\u7a33\u538b\u5668\uff0c DCXO \u548c\u7535\u6e90\u7ba1\u7406\u5355\u5143\n\n\n802.11b \u6a21\u5f0f\u4e0b\u8f93\u51fa\u529f\u7387\u4e3a + 19.5dBm\n\n\n\u65ad\u7535\u65f6\u6f0f\u7535\u6d41 \n10uA\n\n\nCCMP \u786c\u4ef6\u52a0\u901f\u5668\uff08 CBC-MAC \uff0c\u8ba1\u6570\u5668\u6a21\u5f0f\uff09\uff0c TKIP\uff08MIC\uff0cRC4\uff09\uff0cWAPI\uff08SMS4\uff09\uff0cWEP\uff08RC4\uff09\uff0cCRC\n\n\nWPA / WPA2 PSK \u548c WPS \u9a71\u52a8\u7a0b\u5e8f\n\n\nA-MPDU \u548c A-MSDU \u805a\u5408\u548c 0.4ms \u4fdd\u62a4\u95f4\u9694\n\n\n\u5c3a\u5bf8\uff1a25.43mm x 20.35mm\n\n\n\n\n\u8d85\u4f4e\u529f\u8017\u6280\u672f\n\n\nESP8266 \u65e8\u5728\u901a\u8fc7\u4e13\u95e8\u7684\u7535\u6e90\u7ba1\u7406\u6280\u672f\u5b9e\u73b0\u975e\u5e38\u4f4e\u7684\u80fd\u8017\uff0c\u51cf\u5c11\u975e\u5fc5\u8981\u529f\u80fd\u5e76\u8c03\u8282\u7761\u7720\u6a21\u5f0f\u3002 \u6709\u4e94\u4e2a\u7535\u6e90\u72b6\u6001\uff1a\n\n\n\n\n\u5173\u673a\n\n\n\u6df1\u5ea6\u4f11\u7720 - \u5b9e\u65f6\u65f6\u949f\u8fd0\u884c\uff0c\u4f46\u82af\u7247\u7684\u6240\u6709\u5176\u4ed6\u90e8\u5206\u90fd\u5173\u95ed\n\n\n\u4f11\u7720 - \u4ec5\u5b9e\u65f6\u65f6\u949f\u548c\u770b\u95e8\u72d7\u8fd0\u884c\u65f6\u6d88\u8017\u5c0f\u4e8e 12uA \u3002 \u82af\u7247\u5c06\u5728 MAC \uff0c\u4e3b\u673a\uff0cRTC \u6216\u5916\u90e8\u4e2d\u65ad\u5524\u9192\u3002\n\n\n\u5f00\u673a - \u7cfb\u7edf\u6b63\u5728\u4ece\u7761\u7720\u72b6\u6001\u53d8\u4e3a\u5f00\u72b6\u6001\u3002 \u6676\u632f\u548c PLL \u4f7f\u80fd\u3002\n\n\n\u4f7f\u7528\u4e2d - \u6d88\u8017\u5c0f\u4e8e 1.0mW \uff08DTIM = 3\uff09\u6216 0.5mW \uff08DTIM = 10\uff09\u3002\n\n\n\n\n\u5b9e\u65f6\u65f6\u949f\u53ef\u4ee5\u7f16\u7a0b\u4e3a\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\u5524\u9192 ESP8266 \u3002\n\n\nDTIM \u5468\u671f\u8d8a\u957f\uff0c\u8bbe\u5907\u53ef\u80fd\u4f1a\u7761\u7720\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u56e0\u6b64\u8bbe\u5907\u53ef\u80fd\u4f1a\u8282\u7701\u66f4\u591a\u7684\u7535\u529b\u3002\n\n\n\u4e3a\u4e86\u6ee1\u8db3\u79fb\u52a8\u5e94\u7528\u548c\u53ef\u7a7f\u6234\u7535\u5b50\u8bbe\u5907\u7684\u7535\u6e90\u8981\u6c42\uff0c\u4e3a\u4e86\u964d\u4f4e\u603b\u4f53\u529f\u8017\uff0c\u53ef\u4ee5\u5728\u56fa\u4ef6\u4e2d\u5b9a\u5236 PA \u8f93\u51fa\u529f\u7387\u3002\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u5bb6\u5ead\u81ea\u52a8\u5316\n\n\n\u4f20\u611f\u5668\u7f51\u7edc\n\n\n\u7f51\u72b6\u7f51\u7edc\n\n\n\u53ef\u7a7f\u6234\u7535\u5b50\u4ea7\u54c1\n\n\n\u5a74\u513f\u76d1\u89c6\u5668\n\n\n\u7f51\u7edc\u6444\u50cf\u673a\n\n\n\u5de5\u4e1a\u65e0\u7ebf\u63a7\u5236\n\n\nWiFi \u4fe1\u6807\n\n\n\u667a\u80fd\u7535\u6e90\u63d2\u5934\n\n\n\u4f4d\u7f6e\u611f\u77e5\u5e94\u7528\u7a0b\u5e8f\n\n\n\n\n\u5165\u95e8\n\n\n\u5728\u6b64\u90e8\u5206\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f \nGrove - UART WiFi\n  \u4ec5\u8fd0\u884c\u51e0\u6b65\u3002\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u73b0\u5728\u6211\u4eec\u8fdb\u884c\u65e0\u7ebf\u63a5\u5165\u70b9\uff08AP\uff09\u626b\u63cf\u7684\u6f14\u793a\uff0c\u8fd9\u9700\u8981\u4ee5\u4e0b\u6a21\u5757\u3002\n\n\n\n\nSeeeduino Lite\n\n\nGrove - OLED Display 1.12\n\n\n\n\n\u5982\u679c\u8fd9\u662f\u4f60\u7b2c\u4e00\u6b21\u4f7f\u7528 \nSeeeduino Lite\n, \u8bf7\u53c2\u8003 \nSeeeduino Lite's wiki\n\n\nSeeeduino Lite \u4e0e Arduino \u517c\u5bb9\uff0c\u4e14\u4e0e Arduino \u4e00\u6837\u7b80\u5355\u3002\n\n\n\u5982\u679c\u4f60\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528 Arduino, \u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u5f00\u59cb\u4f60\u7684  Arduino \u7684\u4f53\u9a8c\u3002\n\n\n\u8fde\u63a5\u786c\u4ef6\n\n\nSeeeduino Lite\n \u4f7f\u7528 Grove \u7aef\u53e3\u8fde\u63a5\u4e0a\u8ff0\u4e24\u4e2a\u6a21\u5757\uff1aGrove - \nOLED Display 1.12\n \u548c \nGrove - Uart Wi-Fi\n.\n\n\n\u5206\u522b\u662f\uff1a\n\n\n\n\nGrove - OLED \u663e\u793a\u5c4f 1.12 \u2014\u2014I2C\u8fde\u63a5\u7aef\u53e3\n\n\nGrove - UART Wifi \u2014\u2014\u4e32\u53e3\u8fde\u63a5\u7aef\u53e3\n\n\n\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n\n\n\u4e0b\u8f7d\n\n\n\u70b9\u51fb \n\u8fd9\u91cc\n \u4ee5\u4e0b\u8f7d\u6d4b\u8bd5\u4ee3\u7801\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u4efb\u4f55\u6587\u4ef6\u5939\uff08\u4f8b\u5982\u9a71\u52a8\u5668 D \u6216\u684c\u9762\uff09\n\n\n\u73b0\u5728\u4f60\u9700\u8981\u914d\u7f6eArduino\u7684 \nsketchbook\n .\n\n\n\u542f\u52a8 Arduino IDE \uff0c\u7136\u540e\u5355\u51fb\u6587\u4ef6\n\u9996\u9009\u9879\uff0c\u5e76\u5728 Sketchbook \u4f4d\u7f6e\u6dfb\u52a0\u4e0b\u8f7d\u6d4b\u8bd5\u4ee3\u7801\u7684\u7edd\u5bf9\u4f4d\u7f6e\u3002\n\n\n\n\n\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8 Arduino \uff0c\u5355\u51fb \nFile\uff08\u6587\u4ef6\uff09\n  Sketchbook\n \uff0c\u7136\u540e\u9009\u62e9 grove uart wifi wiki \uff0c\u4e4b\u540e\u5c06\u663e\u793a\u6d4b\u8bd5\u4ee3\u7801\u3002\n\n\n\n\n\u5355\u51fb \nTools\uff08\u5de5\u5177\uff09\nbord\uff08\u677f\uff09\n \u9009\u62e9 Seeeduino Lite \u5e76\u9009\u62e9\u76f8\u5e94\u7684\u4e32\u884c\u7aef\u53e3\u3002\n\n\n\u73b0\u5728\u70b9\u51fb\u4e0a\u4f20\uff08CTRL + U\uff09\u523b\u5f55\u6d4b\u8bd5\u4ee3\u7801\u3002 \u8bf7\u53c2\u8003\u8fd9\u91cc\u7684\u4efb\u4f55\u9519\u8bef\u63d0\u793a\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u8bba\u575b\u4e0a\u6dfb\u52a0\u8bc4\u8bba\n\n\n\u5ba1\u67e5\u7ed3\u679c\n\n\n\u4e0a\u4f20\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u5728 OLED \u663e\u793a\u5c4f\u4e0a\u770b\u5230 AP \u6807\u8bc6\u7b26\u3002\u4ee5\u4e0b AP \u6807\u8bc6\u7b26\u5728\u6211\u4eec\u7684 Office \u4e2d\u3002\n\n\n\n\n\u56fa\u4ef6\u5347\u7ea7\n\n\n\u6211\u4eec\u7684\u6a21\u5757\u677f\u53ef\u4ee5\u901a\u8fc7\u523b\u5f55\u4e00\u4e2a\u56fa\u4ef6\u8fdb\u884c\u521d\u59cb\u5316\u8bbe\u7f6e\uff0c\u5982\u679c\u4f60\u559c\u6b22\uff0c\u4e5f\u53ef\u4ee5\u523b\u5f55\u5176\u4ed6\u56fa\u4ef6\u3002\u70b9\u51fb \n\u8fd9\u91cc\n \u4e0b\u8f7d\u51fa\u5382\u8bbe\u7f6e\u56fa\u4ef6\u7684\u6e90\u4ee3\u7801\u3002\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\n\n\u56fa\u4ef6\u66f4\u65b0\u9700\u8981 USB \u4e32\u53e3\u8f6c\u6362\u5668\uff0c\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u83b7\u53d6\uff0c\u53ef\u4ee5\u9009\u62e9\u6211\u4eec\u63d0\u4f9b\u7684 UartSBee V5 \u3002\n\n\n\u9700\u8981\u4e00\u4e2a Grove-Jump \u8f6c\u6362\u7ebf\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u51fa\u552e\u3002 \u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u3002\n\n\n\u9700\u8981\u4f7f\u7528\u5fae\u578b USB \u6570\u636e\u7ebf\u3002\n\n\n\n\n\u8fde\u63a5\u786c\u4ef6\n\n\n1.\n \u5c06 Grove-Jump \u8f6c\u6362\u8fde\u63a5\u7ebf\u7684\u4e00\u7aef\u4e0e Grove-Uart Wifi \u4e0a \u7684 Grove \u7aef\u53e3\u8fde\u63a5\uff0c\u5e76\u5c06 UartSBee V5 \u7684\u53e6\u4e00\u7aef\u8fde\u63a5\u5982\u4e0b\u3002\n\n\n\n\n2.\n \u7136\u540e\u8fde\u63a5\u7ebf\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n\n\n\n\u4e0b\u8f7d\u523b\u5f55\u5de5\u5177\n\n\n\n\nFLASH DOWNLOAD TOOLS\n\n\nBin files of firmware\n\n\n\n\n\u64cd\u4f5c\u6b65\u9aa4\n\n\n\u73b0\u5728\u786e\u4fdd\u60a8\u5df2\u7ecf\u4e0b\u8f7d\u4e86\u523b\u5f55\u8f6f\u4ef6\u548c\u56fa\u4ef6\u7684 bin \u6587\u4ef6\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u523b\u5f55\u677f\u5b50\u3002\n\n\n\n\n\u6309\u4f4f\u6309\u94ae\uff0c\u76f4\u5230\u7ea2\u8272 LED \u6307\u793a\u706f\u4eae\u8d77\uff0c\u8868\u793a\u5df2\u51c6\u5907\u597d\u523b\u5f55\u56fa\u4ef6\u3002\n\n\n\u5728 FLASH \u4e2d\u542f\u52a8\u53ef\u6267\u884c\u6587\u4ef6\u4e0b\u8f7d\u5de5\u5177\u6587\u4ef6\uff08\u53cc\u51fb\uff09\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a\n\n\n\n\n\n\n1.\n \u4ece\u4e0b\u8f7d\u7684\u56fa\u4ef6 bin \u6587\u4ef6\u4e2d\u9009\u62e9\u6240\u9700\u7684\u6587\u4ef6\u3002\n\n\n2.\n \u68c0\u67e5 SpiAutoSet \u3002\n\n\n3.\n \u9009\u62e9\u76f8\u5e94\u7684 COM \u7aef\u53e3\u548c BAUDRATE \u3002\n\n\n\u5355\u51fb\u5f00\u59cb\u523b\u5f55\u56fa\u4ef6\n\n\n\n\n\u8fdb\u5ea6\u6761\u5c06\u5728\u56fa\u4ef6\u523b\u5f55\u8fc7\u7a0b\u4e2d\u663e\u793a\u3002\n\n\n\n\n\n\n\n\n\u6700\u540e\uff0c\u5b8c\u6210\u56fa\u4ef6\u523b\u5f55\u3002\n\n\n\n\n\n\nAT \u547d\u4ee4\n\n\n\u4f7f\u7528 Espressif \u7cfb\u7edf ESP8266 AT \u6307\u4ee4\u96c6\u7248\u672c 0.24 \u4e0e SeeedStudio \u6dfb\u52a0\u3002\n\n\n\u57fa\u672c AT \u547d\u4ee4\n\n\n\n\n\n\n\n\n\u547d\u4ee4\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nAT\n\n\n\u6d4b\u8bd5 AT \u542f\u52a8\n\n\n\n\n\n\nAT+RST\n\n\n\u91cd\u65b0\u542f\u52a8\u6a21\u5757\n\n\n\n\n\n\nAT+GMR\n\n\n\u67e5\u770b\u7248\u672c\u4fe1\u606f\n\n\n\n\n\n\nAT+GSLP\n\n\n\u8fdb\u5165\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\n\n\n\n\n\n\nATE\n\n\n\u542f\u7528/\u7981\u7528 AT \u547d\u4ee4 echo\n\n\n\n\n\n\nAT+RESTORE\n\n\n\u51fa\u5382\u590d\u4f4d\n\n\n\n\n\n\nAT+UART\n\n\nUART \u914d\u7f6e\uff08\u5df2\u5f03\u7528\uff09\n\n\n\n\n\n\nAT+UART_CUR\n\n\nUART \u5f53\u524d\u914d\u7f6e\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230 Flash \uff09\n\n\n\n\n\n\nAT+UART_DEF\n\n\nUART \u9ed8\u8ba4\u914d\u7f6e\uff08\u4fdd\u5b58\u5230 Flash \uff09\n\n\n\n\n\n\nAT+SLEEP\n\n\n\u7761\u7720\u6a21\u5f0f\n\n\n\n\n\n\nAT+RFPOWER\n\n\n\u8bbe\u7f6e\u5c04\u9891\u53d1\u5c04\u529f\u7387\n\n\n\n\n\n\nAT+RFVDD\n\n\n\u6839\u636e VDD33 \u8bbe\u7f6e\u5c04\u9891\u53d1\u5c04\u529f\u7387\n\n\n\n\n\n\n\n\nWiFi AT \u547d\u4ee4\n\n\n\n\n\n\n\n\n\u547d\u4ee4\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nAT+CWMODE\n\n\nWIFI\u6a21\u5f0f\uff08\u5df2\u5f03\u7528\uff09\n\n\n\n\n\n\nAT+CWMODE_CUR\n\n\n\u5f53\u524dWIFI\u6a21\u5f0f\uff08\u4e0d\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CWMODE_DEF\n\n\n\u9ed8\u8ba4WIFI\u6a21\u5f0f\uff08\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CWJAP\n\n\n\u8fde\u63a5\u5230AP\uff08\u5df2\u5f03\u7528\uff09\n\n\n\n\n\n\nAT+CWJAP_CUR\n\n\n\u5f53\u524d\u8fde\u63a5\u5230AP\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CWJAP_DEF\n\n\n\u9ed8\u8ba4\u8fde\u63a5\u5230AP\uff08\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CWLAP\n\n\n\u5217\u51fa\u53ef\u7528\u7684AP\n\n\n\n\n\n\nAT+CWQAP\n\n\n\u65ad\u5f00\u4e0eAP\u7684\u8fde\u63a5\n\n\n\n\n\n\nAT+CWSAP\n\n\n\u914d\u7f6esoftAP\uff08\u5df2\u5f03\u7528\uff09\n\n\n\n\n\n\nAT+CWSAP_CUR\n\n\n\u914d\u7f6e\u5f53\u524d\u7684softAP\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CWSAP_DEF\n\n\n\u914d\u7f6e\u9ed8\u8ba4\u7684softAP\uff08\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CWLIF\n\n\n\u8fde\u63a5\u5230softAP \u7684\u5217\u8868\u7ad9\n\n\n\n\n\n\nAT+CWDHCP\n\n\n\u542f\u7528/\u7981\u7528DHCP\uff08\u5df2\u5f03\u7528\uff09\n\n\n\n\n\n\nAT+CWDHCP_CUR\n\n\n\u5f53\u524d\u542f\u7528/\u7981\u7528DHCP\uff08\u4e0d\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CWDHCP_DEF\n\n\n\u9ed8\u8ba4\u542f\u7528/\u7981\u7528DHCP\uff08\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CWAUTOCONN\n\n\n\u4e0a\u7535\u65f6\u81ea\u52a8\u8fde\u63a5\u5230AP\n\n\n\n\n\n\nAT+CIPSTAMAC\n\n\n\u8bbe\u7f6e\u7ad9mac\u5730\u5740\uff08\u5df2\u5f03\u7528\uff09\n\n\n\n\n\n\nAT+CIPSTAMAC_CUR\n\n\n\u8bbe\u7f6e\u7ad9MAC\u5730\u5740\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CIPSTAMAC_DEF\n\n\n\u8bbe\u7f6e\u7ad9MAC\u5730\u5740\uff08\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CIPAPMAC\n\n\n\u8bbe\u7f6esoftAP mac\u5730\u5740\uff08\u5df2\u5f03\u7528\uff09\n\n\n\n\n\n\nAT+CIPAPMAC_CUR\n\n\n\u8bbe\u7f6esoftAP mac\u5730\u5740\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CIPAPMAC_DEF\n\n\n\u8bbe\u7f6esoftAP mac\u5730\u5740\uff08\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CIPSTA\n\n\n\u8bbe\u7f6e\u7ad9IP\u5730\u5740\uff08\u5df2\u5f03\u7528\uff09\n\n\n\n\n\n\nAT+CIPSTA_CUR\n\n\n\u8bbe\u7f6e\u7ad9IP\u5730\u5740\uff08\u4e0d\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CIPSTA_DEF\n\n\n\u8bbe\u7f6e\u7ad9IP\u5730\u5740\uff08\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CIPAP\n\n\n\u8bbe\u7f6esoftAP IP\u5730\u5740\uff08\u5df2\u5f03\u7528\uff09\n\n\n\n\n\n\nAT+CIPAP_CUR\n\n\n\u8bbe\u7f6esoftAP IP\u5730\u5740\uff08\u4e0d\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CIPAP_DEF\n\n\n\u8bbe\u7f6esoftAP IP\u5730\u5740\uff08\u4fdd\u5b58\u5230Flash\uff09\n\n\n\n\n\n\nAT+CWSTARTSMART\n\n\n\u542f\u52a8SmartConfig\n\n\n\n\n\n\nAT+CWSTOPSMART\n\n\n\u505c\u6b62SmartConfig\n\n\n\n\n\n\n\n\nTCP/IP AT \u547d\u4ee4\n\n\n\n\n\n\n\n\n\u547d\u4ee4\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nAT+CIPSTATUS\n\n\n\u83b7\u53d6\u8fde\u63a5\u72b6\u6001\n\n\n\n\n\n\nAT+CIPSTART\n\n\n\u5efa\u7acbTCP\u8fde\u63a5\u6216\u6ce8\u518cUDP\u7aef\u53e3\n\n\n\n\n\n\nAT+CIPSEND\n\n\n\u53d1\u9001\u6570\u636e\n\n\n\n\n\n\nAT+CIPSENDEX\n\n\n\u53d1\u9001\u6570\u636e\uff0c\u5982\u679c\u6ee1\u8db3\n\u6216\u201c 0\u201d\uff0c\u5c06\u53d1\u9001\u6570\u636e\n\n\n\n\n\n\nAT+CIPSENDBUF\n\n\n\u5c06\u6570\u636e\u5199\u5165TCP-send-buffer\n\n\n\n\n\n\nAT+CIPBUFRESET\n\n\n\u91cd\u65b0\u8bbe\u7f6e\u6bb5ID\u6570\n\n\n\n\n\n\nAT+CIPBUFSTATUS\n\n\n\u68c0\u67e5TCP-send-buffer\u7684\u72b6\u6001\n\n\n\n\n\n\nAT+CIPCHECKSEQ\n\n\n\u68c0\u67e5\u7279\u5b9a\u6bb5\u662f\u5426\u53d1\u9001\n\n\n\n\n\n\nAT+CIPCLOSE\n\n\n\u5173\u95edTCP / UDP\u8fde\u63a5\n\n\n\n\n\n\nAT+CIFSR\n\n\n\u83b7\u53d6\u672c\u5730IP\u5730\u5740\n\n\n\n\n\n\nAT+CIPMUX\n\n\n\u8bbe\u7f6e\u591a\u4e2a\u8fde\u63a5\u6a21\u5f0f\n\n\n\n\n\n\nAT+CIPSERVER\n\n\n\u914d\u7f6e\u4e3a\u670d\u52a1\u5668\n\n\n\n\n\n\nAT+CIPMODE\n\n\n\u8bbe\u7f6e\u4f20\u8f93\u6a21\u5f0f\n\n\n\n\n\n\nAT+SAVETRANSLINK\n\n\n\u4fdd\u5b58\u900f\u660e\u4f20\u8f93\u94fe\u63a5\u5230Flash\n\n\n\n\n\n\nAT+CIPSTO\n\n\n\u5f53ESP8266\u4f5c\u4e3aTCP\u670d\u52a1\u5668\u8fd0\u884c\u65f6\u8bbe\u7f6e\u8d85\u65f6\n\n\n\n\n\n\nAT+CIUPDATE\n\n\n\u901a\u8fc7\u7f51\u7edc\u5347\u7ea7\u56fa\u4ef6\n\n\n\n\n\n\nAT+PING\n\n\nPing IP\u5730\u5740\u6216\u4e3b\u673a\u540d\n\n\n\n\n\n\n\n\nSeeed AT \u547d\u4ee4\n\n\n\n\n\n\n\n\n\u547d\u4ee4\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nAT+LEDON\n\n\n\u8f6c\u52a8\u84dd\u8272LINK\u4eae\u8d77\n\n\n\n\n\n\nAT+LEDOFF\n\n\n\u8f6c\u52a8\u84dd\u8272LINK\u5173\u95ed\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nSchematic in PDF\n\n\nSchematic in Eagle\n\n\nEspressif Systems ESP8266\n\n\nEspressif Systems ESP8266 AT Instruction Set - v0.24\n\n\nhttp://www.esp8266.com\n\n\nESP-06\n\n\nESP8266 on Hackaday\n\n\nhttps://nurdspace.nl/ESP8266", 
            "title": "Grove-UART Wifi"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_1", 
            "text": "Grove 4 \u5f15\u811a\u8fde\u63a5\u5668\uff08RX\uff0cTX\uff0cVCC\uff0cGND\uff09  802.11 b / g / n \u534f\u8bae\uff082.4GHz\uff09  WiFi Direct\uff08P2P\uff09\uff0csoft-AP  \u652f\u6301AP\uff0cSTA \u548c AP + STA \u5171\u5b58\u6a21\u5f0f\u4e09\u79cd\u6a21\u5f0f  \u96c6\u6210 TCP / IP \u534f\u8bae\u6808  LwIP \uff08\u8f7b\u91cf IP \uff09  \u96c6\u6210\u7684\u4f4e\u529f\u8017 32 \u4f4d CPU \u53ef\u4ee5\u4f5c\u4e3a\u5e94\u7528\u5904\u7406\u5668\u8fdb\u884c\u91cd\u65b0\u7f16\u7a0b  \u96c6\u6210\u6e29\u5ea6\u4f20\u611f\u5668  \u4e32\u884c UART \u63a5\u53e3  \u591a\u961f\u5217 QoS \u7ba1\u7406  \u5728  2ms \u5185\u80fd\u591f\u6fc0\u6d3b\u5e76\u53d1\u9001\u6570\u636e  \u91d1\u5c5e\u5c4f\u853d  \u677f\u4e0a\u9676\u74f7\u5929\u7ebf  \u91cd\u7f6e\u5f00\u5173    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_2", 
            "text": "\u4ee5\u4e0b\u662f Grove-UART WiF \u6a21\u5757\u7684\u6846\u56fe\uff0c\u8be5\u6a21\u5757\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\u3002    Grove - \u7528\u4e8e\u901a\u8fc7\u677f\u4e0a\u7684\u63a5\u53e3\u5c06\uff08\u5982 Seeeduino \u6216 Grove Base Shield \uff09\u8fde\u63a5\u5230\u5904\u7406\u5668\u3002  WiFi \u5929\u7ebf - ESP8266 \u5929\u7ebf\uff08\u6a21\u5757\u578b\u53f7\uff09  \u6309\u94ae - \u5177\u6709\u591a\u529f\u80fd\n\u00a0\u00a0\u00a0\u00a0 * \u91cd\u7f6e - \u6309\u4e0b\u5e76\u5feb\u901f\u91ca\u653e\u3002\n\u00a0\u00a0\u00a0\u00a0 * \u5c06 ESP8266 \uff08\u6a21\u5757\u578b\u53f7\uff09\u8bbe\u7f6e\u4e3a UART \u5f15\u5bfc\u6a21\u5f0f - \u6309\u4f4f\u6309\u94ae\uff0c\u76f4\u5230\u4e2d\u95f4\u7ea2\u8272\u7684 LED \u6307\u793a\u706f\u4eae\u8d77\u3002  LED \u6307\u793a\u706f - \u7528\u4e8e\u6307\u793a\u7528\u6237\u7684\u5de5\u4f5c\u72b6\u6001\u548c\u64cd\u4f5c\u3002\n\u00a0\u00a0\u00a0\u00a0 * \u5de6 - \u84dd\u8272 LED \u6307\u793a\u706f - \u7531\u7528\u6237\u901a\u8fc7\u547d\u4ee4\u201c AT + LEDON \u201d\u548c\u201c AT + LEDOFF \u201d\u63a7\u5236\u3002\n\u00a0\u00a0\u00a0\u00a0 * \u4e2d\u95f4 - \u7ea2\u8272 LED \u6307\u793a\u706f Wifi \u8fde\u63a5\u65f6\u6216\u8fdb\u5165 UART \u542f\u52a8\u6a21\u5f0f\u65f6\u4eae\u8d77\n\u00a0\u00a0\u00a0\u00a0 * \u53f3 - \u7eff\u8272 LED \u6307\u793a\u706f\u4e0a\u7535\u65f6\u4eae\u8d77\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_3", 
            "text": "\u8f93\u5165\u7535\u538b\uff1a3V / 5V  \u6ce2\u7279\u7387\uff1a115200  \u57fa\u4e8e ESP8266 ESP-06 SoC  AT \u56fa\u4ef6\uff1a esp_iot_sdk_v1.1.0 + Seeed \u4fee\u6539\uff1a\n\u00a0\u00a0\u00a0\u00a0 * 2x \u9644\u52a0 AT \u547d\u4ee4\u63a7\u5236\u84dd\u8272 Link LED \u3002\n\u00a0\u00a0\u00a0\u00a0 * \u6ce8\u518c\u7ea2\u8272 WiFi LED \u5230 ESP8266 wifi \u72b6\u6001 LED \u3002  AT \u547d\u4ee4\u96c6  SDIO 1.1 / 2.0\uff0cSPI\uff0cUART  \u4e94\u4e2a\u7535\u6e90\u72b6\u6001\uff1a OFF\uff0cDEEP_SLEEP\uff0cSLEEP\uff0cWAKEUP \u548c ON\u3002  \u5f85\u673a\u529f\u8017  1.0mW\uff08DTIM = 3\uff09  \u96c6\u6210 TR \u5f00\u5173\uff0c\u5e73\u8861 - \u4e0d\u5e73\u8861\u53d8\u538b\u5668\uff0cLNA \uff0c\u529f\u7387\u653e\u5927\u5668\u548c\u5339\u914d\u7f51\u7edc  \u96c6\u6210 PLL \uff0c\u7a33\u538b\u5668\uff0c DCXO \u548c\u7535\u6e90\u7ba1\u7406\u5355\u5143  802.11b \u6a21\u5f0f\u4e0b\u8f93\u51fa\u529f\u7387\u4e3a + 19.5dBm  \u65ad\u7535\u65f6\u6f0f\u7535\u6d41  10uA  CCMP \u786c\u4ef6\u52a0\u901f\u5668\uff08 CBC-MAC \uff0c\u8ba1\u6570\u5668\u6a21\u5f0f\uff09\uff0c TKIP\uff08MIC\uff0cRC4\uff09\uff0cWAPI\uff08SMS4\uff09\uff0cWEP\uff08RC4\uff09\uff0cCRC  WPA / WPA2 PSK \u548c WPS \u9a71\u52a8\u7a0b\u5e8f  A-MPDU \u548c A-MSDU \u805a\u5408\u548c 0.4ms \u4fdd\u62a4\u95f4\u9694  \u5c3a\u5bf8\uff1a25.43mm x 20.35mm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_4", 
            "text": "ESP8266 \u65e8\u5728\u901a\u8fc7\u4e13\u95e8\u7684\u7535\u6e90\u7ba1\u7406\u6280\u672f\u5b9e\u73b0\u975e\u5e38\u4f4e\u7684\u80fd\u8017\uff0c\u51cf\u5c11\u975e\u5fc5\u8981\u529f\u80fd\u5e76\u8c03\u8282\u7761\u7720\u6a21\u5f0f\u3002 \u6709\u4e94\u4e2a\u7535\u6e90\u72b6\u6001\uff1a   \u5173\u673a  \u6df1\u5ea6\u4f11\u7720 - \u5b9e\u65f6\u65f6\u949f\u8fd0\u884c\uff0c\u4f46\u82af\u7247\u7684\u6240\u6709\u5176\u4ed6\u90e8\u5206\u90fd\u5173\u95ed  \u4f11\u7720 - \u4ec5\u5b9e\u65f6\u65f6\u949f\u548c\u770b\u95e8\u72d7\u8fd0\u884c\u65f6\u6d88\u8017\u5c0f\u4e8e 12uA \u3002 \u82af\u7247\u5c06\u5728 MAC \uff0c\u4e3b\u673a\uff0cRTC \u6216\u5916\u90e8\u4e2d\u65ad\u5524\u9192\u3002  \u5f00\u673a - \u7cfb\u7edf\u6b63\u5728\u4ece\u7761\u7720\u72b6\u6001\u53d8\u4e3a\u5f00\u72b6\u6001\u3002 \u6676\u632f\u548c PLL \u4f7f\u80fd\u3002  \u4f7f\u7528\u4e2d - \u6d88\u8017\u5c0f\u4e8e 1.0mW \uff08DTIM = 3\uff09\u6216 0.5mW \uff08DTIM = 10\uff09\u3002   \u5b9e\u65f6\u65f6\u949f\u53ef\u4ee5\u7f16\u7a0b\u4e3a\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\u5524\u9192 ESP8266 \u3002  DTIM \u5468\u671f\u8d8a\u957f\uff0c\u8bbe\u5907\u53ef\u80fd\u4f1a\u7761\u7720\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u56e0\u6b64\u8bbe\u5907\u53ef\u80fd\u4f1a\u8282\u7701\u66f4\u591a\u7684\u7535\u529b\u3002  \u4e3a\u4e86\u6ee1\u8db3\u79fb\u52a8\u5e94\u7528\u548c\u53ef\u7a7f\u6234\u7535\u5b50\u8bbe\u5907\u7684\u7535\u6e90\u8981\u6c42\uff0c\u4e3a\u4e86\u964d\u4f4e\u603b\u4f53\u529f\u8017\uff0c\u53ef\u4ee5\u5728\u56fa\u4ef6\u4e2d\u5b9a\u5236 PA \u8f93\u51fa\u529f\u7387\u3002", 
            "title": "\u8d85\u4f4e\u529f\u8017\u6280\u672f"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_5", 
            "text": "\u5bb6\u5ead\u81ea\u52a8\u5316  \u4f20\u611f\u5668\u7f51\u7edc  \u7f51\u72b6\u7f51\u7edc  \u53ef\u7a7f\u6234\u7535\u5b50\u4ea7\u54c1  \u5a74\u513f\u76d1\u89c6\u5668  \u7f51\u7edc\u6444\u50cf\u673a  \u5de5\u4e1a\u65e0\u7ebf\u63a7\u5236  WiFi \u4fe1\u6807  \u667a\u80fd\u7535\u6e90\u63d2\u5934  \u4f4d\u7f6e\u611f\u77e5\u5e94\u7528\u7a0b\u5e8f", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_6", 
            "text": "\u5728\u6b64\u90e8\u5206\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f  Grove - UART WiFi   \u4ec5\u8fd0\u884c\u51e0\u6b65\u3002", 
            "title": "\u5165\u95e8"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_7", 
            "text": "\u73b0\u5728\u6211\u4eec\u8fdb\u884c\u65e0\u7ebf\u63a5\u5165\u70b9\uff08AP\uff09\u626b\u63cf\u7684\u6f14\u793a\uff0c\u8fd9\u9700\u8981\u4ee5\u4e0b\u6a21\u5757\u3002   Seeeduino Lite  Grove - OLED Display 1.12   \u5982\u679c\u8fd9\u662f\u4f60\u7b2c\u4e00\u6b21\u4f7f\u7528  Seeeduino Lite , \u8bf7\u53c2\u8003  Seeeduino Lite's wiki  Seeeduino Lite \u4e0e Arduino \u517c\u5bb9\uff0c\u4e14\u4e0e Arduino \u4e00\u6837\u7b80\u5355\u3002  \u5982\u679c\u4f60\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528 Arduino, \u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u5f00\u59cb\u4f60\u7684  Arduino \u7684\u4f53\u9a8c\u3002", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_8", 
            "text": "Seeeduino Lite  \u4f7f\u7528 Grove \u7aef\u53e3\u8fde\u63a5\u4e0a\u8ff0\u4e24\u4e2a\u6a21\u5757\uff1aGrove -  OLED Display 1.12  \u548c  Grove - Uart Wi-Fi .  \u5206\u522b\u662f\uff1a   Grove - OLED \u663e\u793a\u5c4f 1.12 \u2014\u2014I2C\u8fde\u63a5\u7aef\u53e3  Grove - UART Wifi \u2014\u2014\u4e32\u53e3\u8fde\u63a5\u7aef\u53e3  \u5982\u4e0b\u6240\u793a\uff1a", 
            "title": "\u8fde\u63a5\u786c\u4ef6"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_9", 
            "text": "\u70b9\u51fb  \u8fd9\u91cc  \u4ee5\u4e0b\u8f7d\u6d4b\u8bd5\u4ee3\u7801\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u4efb\u4f55\u6587\u4ef6\u5939\uff08\u4f8b\u5982\u9a71\u52a8\u5668 D \u6216\u684c\u9762\uff09  \u73b0\u5728\u4f60\u9700\u8981\u914d\u7f6eArduino\u7684  sketchbook  .  \u542f\u52a8 Arduino IDE \uff0c\u7136\u540e\u5355\u51fb\u6587\u4ef6 \u9996\u9009\u9879\uff0c\u5e76\u5728 Sketchbook \u4f4d\u7f6e\u6dfb\u52a0\u4e0b\u8f7d\u6d4b\u8bd5\u4ee3\u7801\u7684\u7edd\u5bf9\u4f4d\u7f6e\u3002   \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8 Arduino \uff0c\u5355\u51fb  File\uff08\u6587\u4ef6\uff09   Sketchbook  \uff0c\u7136\u540e\u9009\u62e9 grove uart wifi wiki \uff0c\u4e4b\u540e\u5c06\u663e\u793a\u6d4b\u8bd5\u4ee3\u7801\u3002   \u5355\u51fb  Tools\uff08\u5de5\u5177\uff09 bord\uff08\u677f\uff09  \u9009\u62e9 Seeeduino Lite \u5e76\u9009\u62e9\u76f8\u5e94\u7684\u4e32\u884c\u7aef\u53e3\u3002  \u73b0\u5728\u70b9\u51fb\u4e0a\u4f20\uff08CTRL + U\uff09\u523b\u5f55\u6d4b\u8bd5\u4ee3\u7801\u3002 \u8bf7\u53c2\u8003\u8fd9\u91cc\u7684\u4efb\u4f55\u9519\u8bef\u63d0\u793a\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u8bba\u575b\u4e0a\u6dfb\u52a0\u8bc4\u8bba", 
            "title": "\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_10", 
            "text": "\u4e0a\u4f20\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u5728 OLED \u663e\u793a\u5c4f\u4e0a\u770b\u5230 AP \u6807\u8bc6\u7b26\u3002\u4ee5\u4e0b AP \u6807\u8bc6\u7b26\u5728\u6211\u4eec\u7684 Office \u4e2d\u3002", 
            "title": "\u5ba1\u67e5\u7ed3\u679c"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_11", 
            "text": "\u6211\u4eec\u7684\u6a21\u5757\u677f\u53ef\u4ee5\u901a\u8fc7\u523b\u5f55\u4e00\u4e2a\u56fa\u4ef6\u8fdb\u884c\u521d\u59cb\u5316\u8bbe\u7f6e\uff0c\u5982\u679c\u4f60\u559c\u6b22\uff0c\u4e5f\u53ef\u4ee5\u523b\u5f55\u5176\u4ed6\u56fa\u4ef6\u3002\u70b9\u51fb  \u8fd9\u91cc  \u4e0b\u8f7d\u51fa\u5382\u8bbe\u7f6e\u56fa\u4ef6\u7684\u6e90\u4ee3\u7801\u3002", 
            "title": "\u56fa\u4ef6\u5347\u7ea7"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_12", 
            "text": "\u56fa\u4ef6\u66f4\u65b0\u9700\u8981 USB \u4e32\u53e3\u8f6c\u6362\u5668\uff0c\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u83b7\u53d6\uff0c\u53ef\u4ee5\u9009\u62e9\u6211\u4eec\u63d0\u4f9b\u7684 UartSBee V5 \u3002  \u9700\u8981\u4e00\u4e2a Grove-Jump \u8f6c\u6362\u7ebf\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u51fa\u552e\u3002 \u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u3002  \u9700\u8981\u4f7f\u7528\u5fae\u578b USB \u6570\u636e\u7ebf\u3002", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_13", 
            "text": "1.  \u5c06 Grove-Jump \u8f6c\u6362\u8fde\u63a5\u7ebf\u7684\u4e00\u7aef\u4e0e Grove-Uart Wifi \u4e0a \u7684 Grove \u7aef\u53e3\u8fde\u63a5\uff0c\u5e76\u5c06 UartSBee V5 \u7684\u53e6\u4e00\u7aef\u8fde\u63a5\u5982\u4e0b\u3002   2.  \u7136\u540e\u8fde\u63a5\u7ebf\u5982\u4e0b\u56fe\u6240\u793a\uff1a", 
            "title": "\u8fde\u63a5\u786c\u4ef6"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_14", 
            "text": "FLASH DOWNLOAD TOOLS  Bin files of firmware", 
            "title": "\u4e0b\u8f7d\u523b\u5f55\u5de5\u5177"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_15", 
            "text": "\u73b0\u5728\u786e\u4fdd\u60a8\u5df2\u7ecf\u4e0b\u8f7d\u4e86\u523b\u5f55\u8f6f\u4ef6\u548c\u56fa\u4ef6\u7684 bin \u6587\u4ef6\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u523b\u5f55\u677f\u5b50\u3002   \u6309\u4f4f\u6309\u94ae\uff0c\u76f4\u5230\u7ea2\u8272 LED \u6307\u793a\u706f\u4eae\u8d77\uff0c\u8868\u793a\u5df2\u51c6\u5907\u597d\u523b\u5f55\u56fa\u4ef6\u3002  \u5728 FLASH \u4e2d\u542f\u52a8\u53ef\u6267\u884c\u6587\u4ef6\u4e0b\u8f7d\u5de5\u5177\u6587\u4ef6\uff08\u53cc\u51fb\uff09\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a    1.  \u4ece\u4e0b\u8f7d\u7684\u56fa\u4ef6 bin \u6587\u4ef6\u4e2d\u9009\u62e9\u6240\u9700\u7684\u6587\u4ef6\u3002  2.  \u68c0\u67e5 SpiAutoSet \u3002  3.  \u9009\u62e9\u76f8\u5e94\u7684 COM \u7aef\u53e3\u548c BAUDRATE \u3002", 
            "title": "\u64cd\u4f5c\u6b65\u9aa4"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_16", 
            "text": "\u8fdb\u5ea6\u6761\u5c06\u5728\u56fa\u4ef6\u523b\u5f55\u8fc7\u7a0b\u4e2d\u663e\u793a\u3002     \u6700\u540e\uff0c\u5b8c\u6210\u56fa\u4ef6\u523b\u5f55\u3002", 
            "title": "\u5355\u51fb\u5f00\u59cb\u523b\u5f55\u56fa\u4ef6"
        }, 
        {
            "location": "/Grove-UART_Wifi/#at", 
            "text": "\u4f7f\u7528 Espressif \u7cfb\u7edf ESP8266 AT \u6307\u4ee4\u96c6\u7248\u672c 0.24 \u4e0e SeeedStudio \u6dfb\u52a0\u3002", 
            "title": "AT \u547d\u4ee4"
        }, 
        {
            "location": "/Grove-UART_Wifi/#at_1", 
            "text": "\u547d\u4ee4  \u8bf4\u660e      AT  \u6d4b\u8bd5 AT \u542f\u52a8    AT+RST  \u91cd\u65b0\u542f\u52a8\u6a21\u5757    AT+GMR  \u67e5\u770b\u7248\u672c\u4fe1\u606f    AT+GSLP  \u8fdb\u5165\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f    ATE  \u542f\u7528/\u7981\u7528 AT \u547d\u4ee4 echo    AT+RESTORE  \u51fa\u5382\u590d\u4f4d    AT+UART  UART \u914d\u7f6e\uff08\u5df2\u5f03\u7528\uff09    AT+UART_CUR  UART \u5f53\u524d\u914d\u7f6e\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230 Flash \uff09    AT+UART_DEF  UART \u9ed8\u8ba4\u914d\u7f6e\uff08\u4fdd\u5b58\u5230 Flash \uff09    AT+SLEEP  \u7761\u7720\u6a21\u5f0f    AT+RFPOWER  \u8bbe\u7f6e\u5c04\u9891\u53d1\u5c04\u529f\u7387    AT+RFVDD  \u6839\u636e VDD33 \u8bbe\u7f6e\u5c04\u9891\u53d1\u5c04\u529f\u7387", 
            "title": "\u57fa\u672c AT \u547d\u4ee4"
        }, 
        {
            "location": "/Grove-UART_Wifi/#wifi-at", 
            "text": "\u547d\u4ee4  \u8bf4\u660e      AT+CWMODE  WIFI\u6a21\u5f0f\uff08\u5df2\u5f03\u7528\uff09    AT+CWMODE_CUR  \u5f53\u524dWIFI\u6a21\u5f0f\uff08\u4e0d\u4fdd\u5b58\u5230Flash\uff09    AT+CWMODE_DEF  \u9ed8\u8ba4WIFI\u6a21\u5f0f\uff08\u4fdd\u5b58\u5230Flash\uff09    AT+CWJAP  \u8fde\u63a5\u5230AP\uff08\u5df2\u5f03\u7528\uff09    AT+CWJAP_CUR  \u5f53\u524d\u8fde\u63a5\u5230AP\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230Flash\uff09    AT+CWJAP_DEF  \u9ed8\u8ba4\u8fde\u63a5\u5230AP\uff08\u4fdd\u5b58\u5230Flash\uff09    AT+CWLAP  \u5217\u51fa\u53ef\u7528\u7684AP    AT+CWQAP  \u65ad\u5f00\u4e0eAP\u7684\u8fde\u63a5    AT+CWSAP  \u914d\u7f6esoftAP\uff08\u5df2\u5f03\u7528\uff09    AT+CWSAP_CUR  \u914d\u7f6e\u5f53\u524d\u7684softAP\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230Flash\uff09    AT+CWSAP_DEF  \u914d\u7f6e\u9ed8\u8ba4\u7684softAP\uff08\u4fdd\u5b58\u5230Flash\uff09    AT+CWLIF  \u8fde\u63a5\u5230softAP \u7684\u5217\u8868\u7ad9    AT+CWDHCP  \u542f\u7528/\u7981\u7528DHCP\uff08\u5df2\u5f03\u7528\uff09    AT+CWDHCP_CUR  \u5f53\u524d\u542f\u7528/\u7981\u7528DHCP\uff08\u4e0d\u4fdd\u5b58\u5230Flash\uff09    AT+CWDHCP_DEF  \u9ed8\u8ba4\u542f\u7528/\u7981\u7528DHCP\uff08\u4fdd\u5b58\u5230Flash\uff09    AT+CWAUTOCONN  \u4e0a\u7535\u65f6\u81ea\u52a8\u8fde\u63a5\u5230AP    AT+CIPSTAMAC  \u8bbe\u7f6e\u7ad9mac\u5730\u5740\uff08\u5df2\u5f03\u7528\uff09    AT+CIPSTAMAC_CUR  \u8bbe\u7f6e\u7ad9MAC\u5730\u5740\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230Flash\uff09    AT+CIPSTAMAC_DEF  \u8bbe\u7f6e\u7ad9MAC\u5730\u5740\uff08\u4fdd\u5b58\u5230Flash\uff09    AT+CIPAPMAC  \u8bbe\u7f6esoftAP mac\u5730\u5740\uff08\u5df2\u5f03\u7528\uff09    AT+CIPAPMAC_CUR  \u8bbe\u7f6esoftAP mac\u5730\u5740\uff08\u4e0d\u4f1a\u4fdd\u5b58\u5230Flash\uff09    AT+CIPAPMAC_DEF  \u8bbe\u7f6esoftAP mac\u5730\u5740\uff08\u4fdd\u5b58\u5230Flash\uff09    AT+CIPSTA  \u8bbe\u7f6e\u7ad9IP\u5730\u5740\uff08\u5df2\u5f03\u7528\uff09    AT+CIPSTA_CUR  \u8bbe\u7f6e\u7ad9IP\u5730\u5740\uff08\u4e0d\u4fdd\u5b58\u5230Flash\uff09    AT+CIPSTA_DEF  \u8bbe\u7f6e\u7ad9IP\u5730\u5740\uff08\u4fdd\u5b58\u5230Flash\uff09    AT+CIPAP  \u8bbe\u7f6esoftAP IP\u5730\u5740\uff08\u5df2\u5f03\u7528\uff09    AT+CIPAP_CUR  \u8bbe\u7f6esoftAP IP\u5730\u5740\uff08\u4e0d\u4fdd\u5b58\u5230Flash\uff09    AT+CIPAP_DEF  \u8bbe\u7f6esoftAP IP\u5730\u5740\uff08\u4fdd\u5b58\u5230Flash\uff09    AT+CWSTARTSMART  \u542f\u52a8SmartConfig    AT+CWSTOPSMART  \u505c\u6b62SmartConfig", 
            "title": "WiFi AT \u547d\u4ee4"
        }, 
        {
            "location": "/Grove-UART_Wifi/#tcpip-at", 
            "text": "\u547d\u4ee4  \u8bf4\u660e      AT+CIPSTATUS  \u83b7\u53d6\u8fde\u63a5\u72b6\u6001    AT+CIPSTART  \u5efa\u7acbTCP\u8fde\u63a5\u6216\u6ce8\u518cUDP\u7aef\u53e3    AT+CIPSEND  \u53d1\u9001\u6570\u636e    AT+CIPSENDEX  \u53d1\u9001\u6570\u636e\uff0c\u5982\u679c\u6ee1\u8db3 \u6216\u201c 0\u201d\uff0c\u5c06\u53d1\u9001\u6570\u636e    AT+CIPSENDBUF  \u5c06\u6570\u636e\u5199\u5165TCP-send-buffer    AT+CIPBUFRESET  \u91cd\u65b0\u8bbe\u7f6e\u6bb5ID\u6570    AT+CIPBUFSTATUS  \u68c0\u67e5TCP-send-buffer\u7684\u72b6\u6001    AT+CIPCHECKSEQ  \u68c0\u67e5\u7279\u5b9a\u6bb5\u662f\u5426\u53d1\u9001    AT+CIPCLOSE  \u5173\u95edTCP / UDP\u8fde\u63a5    AT+CIFSR  \u83b7\u53d6\u672c\u5730IP\u5730\u5740    AT+CIPMUX  \u8bbe\u7f6e\u591a\u4e2a\u8fde\u63a5\u6a21\u5f0f    AT+CIPSERVER  \u914d\u7f6e\u4e3a\u670d\u52a1\u5668    AT+CIPMODE  \u8bbe\u7f6e\u4f20\u8f93\u6a21\u5f0f    AT+SAVETRANSLINK  \u4fdd\u5b58\u900f\u660e\u4f20\u8f93\u94fe\u63a5\u5230Flash    AT+CIPSTO  \u5f53ESP8266\u4f5c\u4e3aTCP\u670d\u52a1\u5668\u8fd0\u884c\u65f6\u8bbe\u7f6e\u8d85\u65f6    AT+CIUPDATE  \u901a\u8fc7\u7f51\u7edc\u5347\u7ea7\u56fa\u4ef6    AT+PING  Ping IP\u5730\u5740\u6216\u4e3b\u673a\u540d", 
            "title": "TCP/IP AT \u547d\u4ee4"
        }, 
        {
            "location": "/Grove-UART_Wifi/#seeed-at", 
            "text": "\u547d\u4ee4  \u8bf4\u660e      AT+LEDON  \u8f6c\u52a8\u84dd\u8272LINK\u4eae\u8d77    AT+LEDOFF  \u8f6c\u52a8\u84dd\u8272LINK\u5173\u95ed", 
            "title": "Seeed AT \u547d\u4ee4"
        }, 
        {
            "location": "/Grove-UART_Wifi/#_17", 
            "text": "Schematic in PDF  Schematic in Eagle  Espressif Systems ESP8266  Espressif Systems ESP8266 AT Instruction Set - v0.24  http://www.esp8266.com  ESP-06  ESP8266 on Hackaday  https://nurdspace.nl/ESP8266", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/", 
            "text": "Grove-Serial RF Pro \u662f\u4e00\u6b3e\u4f4e\u6210\u672c\uff0c\u9ad8\u6027\u80fd\u7684\u900f\u660e FSK \u4fe1\u53f7\u6536\u53d1\u5668\uff0c\u5de5\u4f5c\u9891\u7387\u4e3a 433/470/868/915 MHz\uff0c\u6700\u4f73\u6027\u80fd\u9891\u7387\u4e3a 433M \uff08\u9ed8\u8ba4\uff09\u3002 \u5b83\u6709\u4e00\u4e2a UART \u63a5\u53e3\uff0c\u53ea\u9700\u63d0\u4f9b UART\uff0c\u6570\u636e\u4fbf\u53ef\u5b9e\u73b0\u65e0\u7ebf\u6570\u636e\u4f20\u8f93\u3002 \u7528\u6237\u53ef\u7075\u6d3b\u8bbe\u7f6e UART \u6ce2\u7279\u7387\uff0c\u9891\u7387\uff0c\u8f93\u51fa\u529f\u7387\uff0c\u6570\u636e\u901f\u7387\uff0c\u9891\u7387\u504f\u5dee\uff0c\u63a5\u6536\u5e26\u5bbd\u7b49\u53c2\u6570\u3002 \u8fd9\u662f\u8bbe\u8ba1\u65e0\u7ebf\u6570\u636e\u4f20\u8f93\u4ea7\u54c1\u7684\u7406\u60f3\u9009\u62e9\uff0c\u53ef\u5e7f\u6cdb\u5e94\u7528\u4e8e\u65e0\u7ebf\u6570\u636e\u4f20\u8f93\u9886\u57df\u3002\n\n\n\n\n\u7248\u672c\u66f4\u65b0\n\n\n\n\n\n\n \u7248\u672c\u8c03\u6574\n\n\n\n \u7248\u672c\u63cf\u8ff0\n\n\n\n \u53d1\u5e03\u65e5\u671f\n\n\n\n\n\n v0.9b\n\n\n\n \u9996\u6b21\u516c\u5f00\u53d1\u884c\n\n\n\n NA\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u517c\u5bb9\n\n\n\u9ad8\u8f93\u51fa\u529f\u7387\n\n\n\u5c0f\u5c3a\u5bf8\n\n\n\u66f4\u957f\u7684\u4f20\u8f93\u8ddd\u79bb\n\n\n\n\n\u521b\u65b0\u5e94\u7528\n\n\n\n\n\n\n\u8fdc\u7a0b\u63a7\u5236\uff0c\u8fdc\u7a0b\u6d4b\u91cf\u7cfb\u7edf\n\n\n\u65e0\u7ebf\u7535\u8868\n\n\n\u8bbf\u95ee\u63a7\u5236\n\n\n\u8bc6\u522b\u7cfb\u7edf\n\n\n\u6570\u636e\u91c7\u96c6\n\n\nIT \u5bb6\u7528\u7535\u5668\n\n\n\u5a74\u513f\u76d1\u62a4\u7cfb\u7edf\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n \u9879\u76ee\n\n\n\n \u6700\u5c0f\u503c\n\n\n\n \u6807\u51c6\u503c\n\n\n\n \u6700\u5927\u503c\n\n\n\n \u5355\u4f4d\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n 4.75\n\n\n\n 5.0\n\n\n\n 5.25\n\n\n\n VDC\n\n\n\n\n\n \u7761\u7720\u6a21\u5f0f\u4e0b\u7684\u7535\u6d41\n\n\n\n 1\n\n\n\n uA\n\n\n\n\n\n \u8f93\u51fa\u5f3a\u5ea6\n\n\n\n 1\n\n\n\n -\n\n\n\n 20\n\n\n\n dB\n\n\n\n\n\n \u901a\u8baf\u901f\u5ea6\n\n\n\n 1.2\n\n\n\n  -\n\n\n\n 115.2\n\n\n\n Kbps\n\n\n\n\n\n \u4f20\u8f93\u8ddd\u79bb\uff08\u6700\u5927\uff09\n\n\n\n 1\n\n\n\n Km\n\n\n\n\n\n \u7075\u654f\u5ea6\n\n\n\n -117\n\n\n\n dBm\n\n\n\n\n\n\u901a\u4fe1\u534f\u8bae\n\n\n\n  UART\n\n\n\n /\n\n\n\n\n\n \u5de5\u4f5c\u6e29\u5ea6\n\n\n\n -40\n\n\n\n  -\n\n\n\n +85\n\n\n\n \u2103\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n\n\n\n\n\n\n \u90e8\u4ef6\u7c7b\u578b\uff085V\u903b\u8f91\u7535\u5e73\uff09\n\n\n\n \u90e8\u4ef6\u63cf\u8ff0\n\n\n\n\n\n G(GND)\n\n\n\n \u63a5\u5730\u7aef\u53e3\n\n\n\n\n\n EN(ENABLE)\n\n\n\n \u8bbe\u7f6e\u6b63\u5e38\u6a21\u5f0f\u4e3a\u6570\u636e\u6536\u53d1\u5668\uff08\u9ed8\u8ba4\u503c\u4e3a\u4f4e: 10k \u81f3 GND \uff09\u3002\n\u8bbe\u7f6e\u9ad8\u7535\u5e73\u65f6\u8fdb\u5165\u7761\u7720\u6a21\u5f0f\u3002\n\n\n\n\n\n CON(CONFIG)\n\n\n\n \u8bbe\u7f6e\u4f4e\u7535\u5e73\u65f6\u662f\u914d\u7f6e\u6a21\u5f0f\uff08\u8fde\u63a5\u5230GND\uff09\u3002\n\u8bbe\u7f6e\u9ad8\u7535\u5e73\u65f6\u662f\u901a\u8baf\u6a21\u5f0f\uff08\u9ed8\u8ba4\u4e3a\u9ad8\uff09\u3002\n\n\n\n\n\n RX\n\n\n\n UART \u6570\u636e\u8f93\u5165\n\n\n\n\n\n TX\n\n\n\n UART \u6570\u636e\u8f93\u51fa\n\n\n\n\n\n V(VCC)\n\n\n\n  5V\uff08+\uff09\u7535\u6e90\u4f9b\u7535\n\n\n\n\n\n AT\n\n\n\n \u63a5\u7ebf\u5f15\u811a\n\n\n\n\n\u5165\u95e8\n\n\n\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e24\u4e2aRF Pro Grove \u5355\u5143\u76f8\u4e92\u53d1\u9001/\u63a5\u6536\u6570\u636e\u3002 \u60a8\u9700\u8981\u4e24\u4e2a RF Pro Grove \u5355\u5143\u548c\u4e24\u4e2a Seeeduino \u6765\u8fdb\u884c\u6f14\u793a\u3002\n\n\n\n\n\u5c06\u4e00\u4e2a Grove - Serial RF Pro \u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684 UART \uff0c\u7136\u540e\u5c06 Grove - Base Shield \u8fde\u63a5\u5230 Seeeduino\u3002\n\n\n\n\n\n\n\n\n\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u5c06\u53e6\u4e00\u4e2aGrove - Serial RF Pro \u8fde\u63a5\u5230 Seeeduino\u3002\n\n\n\n\n\u914d\u7f6e\u548c\u67e5\u8be2\u65b9\u6cd5\n\n\n\u5982\u679c ENABLE \u5f15\u811a\u4e3a\u4f4e\u7535\u5e73\uff0c\u5219 CONFIG \u5f15\u811a\u4e3a\u4f4e\u7535\u5e73\uff0c\u6a21\u5757\u5c06\u4e3a\u914d\u7f6e\u72b6\u6001\u3002\n\u5982\u679c\u7ea2\u7eff LED \u6301\u7eed\u4eae\u7740\uff0c\u6a21\u5757\u662f\u5c06\u5728 Config \u4e2d\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u914d\u7f6e \n \u67e5\u8be2\u6a21\u5757\u3002\n\n\n\n\n\n\n\u5c06 CON \u5f15\u811a\u8fde\u63a5\u5230 LOW / GND \u8fdb\u5165\u914d\u7f6e\u6a21\u5f0f\u3002\n\n\n\n\n\n\n\u53d1\u9001\u547d\u4ee4\u4fee\u6539\u5e76\u67e5\u8be2\u6a21\u5757\u7684\u914d\u7f6e\u3002 \u914d\u7f6e \n \u67e5\u8be2\u8bf4\u660e\u53c2\u89c1\n\u53c2\u8003\n.\n\n\n\n\n\n\nConfig \u6307\u4ee4\u683c\u5f0f\u4e3a AA + FA + [\u6307\u4ee4] + [\u53c2\u6570]\u3002 \u6307\u4ee4\u4e3a 1 \u5b57\u8282\uff0c\u53c2\u6570\u4e3a 0-4 \u5b57\u8282\u7684 HEX \u6570\u636e\uff08\u5927\u5b57\u8282\u6392\u5e8f\uff0c\u5728\u4f4e\u5b57\u8282\u524d\u7684\u9ad8\u5b57\u8282\uff09\u3002\n\n\n\u6ce8\u610f:\n\n\n1) \u8bf7\u8bb0\u4f4f UART \u7684\u4f20\u8f93\u901f\u5ea6\uff08\u9ed8\u8ba4\u4e3a 9600 \uff0c\u6700\u597d\u4e0d\u8981\u66f4\u6539\uff09\uff0c\u5982\u679c\u8fdb\u884c\u4e86\u4e00\u4e9b\u66f4\u6539\uff0c\u6216\u8005\u60a8\u5c06\u65e0\u6cd5\u63a7\u5236\u6a21\u5757\u3002 \u5982\u679c\u6539\u53d8 UART \u7684\u4f20\u8f93\u901f\u5ea6\uff0c\u6307\u4ee4\u7684\u4f20\u8f93\u901f\u5ea6\u5c06\u76f8\u5e94\u6539\u53d8\u3002 \u6307\u4ee4\u7684\u4f20\u8f93\u901f\u5ea6\u8303\u56f4\u4e3a 1.2 Kbps - 115.2 Kbps\u3002\n\n\n2) LED\u529f\u80fd\u8bf4\u660e\uff1a\n- \u5f53\u7535\u6e90\u548c\u6a21\u5757\u6b63\u5728\u5de5\u4f5c\u65f6\uff0c\u7ea2\u8272\u548c\u7eff\u8272 LED \u5c06\u95ea\u70c1\u3002\n- \u5982\u679c EN\uff08ENABLE\uff09 \u5f15\u811a\u4e3a\u4f4e\u7535\u5e73\uff08\u9ed8\u8ba4\u4e3a\u4f4e\u7535\u5e73\uff09\uff0c\u5219 CON\uff08Config\uff09 \u5f15\u811a\u4e3a\u4f4e\u7535\u5e73\uff0c\u6a21\u5757\u5c06\u8fdb\u5165\u914d\u7f6e\u6a21\u5f0f\u3002 \u5728\u914d\u7f6e\u6a21\u5f0f\u4e0b\uff0c\u7ea2\u8272\u548c\u7eff\u8272 LED \u90fd\u5c06\u4eae\u8d77\u3002 - \u5982\u679c\u6a21\u5757\u672a\u5904\u4e8e\u914d\u7f6e\u6a21\u5f0f\uff0c\u7eff\u8272\u548c\u7ea2\u8272 LED \u5c06\u4e0d\u4f1a\u4eae\u8d77\u3002\n- \u5f53\u6a21\u5757\u53d1\u9001\u6570\u636e\u65f6\uff0c\u7ea2\u8272 LED \u95ea\u70c1\uff0c\u4f20\u8f93\u5b8c\u6210\u540e\u7ea2\u8272 LED \u5c06\u7184\u706d\u3002\n- \u5f53\u6a21\u5757\u6b63\u5728\u7b49\u5f85\u63a5\u6536\u6570\u636e\u65f6\uff0c\u7eff\u8272 LED \u7184\u706d\uff0c\u5f53\u6a21\u5757\u63a5\u6536\u5230\u6570\u636e\u65f6\uff0c\u7eff\u8272 LED \u5c06\u95ea\u70c1\u4e00\u6b21\u3002\n\n\n\n\n\n\u901a\u8baf\u6a21\u5f0f\n\n\n\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230 Seeeduino \uff0c\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n//send data routine\n\n// link between the computer and the SoftSerial Shield\n//at 9600 bps 8-N-1\n//Computer is connected to Hardware UART\n//SoftSerial Shield is connected to the Software UART:D2\nD3\n\n#include \nSoftwareSerial.h\n\n\nSoftwareSerial SoftSerial(11, 10); // TX, RX\nint buffer[64];\nint count=0;\nvoid setup()\n{\n    SoftSerial.begin(9600);               // the SoftSerial baud rate\n    Serial.begin(9600);             // the Serial port of Arduino baud rate.\n\n}\n\nvoid loop()\n{\n    delay(1000);\n    SoftSerial.write(0xAA);\n    SoftSerial.write(0xFA);\n    SoftSerial.write(0xE1);\n\n    if (SoftSerial.available())              // if date is coming from software serial port ==\n data is coming from SoftSerial shield\n    {\n        while(SoftSerial.available())          // reading data into char array\n        {\n            buffer[count++]=SoftSerial.read();     // writing data into array\n            if(count == 64)break;\n        }\n        for (int i=0; i\ncount; i++) {\n            Serial.print(buffer[i],HEX);            // if no data transmission ends, write buffer to hardware serial port\n        }\n        clearBufferArray();              // call clearBufferArray function to clear the stored data from the array\n        count = 0;                       // set counter of while loop to zero\n    }\n    if (Serial.available())            // if data is available on hardware serial port ==\n data is coming from PC or notebook\n    SoftSerial.write(Serial.read());       // write it to the SoftSerial shield\n    Serial.println(\n...\n);\n}\nvoid clearBufferArray()              // function to clear buffer array\n{\n    for (int i=0; i\ncount;i++)\n    { buffer[i]=NULL;}                  // clear all index of array with command NULL\n}\n\n\n\n\n\n\n\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u540e\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u7684\u754c\u9762\u3002\n\n\n\n\n\n\n\u53ef\u4f9b\u53c2\u8003\n\n\n\n\n\u4e0b\u8868\u5217\u51fa\u4e86\u4e0e\u4e32\u884c RF Pro v0.9b \u8fdb\u884c\u4ea4\u4e92\u7684\u547d\u4ee4\u548c\u54cd\u5e94\u60c5\u51b5\u3002\n\n\n\n\n\n\n\u6307\u4ee4\uff08HEX\uff09\n\n\n\n\u63cf\u8ff0\n\n\n\n\u914d\u7f6e\u6307\u4ee4\uff08HEX\uff09\n\n\n\n\u54cd\u5e94\n\n\n\n\n\nF0\n\n\n\n\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u53c2\u6570\uff08 UART \u4f20\u8f93\u901f\u5ea6\u9664\u5916\uff09\uff0c\u5982\u4e0b\u6240\u793a\n\n\n\nAA FA F0\n\n\n\n4F 4B 0D 0A \uff08OK /r/n)\n\n\n\n\n\nE1\n\n\n\n\u8bfb\u53d6\u5f53\u524d\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a\n\n\n\nAA FA E1\n\n\n\n16\u4e2a\u5b57\u8282\uff1a\uff08 **\u6309\u7167\u4e0b\u9762\u7684\u987a\u5e8f** \uff09\n\nworking frequency-4 bytes,\nwireless data rate-4 bytes,\nreceiving bandwidth-2 bytes,\nfrequency deviation-1 byte,\ntransmission power-1 byte,\nUART transfer speed-4 bytes\n\n\n\n\n\n\n\nD2\n\n\n\n\u8bbe\u7f6e\u5de5\u4f5c\u9891\u7387\uff0c[\u53c2\u6570] 4\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1aHz\u3002\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a\n\n*   HM-TRP-433: 414000000-454000000Hz;\n\n*   HM-TRP-470: 450000000-490000000Hz;\n\n*   HM-TRP-868: 849000000-889000000Hz;\n\n*   HM-TRP-915: 895000000-935000000Hz\n\n\n\n\u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA D2 **36 89 CA C0**\uff0c\u8bbe\u7f6e\u9891\u7387\u4e3a 915000000Hz\uff08**0x36 89 CA C0 = 915000000**\uff09\n\n*  \u914d\u7f6e\u6307\u4ee4\uff1aAA FA D2 **19 DE 50 80**\uff0c\u8bbe\u7f6e\u9891\u7387\u4e3a 434000000Hz\uff08**0x19 DE 50 80 = 434000000**\uff09\n\n\n\n4F 4B 0D 0A \uff08OK /r/n)\n\n\n\n\n\nC3\n\n\n\n\u8bbe\u7f6e\u65e0\u7ebf\u6570\u636e\u901f\u7387\uff0c[\u53c2\u6570] 4\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1abps\u3002\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a1200-115200 bps\n\n\n\n\n\u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA C3 **00 00 25 80**\uff0c\u8bbe\u7f6e\u4f20\u8f93\u901f\u5ea6\u4e3a 9600bps\uff08**0x00 00 25 80 = 9600**\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA C3 **00 00 96 00**\uff0c\u8bbe\u7f6e\u4f20\u8f93\u901f\u5ea6\u4e3a 38400bps\uff08**0x00 00 96 00 = 38400**\uff09\n\n\n\n4F 4B 0D 0A \uff08OK /r/n)\n\n\n\n\n\nB4\n\n\n\n\u8bbe\u7f6e\u63a5\u6536\u5e26\u5bbd\uff0c[\u53c2\u6570] 2\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1aKHz\n\n\u8bbe\u5b9a\u8303\u56f4\uff1a30-620KHz\n\n\n\n\n\u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA B4 **00 69**\uff0c\u8bbe\u7f6e\u63a5\u6536\u9891\u5e26\u4e3a 105KHz\uff08**0x00 69 = 105**\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA B4 **01 2C**\uff0c\u8bbe\u7f6e\u63a5\u6536\u9891\u5e26\u4e3a 300KHz\uff08**0x01 2C = 300**\uff09\n\n\n\n4F 4B 0D 0A \uff08OK /r/n)\n\n\n\n\n\nA5\n\n\n\n\u8bbe\u7f6e\u9891\u504f\uff0c[\u53c2\u6570] 1\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1aKHz\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a10-160KHz\n\n\n\n\n\u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA A5 **23**\uff0c\u8bbe\u7f6e\u8c03\u5236\u9891\u7387\u4e3a 35KHz\uff08**0x23 = 35**\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA A5 **32**\uff0c\u8bbe\u7f6e\u8c03\u5236\u9891\u7387\u4e3a 50KHz\uff08**0x32 = 50**\uff09\n\n\n\n4F 4B 0D 0A \uff08OK /r/n)\n\n\n\n\n\n96\n\n\n\n\u8bbe\u7f6e\u53d1\u9001\u529f\u7387\uff0c[\u53c2\u6570] 1\u5b57\u8282\uff0c0\u301c7\u7ea7\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a0-7\u7ea7\uff081-20dBm\uff09\n\n\n\n\n\u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA 96 **07**\uff0c\u8bbe\u7f6e\u53d1\u5c04\u529f\u7387\u4e3a7\u7ea7\uff08+20 dBm\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA 96 **03**\uff0c\u8bbe\u7f6e\u53d1\u5c04\u529f\u7387\u4e3a3\u7ea7\uff08+8 dBm\uff09\n\nTransmission power level     Transmission power\n7                                 +20dBm\n6                                 +17dBm\n5                                 +14dBm\n4                                 +11dBm\n3                                 +8dBm\n2                                 +5dBm\n1                                 +2dBm\n0                                 +1dBm\n\n\n\n\n\n4F 4B 0D 0A \uff08OK /r/n)\n\n\n\n\n\n1E\n\n\n\n\u8bbe\u7f6eUART\u4f20\u8f93\u901f\u5ea6\uff0c[\u53c2\u6570] 4\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1abps\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a1200-115200 bps\n\n\n\n\n\u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA 1E **00 00 25 80**\uff0c\u8bbe\u7f6e\u901f\u5ea6\u4e3a 9600bps\uff08**0x00 00 25 80 = 9600**\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA 1E **00 00 96 00**\uff0c\u8bbe\u7f6e\u901f\u5ea6\u4e3a 38400bps\uff08**0x00 00 96 00 = 38400**\uff09\n\n\n\n4F 4B 0D 0A \uff08OK /r/n)\n\n\n\n\n\n87\n\n\n\n\u63a5\u6536\u6709\u7528\u6570\u636e\u65f6\u7684\u65e0\u7ebf\u4fe1\u53f7\u5f3a\u5ea6\uff0c\u65e0[\u53c2\u6570]\n\n\n\n\u914d\u7f6e\u8bf4\u660e\uff1aAA FA 87\n\n![](https://github.com/SeeedDocument/Grove-Serial_RF_Pro/raw/master/img/WirelesssignalstrengthRSSI.jpg)\n\n\n\n\nRSSI value is 8 bit, range: 0-255\n\n\n\n\n\n78\n\n\n\n\u65e0\u7ebf\u4fe1\u53f7\u5f3a\u5ea6\uff0c\u65e0[\u53c2\u6570]\n\n\u6ce8\u610f\uff1a\n\n*   \u8c03\u5236\u6307\u6570 : h = Fd/Rb, \u8303\u56f4\uff1a 0.5 ~ 32.\n\n*   \u5982\u679c h\n1, \u5219BW =Rb+2Fd; \u5982\u679c h\n1, \u5219BW =2Rb+ Fd.\n\n\n\n\u914d\u7f6e\u8bf4\u660e\uff1aAA FA 78\n\n\n\n RSSI \u503c\u4e3a 8 \u4f4d\uff0c\u8303\u56f4\uff1a0-255\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Code]\n \nSerial RF Pro Demo Code\n\n\n\n\n\n\n[Datasheet]\n \nHopeRF HM-TRP Series 100mW Transceiver modules V1.0 Datasheet", 
            "title": "Grove-Serial RF Pro"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_1", 
            "text": "\u7248\u672c\u8c03\u6574   \u7248\u672c\u63cf\u8ff0   \u53d1\u5e03\u65e5\u671f    v0.9b   \u9996\u6b21\u516c\u5f00\u53d1\u884c   NA", 
            "title": "\u7248\u672c\u66f4\u65b0"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_2", 
            "text": "Grove \u517c\u5bb9  \u9ad8\u8f93\u51fa\u529f\u7387  \u5c0f\u5c3a\u5bf8  \u66f4\u957f\u7684\u4f20\u8f93\u8ddd\u79bb", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_3", 
            "text": "\u8fdc\u7a0b\u63a7\u5236\uff0c\u8fdc\u7a0b\u6d4b\u91cf\u7cfb\u7edf  \u65e0\u7ebf\u7535\u8868  \u8bbf\u95ee\u63a7\u5236  \u8bc6\u522b\u7cfb\u7edf  \u6570\u636e\u91c7\u96c6  IT \u5bb6\u7528\u7535\u5668  \u5a74\u513f\u76d1\u62a4\u7cfb\u7edf", 
            "title": "\u521b\u65b0\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_4", 
            "text": "\u9879\u76ee   \u6700\u5c0f\u503c   \u6807\u51c6\u503c   \u6700\u5927\u503c   \u5355\u4f4d   \u5de5\u4f5c\u7535\u538b   4.75   5.0   5.25   VDC    \u7761\u7720\u6a21\u5f0f\u4e0b\u7684\u7535\u6d41   1   uA    \u8f93\u51fa\u5f3a\u5ea6   1   -   20   dB    \u901a\u8baf\u901f\u5ea6   1.2    -   115.2   Kbps    \u4f20\u8f93\u8ddd\u79bb\uff08\u6700\u5927\uff09   1   Km    \u7075\u654f\u5ea6   -117   dBm   \u901a\u4fe1\u534f\u8bae    UART   /    \u5de5\u4f5c\u6e29\u5ea6   -40    -   +85   \u2103", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_5", 
            "text": "\u90e8\u4ef6\u7c7b\u578b\uff085V\u903b\u8f91\u7535\u5e73\uff09   \u90e8\u4ef6\u63cf\u8ff0    G(GND)   \u63a5\u5730\u7aef\u53e3    EN(ENABLE)   \u8bbe\u7f6e\u6b63\u5e38\u6a21\u5f0f\u4e3a\u6570\u636e\u6536\u53d1\u5668\uff08\u9ed8\u8ba4\u503c\u4e3a\u4f4e: 10k \u81f3 GND \uff09\u3002\n\u8bbe\u7f6e\u9ad8\u7535\u5e73\u65f6\u8fdb\u5165\u7761\u7720\u6a21\u5f0f\u3002    CON(CONFIG)   \u8bbe\u7f6e\u4f4e\u7535\u5e73\u65f6\u662f\u914d\u7f6e\u6a21\u5f0f\uff08\u8fde\u63a5\u5230GND\uff09\u3002\n\u8bbe\u7f6e\u9ad8\u7535\u5e73\u65f6\u662f\u901a\u8baf\u6a21\u5f0f\uff08\u9ed8\u8ba4\u4e3a\u9ad8\uff09\u3002    RX   UART \u6570\u636e\u8f93\u5165    TX   UART \u6570\u636e\u8f93\u51fa    V(VCC)    5V\uff08+\uff09\u7535\u6e90\u4f9b\u7535    AT   \u63a5\u7ebf\u5f15\u811a", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_6", 
            "text": "\u5728\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e24\u4e2aRF Pro Grove \u5355\u5143\u76f8\u4e92\u53d1\u9001/\u63a5\u6536\u6570\u636e\u3002 \u60a8\u9700\u8981\u4e24\u4e2a RF Pro Grove \u5355\u5143\u548c\u4e24\u4e2a Seeeduino \u6765\u8fdb\u884c\u6f14\u793a\u3002   \u5c06\u4e00\u4e2a Grove - Serial RF Pro \u8fde\u63a5\u5230  Grove - Base Shield  \u7684 UART \uff0c\u7136\u540e\u5c06 Grove - Base Shield \u8fde\u63a5\u5230 Seeeduino\u3002     \u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u5c06\u53e6\u4e00\u4e2aGrove - Serial RF Pro \u8fde\u63a5\u5230 Seeeduino\u3002", 
            "title": "\u5165\u95e8"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_7", 
            "text": "\u5982\u679c ENABLE \u5f15\u811a\u4e3a\u4f4e\u7535\u5e73\uff0c\u5219 CONFIG \u5f15\u811a\u4e3a\u4f4e\u7535\u5e73\uff0c\u6a21\u5757\u5c06\u4e3a\u914d\u7f6e\u72b6\u6001\u3002\n\u5982\u679c\u7ea2\u7eff LED \u6301\u7eed\u4eae\u7740\uff0c\u6a21\u5757\u662f\u5c06\u5728 Config \u4e2d\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u914d\u7f6e   \u67e5\u8be2\u6a21\u5757\u3002    \u5c06 CON \u5f15\u811a\u8fde\u63a5\u5230 LOW / GND \u8fdb\u5165\u914d\u7f6e\u6a21\u5f0f\u3002    \u53d1\u9001\u547d\u4ee4\u4fee\u6539\u5e76\u67e5\u8be2\u6a21\u5757\u7684\u914d\u7f6e\u3002 \u914d\u7f6e   \u67e5\u8be2\u8bf4\u660e\u53c2\u89c1 \u53c2\u8003 .    Config \u6307\u4ee4\u683c\u5f0f\u4e3a AA + FA + [\u6307\u4ee4] + [\u53c2\u6570]\u3002 \u6307\u4ee4\u4e3a 1 \u5b57\u8282\uff0c\u53c2\u6570\u4e3a 0-4 \u5b57\u8282\u7684 HEX \u6570\u636e\uff08\u5927\u5b57\u8282\u6392\u5e8f\uff0c\u5728\u4f4e\u5b57\u8282\u524d\u7684\u9ad8\u5b57\u8282\uff09\u3002  \u6ce8\u610f:  1) \u8bf7\u8bb0\u4f4f UART \u7684\u4f20\u8f93\u901f\u5ea6\uff08\u9ed8\u8ba4\u4e3a 9600 \uff0c\u6700\u597d\u4e0d\u8981\u66f4\u6539\uff09\uff0c\u5982\u679c\u8fdb\u884c\u4e86\u4e00\u4e9b\u66f4\u6539\uff0c\u6216\u8005\u60a8\u5c06\u65e0\u6cd5\u63a7\u5236\u6a21\u5757\u3002 \u5982\u679c\u6539\u53d8 UART \u7684\u4f20\u8f93\u901f\u5ea6\uff0c\u6307\u4ee4\u7684\u4f20\u8f93\u901f\u5ea6\u5c06\u76f8\u5e94\u6539\u53d8\u3002 \u6307\u4ee4\u7684\u4f20\u8f93\u901f\u5ea6\u8303\u56f4\u4e3a 1.2 Kbps - 115.2 Kbps\u3002  2) LED\u529f\u80fd\u8bf4\u660e\uff1a\n- \u5f53\u7535\u6e90\u548c\u6a21\u5757\u6b63\u5728\u5de5\u4f5c\u65f6\uff0c\u7ea2\u8272\u548c\u7eff\u8272 LED \u5c06\u95ea\u70c1\u3002\n- \u5982\u679c EN\uff08ENABLE\uff09 \u5f15\u811a\u4e3a\u4f4e\u7535\u5e73\uff08\u9ed8\u8ba4\u4e3a\u4f4e\u7535\u5e73\uff09\uff0c\u5219 CON\uff08Config\uff09 \u5f15\u811a\u4e3a\u4f4e\u7535\u5e73\uff0c\u6a21\u5757\u5c06\u8fdb\u5165\u914d\u7f6e\u6a21\u5f0f\u3002 \u5728\u914d\u7f6e\u6a21\u5f0f\u4e0b\uff0c\u7ea2\u8272\u548c\u7eff\u8272 LED \u90fd\u5c06\u4eae\u8d77\u3002 - \u5982\u679c\u6a21\u5757\u672a\u5904\u4e8e\u914d\u7f6e\u6a21\u5f0f\uff0c\u7eff\u8272\u548c\u7ea2\u8272 LED \u5c06\u4e0d\u4f1a\u4eae\u8d77\u3002\n- \u5f53\u6a21\u5757\u53d1\u9001\u6570\u636e\u65f6\uff0c\u7ea2\u8272 LED \u95ea\u70c1\uff0c\u4f20\u8f93\u5b8c\u6210\u540e\u7ea2\u8272 LED \u5c06\u7184\u706d\u3002\n- \u5f53\u6a21\u5757\u6b63\u5728\u7b49\u5f85\u63a5\u6536\u6570\u636e\u65f6\uff0c\u7eff\u8272 LED \u7184\u706d\uff0c\u5f53\u6a21\u5757\u63a5\u6536\u5230\u6570\u636e\u65f6\uff0c\u7eff\u8272 LED \u5c06\u95ea\u70c1\u4e00\u6b21\u3002", 
            "title": "\u914d\u7f6e\u548c\u67e5\u8be2\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_8", 
            "text": "\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0a\u4f20\u5230 Seeeduino \uff0c\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002  //send data routine\n\n// link between the computer and the SoftSerial Shield\n//at 9600 bps 8-N-1\n//Computer is connected to Hardware UART\n//SoftSerial Shield is connected to the Software UART:D2 D3\n\n#include  SoftwareSerial.h \n\nSoftwareSerial SoftSerial(11, 10); // TX, RX\nint buffer[64];\nint count=0;\nvoid setup()\n{\n    SoftSerial.begin(9600);               // the SoftSerial baud rate\n    Serial.begin(9600);             // the Serial port of Arduino baud rate.\n\n}\n\nvoid loop()\n{\n    delay(1000);\n    SoftSerial.write(0xAA);\n    SoftSerial.write(0xFA);\n    SoftSerial.write(0xE1);\n\n    if (SoftSerial.available())              // if date is coming from software serial port ==  data is coming from SoftSerial shield\n    {\n        while(SoftSerial.available())          // reading data into char array\n        {\n            buffer[count++]=SoftSerial.read();     // writing data into array\n            if(count == 64)break;\n        }\n        for (int i=0; i count; i++) {\n            Serial.print(buffer[i],HEX);            // if no data transmission ends, write buffer to hardware serial port\n        }\n        clearBufferArray();              // call clearBufferArray function to clear the stored data from the array\n        count = 0;                       // set counter of while loop to zero\n    }\n    if (Serial.available())            // if data is available on hardware serial port ==  data is coming from PC or notebook\n    SoftSerial.write(Serial.read());       // write it to the SoftSerial shield\n    Serial.println( ... );\n}\nvoid clearBufferArray()              // function to clear buffer array\n{\n    for (int i=0; i count;i++)\n    { buffer[i]=NULL;}                  // clear all index of array with command NULL\n}   \u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u540e\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u7684\u754c\u9762\u3002", 
            "title": "\u901a\u8baf\u6a21\u5f0f"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_9", 
            "text": "\u4e0b\u8868\u5217\u51fa\u4e86\u4e0e\u4e32\u884c RF Pro v0.9b \u8fdb\u884c\u4ea4\u4e92\u7684\u547d\u4ee4\u548c\u54cd\u5e94\u60c5\u51b5\u3002    \u6307\u4ee4\uff08HEX\uff09  \u63cf\u8ff0  \u914d\u7f6e\u6307\u4ee4\uff08HEX\uff09  \u54cd\u5e94   F0  \u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u53c2\u6570\uff08 UART \u4f20\u8f93\u901f\u5ea6\u9664\u5916\uff09\uff0c\u5982\u4e0b\u6240\u793a  AA FA F0  4F 4B 0D 0A \uff08OK /r/n)   E1  \u8bfb\u53d6\u5f53\u524d\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a  AA FA E1  16\u4e2a\u5b57\u8282\uff1a\uff08 **\u6309\u7167\u4e0b\u9762\u7684\u987a\u5e8f** \uff09 working frequency-4 bytes,\nwireless data rate-4 bytes,\nreceiving bandwidth-2 bytes,\nfrequency deviation-1 byte,\ntransmission power-1 byte,\nUART transfer speed-4 bytes    D2  \u8bbe\u7f6e\u5de5\u4f5c\u9891\u7387\uff0c[\u53c2\u6570] 4\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1aHz\u3002\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a\n\n*   HM-TRP-433: 414000000-454000000Hz;\n\n*   HM-TRP-470: 450000000-490000000Hz;\n\n*   HM-TRP-868: 849000000-889000000Hz;\n\n*   HM-TRP-915: 895000000-935000000Hz  \u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA D2 **36 89 CA C0**\uff0c\u8bbe\u7f6e\u9891\u7387\u4e3a 915000000Hz\uff08**0x36 89 CA C0 = 915000000**\uff09\n\n*  \u914d\u7f6e\u6307\u4ee4\uff1aAA FA D2 **19 DE 50 80**\uff0c\u8bbe\u7f6e\u9891\u7387\u4e3a 434000000Hz\uff08**0x19 DE 50 80 = 434000000**\uff09  4F 4B 0D 0A \uff08OK /r/n)   C3  \u8bbe\u7f6e\u65e0\u7ebf\u6570\u636e\u901f\u7387\uff0c[\u53c2\u6570] 4\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1abps\u3002\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a1200-115200 bps  \u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA C3 **00 00 25 80**\uff0c\u8bbe\u7f6e\u4f20\u8f93\u901f\u5ea6\u4e3a 9600bps\uff08**0x00 00 25 80 = 9600**\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA C3 **00 00 96 00**\uff0c\u8bbe\u7f6e\u4f20\u8f93\u901f\u5ea6\u4e3a 38400bps\uff08**0x00 00 96 00 = 38400**\uff09  4F 4B 0D 0A \uff08OK /r/n)   B4  \u8bbe\u7f6e\u63a5\u6536\u5e26\u5bbd\uff0c[\u53c2\u6570] 2\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1aKHz\n\n\u8bbe\u5b9a\u8303\u56f4\uff1a30-620KHz  \u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA B4 **00 69**\uff0c\u8bbe\u7f6e\u63a5\u6536\u9891\u5e26\u4e3a 105KHz\uff08**0x00 69 = 105**\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA B4 **01 2C**\uff0c\u8bbe\u7f6e\u63a5\u6536\u9891\u5e26\u4e3a 300KHz\uff08**0x01 2C = 300**\uff09  4F 4B 0D 0A \uff08OK /r/n)   A5  \u8bbe\u7f6e\u9891\u504f\uff0c[\u53c2\u6570] 1\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1aKHz\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a10-160KHz  \u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA A5 **23**\uff0c\u8bbe\u7f6e\u8c03\u5236\u9891\u7387\u4e3a 35KHz\uff08**0x23 = 35**\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA A5 **32**\uff0c\u8bbe\u7f6e\u8c03\u5236\u9891\u7387\u4e3a 50KHz\uff08**0x32 = 50**\uff09  4F 4B 0D 0A \uff08OK /r/n)   96  \u8bbe\u7f6e\u53d1\u9001\u529f\u7387\uff0c[\u53c2\u6570] 1\u5b57\u8282\uff0c0\u301c7\u7ea7\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a0-7\u7ea7\uff081-20dBm\uff09  \u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA 96 **07**\uff0c\u8bbe\u7f6e\u53d1\u5c04\u529f\u7387\u4e3a7\u7ea7\uff08+20 dBm\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA 96 **03**\uff0c\u8bbe\u7f6e\u53d1\u5c04\u529f\u7387\u4e3a3\u7ea7\uff08+8 dBm\uff09 Transmission power level     Transmission power\n7                                 +20dBm\n6                                 +17dBm\n5                                 +14dBm\n4                                 +11dBm\n3                                 +8dBm\n2                                 +5dBm\n1                                 +2dBm\n0                                 +1dBm   4F 4B 0D 0A \uff08OK /r/n)   1E  \u8bbe\u7f6eUART\u4f20\u8f93\u901f\u5ea6\uff0c[\u53c2\u6570] 4\u5b57\u8282\uff0c[\u53c2\u6570]\u5355\u4f4d\uff1abps\n\n\u8bbe\u7f6e\u8303\u56f4\uff1a1200-115200 bps  \u793a\u4f8b:\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA 1E **00 00 25 80**\uff0c\u8bbe\u7f6e\u901f\u5ea6\u4e3a 9600bps\uff08**0x00 00 25 80 = 9600**\uff09\n\n*   \u914d\u7f6e\u6307\u4ee4\uff1aAA FA 1E **00 00 96 00**\uff0c\u8bbe\u7f6e\u901f\u5ea6\u4e3a 38400bps\uff08**0x00 00 96 00 = 38400**\uff09  4F 4B 0D 0A \uff08OK /r/n)   87  \u63a5\u6536\u6709\u7528\u6570\u636e\u65f6\u7684\u65e0\u7ebf\u4fe1\u53f7\u5f3a\u5ea6\uff0c\u65e0[\u53c2\u6570]  \u914d\u7f6e\u8bf4\u660e\uff1aAA FA 87\n\n![](https://github.com/SeeedDocument/Grove-Serial_RF_Pro/raw/master/img/WirelesssignalstrengthRSSI.jpg)  RSSI value is 8 bit, range: 0-255   78  \u65e0\u7ebf\u4fe1\u53f7\u5f3a\u5ea6\uff0c\u65e0[\u53c2\u6570]\n\n\u6ce8\u610f\uff1a\n\n*   \u8c03\u5236\u6307\u6570 : h = Fd/Rb, \u8303\u56f4\uff1a 0.5 ~ 32.\n\n*   \u5982\u679c h 1, \u5219BW =Rb+2Fd; \u5982\u679c h 1, \u5219BW =2Rb+ Fd.  \u914d\u7f6e\u8bf4\u660e\uff1aAA FA 78   RSSI \u503c\u4e3a 8 \u4f4d\uff0c\u8303\u56f4\uff1a0-255", 
            "title": "\u53ef\u4f9b\u53c2\u8003"
        }, 
        {
            "location": "/Grove-Serial_RF_Pro/#_10", 
            "text": "[Code]   Serial RF Pro Demo Code    [Datasheet]   HopeRF HM-TRP Series 100mW Transceiver modules V1.0 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/", 
            "text": "Grove - Mouse Encoder \u662f\u4e00\u79cd\u5177\u6709\u65cb\u8f6c\u65b9\u5411\u548c\u65cb\u8f6c\u901f\u5ea6\n[1]\n\u5e76\u80fd\u591f\u53cd\u9988\u6570\u636e\u7684\u673a\u68b0\u589e\u91cf\u5f0f\u65cb\u8f6c\u7f16\u7801\u5668\u3002 \u5b83\u6709\u6807\u51c6\u7684 Grove \u63a5\u53e3\uff0c\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u5e03\u7ebf\u548c\u7f16\u7a0b\u5de5\u4f5c\u3002 \u800c\u4e14\uff0c\u5b83\u9002\u5e94\u4e86\u9ad8\u8d1f\u8377\u548c\u6076\u52a3\u7684\u73af\u5883\u3002 \u8be5\u4ea7\u54c1\u53ef\u7528\u4f5c\u73a9\u5177\uff0c\u673a\u5668\u4eba\u548c\u6d88\u8d39\u8005\u8f93\u5165\u8bbe\u5907\u3002\n\n\n\n\n\n\nnote\n\n\u8bbe\u8ba1\u7684\u65cb\u8f6c\u901f\u5ea6\u5e94\u5c0f\u4e8e1000 rad / min\uff08\u5f27\u5ea6/\u5206\u949f\uff09.\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u80fd\u591f\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u73af\u5883\u3002\n\n\n\u9002\u5e94\u9ad8\u8d1f\u8377\u548c\u6076\u52a3\u73af\u5883\u3002\n\n\n\u5177\u6709\u826f\u597d\u7684\u5236\u52a8\u6027\u80fd\u3002\n\n\n\u6807\u51c6 Grove \u63a5\u53e3\uff0c\u4fbf\u4e8e\u7f16\u7a0b\u548c\u63a5\u7ebf\u3002\n\n\n\u51c6\u786e\u53ef\u9760\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u521b\u65b0\u5e94\u7528\n\n\n\u5b83\u80fd\u591f\u9002\u5e94\u6076\u52a3\u73af\u5883\u4e2d\u7684\u4e0d\u540c\u5e94\u7528\uff0c\u5982\u73a9\u5177\uff0c\u673a\u5668\u4eba\u548c\u6d88\u8d39\u8005\u8f93\u5165\u8bbe\u5907\u3002\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\u503c\n\n\n\u6807\u51c6\u503c\n\n\n\u6700\u5927\u503c\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b (V)\n\n\n\n\n3.3\n\n\n5.5\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41 (mA)\n\n\n\n\n10\n\n\n13\n\n\n\n\n\n\n\u6548\u7387\uff08\u6052\u901f\uff09\n\n\n\n\n50%\n\n\n\n\n\n\n\n\n\u76f8\u4f4d\u5dee\uff08\u6052\u901f\uff09\n\n\n\n\n\u03c0/4\n\n\n\n\n\n\n\n\n\u6bcf\u5708\u8109\u51b2\n\n\n\n\n12\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\u6ce8\u610f\n\n\n\u4ea7\u54c1\u5217\u8868\u4e2d\u6ca1\u6709\u65cb\u94ae\u9879\u3002 \u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7f16\u7801\u5668\u66f4\u80fd\u9002\u5e94\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0b\u5de5\u4f5c\u3002\n\n\n\u4f60\u80fd\u627e\u5230 \ndimensions\n \u7684 PDF \u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u5c3a\u5bf8\u9009\u62e9\u3002\n\n\n\n\n\n\n\n\u5c0f\u63d0\u793a\n\n\u5982\u679c\u60a8\u53ea\u662f\u4e3a\u9879\u76ee\u6784\u5efa\u6837\u677f\u539f\u578b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5408\u9002\u7684\u516d\u89d2\u87ba\u4e1d\u5200\u5200\u5934\u8c03\u8282\u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\nGrove \u754c\u9762\n \n\n\u8fde\u63a5\u4e3b\u63a7\u677f\u5982 \nSeeeduino\n \u677f\u4e0e\u9a71\u52a8\u677f\u3002\n\n\n\u516d\u89d2\u5f00\u53e3\n \n\n\u7528\u4e8e\u901a\u8fc7\u65cb\u94ae\u7684\u5f00\u53e3\n\n\n\u96f6\u4ef6\u6e05\u5355\n\n\n\n\n\n\n\n\n\u96f6\u4ef6\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - Mouse Encoder ( \u4e0d\u5305\u62ec\u65cb\u94ae )\n\n\n1 PC\n\n\n\n\n\n\nGrove - Universal Cable\n\n\n1 PC\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Grove - Mouse Encoder \u6784\u5efa IDE \u73af\u5883\u4ee5\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u3002\n\n\n\u8bf7\u53c2\u9605 \nSeeeduino V4.2\n\uff08\u53ef\u4ee5\u4e0e Arduino \u677f\u4ea4\u6362\uff09\uff0c\u4e86\u89e3\u5982\u4f55\u4e3a\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u5b8c\u6574\u7684 IDE \uff0c\u5982\u679c\u60a8\u4f7f\u7528Arduino\u539f\u7248\uff0c\u8bf7\u9605\u8bfb \nArduino \u6307\u5357\n\n\n\n\n\u6ce8\u610f\n\n\n\u5982\u679c\u65cb\u8f6c\u901f\u5ea6\u8d8a\u6162\uff0c\u8d1f\u8377\u4f1a\u8d8a\u5927\u3002\n\n\n\u5982\u679c\u65cb\u8f6c\u901f\u5ea6\u4e0d\u6052\u5b9a\uff0c\u8109\u51b2\u5bbd\u5ea6\uff08PW\uff09\u4e0d\u4f1a\u76f8\u540c\u3002\n\n\n\u65cb\u8f6c\u901f\u5ea6\u5e94\u4f4e\u4e8e 1000 rad / min\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u8f93\u51fa\u8109\u51b2\u5bbd\u5ea6 PW \u8fc7\u7a84\uff0c\u6216\u635f\u574f\u8be5\u7f16\u7801\u5668\u3002\n\n\n\u7531\u4e8e\u8be5\u7f16\u7801\u5668\u5185\u7684\u8109\u51b2\u4f4d\u7f6e\u4e0d\u786e\u5b9a\uff0c\u56e0\u6b64\u4e0d\u65cb\u8f6c\u65f6\u73af\u5883\u7684\u8f93\u51fa\u7535\u538b\u5c06\u4e0d\u786e\u5b9a\uff08\u9ad8\u6216\u4f4e\u7535\u538b\uff09\u3002\n\n\n\n\n\n\u57fa\u672c\u6f14\u793a\n\n\n\u6b64\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u68c0\u6d4b\u4f4d\u7f6e\u548c\u68c0\u6d4b\u65b9\u5411\u3002\n\n\n\u6750\u6599\u51c6\u5907\n\n\n\n\nSeeeduino V4.2\n\n\nBase shield V2.0\n\n\nUSB \u6570\u636e\u7ebf ( A \u578b\u53e3\u5230 B \u578b\u53e3)\n\n\n\n\n\u8fde\u63a5\u65b9\u5f0f\n\n\n\u8fde\u63a5\u6750\u6599\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n\n\n\n\u4ee3\u7801\n\n\n/* Read Quadrature Encoder\n* Connect Encoder to Pins encoder0PinA, encoder0PinB, and +5V.\n*\n* Sketch by max wolf / www.meso.net\n* v. 0.1 - very basic functions - mw 20061220\n*\n*/  \n\u00a0\n\u00a0\nint val;\nint encoder0PinA = 3;\nint encoder0PinB = 4;\nint encoder0Pos = 0;\nint encoder0PinALast = LOW;\nint n = LOW;\n\u00a0\nvoid setup() {\n    pinMode (encoder0PinA,INPUT);\n    pinMode (encoder0PinB,INPUT);\n    Serial.begin (115200);\n}\n\u00a0\nvoid loop() {\n    n = digitalRead(encoder0PinA);\n    if ((encoder0PinALast == LOW) \n (n == HIGH)) {\n        if (digitalRead(encoder0PinB) == LOW) {\n            encoder0Pos--;\n        } else {\n            encoder0Pos++;\n        }\n        Serial.println(encoder0Pos);\n        Serial.println (\n/\n);\n    }\n    encoder0PinALast = n;\n}\n\n\n\n\n\n\n\u590d\u5236\u4ee3\u7801\u5e76\u5c06\u5176\u8f7d\u5165\u5230\u63a7\u5236\u5668\u677f\u4e2d\u3002\n\n\n\u6253\u5f00\u76d1\u89c6\u5668\u7a97\u53e3\u3002\n\n\n\u5411\u5de6\u6216\u5411\u53f3\u8f6c\u52a8\u87ba\u4e1d\u5200\uff0c\u89c2\u5bdf\u73b0\u8c61\u3002\n\n\n\n\n\u8f93\u51fa\uff1a\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nSchematic files", 
            "title": "Grove-Mouse Encoder"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_1", 
            "text": "\u80fd\u591f\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u73af\u5883\u3002  \u9002\u5e94\u9ad8\u8d1f\u8377\u548c\u6076\u52a3\u73af\u5883\u3002  \u5177\u6709\u826f\u597d\u7684\u5236\u52a8\u6027\u80fd\u3002  \u6807\u51c6 Grove \u63a5\u53e3\uff0c\u4fbf\u4e8e\u7f16\u7a0b\u548c\u63a5\u7ebf\u3002  \u51c6\u786e\u53ef\u9760\u3002    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_2", 
            "text": "\u5b83\u80fd\u591f\u9002\u5e94\u6076\u52a3\u73af\u5883\u4e2d\u7684\u4e0d\u540c\u5e94\u7528\uff0c\u5982\u73a9\u5177\uff0c\u673a\u5668\u4eba\u548c\u6d88\u8d39\u8005\u8f93\u5165\u8bbe\u5907\u3002", 
            "title": "\u521b\u65b0\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_3", 
            "text": "\u9879\u76ee  \u6700\u5c0f\u503c  \u6807\u51c6\u503c  \u6700\u5927\u503c      \u5de5\u4f5c\u7535\u538b (V)   3.3  5.5    \u5de5\u4f5c\u7535\u6d41 (mA)   10  13    \u6548\u7387\uff08\u6052\u901f\uff09   50%     \u76f8\u4f4d\u5dee\uff08\u6052\u901f\uff09   \u03c0/4     \u6bcf\u5708\u8109\u51b2   12  -      \u6ce8\u610f  \u4ea7\u54c1\u5217\u8868\u4e2d\u6ca1\u6709\u65cb\u94ae\u9879\u3002 \u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7f16\u7801\u5668\u66f4\u80fd\u9002\u5e94\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0b\u5de5\u4f5c\u3002  \u4f60\u80fd\u627e\u5230  dimensions  \u7684 PDF \u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u5c3a\u5bf8\u9009\u62e9\u3002    \u5c0f\u63d0\u793a \n\u5982\u679c\u60a8\u53ea\u662f\u4e3a\u9879\u76ee\u6784\u5efa\u6837\u677f\u539f\u578b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5408\u9002\u7684\u516d\u89d2\u87ba\u4e1d\u5200\u5200\u5934\u8c03\u8282\u3002", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_4", 
            "text": "Grove \u754c\u9762   \n\u8fde\u63a5\u4e3b\u63a7\u677f\u5982  Seeeduino  \u677f\u4e0e\u9a71\u52a8\u677f\u3002  \u516d\u89d2\u5f00\u53e3   \n\u7528\u4e8e\u901a\u8fc7\u65cb\u94ae\u7684\u5f00\u53e3", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_5", 
            "text": "\u96f6\u4ef6\u540d\u79f0  \u6570\u91cf      Grove - Mouse Encoder ( \u4e0d\u5305\u62ec\u65cb\u94ae )  1 PC    Grove - Universal Cable  1 PC", 
            "title": "\u96f6\u4ef6\u6e05\u5355"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_6", 
            "text": "\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Grove - Mouse Encoder \u6784\u5efa IDE \u73af\u5883\u4ee5\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u3002  \u8bf7\u53c2\u9605  Seeeduino V4.2 \uff08\u53ef\u4ee5\u4e0e Arduino \u677f\u4ea4\u6362\uff09\uff0c\u4e86\u89e3\u5982\u4f55\u4e3a\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u5b8c\u6574\u7684 IDE \uff0c\u5982\u679c\u60a8\u4f7f\u7528Arduino\u539f\u7248\uff0c\u8bf7\u9605\u8bfb  Arduino \u6307\u5357   \u6ce8\u610f  \u5982\u679c\u65cb\u8f6c\u901f\u5ea6\u8d8a\u6162\uff0c\u8d1f\u8377\u4f1a\u8d8a\u5927\u3002  \u5982\u679c\u65cb\u8f6c\u901f\u5ea6\u4e0d\u6052\u5b9a\uff0c\u8109\u51b2\u5bbd\u5ea6\uff08PW\uff09\u4e0d\u4f1a\u76f8\u540c\u3002  \u65cb\u8f6c\u901f\u5ea6\u5e94\u4f4e\u4e8e 1000 rad / min\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u8f93\u51fa\u8109\u51b2\u5bbd\u5ea6 PW \u8fc7\u7a84\uff0c\u6216\u635f\u574f\u8be5\u7f16\u7801\u5668\u3002  \u7531\u4e8e\u8be5\u7f16\u7801\u5668\u5185\u7684\u8109\u51b2\u4f4d\u7f6e\u4e0d\u786e\u5b9a\uff0c\u56e0\u6b64\u4e0d\u65cb\u8f6c\u65f6\u73af\u5883\u7684\u8f93\u51fa\u7535\u538b\u5c06\u4e0d\u786e\u5b9a\uff08\u9ad8\u6216\u4f4e\u7535\u538b\uff09\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_7", 
            "text": "\u6b64\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u68c0\u6d4b\u4f4d\u7f6e\u548c\u68c0\u6d4b\u65b9\u5411\u3002", 
            "title": "\u57fa\u672c\u6f14\u793a"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_8", 
            "text": "Seeeduino V4.2  Base shield V2.0  USB \u6570\u636e\u7ebf ( A \u578b\u53e3\u5230 B \u578b\u53e3)", 
            "title": "\u6750\u6599\u51c6\u5907"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_9", 
            "text": "\u8fde\u63a5\u6750\u6599\u5982\u4e0b\u56fe\u6240\u793a\uff1a", 
            "title": "\u8fde\u63a5\u65b9\u5f0f"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_10", 
            "text": "/* Read Quadrature Encoder\n* Connect Encoder to Pins encoder0PinA, encoder0PinB, and +5V.\n*\n* Sketch by max wolf / www.meso.net\n* v. 0.1 - very basic functions - mw 20061220\n*\n*/  \n\u00a0\n\u00a0\nint val;\nint encoder0PinA = 3;\nint encoder0PinB = 4;\nint encoder0Pos = 0;\nint encoder0PinALast = LOW;\nint n = LOW;\n\u00a0\nvoid setup() {\n    pinMode (encoder0PinA,INPUT);\n    pinMode (encoder0PinB,INPUT);\n    Serial.begin (115200);\n}\n\u00a0\nvoid loop() {\n    n = digitalRead(encoder0PinA);\n    if ((encoder0PinALast == LOW)   (n == HIGH)) {\n        if (digitalRead(encoder0PinB) == LOW) {\n            encoder0Pos--;\n        } else {\n            encoder0Pos++;\n        }\n        Serial.println(encoder0Pos);\n        Serial.println ( / );\n    }\n    encoder0PinALast = n;\n}   \u590d\u5236\u4ee3\u7801\u5e76\u5c06\u5176\u8f7d\u5165\u5230\u63a7\u5236\u5668\u677f\u4e2d\u3002  \u6253\u5f00\u76d1\u89c6\u5668\u7a97\u53e3\u3002  \u5411\u5de6\u6216\u5411\u53f3\u8f6c\u52a8\u87ba\u4e1d\u5200\uff0c\u89c2\u5bdf\u73b0\u8c61\u3002   \u8f93\u51fa\uff1a", 
            "title": "\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-Mouse_Encoder/#_11", 
            "text": "Schematic files", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Switch-P/", 
            "text": "\u8fd9\u4e2a Grove - Switch(P) \u662f\u4e00\u4e2a\u8ff7\u4f60 SPDT \u90e8\u4ef6\uff0c\u975e\u5e38\u9002\u5408\u8fd0\u7528\u5728 \u201c\u5f00/\u5173\u201d \u60c5\u51b5\u4e2d\u3002 \u8fd9\u662f\u4e00\u4e2a\u53ef\u9760\u7684\u9ad8\u8d28\u91cf\u90e8\u4ef6\uff0c\u6211\u4eec\u5728\u8bb8\u591a\u677f\u5b50\u4e0a\u4f7f\u7528\u5b83\u3002 \u60a8\u5e94\u8be5\u4e3a\u60a8\u7684 Grove \u5f00\u53d1\u5236\u4f5c\u7cfb\u7edf\u8d2d\u7f6e\u4e00\u4e9b\u3002\n\n\n\u201cP\u201d \u662f\u4ec0\u4e48\u610f\u601d\uff1f  \u201cP\u201d \u7528\u4e8e\u672c\u4ea7\u54c1\u4e2d\u7684 \u201c\u9762\u677f\u5b89\u88c5\u201d \u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\nGrove \u63a5\u53e3\n\n\n\u4f7f\u7528\u65b9\u4fbf\n\n\n\u57fa\u7840 Grove \u90e8\u4ef6\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u4f7f\u7528\u65b9\u5f0f\n\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u663e\u793a\u5982\u4f55\u4f7f\u7528\u5f00\u5173\u6253\u5f00/\u5173\u95ed LED \u3002\u5de5\u4f5c\u539f\u7406\u548c\u4f7f\u7528\u65b9\u5f0f\u4e0e \nGrove-Button\n \u76f8\u540c\u3002\n\n\n\n\n\u5c06 Grove-LED \u8fde\u63a5\u5230 Grove-Basic Shield \u7684 \u6570\u5b57\u7aef\u53e3 \n13\n \uff0c\u5e76\u4f7f\u7528\u4e24\u6839 Grove \u8fde\u63a5\u7ebf\u5c06 Grove -Switch\uff08P\uff09 \u8fde\u63a5\u5230 \nGrove-Base Shield\n \u7684 \u6570\u5b57\u7aef\u53e3 \n2\n\u3002\n\n\n\u5c06 Grove-Base Shield \u8fde\u63a5\u5230 Arduino \uff0c\u5e76\u4f7f\u7528 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC \u3002\n\n\n\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u4ee3\u7801\u6bb5\u4e0a\u3002\n\n\n\n\n// constants won\nt change. They\nre used here to\n// set pin numbers:\nconst int switchPin = 2;     // the number of the pushbutton pin\nconst int ledPin =  13;      // the number of the LED pin\n\n// variables will change:\nint switchState = 0;         // variable for reading the pushbutton status\n\nvoid setup() {\n    // initialize the LED pin as an output:\n    //pinMode(ledPin, OUTPUT);\n    // initialize the switch pin as an input:\n    Serial.begin(9600);\n    pinMode(switchPin, INPUT);\n}\nvoid loop(){\n    // read the state of the switch value:\n    switchState = digitalRead(switchPin);\n\n    if (switchState == HIGH) {\n        // turn LED on:\n        // digitalWrite(ledPin, HIGH);\n        Serial.println(\nswitch high!\n);\n    }\n    else {\n        // turn LED off:\n        // digitalWrite(ledPin, LOW);\n        Serial.println(\nswitch low\n);\n    }\n}\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u540e\uff0c\u5f53\u5f00\u5173\u5904\u4e8e \nhigh\n \u7aef\u65f6\uff0c\u60a8\u53ef\u4ee5\u770b\u5230 LED \u5c06\u4eae\u8d77\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - Switch(P) Eagle File\n\n\nSchematic at Easyeda", 
            "title": "Grove-Switch-P"
        }, 
        {
            "location": "/Grove-Switch-P/#_1", 
            "text": "Grove \u63a5\u53e3  \u4f7f\u7528\u65b9\u4fbf  \u57fa\u7840 Grove \u90e8\u4ef6    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Switch-P/#_2", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Switch-P/#_3", 
            "text": "\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u663e\u793a\u5982\u4f55\u4f7f\u7528\u5f00\u5173\u6253\u5f00/\u5173\u95ed LED \u3002\u5de5\u4f5c\u539f\u7406\u548c\u4f7f\u7528\u65b9\u5f0f\u4e0e  Grove-Button  \u76f8\u540c\u3002   \u5c06 Grove-LED \u8fde\u63a5\u5230 Grove-Basic Shield \u7684 \u6570\u5b57\u7aef\u53e3  13  \uff0c\u5e76\u4f7f\u7528\u4e24\u6839 Grove \u8fde\u63a5\u7ebf\u5c06 Grove -Switch\uff08P\uff09 \u8fde\u63a5\u5230  Grove-Base Shield  \u7684 \u6570\u5b57\u7aef\u53e3  2 \u3002  \u5c06 Grove-Base Shield \u8fde\u63a5\u5230 Arduino \uff0c\u5e76\u4f7f\u7528 USB \u6570\u636e\u7ebf\u5c06 Arduino \u8fde\u63a5\u5230 PC \u3002  \u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u4ee3\u7801\u6bb5\u4e0a\u3002   // constants won t change. They re used here to\n// set pin numbers:\nconst int switchPin = 2;     // the number of the pushbutton pin\nconst int ledPin =  13;      // the number of the LED pin\n\n// variables will change:\nint switchState = 0;         // variable for reading the pushbutton status\n\nvoid setup() {\n    // initialize the LED pin as an output:\n    //pinMode(ledPin, OUTPUT);\n    // initialize the switch pin as an input:\n    Serial.begin(9600);\n    pinMode(switchPin, INPUT);\n}\nvoid loop(){\n    // read the state of the switch value:\n    switchState = digitalRead(switchPin);\n\n    if (switchState == HIGH) {\n        // turn LED on:\n        // digitalWrite(ledPin, HIGH);\n        Serial.println( switch high! );\n    }\n    else {\n        // turn LED off:\n        // digitalWrite(ledPin, LOW);\n        Serial.println( switch low );\n    }\n}  \u4e0a\u4f20\u4ee3\u7801\u540e\uff0c\u5f53\u5f00\u5173\u5904\u4e8e  high  \u7aef\u65f6\uff0c\u60a8\u53ef\u4ee5\u770b\u5230 LED \u5c06\u4eae\u8d77\u3002", 
            "title": "\u4f7f\u7528\u65b9\u5f0f"
        }, 
        {
            "location": "/Grove-Switch-P/#_4", 
            "text": "Grove - Switch(P) Eagle File  Schematic at Easyeda", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Magnetic_Switch/", 
            "text": "\u8fd9\u662f\u4e00\u4e2a Grove \u63a5\u53e3\u517c\u5bb9\u7684\u78c1\u6027\u5f00\u5173\u6a21\u5757\u3002 \u5b83\u662f\u57fa\u4e8e\u5bc6\u5c01\u7684\u5e72\u7c27\u7ba1\u5f00\u5173CT10\u3002 CT10\u662f\u5355\u5200\uff0c\u5355\u63b7\uff08SPST\uff09\u5f00\u5173\uff0c\u6709\u5e38\u5f00\u7684\u948c\u89e6\u70b9\u3002 \u4f20\u611f\u5668\u662f\u53cc\u7aef\u578b\u7684\uff0c\u53ef\u4ee5\u7528\u7535\u78c1\u94c1\uff0c\u6c38\u4e45\u78c1\u94c1\u6216\u4e24\u8005\u7684\u7ec4\u5408\u6765\u9a71\u52a8\u3002 \u78c1\u6027\u5f00\u5173\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\uff0c\u8bbe\u8ba1\u5e08\u53ef\u4ee5\u6839\u636e\u63a5\u8fd1\u7a0b\u5ea6\u5f00\u542f\u6216\u5173\u95ed\u7535\u8def\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u517c\u5bb9 Grove \u63a5\u53e3\n\n\n2.0cm x 2.0cm Grove \u6807\u51c6\u6a21\u5757\n\n\n\u6700\u5c0f\u5916\u89c2\u5c3a\u5bf8\n\n\n10W \u5141\u8bb8\u529f\u7387\n\n\n\u5177\u6709\u575a\u56fa\u7684\u5c01\u88c5\n\n\n\n\n\n\nTip\n\n\n\u66f4\u591a\u5173\u4e8e Grove \u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u63a5\u8fd1\u4f20\u611f\u5668\n\n\n\u5b89\u5168\u8b66\u62a5\u4f20\u611f\u5668\n\n\n\u6c34\u5e73\u4f20\u611f\u5668\n\n\n\u6d41\u91cf\u4f20\u611f\u5668\n\n\n\u8109\u51b2\u4f20\u611f\u5668\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u6b63\u5e38\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n4.75\n\n\n\n\n5.0\n\n\n\n\n5.25\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u5f00\u5173\u529f\u7387\n\n\n\n\n10\n\n\n\n\nW\n\n\n\n\n\n\n\n\n\u5f00\u5173\u7535\u538b AC\uff0cRMS \u503c\uff08\u6700\u5927\u503c\uff09\n\n\n\n\n\n 140\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u76f4\u6d41\u5f00\u5173\u7535\u6d41\n\n\n\n\n\n 500\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u652f\u6301\u76f4\u6d41\u7535\u6d41\n\n\n\n\n\n 0.5\n\n\n\n\nA\n\n\n\n\n\n\n\n\n\u63a5\u89e6\u7535\u963b\n\n\n\n\n\n200\n\n\n\n\nm\u03a9\n\n\n\n\n\n\n\n\n\u7edd\u7f18\u7535\u963b\n\n\n\n\n\n10\n6\n\n\n\n\n\nM\u03a9\n\n\n\n\n\n\n\n\n\u64cd\u4f5c\u6e29\u5ea6\n\n\n\n\n-40\n\n\n\n\n-\n\n\n\n\n125\n\n\n\n\n\u2103\n\n\n\n\n\n\n\n\n\u64cd\u4f5c\u8303\u56f4\n\n\n\n\n10\n\n\n\n\n-\n\n\n\n\n40\n\n\n\n\nAT\n\n\n\n\n\n\n\n\n\u652f\u6301\u5e73\u53f0\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u4f7f\u7528 \nArduino\n\n\n\u6b63\u5e38\u60c5\u51b5\u4e0b\u6a21\u5757\u7684 SIG \u5f15\u811a\u8f93\u51fa\u4f4e\u7535\u5e73\u3002\u5f53\u78c1\u94c1\u63a5\u8fd1\u5f00\u5173\u65f6\uff0c\u78c1\u6027\u5f00\u5173\u95ed\u5408\uff0cSIG \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\u3002\n\n\n\u4e0b\u56fe\u6f14\u793a\u4e86\u4f7f\u7528\u78c1\u6027\u5f00\u5173\u6765\u63a7\u5236 LED \u7684\u7b80\u5355\u5e94\u7528\u3002\u5f53\u653e\u7f6e\u4e00\u4e2a\u9760\u8fd1\u6a21\u5757\u7684\u78c1\u529b\u8db3\u591f\u7684\u78c1\u94c1\u65f6\uff0c\u5f00\u5173\u95ed\u5408\uff0c\u7136\u540e SIG \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\u3002\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u63a7\u5236 LED\u3002\n\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u78c1\u5f00\u5173\u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684 \nD9\n\uff0cLED \u8fde\u63a5\u5230 \nD13\n\u3002\u5f53\u78c1\u94c1\u63a5\u8fd1\u5f00\u5173\u65f6\uff0c\nSIG\n \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u7136\u540e LED \u4eae\u8d77\u3002\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230 Arduino \u7684\u65b0\u7a97\u53e3\u4e2d\uff1a\n\n\n\n\n    /*******************************************************************************/\n\n    /*\u5bf9 LED \u5f15\u811a\u548c\u78c1\u6027\u5f00\u5173\u7684\u5b8f\u5b9a\u4e49*/\n    #define MAGNECTIC_SWITCH 9\n    #define LED 13// Arduino or Seeeduino \u7684\u677f\u8f7d LED\n\n    void setup()\n    {\n        pinsInit();\n    }\n\n    void loop()\n    {\n        if(isNearMagnet())  //\u662f\u5426\u6709\u78c1\u94c1\u9760\u8fd1\u5f00\u5173\n        {\n            turnOnLED();\n        }\n        else\n        {\n            turnOffLED();\n        }\n    }\n    void pinsInit()\n    {\n        pinMode(MAGNECTIC_SWITCH, INPUT);\n        pinMode(LED,OUTPUT);\n    }\n\n    /* \u5982\u679c\u78c1\u94c1\u9760\u8fd1\u4e86\u5f00\u5173\uff0c\u5c31\u8fd4\u56de ture \uff0c\u5426\u5219\u8fd4\u56de false */\n    boolean isNearMagnet()\n    {\n        int sensorValue = digitalRead(MAGNECTIC_SWITCH);\n        if(sensorValue == HIGH) //\u5982\u679c\u4f20\u611f\u5668\u8f93\u51fa\u9ad8\u7535\u5e73\n        {\n            return true;        //\u662f\uff0c\u8fd4\u56de ture\n        }\n        else\n        {\n            return false;       //\u5426\uff0c\u8fd4\u56de false\n        }\n    }\n    void turnOnLED()\n    {\n        digitalWrite(LED,HIGH);\n    }\n    void turnOffLED()\n    {\n        digitalWrite(LED,LOW);\n    }\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\n\n\n\u5f53\u6709\u78c1\u94c1\u9760\u8fd1\u5f00\u5173\u65f6\uff0cLED \u5c31\u4f1a\u4eae\u8d77\u3002\u5927\u80c6\u7684\u8bd5\u8bd5\u5427\uff01\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n1.\u4f60\u5e94\u8be5\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+\u3002\n\n\n2.\u4f60\u5e94\u8be5\u5df2\u7ecf\u642d\u5efa\u597d\u4e86\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u53c2\u8003 \n\u8fd9\u91cc\n.\n\n\n3.\u8fde\u63a5\u65b9\u6cd5\n\n\n\n\n\u628a Magnet Switch \u7528 Grove \u7535\u7f06\u8fde\u63a5\u5230 Grovepi\u4e0a\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u793a\u4f8b\u76ee\u5f55\uff1a\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\u770b\u5982\u4e0b\u4ee3\u7801 (\u8fd9\u6bb5\u4ee3\u7801\u539f\u7528\u4e8e\u503e\u659c\u4f20\u611f\u5668)\n\n    nano grovepi_tilt_switch.py   # \nCtrl+x\n \u9000\u51fa #\n\n\n\n    import time\n    import grovepi\n\n    # \u628a Grove Tilt Switch \u8fde\u63a5\u5230 D3\n    # SIG,NC,VCC,GND\n    tilt_switch = 3\n\n    grovepi.pinMode(tilt_switch,\nINPUT\n)\n\n    while True:\n        try:\n            print grovepi.digitalRead(tilt_switch)\n            time.sleep(.5)\n\n        except IOError:\n            print \nError\n\n\n\n\n\n\n5.\u8fd0\u884c\u793a\u4f8b\u3002\n\n    sudo python grove_tilt_switch.py\n\n\n\n6.\u8fd0\u884c\u7ed3\u679c\n\n\n\u628a\u78c1\u94c1\u9760\u8fd1\u4f20\u611f\u5668\uff0c SIG \u5f15\u811a\u4f1a\u8f93\u51fa\u9ad8\u7535\u5e73\u3002\n\n\n\n\n\u8d44\u6599\u4e0b\u8f7d\n\n\n\n\n[Eagle \u6587\u4ef6]\nGrove-Magnetic Switch v0.9 Eagle File\n\n\n[\u6570\u636e\u624b\u518c]\nCT10 Datasheet\n\n\n[Eagle \u6587\u4ef6]\nGrove-Magnetic Switch v1.3 Eagle File\n\n\n[PDF \u6587\u4ef6]\nGrove-Magnetic Switch v1.3 PDF File", 
            "title": "Grove-Magnetic Switch"
        }, 
        {
            "location": "/Grove-Magnetic_Switch/#_1", 
            "text": "\u517c\u5bb9 Grove \u63a5\u53e3  2.0cm x 2.0cm Grove \u6807\u51c6\u6a21\u5757  \u6700\u5c0f\u5916\u89c2\u5c3a\u5bf8  10W \u5141\u8bb8\u529f\u7387  \u5177\u6709\u575a\u56fa\u7684\u5c01\u88c5    Tip  \u66f4\u591a\u5173\u4e8e Grove \u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Magnetic_Switch/#_2", 
            "text": "\u63a5\u8fd1\u4f20\u611f\u5668  \u5b89\u5168\u8b66\u62a5\u4f20\u611f\u5668  \u6c34\u5e73\u4f20\u611f\u5668  \u6d41\u91cf\u4f20\u611f\u5668  \u8109\u51b2\u4f20\u611f\u5668", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Magnetic_Switch/#_3", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u6b63\u5e38\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u5de5\u4f5c\u7535\u538b  \n4.75  \n5.0  \n5.25  \nV    \n\u5f00\u5173\u529f\u7387  \n10  \nW    \n\u5f00\u5173\u7535\u538b AC\uff0cRMS \u503c\uff08\u6700\u5927\u503c\uff09    140  \nV    \n\u76f4\u6d41\u5f00\u5173\u7535\u6d41    500  \nmA    \n\u652f\u6301\u76f4\u6d41\u7535\u6d41    0.5  \nA    \n\u63a5\u89e6\u7535\u963b   200  \nm\u03a9    \n\u7edd\u7f18\u7535\u963b   10 6   \nM\u03a9    \n\u64cd\u4f5c\u6e29\u5ea6  \n-40  \n-  \n125  \n\u2103    \n\u64cd\u4f5c\u8303\u56f4  \n10  \n-  \n40  \nAT", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Magnetic_Switch/#_4", 
            "text": "", 
            "title": "\u652f\u6301\u5e73\u53f0"
        }, 
        {
            "location": "/Grove-Magnetic_Switch/#_5", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Magnetic_Switch/#arduino", 
            "text": "\u6b63\u5e38\u60c5\u51b5\u4e0b\u6a21\u5757\u7684 SIG \u5f15\u811a\u8f93\u51fa\u4f4e\u7535\u5e73\u3002\u5f53\u78c1\u94c1\u63a5\u8fd1\u5f00\u5173\u65f6\uff0c\u78c1\u6027\u5f00\u5173\u95ed\u5408\uff0cSIG \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\u3002  \u4e0b\u56fe\u6f14\u793a\u4e86\u4f7f\u7528\u78c1\u6027\u5f00\u5173\u6765\u63a7\u5236 LED \u7684\u7b80\u5355\u5e94\u7528\u3002\u5f53\u653e\u7f6e\u4e00\u4e2a\u9760\u8fd1\u6a21\u5757\u7684\u78c1\u529b\u8db3\u591f\u7684\u78c1\u94c1\u65f6\uff0c\u5f00\u5173\u95ed\u5408\uff0c\u7136\u540e SIG \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\u3002\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u63a7\u5236 LED\u3002  \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u78c1\u5f00\u5173\u8fde\u63a5\u5230  Grove - Base Shield  \u7684  D9 \uff0cLED \u8fde\u63a5\u5230  D13 \u3002\u5f53\u78c1\u94c1\u63a5\u8fd1\u5f00\u5173\u65f6\uff0c SIG  \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u7136\u540e LED \u4eae\u8d77\u3002\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b\uff1a    \u628a\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230 Arduino \u7684\u65b0\u7a97\u53e3\u4e2d\uff1a       /*******************************************************************************/\n\n    /*\u5bf9 LED \u5f15\u811a\u548c\u78c1\u6027\u5f00\u5173\u7684\u5b8f\u5b9a\u4e49*/\n    #define MAGNECTIC_SWITCH 9\n    #define LED 13// Arduino or Seeeduino \u7684\u677f\u8f7d LED\n\n    void setup()\n    {\n        pinsInit();\n    }\n\n    void loop()\n    {\n        if(isNearMagnet())  //\u662f\u5426\u6709\u78c1\u94c1\u9760\u8fd1\u5f00\u5173\n        {\n            turnOnLED();\n        }\n        else\n        {\n            turnOffLED();\n        }\n    }\n    void pinsInit()\n    {\n        pinMode(MAGNECTIC_SWITCH, INPUT);\n        pinMode(LED,OUTPUT);\n    }\n\n    /* \u5982\u679c\u78c1\u94c1\u9760\u8fd1\u4e86\u5f00\u5173\uff0c\u5c31\u8fd4\u56de ture \uff0c\u5426\u5219\u8fd4\u56de false */\n    boolean isNearMagnet()\n    {\n        int sensorValue = digitalRead(MAGNECTIC_SWITCH);\n        if(sensorValue == HIGH) //\u5982\u679c\u4f20\u611f\u5668\u8f93\u51fa\u9ad8\u7535\u5e73\n        {\n            return true;        //\u662f\uff0c\u8fd4\u56de ture\n        }\n        else\n        {\n            return false;       //\u5426\uff0c\u8fd4\u56de false\n        }\n    }\n    void turnOnLED()\n    {\n        digitalWrite(LED,HIGH);\n    }\n    void turnOffLED()\n    {\n        digitalWrite(LED,LOW);\n    }   \u4e0a\u4f20\u4ee3\u7801  \u5f53\u6709\u78c1\u94c1\u9760\u8fd1\u5f00\u5173\u65f6\uff0cLED \u5c31\u4f1a\u4eae\u8d77\u3002\u5927\u80c6\u7684\u8bd5\u8bd5\u5427\uff01", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-Magnetic_Switch/#raspberry-pi", 
            "text": "1.\u4f60\u5e94\u8be5\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+\u3002  2.\u4f60\u5e94\u8be5\u5df2\u7ecf\u642d\u5efa\u597d\u4e86\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u53c2\u8003  \u8fd9\u91cc .  3.\u8fde\u63a5\u65b9\u6cd5   \u628a Magnet Switch \u7528 Grove \u7535\u7f06\u8fde\u63a5\u5230 Grovepi\u4e0a\u3002   4.\u8df3\u8f6c\u5230\u793a\u4f8b\u76ee\u5f55\uff1a     cd yourpath/GrovePi/Software/Python/   \u770b\u5982\u4e0b\u4ee3\u7801 (\u8fd9\u6bb5\u4ee3\u7801\u539f\u7528\u4e8e\u503e\u659c\u4f20\u611f\u5668)     nano grovepi_tilt_switch.py   #  Ctrl+x  \u9000\u51fa #      import time\n    import grovepi\n\n    # \u628a Grove Tilt Switch \u8fde\u63a5\u5230 D3\n    # SIG,NC,VCC,GND\n    tilt_switch = 3\n\n    grovepi.pinMode(tilt_switch, INPUT )\n\n    while True:\n        try:\n            print grovepi.digitalRead(tilt_switch)\n            time.sleep(.5)\n\n        except IOError:\n            print  Error    5.\u8fd0\u884c\u793a\u4f8b\u3002     sudo python grove_tilt_switch.py  6.\u8fd0\u884c\u7ed3\u679c  \u628a\u78c1\u94c1\u9760\u8fd1\u4f20\u611f\u5668\uff0c SIG \u5f15\u811a\u4f1a\u8f93\u51fa\u9ad8\u7535\u5e73\u3002", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-Magnetic_Switch/#_6", 
            "text": "[Eagle \u6587\u4ef6] Grove-Magnetic Switch v0.9 Eagle File  [\u6570\u636e\u624b\u518c] CT10 Datasheet  [Eagle \u6587\u4ef6] Grove-Magnetic Switch v1.3 Eagle File  [PDF \u6587\u4ef6] Grove-Magnetic Switch v1.3 PDF File", 
            "title": "\u8d44\u6599\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Bee_Socket/", 
            "text": "Grove - Bee Socket \u662f Xbee \u7cfb\u5217\u7684\u9002\u914d\u5668\uff0c\u5176\u65e0\u7ebf\u6a21\u5757\u53ef\u4ee5\u4e0eArduino\u8fde\u63a5\uff0c\u5982 WIFI Bee\uff0cRF Bee\uff0cBluetooth Bee \u7b49\u3002\u5b83\u4e0e Arduino \u517c\u5bb9\u4e14\u80fd\u66f4\u6709\u6548\u5730\u901a\u8fc7\u65e0\u7ebf\u7f51\u7edc\u8fdb\u884c\u5bf9\u7f51\u72b6\u7f51\u7edc\u7684\u8fd0\u884c\u3002 \u7a33\u538b\u5668 CJT1117 \u4fdd\u8bc1\u4e86 Xbee \u7a33\u5b9a\u7684 3.3 \u7535\u538b\u3002 LED \u53ef\u4ee5\u6e05\u695a\u5730\u663e\u793a grove \u7684\u5de5\u4f5c\u6a21\u5f0f\u3002\nGrove-Bee Socket \u4e0e \nXBee Shield\n \u5177\u6709\u76f8\u540c\u7684\u529f\u80fd\u3002 Grove-Bee Socket\u548c Arduino \u901a\u8fc7\u8fde\u63a5\u7ebf\u8fde\u63a5\uff0cXB Shield \u662f\u53ef\u4ee5\u8fde\u63a5\u5230 Arduino \u7684\u6807\u51c6\u9002\u914d\u5668\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u6807\u51c6 Bee Socket \u5f15\u811a\u548c Grove \u63a5\u53e3\n\n\n\n\n\n\n\u677f\u8f7d 3.3V \u7a33\u538b\u5668\u4e3a XBee \u4f9b\u7535\n\n\n\n\n\n\n\u7535\u5e73\u8f6c\u6362\u7535\u8def\n\n\n\n\n\n\nBee Socket \u5177\u6709\u590d\u4f4d\u6309\u94ae\n\n\n\n\n\n\n\u5177\u6709 Bee Socket \u663e\u793a\u7684 LED\n\n\n\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n\n\nJ1:\n Grove \u63a5\u53e3\uff0c\u7528\u4e8e\u8fde\u63a5 Arduino / Seeeduino \u7684 UART \u63a5\u53e3\u3002\n\n\nJ2,J3:\n \u9488\u5bf9 Xbee \u7684\u6bcf\u4e2a\u5f15\u811a\u7684\u8fde\u63a5\u63a5\u53e3\u3002\n\n\nJ4,J5:\n Bee \u5f15\u811a\n\n\nU1:\n CJT1117 IC\uff0c\u4f4e\u538b\u5dee\u7ebf\u6027\u7a33\u538b\u5668\u3002 \u7528\u4e8e XBee \u6a21\u5757\u7684 3.3V \u7535\u6e90\u3002\n\n\nU2,U3:\n  SN74LVC1G125 IC\uff0c\u4fdd\u62a4\u60a8\u7684 XBee \u514d\u53d7 5V \u7535\u538b\uff0c\u5e76\u8f6c\u6362\u4e3a 3.3V\u3002\n\n\nRSSI indicator:\n XBee RX \u4fe1\u53f7\u5f3a\u5ea6\u6307\u793a\u3002\n\n\nPWR LED:\n \u7535\u6e90\u6307\u793a\u706f\n\n\nASSOC indicator:\n  Xbee \u76f8\u5173\u6307\u6807.\n\n\nON/SLEEP LED:\n XBee \u6a21\u5757\u72b6\u6001\u6307\u793a\u706f.\n\n\n\u4f7f\u7528\u65b9\u5f0f\n\n\n\n\n\u4f7f\u7528 Grove - Bee Socket\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u63a7\u5236 Arduino / Seeeduino \u7684 Bee Socket \u3002 \u8fd9\u91cc\u4ee5 RF bee \u4e3a\u4f8b\uff0c\u6211\u4eec\u5c06\u544a\u8bc9\u60a8\u5982\u4f55\u4f7f\u7528\u5b83\u3002\n\n\n\n\n\n\n\u5c06 XBee \u6a21\u5757\u8fde\u63a5\u5230 bee \u5f15\u811a\u3002\n\n\n\n\n\n\n\u4f7f\u7528 Grove \u8fde\u63a5\u7ebf\u5c06 Grove - Bee Socket \u8fde\u63a5\u5230 Arduino / Seeeduino \u7684 \nUART\u63a5\u53e3\n\u3002 \u5e76\u5c06\u60a8\u7684 Arduino / Seeeduino \u901a\u8fc7 USB \u6570\u636e\u7ebf\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u3002\n\n\n\n\n\n\n\n\n\n\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u53d1\u9001\u4e00\u4e9b\u7b80\u5355\u7684 AT \u547d\u4ee4\uff0c\u4e3a RF bee \u548c\u53d1\u9001/\u63a5\u6536\u6570\u636e\u505a\u4e00\u4e9b\u57fa\u672c\u914d\u7f6e\u3002 \u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u5728\u4e0d\u66f4\u6539\u786c\u4ef6\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u56fa\u4ef6\u3002\n\n\n\n\n\u5982\u679c\u60a8\u9700\u8981\u6709\u5173\u5982\u4f55\u901a\u4fe1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u76f8\u5173 bee \u6a21\u5757\u7684 WIKI \u9875\u9762\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nBee Socket Eagle File", 
            "title": "Grove-Bee Socket"
        }, 
        {
            "location": "/Grove-Bee_Socket/#_1", 
            "text": "\u6807\u51c6 Bee Socket \u5f15\u811a\u548c Grove \u63a5\u53e3    \u677f\u8f7d 3.3V \u7a33\u538b\u5668\u4e3a XBee \u4f9b\u7535    \u7535\u5e73\u8f6c\u6362\u7535\u8def    Bee Socket \u5177\u6709\u590d\u4f4d\u6309\u94ae    \u5177\u6709 Bee Socket \u663e\u793a\u7684 LED", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Bee_Socket/#_2", 
            "text": "J1:  Grove \u63a5\u53e3\uff0c\u7528\u4e8e\u8fde\u63a5 Arduino / Seeeduino \u7684 UART \u63a5\u53e3\u3002  J2,J3:  \u9488\u5bf9 Xbee \u7684\u6bcf\u4e2a\u5f15\u811a\u7684\u8fde\u63a5\u63a5\u53e3\u3002  J4,J5:  Bee \u5f15\u811a  U1:  CJT1117 IC\uff0c\u4f4e\u538b\u5dee\u7ebf\u6027\u7a33\u538b\u5668\u3002 \u7528\u4e8e XBee \u6a21\u5757\u7684 3.3V \u7535\u6e90\u3002  U2,U3:   SN74LVC1G125 IC\uff0c\u4fdd\u62a4\u60a8\u7684 XBee \u514d\u53d7 5V \u7535\u538b\uff0c\u5e76\u8f6c\u6362\u4e3a 3.3V\u3002  RSSI indicator:  XBee RX \u4fe1\u53f7\u5f3a\u5ea6\u6307\u793a\u3002  PWR LED:  \u7535\u6e90\u6307\u793a\u706f  ASSOC indicator:   Xbee \u76f8\u5173\u6307\u6807.  ON/SLEEP LED:  XBee \u6a21\u5757\u72b6\u6001\u6307\u793a\u706f.", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Grove-Bee_Socket/#_3", 
            "text": "\u4f7f\u7528 Grove - Bee Socket\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u63a7\u5236 Arduino / Seeeduino \u7684 Bee Socket \u3002 \u8fd9\u91cc\u4ee5 RF bee \u4e3a\u4f8b\uff0c\u6211\u4eec\u5c06\u544a\u8bc9\u60a8\u5982\u4f55\u4f7f\u7528\u5b83\u3002    \u5c06 XBee \u6a21\u5757\u8fde\u63a5\u5230 bee \u5f15\u811a\u3002    \u4f7f\u7528 Grove \u8fde\u63a5\u7ebf\u5c06 Grove - Bee Socket \u8fde\u63a5\u5230 Arduino / Seeeduino \u7684  UART\u63a5\u53e3 \u3002 \u5e76\u5c06\u60a8\u7684 Arduino / Seeeduino \u901a\u8fc7 USB \u6570\u636e\u7ebf\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u3002      \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u53d1\u9001\u4e00\u4e9b\u7b80\u5355\u7684 AT \u547d\u4ee4\uff0c\u4e3a RF bee \u548c\u53d1\u9001/\u63a5\u6536\u6570\u636e\u505a\u4e00\u4e9b\u57fa\u672c\u914d\u7f6e\u3002 \u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u5728\u4e0d\u66f4\u6539\u786c\u4ef6\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u56fa\u4ef6\u3002   \u5982\u679c\u60a8\u9700\u8981\u6709\u5173\u5982\u4f55\u901a\u4fe1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u76f8\u5173 bee \u6a21\u5757\u7684 WIKI \u9875\u9762\u3002", 
            "title": "\u4f7f\u7528\u65b9\u5f0f"
        }, 
        {
            "location": "/Grove-Bee_Socket/#_4", 
            "text": "Bee Socket Eagle File", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/", 
            "text": "Grove - Mini Track ball \u5c06\u4e3a\u60a8\u7684\u5e94\u7528\u63d0\u4f9b\u4e00\u4e2a\u5b9e\u7528\u7684\u8fd0\u52a8\u8ddf\u8e2a\u529f\u80fd\u6a21\u5757\u539f\u578b\u8bbe\u8ba1\u3002 \u5b83\u5177\u6709\u9ad8\u7cbe\u5ea6\u3001\u5feb\u901f\u54cd\u5e94\u7684360\u5ea6\u68c0\u6d4b\u548c\u5355\u70b9\u68c0\u6d4b\u529f\u80fd\uff0c \u96c6\u6210\u5728\u82af\u7247 \nSTM32F103C8T6\n \u548c **AN48841B*\u4e2d\u3002 \u5b83\u4e5f\u4f7f\u7528 Grove \u63a5\u53e3\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u8fd9\u5c06\u4e3a\u60a8\u5728\u539f\u578b\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u8282\u7701\u5927\u91cf\u5de5\u4f5c\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u80fd\u591f 360\u00b0 \u5feb\u901f\u68c0\u6d4b\u3002\n\n\n\u6709\u534a\u900f\u660e\u7684\u70b9\u51fb\u6309\u94ae\u3002\n\n\n\u4f7f\u7528 Grove \u63a5\u53e3\u8fdb\u884c\u6807\u51c6\u5316\u3002\n\n\n\u5f3a\u5927\u7684 MCU \u80fd\u591f\u4e30\u5bcc\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u6e38\u620f\u624b\u67c4\u7684\u8ddf\u8e2a\u6a21\u5757\u3002\n\n\n\u89e6\u89c9\u63a7\u5236\u5668\u7684\u8ddf\u8e2a\u6a21\u5757\u3002\n\n\n\u73a9\u5177\u7684\u8ddf\u8e2a\u6a21\u5757\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u6570\u503c\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n3.3V~5.5V (\u6807\u51c6\u503c\u4e3a5V)\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n28 mA (\u6700\u5927\u5de5\u4f5c\u7535\u6d41\uff1a40 mA)\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\n\n\n-25 ~ 75 \u2103\n\n\n\n\n\n\nMCU\u9891\u7387\n\n\n64 MHz\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u7387\n\n\n105\u00b15kHz\n\n\n\n\n\n\n\u970d\u5c14\u6548\u5e94\u573a\u5f3a\u8303\u56f4\n\n\n(0.5) ~ (8) mT\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\nGrove \u754c\u9762\n \n\n\u4e3b\u63a7\u5236\u7535\u8def\u677f\u8fde\u63a5\uff0c\u5982 \nSeeeduino\n \u4e0e \nGrove - Mini Track Ball\n\u3002\n\n\nMCU (STM32F103C8T6)\n \n\n\u5fae\u63a7\u5236\u5668\u3002\n\n\n\u8ddf\u8e2a\u7403\n \n\n\u63a5\u53e3\u63a7\u5236\u52a8\u4f5c\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\n\u96f6\u4ef6\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - Mini Track Ball\n\n\n1PC\n\n\n\n\n\n\nGrove \u8fde\u63a5\u7ebf\n\n\n1PC\n\n\n\n\n\n\n\n\n\u5f00\u59cb\n\n\n\u6240\u9700\u6750\u6599\n\n\nSeeeduino x 1\n\n\nGrove \u8fde\u63a5\u7ebf x 1\n\n\n\n\nTip\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\n Grove - Base Shield v2\n \u4f7f\u8fde\u63a5\u5de5\u4f5c\u53d8\u5f97\u7b80\u5355\u3002\n\n\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6307\u5357\u6765\u6784\u5efa\u9002\u5f53\u7684IDE:\n\n\n\n\n\u6ce8\u610f\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86 Seeeduino\u3002\n\n\n\n\nWindows \u5165\u95e8\n\n\nMac OS X \u5165\u95e8\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801\n\n\n1.\u8bf7\u60a8\u4e0b\u8f7d \n\u793a\u4f8b\u4ee3\u7801\n \u3002\n\n\n2.\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684ZIP\u6587\u4ef6\u3002\n\n\n3.\u6253\u5f00\u6587\u4ef6 \nGrove \n-\n Mini_Track_ball_test.ino\n\n\n4.\u70e7\u5f55\uff08\u6216\u4e0a\u4f20\uff09\u4f60\u7684\u4ee3\u7801\u5230 Seeeduino \u677f\u3002\u5982\u679c\u4e0a\u4f20\u8fc7\u7a0b\u5b8c\u6210\uff0c\u8981\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u7a97\u53e3\uff0c\u5355\u51fb \n\u4e32\u884c\u76d1\u89c6\u5668\n \u5728\u83dc\u5355 \n\u5de5\u5177\n \u4e0b\u3002\n\n\n\n\nNote\n\n\u786e\u4fdd\u5728 **\u5de5\u5177** \u83dc\u5355\u4e0b.\u9009\u62e9\u4e86\u6b63\u786e\u7684 \n\u5f00\u53d1\u677f\n \u548c \n\u7aef\u53e3\n \n\n\n\n\n5.\u8ddf\u8e2a\u7403\u4e0a\u7684LED\u6307\u793a\u706f\u5c06\u4ee5\u4e0d\u540c\u7684\u6a21\u5f0f\u4eae\u8d77\uff0c\u6301\u7eed\u7ea650\u79d2\n\n\n6.\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u65cb\u8f6c\u6216\u201c\u70b9\u51fb\u201d\u8f68\u8ff9\u7403\u4ee5\u83b7\u53d6\u8ddf\u8e2a\u4fe1\u606f\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nSchematic in Eagle\n\n\nSchematic in PDF format\n\n\nSTM32F103C8T6 Datasheet\n\n\nAN48841B Datasheet\n\n\nLibrary file in Github", 
            "title": "Grove-Mini Track Ball"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_1", 
            "text": "\u80fd\u591f 360\u00b0 \u5feb\u901f\u68c0\u6d4b\u3002  \u6709\u534a\u900f\u660e\u7684\u70b9\u51fb\u6309\u94ae\u3002  \u4f7f\u7528 Grove \u63a5\u53e3\u8fdb\u884c\u6807\u51c6\u5316\u3002  \u5f3a\u5927\u7684 MCU \u80fd\u591f\u4e30\u5bcc\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_2", 
            "text": "\u6e38\u620f\u624b\u67c4\u7684\u8ddf\u8e2a\u6a21\u5757\u3002  \u89e6\u89c9\u63a7\u5236\u5668\u7684\u8ddf\u8e2a\u6a21\u5757\u3002  \u73a9\u5177\u7684\u8ddf\u8e2a\u6a21\u5757", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_3", 
            "text": "\u53c2\u6570  \u6570\u503c      \u5de5\u4f5c\u7535\u538b  3.3V~5.5V (\u6807\u51c6\u503c\u4e3a5V)    \u5de5\u4f5c\u7535\u6d41  28 mA (\u6700\u5927\u5de5\u4f5c\u7535\u6d41\uff1a40 mA)    \u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4  -25 ~ 75 \u2103    MCU\u9891\u7387  64 MHz    \u5de5\u4f5c\u9891\u7387  105\u00b15kHz    \u970d\u5c14\u6548\u5e94\u573a\u5f3a\u8303\u56f4  (0.5) ~ (8) mT", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_4", 
            "text": "Grove \u754c\u9762   \n\u4e3b\u63a7\u5236\u7535\u8def\u677f\u8fde\u63a5\uff0c\u5982  Seeeduino  \u4e0e  Grove - Mini Track Ball \u3002  MCU (STM32F103C8T6)   \n\u5fae\u63a7\u5236\u5668\u3002  \u8ddf\u8e2a\u7403   \n\u63a5\u53e3\u63a7\u5236\u52a8\u4f5c\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_5", 
            "text": "\u96f6\u4ef6\u540d\u79f0  \u6570\u91cf      Grove - Mini Track Ball  1PC    Grove \u8fde\u63a5\u7ebf  1PC", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_6", 
            "text": "", 
            "title": "\u5f00\u59cb"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_7", 
            "text": "Seeeduino x 1  Grove \u8fde\u63a5\u7ebf x 1   Tip \n\u60a8\u53ef\u4ee5\u4f7f\u7528  Grove - Base Shield v2  \u4f7f\u8fde\u63a5\u5de5\u4f5c\u53d8\u5f97\u7b80\u5355\u3002", 
            "title": "\u6240\u9700\u6750\u6599"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_8", 
            "text": "\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6307\u5357\u6765\u6784\u5efa\u9002\u5f53\u7684IDE:   \u6ce8\u610f \n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86 Seeeduino\u3002  Windows \u5165\u95e8  Mac OS X \u5165\u95e8", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_9", 
            "text": "", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_10", 
            "text": "1.\u8bf7\u60a8\u4e0b\u8f7d  \u793a\u4f8b\u4ee3\u7801  \u3002  2.\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684ZIP\u6587\u4ef6\u3002  3.\u6253\u5f00\u6587\u4ef6  Grove  -  Mini_Track_ball_test.ino  4.\u70e7\u5f55\uff08\u6216\u4e0a\u4f20\uff09\u4f60\u7684\u4ee3\u7801\u5230 Seeeduino \u677f\u3002\u5982\u679c\u4e0a\u4f20\u8fc7\u7a0b\u5b8c\u6210\uff0c\u8981\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u7a97\u53e3\uff0c\u5355\u51fb  \u4e32\u884c\u76d1\u89c6\u5668  \u5728\u83dc\u5355  \u5de5\u5177  \u4e0b\u3002   Note \n\u786e\u4fdd\u5728 **\u5de5\u5177** \u83dc\u5355\u4e0b.\u9009\u62e9\u4e86\u6b63\u786e\u7684  \u5f00\u53d1\u677f  \u548c  \u7aef\u53e3    5.\u8ddf\u8e2a\u7403\u4e0a\u7684LED\u6307\u793a\u706f\u5c06\u4ee5\u4e0d\u540c\u7684\u6a21\u5f0f\u4eae\u8d77\uff0c\u6301\u7eed\u7ea650\u79d2  6.\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u65cb\u8f6c\u6216\u201c\u70b9\u51fb\u201d\u8f68\u8ff9\u7403\u4ee5\u83b7\u53d6\u8ddf\u8e2a\u4fe1\u606f\u3002", 
            "title": "\u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801"
        }, 
        {
            "location": "/Grove-Mini_Track_Ball/#_11", 
            "text": "Schematic in Eagle  Schematic in PDF format  STM32F103C8T6 Datasheet  AN48841B Datasheet  Library file in Github", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-RTC/", 
            "text": "RTC \u6a21\u5757\u57fa\u4e8e\u652f\u6301 I2C \u534f\u8bae\u7684\u65f6\u949f\u82af\u7247 DS1307\u3002\u5b83\u91c7\u7528\u9502\u7535\u6c60 ( CR1225 )\u3002 \u65f6\u949f/\u65e5\u5386\u63d0\u4f9b\u79d2\u3001\u5206\u949f\u3001\u5c0f\u65f6\u3001\u65e5\u671f\u3001\u6708\u4efd\u548c\u5e74\u4efd\u3002 \u5bf9\u4e8e\u5c11\u4e8e 31 \u5929\u7684\u6708\u4efd\u6708\u5e95\u7684\u65e5\u671f\u4f1a\u81ea\u52a8\u8c03\u6574\uff0c\u5305\u62ec\u5bf9\u95f0\u5e74\u7684\u66f4\u6b63\u3002 \u65f6\u949f\u4ee5 24 \u5c0f\u65f6\u6216 12 \u5c0f\u65f6\u683c\u5f0f\u8fd0\u884c\uff0c\u5177\u6709 AM / PM \u6307\u793a\u706f\u3002 \u5b83\u53ef\u4ee5\u5728 2100 \u5e74\u4e4b\u524d\u6709\u6548\u3002\u4e3a\u4e86\u83b7\u5f97\u5f3a\u52b2\u7684\u6027\u80fd\uff0c\u60a8\u5fc5\u987b\u5c06 3 \u4f0f\u7684 CR1225 \u9502\u7535\u6c60\u653e\u5165\u7535\u6c60\u5ea7\u3002 \u5982\u679c\u4ec5\u4f7f\u7528\u4e3b\u7535\u6e90\uff0c\u5219\u6a21\u5757\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u56e0\u4e3a\u6676\u632f\u53ef\u80fd\u4e0d\u4f1a\u632f\u8361\u3002\n\n\n\n\n\n\nNote\n\n\u7535\u6c60\u4e0d\u5305\u62ec\u5728\u5185\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\nPCB \u5c3a\u5bf8 : 2.0cm*4.0cm\n\n\n\u63a5\u53e3 : 2.0mm pitch pin header\n\n\nIO \u7ed3\u6784 : SCL,SDA,VCC,GND\n\n\nROHS : YES\n\n\nVCC \uff1a3.3~5.5V\n\n\n\u903b\u8f91\u9ad8\u7535\u5e73\u8f93\u5165 \uff1a2.2~VCC+0.3 V\n\n\n\u903b\u8f91\u4f4e\u7535\u5e73\u8f93\u5165 \uff1a-0.3~+0.8 V\n\n\n\u7535\u6c60\u7535\u538b \uff1a2.0~3.5 V\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\nWith \nArduino\n\n\n\n\n\u8fde\u63a5\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a Grove - RTC \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - RTC\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u5c06\u6a21\u5757\u8fde\u63a5\u5230** Grove- Base Shield \n\u7684 **I2C\n \u63a5\u53e3\u3002\n\n\n\u5c06 Grove- Base Shield \u63d2\u5165 Arduino\u3002\n\n\n\u901a\u8fc7 USB \u7535\u7f06\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002\n\n\n\n\n\n\nNote\n\n \u4e3a\u4e86\u83b7\u5f97\u5f3a\u52b2\u7684\u6027\u80fd\uff0c\u60a8\u5fc5\u987b\u5c06 3 \u4f0f\u7684 CR1225 \u9502\u7535\u6c60\u653e\u5165\u7535\u6c60\u5ea7\u3002 \u5982\u679c\u4ec5\u4f7f\u7528\u4e3b\u7535\u6e90\uff0c\u5219\u6a21\u5757\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u56e0\u4e3a\u6676\u632f\u53ef\u80fd\u4e0d\u4f1a\u632f\u8361\u3002\n\n\n\n\n\n\n\n\nNote\n\n\n\u5982\u679c\u6211\u4eec\u6ca1\u6709\u5e95\u5ea7\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5 Grove-RTC \u5230 Arduino \u677f\u3002 \u8bf7\u6309\u7167\u4e0b\u9762\u7684\u8fde\u63a5\u3002\n\n\n\n\n\n\n\n\n\n\nGrove-RTC\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nVCC\n\n\nVCC\n\n\n\n\n\n\nSDA\n\n\nA4\n\n\n\n\n\n\nSCL\n\n\nA5\n\n\n\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\n\n\u4e0b\u8f7d \nRTC Library\n\u3002\n\n\n\u8bf7\u9075\u5faa \nhow to install an arduino library\n \u6b65\u9aa4\u6765\u5b89\u88c5\u5e93\u6587\u4ef6\u3002\n\n\n\u901a\u8fc7\u4ee5\u4e0b\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u4ee3\u7801 : \nFile -\n Example -\nRTC-\nSetTimeAndDisplay\n\u3002\n\n\n\n\n\n\n#include \nWire.h\n\n#include \nDS1307.h\n\n\nDS1307 clock;//define a object of DS1307 class\nvoid setup()\n{\n    Serial.begin(9600);\n    clock.begin();\n    clock.fillByYMD(2013,1,19);//Jan 19,2013\n    clock.fillByHMS(15,28,30);//15:28 30\n\n    clock.fillDayOfWeek(SAT);//Saturday\n    clock.setTime();//write time to the RTC chip\n}\nvoid loop()\n{\n    printTime();\n}\n    /*Function: Display time on the serial monitor*/\nvoid printTime()\n{\n    clock.getTime();\n    Serial.print(clock.hour, DEC);\n    Serial.print(\n:\n);\n    Serial.print(clock.minute, DEC);\n    Serial.print(\n:\n);\n    Serial.print(clock.second, DEC);\n    Serial.print(\n  \n);\n    Serial.print(clock.month, DEC);\n    Serial.print(\n/\n);\n    Serial.print(clock.dayOfMonth, DEC);\n    Serial.print(\n/\n);\n    Serial.print(clock.year+2000, DEC);\n    Serial.print(\n \n);\n    Serial.print(clock.dayOfMonth);\n    Serial.print(\n*\n);\n    switch (clock.dayOfWeek)// Friendly printout the weekday\n    {\n        case MON:\n        Serial.print(\nMON\n);\n        break;\n        case TUE:\n        Serial.print(\nTUE\n);\n        break;\n        case WED:\n        Serial.print(\nWED\n);\n        break;\n        case THU:\n        Serial.print(\nTHU\n);\n        break;\n        case FRI:\n        Serial.print(\nFRI\n);\n        break;\n        case SAT:\n        Serial.print(\nSAT\n);\n        break;\n        case SUN:\n        Serial.print(\nSUN\n);\n        break;\n    }\n    Serial.println(\n \n);\n}\n\n\n\n\n\n\n\u8bbe\u5b9a\u65f6\u95f4\uff0c\u5c06\u51fd\u6570\u53c2\u6570\u66f4\u6539\u4e3a\u5f53\u524d\u65e5\u671f/\u65f6\u95f4\u3002 \u8bf7\u6ce8\u610f\u53c2\u6570\u683c\u5f0f\u3002\n\n\n\n\nclock.fillByYMD(2013,1,19);//Jan 19,2013\nclock.fillByHMS(15,28,30);//15:28 30\n\nclock.fillDayOfWeek(SAT);//Saturday\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u7ed3\u679c\u3002\n\n\n\n\n\n\nWith Raspberry Pi\n\n\n\n\n\u8fde\u63a5\n\n\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n\n\n\n\n\n\nRaspberry pi\n\n\nGrove - RTC\n\n\nGrovepi+\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u6309\u7167 \ninstruction\n \u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\n\n\n\u4f7f\u7528 grove cable \u5c06\u4f20\u611f\u5668\u63d2\u5165 grovepi+ socket i2c-x(1~3)\u3002\n\n\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u6f14\u793a 1: Grove_i2c_rtc\n\n\n\n\n\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55 Navigate to the demos' directory:\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\u627e\u5230\u4ee3\u7801\u3002\n\n    nano grove_i2c_rtc.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Real Time Clock to any I2C port eg. I2C-1\n    # Can be found at I2C address 0x68\n    # SCL,SDA,VCC,GND\n\n    while True:\n        try:\n            print grovepi.rtc_getTime()\n            time.sleep(.5)\n\n        except IOError:\n            print \nError\n\n\n\n\n\n\n\n\n\u8fd0\u884c\u6f14\u793a\u3002\n\n    sudo python grove_i2c_rtc.py\n\n\n\n\n\n\n\n\u7ed3\u679c\u5982\u4e0b :\n\n\n\n\n\n\n\n\n\u6f14\u793a 2: Grove_rtc\n\n\n\n\n\u4f7f\u7528\u6b64\u6f14\u793a\u663e\u793a\u5171\u6709\u7684\u65f6\u95f4\n\n\n\n\n    /*\n     * Grove-RTC.py\n     * Demo for Raspberry Pi\n     *\n     * Copyright (c) 2014 seeed technology inc.\n     * Website   \u00a0: www.seeed.cc\n     * Author    \u00a0: Lambor\n     * Create Time: Nov 2014\n     * Change Log\u00a0:\n     *\n     * The MIT License (MIT)\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \nSoftware\n), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in\n     * all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \nAS IS\n, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     */\n\n    #!/usr/bin/python\n    import time\n    import smbus\n\n\n    bus = smbus.SMBus(1)    # 0 = /dev/i2c-0 (port I2C0), 1 = /dev/i2c-1 (port I2C1)   \n\n    class DS1307():     \n        def __init__(self):\n            self.MON = 1\n            self.TUE = 2\n            self.WED = 3\n            self.THU = 4\n            self.FRI = 5\n            self.SAT = 6\n            self.SUN = 7\n            self.DS1307_I2C_ADDRESS = 0x68\n\n            print \nbegin\n\n\n        def decToBcd(self, val):\n            return ( (val/10*16) + (val%10) )\n\n        def bcdToDec(self,  val):\n            return ( (val/16*10) + (val%16) )\n\n        def begin(self, news):\n            print news\n\n        def startClock(self):   \n            bus.write_byte(self.DS1307_I2C_ADDRESS, 0x00)\n            self.second = bus.read_byte(self.DS1307_I2C_ADDRESS) \n 0x7f\n            bus.write_byte_data(self.DS1307_I2C_ADDRESS, 0x00, self.second)\n\n            print \nstartClock..\n\n\n        def stopClock(self):                        \n            bus.write_byte(self.DS1307_I2C_ADDRESS, 0x00)\n            self.second = bus.read_byte(self.DS1307_I2C_ADDRESS) | 0x80\n            bus.write_byte_data(self.DS1307_I2C_ADDRESS, 0x00, self.second)         \n\n            print \nstopClock..\n\n\n        def setTime(self):\n            data = [self.decToBcd(self.second), self.decToBcd(self.minute), \\\n                    self.decToBcd(self.hour), self.decToBcd(self.dayOfWeek), \\\n                    self.decToBcd(self.dayOfMonth), self.decToBcd(self.month), \\\n                    self.decToBcd(self.year)]\n\n            bus.write_byte(self.DS1307_I2C_ADDRESS, 0x00)\n            bus.write_i2c_block_data(self.DS1307_I2C_ADDRESS,0x00,data)\n\n            print \nsetTime..\n\n\n        def getTime(self):\n            bus.write_byte(self.DS1307_I2C_ADDRESS, 0x00)\n            data = bus.read_i2c_block_data(self.DS1307_I2C_ADDRESS,0x00)\n            #A few of these need masks because certain bits are control bits\n            self.second = self.bcdToDec(data[0] \n 0x7f)\n            self.minute = self.bcdToDec(data[1])\n            self.hour = self.bcdToDec(data[2] \n 0x3f)  #Need to change this if 12 hour am/pm\n            self.dayOfWeek = self.bcdToDec(data[3])\n            self.dayOfMonth = self.bcdToDec(data[4])\n            self.month = self.bcdToDec(data[5])\n            self.year = self.bcdToDec(data[6])\n\n            print \ngetTime..\n\n\n        def fillByHMS(self, _hour,  _minute,  _second):\n            self.hour = _hour\n            self.minute = _minute\n            self.second = _second\n\n            print \nfillByHMS..\n\n\n        def fillByYMD(self, _year,  _month,  _day):     \n            self.year = _year - 2000\n            self.month = _month;\n            self.dayOfMonth = _day\n\n            print \nfillByYMD..\n\n\n        def fillDayOfWeek(self,  _dow):     \n            self.dayOfWeek = _dow\n\n            print \nfillDayOfWeek..\n\n\n    if __name__ == \n__main__\n:\n        clock = DS1307()\n        clock.fillByYMD(2015,3,5)\n        clock.fillByHMS(12,42,30)\n        clock.fillDayOfWeek(clock.THU)  \n        clock.setTime()\n        while True:     \n            clock.getTime()\n            print clock.hour, \n:\n, clock.minute, \n:\n, \\\n                    clock.second, \n \n, clock.dayOfMonth, \n/\n, \\\n                    clock.month, \n/\n, clock.year,\n  \n, \nweekday\n, \\\n                    \n:\n, clock.dayOfWeek            \n            time.sleep(1)\n\n\n\n\n\n\n\n\n\u5728\u4e0a\u9762\u521b\u5efa \ngrove_rtc.py\n \u548c\u590d\u5236\u4ee3\u7801.\n\n\n\n\n\n\n\u8fd0\u884c\u4ee3\u7801\n\n    sudo python grove_rtc.py\n\n\n\n\n\n\n\n\u7ed3\u679c\u5982\u4e0b :\n\n\n\n\n\n\n\n\nWithout Grove Shield\n\n\n\n\n\u8fde\u63a5\n\n\n\u6ca1\u6709Grove Shield\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u5f15\u811a\u5206\u914d\u589e\u52a0\u5230 Grove \u63a5\u53e3\u6765\u5b9e\u73b0\u8fde\u63a5\u5230 Arduino\u3002\n\n\n\n\n\n\n\n\ngrove\n\n\nArduino\n\n\n\n\n\n\n\n\n\n\nGND\n\n\nGND\n\n\n\n\n\n\nVCC\n\n\nVCC\n\n\n\n\n\n\nSDA\n\n\nSDA\n\n\n\n\n\n\nSCL\n\n\nSCL\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-RTC in Eagle format\n\n\n[PDF\u6587\u4ef6]\n \nGrove-RTC Schematic in PDF format\n\n\n[PDF\u6587\u4ef6]\n \nGrove-RTC PCB in PDF format\n\n\n[\u5e93\u6587\u4ef6]\nGithub repository for RTC\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nDS1307 Datasheet", 
            "title": "Grove-RTC"
        }, 
        {
            "location": "/Grove-RTC/#_1", 
            "text": "PCB \u5c3a\u5bf8 : 2.0cm*4.0cm  \u63a5\u53e3 : 2.0mm pitch pin header  IO \u7ed3\u6784 : SCL,SDA,VCC,GND  ROHS : YES  VCC \uff1a3.3~5.5V  \u903b\u8f91\u9ad8\u7535\u5e73\u8f93\u5165 \uff1a2.2~VCC+0.3 V  \u903b\u8f91\u4f4e\u7535\u5e73\u8f93\u5165 \uff1a-0.3~+0.8 V  \u7535\u6c60\u7535\u538b \uff1a2.0~3.5 V    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-RTC/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-RTC/#_2", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-RTC/#with-arduino", 
            "text": "", 
            "title": "With Arduino"
        }, 
        {
            "location": "/Grove-RTC/#_3", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a Grove - RTC \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - RTC  Base Shield           \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70      \u5c06\u6a21\u5757\u8fde\u63a5\u5230** Grove- Base Shield  \u7684 **I2C  \u63a5\u53e3\u3002  \u5c06 Grove- Base Shield \u63d2\u5165 Arduino\u3002  \u901a\u8fc7 USB \u7535\u7f06\u5c06 Arduino \u8fde\u63a5\u5230 PC\u3002    Note \n \u4e3a\u4e86\u83b7\u5f97\u5f3a\u52b2\u7684\u6027\u80fd\uff0c\u60a8\u5fc5\u987b\u5c06 3 \u4f0f\u7684 CR1225 \u9502\u7535\u6c60\u653e\u5165\u7535\u6c60\u5ea7\u3002 \u5982\u679c\u4ec5\u4f7f\u7528\u4e3b\u7535\u6e90\uff0c\u5219\u6a21\u5757\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u56e0\u4e3a\u6676\u632f\u53ef\u80fd\u4e0d\u4f1a\u632f\u8361\u3002    Note  \u5982\u679c\u6211\u4eec\u6ca1\u6709\u5e95\u5ea7\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5 Grove-RTC \u5230 Arduino \u677f\u3002 \u8bf7\u6309\u7167\u4e0b\u9762\u7684\u8fde\u63a5\u3002      Grove-RTC  Arduino      GND  GND    VCC  VCC    SDA  A4    SCL  A5", 
            "title": "\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-RTC/#_4", 
            "text": "\u4e0b\u8f7d  RTC Library \u3002  \u8bf7\u9075\u5faa  how to install an arduino library  \u6b65\u9aa4\u6765\u5b89\u88c5\u5e93\u6587\u4ef6\u3002  \u901a\u8fc7\u4ee5\u4e0b\u8def\u5f84\u76f4\u63a5\u6253\u5f00\u4ee3\u7801 :  File -  Example - RTC- SetTimeAndDisplay \u3002    #include  Wire.h \n#include  DS1307.h \n\nDS1307 clock;//define a object of DS1307 class\nvoid setup()\n{\n    Serial.begin(9600);\n    clock.begin();\n    clock.fillByYMD(2013,1,19);//Jan 19,2013\n    clock.fillByHMS(15,28,30);//15:28 30 \n    clock.fillDayOfWeek(SAT);//Saturday\n    clock.setTime();//write time to the RTC chip\n}\nvoid loop()\n{\n    printTime();\n}\n    /*Function: Display time on the serial monitor*/\nvoid printTime()\n{\n    clock.getTime();\n    Serial.print(clock.hour, DEC);\n    Serial.print( : );\n    Serial.print(clock.minute, DEC);\n    Serial.print( : );\n    Serial.print(clock.second, DEC);\n    Serial.print(    );\n    Serial.print(clock.month, DEC);\n    Serial.print( / );\n    Serial.print(clock.dayOfMonth, DEC);\n    Serial.print( / );\n    Serial.print(clock.year+2000, DEC);\n    Serial.print(   );\n    Serial.print(clock.dayOfMonth);\n    Serial.print( * );\n    switch (clock.dayOfWeek)// Friendly printout the weekday\n    {\n        case MON:\n        Serial.print( MON );\n        break;\n        case TUE:\n        Serial.print( TUE );\n        break;\n        case WED:\n        Serial.print( WED );\n        break;\n        case THU:\n        Serial.print( THU );\n        break;\n        case FRI:\n        Serial.print( FRI );\n        break;\n        case SAT:\n        Serial.print( SAT );\n        break;\n        case SUN:\n        Serial.print( SUN );\n        break;\n    }\n    Serial.println(   );\n}   \u8bbe\u5b9a\u65f6\u95f4\uff0c\u5c06\u51fd\u6570\u53c2\u6570\u66f4\u6539\u4e3a\u5f53\u524d\u65e5\u671f/\u65f6\u95f4\u3002 \u8bf7\u6ce8\u610f\u53c2\u6570\u683c\u5f0f\u3002   clock.fillByYMD(2013,1,19);//Jan 19,2013\nclock.fillByHMS(15,28,30);//15:28 30 \nclock.fillDayOfWeek(SAT);//Saturday   \u4e0a\u4f20\u4ee3\u7801\u3002  \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u7ed3\u679c\u3002", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-RTC/#with-raspberry-pi", 
            "text": "", 
            "title": "With Raspberry Pi"
        }, 
        {
            "location": "/Grove-RTC/#_5", 
            "text": "\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9:      Raspberry pi  Grove - RTC  Grovepi+           \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70      \u6309\u7167  instruction  \u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002  \u4f7f\u7528 grove cable \u5c06\u4f20\u611f\u5668\u63d2\u5165 grovepi+ socket i2c-x(1~3)\u3002", 
            "title": "\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-RTC/#_6", 
            "text": "\u6f14\u793a 1: Grove_i2c_rtc   \u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55 Navigate to the demos' directory:     cd yourpath/GrovePi/Software/Python/   \u627e\u5230\u4ee3\u7801\u3002     nano grove_i2c_rtc.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Real Time Clock to any I2C port eg. I2C-1\n    # Can be found at I2C address 0x68\n    # SCL,SDA,VCC,GND\n\n    while True:\n        try:\n            print grovepi.rtc_getTime()\n            time.sleep(.5)\n\n        except IOError:\n            print  Error     \u8fd0\u884c\u6f14\u793a\u3002     sudo python grove_i2c_rtc.py    \u7ed3\u679c\u5982\u4e0b :     \u6f14\u793a 2: Grove_rtc   \u4f7f\u7528\u6b64\u6f14\u793a\u663e\u793a\u5171\u6709\u7684\u65f6\u95f4       /*\n     * Grove-RTC.py\n     * Demo for Raspberry Pi\n     *\n     * Copyright (c) 2014 seeed technology inc.\n     * Website   \u00a0: www.seeed.cc\n     * Author    \u00a0: Lambor\n     * Create Time: Nov 2014\n     * Change Log\u00a0:\n     *\n     * The MIT License (MIT)\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the  Software ), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in\n     * all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED  AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     */\n\n    #!/usr/bin/python\n    import time\n    import smbus\n\n\n    bus = smbus.SMBus(1)    # 0 = /dev/i2c-0 (port I2C0), 1 = /dev/i2c-1 (port I2C1)   \n\n    class DS1307():     \n        def __init__(self):\n            self.MON = 1\n            self.TUE = 2\n            self.WED = 3\n            self.THU = 4\n            self.FRI = 5\n            self.SAT = 6\n            self.SUN = 7\n            self.DS1307_I2C_ADDRESS = 0x68\n\n            print  begin \n\n        def decToBcd(self, val):\n            return ( (val/10*16) + (val%10) )\n\n        def bcdToDec(self,  val):\n            return ( (val/16*10) + (val%16) )\n\n        def begin(self, news):\n            print news\n\n        def startClock(self):   \n            bus.write_byte(self.DS1307_I2C_ADDRESS, 0x00)\n            self.second = bus.read_byte(self.DS1307_I2C_ADDRESS)   0x7f\n            bus.write_byte_data(self.DS1307_I2C_ADDRESS, 0x00, self.second)\n\n            print  startClock.. \n\n        def stopClock(self):                        \n            bus.write_byte(self.DS1307_I2C_ADDRESS, 0x00)\n            self.second = bus.read_byte(self.DS1307_I2C_ADDRESS) | 0x80\n            bus.write_byte_data(self.DS1307_I2C_ADDRESS, 0x00, self.second)         \n\n            print  stopClock.. \n\n        def setTime(self):\n            data = [self.decToBcd(self.second), self.decToBcd(self.minute), \\\n                    self.decToBcd(self.hour), self.decToBcd(self.dayOfWeek), \\\n                    self.decToBcd(self.dayOfMonth), self.decToBcd(self.month), \\\n                    self.decToBcd(self.year)]\n\n            bus.write_byte(self.DS1307_I2C_ADDRESS, 0x00)\n            bus.write_i2c_block_data(self.DS1307_I2C_ADDRESS,0x00,data)\n\n            print  setTime.. \n\n        def getTime(self):\n            bus.write_byte(self.DS1307_I2C_ADDRESS, 0x00)\n            data = bus.read_i2c_block_data(self.DS1307_I2C_ADDRESS,0x00)\n            #A few of these need masks because certain bits are control bits\n            self.second = self.bcdToDec(data[0]   0x7f)\n            self.minute = self.bcdToDec(data[1])\n            self.hour = self.bcdToDec(data[2]   0x3f)  #Need to change this if 12 hour am/pm\n            self.dayOfWeek = self.bcdToDec(data[3])\n            self.dayOfMonth = self.bcdToDec(data[4])\n            self.month = self.bcdToDec(data[5])\n            self.year = self.bcdToDec(data[6])\n\n            print  getTime.. \n\n        def fillByHMS(self, _hour,  _minute,  _second):\n            self.hour = _hour\n            self.minute = _minute\n            self.second = _second\n\n            print  fillByHMS.. \n\n        def fillByYMD(self, _year,  _month,  _day):     \n            self.year = _year - 2000\n            self.month = _month;\n            self.dayOfMonth = _day\n\n            print  fillByYMD.. \n\n        def fillDayOfWeek(self,  _dow):     \n            self.dayOfWeek = _dow\n\n            print  fillDayOfWeek.. \n\n    if __name__ ==  __main__ :\n        clock = DS1307()\n        clock.fillByYMD(2015,3,5)\n        clock.fillByHMS(12,42,30)\n        clock.fillDayOfWeek(clock.THU)  \n        clock.setTime()\n        while True:     \n            clock.getTime()\n            print clock.hour,  : , clock.minute,  : , \\\n                    clock.second,    , clock.dayOfMonth,  / , \\\n                    clock.month,  / , clock.year,    ,  weekday , \\\n                     : , clock.dayOfWeek            \n            time.sleep(1)    \u5728\u4e0a\u9762\u521b\u5efa  grove_rtc.py  \u548c\u590d\u5236\u4ee3\u7801.    \u8fd0\u884c\u4ee3\u7801     sudo python grove_rtc.py    \u7ed3\u679c\u5982\u4e0b :", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-RTC/#without-grove-shield", 
            "text": "", 
            "title": "Without Grove Shield"
        }, 
        {
            "location": "/Grove-RTC/#_7", 
            "text": "\u6ca1\u6709Grove Shield\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u5f15\u811a\u5206\u914d\u589e\u52a0\u5230 Grove \u63a5\u53e3\u6765\u5b9e\u73b0\u8fde\u63a5\u5230 Arduino\u3002     grove  Arduino      GND  GND    VCC  VCC    SDA  SDA    SCL  SCL", 
            "title": "\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-RTC/#_8", 
            "text": "[Eagle\u6587\u4ef6]   Grove-RTC in Eagle format  [PDF\u6587\u4ef6]   Grove-RTC Schematic in PDF format  [PDF\u6587\u4ef6]   Grove-RTC PCB in PDF format  [\u5e93\u6587\u4ef6] Github repository for RTC  [\u82af\u7247\u6570\u636e\u624b\u518c]   DS1307 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-I2C_ADC/", 
            "text": "Grove - I2C ADC \u662f\u57fa\u4e8e ADC121C021 \u7684 12 \u4f4d\u7cbe\u5bc6 ADC \u6a21\u5757\u3002\u901a\u8fc7\u63d0\u4f9b\u6052\u5b9a\u7684\u53c2\u8003\u7535\u538b\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u60a8\u63d0\u9ad8\u4ece\u6a21\u62df\u4f20\u611f\u5668\u6536\u96c6\u7684\u6570\u503c\u7684\u51c6\u786e\u6027\u3002\u7531\u4e8e\u5176\u5730\u5740\u53ef\u53d8\uff0c\u6700\u591a\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u6700\u591a 9 \u4e2a I2C ADC\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u8be5\u6a21\u5757\u63d0\u4f9b\u81ea\u52a8\u7761\u7720\u529f\u80fd\uff0c\u53ef\u5927\u5927\u964d\u4f4e\u529f\u8017\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u4f4e\u529f\u8017\n\n\n\u9ad8\u7cbe\u5ea6\n\n\n\u81ea\u52a8\u6389\u7535\u6a21\u5f0f\n\n\n\u5730\u5740\u53ef\u53d8\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u5178\u578b\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n5.0\n\n\nVDC\n\n\n\n\n\n\n\u5206\u8fa8\u7387\n\n\n12\n\n\nBit\n\n\n\n\n\n\n\u91c7\u6837\u7387\n\n\n188.9\n\n\nksps\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n40X20\n\n\nmm\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nJ1:\n \u7528\u4e8e\u5c06 Arduino IIC \u63a5\u53e3\u8fde\u63a5\u4e3a Grove - I2C ADC \u8f93\u51fa\u63a5\u53e3\u3002\n\n\nJ2:\n \u7528\u4e8e\u5c06\u6a21\u62df\u4f20\u611f\u5668\u8fde\u63a5\u4e3a Grove - I2C ADC \u8f93\u5165\u63a5\u53e3\u3002\n\n\nU1:\n ADC121C021 IC\uff0c12 \u4f4d\u6a21\u6570\u8f6c\u6362\u5668\n\n\n\u9ed1\u7ebf\u533a\u57df\u7528\u4e8e\u8bbe\u7f6e IIC \u5730\u5740\u3002 ADDR0 \u548c ADDR1 \u8fd0\u51fa\u8fde\u63a5\u5230 L\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u66f4\u6539\u4e3a \"H\"\uff0c\u6216\u8005\u901a\u8fc7\u5728\u677f\u4e0a\u8fdb\u884c\u4e00\u70b9\u4fee\u6539\u628a\u5b83\u66f4\u6539\u4e3a Floating\uff08\u60ac\u7a7a\uff09 ( Floating \u65e2\u4e0d\u8fde\u63a5 \"H\" \u4e5f\u4e0d\u8fde\u63a5 \"L\")\u3002 \u8bf7\u5728\u53c2\u8003\u8d44\u6599\u4e2d\u67e5\u627e\u8be6\u7ec6\u4fe1\u606f\u3002\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\nGrove - I2C ADC \u6709\u4e24\u4e2a\u63a5\u53e3 : \u8f93\u5165\u63d2\u5ea7 \n(J2)\n \u548c\u8f93\u51fa\u63d2\u5ea7 \n(J1)\n\u3002 \u5c06\u6a21\u62df\u4f20\u611f\u5668\u8fde\u63a5\u5230Grove - I2C ADC \u7684\u8f93\u5165\u63d2\u5ea7\uff0c\u5e76\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06 I2C ADC \u8fde\u63a5\u5230 Arduino/Seeeduino\u3002\n\n\n\u4ee5 Grove - Gas Sensor \u4e3a\u4f8b\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 Grove - I2C ADC \u8bfb\u53d6\u4f20\u611f\u5668\u6570\u636e\u3002\n\u786c\u4ef6\u5b89\u88c5\u5e94\u8be5\u662f\u8fd9\u6837\u7684 :\n\n\n\n\n\u73b0\u5728\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u8bfb\u53d6\u6c14\u4f53\u4f20\u611f\u5668\u7684\u503c\u3002\n\n\n#include \nWire.h\n\n\u00a0\n#define ADDR_ADC121             0x55\n\u00a0\n#define V_REF 3.00\n\u00a0\n#define REG_ADDR_RESULT         0x00\n#define REG_ADDR_ALERT          0x01\n#define REG_ADDR_CONFIG         0x02\n#define REG_ADDR_LIMITL         0x03\n#define REG_ADDR_LIMITH         0x04\n#define REG_ADDR_HYST           0x05\n#define REG_ADDR_CONVL          0x06\n#define REG_ADDR_CONVH          0x07\n\u00a0\nunsigned int getData;\nfloat analogVal=0;         // convert\nvoid init_adc()\n{\n  Wire.beginTransmission(ADDR_ADC121);        // transmit to device\n  Wire.write(REG_ADDR_CONFIG);                // Configuration Register\n  Wire.write(0x20);\n  Wire.endTransmission();  \n}\n\u00a0\nvoid read_adc()     //unsigned int *data\n{\n\u00a0\n\u00a0\n    Wire.beginTransmission(ADDR_ADC121);        // transmit to device\n    Wire.write(REG_ADDR_RESULT);                // get result\n    Wire.endTransmission();\n\u00a0\n    Wire.requestFrom(ADDR_ADC121, 2);           // request 2byte from device\n    delay(1);\n    if(Wire.available()\n=2)\n    {\n      getData = (Wire.read()\n0x0f)\n8;\n      getData |= Wire.read();\n    }\n    Serial.print(\ngetData:\n);\n    Serial.println(getData);\n    delay(5);\n    Serial.print(\nThe analog value is:\n);\n    Serial.print(getData*V_REF*2/4096);\n    Serial.println(\nV\n);\n}\nvoid setup()\n{\n  Serial.begin(9600);\n  Wire.begin();\n  init_adc();\n}\n\u00a0\nvoid loop()\n{  read_adc();//adcRead);\n   delay(50);\n}\n\n\n\n\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u53c2\u8003\u7535\u538b\u5b9a\u4e49\u4e3a\u7531 I2C ADC \u6a21\u5757\u51b3\u5b9a\u7684 3.0V\u3002\u8be5\u53c2\u8003\u7535\u538b\u6bd4\u7531\u5fae\u63a7\u5236\u5668\u751f\u6210\u7684\u53c2\u8003\u7535\u538b\u66f4\u7cbe\u786e\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u6d4b\u91cf \nVA\n \u548c \nGND\n \u4e4b\u95f4\u7684\u7535\u538b\u6765\u4f7f\u5176\u66f4\u51c6\u786e\uff0c\u5e76\u4f7f\u7528\u8be5\u503c\u66ff\u6362\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684 3.00\u3002\n\n\n\u73b0\u5728\u60a8\u53ef\u4ee5\u4e0a\u4f20\u8fd9\u4e2a\u4ee3\u7801\u3002\n\n\n\u7136\u540e\uff0c\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u5e76\u8bfb\u53d6\u503c :\n\n\n\n\n\n\nNote\n\nGrove - I2C ADC \u7684\u5730\u5740\u662f\u53ef\u66f4\u6539\u7684\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u5176\u5730\u5740\u3002\u8fd9\u9700\u8981\u5728\u677f\u4e0a\u8fdb\u884c\u4e00\u4e9b\u786c\u4ef6\u4fee\u6539\u3002\u5982\u679c\u60a8\u6b63\u5728\u8003\u8651\u540c\u65f6\u4f7f\u7528\u591a\u4e2a I2C ADC\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u53c2\u8003\u90e8\u5206\u4e2d\u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u7684I2C ADC \u7684\u6700\u5927\u503c\u4e3a 9\uff0c\u4f46\u5728 \nGrove - Base Shield V1.2\n \u4e0a\u53ea\u6709 4 \u4e2a I2C \u63d2\u69fd\uff0c\u56e0\u6b64\u5982\u679c\u8981\u4f7f\u7528\u8d85\u8fc7 4 \u4e2a I2C ADC\uff0c\u8bf7\u4f7f\u7528 \nGrove - I2C Hub\n \u521b\u5efa\u66f4\u591a I2C \u63d2\u69fd\u3002\n\n\n\n\n\u4e0e Beaglebone Green \u4e00\u8d77\u4f7f\u7528\n\n\n\u8981\u5728 BBG \u5f00\u59cb\u7f16\u8f91\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528 Cloud9 IDE\u3002\n\u4f5c\u4e3a\u719f\u6089 Cloud9 IDE \u7684\u7b80\u5355\u7ec3\u4e60\uff0c\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u95ea\u70c1 BeagleBone \u4e0a\u7684\u4e00\u4e2a LED \u662f\u4e00\u4e2a\u597d\u7684\u5f00\u59cb\uff0c\u8fd9 4 \u4e2a LED \u662f\u7528\u6237\u53ef\u7f16\u7a0b\u7684\u3002\n\n\n\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 Cloud9 IDE\uff0c\u8bf7\u6309\u7167 \n\u8fd9\u4e2a\u94fe\u63a5\n \u8fdb\u884c\u64cd\u4f5c\u3002\n\n\nStep1 :\n \u5c06 Grove - UART \u63d2\u5ea7\u8bbe\u7f6e\u4e3a Grove - GPIO \u63d2\u5ea7\uff0c\u53ea\u9700\u6309\u7167 \n\u8fd9\u4e2a\u94fe\u63a5\n \u64cd\u4f5c\u5373\u53ef\u3002\n\n\nStep2 :\n \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \n\"+\"\n \u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\n\n\n\n\n\n\nStep3 :\n \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u9009\u9879\u5361\u4e2d\u3002\n\n\nfrom Adafruit_I2C import Adafruit_I2C\nimport time\n\u00a0\nADDR_ADC121 = 0x50\n\u00a0\nREG_ADDR_RESULT = 0x00\nREG_ADDR_ALERT = 0x01\nREG_ADDR_CONFIG = 0x02\nREG_ADDR_LIMITL = 0x03\nREG_ADDR_LIMITH = 0x04\nREG_ADDR_HYST = 0x05\nREG_ADDR_CONVL = 0x06\nREG_ADDR_CONVH = 0x07\n\u00a0\ni2c = Adafruit_I2C(ADDR_ADC121)           \n\u00a0\nclass I2cAdc:\n    def __init__(self):\n        i2c.write8(REG_ADDR_CONFIG, 0x20)\n\u00a0\n    def read_adc(self):\n        \nRead ADC data 0-4095.\n\n        data_list = i2c.readList(REG_ADDR_RESULT, 2)\n        #print \ndata list\n, data_list\n        data = ((data_list[0] \n 0x0f) \n 8 | data_list[1]) \n 0xfff\n        return data\n\u00a0\nif __name__ == \n__main__\n:\n    # Connect the Grove - I2C ADC to I2C Grove port of Beaglebone Green.\n    adc = I2cAdc()\n    while True:\n        print \nsensor value \n, adc.read_adc()\n        time.sleep(.2)\n\n\n\n\nStep4 :\n \u901a\u8fc7\u5355\u51fb\u78c1\u76d8\u56fe\u6807\u4fdd\u5b58\u6587\u4ef6\uff0c\u5e76\u4e3a\u6587\u4ef6\u63d0\u4f9b .py \u6269\u5c55\u540d\u3002\n\n\nStep5 :\n \u5c06 Grove I2C ADC \u8fde\u63a5\u5230 BBG \u4e0a\u7684 Grove I2C \u63d2\u5ea7\u3002\n\n\nStep6 :\n \u8fd0\u884c\u4ee3\u7801\u4f60\u4f1a\u53d1\u73b0\u7ec8\u7aef\u6bcf 2 \u79d2\u8f93\u51fa\u4e00\u6b21 AD \u503c\u3002\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\nI2C \u5730\u5740\u8bbe\u7f6e\n\n\nADC I2C \u5177\u6709\u7531 ADR0 \u548c ADR1 \u51b3\u5b9a\u7684 7 \u4f4d\u786c\u4ef6\u5730\u5740\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cADR0 \u548c ADR1 \u8fde\u63a5\u5230\u677f\u5185\u7684 \n\"L\"\n\u3002 \u4f46\u4f60\u53ef\u4ee5\u6539\u53d8\u5b83\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u5200\u5207\u65ad \n\"L\"\n \u548c ADR0 \u4e4b\u95f4\u7684\u8fde\u63a5(\u5982\u4e0b\u56fe\u6240\u793a)\uff0c\u7136\u540e\u5c06 ADR0 \u7684\u72b6\u6001\u7f6e\u4e3a Floating(\u65e0\u8fde\u63a5)\u3002\u800c\u4e14\u5982\u679c\u4f60\u8fd9\u6b21\u710a\u63a5 ADR0 \u548c \n\"H\"\n\uff0c\u90a3\u4e48\u4f60\u7684 ADR0 \u7684\u503c\u4e3a \n\"H\"\n\u3002\n\n\n\n\n\u60a8\u53ef\u4ee5\u5728\u4e0b\u8868\u4e2d\u627e\u5230\u786c\u4ef6 I2C \u5730\u5740\u4e0e ADR0 \u548c ADR1 \u7684\u503c\u7684\u5173\u7cfb\u3002\n\n\n\n\n\n\n\n\u8bbe\u5907\u5730\u5740[A6 - A0]\n\n\n\n\nADR0 \u548c ADR1 \u8f93\u5165\u72b6\u6001\n\n\n\n\n\n\n\n\nADR1\n\n\n\n\nADR0\n\n\n\n\n\n\n\n\n1010000(0x50)\n\n\n\n\nFloating\n\n\n\n\nFloating\n\n\n\n\n\n\n\n\n1010001(0x51)\n\n\n\n\nFloating\n\n\n\n\nL\n\n\n\n\n\n\n\n\n1010010(0x52)\n\n\n\n\nFloating\n\n\n\n\nH\n\n\n\n\n\n\n\n\n1010100(0x54)\n\n\n\n\nL\n\n\n\n\nFloating\n\n\n\n\n\n\n\n\n1010101(default 0x55)\n\n\n\n\nL\n\n\n\n\nL\n\n\n\n\n\n\n\n\n1010110(0x56)\n\n\n\n\nL\n\n\n\n\nH\n\n\n\n\n\n\n\n\n1011000(0x58)\n\n\n\n\nH\n\n\n\n\nFloating\n\n\n\n\n\n\n\n\n1011001(0x59)\n\n\n\n\nH\n\n\n\n\nL\n\n\n\n\n\n\n\n\n1011010(0x5A)\n\n\n\n\nH\n\n\n\n\nH\n\n\n\n\n\n\n\n\nI2C ADC \u589e\u52a0\u4e86\u591a\u5c11\u7cbe\u5ea6\uff1f\n\n\n\u8fd9\u662f\u4e00\u4e2a\u5b9e\u9a8c\uff0c\u8ba9\u60a8\u4e86\u89e3 I2C ADC \u5982\u4f55\u63d0\u9ad8\u6a21\u62df\u4f20\u611f\u5668\u7684\u7cbe\u5ea6\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4ece Grove - Gas Sensor(MQ5) \u68c0\u67e5 Arduino/Seeeduino \u4e0a\u6a21\u62df\u7aef\u53e3\u76f4\u63a5\u6536\u96c6\u7684\u6570\u503c\u3002\n\n\n\n\n\u6211\u4eec\u4e0a\u4f20\u4e0b\u9762\u7684\u4ee3\u7801\u4ee5\u83b7\u53d6\u6570\u636e\u3002\n\n\n    /*\n     * Grove - Gas Sensor(MQ5)  \n     *\n     * The Gas Sensor detect the related Gas density,\n     * Arduino get the result by analogread. the gas Density is\n     * 0~1, larger the output is, the denser the gas.\n     * Connect the Sensor to A0 in this demo;\n     *\n     *  By: http://www.seeedstudio.com\n    */\n    #define Vref 4.95\n    void setup() {\n      Serial.begin(9600);\n    }\n\n    void loop() {\n      float vol;\n      int sensorValue = analogRead(A0);\n      vol=(float)sensorValue/1023*Vref;\n      Serial.print(\nThe sensorValue is \n);\n      Serial.println(sensorValue);\n      Serial.print(\nThe analog value is \n);\n      Serial.print(vol);\n      Serial.println(\nV\n);\n      delay(100);\n    }\n\n\n\n\n\u7ed3\u679c\u5982\u4e0b:\n\n\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53c2\u8003\u7535\u538b\u7531 Arduino \u751f\u6210\uff0c\u7406\u8bba\u4e0a\u4e3a 5V\u3002\u4f46\u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u4e2a\u4f1a\u5bfc\u81f4\u6700\u7ec8\u6570\u636e\u7684\u504f\u5dee\u7684\u6d6e\u52a8\u503c\u3002\u4f7f\u7528 Grove - I2C ADC \u65f6\u53ef\u907f\u514d\u8fd9\u79cd\u4e0d\u51c6\u786e\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edd\u5bf9\u7684 3.0V \u4e3a\u53c2\u8003\u7535\u538b\u3002\n\u76f8\u53cd\uff0c\u5728\u76f8\u540c\u7684\u6761\u4ef6\u4e0b\uff0c\u7531 Grove - I2C ADC \u7535\u8def\u91c7\u96c6\u7684\u4f20\u611f\u5668\u503c\u8303\u56f4\u5982\u4e0b\u6240\u793a :\n\n\n\n\n\u4e3a\u4e86\u627e\u51fa\u54ea\u4e2a\u7ed3\u679c\u66f4\u8d34\u8fd1\u5b9e\u9645\u60c5\u51b5\uff0c\u6211\u4eec\u7528\u4e07\u7528\u8868\u6d4b\u91cf\u4f20\u611f\u5668\u5f15\u811a \nSIG\n \u548c\u5f15\u811a \nGND\n \u4e4b\u95f4\u7684\u7535\u538b\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nI2C ADC Eagle File\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nADC121C021 Datasheet", 
            "title": "Grove-I2C ADC"
        }, 
        {
            "location": "/Grove-I2C_ADC/#_1", 
            "text": "\u4f4e\u529f\u8017  \u9ad8\u7cbe\u5ea6  \u81ea\u52a8\u6389\u7535\u6a21\u5f0f  \u5730\u5740\u53ef\u53d8    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-I2C_ADC/#_2", 
            "text": "\u9879\u76ee  \u5178\u578b\u503c  \u5355\u4f4d      \u5de5\u4f5c\u7535\u538b  5.0  VDC    \u5206\u8fa8\u7387  12  Bit    \u91c7\u6837\u7387  188.9  ksps    \u5c3a\u5bf8  40X20  mm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-I2C_ADC/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-I2C_ADC/#_3", 
            "text": "J1:  \u7528\u4e8e\u5c06 Arduino IIC \u63a5\u53e3\u8fde\u63a5\u4e3a Grove - I2C ADC \u8f93\u51fa\u63a5\u53e3\u3002  J2:  \u7528\u4e8e\u5c06\u6a21\u62df\u4f20\u611f\u5668\u8fde\u63a5\u4e3a Grove - I2C ADC \u8f93\u5165\u63a5\u53e3\u3002  U1:  ADC121C021 IC\uff0c12 \u4f4d\u6a21\u6570\u8f6c\u6362\u5668  \u9ed1\u7ebf\u533a\u57df\u7528\u4e8e\u8bbe\u7f6e IIC \u5730\u5740\u3002 ADDR0 \u548c ADDR1 \u8fd0\u51fa\u8fde\u63a5\u5230 L\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u66f4\u6539\u4e3a \"H\"\uff0c\u6216\u8005\u901a\u8fc7\u5728\u677f\u4e0a\u8fdb\u884c\u4e00\u70b9\u4fee\u6539\u628a\u5b83\u66f4\u6539\u4e3a Floating\uff08\u60ac\u7a7a\uff09 ( Floating \u65e2\u4e0d\u8fde\u63a5 \"H\" \u4e5f\u4e0d\u8fde\u63a5 \"L\")\u3002 \u8bf7\u5728\u53c2\u8003\u8d44\u6599\u4e2d\u67e5\u627e\u8be6\u7ec6\u4fe1\u606f\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-I2C_ADC/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-I2C_ADC/#arduino", 
            "text": "Grove - I2C ADC \u6709\u4e24\u4e2a\u63a5\u53e3 : \u8f93\u5165\u63d2\u5ea7  (J2)  \u548c\u8f93\u51fa\u63d2\u5ea7  (J1) \u3002 \u5c06\u6a21\u62df\u4f20\u611f\u5668\u8fde\u63a5\u5230Grove - I2C ADC \u7684\u8f93\u5165\u63d2\u5ea7\uff0c\u5e76\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06 I2C ADC \u8fde\u63a5\u5230 Arduino/Seeeduino\u3002  \u4ee5 Grove - Gas Sensor \u4e3a\u4f8b\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 Grove - I2C ADC \u8bfb\u53d6\u4f20\u611f\u5668\u6570\u636e\u3002\n\u786c\u4ef6\u5b89\u88c5\u5e94\u8be5\u662f\u8fd9\u6837\u7684 :   \u73b0\u5728\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u8bfb\u53d6\u6c14\u4f53\u4f20\u611f\u5668\u7684\u503c\u3002  #include  Wire.h \n\u00a0\n#define ADDR_ADC121             0x55\n\u00a0\n#define V_REF 3.00\n\u00a0\n#define REG_ADDR_RESULT         0x00\n#define REG_ADDR_ALERT          0x01\n#define REG_ADDR_CONFIG         0x02\n#define REG_ADDR_LIMITL         0x03\n#define REG_ADDR_LIMITH         0x04\n#define REG_ADDR_HYST           0x05\n#define REG_ADDR_CONVL          0x06\n#define REG_ADDR_CONVH          0x07\n\u00a0\nunsigned int getData;\nfloat analogVal=0;         // convert\nvoid init_adc()\n{\n  Wire.beginTransmission(ADDR_ADC121);        // transmit to device\n  Wire.write(REG_ADDR_CONFIG);                // Configuration Register\n  Wire.write(0x20);\n  Wire.endTransmission();  \n}\n\u00a0\nvoid read_adc()     //unsigned int *data\n{\n\u00a0\n\u00a0\n    Wire.beginTransmission(ADDR_ADC121);        // transmit to device\n    Wire.write(REG_ADDR_RESULT);                // get result\n    Wire.endTransmission();\n\u00a0\n    Wire.requestFrom(ADDR_ADC121, 2);           // request 2byte from device\n    delay(1);\n    if(Wire.available() =2)\n    {\n      getData = (Wire.read() 0x0f) 8;\n      getData |= Wire.read();\n    }\n    Serial.print( getData: );\n    Serial.println(getData);\n    delay(5);\n    Serial.print( The analog value is: );\n    Serial.print(getData*V_REF*2/4096);\n    Serial.println( V );\n}\nvoid setup()\n{\n  Serial.begin(9600);\n  Wire.begin();\n  init_adc();\n}\n\u00a0\nvoid loop()\n{  read_adc();//adcRead);\n   delay(50);\n}  \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u53c2\u8003\u7535\u538b\u5b9a\u4e49\u4e3a\u7531 I2C ADC \u6a21\u5757\u51b3\u5b9a\u7684 3.0V\u3002\u8be5\u53c2\u8003\u7535\u538b\u6bd4\u7531\u5fae\u63a7\u5236\u5668\u751f\u6210\u7684\u53c2\u8003\u7535\u538b\u66f4\u7cbe\u786e\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u6d4b\u91cf  VA  \u548c  GND  \u4e4b\u95f4\u7684\u7535\u538b\u6765\u4f7f\u5176\u66f4\u51c6\u786e\uff0c\u5e76\u4f7f\u7528\u8be5\u503c\u66ff\u6362\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684 3.00\u3002  \u73b0\u5728\u60a8\u53ef\u4ee5\u4e0a\u4f20\u8fd9\u4e2a\u4ee3\u7801\u3002  \u7136\u540e\uff0c\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u5e76\u8bfb\u53d6\u503c :    Note \nGrove - I2C ADC \u7684\u5730\u5740\u662f\u53ef\u66f4\u6539\u7684\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u5176\u5730\u5740\u3002\u8fd9\u9700\u8981\u5728\u677f\u4e0a\u8fdb\u884c\u4e00\u4e9b\u786c\u4ef6\u4fee\u6539\u3002\u5982\u679c\u60a8\u6b63\u5728\u8003\u8651\u540c\u65f6\u4f7f\u7528\u591a\u4e2a I2C ADC\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u53c2\u8003\u90e8\u5206\u4e2d\u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u7684I2C ADC \u7684\u6700\u5927\u503c\u4e3a 9\uff0c\u4f46\u5728  Grove - Base Shield V1.2  \u4e0a\u53ea\u6709 4 \u4e2a I2C \u63d2\u69fd\uff0c\u56e0\u6b64\u5982\u679c\u8981\u4f7f\u7528\u8d85\u8fc7 4 \u4e2a I2C ADC\uff0c\u8bf7\u4f7f\u7528  Grove - I2C Hub  \u521b\u5efa\u66f4\u591a I2C \u63d2\u69fd\u3002", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-I2C_ADC/#beaglebone-green", 
            "text": "\u8981\u5728 BBG \u5f00\u59cb\u7f16\u8f91\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528 Cloud9 IDE\u3002\n\u4f5c\u4e3a\u719f\u6089 Cloud9 IDE \u7684\u7b80\u5355\u7ec3\u4e60\uff0c\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u95ea\u70c1 BeagleBone \u4e0a\u7684\u4e00\u4e2a LED \u662f\u4e00\u4e2a\u597d\u7684\u5f00\u59cb\uff0c\u8fd9 4 \u4e2a LED \u662f\u7528\u6237\u53ef\u7f16\u7a0b\u7684\u3002  \u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 Cloud9 IDE\uff0c\u8bf7\u6309\u7167  \u8fd9\u4e2a\u94fe\u63a5  \u8fdb\u884c\u64cd\u4f5c\u3002  Step1 :  \u5c06 Grove - UART \u63d2\u5ea7\u8bbe\u7f6e\u4e3a Grove - GPIO \u63d2\u5ea7\uff0c\u53ea\u9700\u6309\u7167  \u8fd9\u4e2a\u94fe\u63a5  \u64cd\u4f5c\u5373\u53ef\u3002  Step2 :  \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684  \"+\"  \u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002    Step3 :  \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u9009\u9879\u5361\u4e2d\u3002  from Adafruit_I2C import Adafruit_I2C\nimport time\n\u00a0\nADDR_ADC121 = 0x50\n\u00a0\nREG_ADDR_RESULT = 0x00\nREG_ADDR_ALERT = 0x01\nREG_ADDR_CONFIG = 0x02\nREG_ADDR_LIMITL = 0x03\nREG_ADDR_LIMITH = 0x04\nREG_ADDR_HYST = 0x05\nREG_ADDR_CONVL = 0x06\nREG_ADDR_CONVH = 0x07\n\u00a0\ni2c = Adafruit_I2C(ADDR_ADC121)           \n\u00a0\nclass I2cAdc:\n    def __init__(self):\n        i2c.write8(REG_ADDR_CONFIG, 0x20)\n\u00a0\n    def read_adc(self):\n         Read ADC data 0-4095. \n        data_list = i2c.readList(REG_ADDR_RESULT, 2)\n        #print  data list , data_list\n        data = ((data_list[0]   0x0f)   8 | data_list[1])   0xfff\n        return data\n\u00a0\nif __name__ ==  __main__ :\n    # Connect the Grove - I2C ADC to I2C Grove port of Beaglebone Green.\n    adc = I2cAdc()\n    while True:\n        print  sensor value  , adc.read_adc()\n        time.sleep(.2)  Step4 :  \u901a\u8fc7\u5355\u51fb\u78c1\u76d8\u56fe\u6807\u4fdd\u5b58\u6587\u4ef6\uff0c\u5e76\u4e3a\u6587\u4ef6\u63d0\u4f9b .py \u6269\u5c55\u540d\u3002  Step5 :  \u5c06 Grove I2C ADC \u8fde\u63a5\u5230 BBG \u4e0a\u7684 Grove I2C \u63d2\u5ea7\u3002  Step6 :  \u8fd0\u884c\u4ee3\u7801\u4f60\u4f1a\u53d1\u73b0\u7ec8\u7aef\u6bcf 2 \u79d2\u8f93\u51fa\u4e00\u6b21 AD \u503c\u3002", 
            "title": "\u4e0e Beaglebone Green \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-I2C_ADC/#_5", 
            "text": "", 
            "title": "\u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/Grove-I2C_ADC/#i2c", 
            "text": "ADC I2C \u5177\u6709\u7531 ADR0 \u548c ADR1 \u51b3\u5b9a\u7684 7 \u4f4d\u786c\u4ef6\u5730\u5740\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cADR0 \u548c ADR1 \u8fde\u63a5\u5230\u677f\u5185\u7684  \"L\" \u3002 \u4f46\u4f60\u53ef\u4ee5\u6539\u53d8\u5b83\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u5200\u5207\u65ad  \"L\"  \u548c ADR0 \u4e4b\u95f4\u7684\u8fde\u63a5(\u5982\u4e0b\u56fe\u6240\u793a)\uff0c\u7136\u540e\u5c06 ADR0 \u7684\u72b6\u6001\u7f6e\u4e3a Floating(\u65e0\u8fde\u63a5)\u3002\u800c\u4e14\u5982\u679c\u4f60\u8fd9\u6b21\u710a\u63a5 ADR0 \u548c  \"H\" \uff0c\u90a3\u4e48\u4f60\u7684 ADR0 \u7684\u503c\u4e3a  \"H\" \u3002   \u60a8\u53ef\u4ee5\u5728\u4e0b\u8868\u4e2d\u627e\u5230\u786c\u4ef6 I2C \u5730\u5740\u4e0e ADR0 \u548c ADR1 \u7684\u503c\u7684\u5173\u7cfb\u3002    \n\u8bbe\u5907\u5730\u5740[A6 - A0]  \nADR0 \u548c ADR1 \u8f93\u5165\u72b6\u6001    \nADR1  \nADR0    \n1010000(0x50)  \nFloating  \nFloating    \n1010001(0x51)  \nFloating  \nL    \n1010010(0x52)  \nFloating  \nH    \n1010100(0x54)  \nL  \nFloating    \n1010101(default 0x55)  \nL  \nL    \n1010110(0x56)  \nL  \nH    \n1011000(0x58)  \nH  \nFloating    \n1011001(0x59)  \nH  \nL    \n1011010(0x5A)  \nH  \nH", 
            "title": "I2C \u5730\u5740\u8bbe\u7f6e"
        }, 
        {
            "location": "/Grove-I2C_ADC/#i2c-adc", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u5b9e\u9a8c\uff0c\u8ba9\u60a8\u4e86\u89e3 I2C ADC \u5982\u4f55\u63d0\u9ad8\u6a21\u62df\u4f20\u611f\u5668\u7684\u7cbe\u5ea6\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4ece Grove - Gas Sensor(MQ5) \u68c0\u67e5 Arduino/Seeeduino \u4e0a\u6a21\u62df\u7aef\u53e3\u76f4\u63a5\u6536\u96c6\u7684\u6570\u503c\u3002   \u6211\u4eec\u4e0a\u4f20\u4e0b\u9762\u7684\u4ee3\u7801\u4ee5\u83b7\u53d6\u6570\u636e\u3002      /*\n     * Grove - Gas Sensor(MQ5)  \n     *\n     * The Gas Sensor detect the related Gas density,\n     * Arduino get the result by analogread. the gas Density is\n     * 0~1, larger the output is, the denser the gas.\n     * Connect the Sensor to A0 in this demo;\n     *\n     *  By: http://www.seeedstudio.com\n    */\n    #define Vref 4.95\n    void setup() {\n      Serial.begin(9600);\n    }\n\n    void loop() {\n      float vol;\n      int sensorValue = analogRead(A0);\n      vol=(float)sensorValue/1023*Vref;\n      Serial.print( The sensorValue is  );\n      Serial.println(sensorValue);\n      Serial.print( The analog value is  );\n      Serial.print(vol);\n      Serial.println( V );\n      delay(100);\n    }  \u7ed3\u679c\u5982\u4e0b:   \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53c2\u8003\u7535\u538b\u7531 Arduino \u751f\u6210\uff0c\u7406\u8bba\u4e0a\u4e3a 5V\u3002\u4f46\u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u4e2a\u4f1a\u5bfc\u81f4\u6700\u7ec8\u6570\u636e\u7684\u504f\u5dee\u7684\u6d6e\u52a8\u503c\u3002\u4f7f\u7528 Grove - I2C ADC \u65f6\u53ef\u907f\u514d\u8fd9\u79cd\u4e0d\u51c6\u786e\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edd\u5bf9\u7684 3.0V \u4e3a\u53c2\u8003\u7535\u538b\u3002\n\u76f8\u53cd\uff0c\u5728\u76f8\u540c\u7684\u6761\u4ef6\u4e0b\uff0c\u7531 Grove - I2C ADC \u7535\u8def\u91c7\u96c6\u7684\u4f20\u611f\u5668\u503c\u8303\u56f4\u5982\u4e0b\u6240\u793a :   \u4e3a\u4e86\u627e\u51fa\u54ea\u4e2a\u7ed3\u679c\u66f4\u8d34\u8fd1\u5b9e\u9645\u60c5\u51b5\uff0c\u6211\u4eec\u7528\u4e07\u7528\u8868\u6d4b\u91cf\u4f20\u611f\u5668\u5f15\u811a  SIG  \u548c\u5f15\u811a  GND  \u4e4b\u95f4\u7684\u7535\u538b\u3002", 
            "title": "I2C ADC \u589e\u52a0\u4e86\u591a\u5c11\u7cbe\u5ea6\uff1f"
        }, 
        {
            "location": "/Grove-I2C_ADC/#_6", 
            "text": "[Eagle\u6587\u4ef6]   I2C ADC Eagle File  [\u82af\u7247\u6570\u636e\u624b\u518c]   ADC121C021 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Red_LED/", 
            "text": "Grove - Red LED \u7c7b\u4f3c\u4e8e \nGrove - LED\n \u6a21\u5757\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a LED \u5149\u6e90\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u5177\u6709\u677f\u8f7d\u7535\u4f4d\u5668\u6765\u7ba1\u7406 LED \u7684\u529f\u7387\u9700\u6c42\u3002\nGrove - LED\n \u7684 PCB \u5177\u6709\u5b89\u88c5\u5b54\uff0c\u53ef\u4ee5\u6839\u636e\u60a8\u7684\u539f\u578b\u5c06 Grove - Red LED \u5b89\u88c5\u5728\u6240\u9700\u8868\u9762\u4e0a\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u60a8\u53ef\u4ee5\u65b9\u4fbf\u5730\u7528\u5b83\u4f5c\u6307\u793a\u7535\u6e90\u6216\u4fe1\u53f7\u5b58\u5728\u7684\u6307\u793a\u706f\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u4e3a\u60a8\u7684\u9879\u76ee\u63d0\u4f9b LED \u5149\u6e90\n\n\n\n\n\n\n\u53ef\u4ee5\u7075\u6d3b\u5730\u66ff\u4ee3\u7ea2\u8272 LED \u4e3a\u4efb\u4f55\u5176\u4ed6 LED \uff0c\u4f8b\u5982\u4e0d\u540c\u989c\u8272\u7684 LED\uff0c\u56e0\u4e3a LED \u662f\u88ab\u201c\u56fa\u5b9a\u201d\u5230 LED \u652f\u67b6\u800c\u4e0d\u662f\u88ab\u710a\u63a5\u5230\u677f\u4e0a\n\n\n\n\n\n\n\u677f\u8f7d\u7535\u4f4d\u5668\u53ef\u4fdd\u8bc1\u4eae\u5ea6\u63a7\u5236\u548c\u66f4\u9ad8\u7684\u8f93\u5165\u7535\u538b\u8303\u56f4\u7684\u4e92\u901a\u6027\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4f7f\u7528\u6b64\u6a21\u5757\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u6784\u5efa\u793a\u4f8b\u7535\u8def :\n\n\n1.\u5c06 LED \u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u51fa\u4fa7\uff08\u7535\u6e90\u6a21\u5757\u53f3\u4fa7\uff09\u3002\u5728\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u57fa\u4e8e\u4f20\u611f\u5668\u7684\u8f93\u5165\u6a21\u5757\uff0c\u6bd4\u5982 : (\nGrove - Light Sensor\n, \nGrove - Sound Sensor\n, \nGrove - Button\n \u6216 \nGrove - Slide Potentiometer\n)\u3002\n\n\n2.\u7ed9\u7535\u8def\u4e0a\u7535\u3002\n\n\n3.\u5f53\u8f93\u5165\u6a21\u5757\u63d0\u4f9b\u4e00\u4e2a\u89e6\u53d1\u65f6 LED \u4f1a\u4eae :\n- \u5982\u679c\u4f7f\u7528\u5982 \nGrove - Button\n \u6a21\u5757\u4e0a\u7684\u77ac\u95f4\u5f00\u5173\uff0c\u53ea\u9700\u6309\u4e0b\u6309\u94ae\u4ee5\u70b9\u4eae LED :\n\n\n\n\n\n\n\n\n\u5982\u679c\u4f7f\u7528 \nGrove - Slide Potentiometer\n\uff0c\u5c06\u6ed1\u5757\u4ece \nGND\n \u4f4d\u7f6e\u79fb\u52a8\u5230 \nVCC\n\uff0c\u5e76\u89c2\u5bdf\u968f\u7740\u7535\u6e90\u7535\u538b\u7684\u589e\u52a0 LED \u7684\u4eae\u5ea6\u662f\u5982\u4f55\u589e\u52a0\u7684\u3002\n\n\n\n\n\n\n\u5982\u679c\u4f7f\u7528 \nGrove - Light Sensor\n \u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8def\u8f93\u5165\u7aef\uff0c\u4f1a\u770b\u89c1 LED \u5728\u660e\u4eae\u7684\u5149\u7ebf\u4e0b\u70b9\u4eae\uff0c\u5e76\u5728\u9ed1\u6697\u4e2d\u7184\u706d\u3002\u5982\u679c\u8981\u8ba9 LED \u4ec5\u5728\u9ed1\u6697\u4e2d\u70b9\u4eae\uff0c\u8bf7\u5728\u5149\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0 \nGrove - NOT\n \u6a21\u5757\u5373\u53ef\u3002\n\n\n\n\n\n\n\u5728\u5355\u673a\u6a21\u5f0f(\u4e0d\u5e26 MCU)\u4e0b\u4f7f\u7528\u65f6\uff0c\u9762\u5411 Grove \u7535\u8def\u7684\u6a21\u5757\u60a8\u53ef\u4ee5\u4f7f\u7528 \nGrove - USB Power\n \u6a21\u5757\u6216 \nGrove - USB Power\n \u6a21\u5757\u3002 \u5f53\u4e0e\u8bf8\u5982 \nArduino\n \u6216 \nSeeeduino\n \u548c \nGrove - Base Shield\n \u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u7535\u6e90\u901a\u8fc7\u5fae\u63a7\u5236\u5668\u63d0\u4f9b\u7ed9\u7535\u8def\uff0c\u6240\u4ee5\u65e0\u9700\u518d\u4f7f\u7528\u4efb\u4f55 \nGrove Power Module\n\u3002\n\n\n\u4e0e \nRaspberry Pi\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u4f7f\u7528 Grove \u5bfc\u7ebf\u8fde\u63a5\u5668\u5c06 LED \u8fde\u63a5\u5230 \nD4\n \u7aef\u53e3\uff0c\u5e76\u6253\u5f00 Raspberry Pi\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f7f LED \u95ea\u70c1\u7684\u6d4b\u8bd5\u3002\u60a8\u53ef\u4ee5\u50cf\u4e0b\u56fe\u90a3\u6837\u8fde\u63a5\u5230 GrovePi+\u3002\n\n\n\n\n# GrovePi LED Blink example\n\nimport time\nfrom grovepi import *\n\n# Connect the Grove LED to digital port D4\nled = 4\n\npinMode(led,\nOUTPUT\n)\ntime.sleep(1)\n\nwhile True:\n    try:\n        #Blink the LED\n        digitalWrite(led,1)     # Send HIGH to switch on LED\n        time.sleep(1)\n\n        digitalWrite(led,0)     # Send LOW to switch off LED\n        time.sleep(1)\n\n    except KeyboardInterrupt:   # Turn LED off before stopping\n        digitalWrite(led,0)\n        break\n    except IOError:             # Print \nError\n if communication error encountered\n        print \nError\n\n\n\n\n\n\u8fd0\u884c\u7a0b\u5e8f\n\n\n\n\n\n\n\u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84(\u6839\u636e\u4e2a\u4eba\u60c5\u51b5)\n\ncd GrovePi/Software/Python/\n\n\n\n\n\n\n\n\u8fd0\u884c\u7a0b\u5e8f\n\nsudo python grove_led_blink.py\n\n\n\n\n\n\n\n\u9002\u7528\u6027\n\n\n\n\n\u6b64 \nGrove\n \u6a21\u5757\u53ef\u4f5c\u4e3a \nGrove Kit Series\n \u7684\u4e00\u90e8\u5206\u4f7f\u7528 :\n\n\n\n\nGrove Mixer Pack V2\n\n\n\n\nGrove Mixer Pack\n \u4f7f\u7528\u4e86 \nGrove - LED\n \u6a21\u5757.\n\n\n\u6216\u8005\uff0c\u53ef\u4ee5\u5728 \nSeeed Studio \u4f01\u4e1a\u5e97\u94fa\n \u4e0a\u5355\u72ec\u8d2d\u4e70 \nGrove - Red LED\n\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u539f\u7406\u56fe]\n \nGrove - Red LED Schematic\n\n\n[\u539f\u7406\u56fe\u7f51\u9875\u7248]\n \nSchematic at Easyeda\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n Also see \nGrove Mixer Pack V2 Resources\n section for Eagle files for this module", 
            "title": "Grove-Red LED"
        }, 
        {
            "location": "/Grove-Red_LED/#_1", 
            "text": "\u4e3a\u60a8\u7684\u9879\u76ee\u63d0\u4f9b LED \u5149\u6e90    \u53ef\u4ee5\u7075\u6d3b\u5730\u66ff\u4ee3\u7ea2\u8272 LED \u4e3a\u4efb\u4f55\u5176\u4ed6 LED \uff0c\u4f8b\u5982\u4e0d\u540c\u989c\u8272\u7684 LED\uff0c\u56e0\u4e3a LED \u662f\u88ab\u201c\u56fa\u5b9a\u201d\u5230 LED \u652f\u67b6\u800c\u4e0d\u662f\u88ab\u710a\u63a5\u5230\u677f\u4e0a    \u677f\u8f7d\u7535\u4f4d\u5668\u53ef\u4fdd\u8bc1\u4eae\u5ea6\u63a7\u5236\u548c\u66f4\u9ad8\u7684\u8f93\u5165\u7535\u538b\u8303\u56f4\u7684\u4e92\u901a\u6027", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Red_LED/#_2", 
            "text": "\u4f7f\u7528\u6b64\u6a21\u5757\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u6784\u5efa\u793a\u4f8b\u7535\u8def :  1.\u5c06 LED \u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u51fa\u4fa7\uff08\u7535\u6e90\u6a21\u5757\u53f3\u4fa7\uff09\u3002\u5728\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u57fa\u4e8e\u4f20\u611f\u5668\u7684\u8f93\u5165\u6a21\u5757\uff0c\u6bd4\u5982 : ( Grove - Light Sensor ,  Grove - Sound Sensor ,  Grove - Button  \u6216  Grove - Slide Potentiometer )\u3002  2.\u7ed9\u7535\u8def\u4e0a\u7535\u3002  3.\u5f53\u8f93\u5165\u6a21\u5757\u63d0\u4f9b\u4e00\u4e2a\u89e6\u53d1\u65f6 LED \u4f1a\u4eae :\n- \u5982\u679c\u4f7f\u7528\u5982  Grove - Button  \u6a21\u5757\u4e0a\u7684\u77ac\u95f4\u5f00\u5173\uff0c\u53ea\u9700\u6309\u4e0b\u6309\u94ae\u4ee5\u70b9\u4eae LED :     \u5982\u679c\u4f7f\u7528  Grove - Slide Potentiometer \uff0c\u5c06\u6ed1\u5757\u4ece  GND  \u4f4d\u7f6e\u79fb\u52a8\u5230  VCC \uff0c\u5e76\u89c2\u5bdf\u968f\u7740\u7535\u6e90\u7535\u538b\u7684\u589e\u52a0 LED \u7684\u4eae\u5ea6\u662f\u5982\u4f55\u589e\u52a0\u7684\u3002    \u5982\u679c\u4f7f\u7528  Grove - Light Sensor  \u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8def\u8f93\u5165\u7aef\uff0c\u4f1a\u770b\u89c1 LED \u5728\u660e\u4eae\u7684\u5149\u7ebf\u4e0b\u70b9\u4eae\uff0c\u5e76\u5728\u9ed1\u6697\u4e2d\u7184\u706d\u3002\u5982\u679c\u8981\u8ba9 LED \u4ec5\u5728\u9ed1\u6697\u4e2d\u70b9\u4eae\uff0c\u8bf7\u5728\u5149\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0  Grove - NOT  \u6a21\u5757\u5373\u53ef\u3002    \u5728\u5355\u673a\u6a21\u5f0f(\u4e0d\u5e26 MCU)\u4e0b\u4f7f\u7528\u65f6\uff0c\u9762\u5411 Grove \u7535\u8def\u7684\u6a21\u5757\u60a8\u53ef\u4ee5\u4f7f\u7528  Grove - USB Power  \u6a21\u5757\u6216  Grove - USB Power  \u6a21\u5757\u3002 \u5f53\u4e0e\u8bf8\u5982  Arduino  \u6216  Seeeduino  \u548c  Grove - Base Shield  \u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u7535\u6e90\u901a\u8fc7\u5fae\u63a7\u5236\u5668\u63d0\u4f9b\u7ed9\u7535\u8def\uff0c\u6240\u4ee5\u65e0\u9700\u518d\u4f7f\u7528\u4efb\u4f55  Grove Power Module \u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Red_LED/#raspberry-pi", 
            "text": "\u4f7f\u7528 Grove \u5bfc\u7ebf\u8fde\u63a5\u5668\u5c06 LED \u8fde\u63a5\u5230  D4  \u7aef\u53e3\uff0c\u5e76\u6253\u5f00 Raspberry Pi\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f7f LED \u95ea\u70c1\u7684\u6d4b\u8bd5\u3002\u60a8\u53ef\u4ee5\u50cf\u4e0b\u56fe\u90a3\u6837\u8fde\u63a5\u5230 GrovePi+\u3002   # GrovePi LED Blink example\n\nimport time\nfrom grovepi import *\n\n# Connect the Grove LED to digital port D4\nled = 4\n\npinMode(led, OUTPUT )\ntime.sleep(1)\n\nwhile True:\n    try:\n        #Blink the LED\n        digitalWrite(led,1)     # Send HIGH to switch on LED\n        time.sleep(1)\n\n        digitalWrite(led,0)     # Send LOW to switch off LED\n        time.sleep(1)\n\n    except KeyboardInterrupt:   # Turn LED off before stopping\n        digitalWrite(led,0)\n        break\n    except IOError:             # Print  Error  if communication error encountered\n        print  Error", 
            "title": "\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Red_LED/#_3", 
            "text": "\u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84(\u6839\u636e\u4e2a\u4eba\u60c5\u51b5) cd GrovePi/Software/Python/    \u8fd0\u884c\u7a0b\u5e8f sudo python grove_led_blink.py", 
            "title": "\u8fd0\u884c\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove-Red_LED/#_4", 
            "text": "\u6b64  Grove  \u6a21\u5757\u53ef\u4f5c\u4e3a  Grove Kit Series  \u7684\u4e00\u90e8\u5206\u4f7f\u7528 :   Grove Mixer Pack V2   Grove Mixer Pack  \u4f7f\u7528\u4e86  Grove - LED  \u6a21\u5757.  \u6216\u8005\uff0c\u53ef\u4ee5\u5728  Seeed Studio \u4f01\u4e1a\u5e97\u94fa  \u4e0a\u5355\u72ec\u8d2d\u4e70  Grove - Red LED \u3002", 
            "title": "\u9002\u7528\u6027"
        }, 
        {
            "location": "/Grove-Red_LED/#_5", 
            "text": "[\u539f\u7406\u56fe]   Grove - Red LED Schematic  [\u539f\u7406\u56fe\u7f51\u9875\u7248]   Schematic at Easyeda  [\u5176\u4ed6\u8d44\u6e90]  Also see  Grove Mixer Pack V2 Resources  section for Eagle files for this module", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-RJ45_Adapter/", 
            "text": "Grove-RJ45 Adapter \u662f\u53ef\u5c06\u6807\u51c6 Grove \u8fde\u63a5\u5668\u8f6c\u6362\u4e3a RJ45 \u8fde\u63a5\u5668\u7684\u6a21\u5757\u3002 \u901a\u7528 Grove \u7ebf\u7f06\u4e0d\u80fd\u6ee1\u8db3 Arduino \u8fdc\u7a0b\u8fde\u63a5\u548c\u63a7\u5236 Grove \u6a21\u5757\u7684\u8981\u6c42\u3002\u901a\u8fc7 2 \u4e2a RJ45 \u9002\u914d\u5668\u548c 1 \u6839\u7f51\u7ebf\uff0c\u53ef\u4ee5\u5b9e\u73b0 Arduino \u548c Grove \u6a21\u5757\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 \u8fd9\u6709\u52a9\u4e8e\u89e3\u51b3 Arduino \u548c Grove \u7531\u4e8e\u8ddd\u79bb\u95ee\u9898\u800c\u4e0d\u65b9\u4fbf\u8fde\u63a5\u7684\u95ee\u9898\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u6807\u51c6 Grove \u8fde\u63a5\u5668\u548c RJ45 \u8fde\u63a5\u5668\n\n\n\n\n\n\n\u5e94\u7528\u5e7f\u6cdb\n\n\n\n\n\n\n\u6613\u4e8e\u4f7f\u7528\n\n\n\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n\n\n\n\n\n\n Grove \u8fde\u63a5\u5668\n\n\n\n RJ45 \u8fde\u63a5\u5668\n\n\n\n\n\n VCC\n\n\n\n A7\n\n\n\n\n\n GND\n\n\n\n A8\n\n\n\n\n\n D1\n\n\n\n A5\n\n\n\n\n\n D2\n\n\n\n A4\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u5982\u679c\u8981\u4f7f\u7528\u6c34\u5206\u4f20\u611f\u5668\u6765\u5b9e\u65f6\u68c0\u6d4b\u82b1\u56ed\u91cc\u571f\u58e4\u7684\u6c34\u5206\uff0c\u4f46\u60a8\u53c8\u4e0d\u60f3\u4eb2\u81ea\u53bb\u82b1\u56ed\u3002\u600e\u4e48\u505a ? \u4f7f\u7528\u4e24\u4e2a RJ45 \u9002\u914d\u5668\u548c\u957f\u7f51\u7ebf\uff0c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u786c\u4ef6\u5b89\u88c5\u5982\u56fe\u6240\u793a :\n\n\n\n\n\u60a8\u53ef\u80fd\u9700\u8981\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\u4ee5\u7528\u4e8e\u7279\u6b8a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f46\u662f\u6211\u4eec\u4fdd\u8bc1\u60a8\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u6c34\u5206\u4f20\u611f\u5668\u7684\u8f93\u51fa\u6570\u636e\u59cb\u7ec8\u4e86\u89e3\u5230\u690d\u7269\u7684\u571f\u58e4\u6c34\u5206\u3002\n\n\n\u60a8\u53ef\u80fd\u60f3\u95ee\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u957f Grove \u7ebf\u7f06\uff0c\u800c\u662f\u4f7f\u7528\u4e24\u4e2a Grove - RJ45 \u9002\u914d\u5668\u548c\u7f51\u7ebf\uff0c\u539f\u56e0\u662f\u901a\u4fe1\u8d28\u91cf\u4f1a\u968f\u7740\u7ebf\u7f06\u589e\u957f\u800c\u51cf\u5f31\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - RJ45 Adapter Eagle File", 
            "title": "Grove-RJ45 Adapter"
        }, 
        {
            "location": "/Grove-RJ45_Adapter/#_1", 
            "text": "\u6807\u51c6 Grove \u8fde\u63a5\u5668\u548c RJ45 \u8fde\u63a5\u5668    \u5e94\u7528\u5e7f\u6cdb    \u6613\u4e8e\u4f7f\u7528", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-RJ45_Adapter/#_2", 
            "text": "Grove \u8fde\u63a5\u5668   RJ45 \u8fde\u63a5\u5668    VCC   A7    GND   A8    D1   A5    D2   A4", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Grove-RJ45_Adapter/#_3", 
            "text": "\u5982\u679c\u8981\u4f7f\u7528\u6c34\u5206\u4f20\u611f\u5668\u6765\u5b9e\u65f6\u68c0\u6d4b\u82b1\u56ed\u91cc\u571f\u58e4\u7684\u6c34\u5206\uff0c\u4f46\u60a8\u53c8\u4e0d\u60f3\u4eb2\u81ea\u53bb\u82b1\u56ed\u3002\u600e\u4e48\u505a ? \u4f7f\u7528\u4e24\u4e2a RJ45 \u9002\u914d\u5668\u548c\u957f\u7f51\u7ebf\uff0c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u786c\u4ef6\u5b89\u88c5\u5982\u56fe\u6240\u793a :   \u60a8\u53ef\u80fd\u9700\u8981\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\u4ee5\u7528\u4e8e\u7279\u6b8a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f46\u662f\u6211\u4eec\u4fdd\u8bc1\u60a8\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u6c34\u5206\u4f20\u611f\u5668\u7684\u8f93\u51fa\u6570\u636e\u59cb\u7ec8\u4e86\u89e3\u5230\u690d\u7269\u7684\u571f\u58e4\u6c34\u5206\u3002  \u60a8\u53ef\u80fd\u60f3\u95ee\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u957f Grove \u7ebf\u7f06\uff0c\u800c\u662f\u4f7f\u7528\u4e24\u4e2a Grove - RJ45 \u9002\u914d\u5668\u548c\u7f51\u7ebf\uff0c\u539f\u56e0\u662f\u901a\u4fe1\u8d28\u91cf\u4f1a\u968f\u7740\u7ebf\u7f06\u589e\u957f\u800c\u51cf\u5f31\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-RJ45_Adapter/#_4", 
            "text": "[Eagle\u6587\u4ef6]   Grove - RJ45 Adapter Eagle File", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Wrapper/", 
            "text": "Grove - Wrapper\n \u662f\u4e00\u79cd\u4fee\u590d\u548c\u4fdd\u62a4 Grove \u6a21\u5757\u7684\u5c01\u88c5\u3002\u8fd9\u5c06\u5728\u8c03\u6574\u6a21\u5757\u4e0a\u8282\u7701\u60a8\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b83\u8f7b\u677e\u5730\u5c55\u793a\u9879\u76ee\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u4f7f\u7528 Grove-Wrapper \u6765\u5c55\u793a\u60a8\u7684\u9879\u76ee\uff0c\u5b83\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u4e92\u8054\u7f51\u4e0a\u4ee5\u56fe\u7247\u6765\u5c55\u793a\u60a8\u7684\u4ea7\u54c1\uff0c\u5e76\u5c06\u7ed9\u60a8\u4e00\u4e2a\u6e05\u6670\u800c\u5e72\u51c0\u7684\u611f\u89c9\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u53ef\u4ee5\u6269\u5c55\u4e50\u9ad8\uff0c\u673a\u68b0\u90e8\u4ef6\u7b49\uff0c\u8fd9\u5c06\u4e3a\u60a8\u7684\u4f5c\u54c1\u5e26\u6765\u66f4\u591a\u7684\u7279\u70b9\uff0c\u4f7f\u60a8\u7684\u9879\u76ee\u9002\u5e94\u5404\u79cd\u60c5\u51b5\u3002Grove - Wrapper \u7684\u8bbe\u8ba1\u4e5f\u4f7f\u5f97\u7ec4\u88c5\u548c\u62c6\u5378\u6a21\u5757\u53d8\u5f97\u5bb9\u6613\u3002\n\n\n\n\nNote\n\n\n\n\n\n\nGrove - Wrapper \u652f\u6301\u5927\u7ea6 85\uff05 \u7684 Grove \u6a21\u5757\u3002\n\n\nGrove - Wrapper \u7cfb\u5217\u6709\u4e24\u79cd\u5c3a\u5bf8\u7684\u5305\u88c5\u7eb8\uff0c\u6bcf\u79cd\u90fd\u6709\u56db\u79cd\u989c\u8272\uff0c\u5171\u6709\u516b\u79cdSKU\uff0c\u5206\u522b\u5217\u5728 \n\u89c4\u683c\u53c2\u6570\n \u90e8\u5206\u3002\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u67d4\u6027\u7d27\u56fa\u4ef6\u65b9\u4fbf\u5730\u5b89\u88c5\u548c\u66f4\u6362 Grove \u6a21\u5757\u3002\n\n\n\n\n\n\n\u59cb\u7ec8\u4fdd\u6301\u60a8\u7684\u9879\u76ee\u5b89\u5168\u3002\n\n\n\n\n\n\n\u534a\u5f00\u653e\u7a7a\u95f4\uff0c\u4f7f\u7528 Grove \u6a21\u5757\u4e0d\u4f1a\u4e2d\u65ad\u3002\n\n\n\n\n\n\n\u517c\u5bb9\u4e50\u9ad8\u548c Makeblock \u6a21\u5757\uff0c\u4f7f\u60a8\u7684\u9879\u76ee\u81ea\u9002\u5e94\u548c\u6709\u8da3\u3002\n\n\n\n\n\n\n\u652f\u67b6\u7528\u87ba\u9489 (M2, M4) \u56fa\u5b9a\u3002\n\n\n\n\n\n\n\u53ef\u4ee5\u50cf\u4e50\u9ad8\u6a21\u5757\u90a3\u6837\u4e92\u8054\u3002\n\n\n\n\n\n\n\u591a\u79cd\u989c\u8272\u3002\n\n\n\n\n\n\n\u5e94\u7528\u793a\u4f8b\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n \u5c3a\u5bf8 (\u5927) \n\n\n 25 \u00d7 25 \u00d7 13 mm\n\n\n\n\n\n \u5e73\u9762\u5c3a\u5bf8 (\u5c0f)  \n\n\n 25 \u00d725 \u00d7 13 mm\n\n\n\n\n\n \u6750\u6599 \n\n\n ABS\n\n\n\n\n\n \u989c\u8272 \n\n\n \u84dd\u8272\uff0c\u7eff\u8272\uff0c\u9ec4\u8272\u548c\u7ea2\u8272\u9002\u7528\u4e0e\u4e24\u79cd\u5c3a\u5bf8\u7684 wrapper\u3002\n\n\n\n\u4e0d\u540c\u7c7b\u578b\u7684\u5305\u88c5\u548c\u76f8\u5e94\u7684 SKU\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u540d\u79f0\n\n\nSKU\n\n\n\n\n\n\n\n\n\n\n\u7ea2 Grove Wrapper 1*1(4 PCS \u5305\u88c5)\n\n\n110070020\n\n\n\n\n\n\n\u9ec4 Grove Wrapper 1*1(4 PCS \u5305\u88c5)\n\n\n110070021\n\n\n\n\n\n\n\u84dd Grove Wrapper 1*1(4 PCS \u5305\u88c5)\n\n\n110070022\n\n\n\n\n\n\n\u7eff Grove Wrapper 1*1(4 PCS \u5305\u88c5)\n\n\n110070023\n\n\n\n\n\n\n\u7ea2 Grove Wrapper 1*2(4 PCS \u5305\u88c5)\n\n\n110070024\n\n\n\n\n\n\n\u9ec4 Grove Wrapper 1*2(4 PCS \u5305\u88c5)\n\n\n110070025\n\n\n\n\n\n\n\u84dd Grove Wrapper 1*2(4 PCS \u5305\u88c5)\n\n\n110070026\n\n\n\n\n\n\n\u7eff Grove Wrapper 1*2(4 PCS \u5305\u88c5)\n\n\n110070027\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u786c\u4ef6\u4ecb\u7ecd\n\n\n\u56fa\u5b9a\u6263\n\n\n\n\n\u87ba\u5b54\n\n\n\u8bf7\u6ce8\u610f\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u94c6\u9489\u6765\u66ff\u4ee3\u87ba\u4e1d\u4ee5\u5c06\u5176\u56fa\u5b9a\u5728\u5176\u4ed6\u5757\u4e0a\u3002\n\n\n\n\n\u5982\u4f55\u8fde\u63a5 Grove - Wrapper\n\n\n\n\n\u5982\u4f55\u5728 Grove - Wrapper \u4e0a\u5b89\u88c5 Grove \u6a21\u5757\n\n\n\n\n\u96f6\u4ef6\u6e05\u5355\n\n\n\n\n\n\n\n\n\u96f6\u4ef6\u540d\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - Wrapper (\u4e00\u79cd\u5c3a\u5bf8\u4e00\u79cd\u989c\u8272)\n\n\n4 PCS\n\n\n\n\n\n\nCross recessed flat head screw PM2.0*H10.0MM\n\n\n8 PCS for each items\n\n\n\n\n\n\nCross recessed flat head screw CM4.0*H8.0MM\n\n\n8 PCS for each items\n\n\n\n\n\n\nNut(Silver) M2.0*H1.5mm\n\n\n8 PCS for each items\n\n\n\n\n\n\n\n\n\u6f14\u793a\n\n\n\u672c\u8282(\nAssembly guide\n)\u5c06\u663e\u793a\u5de7\u5999\u5730\u7ec4\u88c5Grove\u6a21\u5757\u7684\u4e00\u4e9b\u63d0\u793a\u3002\n\n\nWrapper \u8fde\u63a5\n\n\n\n\n\u5728\u4e50\u9ad8\u6a21\u5757\u4e0a\u5b89\u88c5 Grove - Wrapper\n\n\n\n\n\u5728 Makeblock \u4e0a\u5b89\u88c5 Grove - Wrapper\n\n\n\n\n\u6ce8\u610f\n\n\n\u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u5b83\u53ef\u80fd\u4f1a\u53d1\u73b0\u6709\u70b9\u96be\u4ee5\u7ec4\u5408\u3002\u4e0d\u8981\u6cae\u4e27\uff0c\u5728\u5c1d\u8bd5\u5341\u51e0\u6b21\u540e\uff0c\u60a8\u5c06\u4f1a\u5f88\u719f\u7ec3\u3002 \u5982\u679c\u60a8\u6709\u4e50\u9ad8\u7684\u7ecf\u9a8c\uff0c\u90a3\u5c06\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nMechanical Files", 
            "title": "Grove-Wrapper"
        }, 
        {
            "location": "/Grove-Wrapper/#_1", 
            "text": "\u67d4\u6027\u7d27\u56fa\u4ef6\u65b9\u4fbf\u5730\u5b89\u88c5\u548c\u66f4\u6362 Grove \u6a21\u5757\u3002    \u59cb\u7ec8\u4fdd\u6301\u60a8\u7684\u9879\u76ee\u5b89\u5168\u3002    \u534a\u5f00\u653e\u7a7a\u95f4\uff0c\u4f7f\u7528 Grove \u6a21\u5757\u4e0d\u4f1a\u4e2d\u65ad\u3002    \u517c\u5bb9\u4e50\u9ad8\u548c Makeblock \u6a21\u5757\uff0c\u4f7f\u60a8\u7684\u9879\u76ee\u81ea\u9002\u5e94\u548c\u6709\u8da3\u3002    \u652f\u67b6\u7528\u87ba\u9489 (M2, M4) \u56fa\u5b9a\u3002    \u53ef\u4ee5\u50cf\u4e50\u9ad8\u6a21\u5757\u90a3\u6837\u4e92\u8054\u3002    \u591a\u79cd\u989c\u8272\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Wrapper/#_2", 
            "text": "", 
            "title": "\u5e94\u7528\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Wrapper/#_3", 
            "text": "\u5c3a\u5bf8 (\u5927)    25 \u00d7 25 \u00d7 13 mm    \u5e73\u9762\u5c3a\u5bf8 (\u5c0f)     25 \u00d725 \u00d7 13 mm    \u6750\u6599    ABS    \u989c\u8272    \u84dd\u8272\uff0c\u7eff\u8272\uff0c\u9ec4\u8272\u548c\u7ea2\u8272\u9002\u7528\u4e0e\u4e24\u79cd\u5c3a\u5bf8\u7684 wrapper\u3002  \u4e0d\u540c\u7c7b\u578b\u7684\u5305\u88c5\u548c\u76f8\u5e94\u7684 SKU     \u4ea7\u54c1\u540d\u79f0  SKU      \u7ea2 Grove Wrapper 1*1(4 PCS \u5305\u88c5)  110070020    \u9ec4 Grove Wrapper 1*1(4 PCS \u5305\u88c5)  110070021    \u84dd Grove Wrapper 1*1(4 PCS \u5305\u88c5)  110070022    \u7eff Grove Wrapper 1*1(4 PCS \u5305\u88c5)  110070023    \u7ea2 Grove Wrapper 1*2(4 PCS \u5305\u88c5)  110070024    \u9ec4 Grove Wrapper 1*2(4 PCS \u5305\u88c5)  110070025    \u84dd Grove Wrapper 1*2(4 PCS \u5305\u88c5)  110070026    \u7eff Grove Wrapper 1*2(4 PCS \u5305\u88c5)  110070027", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Wrapper/#_4", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Wrapper/#_5", 
            "text": "\u56fa\u5b9a\u6263   \u87ba\u5b54  \u8bf7\u6ce8\u610f\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u94c6\u9489\u6765\u66ff\u4ee3\u87ba\u4e1d\u4ee5\u5c06\u5176\u56fa\u5b9a\u5728\u5176\u4ed6\u5757\u4e0a\u3002", 
            "title": "\u786c\u4ef6\u4ecb\u7ecd"
        }, 
        {
            "location": "/Grove-Wrapper/#grove-wrapper", 
            "text": "", 
            "title": "\u5982\u4f55\u8fde\u63a5 Grove - Wrapper"
        }, 
        {
            "location": "/Grove-Wrapper/#grove-wrapper-grove", 
            "text": "", 
            "title": "\u5982\u4f55\u5728 Grove - Wrapper \u4e0a\u5b89\u88c5 Grove \u6a21\u5757"
        }, 
        {
            "location": "/Grove-Wrapper/#_6", 
            "text": "\u96f6\u4ef6\u540d  \u6570\u91cf      Grove - Wrapper (\u4e00\u79cd\u5c3a\u5bf8\u4e00\u79cd\u989c\u8272)  4 PCS    Cross recessed flat head screw PM2.0*H10.0MM  8 PCS for each items    Cross recessed flat head screw CM4.0*H8.0MM  8 PCS for each items    Nut(Silver) M2.0*H1.5mm  8 PCS for each items", 
            "title": "\u96f6\u4ef6\u6e05\u5355"
        }, 
        {
            "location": "/Grove-Wrapper/#_7", 
            "text": "\u672c\u8282( Assembly guide )\u5c06\u663e\u793a\u5de7\u5999\u5730\u7ec4\u88c5Grove\u6a21\u5757\u7684\u4e00\u4e9b\u63d0\u793a\u3002", 
            "title": "\u6f14\u793a"
        }, 
        {
            "location": "/Grove-Wrapper/#wrapper", 
            "text": "", 
            "title": "Wrapper \u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Wrapper/#grove-wrapper_1", 
            "text": "", 
            "title": "\u5728\u4e50\u9ad8\u6a21\u5757\u4e0a\u5b89\u88c5 Grove - Wrapper"
        }, 
        {
            "location": "/Grove-Wrapper/#makeblock-grove-wrapper", 
            "text": "", 
            "title": "\u5728 Makeblock \u4e0a\u5b89\u88c5 Grove - Wrapper"
        }, 
        {
            "location": "/Grove-Wrapper/#_8", 
            "text": "\u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u5b83\u53ef\u80fd\u4f1a\u53d1\u73b0\u6709\u70b9\u96be\u4ee5\u7ec4\u5408\u3002\u4e0d\u8981\u6cae\u4e27\uff0c\u5728\u5c1d\u8bd5\u5341\u51e0\u6b21\u540e\uff0c\u60a8\u5c06\u4f1a\u5f88\u719f\u7ec3\u3002 \u5982\u679c\u60a8\u6709\u4e50\u9ad8\u7684\u7ecf\u9a8c\uff0c\u90a3\u5c06\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002", 
            "title": "\u6ce8\u610f"
        }, 
        {
            "location": "/Grove-Wrapper/#_9", 
            "text": "[Eagle\u6587\u4ef6]   Mechanical Files", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Tilt_Switch/", 
            "text": "Grove-Tilt Switch \u76f8\u5f53\u4e8e\u4e00\u4e2a\u5f00\u5173\uff0c\u7528\u4f5c\u6570\u5b57\u8f93\u5165\u3002 \u5728 tilt switch \u5185\u90e8\u662f\u4e00\u5bf9\u6eda\u73e0\uff0c\u5f53\u58f3\u4f53\u5411\u4e0a\u76f4\u7acb\u65f6\u6eda\u73e0\u4e0e\u5f15\u811a\u63a5\u89e6\u3002\u5f53\u58f3\u4f53\u7ffb\u8f6c\u5411\u4e0b\u65f6\u6eda\u73e0\u4e0d\u63a5\u89e6\uff0c\u56e0\u6b64\u65ad\u5f00\u8fde\u63a5\u3002\u4e0e\u6eda\u73e0\u63a5\u89e6\u7684\u5f15\u811a\u8fde\u63a5\u5230 SIG \u7ebf\uff0cNC \u8868\u793a\u4e0d\u8fde\u63a5\uff0c\u5728\u8be5\u4f20\u611f\u5668\u4e0a\u6ca1\u6709\u7528\u5230\u8fd9\u4e2a\u5f15\u811a\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u63a5\u53e3\n\n\n\u6613\u4e8e\u4f7f\u7528\n\n\n\u7b80\u5355\u7684 Grove \u6a21\u5757\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u7535\u538b\n\n\n\n\n4.75\n\n\n\n\n5.0\n\n\n\n\n5.25\n\n\n\n\nV\n\n\n\n\n\n\n\n\n\u8fde\u63a5\u89d2\n\n\n\n\n10\u00b0 ~170\u00b0\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\u65ad\u5f00\u89d2\n\n\n\n\n190\u00b0 ~350\u00b0\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\u7535\u6c14\u5bff\u547d\n\n\n\n\n100,000\n\n\n\n\n\u6b21\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528\n\n\nGrove - Tilt Switch \u7684 SIG \u5f15\u811a\u6b63\u5e38\u8f93\u51fa\u4f4e\u3002 \u5f53 Tilt Switch \u5411\u4e0a\u76f4\u7acb\u65f6\uff0c\u503e\u659c\u5f00\u5173\u5185\u7684\u4e00\u5bf9\u6eda\u73e0\u5c06\u4e0e\u5f15\u811a\u63a5\u89e6\uff0cSIG \u5f15\u811a\u5c06\u8f93\u51fa\u9ad8\u7535\u5e73\u3002\n\n\n\u4e0b\u9762\u6f14\u793a\u4e86\u4f7f\u7528 Tilt Switch \u548c Grove - Button \u6765\u63a7\u5236 LED \u7684\u7b80\u5355\u5e94\u7528\u3002\n\n\n\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff0cTilt Switch \u8fde\u63a5\u5230 Grove-Base Shield \u7684\u6570\u5b57\u7aef\u53e3 \n5\n\uff0cGrove-Button \u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3 \n7\n\uff0cLED\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3 \n2\n\u3002\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b :\n\n\n\n\n\n\n\n\n\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7a0b\u5e8f\u91cc\u3002\n\n\n\n\nvoid setup()\n{\n    pinMode(1, OUTPUT);\n    pinMode(5, INPUT);\n    pinMode(7, INPUT);\n}\n\nvoid loop()\n{\n\n    if (digitalRead(5)==HIGH)\n    {\n        digitalWrite(1, HIGH);\n        delay(100);\n        digitalWrite(1, LOW);\n    }\n\n    if (digitalRead(7)==HIGH)\n    {\n        digitalWrite(1, HIGH);\n        delay(200);\n        digitalWrite(1, LOW);\n    }\n\n}\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\u3002\n\n\n\u7136\u540e\u5f53\u60a8\u6309\u4e0b\u6309\u94ae\u6216\u6fc0\u6d3b tilt-switch \u65f6\uff0cLED\u5c06\u70b9\u4eae\u3002 \u60a8\u4e5f\u8bd5\u8bd5\u628a!\n\n\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\nGrove-Tilt Switch \u7684\u64cd\u4f5c\u89d2\u5ea6\u5982\u4e0b\u56fe\u6240\u793a :\n\n\n\n\n\n\nNote\n\nGrove \u4e0a\u7684\u6807\u8bb0 **J1** \u662f\u53c2\u8003\u7ec8\u7aef\u3002\n\n\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u4f60\u9700\u8981\u4e00\u4e2a Raspberry Pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+\u3002\n\n\n2.\u60a8\u9700\u8981\u5df2\u7ecf\u5b8c\u6210\u5f00\u53d1\u73af\u5883\u7684\u914d\u7f6e\uff0c\u5426\u5219\u8bf7\u9075\u5faa \n\u8fd9\u91cc\n\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 tilt-switch \u63d2\u5165 Grovepi \u63d2\u5ea7 \nD3\n\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n       cd yourpath/GrovePi/Software/Python/\n\n\n-   \u53ef\u4ee5\u770b\u5230\u4ee3\u7801\n\n    nano grovepi_tilt_switch.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Tilt Switch to digital port D3\n    # SIG,NC,VCC,GND\n    tilt_switch = 3\n\n    grovepi.pinMode(tilt_switch,\nINPUT\n)\n\n    while True:\n        try:\n            print grovepi.digitalRead(tilt_switch)\n            time.sleep(.5)\n\n        except IOError:\n            print \nError\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\n    sudo python grove_tilt_switch.py\n\n\n\n6.\u7ed3\u679c : \u5c06\u4f20\u611f\u5668\u7ad6\u76f4\u65f6 SIG \u5f15\u811a\u5c06\u8f93\u51fa\u9ad8\u7535\u5e73\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u539f\u7406\u56fe\u6587\u4ef6]\n \nGrove - Tilt Switch v1.0 Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nGrove - Tilt Switch v1.1 PDF File\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - Tilt Switch v1.1 Eagle File\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nSW200D Datasheet", 
            "title": "Grove-Tilt Switch"
        }, 
        {
            "location": "/Grove-Tilt_Switch/#_1", 
            "text": "Grove \u63a5\u53e3  \u6613\u4e8e\u4f7f\u7528  \u7b80\u5355\u7684 Grove \u6a21\u5757    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Tilt_Switch/#_2", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u7535\u538b  \n4.75  \n5.0  \n5.25  \nV    \n\u8fde\u63a5\u89d2  \n10\u00b0 ~170\u00b0  \n-    \n\u65ad\u5f00\u89d2  \n190\u00b0 ~350\u00b0  \n-    \n\u7535\u6c14\u5bff\u547d  \n100,000  \n\u6b21", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Tilt_Switch/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Tilt_Switch/#_3", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Tilt_Switch/#arduino", 
            "text": "Grove - Tilt Switch \u7684 SIG \u5f15\u811a\u6b63\u5e38\u8f93\u51fa\u4f4e\u3002 \u5f53 Tilt Switch \u5411\u4e0a\u76f4\u7acb\u65f6\uff0c\u503e\u659c\u5f00\u5173\u5185\u7684\u4e00\u5bf9\u6eda\u73e0\u5c06\u4e0e\u5f15\u811a\u63a5\u89e6\uff0cSIG \u5f15\u811a\u5c06\u8f93\u51fa\u9ad8\u7535\u5e73\u3002  \u4e0b\u9762\u6f14\u793a\u4e86\u4f7f\u7528 Tilt Switch \u548c Grove - Button \u6765\u63a7\u5236 LED \u7684\u7b80\u5355\u5e94\u7528\u3002   \u5982\u4e0b\u56fe\u6240\u793a\uff0cTilt Switch \u8fde\u63a5\u5230 Grove-Base Shield \u7684\u6570\u5b57\u7aef\u53e3  5 \uff0cGrove-Button \u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3  7 \uff0cLED\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3  2 \u3002\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b :     \u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7a0b\u5e8f\u91cc\u3002   void setup()\n{\n    pinMode(1, OUTPUT);\n    pinMode(5, INPUT);\n    pinMode(7, INPUT);\n}\n\nvoid loop()\n{\n\n    if (digitalRead(5)==HIGH)\n    {\n        digitalWrite(1, HIGH);\n        delay(100);\n        digitalWrite(1, LOW);\n    }\n\n    if (digitalRead(7)==HIGH)\n    {\n        digitalWrite(1, HIGH);\n        delay(200);\n        digitalWrite(1, LOW);\n    }\n\n}   \u4e0a\u4f20\u4ee3\u7801\u3002  \u7136\u540e\u5f53\u60a8\u6309\u4e0b\u6309\u94ae\u6216\u6fc0\u6d3b tilt-switch \u65f6\uff0cLED\u5c06\u70b9\u4eae\u3002 \u60a8\u4e5f\u8bd5\u8bd5\u628a!", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Tilt_Switch/#_4", 
            "text": "Grove-Tilt Switch \u7684\u64cd\u4f5c\u89d2\u5ea6\u5982\u4e0b\u56fe\u6240\u793a :    Note \nGrove \u4e0a\u7684\u6807\u8bb0 **J1** \u662f\u53c2\u8003\u7ec8\u7aef\u3002", 
            "title": "\u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/Grove-Tilt_Switch/#raspberry-pi", 
            "text": "1.\u4f60\u9700\u8981\u4e00\u4e2a Raspberry Pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+\u3002  2.\u60a8\u9700\u8981\u5df2\u7ecf\u5b8c\u6210\u5f00\u53d1\u73af\u5883\u7684\u914d\u7f6e\uff0c\u5426\u5219\u8bf7\u9075\u5faa  \u8fd9\u91cc \u3002  3.\u8fde\u63a5   \u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 tilt-switch \u63d2\u5165 Grovepi \u63d2\u5ea7  D3 \u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :        cd yourpath/GrovePi/Software/Python/ \n-   \u53ef\u4ee5\u770b\u5230\u4ee3\u7801     nano grovepi_tilt_switch.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Tilt Switch to digital port D3\n    # SIG,NC,VCC,GND\n    tilt_switch = 3\n\n    grovepi.pinMode(tilt_switch, INPUT )\n\n    while True:\n        try:\n            print grovepi.digitalRead(tilt_switch)\n            time.sleep(.5)\n\n        except IOError:\n            print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002     sudo python grove_tilt_switch.py  6.\u7ed3\u679c : \u5c06\u4f20\u611f\u5668\u7ad6\u76f4\u65f6 SIG \u5f15\u811a\u5c06\u8f93\u51fa\u9ad8\u7535\u5e73\u3002", 
            "title": "\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Tilt_Switch/#_5", 
            "text": "[\u539f\u7406\u56fe\u6587\u4ef6]   Grove - Tilt Switch v1.0 Eagle File  [\u539f\u7406\u56fePDF]   Grove - Tilt Switch v1.1 PDF File  [Eagle\u6587\u4ef6]   Grove - Tilt Switch v1.1 Eagle File  [\u82af\u7247\u6570\u636e\u624b\u518c]   SW200D Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Protoshield/", 
            "text": "\u8be5 Grove \u6a21\u5757\u5141\u8bb8\u60a8\u5c06\u81ea\u5df1\u7684\u7535\u8def\u6216\u7ec4\u4ef6\u6dfb\u52a0\u5230\u60a8\u7684 Grove \u7cfb\u7edf\u539f\u4e2d\u3002\u5b83\u53ef\u4ee5\u8bbf\u95ee Grove \u8fde\u63a5\u7ebf - \nS0\n\uff0c\nS1\n\uff0c\nVCC\n \u548c \nGND\n \u7684\u6240\u6709\u56db\u6761\u7ebf\u8def\u3002\u8fd8\u4fdd\u7559\u4e86\u4e00\u4e2a\u5e38\u5f00\u6309\u94ae\u7684\u5b89\u88c5\u7a7a\u95f4\u3002\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u628a\u6807\u51c6 2.54mm \u95f4\u8ddd\u7684\u666e\u901a\u7684 DIP \u5c01\u88c5 IC \u548c\u5176\u4ed6\u7ec4\u4ef6\u5b89\u88c5\u5230\u8fd9\u4e2a\u6a21\u5757\u4e0a\u3002\n\n\n\n\n\u4ea7\u54c1\u53c2\u6570\n\n\n\n\n\n\n\u6807\u51c6\u5316 Grove \u63a5\u53e3\n\n\n\u9762\u5305\u677f\u98ce\u683c\n\n\n2.54mm \u6807\u51c6\u95f4\u8ddd\n\n\n\u6709\u4e1d\u5370\u6807\u7b7e\n\n\n\u4fdd\u7559\u4e86\u5e38\u7528\u6309\u94ae\u7684\u5b89\u88c5\u7a7a\u95f4\n\n\n\n\n\u63a5\u53e3\n\n\n\n\n\n\nGrove \u63a5\u53e3\u7684 \nVCC\n \u548c \nGND\n \u88ab\u6a21\u5757\u8fb9\u7f18\u4e24\u6761\u603b\u7ebf\u8f93\u51fa\uff0c\u5982\u56fe\u6240\u793a\u3002\u4f60\u53ef\u4ee5\u5728\u4e24\u6761\u7535\u6e90\u603b\u7ebf\u4e2d\u95f4\u770b\u5230 \nSig0\n \u548c \nSig1\n \u7684\u710a\u76d8\u3002\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\nGrove \u63a5\u53e3\u7684 VCC \u548c GND \u4f5c\u4e3a\u4e24\u4e2a\u603b\u7ebf\u88ab\u8f93\u51fa\uff0c\u5982\u4e0a\u6240\u793a\u3002\u60a8\u53ef\u4ee5\u5728\u4e24\u6761\u7535\u6e90\u603b\u7ebf\u4e4b\u95f4\u627e\u5230\u7528\u767d\u7ebf\u6807\u8bb0\u7684 Sig0 \u548c Sig1 \u7684\u710a\u76d8\u3002\n\u53f3\u4fa7\u7684\u6b63\u65b9\u5f62\u533a\u57df\u662f\u4e00\u4e2a\u666e\u901a\u7684\u4e34\u65f6\u6309\u94ae\u63d2\u5b54\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u6309\u94ae\u5176\u63d2\u5165\u5176\u4e2d\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\n\n\n\n\u6b64\u5916\uff0cProtoshield \u8fd8\u9644\u5e26\u4e24\u4e2a 20 \u9488\u516c\u5934\u3002\u5f53\u60a8\u9700\u8981\u5728\u5176\u4ed6\u9762\u5305\u677f\u6216\u6269\u5c55\u677f\u4e0a\u8fdb\u884c\u6269\u5c55\u65f6\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u5206\u89e3\u6210\u8f83\u5c0f\u7684\u90e8\u4ef6\u5e76\u5c06\u5176\u710a\u63a5\u5230 Protoshield \u4e0a\u3002\u4ed6\u4eec\u4e0e\u5e38\u89c4\u7684\u9762\u5305\u677f\u5177\u6709\u5f88\u597d\u7684\u517c\u5bb9\u6027\u3002\n\n\n\n\n\u793a\u4f8b\uff1a\u70b9\u4eae LED \u706f\n\n\n\n\n\n\n\u628a LED \u7684 \n\u957f\u5f15\u811a\n \u63d2\u5165 \nVCC\n \u63d2\u53e3\uff0c\n\u77ed\u5f15\u811a\n \u63d2\u5165 \nSig0\n \u63d2\u53e3\u3002\n\n\n\n\n\n\n\u628a LED \u710a\u63a5\u5728 Protoshield \u4e0a\u3002\n\n\n\n\n\n\n\n\u628a\u6a21\u5757\u7528 4-pin Grove \u8fde\u63a5\u7ebf\u8fde\u63a5\u5230 Grove - Basic Shield \u7684 \nD8\n \u7aef\u53e3\u3002\n\n\n\n\n\n\n\u628a Grove - Basic Shield \u7ec4\u88c5\u5230 Arduino \u4e0a\uff0c\u7136\u540e\u7528 USB \u7535\u7f06\u628a Arduino \u8fde\u63a5\u5728\u7535\u8111\u4e0a\u3002\n\n\n\n\n\n\n\u628a\u4e0b\u9762\u4ee3\u7801\u7c98\u8d34\u5230 Arduino IDE \u7684\u65b0\u7a97\u53e3\u4e2d\u5e76\u4e0a\u4f20\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u3002\n\n\n\n\n\n\n//\u793a\u4f8b\u4ee3\u7801\uff1a\nint led = 8;\n\n// the setup routine runs once when you press reset:\nvoid setup() {\n    // \u521d\u59cb\u5316\u5f15\u811a\u4f5c\u4e3a\u8f93\u51fa\n    pinMode(led, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop() {\n    digitalWrite(led, HIGH);   // \u70b9\u4eae LED (HIGH \u4ee3\u8868\u9ad8\u7535\u5e73)\n    delay(1000);               // \u7b49\u5f85\u4e00\u79d2\n    digitalWrite(led, LOW);    // \u8f93\u51fa\u4f4e\u7535\u5e73\u6765\u7184\u706d LED \u706f\n    delay(1000);               // \u7b49\u5f85\u4e00\u79d2\n}\n\n\n\n\n\u8d44\u6599\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\nGrove_-_Protoshield Eagle File", 
            "title": "Grove-Protoshield"
        }, 
        {
            "location": "/Grove-Protoshield/#_1", 
            "text": "\u6807\u51c6\u5316 Grove \u63a5\u53e3  \u9762\u5305\u677f\u98ce\u683c  2.54mm \u6807\u51c6\u95f4\u8ddd  \u6709\u4e1d\u5370\u6807\u7b7e  \u4fdd\u7559\u4e86\u5e38\u7528\u6309\u94ae\u7684\u5b89\u88c5\u7a7a\u95f4", 
            "title": "\u4ea7\u54c1\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Protoshield/#_2", 
            "text": "Grove \u63a5\u53e3\u7684  VCC  \u548c  GND  \u88ab\u6a21\u5757\u8fb9\u7f18\u4e24\u6761\u603b\u7ebf\u8f93\u51fa\uff0c\u5982\u56fe\u6240\u793a\u3002\u4f60\u53ef\u4ee5\u5728\u4e24\u6761\u7535\u6e90\u603b\u7ebf\u4e2d\u95f4\u770b\u5230  Sig0  \u548c  Sig1  \u7684\u710a\u76d8\u3002", 
            "title": "\u63a5\u53e3"
        }, 
        {
            "location": "/Grove-Protoshield/#_3", 
            "text": "Grove \u63a5\u53e3\u7684 VCC \u548c GND \u4f5c\u4e3a\u4e24\u4e2a\u603b\u7ebf\u88ab\u8f93\u51fa\uff0c\u5982\u4e0a\u6240\u793a\u3002\u60a8\u53ef\u4ee5\u5728\u4e24\u6761\u7535\u6e90\u603b\u7ebf\u4e4b\u95f4\u627e\u5230\u7528\u767d\u7ebf\u6807\u8bb0\u7684 Sig0 \u548c Sig1 \u7684\u710a\u76d8\u3002\n\u53f3\u4fa7\u7684\u6b63\u65b9\u5f62\u533a\u57df\u662f\u4e00\u4e2a\u666e\u901a\u7684\u4e34\u65f6\u6309\u94ae\u63d2\u5b54\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u6309\u94ae\u5176\u63d2\u5165\u5176\u4e2d\uff0c\u5982\u4e0b\u6240\u793a\u3002   \u6b64\u5916\uff0cProtoshield \u8fd8\u9644\u5e26\u4e24\u4e2a 20 \u9488\u516c\u5934\u3002\u5f53\u60a8\u9700\u8981\u5728\u5176\u4ed6\u9762\u5305\u677f\u6216\u6269\u5c55\u677f\u4e0a\u8fdb\u884c\u6269\u5c55\u65f6\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u5206\u89e3\u6210\u8f83\u5c0f\u7684\u90e8\u4ef6\u5e76\u5c06\u5176\u710a\u63a5\u5230 Protoshield \u4e0a\u3002\u4ed6\u4eec\u4e0e\u5e38\u89c4\u7684\u9762\u5305\u677f\u5177\u6709\u5f88\u597d\u7684\u517c\u5bb9\u6027\u3002   \u793a\u4f8b\uff1a\u70b9\u4eae LED \u706f    \u628a LED \u7684  \u957f\u5f15\u811a  \u63d2\u5165  VCC  \u63d2\u53e3\uff0c \u77ed\u5f15\u811a  \u63d2\u5165  Sig0  \u63d2\u53e3\u3002    \u628a LED \u710a\u63a5\u5728 Protoshield \u4e0a\u3002    \u628a\u6a21\u5757\u7528 4-pin Grove \u8fde\u63a5\u7ebf\u8fde\u63a5\u5230 Grove - Basic Shield \u7684  D8  \u7aef\u53e3\u3002    \u628a Grove - Basic Shield \u7ec4\u88c5\u5230 Arduino \u4e0a\uff0c\u7136\u540e\u7528 USB \u7535\u7f06\u628a Arduino \u8fde\u63a5\u5728\u7535\u8111\u4e0a\u3002    \u628a\u4e0b\u9762\u4ee3\u7801\u7c98\u8d34\u5230 Arduino IDE \u7684\u65b0\u7a97\u53e3\u4e2d\u5e76\u4e0a\u4f20\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801\uff0c\u8bf7\u70b9\u51fb \u8fd9\u91cc \u3002    //\u793a\u4f8b\u4ee3\u7801\uff1a\nint led = 8;\n\n// the setup routine runs once when you press reset:\nvoid setup() {\n    // \u521d\u59cb\u5316\u5f15\u811a\u4f5c\u4e3a\u8f93\u51fa\n    pinMode(led, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop() {\n    digitalWrite(led, HIGH);   // \u70b9\u4eae LED (HIGH \u4ee3\u8868\u9ad8\u7535\u5e73)\n    delay(1000);               // \u7b49\u5f85\u4e00\u79d2\n    digitalWrite(led, LOW);    // \u8f93\u51fa\u4f4e\u7535\u5e73\u6765\u7184\u706d LED \u706f\n    delay(1000);               // \u7b49\u5f85\u4e00\u79d2\n}", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Protoshield/#_4", 
            "text": "[Eagle \u6587\u4ef6] Grove_-_Protoshield Eagle File", 
            "title": "\u8d44\u6599\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Button/", 
            "text": "Grove - Button\n \u662f\u4e00\u6b3e\u77ac\u65f6\u6309\u952e\u5f00\u5173\u5143\u4ef6\u3002\u8fd9\u4e2a\u4ea7\u54c1\u5185\u7f6e\u4e86\u4e00\u4e2a\u77ac\u65f6\u6309\u952e\uff0c\u8fd9\u4e2a\u77ac\u65f6\u6309\u952e\u80fd\u591f\u5728\u6309\u538b\u91ca\u653e\u65f6\u4f1a\u81ea\u52a8\u5f39\u56de\u3002\u5f53\u6309\u952e\u6309\u4e0b\u65f6\u7acb\u5373\u8f93\u51fa\u4e00\u4e2a\u9ad8\u7535\u538b\u7684\u903b\u8f91\u7535\u5e73\uff0c\u91ca\u653e\u65f6\u7acb\u5373\u8f93\u51fa\u4e00\u4e2a\u4f4e\u7535\u538b\u7684\u903b\u8f91\u5e73\u3002NC\u5f15\u811a\u5728\u8be5\u6a21\u5757\u6ca1\u6709\u7528\u5230\uff0cSIG \u5f15\u811a\u4e3a\u6309\u94ae\u7684\u4fe1\u53f7\u8f93\u51fa\u3002\u5982\u56fe\u6240\u793a\uff0cGrove - Button \u6709\u4e24\u4e2a\u4e0d\u540c\u7248\u672c\uff0c\u4e24\u4e2a\u7248\u672c\u529f\u80fd\u4e00\u81f4\uff0c\u552f\u4e00\u533a\u522b\u5728\u4e8e Grove \u63a5\u53e3\u4f4d\u7f6e\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u6613\u4e8e\u4f7f\u7528\u7684\u77ac\u65f6\u5f00\u5173\u6309\u94ae\n\n\n\u4f7f\u7528\u6807\u51c6 4 \u9488 Grove \u7535\u7f06\u8fde\u63a5\u5230\u5176\u4ed6 Grove \u6a21\u5757\uff0c\u5982 Grove Power Modules \u548c Grove - Base Shield\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u5355\u673a\u6a21\u5f0f\n\n\n\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u6784\u5efa\u4e00\u4e2a\u4f7f\u7528\u6b64\u6a21\u5757\uff0c\u4f46\u4e0d\u4f7f\u7528\u4efb\u4f55\u5fae\u63a7\u5236\u5668\u7684\u91c7\u6837\u7535\u8def :\n- \u5c06\u6309\u94ae\u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u5165\u7aef ( \u7535\u6e90\u6a21\u5757\u5de6\u4fa7 )\u3002 \u5728\u7535\u8def\u7684\u8f93\u51fa\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u7528\u6237 \n\u63a5\u53e3\u6a21\u5757\n (Grove - Red LED, Grove - LED String Light, Grove - Mini Fan, Grove - Buzzer, Grove - Recorder \u7b49\u7b49)\n- \u5b8c\u6210\u540e\u542f\u52a8\u7535\u8def\n- \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u6309\u94ae\u6a21\u5757\u6765\u89e6\u53d1\u8f93\u51fa\u3002 \u4f8b\u5982 :\n  - \u5f53\u4e0e Grove - Red LED \u8f93\u51fa\u6a21\u5757\u914d\u5408\u4f7f\u7528\u65f6\uff0c\u8bf7\u6ce8\u610f\u6309\u4e0b\u6309\u94ae\u65f6 LED \u4f1a\u4eae\u8d77\uff0c\u5f53\u60a8\u505c\u6b62\u6309\u538b\u65f6\uff0cLED \u7184\u706d\u3002\n\n\n\n\n\u5728\u7535\u6e90\u6a21\u5757\u65b9\u9762\uff0c\u9009\u7528 Grove - USB \u7535\u6e90\u6a21\u5757\u6216 Grove - DC \u63d2\u5ea7\u7535\u6e90\u6a21\u5757\u7528\u4e8e Grove \u7535\u8def\u3002\n\n\n\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528\n\n\n\u6309\u7167\u8fd9\u4e9b\u7b80\u5355\u7684\u6b65\u9aa4\uff0c\u4f7f\u7528\u77ac\u65f6\u5f00\u5173\u6309\u94ae\u6784\u5efa Grove \u7535\u8def :\n\n\n\u5f53\u5c06\u6a21\u5757\u4e0e Arduino \u6216 Seeeduino \u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u8bf7\u4f7f\u7528 Grove - Base Shield\uff0c\u5e76\u4f7f\u7528\u6307\u5b9a\u7684 Grove \u63a5\u53e3\u5c06 Grove - Button \u6a21\u5757\u8fde\u63a5\u5230 Grove - Base Shield\u3002 \u8fd8\u8981\u9644\u52a0\u4e00\u4e2a\u8f93\u51fa\u6a21\u5757\uff0c\u4f8b\u5982 Grove - Red LED\uff0c\u6839\u636e\u4ece\u6309\u94ae\u63a5\u6536\u7684\u8f93\u5165\u5c06\u89e6\u53d1\u3002\n\u4e0a\u4f20\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\uff0c\u4f7f\u5f97\u6839\u636e Grove - Button \u7684\u8f93\u5165\u4f7f LED \u53d8\u4e3a ON \u548c OFF :\n\n\n//Turns on and off a light emitting diode(LED) connected to digital pin 13, when pressing a pushbutton attached to pin 2.\n\n\n\n/*\n\n\n The circuit:\n\n\n * LED attached from pin 13 to ground\n\n\n * pushbutton attached to pin 2 from +5V\n\n\n * 10K resistor attached to pin 2 from ground\n\n\n\n * Note: on most Arduinos there is already an LED on the board\n\n\n attached to pin 13.\n\n\n\n\n This example code is in the public domain.\n\n\n\n http://www.arduino.cc/en/Tutorial/Button\n\n\n */\n\n\n\n// constants won\nt change. They\nre used here to\n\n\n// set pin numbers:\n\n\nconst\n \nint\n \nbuttonPin\n \n=\n \n2\n;\n     \n// the number of the pushbutton pin\n\n\nconst\n \nint\n \nledPin\n \n=\n  \n13\n;\n      \n// the number of the LED pin\n\n\n\n// variables will change:\n\n\nint\n \nbuttonState\n \n=\n \n0\n;\n         \n// variable for reading the pushbutton status\n\n\n\nvoid\n \nsetup\n()\n \n{\n\n    \n// initialize the LED pin as an output:\n\n    \npinMode\n(\nledPin\n,\n \nOUTPUT\n);\n\n    \n// initialize the pushbutton pin as an input:\n\n    \npinMode\n(\nbuttonPin\n,\n \nINPUT\n);\n\n\n}\n\n\n\nvoid\n \nloop\n(){\n\n    \n// read the state of the pushbutton value:\n\n    \nbuttonState\n \n=\n \ndigitalRead\n(\nbuttonPin\n);\n\n\n    \n// check if the pushbutton is pressed.\n\n    \n// if it is, the buttonState is HIGH:\n\n    \nif\n \n(\nbuttonState\n \n==\n \nHIGH\n)\n \n{\n\n        \n// turn LED on:\n\n        \ndigitalWrite\n(\nledPin\n,\n \nHIGH\n);\n\n    \n}\n\n    \nelse\n \n{\n\n        \n// turn LED off:\n\n        \ndigitalWrite\n(\nledPin\n,\n \nLOW\n);\n\n    \n}\n\n\n}\n\n\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n\u8fd9\u662f Raspberry Pi \u7684\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\u3002\u8fd0\u884c\u7a0b\u5e8f\u5e76\u6309\u6309\u94ae\uff0c\u5c06\u5728\u7ec8\u7aef\u4e0a\u6253\u5370 1\uff0c\u5426\u5219\u6253\u5370 0\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\n\n# http://www.seeedstudio.com/wiki/Grove_-_Button\n\n\n\nimport\n \ntime\n\n\nimport\n \ngrovepi\n\n\n\n# Connect the Grove Button to digital port D3\n\n\n# SIG,NC,VCC,GND\n\n\nbutton\n \n=\n \n3\n\n\n\ngrovepi\n.\npinMode\n(\nbutton\n,\nINPUT\n)\n\n\n\nwhile\n \nTrue\n:\n\n    \ntry\n:\n\n        \nprint\n \ngrovepi\n.\ndigitalRead\n(\nbutton\n)\n\n        \ntime\n.\nsleep\n(\n.\n5\n)\n\n\n    \nexcept\n \nIOError\n:\n\n        \nprint\n \nError\n\n\n\n\n\n\u8fd0\u884c\u7a0b\u5e8f\n\n\n\n\n\u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84 (\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84)\n\ncd GrovePi/Software/Python/\n\n\n\n\u8fd0\u884c\u7a0b\u5e8f\n\nsudo python grove_button.py\n\n\n\n\n\n\u76f8\u5173 Grove Packer\n\n\n\u6807\u51c6\u7684 Grove - Button \u6a21\u5757\u53ef\u4f5c\u4e3a\u4ee5\u4e0b Grove Kit \u7cfb\u5217\u7684\u4e00\u90e8\u5206\u4f7f\u7528 :\n\n\n\n\n\n\n\n\nGrove - Mixer Pack V2\n\n\nGrove - Mixer Pack\n\n\nGrove - Starter Kit V1.1b\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u6216\u8005\uff0c\u53ef\u4ee5\u901a\u8fc7 \n\u8fd9\u91cc\n \u5728 Seeed Studio \nBazaar\n \u72ec\u5bb6\u8d2d\u4e70\u3002 \u8981\u8d2d\u4e70 Panel Mount \u7248\u672c\u7684\u6a21\u5757\uff0c\u8bf7\u8f6c\u5230 \n\u8fd9\u91cc\n\u3002\n\n\n\u9879\u76ee\u5c55\u793a\n\n\n\n\n\u53d7\u5230 \u5b88\u671b\u5148\u950b \u7684\u542f\u8fea\uff0c\u6211\u4eec\u5df2\u7ecf\u5236\u4f5c\u4e86\u975e\u5e38\u9177\u7684\u6728\u5236\u6fc0\u5149\u67aa\u73a9\u5177\uff0c\u73a9\u5f97\u5f00\u5fc3 !\n\n\n\u6728\u6fc0\u5149\u67aa\u548c\u67aa\u7784\u51c6\u5668\u5747\u57fa\u4e8e Arduino \u677f\u7684\u4e00\u4e2a\u79f0\u4e3a Seeeduino Lotus \u7684\u677f\u3002 \u6fc0\u5149\u67aa\u4e0a\u7684\u6fc0\u5149\u53d1\u5c04\u5668\u88ab\u63a7\u5236\u4ee5\u53d1\u5c04\u6fc0\u5149\u8109\u51b2\u4ee5\u4f7f Gun Target \"\u6d3b\u52a8\"\u3002 \u5e76\u4e14 Gun Target \u4e0a\u6709 3 \u4e2a\u5149\u4f20\u611f\u5668\u6765\u68c0\u6d4b\u6fc0\u5149\u8109\u51b2\u3002\u770b\u8d77\u6765\u5f88\u7b80\u5355\u5bf9\u5417? \u5982\u679c\u60a8\u5bf9\u6211\u4eec\u7684\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u4e3a\u81ea\u5df1\u6216\u60a8\u7684\u5b69\u5b50\u505a\u4e00\u4e2a! \u503c\u5f97\u82b1\u4e00\u5929 DIY \u5b83\u4f5c\u4e3a\u5723\u8bde\u793c\u7269\u3002   \n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-Button Eagle Files\n.\n\n\n[\u539f\u7406\u56fe\u7f51\u9875\u7248]\n \nSchematic at Easyeda\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nHow to upload code", 
            "title": "Grove-Button"
        }, 
        {
            "location": "/Grove-Button/#_1", 
            "text": "\u6613\u4e8e\u4f7f\u7528\u7684\u77ac\u65f6\u5f00\u5173\u6309\u94ae  \u4f7f\u7528\u6807\u51c6 4 \u9488 Grove \u7535\u7f06\u8fde\u63a5\u5230\u5176\u4ed6 Grove \u6a21\u5757\uff0c\u5982 Grove Power Modules \u548c Grove - Base Shield    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Button/#_2", 
            "text": "\u5355\u673a\u6a21\u5f0f  \u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u6784\u5efa\u4e00\u4e2a\u4f7f\u7528\u6b64\u6a21\u5757\uff0c\u4f46\u4e0d\u4f7f\u7528\u4efb\u4f55\u5fae\u63a7\u5236\u5668\u7684\u91c7\u6837\u7535\u8def :\n- \u5c06\u6309\u94ae\u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u5165\u7aef ( \u7535\u6e90\u6a21\u5757\u5de6\u4fa7 )\u3002 \u5728\u7535\u8def\u7684\u8f93\u51fa\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u7528\u6237  \u63a5\u53e3\u6a21\u5757  (Grove - Red LED, Grove - LED String Light, Grove - Mini Fan, Grove - Buzzer, Grove - Recorder \u7b49\u7b49)\n- \u5b8c\u6210\u540e\u542f\u52a8\u7535\u8def\n- \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u6309\u94ae\u6a21\u5757\u6765\u89e6\u53d1\u8f93\u51fa\u3002 \u4f8b\u5982 :\n  - \u5f53\u4e0e Grove - Red LED \u8f93\u51fa\u6a21\u5757\u914d\u5408\u4f7f\u7528\u65f6\uff0c\u8bf7\u6ce8\u610f\u6309\u4e0b\u6309\u94ae\u65f6 LED \u4f1a\u4eae\u8d77\uff0c\u5f53\u60a8\u505c\u6b62\u6309\u538b\u65f6\uff0cLED \u7184\u706d\u3002   \u5728\u7535\u6e90\u6a21\u5757\u65b9\u9762\uff0c\u9009\u7528 Grove - USB \u7535\u6e90\u6a21\u5757\u6216 Grove - DC \u63d2\u5ea7\u7535\u6e90\u6a21\u5757\u7528\u4e8e Grove \u7535\u8def\u3002  \u4e0e Arduino \u4e00\u8d77\u4f7f\u7528  \u6309\u7167\u8fd9\u4e9b\u7b80\u5355\u7684\u6b65\u9aa4\uff0c\u4f7f\u7528\u77ac\u65f6\u5f00\u5173\u6309\u94ae\u6784\u5efa Grove \u7535\u8def :  \u5f53\u5c06\u6a21\u5757\u4e0e Arduino \u6216 Seeeduino \u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u8bf7\u4f7f\u7528 Grove - Base Shield\uff0c\u5e76\u4f7f\u7528\u6307\u5b9a\u7684 Grove \u63a5\u53e3\u5c06 Grove - Button \u6a21\u5757\u8fde\u63a5\u5230 Grove - Base Shield\u3002 \u8fd8\u8981\u9644\u52a0\u4e00\u4e2a\u8f93\u51fa\u6a21\u5757\uff0c\u4f8b\u5982 Grove - Red LED\uff0c\u6839\u636e\u4ece\u6309\u94ae\u63a5\u6536\u7684\u8f93\u5165\u5c06\u89e6\u53d1\u3002\n\u4e0a\u4f20\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\uff0c\u4f7f\u5f97\u6839\u636e Grove - Button \u7684\u8f93\u5165\u4f7f LED \u53d8\u4e3a ON \u548c OFF :  //Turns on and off a light emitting diode(LED) connected to digital pin 13, when pressing a pushbutton attached to pin 2.  /*   The circuit:   * LED attached from pin 13 to ground   * pushbutton attached to pin 2 from +5V   * 10K resistor attached to pin 2 from ground   * Note: on most Arduinos there is already an LED on the board   attached to pin 13.   This example code is in the public domain.   http://www.arduino.cc/en/Tutorial/Button   */  // constants won t change. They re used here to  // set pin numbers:  const   int   buttonPin   =   2 ;       // the number of the pushbutton pin  const   int   ledPin   =    13 ;        // the number of the LED pin  // variables will change:  int   buttonState   =   0 ;           // variable for reading the pushbutton status  void   setup ()   { \n     // initialize the LED pin as an output: \n     pinMode ( ledPin ,   OUTPUT ); \n     // initialize the pushbutton pin as an input: \n     pinMode ( buttonPin ,   INPUT );  }  void   loop (){ \n     // read the state of the pushbutton value: \n     buttonState   =   digitalRead ( buttonPin ); \n\n     // check if the pushbutton is pressed. \n     // if it is, the buttonState is HIGH: \n     if   ( buttonState   ==   HIGH )   { \n         // turn LED on: \n         digitalWrite ( ledPin ,   HIGH ); \n     } \n     else   { \n         // turn LED off: \n         digitalWrite ( ledPin ,   LOW ); \n     }  }   \u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528  \u8fd9\u662f Raspberry Pi \u7684\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\u3002\u8fd0\u884c\u7a0b\u5e8f\u5e76\u6309\u6309\u94ae\uff0c\u5c06\u5728\u7ec8\u7aef\u4e0a\u6253\u5370 1\uff0c\u5426\u5219\u6253\u5370 0\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002    # http://www.seeedstudio.com/wiki/Grove_-_Button  import   time  import   grovepi  # Connect the Grove Button to digital port D3  # SIG,NC,VCC,GND  button   =   3  grovepi . pinMode ( button , INPUT )  while   True : \n     try : \n         print   grovepi . digitalRead ( button ) \n         time . sleep ( . 5 ) \n\n     except   IOError : \n         print   Error   \u8fd0\u884c\u7a0b\u5e8f   \u627e\u5230\u6587\u4ef6\u7684\u8def\u5f84 (\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8def\u5f84) cd GrovePi/Software/Python/  \u8fd0\u884c\u7a0b\u5e8f sudo python grove_button.py   \u76f8\u5173 Grove Packer  \u6807\u51c6\u7684 Grove - Button \u6a21\u5757\u53ef\u4f5c\u4e3a\u4ee5\u4e0b Grove Kit \u7cfb\u5217\u7684\u4e00\u90e8\u5206\u4f7f\u7528 :     Grove - Mixer Pack V2  Grove - Mixer Pack  Grove - Starter Kit V1.1b           \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70     \u6216\u8005\uff0c\u53ef\u4ee5\u901a\u8fc7  \u8fd9\u91cc  \u5728 Seeed Studio  Bazaar  \u72ec\u5bb6\u8d2d\u4e70\u3002 \u8981\u8d2d\u4e70 Panel Mount \u7248\u672c\u7684\u6a21\u5757\uff0c\u8bf7\u8f6c\u5230  \u8fd9\u91cc \u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Button/#_3", 
            "text": "\u53d7\u5230 \u5b88\u671b\u5148\u950b \u7684\u542f\u8fea\uff0c\u6211\u4eec\u5df2\u7ecf\u5236\u4f5c\u4e86\u975e\u5e38\u9177\u7684\u6728\u5236\u6fc0\u5149\u67aa\u73a9\u5177\uff0c\u73a9\u5f97\u5f00\u5fc3 !  \u6728\u6fc0\u5149\u67aa\u548c\u67aa\u7784\u51c6\u5668\u5747\u57fa\u4e8e Arduino \u677f\u7684\u4e00\u4e2a\u79f0\u4e3a Seeeduino Lotus \u7684\u677f\u3002 \u6fc0\u5149\u67aa\u4e0a\u7684\u6fc0\u5149\u53d1\u5c04\u5668\u88ab\u63a7\u5236\u4ee5\u53d1\u5c04\u6fc0\u5149\u8109\u51b2\u4ee5\u4f7f Gun Target \"\u6d3b\u52a8\"\u3002 \u5e76\u4e14 Gun Target \u4e0a\u6709 3 \u4e2a\u5149\u4f20\u611f\u5668\u6765\u68c0\u6d4b\u6fc0\u5149\u8109\u51b2\u3002\u770b\u8d77\u6765\u5f88\u7b80\u5355\u5bf9\u5417? \u5982\u679c\u60a8\u5bf9\u6211\u4eec\u7684\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u4e3a\u81ea\u5df1\u6216\u60a8\u7684\u5b69\u5b50\u505a\u4e00\u4e2a! \u503c\u5f97\u82b1\u4e00\u5929 DIY \u5b83\u4f5c\u4e3a\u5723\u8bde\u793c\u7269\u3002", 
            "title": "\u9879\u76ee\u5c55\u793a"
        }, 
        {
            "location": "/Grove-Button/#_4", 
            "text": "[Eagle\u6587\u4ef6]   Grove-Button Eagle Files .  [\u539f\u7406\u56fe\u7f51\u9875\u7248]   Schematic at Easyeda  [\u5176\u4ed6\u8d44\u6e90]   How to upload code", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Mini_Fan/", 
            "text": "Grove - Mini Fan\n \u6a21\u5757\u662f\u57fa\u4e8e AVR Atmega168 \u5fae\u63a7\u5236\u5668\u7684\u76f4\u6d41\u7535\u673a\u9a71\u52a8\u5668\u3002\u8be5\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u66f4\u6539\u5fae\u63a7\u5236\u5668\u4ee3\u7801\u3002 \u4f8b\u5982\uff0c\u53ef\u4ee5\u66f4\u6539\u4ee3\u7801\uff0c\u4ee5\u4fbf\u8be5\u6a21\u5757\u53ef\u7528\u4e8e\u9a71\u52a8 \n\u4f3a\u670d\u7535\u673a\n\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8be5\u6a21\u5757\u8bbe\u7f6e\u4e3a\u8fd0\u884c\u5305\u88c5\u4e2d\u7684\u76f4\u6d41\u7535\u673a\u3002\u5305\u88c5\u4e2d\u7684\u8f6f\u98ce\u6247\u4e5f\u53ef\u4ee5\u8fde\u63a5\u5230\u7535\u673a\u4e0a\uff0c\u4e3a\u5b69\u5b50\u4eec\u505a\u4e00\u4e2a\u6709\u8da3\u7684\u9879\u76ee\u3002\u67d4\u8f6f\u7684\u98ce\u6247\u662f\u5b8c\u5168\u5b89\u5168\u7684\uff0c\u5373\u4f7f\u9ad8\u901f\u8f6c\u52a8\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u4f24\u5bb3\u3002\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u7528\u6237\u53cb\u597d\u578b\u8f93\u51fa\u6a21\u5757\u6839\u636e\u4ece\u8f93\u5165\u4f20\u611f\u5668\u6216\u5f00\u5173\u6a21\u5757\u63a5\u6536\u5230\u7684\u4fe1\u53f7\u89e6\u53d1\u76f4\u6d41\u7535\u673a\u8fd0\u884c\n\n\n\u4e0e\u5305\u88c5\u4e2d\u9644\u5e26\u7684\u76f4\u6d41\u7535\u673a\u914d\u5408\u4f7f\u7528\n\n\nJST 2.0 \u63a5\u53e3\u7528\u4e8e\u8fde\u63a5\u7535\u673a\n\n\n\u76f4\u6d41\u7535\u673a\u5e26\u6709\u4e30\u5bcc\u591a\u5f69\u7684\u67d4\u8f6f\u98ce\u6247\u9644\u4ef6(\u5982\u56fe\u6240\u793a)\n\n\n\u677f\u8f7d\u5fae\u63a7\u5236\u5668\u53ef\u4ee5\u91cd\u65b0\u7f16\u7a0b\u4ee5\u66f4\u6539\u6a21\u5757\u64cd\u4f5c\n\n\n\u5fae\u63a7\u5236\u5668\u8fd0\u884c \nArduino\n \u517c\u5bb9\u4ee3\u7801\n\n\n\u66f4\u6362\u4ee3\u7801\u4ee5\u9a71\u52a8\u4f3a\u670d\u7535\u673a\uff0c\u800c\u4e0d\u662f\u76f4\u6d41\u7535\u673a\n\n\n\u4f7f\u7528\u6807\u51c6 4 \u9488 Grove \u7ebf\u7f06\u8fde\u63a5\u5230\u5176\u4ed6 Grove \u6a21\u5757\n\n\n\u6ce8\u610f : \n\u5bf9\u4e8e\u6700\u65b0\u7248\u672c\uff08v1.1\uff09\uff0c\u7535\u673a\u7684\u8f93\u51fa\u7535\u538b\u66f4\u65b0\u4e3a 3.3 \u4f0f\u3002\n\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n\n\n\u2460 UartSBee \u63a5\u53e3 : \u4f7f\u7528\u6b64\u754c\u9762\u66f4\u6539\u5fae\u63a7\u5236\u5668\u4ee3\u7801\u3002\u4f7f\u7528 [UartSBee](/UartSBee_V4) \u6a21\u5757\u7684 Uart \u63a5\u53e3\u8fde\u63a5\u5230\u5fae\u63a7\u5236\u5668\u3002\n\n\u2461 JST 2.0 \u63a5\u53e3 : \u7528\u4e8e\u8fde\u63a5 3.3V \u76f4\u6d41\u7535\u673a(\u4ec5 3.3V)\n\n\u2462 Grove \u63a5\u53e3\n\n\u2463 ICSP \u63a5\u53e3\n\n\u2464 Atmega168 \u5fae\u63a7\u5236\u5668\n\n\u2465 Servo \u63a5\u53e3\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4f7f\u7528\u6b64\u6a21\u5757\u6784\u5efa\u793a\u4f8b\u7535\u8def :\n\n\n1.\u9996\u5148\u4f7f\u7528 JST2.0 \u53cc\u7ebf\u63a5\u53e3\u5c06\u76f4\u6d41\u7535\u673a\u8fde\u63a5\u5230 \nGrove - Mini Fan\n \u6a21\u5757\u3002\n\n\n2.\u5c06\u8ff7\u4f60\u98ce\u6247\u6a21\u5757\u8fde\u63a5\u5230\u60a8\u7684\u7535\u8def\u7684\u8f93\u51fa\u4fa7 ( \u7535\u6e90\u6a21\u5757\u53f3\u4fa7 )\u3002\u5728\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u57fa\u4e8e\u4f20\u611f\u5668\u7684\u8f93\u5165\u6a21\u5757 (\nGrove - Light Sensor\n, \nGrove - Sound Sensor\n, \nGrove - Button\n \u6216 \nGrove - Slide Potentiometer\n)\u3002\n\n\n3.\u542f\u52a8\u7535\u8def\n\n\n4.\u5f53\u8f93\u5165\u6a21\u5757\u63d0\u4f9b\u89e6\u53d1\u4fe1\u53f7\u65f6\uff0c\u76f4\u6d41\u7535\u673a\u5f00\u59cb\u65cb\u8f6c:\n\n\n\n\n\n\n\u5982\u679c\u4f7f\u7528\u50cf \nGrove - Button\n \u6a21\u5757\u90a3\u6837\u7684\u77ac\u65f6\u5f00\u5173\uff0c\u53ea\u9700\u6309\u4e0b\u6309\u94ae\u5373\u53ef\u6253\u5f00\u7535\u673a\u3002\n\n\n\n\n\n\n\u5982\u679c\u4f7f\u7528 \nGrove - Slide Potentiometer\n\uff0c\u5c06\u6ed1\u5757\u4ece GND \u4f4d\u7f6e\u79fb\u52a8\u5230 VCC\uff0c\u5e76\u4e14\u968f\u7740\u7535\u6e90\u7535\u538b\u7684\u589e\u52a0\u53ef\u4ee5\u770b\u5230\u7535\u673a\u7684\u901f\u5ea6\u589e\u52a0\u3002 \u9644\u4e0a\u8f6f\u98ce\u6247\uff0c\u60a8\u5c31\u6709\u4e00\u4e2a\u53d8\u901f\u7684\u4e2a\u4eba\u98ce\u6247\uff0c\u8fd9\u4e2a\u98ce\u6247\u4f7f\u5f97\u60a8\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u8981\u7684\u901f\u5ea6\u8fd0\u884c\u98ce\u6247\u5e76\u795b\u9664\u708e\u9b54 !\n\n\n\n\n\n\n\u5982\u679c\u4f7f\u7528\u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8def\u8f93\u5165\u4fa7\u7684 \nGrove - Light Sensor\n\uff0c\u5219\u5e94\u8be5\u770b\u5230\u7535\u673a\u5728\u660e\u4eae\u7684\u5149\u7ebf\u4e0b\u8fd0\u884c\uff0c\u5e76\u5728\u9ed1\u6697\u4e2d\u505c\u6b62 :\n\n\n\n\n\n\n\n\n\n\n\u5982\u679c\u60a8\u5e0c\u671b\u7535\u673a\u4ec5\u5728\u9ed1\u6697\u4e2d\u8fd0\u884c\uff0c\u8bf7\u5728\u5149\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a \nGrove - NOT\n \u6a21\u5757\u3002\n\n\n\u5982\u679c\u4f7f\u7528 \nGrove - Sound Sensor\n\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u7535\u673a\u5728\u68c0\u6d4b\u5230\u58f0\u97f3\u65f6\u8fd0\u884c\u3002\u518d\u6b21\uff0c\u5982\u679c\u8981\u53cd\u8f6c\u529f\u80fd\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u7535\u673a\u59cb\u7ec8\u8fd0\u884c\uff0c\u9664\u975e\u6709\u58f0\u97f3\uff0c\u8bf7\u5728\u58f0\u97f3\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a \nGrove - NOT\n \u6a21\u5757\u3002\n\n\n\n\n\n\n\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528 \nGrove - USB Power\n \u6a21\u5757\u6216 \nGrove - DC Jack Power\n \u6a21\u5757\u7528\u4e8e Grove \u7535\u8def\u3002\n\n\n\u8981\u6784\u5efa\u4f7f\u7528\u7535\u4f4d\u5668\u63a7\u5236\u4f3a\u670d\u7535\u673a\u7684\u7535\u8def\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c :\n\n\n\n\n\n\n\u901a\u8fc7\u8def\u52b2\u6253\u5f00\u4ee3\u7801 : \n\\libraries\\Servo\\examples\\Knob\n\u3002\n\n\n\n\n\n\n\u5c06\u60a8\u7684\u4ee3\u7801\u4e0a\u4f20\u5230\u677f\u8f7d MCU\u3002\u786e\u4fdd\u5728\u4e0a\u4f20\u65f6\u9009\u62e9\u6b63\u786e\u7684\u7535\u8def\u677f\u7c7b\u578b\u548c COM \u7aef\u53e3\u3002\n\n\n\n\n\n\n\u73b0\u5728\u60a8\u5e94\u8be5\u53ef\u4ee5\u4f7f\u7528\u7535\u4f4d\u5668\u6765\u63a7\u5236\u4f3a\u670d\u7535\u673a\u3002\n\n\n\n\n\n\n\u53ef\u7528\u6027\n\n\n\n\n\u8be5 \nGrove\n \u6a21\u5757\u53ef\u4f5c\u4e3a\u4ee5\u4e0b \nGrove Kit Series\n \u7684\u4e00\u90e8\u5206\u4f7f\u7528 :\n\n\n\n\nGrove Mixer Pack V2\n\n\n\n\n\u6216\u8005\uff0c\u53ef\u4ee5\u5728 \nSeeed Studio Bazaar\n \u5355\u72ec\u8d2d\u4e70\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - Mini Fan v1.0 (Eagle Files)\n\n\n\n\n\n\n[\u539f\u7406\u56fe]\n \nGrove - Mini Fan v1.0 (pdf)", 
            "title": "Grove-Mini Fan."
        }, 
        {
            "location": "/Grove-Mini_Fan/#_1", 
            "text": "\u7528\u6237\u53cb\u597d\u578b\u8f93\u51fa\u6a21\u5757\u6839\u636e\u4ece\u8f93\u5165\u4f20\u611f\u5668\u6216\u5f00\u5173\u6a21\u5757\u63a5\u6536\u5230\u7684\u4fe1\u53f7\u89e6\u53d1\u76f4\u6d41\u7535\u673a\u8fd0\u884c  \u4e0e\u5305\u88c5\u4e2d\u9644\u5e26\u7684\u76f4\u6d41\u7535\u673a\u914d\u5408\u4f7f\u7528  JST 2.0 \u63a5\u53e3\u7528\u4e8e\u8fde\u63a5\u7535\u673a  \u76f4\u6d41\u7535\u673a\u5e26\u6709\u4e30\u5bcc\u591a\u5f69\u7684\u67d4\u8f6f\u98ce\u6247\u9644\u4ef6(\u5982\u56fe\u6240\u793a)  \u677f\u8f7d\u5fae\u63a7\u5236\u5668\u53ef\u4ee5\u91cd\u65b0\u7f16\u7a0b\u4ee5\u66f4\u6539\u6a21\u5757\u64cd\u4f5c  \u5fae\u63a7\u5236\u5668\u8fd0\u884c  Arduino  \u517c\u5bb9\u4ee3\u7801  \u66f4\u6362\u4ee3\u7801\u4ee5\u9a71\u52a8\u4f3a\u670d\u7535\u673a\uff0c\u800c\u4e0d\u662f\u76f4\u6d41\u7535\u673a  \u4f7f\u7528\u6807\u51c6 4 \u9488 Grove \u7ebf\u7f06\u8fde\u63a5\u5230\u5176\u4ed6 Grove \u6a21\u5757  \u6ce8\u610f :  \u5bf9\u4e8e\u6700\u65b0\u7248\u672c\uff08v1.1\uff09\uff0c\u7535\u673a\u7684\u8f93\u51fa\u7535\u538b\u66f4\u65b0\u4e3a 3.3 \u4f0f\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Mini_Fan/#_2", 
            "text": "\u2460 UartSBee \u63a5\u53e3 : \u4f7f\u7528\u6b64\u754c\u9762\u66f4\u6539\u5fae\u63a7\u5236\u5668\u4ee3\u7801\u3002\u4f7f\u7528 [UartSBee](/UartSBee_V4) \u6a21\u5757\u7684 Uart \u63a5\u53e3\u8fde\u63a5\u5230\u5fae\u63a7\u5236\u5668\u3002 \u2461 JST 2.0 \u63a5\u53e3 : \u7528\u4e8e\u8fde\u63a5 3.3V \u76f4\u6d41\u7535\u673a(\u4ec5 3.3V) \u2462 Grove \u63a5\u53e3 \u2463 ICSP \u63a5\u53e3 \u2464 Atmega168 \u5fae\u63a7\u5236\u5668 \u2465 Servo \u63a5\u53e3", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Grove-Mini_Fan/#_3", 
            "text": "\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4f7f\u7528\u6b64\u6a21\u5757\u6784\u5efa\u793a\u4f8b\u7535\u8def :  1.\u9996\u5148\u4f7f\u7528 JST2.0 \u53cc\u7ebf\u63a5\u53e3\u5c06\u76f4\u6d41\u7535\u673a\u8fde\u63a5\u5230  Grove - Mini Fan  \u6a21\u5757\u3002  2.\u5c06\u8ff7\u4f60\u98ce\u6247\u6a21\u5757\u8fde\u63a5\u5230\u60a8\u7684\u7535\u8def\u7684\u8f93\u51fa\u4fa7 ( \u7535\u6e90\u6a21\u5757\u53f3\u4fa7 )\u3002\u5728\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u57fa\u4e8e\u4f20\u611f\u5668\u7684\u8f93\u5165\u6a21\u5757 ( Grove - Light Sensor ,  Grove - Sound Sensor ,  Grove - Button  \u6216  Grove - Slide Potentiometer )\u3002  3.\u542f\u52a8\u7535\u8def  4.\u5f53\u8f93\u5165\u6a21\u5757\u63d0\u4f9b\u89e6\u53d1\u4fe1\u53f7\u65f6\uff0c\u76f4\u6d41\u7535\u673a\u5f00\u59cb\u65cb\u8f6c:    \u5982\u679c\u4f7f\u7528\u50cf  Grove - Button  \u6a21\u5757\u90a3\u6837\u7684\u77ac\u65f6\u5f00\u5173\uff0c\u53ea\u9700\u6309\u4e0b\u6309\u94ae\u5373\u53ef\u6253\u5f00\u7535\u673a\u3002    \u5982\u679c\u4f7f\u7528  Grove - Slide Potentiometer \uff0c\u5c06\u6ed1\u5757\u4ece GND \u4f4d\u7f6e\u79fb\u52a8\u5230 VCC\uff0c\u5e76\u4e14\u968f\u7740\u7535\u6e90\u7535\u538b\u7684\u589e\u52a0\u53ef\u4ee5\u770b\u5230\u7535\u673a\u7684\u901f\u5ea6\u589e\u52a0\u3002 \u9644\u4e0a\u8f6f\u98ce\u6247\uff0c\u60a8\u5c31\u6709\u4e00\u4e2a\u53d8\u901f\u7684\u4e2a\u4eba\u98ce\u6247\uff0c\u8fd9\u4e2a\u98ce\u6247\u4f7f\u5f97\u60a8\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u8981\u7684\u901f\u5ea6\u8fd0\u884c\u98ce\u6247\u5e76\u795b\u9664\u708e\u9b54 !    \u5982\u679c\u4f7f\u7528\u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8def\u8f93\u5165\u4fa7\u7684  Grove - Light Sensor \uff0c\u5219\u5e94\u8be5\u770b\u5230\u7535\u673a\u5728\u660e\u4eae\u7684\u5149\u7ebf\u4e0b\u8fd0\u884c\uff0c\u5e76\u5728\u9ed1\u6697\u4e2d\u505c\u6b62 :      \u5982\u679c\u60a8\u5e0c\u671b\u7535\u673a\u4ec5\u5728\u9ed1\u6697\u4e2d\u8fd0\u884c\uff0c\u8bf7\u5728\u5149\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a  Grove - NOT  \u6a21\u5757\u3002  \u5982\u679c\u4f7f\u7528  Grove - Sound Sensor \uff0c\u60a8\u5e94\u8be5\u770b\u5230\u7535\u673a\u5728\u68c0\u6d4b\u5230\u58f0\u97f3\u65f6\u8fd0\u884c\u3002\u518d\u6b21\uff0c\u5982\u679c\u8981\u53cd\u8f6c\u529f\u80fd\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u7535\u673a\u59cb\u7ec8\u8fd0\u884c\uff0c\u9664\u975e\u6709\u58f0\u97f3\uff0c\u8bf7\u5728\u58f0\u97f3\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a  Grove - NOT  \u6a21\u5757\u3002     \u60a8\u53ef\u4ee5\u4f7f\u7528  Grove - USB Power  \u6a21\u5757\u6216  Grove - DC Jack Power  \u6a21\u5757\u7528\u4e8e Grove \u7535\u8def\u3002  \u8981\u6784\u5efa\u4f7f\u7528\u7535\u4f4d\u5668\u63a7\u5236\u4f3a\u670d\u7535\u673a\u7684\u7535\u8def\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c :    \u901a\u8fc7\u8def\u52b2\u6253\u5f00\u4ee3\u7801 :  \\libraries\\Servo\\examples\\Knob \u3002    \u5c06\u60a8\u7684\u4ee3\u7801\u4e0a\u4f20\u5230\u677f\u8f7d MCU\u3002\u786e\u4fdd\u5728\u4e0a\u4f20\u65f6\u9009\u62e9\u6b63\u786e\u7684\u7535\u8def\u677f\u7c7b\u578b\u548c COM \u7aef\u53e3\u3002    \u73b0\u5728\u60a8\u5e94\u8be5\u53ef\u4ee5\u4f7f\u7528\u7535\u4f4d\u5668\u6765\u63a7\u5236\u4f3a\u670d\u7535\u673a\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Mini_Fan/#_4", 
            "text": "\u8be5  Grove  \u6a21\u5757\u53ef\u4f5c\u4e3a\u4ee5\u4e0b  Grove Kit Series  \u7684\u4e00\u90e8\u5206\u4f7f\u7528 :   Grove Mixer Pack V2   \u6216\u8005\uff0c\u53ef\u4ee5\u5728  Seeed Studio Bazaar  \u5355\u72ec\u8d2d\u4e70\u3002", 
            "title": "\u53ef\u7528\u6027"
        }, 
        {
            "location": "/Grove-Mini_Fan/#_5", 
            "text": "[Eagle\u6587\u4ef6]   Grove - Mini Fan v1.0 (Eagle Files)    [\u539f\u7406\u56fe]   Grove - Mini Fan v1.0 (pdf)", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Speaker/", 
            "text": "Grove- Speaker \u662f\u4e00\u4e2a\u7531\u529f\u7387\u653e\u5927\u5668\u548c\u58f0\u97f3\u8f93\u51fa\u90e8\u5206\u7ec4\u6210\u7684\u6a21\u5757\u3002\u54cd\u5ea6\u53ef\u4ee5\u901a\u8fc7\u677f\u8f7d\u7535\u4f4d\u5668\u8fdb\u884c\u8c03\u6574\u3002\u5728\u4e0d\u540c\u7684\u8f93\u5165\u9891\u7387\u4e0b\uff0c\u626c\u58f0\u5668\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u97f3\u8c03\u3002\u5c06\u97f3\u4e50\u7f16\u7801\u8fdb Arduino\uff0cDIY \u81ea\u5df1\u7684\u97f3\u4e50\u76d2\u5427 !\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u97f3\u91cf\u53ef\u8c03\n\n\nGrove \u63a5\u53e3\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n4.0\n\n\n5.0\n\n\n5.5\n\n\nVDC\n\n\n\n\n\n\n\u7535\u538b\u589e\u76ca\n\n\n-\n\n\n-\n\n\n46\n\n\ndb\n\n\n\n\n\n\n\u5e26\u5bbd\n\n\n-\n\n\n-\n\n\n20\n\n\nKHz\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u626c\u58f0\u5668\u53ef\u4ee5\u53d1\u51fa\u5404\u79cd\u58f0\u97f3\uff0c\u5982\u6c7d\u8f66\u5587\u53ed\uff0c\u95e8\u94c3\u548c\u70b9\u706b\u5668\u3002\u4e0d\u540c\u7684\u58f0\u97f3\u662f\u57fa\u4e8e\u8f93\u5165\u4fe1\u53f7\u7684\u9891\u7387\u3002\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528 Arduino \u4e3a\u8be5\u6a21\u5757\u63d0\u4f9b\u4e0d\u540c\u7684\u9891\u7387\u4fe1\u53f7\u3002Arduino \u901a\u8fc7 PWM \u4ea7\u751f\u8fd9\u4e9b\u4fe1\u53f7\uff0c\u6216\u8005\u901a\u8fc7\u6570\u5b57\u5199\u5165\u548c\u5ef6\u8fdf\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528 \ndelay()\n\uff0c\u4ea7\u751f\u4fe1\u53f7\u4f7f\u626c\u58f0\u5668\u53d1\u4f4e\u97f3 1~7\u3002\n\n\n\n\n/*macro definition of Speaker pin*/\n#define SPEAKER 3\n\nint BassTab[]={1911,1702,1516,1431,1275,1136,1012};//bass 1~7\n\nvoid setup()\n{\n    pinInit();\n}\nvoid loop()\n{\n        /*sound bass 1~7*/\n    for(int note_index=0;note_index\n7;note_index++)\n    {\n        sound(note_index);\n        delay(500);\n    }\n}\nvoid pinInit()\n{\n    pinMode(SPEAKER,OUTPUT);\n    digitalWrite(SPEAKER,LOW);\n}\nvoid sound(uint8_t note_index)\n{\n    for(int i=0;i\n100;i++)\n    {\n        digitalWrite(SPEAKER,HIGH);\n        delayMicroseconds(BassTab[note_index]);\n        digitalWrite(SPEAKER,LOW);\n        delayMicroseconds(BassTab[note_index]);\n    }\n}\n\n\n\n\n\nNote\n\n\u7531\u4e8e\u7535\u5bb9\u7684\u5f71\u54cd\uff0c\u6a21\u5757\u53ea\u80fd\u8f93\u51fa\u4f4e\u97f3\u4fe1\u53f7\uff0c\u4e0d\u80fd\u53d1\u51fa\u9ad8\u97f3\u3002\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - Speaker Eagle File\n\n\n[PCB\u56fePDF]\n \nGrove_-_Speaker_v1.0_brd.pdf\n\n\n[\u539f\u7406\u56fePDF]\n \nGrove_-_Speaker_v1.0_sch.pdf\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nLM386 Low Voltage Audio Power Amplifier Datasheet\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nHow to generate different tone with MCU", 
            "title": "Grove-Speaker"
        }, 
        {
            "location": "/Grove-Speaker/#_1", 
            "text": "\u97f3\u91cf\u53ef\u8c03  Grove \u63a5\u53e3    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Speaker/#_2", 
            "text": "\u9879\u76ee  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u5de5\u4f5c\u7535\u538b  4.0  5.0  5.5  VDC    \u7535\u538b\u589e\u76ca  -  -  46  db    \u5e26\u5bbd  -  -  20  KHz", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Speaker/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Speaker/#_3", 
            "text": "\u626c\u58f0\u5668\u53ef\u4ee5\u53d1\u51fa\u5404\u79cd\u58f0\u97f3\uff0c\u5982\u6c7d\u8f66\u5587\u53ed\uff0c\u95e8\u94c3\u548c\u70b9\u706b\u5668\u3002\u4e0d\u540c\u7684\u58f0\u97f3\u662f\u57fa\u4e8e\u8f93\u5165\u4fe1\u53f7\u7684\u9891\u7387\u3002  \u60a8\u53ef\u4ee5\u4f7f\u7528 Arduino \u4e3a\u8be5\u6a21\u5757\u63d0\u4f9b\u4e0d\u540c\u7684\u9891\u7387\u4fe1\u53f7\u3002Arduino \u901a\u8fc7 PWM \u4ea7\u751f\u8fd9\u4e9b\u4fe1\u53f7\uff0c\u6216\u8005\u901a\u8fc7\u6570\u5b57\u5199\u5165\u548c\u5ef6\u8fdf\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528  delay() \uff0c\u4ea7\u751f\u4fe1\u53f7\u4f7f\u626c\u58f0\u5668\u53d1\u4f4e\u97f3 1~7\u3002   /*macro definition of Speaker pin*/\n#define SPEAKER 3\n\nint BassTab[]={1911,1702,1516,1431,1275,1136,1012};//bass 1~7\n\nvoid setup()\n{\n    pinInit();\n}\nvoid loop()\n{\n        /*sound bass 1~7*/\n    for(int note_index=0;note_index 7;note_index++)\n    {\n        sound(note_index);\n        delay(500);\n    }\n}\nvoid pinInit()\n{\n    pinMode(SPEAKER,OUTPUT);\n    digitalWrite(SPEAKER,LOW);\n}\nvoid sound(uint8_t note_index)\n{\n    for(int i=0;i 100;i++)\n    {\n        digitalWrite(SPEAKER,HIGH);\n        delayMicroseconds(BassTab[note_index]);\n        digitalWrite(SPEAKER,LOW);\n        delayMicroseconds(BassTab[note_index]);\n    }\n}   Note \n\u7531\u4e8e\u7535\u5bb9\u7684\u5f71\u54cd\uff0c\u6a21\u5757\u53ea\u80fd\u8f93\u51fa\u4f4e\u97f3\u4fe1\u53f7\uff0c\u4e0d\u80fd\u53d1\u51fa\u9ad8\u97f3\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Speaker/#_4", 
            "text": "[Eagle\u6587\u4ef6]   Grove - Speaker Eagle File  [PCB\u56fePDF]   Grove_-_Speaker_v1.0_brd.pdf  [\u539f\u7406\u56fePDF]   Grove_-_Speaker_v1.0_sch.pdf  [\u82af\u7247\u6570\u636e\u624b\u518c]   LM386 Low Voltage Audio Power Amplifier Datasheet  [\u5176\u4ed6\u8d44\u6e90]   How to generate different tone with MCU", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Water_Atomization/", 
            "text": "Grove - Water Atomization \u662f\u4e00\u4e2a\u4f18\u79c0\u7684 Grove \u6a21\u5757\uff0c\u901a\u8fc7\u5b83\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u60a8\u7684\u5e94\u7528\u4e2d\u5f00\u53d1\u96fe\u5316\u5668\u6216\u96fe\u5316\u5668\u6a21\u5757\u3002\u901a\u8fc7\u51e0\u4e2a\u7b80\u5355\u7684\u6b65\u9aa4\u5c31\u53ef\u4ee5\u5bf9\u96fe\u5316\u5668\u8fdb\u884c\u539f\u578b\u5316\u3002\u5b83\u5177\u6709 Grove \u63a5\u53e3\uff0c\u4f7f\u5176\u65b9\u4fbf\u5927\u89c4\u6a21\u5e94\u7528\u3002\u52a0\u6e7f\u5668\u662f\u53ef\u4ee5\u6784\u5efa\u7684\u57fa\u672c\u5e94\u7528\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u6570\u5b57\u6c14\u5473\u6280\u672f\u548c\u5176\u4ed6\u57fa\u4e8e\u96fe\u5316\u7684\u6280\u672f\u5f00\u53d1\u66f4\u5148\u8fdb\u548c\u6709\u8da3\u7684\u9879\u76ee\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u8d85\u58f0\u6ce2\u52a0\u70ed\u3002\n\n\n\u6613\u4e8e\u4e3a\u65b0\u5e94\u7528\u539f\u578b\u5316\u3002\n\n\n\u9002\u7528\u4e8e\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\n\n\n\u9002\u7528\u4e8e\u5404\u79cd\u6709\u8da3\uff0c\u667a\u80fd\u548c\u65f6\u5c1a\u7684\u5e94\u7528\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u52a0\u6e7f\u5668\u3002\n\n\n\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u6563\u53d1\u6c14\u4f53\u3002\n\n\n\u667a\u80fd\u5bb6\u5c45\u3002\n\n\n\u7528\u4e8e\u6d88\u8d39\u7535\u5b50\u4ea7\u54c1\u7684\u667a\u80fd\u5bf9\u8c61\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n5.0V(DC)\n\n\n\n\n\n\n\u6d9f\u6ce2(\u6700\u5927\u529f\u7387\u4e0b)\n\n\n\u2264100 mV\n\n\n\n\n\n\n\u6700\u5927\u529f\u7387\n\n\n2W\n\n\n\n\n\n\n\u5cf0\u503c\u8f93\u51fa\u7535\u538b\n\n\n65\u00b15V\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u7387\n\n\n105\u00b15kHz\n\n\n\n\n\n\n\u82af\u7247\n\n\nETA1617, NE555\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\nGrove \u63a5\u53e3\n \n\n\u8fde\u63a5\u4e3b\u63a7\u677f\u5982 Seeeduino \u677f\u4e0e\u9a71\u52a8\u677f\u3002\n\n\n\u8f6c\u63a5\u5668\u63a5\u53e3\n \n\n\u5c06\u8d85\u58f0\u6ce2\u8f6c\u63a5\u5668\u8fde\u63a5\u5230\u9a71\u52a8\u677f\u3002\n\n\nGrove \u7ebf\u7f06\n \n\n\u5c06\u4e3b\u63a7\u677f\u4e0e\u9a71\u52a8\u677f\u8fde\u63a5\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\n\u96f6\u4ef6\u540d\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\n\u9a71\u52a8\u677f\n\n\n1PC\n\n\n\n\n\n\nGrove \u7ebf\u7f06\n\n\n1PC\n\n\n\n\n\n\n\u8d85\u58f0\u6ce2\u8f6c\u63a5\u5668\u677f\n\n\n1PC\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u9700\u8981\u7684\u7d20\u6750\n\n\nSeeeduino v4.2 x 1\n\n\nGrove - Base shield v2 x 1\n\n\nGrove - \u7ebf\u7f06 x 1\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6307\u5357\u6765\u6784\u5efa\u9002\u5f53\u7684 IDE :\n\n\n\n\nNote\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9009\u62e9\u4e86 Seeeduino\u3002\n\n\n\n\nWindows \u7cfb\u7edf\u5165\u95e8\u6307\u5bfc\n\n\nMac OS X \u7cfb\u7edf\u5165\u95e8\u6307\u5bfc\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u4e00\u4e2a\u6f14\u793a\n\n\n\n\nNote\n\n\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a Grove - Touch \u4f20\u611f\u5668\uff0c\u5e76\u5c06\u5176\u8fde\u63a5\u5230 **A5** (\u7528\u4f5c\u6570\u5b57\u5f15\u811a)\u3002\n\n\n\n\n1.\u5c06\u4ee3\u7801\u590d\u5236\u5230 Arduino IDE \u7f16\u8f91\u5668\u3002\n\n\n/*\n  Demo code for grove  atomization.\n  Touch to start atomizing.\n  Last modified by he\n  by xiaohe\n*/\n\n// the setup function runs once when you press reset or power the board\nvoid setup() {\n    // initialize digital pin 13 as an output.\n    pinMode(A5, OUTPUT);// Set A5 as OUTPUT\n    pinMode(5, INPUT); // Use digital pin 5 as output port\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n    int D2Sig = digitalRead(5);// read pin 5 signal\n    if (D2Sig == 1)\n    {\n        /* code */\n        digitalWrite(A5, HIGH);   // atomize\n        delay(10000);              // wait for 10 seconds\n        digitalWrite(A5, LOW);    // atomization stopped\n\n    }\n}\n\n\n\n\n2.\u5c06\u4e00\u4e9b\u68c9\u7eb1\u653e\u5165\u88c5\u6ee1\u6c34\u7684\u4fee\u526a\u7eb8\u676f\u4e2d\uff0c\u5c06\u8d85\u58f0\u8f6c\u63a5\u5668\u653e\u5728\u68c9\u7eb1\u4e0a\u3002\n\n\n\n\nNote\n\n\u5e95\u4fa7\u662f\u7a7a\u5fc3\u7684\uff0c\u5e94\u8be5\u9762\u5411\u4e0b\u9762\u3002\u5c06\u8f6c\u63a5\u5668\u5e95\u90e8\u7684\u653e\u5165\u6c34\u4e2d\uff0c\u5e76\u5c06\u9876\u90e8\u4fdd\u6301\u5728\u6c34\u9762\u4ee5\u4e0a\u3002\u68c9\u7eb1\u7684\u529f\u80fd\u662f\u5411\u8f6c\u63a5\u5668\u4f9b\u6c34\uff0c\u5e76\u5c06\u6362\u80fd\u5668\u7684\u4e0a\u4fa7\u4fdd\u6301\u5728\u6c34\u9762\u4ee5\u4e0a\u3002\n\n\n\n\n3.\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u63a7\u677f\u3002\n\n\n4.\u73b0\u5728\uff0c\u5982\u679c\u60a8\u89e6\u6478 Grove touch sensor\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u6709\u84b8\u6c14\u4ea7\u751f\u3002\n\n\n\n\n\n\nCaution\n\n\u4e0d\u8981\u76f4\u63a5\u89e6\u6478\u4f20\u611f\u5668\u63a5\u53e3\u5f15\u811a\uff0c\u56e0\u4e3a Drier board \u7684\u5cf0\u503c\u8f93\u51fa\u7535\u538b\u53ef\u4ee5\u4e3a 65V\u3002\n\n\n\n\n\n\n\n\nCaution\n\n\u7535\u611f **L2** (\u4ee5\u7ea2\u8272\u77e9\u5f62\u6807\u8bb0) \u5c06\u88ab\u52a0\u70ed\u3002 \u6240\u4ee5\u4e0d\u8981\u76f4\u63a5\u78b0\u5b83\u3002\n\n\n\n\nResources\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nSchematic files in Eagle\n\n\n[\u539f\u7406\u56fePDF]\n \nSchematic files in PDF", 
            "title": "Grove-Water Atomization"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_1", 
            "text": "\u8d85\u58f0\u6ce2\u52a0\u70ed\u3002  \u6613\u4e8e\u4e3a\u65b0\u5e94\u7528\u539f\u578b\u5316\u3002  \u9002\u7528\u4e8e\u5e7f\u6cdb\u7684\u5e94\u7528\u3002  \u9002\u7528\u4e8e\u5404\u79cd\u6709\u8da3\uff0c\u667a\u80fd\u548c\u65f6\u5c1a\u7684\u5e94\u7528\u3002    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_2", 
            "text": "\u52a0\u6e7f\u5668\u3002  \u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u6563\u53d1\u6c14\u4f53\u3002  \u667a\u80fd\u5bb6\u5c45\u3002  \u7528\u4e8e\u6d88\u8d39\u7535\u5b50\u4ea7\u54c1\u7684\u667a\u80fd\u5bf9\u8c61\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_3", 
            "text": "\u53c2\u6570  \u503c      \u5de5\u4f5c\u7535\u538b  5.0V(DC)    \u6d9f\u6ce2(\u6700\u5927\u529f\u7387\u4e0b)  \u2264100 mV    \u6700\u5927\u529f\u7387  2W    \u5cf0\u503c\u8f93\u51fa\u7535\u538b  65\u00b15V    \u5de5\u4f5c\u9891\u7387  105\u00b15kHz    \u82af\u7247  ETA1617, NE555", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Water_Atomization/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_4", 
            "text": "Grove \u63a5\u53e3   \n\u8fde\u63a5\u4e3b\u63a7\u677f\u5982 Seeeduino \u677f\u4e0e\u9a71\u52a8\u677f\u3002  \u8f6c\u63a5\u5668\u63a5\u53e3   \n\u5c06\u8d85\u58f0\u6ce2\u8f6c\u63a5\u5668\u8fde\u63a5\u5230\u9a71\u52a8\u677f\u3002  Grove \u7ebf\u7f06   \n\u5c06\u4e3b\u63a7\u677f\u4e0e\u9a71\u52a8\u677f\u8fde\u63a5\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_5", 
            "text": "\u96f6\u4ef6\u540d  \u6570\u91cf      \u9a71\u52a8\u677f  1PC    Grove \u7ebf\u7f06  1PC    \u8d85\u58f0\u6ce2\u8f6c\u63a5\u5668\u677f  1PC", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_6", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_7", 
            "text": "Seeeduino v4.2 x 1  Grove - Base shield v2 x 1  Grove - \u7ebf\u7f06 x 1", 
            "title": "\u9700\u8981\u7684\u7d20\u6750"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_8", 
            "text": "\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6307\u5357\u6765\u6784\u5efa\u9002\u5f53\u7684 IDE :   Note \n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9009\u62e9\u4e86 Seeeduino\u3002  Windows \u7cfb\u7edf\u5165\u95e8\u6307\u5bfc  Mac OS X \u7cfb\u7edf\u5165\u95e8\u6307\u5bfc", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_9", 
            "text": "", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Water_Atomization/#_10", 
            "text": "Note \n\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a Grove - Touch \u4f20\u611f\u5668\uff0c\u5e76\u5c06\u5176\u8fde\u63a5\u5230 **A5** (\u7528\u4f5c\u6570\u5b57\u5f15\u811a)\u3002  1.\u5c06\u4ee3\u7801\u590d\u5236\u5230 Arduino IDE \u7f16\u8f91\u5668\u3002  /*\n  Demo code for grove  atomization.\n  Touch to start atomizing.\n  Last modified by he\n  by xiaohe\n*/\n\n// the setup function runs once when you press reset or power the board\nvoid setup() {\n    // initialize digital pin 13 as an output.\n    pinMode(A5, OUTPUT);// Set A5 as OUTPUT\n    pinMode(5, INPUT); // Use digital pin 5 as output port\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n    int D2Sig = digitalRead(5);// read pin 5 signal\n    if (D2Sig == 1)\n    {\n        /* code */\n        digitalWrite(A5, HIGH);   // atomize\n        delay(10000);              // wait for 10 seconds\n        digitalWrite(A5, LOW);    // atomization stopped\n\n    }\n}  2.\u5c06\u4e00\u4e9b\u68c9\u7eb1\u653e\u5165\u88c5\u6ee1\u6c34\u7684\u4fee\u526a\u7eb8\u676f\u4e2d\uff0c\u5c06\u8d85\u58f0\u8f6c\u63a5\u5668\u653e\u5728\u68c9\u7eb1\u4e0a\u3002   Note \n\u5e95\u4fa7\u662f\u7a7a\u5fc3\u7684\uff0c\u5e94\u8be5\u9762\u5411\u4e0b\u9762\u3002\u5c06\u8f6c\u63a5\u5668\u5e95\u90e8\u7684\u653e\u5165\u6c34\u4e2d\uff0c\u5e76\u5c06\u9876\u90e8\u4fdd\u6301\u5728\u6c34\u9762\u4ee5\u4e0a\u3002\u68c9\u7eb1\u7684\u529f\u80fd\u662f\u5411\u8f6c\u63a5\u5668\u4f9b\u6c34\uff0c\u5e76\u5c06\u6362\u80fd\u5668\u7684\u4e0a\u4fa7\u4fdd\u6301\u5728\u6c34\u9762\u4ee5\u4e0a\u3002  3.\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u4e3b\u63a7\u677f\u3002  4.\u73b0\u5728\uff0c\u5982\u679c\u60a8\u89e6\u6478 Grove touch sensor\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u6709\u84b8\u6c14\u4ea7\u751f\u3002    Caution \n\u4e0d\u8981\u76f4\u63a5\u89e6\u6478\u4f20\u611f\u5668\u63a5\u53e3\u5f15\u811a\uff0c\u56e0\u4e3a Drier board \u7684\u5cf0\u503c\u8f93\u51fa\u7535\u538b\u53ef\u4ee5\u4e3a 65V\u3002    Caution \n\u7535\u611f **L2** (\u4ee5\u7ea2\u8272\u77e9\u5f62\u6807\u8bb0) \u5c06\u88ab\u52a0\u70ed\u3002 \u6240\u4ee5\u4e0d\u8981\u76f4\u63a5\u78b0\u5b83\u3002", 
            "title": "\u4e00\u4e2a\u6f14\u793a"
        }, 
        {
            "location": "/Grove-Water_Atomization/#resources", 
            "text": "[Eagle\u6587\u4ef6]   Schematic files in Eagle  [\u539f\u7406\u56fePDF]   Schematic files in PDF", 
            "title": "Resources"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/", 
            "text": "\u8fd9\u662f Grove-recorder \u7684\u6700\u65b0\u7248\u672c\uff0c\u4e5f\u662f\u6700\u597d\u7684\u7248\u672c\uff0c\u76f8\u5bf9\u4e0a\u4e2a\u7248\u672c\u8fdb\u884c\u4e86\u4e00\u4e9b\u66f4\u65b0\u3002\n\n\n\u7b2c\u4e00\u4e2a\u53d8\u5316\u662f MCU\u3002 \u5728 V3.0 \u4e2d\uff0cMCU \u5347\u7ea7\u4e3a ISD9160FI\uff0c\u6bd4\u65e7\u7248 ISD1820PY \u66f4\u5f3a\u5927\u3002\u5b83\u4e0e\u65b0\u589e\u7684 2Mbytes \u95ea\u5b58\u4e00\u8d77\uff0c\u5141\u8bb8\u60a8\u5f55\u97f3\u957f\u8fbe 83 \u79d2\uff0c\u6bd4\u4e4b\u524d\u7684 12 \u79d2\u5f55\u97f3\u957f\u5f97\u591a\u3002\n\n\n\u5176\u6b21\uff0c\u5982\u679c\u60a8\u66fe\u7ecf\u4f7f\u7528\u8fc7\u4ee5\u524d\u7684\u7248\u672c\uff0c\u60a8\u4f1a\u77e5\u9053\u5982\u679c\u8981\u64ad\u653e\u5df2\u5f55\u5236\u7684\u5185\u5bb9\uff0c\u9700\u8981\u6309 Groov \u6309\u94ae\u4e0a\u53e6\u4e00\u4e2a\u6309\u94ae\u3002 \u5728 V3.0\u4e2d\uff0c\u6211\u4eec\u5c06\u8bb0\u5f55\u6309\u94ae\u548c\u64ad\u653e\u6309\u94ae\u96c6\u6210\u5230\u4e00\u4e2a\u6309\u94ae\u3002\u6309\u4f4f\u6309\u94ae 2 \u79d2\uff0c\u5b83\u5f00\u59cb\u5f55\u5236\uff0c\u5feb\u901f\u6309\u4e0b\u6309\u94ae\uff0c\u5b83\u64ad\u653e\u5df2\u5f55\u97f3\u7684\u5185\u5bb9\u3002\n\n\n\n\nV3 \u7248\u672c\u66f4\u65b0\u5185\u5bb9\n\n\n\n\nMCU \u4ece ISD1820PY \u5347\u7ea7\u5230 ISD 9160FI\n\n\n\u5f55\u97f3\u548c\u64ad\u653e\u6309\u94ae\u96c6\u6210\n\n\n\u5f55\u97f3\u5f00\u5173\n\n\n2Mbytes flash\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5f55\u97f3\u65f6\u95f4\u957f\u8fbe 83 \u79d2\n\n\n\u5185\u7f6e\u6309\u94ae\u64cd\u4f5c\n\n\n\u5185\u7f6e LED \u6307\u793a\u706f\n\n\n\u72ec\u7acb\u6216\u7531 MCU \u63a7\u5236\n\n\n\u5185\u7f6e\u9ea6\u514b\u98ce\n\n\n\n\n\n\nTip\n\n\n\u66f4\u591a Grove \u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove \u7cfb\u7edf\n\n\n\n\nPlatform Support\n\n\n\n\n\n\n\n\nArduino\n\n\nWio\n\n\nBeagleBone\n\n\nRaspberry Pi\n\n\nLinkIt\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u5de5\u4f5c\u7535\u538b: 3.\nV\n\n\n\u5de5\u4f5c\u7535\u6d41 (@5V, 25\u2103)\n\n\n\u5f85\u673a: 25-30mA\n\n\n\u5f55\u97f3: 29-35mA\n\n\n\u64ad\u653e: 110-150mA\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41 (@3.3V, 25\u2103)\n\n\n\u5f85\u673a: 23-25mA\n\n\n\u5f55\u97f3: 25-30mA\n\n\n\u64ad\u653e: 70-150mA\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6: 0~85\u2103\n\n\n\u5c3a\u5bf8: 40x20mm\n\n\n\u91cd\u91cf: 31.5g\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n1.\u626c\u58f0\u5668\u63a5\u53e3 - JST2.0\n\n\n2.\u9ea6\u514b\u98ce\n\n\n3.\u97f3\u91cf\u65cb\u94ae\n\n\n4.\u6309\u94ae\n\n\n\n\n\u77ed\u6309\u6309\u94ae\uff1a\u64ad\u653e\n\n\n\u957f\u6309: \u4e00\u76f4\u64ad\u653e\u5f55\u97f3\uff0c\u76f4\u5230\u677e\u5f00\u6309\u94ae\n\n\n\n\n5.Led \u6307\u793a\u706f\n\n\n\n\n\u7ea2\u8272 led, \u5f53\u6309\u94ae\u88ab\u6309\u4e0b\u65f6\u4eae\u8d77\n\n\n\n\n6.Grove \u63a5\u53e3\n\n\n7.REC \u5f00\u5173\n\n\n\n\n\u628a\u5f00\u5173\u62e8\u5230 ON \u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4f7f\u7528\u8f6f\u4ef6\u63a7\u5236\u6a21\u5757\n\n\n\n\n8.MCU\n\n\n\u5f00\u59cb\u4f7f\u7528\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a Grove - Recorder V3.0 \u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002\u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Recorder\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\u7531\u4e8e Grove \u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u710a\u63a5\u6216\u4f7f\u7528\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684\u6b63\u786e\u7aef\u53e3\u3002\u5bf9\u4e8e\u6b64\u6f14\u793a\uff0c\u6211\u4eec\u5c06 Grove - Recorder \u8fde\u63a5\u5230 \nD2\n\u3002\n\n\n\n\n\u72ec\u7acb\u4f7f\u7528\n\n\n\u8fd9\u4e2a\u6a21\u5757\u4e0d\u7528\u7f16\u7801\u5c31\u53ef\u4ee5\u72ec\u7acb\u4f7f\u7528\u3002\n\n\n\n\nRecord\n - \u6309\u4e0b\u6309\u94ae\u76f4\u5230 LED \u4eae\u8d77\uff0c\u6b64\u65f6\u5f00\u59cb\u5f55\u97f3\u3002\u677e\u5f00\u6309\u94ae\u505c\u6b62\u5f55\u97f3\u3002\n\n\nPlay\n - \u5feb\u901f\u6309\u4e0b\u5e76\u677e\u5f00\u6309\u94ae\uff0c\u64ad\u653e\u5f55\u97f3\u3002\n\n\n\n\n\u5982\u679c\u60a8\u60f3\u901a\u8fc7\u4ee3\u7801\u6765\u63a7\u5236\u6a21\u5757\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\u3002\n\n\n\u8f6f\u4ef6\n\n\n\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230 Arduino IDE\uff0c\u7136\u540e\u4e0a\u4f20\u5230 Seeeduino V4\u3002\u4e0a\u4f20\u5230 Arduino \u540e\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u8bbe\u7f6e\u6ce2\u7279\u7387\u4e3a 115200\u3002\n\n\n/* Grove - Recorder Test Code\n+--------------------------------------------------------------------+\n|   \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u8f93\u5165\u547d\u4ee4\u63a7\u5236\u6a21\u5757\uff1a\n|   r - \u5f00\u59cb\u5f55\u97f3\n|   s - \u505c\u6b62\u5f55\u97f3\n|   p - \u64ad\u653e\n+-------------------------------------------------------------------*/\n\nconst int pinRec  = 3;\nconst int pinPlay = 2;\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println(\nGrove - Recorder V3.0 Test Code\n);\n    Serial.println(\ncmd: \\r\\nr: record\\r\\ns: stop recording\\r\\np: play\n);\n\n    pinMode(pinRec, OUTPUT);\n    pinMode(pinPlay, OUTPUT);\n    digitalWrite(pinRec, HIGH);\n    digitalWrite(pinPlay, HIGH);\n}\n\nvoid loop()\n{\n    if(Serial.available())\n    {\n        char c = Serial.read();\n        if(c == \nr\n)            // \u5f00\u59cb\u5f55\u97f3\n        {\n            digitalWrite(pinRec, LOW);\n            Serial.println(\nstart recording...\n);\n        }\n        else if(c == \ns\n)       // \u505c\u6b62\u5f55\u97f3\n        {\n            digitalWrite(pinRec, HIGH);\n            Serial.println(\nstop recording...\n);\n        }\n        else if(c == \np\n)       // \u64ad\u653e\n        {\n            digitalWrite(pinPlay, LOW);\n            delay(100);\n            digitalWrite(pinPlay, HIGH);\n            Serial.println(\nplay...\n);\n        }\n    }\n}\n\n\n\n\n\u8f93\u5165\u547d\u4ee4\n\n\n\u4f60\u53ef\u4ee5\u5f80\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a\n\n\n\n\n\u5f00\u59cb\u5f55\u97f3\n - \u8f93\u5165 'r'\n\n\n\u505c\u6b62\u5f55\u97f3\n - \u8f93\u5165 's'\n\n\n\u64ad\u653e\n - \u8f93\u5165 'p'\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u539f\u7406\u56fe]\nSchematics in PDF\n\n\n[Eagle \u6587\u4ef6]\nSchematics in Eagle", 
            "title": "Grove-Recorder v3.0"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#v3", 
            "text": "MCU \u4ece ISD1820PY \u5347\u7ea7\u5230 ISD 9160FI  \u5f55\u97f3\u548c\u64ad\u653e\u6309\u94ae\u96c6\u6210  \u5f55\u97f3\u5f00\u5173  2Mbytes flash", 
            "title": "V3 \u7248\u672c\u66f4\u65b0\u5185\u5bb9"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#_1", 
            "text": "\u5f55\u97f3\u65f6\u95f4\u957f\u8fbe 83 \u79d2  \u5185\u7f6e\u6309\u94ae\u64cd\u4f5c  \u5185\u7f6e LED \u6307\u793a\u706f  \u72ec\u7acb\u6216\u7531 MCU \u63a7\u5236  \u5185\u7f6e\u9ea6\u514b\u98ce    Tip  \u66f4\u591a Grove \u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove \u7cfb\u7edf", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#platform-support", 
            "text": "Arduino  Wio  BeagleBone  Raspberry Pi  LinkIt", 
            "title": "Platform Support"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#_2", 
            "text": "\u5de5\u4f5c\u7535\u538b: 3. V  \u5de5\u4f5c\u7535\u6d41 (@5V, 25\u2103)  \u5f85\u673a: 25-30mA  \u5f55\u97f3: 29-35mA  \u64ad\u653e: 110-150mA    \u5de5\u4f5c\u7535\u6d41 (@3.3V, 25\u2103)  \u5f85\u673a: 23-25mA  \u5f55\u97f3: 25-30mA  \u64ad\u653e: 70-150mA    \u5de5\u4f5c\u6e29\u5ea6: 0~85\u2103  \u5c3a\u5bf8: 40x20mm  \u91cd\u91cf: 31.5g", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#_3", 
            "text": "1.\u626c\u58f0\u5668\u63a5\u53e3 - JST2.0  2.\u9ea6\u514b\u98ce  3.\u97f3\u91cf\u65cb\u94ae  4.\u6309\u94ae   \u77ed\u6309\u6309\u94ae\uff1a\u64ad\u653e  \u957f\u6309: \u4e00\u76f4\u64ad\u653e\u5f55\u97f3\uff0c\u76f4\u5230\u677e\u5f00\u6309\u94ae   5.Led \u6307\u793a\u706f   \u7ea2\u8272 led, \u5f53\u6309\u94ae\u88ab\u6309\u4e0b\u65f6\u4eae\u8d77   6.Grove \u63a5\u53e3  7.REC \u5f00\u5173   \u628a\u5f00\u5173\u62e8\u5230 ON \u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4f7f\u7528\u8f6f\u4ef6\u63a7\u5236\u6a21\u5757   8.MCU", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#_4", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u5411\u60a8\u5c55\u793a Grove - Recorder V3.0 \u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002\u9996\u5148\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5185\u5bb9\uff1a     Seeeduino V4  Grove - Recorder  Base Shield           \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70", 
            "title": "\u5f00\u59cb\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#_5", 
            "text": "\u7531\u4e8e Grove \u7cfb\u5217\u6a21\u5757\u7684\u4f18\u70b9\uff0c\u60a8\u4e0d\u9700\u8981\u710a\u63a5\u6216\u4f7f\u7528\u9762\u5305\u677f\uff0c\u60a8\u9700\u8981\u505a\u7684\u662f\u5c06\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684\u6b63\u786e\u7aef\u53e3\u3002\u5bf9\u4e8e\u6b64\u6f14\u793a\uff0c\u6211\u4eec\u5c06 Grove - Recorder \u8fde\u63a5\u5230  D2 \u3002", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#_6", 
            "text": "\u8fd9\u4e2a\u6a21\u5757\u4e0d\u7528\u7f16\u7801\u5c31\u53ef\u4ee5\u72ec\u7acb\u4f7f\u7528\u3002   Record  - \u6309\u4e0b\u6309\u94ae\u76f4\u5230 LED \u4eae\u8d77\uff0c\u6b64\u65f6\u5f00\u59cb\u5f55\u97f3\u3002\u677e\u5f00\u6309\u94ae\u505c\u6b62\u5f55\u97f3\u3002  Play  - \u5feb\u901f\u6309\u4e0b\u5e76\u677e\u5f00\u6309\u94ae\uff0c\u64ad\u653e\u5f55\u97f3\u3002   \u5982\u679c\u60a8\u60f3\u901a\u8fc7\u4ee3\u7801\u6765\u63a7\u5236\u6a21\u5757\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\u3002", 
            "title": "\u72ec\u7acb\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#_7", 
            "text": "\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230 Arduino IDE\uff0c\u7136\u540e\u4e0a\u4f20\u5230 Seeeduino V4\u3002\u4e0a\u4f20\u5230 Arduino \u540e\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u8bbe\u7f6e\u6ce2\u7279\u7387\u4e3a 115200\u3002  /* Grove - Recorder Test Code\n+--------------------------------------------------------------------+\n|   \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u8f93\u5165\u547d\u4ee4\u63a7\u5236\u6a21\u5757\uff1a\n|   r - \u5f00\u59cb\u5f55\u97f3\n|   s - \u505c\u6b62\u5f55\u97f3\n|   p - \u64ad\u653e\n+-------------------------------------------------------------------*/\n\nconst int pinRec  = 3;\nconst int pinPlay = 2;\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println( Grove - Recorder V3.0 Test Code );\n    Serial.println( cmd: \\r\\nr: record\\r\\ns: stop recording\\r\\np: play );\n\n    pinMode(pinRec, OUTPUT);\n    pinMode(pinPlay, OUTPUT);\n    digitalWrite(pinRec, HIGH);\n    digitalWrite(pinPlay, HIGH);\n}\n\nvoid loop()\n{\n    if(Serial.available())\n    {\n        char c = Serial.read();\n        if(c ==  r )            // \u5f00\u59cb\u5f55\u97f3\n        {\n            digitalWrite(pinRec, LOW);\n            Serial.println( start recording... );\n        }\n        else if(c ==  s )       // \u505c\u6b62\u5f55\u97f3\n        {\n            digitalWrite(pinRec, HIGH);\n            Serial.println( stop recording... );\n        }\n        else if(c ==  p )       // \u64ad\u653e\n        {\n            digitalWrite(pinPlay, LOW);\n            delay(100);\n            digitalWrite(pinPlay, HIGH);\n            Serial.println( play... );\n        }\n    }\n}", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#_8", 
            "text": "\u4f60\u53ef\u4ee5\u5f80\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a   \u5f00\u59cb\u5f55\u97f3  - \u8f93\u5165 'r'  \u505c\u6b62\u5f55\u97f3  - \u8f93\u5165 's'  \u64ad\u653e  - \u8f93\u5165 'p'", 
            "title": "\u8f93\u5165\u547d\u4ee4"
        }, 
        {
            "location": "/Grove-Recorder_v3.0/#_9", 
            "text": "[\u539f\u7406\u56fe] Schematics in PDF  [Eagle \u6587\u4ef6] Schematics in Eagle", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Servo/", 
            "text": "Grove - Servo \u662f\u5e26\u9f7f\u8f6e\u548c\u53cd\u9988\u7cfb\u7edf\u7684\u76f4\u6d41\u7535\u673a\u3002\u5b83\u7528\u4e8e\u673a\u5668\u4eba\u7684\u9a71\u52a8\u52a8\u529b\u3002\u5bf9\u8be5 Grove \u7231\u597d\u8005\u800c\u8a00\uff0c\u8be5\u4ea7\u54c1\u662f\u610f\u5916\u7684\u60ca\u559c\u3002\u6211\u4eec\u5c06\u4e09\u7ebf\u8235\u673a\u6539\u9020\u4e3a\u6807\u51c6 Grove \u63a5\u53e3\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u5178\u578b\u7684 Grove \u6a21\u5757\u8fdb\u884c\u5373\u63d2\u5373\u7528\uff0c\u65e0\u9700\u4f7f\u7528\u6df7\u4e71\u7684\u8df3\u7ebf\u3002\n\n\n\u4f46\u5982\u679c\u60a8\u611f\u89c9\u66f4\u559c\u6b22\u539f\u6765\u7684\u8235\u673a\uff0c\u8bf7\u67e5\u770b EMAX 9g ES08A \u9ad8\u7075\u654f\u5ea6\u5c0f\u578b\u8235\u673a\u3002\u4ed6\u4eec\u7684\u578b\u53f7\u4e0e\u6211\u4eec\u7684\u76f8\u540c\uff0c\u8d28\u91cf\u597d\uff0c\u4ef7\u683c\u53c8\u9002\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u9009\u62e9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u6a21\u5757\u5c0f\u5de7\n\n\n\u517c\u5bb9 Grove \u63a5\u53e3\n\n\n\u6613\u4e8e\u4f7f\u7528\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n \u9879\u76ee\n\n\n\n \u6700\u5c0f\u503c\n\n\n\n \u5178\u578b\u503c\n\n\n\n \u6700\u5927\u503c\n\n\n\n \u5355\u4f4d\n\n\n\n\n\n \u5de5\u4f5c\u7535\u538b\n\n\n\n 4.8\n\n\n\n 5.0\n\n\n\n 6.0\n\n\n\n V\n\n\n\n\n\n \u626d\u77e9\n\n\n\n 1.5/1.8\n\n\n\n Kg.cm\n\n\n\n\n\n \u901f\u5ea6\n\n\n\n 0.12/0.16\n\n\n\n s/60\u00b0\n\n\n\n\n\n \u5c3a\u5bf8\n\n\n\n 32X11.5X24\n\n\n\n mm\n\n\n\n\n\n \u91cd\u91cf\n\n\n\n 8.5\n\n\n\n g\n\n\n\nPlatforms Supported\n\n\n\u5f00\u59cb\u4f7f\u7528\n\n\n\u8fde\u63a5\n\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u5411\u60a8\u5c55\u793a Grove - Servo \u5de5\u4f5c\u7684\u7b80\u5355\u5b9e\u4f8b\u3002\u9996\u5148\uff0c\u8981\u51c6\u5907\u4ee5\u4e0b\u6750\u6599\uff1a\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - Servo\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u8235\u673a\u6709\u4e09\u6839\u7ebf\uff1a\u7535\u6e90\uff0c\u5730\u548c\u4fe1\u53f7\u3002\u7535\u6e90\u7ebf\u901a\u5e38\u4e3a\u7ea2\u8272\uff0c\u5e94\u8fde\u63a5\u5230 Arduino / Seeeduino \u677f\u4e0a\u7684 \n5V\n \u5f15\u811a\u3002\u63a5\u5730\u7ebf\u901a\u5e38\u4e3a\u9ed1\u8272\u6216\u68d5\u8272\uff0c\u5e94\u8fde\u63a5\u5230 Arduino \u677f\u4e0a\u7684 \nGND\n \u5f15\u811a\u3002\u4fe1\u53f7\u7ebf\u901a\u5e38\u4e3a\u9ec4\u8272\uff0c\u6a59\u8272\u6216\u767d\u8272\uff0c\u5e94\u8fde\u63a5\u5230 Arduino \u677f\u4e0a\u7684\u6570\u5b57 \n9\n\u3002 \u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6539\u53d8\u6570\u5b57\u7aef\u53e3\uff0c\u540c\u65f6\u4e0d\u8981\u5fd8\u4e86\u5728\u6f14\u793a\u4ee3\u7801\u7684\u5b9a\u4e49\u4e2d\u66f4\u6539\u7aef\u53e3\u53f7\u3002\n\n\n\n\n\u5c06\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684 \nD9\n \u7aef\u53e3\u3002\n\n\n\u628a Grove- Base Shield \u63d2\u5728 Arduino \u4e0a\u3002\n\n\n\u628a Arduino \u7528 USB \u6570\u636e\u7ebf\u8fde\u63a5\u5230\u7535\u8111\u3002\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u901a\u8fc7\u4f7f\u7528 \nAdruino Servo \u5e93\n \u6765\u4f7f\u8235\u673a\u6447\u81c2\u5411\u524d\u548c\u5411\u540e\u65cb\u8f6c 180\u00b0\u3002\n\n\n\u6309\u7167\u4e00\u4e0b\u8def\u5f84\u6253\u5f00\u4ee3\u7801\uff1a \nFile\uff08\u6587\u4ef6\uff09 -\n Examples\uff08\u793a\u4f8b\uff09 -\nServo-\nSweep\n.\n\n\n\n\n\n\n/* Sweep\n by BARRAGAN \nhttp://barraganstudio.com\n\n This example code is in the public domain.\n\n modified 8 Nov 2013\n by Scott Fitzgerald\n http://www.arduino.cc/en/Tutorial/Sweep\n*/\n\n#include \nServo.h\n\n\nServo myservo;  // \u521b\u5efa\u8235\u673a\u63a7\u5236\u5bf9\u8c61\u6765\u63a7\u5236\u8235\u673a\n// \u5927\u591a\u6570\u677f\u5b50\u90fd\u53ef\u4ee5\u63a7\u5236 12 \u4e2a\u8235\u673a\n\nint pos = 0;    // \u8235\u673a\u4f4d\u7f6e\n\nvoid setup() {\n  myservo.attach(9);  // \u628a\u8235\u673a\u8fde\u63a5\u5230\u5f15\u811a 9 \u4e0a\n}\n\nvoid loop() {\n  for (pos = 0; pos \n= 180; pos += 1) { // \u4ece 0\u00b0 \u52a8\u4f5c\u5230 180\u00b0\n    // in steps of 1 degree\n    myservo.write(pos);              // \u544a\u8bc9\u8235\u673a\u65cb\u8f6c\u5230\u89d2\u5ea6\u201cpos\u201d\n    delay(15);                       // \u7b49\u5f85 15ms \u8ba9\u8235\u673a\u65cb\u8f6c\u5230\u4f4d\n  }\n  for (pos = 180; pos \n= 0; pos -= 1) { // \u4ece 0\u00b0 \u52a8\u4f5c\u5230 180\u00b0\n    myservo.write(pos);              // \u544a\u8bc9\u8235\u673a\u65cb\u8f6c\u5230\u89d2\u5ea6\u201cpos\u201d\n    delay(15);                       // \u7b49\u5f85 15ms \u8ba9\u8235\u673a\u65cb\u8f6c\u5230\u4f4d\n  }\n}\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u8235\u673a\u5de6\u53f3\u65cb\u8f6c\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u6587\u6863]\n \nUnderstanding RC Servos\n\n\n[\u5e93\u51fd\u6570]\nArduino Tutorial - Servo Library\n\n\n[\u4f8b\u7a0b]\n \nDigital/Analog Clock - Arduino + PaperCraft\n\n\n[\u4f8b\u7a0b]\n \nLow Cost Hobby Servo XY Table", 
            "title": "Grove-Servo"
        }, 
        {
            "location": "/Grove-Servo/#_1", 
            "text": "\u6a21\u5757\u5c0f\u5de7  \u517c\u5bb9 Grove \u63a5\u53e3  \u6613\u4e8e\u4f7f\u7528", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Servo/#_2", 
            "text": "\u9879\u76ee   \u6700\u5c0f\u503c   \u5178\u578b\u503c   \u6700\u5927\u503c   \u5355\u4f4d    \u5de5\u4f5c\u7535\u538b   4.8   5.0   6.0   V    \u626d\u77e9   1.5/1.8   Kg.cm    \u901f\u5ea6   0.12/0.16   s/60\u00b0    \u5c3a\u5bf8   32X11.5X24   mm    \u91cd\u91cf   8.5   g", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Servo/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Servo/#_3", 
            "text": "", 
            "title": "\u5f00\u59cb\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Servo/#_4", 
            "text": "\u5728\u8fd9\u91cc\u6211\u4eec\u5411\u60a8\u5c55\u793a Grove - Servo \u5de5\u4f5c\u7684\u7b80\u5355\u5b9e\u4f8b\u3002\u9996\u5148\uff0c\u8981\u51c6\u5907\u4ee5\u4e0b\u6750\u6599\uff1a     Seeeduino V4  Grove - Servo  Base Shield           \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70     \u8235\u673a\u6709\u4e09\u6839\u7ebf\uff1a\u7535\u6e90\uff0c\u5730\u548c\u4fe1\u53f7\u3002\u7535\u6e90\u7ebf\u901a\u5e38\u4e3a\u7ea2\u8272\uff0c\u5e94\u8fde\u63a5\u5230 Arduino / Seeeduino \u677f\u4e0a\u7684  5V  \u5f15\u811a\u3002\u63a5\u5730\u7ebf\u901a\u5e38\u4e3a\u9ed1\u8272\u6216\u68d5\u8272\uff0c\u5e94\u8fde\u63a5\u5230 Arduino \u677f\u4e0a\u7684  GND  \u5f15\u811a\u3002\u4fe1\u53f7\u7ebf\u901a\u5e38\u4e3a\u9ec4\u8272\uff0c\u6a59\u8272\u6216\u767d\u8272\uff0c\u5e94\u8fde\u63a5\u5230 Arduino \u677f\u4e0a\u7684\u6570\u5b57  9 \u3002 \u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6539\u53d8\u6570\u5b57\u7aef\u53e3\uff0c\u540c\u65f6\u4e0d\u8981\u5fd8\u4e86\u5728\u6f14\u793a\u4ee3\u7801\u7684\u5b9a\u4e49\u4e2d\u66f4\u6539\u7aef\u53e3\u53f7\u3002   \u5c06\u6a21\u5757\u8fde\u63a5\u5230 Base Shield \u7684  D9  \u7aef\u53e3\u3002  \u628a Grove- Base Shield \u63d2\u5728 Arduino \u4e0a\u3002  \u628a Arduino \u7528 USB \u6570\u636e\u7ebf\u8fde\u63a5\u5230\u7535\u8111\u3002", 
            "title": "\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-Servo/#_5", 
            "text": "\u901a\u8fc7\u4f7f\u7528  Adruino Servo \u5e93  \u6765\u4f7f\u8235\u673a\u6447\u81c2\u5411\u524d\u548c\u5411\u540e\u65cb\u8f6c 180\u00b0\u3002  \u6309\u7167\u4e00\u4e0b\u8def\u5f84\u6253\u5f00\u4ee3\u7801\uff1a  File\uff08\u6587\u4ef6\uff09 -  Examples\uff08\u793a\u4f8b\uff09 - Servo- Sweep .    /* Sweep\n by BARRAGAN  http://barraganstudio.com \n This example code is in the public domain.\n\n modified 8 Nov 2013\n by Scott Fitzgerald\n http://www.arduino.cc/en/Tutorial/Sweep\n*/\n\n#include  Servo.h \n\nServo myservo;  // \u521b\u5efa\u8235\u673a\u63a7\u5236\u5bf9\u8c61\u6765\u63a7\u5236\u8235\u673a\n// \u5927\u591a\u6570\u677f\u5b50\u90fd\u53ef\u4ee5\u63a7\u5236 12 \u4e2a\u8235\u673a\n\nint pos = 0;    // \u8235\u673a\u4f4d\u7f6e\n\nvoid setup() {\n  myservo.attach(9);  // \u628a\u8235\u673a\u8fde\u63a5\u5230\u5f15\u811a 9 \u4e0a\n}\n\nvoid loop() {\n  for (pos = 0; pos  = 180; pos += 1) { // \u4ece 0\u00b0 \u52a8\u4f5c\u5230 180\u00b0\n    // in steps of 1 degree\n    myservo.write(pos);              // \u544a\u8bc9\u8235\u673a\u65cb\u8f6c\u5230\u89d2\u5ea6\u201cpos\u201d\n    delay(15);                       // \u7b49\u5f85 15ms \u8ba9\u8235\u673a\u65cb\u8f6c\u5230\u4f4d\n  }\n  for (pos = 180; pos  = 0; pos -= 1) { // \u4ece 0\u00b0 \u52a8\u4f5c\u5230 180\u00b0\n    myservo.write(pos);              // \u544a\u8bc9\u8235\u673a\u65cb\u8f6c\u5230\u89d2\u5ea6\u201cpos\u201d\n    delay(15);                       // \u7b49\u5f85 15ms \u8ba9\u8235\u673a\u65cb\u8f6c\u5230\u4f4d\n  }\n}   \u4e0a\u4f20\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u8235\u673a\u5de6\u53f3\u65cb\u8f6c\u3002", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-Servo/#_6", 
            "text": "[\u6587\u6863]   Understanding RC Servos  [\u5e93\u51fd\u6570] Arduino Tutorial - Servo Library  [\u4f8b\u7a0b]   Digital/Analog Clock - Arduino + PaperCraft  [\u4f8b\u7a0b]   Low Cost Hobby Servo XY Table", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-LED_String_Light/", 
            "text": "Grove - LED String Light \u6a21\u5757\u672c\u8d28\u4e0a\u662f\u5305\u88c5\u4e2d\u5305\u542b LED \u706f\u4e32\u7684 LED \u9a71\u52a8\u5668\u3002\u6a21\u5757\u5de5\u4f5c\u7535\u538b\u4e3a 3.3V/5V\u3002\u7136\u800c\uff0cLED \u706f\u4e32\u8981\u6c42\u7684\u5de5\u4f5c\u7535\u538b\u4e3a 12V\u3002 \u56e0\u6b64\uff0c\u8be5\u6a21\u5757\u4f7f\u7528\u57fa\u4e8eAIC1896\u7684 DC-DC \u5347\u538b\u8f6c\u6362\u5668\u4e3a LED \u706f\u6761\u63d0\u4f9b\u6b63\u5e38\u5de5\u4f5c\u7684\u7535\u538b\u3002 LED \u706f\u6761\u7684\u957f\u5ea6\u4e3a 5 \u7c73\uff0c\u5e76\u5177\u6709\u76f8\u4e92\u7b49\u8ddd\u8fde\u63a5\u7684 50 \u4e2a RGB LED\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6765\u6253\u626e\u5723\u8bde\u6811\uff0c\u70b9\u4eae\u4f60\u7684\u6d3e\u5bf9\u6216\u88c5\u9970\u4f60\u7684\u623f\u95f4\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u4e0e LED \u706f\u6761\u7ed3\u5408\u4f7f\u7528\n\n\n\n\n\n\n\u5305\u62ec 5 \u7c73\u957f\u7684 LED \u706f\u6761\n\n\n\n\n\n\n\u6574\u4e2a 5 \u7c73\u957f\u5ea6\u5185\u542b\u6709\u76f8\u7b49\u95f4\u8ddd\u7684 50 \u4e2a RGB LED \u53ef\u4ee5\u5448\u73b0\u591a\u5f69\u7684\u5916\u89c2\n\n\n\n\n\n\nJST 2.0 \u63a5\u53e3\uff0c\u7528\u4e8e\u5c06 LED \u706f\u6761\u4e0e\u9a71\u52a8\u6a21\u5757\u8fde\u63a5\u8d77\u6765\n\n\n\n\n\n\n\u4f7f\u7528\u6807\u51c6\u7684 4-pin \nGrove \u8fde\u63a5\u7ebf\n \u8fde\u63a5\u5230\u5176\u4ed6\u7684 \nGrove\n \u6a21\u5757\n\n\n\n\n\n\n\u63a5\u53e3\u529f\u80fd\n\n\n\n\n\n\n\u2460 JST 2.0\u63a5\u53e3\uff1a\u7528\u4e8e\u8fde\u63a5 LED \u706f\u4e32\n\n\n\u2461 Grove \u63a5\u53e3\uff1aSIG\uff08\u5f15\u811a1\uff09\u9ad8\u7535\u5e73\u65f6\u4f7f LED \u4e32\u706f\u4eae\uff0c\u4f4e\u7535\u5e73\u5173\u95ed\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4f7f\u7528\u6b64\u6a21\u5757\u6784\u5efa\u793a\u4f8b\u7535\u8def\uff1a\n\n\n\n\n\n\n\u9996\u5148\u628a LED \u706f\u4e32\u8fde\u63a5\u5230 \nGrove - LED String Light\n \u6a21\u5757\u7684 \nJST\n 2.0 \u53cc\u7ebf\u63a5\u53e3\u3002\n\n\n\n\n\n\n\u628a  LED \u706f\u4e32\u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u51fa\u4fa7\uff08\u7535\u6e90\u6a21\u5757\u53f3\u4fa7\uff09\u3002\u5728\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u4f20\u611f\u5668\u4f5c\u4e3a\u8f93\u5165\u6a21\u5757\uff0c\u4f8b\u5982 \nGrove - Light Sensor\n\uff0c\nGrove - Sound Sensor\n\uff0c\nGrove - Button\n \u6216 \nGrove - Slide Potentiometer\n\u3002\n\n\n\n\n\n\n\u542f\u52a8\u7535\u8def\u3002\n\n\n\n\n\n\n\u5f53\u8f93\u5165\u6a21\u5757\u63d0\u4f9b\u89e6\u53d1\u4fe1\u53f7\u540e\uff0cLED \u706f\u4e32\u4f1a\u4eae\u8d77\u3002\n\n\n\n\n\n\n\u5982\u679c\u4f7f\u7528\u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8def\u8f93\u5165\u7aef\u7684\u5149\u4f20\u611f\u5668\uff0c\u5219\u5e94\u8be5\u770b\u5230 LED \u5728\u660e\u4eae\u7684\u5149\u7ebf\u4e0b\u4eae\u8d77\u3002\u5982\u679c\u60a8\u5e0c\u671b\u706f\u5149\u5728\u9ed1\u6697\u4e2d\u4eae\u8d77\uff0c\u8bf7\u5728\u5149\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0 \nGrove - NOT\n \u6a21\u5757\n\n\n\n\n\n\n\u5982\u679c\u4f7f\u7528\u58f0\u97f3\u4f20\u611f\u5668\uff0c\u5219\u5728\u68c0\u6d4b\u5230\u58f0\u97f3\u65f6\u5e94\u770b\u5230LED\u4eae\u8d77\u3002\u540c\u6837\uff0c\u5982\u679c\u8981\u53cd\u8f6c\u529f\u80fd\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u59cb\u7ec8\u6253\u5f00\u706f\uff0c\u9664\u975e\u6709\u58f0\u97f3\uff0c\u8bf7\u6dfb\u52a0 \nGrove - NOT\n \u6a21\u5757\u3002\n\n\n\n\n\n\n\u5982\u679c\u4f7f\u7528\u50cf \nGrove - Button\n \u6a21\u5757\u90a3\u6837\u7684\u77ac\u95f4\u5f00\u5173\uff0c\u53ea\u6709\u6309\u4e0b\u6309\u94ae\u624d\u80fd\u70b9\u4eae\u706f\u4e32\u3002\n\n\n\n\n\n\n\u5982\u679c\u4f7f\u7528\u6ed1\u52a8\u7535\u4f4d\u5668\uff0c\u5c06\u6ed1\u5757\u4ece GND \u4f4d\u7f6e\u79fb\u52a8\u5230 VCC\uff0c\u968f\u7740\u7535\u6e90\u7535\u538b\u7684\u589e\u52a0\uff0c\u706f\u7684\u4eae\u5ea6\u4f1a\u589e\u52a0\u3002\n\n\n\n\n\n\n\n\n\n\n\n\u4ee5\u4e0b\u662f\u4f7f\u7528 \nGrove - USB Power\n \u7535\u6e90\u6a21\u5757\u6784\u5efa\u7684 Grove \u7535\u8def\u7684\u56fe\u793a\uff1a\n\n\n\n\n\u5982\u679c\u6ca1\u6709 Grove-USB Power \u6a21\u5757\uff0c\u8bf7\u6539\u7528 \nGrove - DC Jack Power\n \u6a21\u5757\u6765\u6253\u5f00 LED \u706f\u4e32\u3002\n\n\n\u5176\u4ed6\u7528\u9014\n\n\n\n\n\u8fd9\u4e2a \nGrove\n \u4e5f\u53ef\u4ee5\u4f5c\u4e3a \nGrove Kit Series\n \u4e2d\u7684\u4e00\u4e2a\u90e8\u4ef6\u6765\u4f7f\u7528\uff1a\n\n\n\n\nGrove Mixer Pack V2\n\n\n\n\n\u6216\u8005\uff0c\u53ef\u4ee5\u5728 \nSeeed Studio Bazaar\n \u4e0a\u5355\u72ec\u8d2d\u4e70\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[\u539f\u7406\u56fe]\n[\nSchematic PDF\n]\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\n[\nEagle File\n]", 
            "title": "Grove-LED String Light"
        }, 
        {
            "location": "/Grove-LED_String_Light/#_1", 
            "text": "\u4e0e LED \u706f\u6761\u7ed3\u5408\u4f7f\u7528    \u5305\u62ec 5 \u7c73\u957f\u7684 LED \u706f\u6761    \u6574\u4e2a 5 \u7c73\u957f\u5ea6\u5185\u542b\u6709\u76f8\u7b49\u95f4\u8ddd\u7684 50 \u4e2a RGB LED \u53ef\u4ee5\u5448\u73b0\u591a\u5f69\u7684\u5916\u89c2    JST 2.0 \u63a5\u53e3\uff0c\u7528\u4e8e\u5c06 LED \u706f\u6761\u4e0e\u9a71\u52a8\u6a21\u5757\u8fde\u63a5\u8d77\u6765    \u4f7f\u7528\u6807\u51c6\u7684 4-pin  Grove \u8fde\u63a5\u7ebf  \u8fde\u63a5\u5230\u5176\u4ed6\u7684  Grove  \u6a21\u5757", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-LED_String_Light/#_2", 
            "text": "\u2460 JST 2.0\u63a5\u53e3\uff1a\u7528\u4e8e\u8fde\u63a5 LED \u706f\u4e32 \u2461 Grove \u63a5\u53e3\uff1aSIG\uff08\u5f15\u811a1\uff09\u9ad8\u7535\u5e73\u65f6\u4f7f LED \u4e32\u706f\u4eae\uff0c\u4f4e\u7535\u5e73\u5173\u95ed", 
            "title": "\u63a5\u53e3\u529f\u80fd"
        }, 
        {
            "location": "/Grove-LED_String_Light/#_3", 
            "text": "\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4f7f\u7528\u6b64\u6a21\u5757\u6784\u5efa\u793a\u4f8b\u7535\u8def\uff1a    \u9996\u5148\u628a LED \u706f\u4e32\u8fde\u63a5\u5230  Grove - LED String Light  \u6a21\u5757\u7684  JST  2.0 \u53cc\u7ebf\u63a5\u53e3\u3002    \u628a  LED \u706f\u4e32\u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u51fa\u4fa7\uff08\u7535\u6e90\u6a21\u5757\u53f3\u4fa7\uff09\u3002\u5728\u7535\u8def\u7684\u8f93\u5165\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u4f20\u611f\u5668\u4f5c\u4e3a\u8f93\u5165\u6a21\u5757\uff0c\u4f8b\u5982  Grove - Light Sensor \uff0c Grove - Sound Sensor \uff0c Grove - Button  \u6216  Grove - Slide Potentiometer \u3002    \u542f\u52a8\u7535\u8def\u3002    \u5f53\u8f93\u5165\u6a21\u5757\u63d0\u4f9b\u89e6\u53d1\u4fe1\u53f7\u540e\uff0cLED \u706f\u4e32\u4f1a\u4eae\u8d77\u3002    \u5982\u679c\u4f7f\u7528\u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8def\u8f93\u5165\u7aef\u7684\u5149\u4f20\u611f\u5668\uff0c\u5219\u5e94\u8be5\u770b\u5230 LED \u5728\u660e\u4eae\u7684\u5149\u7ebf\u4e0b\u4eae\u8d77\u3002\u5982\u679c\u60a8\u5e0c\u671b\u706f\u5149\u5728\u9ed1\u6697\u4e2d\u4eae\u8d77\uff0c\u8bf7\u5728\u5149\u4f20\u611f\u5668\u548c\u7535\u6e90\u6a21\u5757\u4e4b\u95f4\u6dfb\u52a0  Grove - NOT  \u6a21\u5757    \u5982\u679c\u4f7f\u7528\u58f0\u97f3\u4f20\u611f\u5668\uff0c\u5219\u5728\u68c0\u6d4b\u5230\u58f0\u97f3\u65f6\u5e94\u770b\u5230LED\u4eae\u8d77\u3002\u540c\u6837\uff0c\u5982\u679c\u8981\u53cd\u8f6c\u529f\u80fd\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u59cb\u7ec8\u6253\u5f00\u706f\uff0c\u9664\u975e\u6709\u58f0\u97f3\uff0c\u8bf7\u6dfb\u52a0  Grove - NOT  \u6a21\u5757\u3002    \u5982\u679c\u4f7f\u7528\u50cf  Grove - Button  \u6a21\u5757\u90a3\u6837\u7684\u77ac\u95f4\u5f00\u5173\uff0c\u53ea\u6709\u6309\u4e0b\u6309\u94ae\u624d\u80fd\u70b9\u4eae\u706f\u4e32\u3002    \u5982\u679c\u4f7f\u7528\u6ed1\u52a8\u7535\u4f4d\u5668\uff0c\u5c06\u6ed1\u5757\u4ece GND \u4f4d\u7f6e\u79fb\u52a8\u5230 VCC\uff0c\u968f\u7740\u7535\u6e90\u7535\u538b\u7684\u589e\u52a0\uff0c\u706f\u7684\u4eae\u5ea6\u4f1a\u589e\u52a0\u3002      \u4ee5\u4e0b\u662f\u4f7f\u7528  Grove - USB Power  \u7535\u6e90\u6a21\u5757\u6784\u5efa\u7684 Grove \u7535\u8def\u7684\u56fe\u793a\uff1a   \u5982\u679c\u6ca1\u6709 Grove-USB Power \u6a21\u5757\uff0c\u8bf7\u6539\u7528  Grove - DC Jack Power  \u6a21\u5757\u6765\u6253\u5f00 LED \u706f\u4e32\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-LED_String_Light/#_4", 
            "text": "\u8fd9\u4e2a  Grove  \u4e5f\u53ef\u4ee5\u4f5c\u4e3a  Grove Kit Series  \u4e2d\u7684\u4e00\u4e2a\u90e8\u4ef6\u6765\u4f7f\u7528\uff1a   Grove Mixer Pack V2   \u6216\u8005\uff0c\u53ef\u4ee5\u5728  Seeed Studio Bazaar  \u4e0a\u5355\u72ec\u8d2d\u4e70\u3002", 
            "title": "\u5176\u4ed6\u7528\u9014"
        }, 
        {
            "location": "/Grove-LED_String_Light/#_5", 
            "text": "[\u539f\u7406\u56fe] [ Schematic PDF ]    [Eagle \u6587\u4ef6] [ Eagle File ]", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-LED_Bar/", 
            "text": "Grove \u2013 LED Bar \u5305\u62ec\u4e00\u4e2a 10 \u6bb5 LED \u706f\u548c\u4e00\u4e2a MY9221 LED \u63a7\u5236\u82af\u7247\u3002\u5b83\u53ef\u4ee5\u7528\u4f5c\u7535\u6c60\u5bff\u547d\uff0c\u7535\u538b\uff0c\u6c34\u4f4d\uff0c\u97f3\u4e50\u97f3\u91cf\u6216\u5176\u4ed6\u9700\u8981\u68af\u5ea6\u663e\u793a\u7684\u5176\u4ed6\u503c\u3002LED Bar \u4e2d\u6709 10 \u4e2a LED \u6761\uff1a\u4e00\u4e2a\u7ea2\u8272\uff0c\u4e00\u4e2a\u9ec4\u8272\uff0c\u4e00\u4e2a\u6d45\u7eff\u8272\u548c\u4e03\u4e2a\u7eff\u8272\u6761\u3002\u6f14\u793a\u4ee3\u7801\u53ef\u7528\u4e8e\u521d\u6b21\u4e0a\u624b\u548c\u5feb\u901f\u8fd0\u884c\u3002 \u5b83\u5c06 LED \u987a\u5e8f\u5730\u4ece\u7ea2\u8272\u70b9\u4eae\u5230\u7eff\u8272\uff0c\u6700\u7ec8\u6574\u4e2a LED Bar \u4eae\u8d77\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u8f93\u5165\u7535\u538b: 3.3V/5V\n\n\n\u6bcf\u4e2a LED \u6bb5\u90fd\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u5355\u72ec\u63a7\u5236\n\n\n\u663e\u793a\u76f4\u89c2\n\n\n\u5bbd\u7535\u538b\u8f93\u5165\u8303\u56f4\uff1a3V-5.5V DC\n\n\n\u53ef\u7528\u6f14\u793a\u4ee3\u7801\n\n\nSuli \u517c\u5bb9\u5e93\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove \u7cfb\u7edf\n\n\n\n\nPlatforms Supported\n\n\n\n\nNote\n\n\u60f3\u4e86\u89e3 Suli-compatible \u7684\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u8003 \nSuli\n\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\u4f7f\u7528 \nArduino\n\n\n\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Grove - LED Bar\u3002\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a \nSeeeduino V3.0\n \u548c\u4e00\u4e2a \nGrove - Base Shield\n \u4e4b\u7c7b\u7684\u6269\u5c55\u677f.\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\u628a Grove - LED Bar \u63a5\u5728 Grove - Base Shield \u7684 \nD8\n \u63a5\u53e3\u4e0a\uff0c\u7136\u540e\u628a\u6269\u5c55\u677f\u63d2\u5728 Arduino \u4e0a\u3002\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20\n\n\n\u4f60\u53ef\u4ee5\u5728 github \u4e0a\u4e0b\u8f7d \u51fd\u6570\u5e93\uff0c\u70b9\u51fb \n\u8fd9\u91cc\n \u4e0b\u8f7d\uff0c\u7136\u540e\u89e3\u538b\u7f29\u5230 Arduino \u7684\u51fd\u6570\u5e93\u6587\u4ef6\u5939\u4e0b\u3002\n\n\n\u7136\u540e\u6253\u5f00 Arduino IDE, \nFile\uff08\u6587\u4ef6\uff09 -\n examples\uff08\u793a\u4f8b\uff09 -\n LED_Bar -\n Level\n\uff0c\u6253\u5f00\u793a\u4f8b\u4ee3\u7801\u3002\n\n\n\n\n\u70b9\u51fb \nUpload\uff08\u4e0a\u4f20\uff09\n \u4e0a\u4f20\u4ee3\u7801\uff0c\u5982\u679c\u60a8\u5728\u5f00\u59cb\u4f7f\u7528 Arduino \u65f6\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u83b7\u53d6\u5e2e\u52a9\u3002\n\n\n\u5de5\u4f5c\u6f14\u793a\n\n\n\u4f60\u7684 Grove - LED Bar\u73b0\u5728\u5f00\u59cb\u5de5\u4f5c\u4e86\uff0c\u5e94\u8be5\u662f\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n1.\u4f60\u5e94\u8be5\u5df2\u7ecf\u6709\u4e86 Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.\n\n\n2.\u4f60\u5e94\u8be5\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u5f00\u53d1\u73af\u5883\uff0c\u5982\u679c\u6ca1\u6709\u8bf7\u8bbf\u95ee \n\u8fd9\u91cc\n\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u628a LED Bar \u7528 Grove \u7ebf\u8fde\u63a5\u5230 Grovepi \u7684 \nD3\n \u63a5\u53e3\u4e0a\u3002\n\n\n\n\n4.\u6d4f\u89c8\u5230\u6f14\u793a\u76ee\u5f55\uff1a\n\ncd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\u67e5\u770b\u4ee3\u7801\uff1a\n\nnano grove_ledbar.py   # \nCtrl+x\n to exit #\n\n\n\n\n\nimport time\nimport grovepi\nimport random\n\n# Connect the Grove LED Bar to digital port D5\n# DI,DCKI,VCC,GND\nledbar = 5\n\ngrovepi.pinMode(ledbar,\nOUTPUT\n)\ntime.sleep(1)\ni = 0\n\n# LED Bar methods\n# grovepi.ledBar_init(pin,orientation)\n# grovepi.ledBar_orientation(pin,orientation)\n# grovepi.ledBar_setLevel(pin,level)\n# grovepi.ledBar_setLed(pin,led,state)\n# grovepi.ledBar_toggleLed(pin,led)\n# grovepi.ledBar_setBits(pin,state)\n# grovepi.ledBar_getBits(pin)\n\n    while True:\n        try:\n        print \nTest 1) Initialise - red to green\n\n        # ledbar_init(pin,orientation)\n        # orientation: (0 = red to green, 1 = green to red)\n        grovepi.ledBar_init(ledbar, 0)\n        time.sleep(.5)\n\n\n        print \nTest 2) Set level\n\n        # ledbar_setLevel(pin,level)\n        # level: (0-10)\n        for i in range(0,11):\n            grovepi.ledBar_setLevel(ledbar, i)\n            time.sleep(.2)\n        time.sleep(.3)\n\n        grovepi.ledBar_setLevel(ledbar, 8)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLevel(ledbar, 2)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLevel(ledbar, 5)\n        time.sleep(.5)\n\n\n        print \nTest 3) Switch on/off a single LED\n\n        # ledbar_setLed(pin,led,state)\n        # led: which led (1-10)\n        # state: off or on (0,1)\n        grovepi.ledBar_setLed(ledbar, 10, 1)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 9, 1)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 8, 1)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 1, 0)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 2, 0)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 3, 0)\n        time.sleep(.5)\n\n\n        print \nTest 4) Toggle a single LED\n\n        # flip a single led - if it is currently on, it will become off and vice versa\n        # ledbar_toggleLed(ledbar, led)\n        grovepi.ledBar_toggleLed(ledbar, 1)\n        time.sleep(.5)\n\n        grovepi.ledBar_toggleLed(ledbar, 2)\n        time.sleep(.5)\n\n        grovepi.ledBar_toggleLed(ledbar, 9)\n        time.sleep(.5)\n\n        grovepi.ledBar_toggleLed(ledbar, 10)\n        time.sleep(.5)\n\n\n        print \nTest 5) Set state - control all leds with 10 bits\n\n        # ledbar_setBits(ledbar, state)\n        # state: (0-1023) or (0x00-0x3FF) or (0b0000000000-0b1111111111) or (int(\n0000000000\n,2)-int(\n1111111111\n,2))\n        for i in range(0,32):\n            grovepi.ledBar_setBits(ledbar, i)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print \nTest 6) Get current state\n\n        # state = ledbar_getBits(ledbar)\n        # state: (0-1023) a bit for each of the 10 LEDs\n        state = grovepi.ledBar_getBits(ledbar)\n        print \nwith first 5 leds lit, the state should be 31 or 0x1F\n\n        print state\n\n        # bitwise shift five bits to the left\n        state = state \n 5\n        # the state should now be 992 or 0x3E0\n        # when saved the last 5 LEDs will be lit instead of the first 5 LEDs\n        time.sleep(.5)\n\n\n        print \nTest 7) Set state - save the state we just modified\n\n        # ledbar_setBits(ledbar, state)\n        # state: (0-1023) a bit for each of the 10 LEDs\n        grovepi.ledBar_setBits(ledbar, state)\n        time.sleep(.5)\n\n\n        print \nTest 8) Swap orientation - green to red - current state is preserved\n\n        # ledbar_orientation(pin,orientation)\n        # orientation: (0 = red to green, 1 = green to red)\n        # when you reverse the led bar orientation, all methods know how to handle the new LED index\n        # green to red\n        grovepi.ledBar_orientation(ledbar, 1)\n        time.sleep(.5)\n\n        # red to green\n        grovepi.ledBar_orientation(ledbar, 0)\n        time.sleep(.5)\n\n        # green to red\n        grovepi.ledBar_orientation(ledbar, 1)\n        time.sleep(.5)\n\n\n        print \nTest 9) Set level, again\n\n        # ledbar_setLevel(pin,level)\n        # level: (0-10)\n        # note the red LED is now at index 10 instead of 1\n        for i in range(0,11):\n            grovepi.ledBar_setLevel(ledbar, i)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print \nTest 10) Set a single LED, again\n\n        # ledbar_setLed(pin,led,state)\n        # led: which led (1-10)\n        # state: off or on (0,1)\n        grovepi.ledBar_setLed(ledbar, 1, 0)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 3, 0)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 5, 0)\n        time.sleep(.5)\n\n\n        print \nTest 11) Toggle a single LED, again\n\n        # ledbar_toggleLed(ledbar, led)\n        grovepi.ledBar_toggleLed(ledbar, 2)\n        time.sleep(.5)\n\n        grovepi.ledBar_toggleLed(ledbar, 4)\n        time.sleep(.5)\n\n\n        print \nTest 12) Get state\n\n        # state = ledbar_getBits(ledbar)\n        # state: (0-1023) a bit for each of the 10 LEDs\n        state = grovepi.ledBar_getBits(ledbar)\n\n        # the last 5 LEDs are lit, so the state should be 992 or 0x3E0\n\n        # bitwise shift five bits to the right\n        state = state \n 5\n        # the state should now be 31 or 0x1F\n\n\n        print \nTest 13) Set state, again\n\n        # ledbar_setBits(ledbar, state)\n        # state: (0-1023) a bit for each of the 10 LEDs\n        grovepi.ledBar_setBits(ledbar, state)\n        time.sleep(.5)\n\n\n        print \nTest 14) Step\n\n        # step through all 10 LEDs\n        for i in range(0,11):\n            grovepi.ledBar_setLevel(ledbar, i)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print \nTest 15) Bounce\n\n        # switch on the first two LEDs\n        grovepi.ledBar_setLevel(ledbar, 2)\n\n        # get the current state (which is 0x3)\n        state = grovepi.ledBar_getBits(ledbar)\n\n        # bounce to the right\n        for i in range(0,9):\n            # bit shift left and update\n            state \n= 1;\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n\n        # bounce to the left\n        for i in range(0,9):\n            # bit shift right and update\n            state \n= 1;\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print \nTest 16) Random\n\n        for i in range(0,21):\n            state = random.randint(0,1023)\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print \nTest 17) Invert\n\n        # set every 2nd LED on - 341 or 0x155\n        state = 341\n        for i in range(0,5):\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n\n            # bitwise XOR all 10 LEDs on with the current state\n            state = 0x3FF ^ state\n\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print \nTest 18) Walk through all possible combinations\n\n        for i in range(0,1024):\n            grovepi.ledBar_setBits(ledbar, i)\n            time.sleep(.1)\n        time.sleep(.4)\n\n    except KeyboardInterrupt:\n        grovepi.ledBar_setBits(ledbar, 0)\n        break\n    except IOError:\n        print \nError\n\n\n\n\n\n5.\u8fd0\u884c\u793a\u4f8b\u3002\n\nsudo python grove_ledbar.py\n\n\n\n6.\u5982\u679c\u60a8\u7684 Grovepi \u6ca1\u6709\u5b89\u88c5\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u8bf7\u66f4\u65b0\u56fa\u4ef6\uff0c\u5426\u5219\u6b64\u6f14\u793a\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\n\ncd yourpath/GrovePi/Firmware\nsudo ./firmware_update.sh\n\n\n\nProject\n\n\n\n\nInspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!\n\n\nThe Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.    \n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle \u6587\u4ef6]\nGrove - LED Bar Eagle File\n\n\n[\u4ee3\u7801\u5e93]\nGrove - LED Bar Library\n\n\n[\u4ee3\u7801\u5e93]\nSuli-compatible Library\n\n\n[\u6570\u636e\u624b\u518c]\nMY9221 Datasheet", 
            "title": "Grove-LED Bar"
        }, 
        {
            "location": "/Grove-LED_Bar/#_1", 
            "text": "\u8f93\u5165\u7535\u538b: 3.3V/5V  \u6bcf\u4e2a LED \u6bb5\u90fd\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u5355\u72ec\u63a7\u5236  \u663e\u793a\u76f4\u89c2  \u5bbd\u7535\u538b\u8f93\u5165\u8303\u56f4\uff1a3V-5.5V DC  \u53ef\u7528\u6f14\u793a\u4ee3\u7801  Suli \u517c\u5bb9\u5e93    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove \u7cfb\u7edf", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-LED_Bar/#platforms-supported", 
            "text": "Note \n\u60f3\u4e86\u89e3 Suli-compatible \u7684\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u8003  Suli", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-LED_Bar/#_2", 
            "text": "", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-LED_Bar/#arduino", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Grove - LED Bar\u3002\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a  Seeeduino V3.0  \u548c\u4e00\u4e2a  Grove - Base Shield  \u4e4b\u7c7b\u7684\u6269\u5c55\u677f.", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-LED_Bar/#_3", 
            "text": "\u628a Grove - LED Bar \u63a5\u5728 Grove - Base Shield \u7684  D8  \u63a5\u53e3\u4e0a\uff0c\u7136\u540e\u628a\u6269\u5c55\u677f\u63d2\u5728 Arduino \u4e0a\u3002", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-LED_Bar/#_4", 
            "text": "\u4f60\u53ef\u4ee5\u5728 github \u4e0a\u4e0b\u8f7d \u51fd\u6570\u5e93\uff0c\u70b9\u51fb  \u8fd9\u91cc  \u4e0b\u8f7d\uff0c\u7136\u540e\u89e3\u538b\u7f29\u5230 Arduino \u7684\u51fd\u6570\u5e93\u6587\u4ef6\u5939\u4e0b\u3002  \u7136\u540e\u6253\u5f00 Arduino IDE,  File\uff08\u6587\u4ef6\uff09 -  examples\uff08\u793a\u4f8b\uff09 -  LED_Bar -  Level \uff0c\u6253\u5f00\u793a\u4f8b\u4ee3\u7801\u3002   \u70b9\u51fb  Upload\uff08\u4e0a\u4f20\uff09  \u4e0a\u4f20\u4ee3\u7801\uff0c\u5982\u679c\u60a8\u5728\u5f00\u59cb\u4f7f\u7528 Arduino \u65f6\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u83b7\u53d6\u5e2e\u52a9\u3002", 
            "title": "\u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20"
        }, 
        {
            "location": "/Grove-LED_Bar/#_5", 
            "text": "\u4f60\u7684 Grove - LED Bar\u73b0\u5728\u5f00\u59cb\u5de5\u4f5c\u4e86\uff0c\u5e94\u8be5\u662f\u5982\u4e0b\u56fe\u6240\u793a\u3002", 
            "title": "\u5de5\u4f5c\u6f14\u793a"
        }, 
        {
            "location": "/Grove-LED_Bar/#raspberry-pi", 
            "text": "1.\u4f60\u5e94\u8be5\u5df2\u7ecf\u6709\u4e86 Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.  2.\u4f60\u5e94\u8be5\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u5f00\u53d1\u73af\u5883\uff0c\u5982\u679c\u6ca1\u6709\u8bf7\u8bbf\u95ee  \u8fd9\u91cc \u3002  3.\u8fde\u63a5   \u628a LED Bar \u7528 Grove \u7ebf\u8fde\u63a5\u5230 Grovepi \u7684  D3  \u63a5\u53e3\u4e0a\u3002   4.\u6d4f\u89c8\u5230\u6f14\u793a\u76ee\u5f55\uff1a cd yourpath/GrovePi/Software/Python/   \u67e5\u770b\u4ee3\u7801\uff1a nano grove_ledbar.py   #  Ctrl+x  to exit #   import time\nimport grovepi\nimport random\n\n# Connect the Grove LED Bar to digital port D5\n# DI,DCKI,VCC,GND\nledbar = 5\n\ngrovepi.pinMode(ledbar, OUTPUT )\ntime.sleep(1)\ni = 0\n\n# LED Bar methods\n# grovepi.ledBar_init(pin,orientation)\n# grovepi.ledBar_orientation(pin,orientation)\n# grovepi.ledBar_setLevel(pin,level)\n# grovepi.ledBar_setLed(pin,led,state)\n# grovepi.ledBar_toggleLed(pin,led)\n# grovepi.ledBar_setBits(pin,state)\n# grovepi.ledBar_getBits(pin)\n\n    while True:\n        try:\n        print  Test 1) Initialise - red to green \n        # ledbar_init(pin,orientation)\n        # orientation: (0 = red to green, 1 = green to red)\n        grovepi.ledBar_init(ledbar, 0)\n        time.sleep(.5)\n\n\n        print  Test 2) Set level \n        # ledbar_setLevel(pin,level)\n        # level: (0-10)\n        for i in range(0,11):\n            grovepi.ledBar_setLevel(ledbar, i)\n            time.sleep(.2)\n        time.sleep(.3)\n\n        grovepi.ledBar_setLevel(ledbar, 8)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLevel(ledbar, 2)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLevel(ledbar, 5)\n        time.sleep(.5)\n\n\n        print  Test 3) Switch on/off a single LED \n        # ledbar_setLed(pin,led,state)\n        # led: which led (1-10)\n        # state: off or on (0,1)\n        grovepi.ledBar_setLed(ledbar, 10, 1)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 9, 1)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 8, 1)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 1, 0)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 2, 0)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 3, 0)\n        time.sleep(.5)\n\n\n        print  Test 4) Toggle a single LED \n        # flip a single led - if it is currently on, it will become off and vice versa\n        # ledbar_toggleLed(ledbar, led)\n        grovepi.ledBar_toggleLed(ledbar, 1)\n        time.sleep(.5)\n\n        grovepi.ledBar_toggleLed(ledbar, 2)\n        time.sleep(.5)\n\n        grovepi.ledBar_toggleLed(ledbar, 9)\n        time.sleep(.5)\n\n        grovepi.ledBar_toggleLed(ledbar, 10)\n        time.sleep(.5)\n\n\n        print  Test 5) Set state - control all leds with 10 bits \n        # ledbar_setBits(ledbar, state)\n        # state: (0-1023) or (0x00-0x3FF) or (0b0000000000-0b1111111111) or (int( 0000000000 ,2)-int( 1111111111 ,2))\n        for i in range(0,32):\n            grovepi.ledBar_setBits(ledbar, i)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print  Test 6) Get current state \n        # state = ledbar_getBits(ledbar)\n        # state: (0-1023) a bit for each of the 10 LEDs\n        state = grovepi.ledBar_getBits(ledbar)\n        print  with first 5 leds lit, the state should be 31 or 0x1F \n        print state\n\n        # bitwise shift five bits to the left\n        state = state   5\n        # the state should now be 992 or 0x3E0\n        # when saved the last 5 LEDs will be lit instead of the first 5 LEDs\n        time.sleep(.5)\n\n\n        print  Test 7) Set state - save the state we just modified \n        # ledbar_setBits(ledbar, state)\n        # state: (0-1023) a bit for each of the 10 LEDs\n        grovepi.ledBar_setBits(ledbar, state)\n        time.sleep(.5)\n\n\n        print  Test 8) Swap orientation - green to red - current state is preserved \n        # ledbar_orientation(pin,orientation)\n        # orientation: (0 = red to green, 1 = green to red)\n        # when you reverse the led bar orientation, all methods know how to handle the new LED index\n        # green to red\n        grovepi.ledBar_orientation(ledbar, 1)\n        time.sleep(.5)\n\n        # red to green\n        grovepi.ledBar_orientation(ledbar, 0)\n        time.sleep(.5)\n\n        # green to red\n        grovepi.ledBar_orientation(ledbar, 1)\n        time.sleep(.5)\n\n\n        print  Test 9) Set level, again \n        # ledbar_setLevel(pin,level)\n        # level: (0-10)\n        # note the red LED is now at index 10 instead of 1\n        for i in range(0,11):\n            grovepi.ledBar_setLevel(ledbar, i)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print  Test 10) Set a single LED, again \n        # ledbar_setLed(pin,led,state)\n        # led: which led (1-10)\n        # state: off or on (0,1)\n        grovepi.ledBar_setLed(ledbar, 1, 0)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 3, 0)\n        time.sleep(.5)\n\n        grovepi.ledBar_setLed(ledbar, 5, 0)\n        time.sleep(.5)\n\n\n        print  Test 11) Toggle a single LED, again \n        # ledbar_toggleLed(ledbar, led)\n        grovepi.ledBar_toggleLed(ledbar, 2)\n        time.sleep(.5)\n\n        grovepi.ledBar_toggleLed(ledbar, 4)\n        time.sleep(.5)\n\n\n        print  Test 12) Get state \n        # state = ledbar_getBits(ledbar)\n        # state: (0-1023) a bit for each of the 10 LEDs\n        state = grovepi.ledBar_getBits(ledbar)\n\n        # the last 5 LEDs are lit, so the state should be 992 or 0x3E0\n\n        # bitwise shift five bits to the right\n        state = state   5\n        # the state should now be 31 or 0x1F\n\n\n        print  Test 13) Set state, again \n        # ledbar_setBits(ledbar, state)\n        # state: (0-1023) a bit for each of the 10 LEDs\n        grovepi.ledBar_setBits(ledbar, state)\n        time.sleep(.5)\n\n\n        print  Test 14) Step \n        # step through all 10 LEDs\n        for i in range(0,11):\n            grovepi.ledBar_setLevel(ledbar, i)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print  Test 15) Bounce \n        # switch on the first two LEDs\n        grovepi.ledBar_setLevel(ledbar, 2)\n\n        # get the current state (which is 0x3)\n        state = grovepi.ledBar_getBits(ledbar)\n\n        # bounce to the right\n        for i in range(0,9):\n            # bit shift left and update\n            state  = 1;\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n\n        # bounce to the left\n        for i in range(0,9):\n            # bit shift right and update\n            state  = 1;\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print  Test 16) Random \n        for i in range(0,21):\n            state = random.randint(0,1023)\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print  Test 17) Invert \n        # set every 2nd LED on - 341 or 0x155\n        state = 341\n        for i in range(0,5):\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n\n            # bitwise XOR all 10 LEDs on with the current state\n            state = 0x3FF ^ state\n\n            grovepi.ledBar_setBits(ledbar, state)\n            time.sleep(.2)\n        time.sleep(.3)\n\n\n        print  Test 18) Walk through all possible combinations \n        for i in range(0,1024):\n            grovepi.ledBar_setBits(ledbar, i)\n            time.sleep(.1)\n        time.sleep(.4)\n\n    except KeyboardInterrupt:\n        grovepi.ledBar_setBits(ledbar, 0)\n        break\n    except IOError:\n        print  Error   5.\u8fd0\u884c\u793a\u4f8b\u3002 sudo python grove_ledbar.py  6.\u5982\u679c\u60a8\u7684 Grovepi \u6ca1\u6709\u5b89\u88c5\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u8bf7\u66f4\u65b0\u56fa\u4ef6\uff0c\u5426\u5219\u6b64\u6f14\u793a\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002 cd yourpath/GrovePi/Firmware\nsudo ./firmware_update.sh", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-LED_Bar/#project", 
            "text": "Inspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!  The Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.", 
            "title": "Project"
        }, 
        {
            "location": "/Grove-LED_Bar/#_6", 
            "text": "[Eagle \u6587\u4ef6] Grove - LED Bar Eagle File  [\u4ee3\u7801\u5e93] Grove - LED Bar Library  [\u4ee3\u7801\u5e93] Suli-compatible Library  [\u6570\u636e\u624b\u518c] MY9221 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Variable_Color_LED/", 
            "text": "\u8fd9\u4e2a Grove \u5f69\u8272 LED \u6a21\u5757\u7531\u4e00\u4e2a 8mm RGB LED \u7ec4\u6210\u3002\u5b83\u5de5\u4f5c\u5728 5V DC\u3002\u5f53 SIG \u5f15\u811a\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0cRGB LED \u5c06\u4eae\u8d77\u3002\u6a21\u5757\u8fde\u63a5 Seeeduino \u7684\u6570\u5b57\u8f93\u51fa\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8109\u5bbd\u8c03\u5236\u8fdb\u884c\u63a7\u5236\u3002\u5b83\u4f7f\u7528\u4e09\u4e2a\u53ef\u8c03\u7535\u963b\u6765\u6539\u53d8 RGB LED \u7684\u989c\u8272\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u517c\u5bb9 Grove\n\n\n\u53ef\u8c03\u8282\u989c\u8272\n\n\n\n\n\n\nTip\n\n\n\u66f4\u591a Grove \u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u53c2\u8003 \nGrove \u7cfb\u7edf\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u73a9\u5177\n\n\n\u88c5\u9970\u54c1\n\n\n\n\n\n\nCaution\n\n\u8c03\u8282 R, G, B \u4e09\u4e2a\u7535\u4f4d\u5668\u65f6\u8bf7\u5c0f\u5fc3\u64cd\u4f5c\uff0c\u4e0d\u8981\u7528\u529b\u8fc7\u5ea6\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u5178\u578b\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n5.0\n\n\nVDC\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n20\n\n\nmA\n\n\n\n\n\n\n\u53ef\u8c03\u7535\u4f4d\u5668\u963b\u503c\n\n\n1\n\n\nK\u03a9\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u6a21\u5757\u7684\u4e09\u4e2a\u7535\u4f4d\u5668 RED\uff0cGREEN \u548c BLUE \u5206\u522b\u63a7\u5236 R\uff0cG \u548c B \u901a\u9053\u3002\u65cb\u8f6c\u4e09\u4e2a\u7535\u4f4d\u5668\u53ef\u4ee5\u6539\u53d8 LED \u7684\u989c\u8272\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u65cb\u8f6c\u7535\u4f4d\u5668\u65f6\u8bf7\u5c0f\u5fc3\u64cd\u4f5c\u3002\n\n\n\u4ee5\u4e0b\u4f8b\u5b50\u6f14\u793a\u4e86\u63a7\u5236\u4eae\u5ea6\u7684\u7b80\u5355\u5e94\u7528\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0cVariable Color LED \u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684 \nD9\n\u3002\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u8fdb Arduino \u7684\u65b0\u7a97\u53e3\u4e2d\u3002\n\n\n\n\n\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\nint ledPin = 9;    // LED connected to digital pin 9\n\nvoid setup()  {\n    // nothing happens in setup\n}\n\nvoid loop()  {\n    // fade in from min to max in increments of 5 points:\n    for(int fadeValue = 0; fadeValue \n= 255; fadeValue +=5) {\n        // sets the value (range from 0 to 255):\n        analogWrite(ledPin, fadeValue);\n        // wait for 30 milliseconds to see the dimming effect\n        delay(30);\n    }\n\n    // fade out from max to min in increments of 5 points:\n    for(int fadeValue = 255; fadeValue \n= 0; fadeValue -=5) {\n        // sets the value (range from 0 to 255):\n        analogWrite(ledPin, fadeValue);\n        // wait for 30 milliseconds to see the dimming effect\n        delay(30);\n    }\n}\n\n\n-   \u4e0a\u4f20\u4ee3\u7801\uff0c\u60a8\u5c31\u4f1a\u770b\u5230\u706f\u660e\u6697\u95ea\u70c1\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle \u6587\u4ef6]\nVariable Color LED eagle_file", 
            "title": "Grove-Variable Color LED"
        }, 
        {
            "location": "/Grove-Variable_Color_LED/#_1", 
            "text": "\u517c\u5bb9 Grove  \u53ef\u8c03\u8282\u989c\u8272    Tip  \u66f4\u591a Grove \u6a21\u5757\u7684\u4fe1\u606f\u8bf7\u53c2\u8003  Grove \u7cfb\u7edf", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Variable_Color_LED/#_2", 
            "text": "\u73a9\u5177  \u88c5\u9970\u54c1    Caution \n\u8c03\u8282 R, G, B \u4e09\u4e2a\u7535\u4f4d\u5668\u65f6\u8bf7\u5c0f\u5fc3\u64cd\u4f5c\uff0c\u4e0d\u8981\u7528\u529b\u8fc7\u5ea6\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Variable_Color_LED/#_3", 
            "text": "\u9879\u76ee  \u5178\u578b\u503c  \u5355\u4f4d      \u5de5\u4f5c\u7535\u538b  5.0  VDC    \u5de5\u4f5c\u7535\u6d41  20  mA    \u53ef\u8c03\u7535\u4f4d\u5668\u963b\u503c  1  K\u03a9", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Variable_Color_LED/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Variable_Color_LED/#_4", 
            "text": "\u6a21\u5757\u7684\u4e09\u4e2a\u7535\u4f4d\u5668 RED\uff0cGREEN \u548c BLUE \u5206\u522b\u63a7\u5236 R\uff0cG \u548c B \u901a\u9053\u3002\u65cb\u8f6c\u4e09\u4e2a\u7535\u4f4d\u5668\u53ef\u4ee5\u6539\u53d8 LED \u7684\u989c\u8272\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u65cb\u8f6c\u7535\u4f4d\u5668\u65f6\u8bf7\u5c0f\u5fc3\u64cd\u4f5c\u3002  \u4ee5\u4e0b\u4f8b\u5b50\u6f14\u793a\u4e86\u63a7\u5236\u4eae\u5ea6\u7684\u7b80\u5355\u5e94\u7528\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0cVariable Color LED \u8fde\u63a5\u5230  Grove - Base Shield  \u7684  D9 \u3002\u786c\u4ef6\u5b89\u88c5\u5982\u4e0b\uff1a    \u628a\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u8fdb Arduino \u7684\u65b0\u7a97\u53e3\u4e2d\u3002   \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a  int ledPin = 9;    // LED connected to digital pin 9\n\nvoid setup()  {\n    // nothing happens in setup\n}\n\nvoid loop()  {\n    // fade in from min to max in increments of 5 points:\n    for(int fadeValue = 0; fadeValue  = 255; fadeValue +=5) {\n        // sets the value (range from 0 to 255):\n        analogWrite(ledPin, fadeValue);\n        // wait for 30 milliseconds to see the dimming effect\n        delay(30);\n    }\n\n    // fade out from max to min in increments of 5 points:\n    for(int fadeValue = 255; fadeValue  = 0; fadeValue -=5) {\n        // sets the value (range from 0 to 255):\n        analogWrite(ledPin, fadeValue);\n        // wait for 30 milliseconds to see the dimming effect\n        delay(30);\n    }\n} \n-   \u4e0a\u4f20\u4ee3\u7801\uff0c\u60a8\u5c31\u4f1a\u770b\u5230\u706f\u660e\u6697\u95ea\u70c1\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Variable_Color_LED/#_5", 
            "text": "[Eagle \u6587\u4ef6] Variable Color LED eagle_file", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-EL_Driver/", 
            "text": "Grove - EL Driver \u662f\u4e13\u95e8\u9a71\u52a8 EL \u706f\u7247\u7684\u9a71\u52a8\u5668\u3002\u5b83\u96c6\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u9006\u53d8\u5668\u6765\u9a71\u52a8 EL \u706f\u7247\uff0c\u53ea\u9700\u4e00\u6839 Grove \u5bfc\u7ebf\u5373\u53ef\u8f7b\u677e\u70b9\u4eae EL \u706f\u7247\u3002\n\n\n\n\n\u7248\u672c\u53d8\u66f4\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u63cf\u8ff0\n\n\n\u53d1\u884c\u65e5\u671f\n\n\n\n\n\n\n\n\n\n\nv1.0\n\n\n\u9996\u6b21\u516c\u5f00\u53d1\u5e03\n\n\n\u5341\u4e8c\u6708 11, 2014\n\n\n\n\n\n\n\n\n\u652f\u6301 EL \u706f\u7247\uff1a\n\n\n\n\nEL Wire-Green 3m\n\n\nEL Wire-Red 3m\n\n\nEL Wire-Blue 3m\n\n\nEL Wire-Yellow 3m\n\n\nEL Wire-White 3m\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u517c\u5bb9 Grove \u63a5\u53e3\n\n\n\u517c\u5bb9 3.3V / 5V\n\n\n\u96c6\u6210\u53d8\u9891\u5668\n\n\n\u8f93\u5165\u7535\u6d41\uff1a\u6700\u5927300mA\uff08\u6839\u636e\u8d1f\u8f7d\u51b3\u5b9a\uff09\n\n\n\u652f\u6301\u6700\u5927EL\u7535\u5bb9\uff1a15nF\n\n\n\n\n\n\nTip\n\n\n\u6709\u5173 Grove \u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u9605 \nGrove \u7cfb\u7edf\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Arduino \u6765\u63a7\u5236 EL \u706f\u7247\u7684\u72b6\u6001\u3002\n\n\n\n\n\n\n\u5c06 Grove - EL Driver \u8fde\u63a5\u5230 Base Shield \u7684 \nD2\n \u63a5\u53e3\u3002\u5982\u679c\u6709\u5fc5\u8981\uff0c\u60a8\u53ef\u4ee5\u66f4\u6539\u4e3a\u5176\u4ed6\u6709\u6548\u7684\u6570\u5b57\u7aef\u53e3\uff0c\u5e76\u4e14\u4e5f\u5e94\u8be5\u66f4\u6539\u7aef\u53e3\u7684\u5b9a\u4e49\u3002\u4f7f\u7528\u4ea7\u54c1\u5305\u88c5\u4e2d\u7684\u7ed9\u5b9a\u7684 EL \u7ebf\u628a EL \u706f\u7247\u8fde\u63a5\u5230 EL \u9a71\u52a8\u5668\u7684 \nJ1\n \u7aef\u53e3\uff0c\u4f7f\u7528\u4ea7\u54c1\u5305\u88c5\u4e2d\u7684\u7ed9\u5b9a\u7535\u7f06\u3002\n\n\n\n\n\n\n\u628a\u9a71\u52a8\u5668\u63d2\u5165 Arduino / Seeeduino\u3002\u4f7f\u7528 USB \u7535\u7f06\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230 PC\u3002\n\n\n\n\n\n\n\u5c06\u6f14\u793a\u4ee3\u7801\u590d\u5236\u5230 Arduino IED\uff0c\u7136\u540e\u4e0a\u4f20\u5230 Arudino \u6216 Seeeduino \u677f\u3002\u4f60\u4f1a\u770b\u5230 EL \u706f\u7247\u5f00\u59cb\u95ea\u70c1\u3002\n\n\n\n\n\n\n/*************************   2014 Seeedstudio   **************************\n* File Name         \u00a0: GroveELDriverDemoCode.ino\n* Author            \u00a0: Seeedteam\n* Version           \u00a0: V1.0\n* Date              \u00a0: 11/12/2014\n* Description       \u00a0: Demo code for Grove - EL Driver\n*************************************************************************/\n\u00a0\n#define ELPin 2 //connect EL Driver to digital pin2\nvoid setup() {                \n  // initialize the digital pin2 as an output.\n  pinMode(ELPin, OUTPUT);     \n}\n\u00a0\nvoid loop() {\n  digitalWrite(ELPin, HIGH);   // set the EL Wire on\n  delay(500);               // for 500ms\n  digitalWrite(ELPin, LOW);   // set the EL Wire off\n  delay(500);\n}\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[Eagle \u6587\u4ef6]\nsch_pcb_eagle\n\n\n[PDF \u6587\u4ef6]\nsch_pdf", 
            "title": "Grove-EL Driver"
        }, 
        {
            "location": "/Grove-EL_Driver/#_1", 
            "text": "\u7248\u672c  \u63cf\u8ff0  \u53d1\u884c\u65e5\u671f      v1.0  \u9996\u6b21\u516c\u5f00\u53d1\u5e03  \u5341\u4e8c\u6708 11, 2014", 
            "title": "\u7248\u672c\u53d8\u66f4"
        }, 
        {
            "location": "/Grove-EL_Driver/#el", 
            "text": "EL Wire-Green 3m  EL Wire-Red 3m  EL Wire-Blue 3m  EL Wire-Yellow 3m  EL Wire-White 3m", 
            "title": "\u652f\u6301 EL \u706f\u7247\uff1a"
        }, 
        {
            "location": "/Grove-EL_Driver/#_2", 
            "text": "\u517c\u5bb9 Grove \u63a5\u53e3  \u517c\u5bb9 3.3V / 5V  \u96c6\u6210\u53d8\u9891\u5668  \u8f93\u5165\u7535\u6d41\uff1a\u6700\u5927300mA\uff08\u6839\u636e\u8d1f\u8f7d\u51b3\u5b9a\uff09  \u652f\u6301\u6700\u5927EL\u7535\u5bb9\uff1a15nF    Tip  \u6709\u5173 Grove \u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u9605  Grove \u7cfb\u7edf", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-EL_Driver/#_3", 
            "text": "\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Arduino \u6765\u63a7\u5236 EL \u706f\u7247\u7684\u72b6\u6001\u3002    \u5c06 Grove - EL Driver \u8fde\u63a5\u5230 Base Shield \u7684  D2  \u63a5\u53e3\u3002\u5982\u679c\u6709\u5fc5\u8981\uff0c\u60a8\u53ef\u4ee5\u66f4\u6539\u4e3a\u5176\u4ed6\u6709\u6548\u7684\u6570\u5b57\u7aef\u53e3\uff0c\u5e76\u4e14\u4e5f\u5e94\u8be5\u66f4\u6539\u7aef\u53e3\u7684\u5b9a\u4e49\u3002\u4f7f\u7528\u4ea7\u54c1\u5305\u88c5\u4e2d\u7684\u7ed9\u5b9a\u7684 EL \u7ebf\u628a EL \u706f\u7247\u8fde\u63a5\u5230 EL \u9a71\u52a8\u5668\u7684  J1  \u7aef\u53e3\uff0c\u4f7f\u7528\u4ea7\u54c1\u5305\u88c5\u4e2d\u7684\u7ed9\u5b9a\u7535\u7f06\u3002    \u628a\u9a71\u52a8\u5668\u63d2\u5165 Arduino / Seeeduino\u3002\u4f7f\u7528 USB \u7535\u7f06\u5c06\u7535\u8def\u677f\u8fde\u63a5\u5230 PC\u3002    \u5c06\u6f14\u793a\u4ee3\u7801\u590d\u5236\u5230 Arduino IED\uff0c\u7136\u540e\u4e0a\u4f20\u5230 Arudino \u6216 Seeeduino \u677f\u3002\u4f60\u4f1a\u770b\u5230 EL \u706f\u7247\u5f00\u59cb\u95ea\u70c1\u3002    /*************************   2014 Seeedstudio   **************************\n* File Name         \u00a0: GroveELDriverDemoCode.ino\n* Author            \u00a0: Seeedteam\n* Version           \u00a0: V1.0\n* Date              \u00a0: 11/12/2014\n* Description       \u00a0: Demo code for Grove - EL Driver\n*************************************************************************/\n\u00a0\n#define ELPin 2 //connect EL Driver to digital pin2\nvoid setup() {                \n  // initialize the digital pin2 as an output.\n  pinMode(ELPin, OUTPUT);     \n}\n\u00a0\nvoid loop() {\n  digitalWrite(ELPin, HIGH);   // set the EL Wire on\n  delay(500);               // for 500ms\n  digitalWrite(ELPin, LOW);   // set the EL Wire off\n  delay(500);\n}", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-EL_Driver/#_4", 
            "text": "[Eagle \u6587\u4ef6] sch_pcb_eagle  [PDF \u6587\u4ef6] sch_pdf", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/", 
            "text": "\u8be5\u6a21\u5757\u57fa\u4e8e 2 \u7ebf\u5708\u9501\u5b9a\u7ee7\u7535\u5668\u3002\u4e0e\u666e\u901a\u7ee7\u7535\u5668\u76f8\u6bd4\uff0c\u8be5\u9501\u5b58\u7ee7\u7535\u5668\u4e0d\u9700\u8981\u8fde\u7eed\u7535\u529b\u6765\u4fdd\u6301\u72b6\u6001\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u4e0a\u5347/\u4e0b\u964d\u8109\u51b2\u6765\u6539\u53d8\u5de5\u4f5c\u72b6\u6001\u3002\u751a\u81f3\u7535\u6e90\u53ef\u4ee5\u5728\u5de5\u4f5c\u72b6\u6001\u4e0d\u9700\u8981\u6539\u53d8\u7684\u60c5\u51b5\u4e0b\u88ab\u79fb\u9664\uff0c\u8fd9\u4f7f\u5f97\u8be5\u6a21\u5757\u7279\u522b\u9002\u7528\u4e8e\u4f4e\u529f\u7387\u9879\u76ee\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u8fde\u63a5\u5668\n\n\n\u4f4e\u529f\u8017\n\n\n\u53cc\u5f00\u5173\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n4.7\n\n\n\n\n5.0\n\n\n\n\n5.3\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u8bbe\u7f6e/\u590d\u4f4d\u7535\u538b(\u6700\u5927)\n\n\n\n\n4.0\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u7ebf\u5708\u7535\u963b\n\n\n\n\n151\n\n\n\n\n167\n\n\n\n\n183\n\n\n\n\n\u03a9\n\n\n\n\n\n\n\n\n\u5f00\u5173\u7535\u538b(\u6700\u5927)\n\n\n\n\n35VAC/35VDC\n\n\n\n\n/\n\n\n\n\n\n\n\n\n\u5f00\u5173\u7535\u6d41(\u6700\u5927)\n\n\n\n\n3\n\n\n\n\nA\n\n\n\n\n\n\n\n\n\u8bbe\u7f6e\u65f6\u95f4(\u9501\u5b58)\n\n\n\n\n4.5(max)\n\n\n\n\nms\n\n\n\n\n\n\n\n\n\u91cd\u7f6e\u65f6\u95f4(\u9501\u5b58)\n\n\n\n\n3.5(max)\n\n\n\n\nms\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u5f00\u59cb\u4e4b\u524d\n\n\n\n\n\u76f8\u5173\u9605\u8bfb\n\n\n\u6211\u4eec\u5efa\u8bae\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\u9605\u8bfb\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u60a8\u4e86\u89e3\u6709\u5173 Arduino \u548c\u6211\u4eec\u7684\u4ea7\u54c1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8fd8\u53ef\u4ee5\u8ba9\u60a8\u66f4\u8f7b\u677e\u5730\u4f7f\u7528\u5f00\u6e90\u786c\u4ef6\u3002\n\n\n\n\n Arduino \u5165\u95e8\u6307\u5bfc\n\n\n\u4ec0\u4e48\u662f Grove \u7cfb\u7edf\n\n\n\u4e3a\u4ec0\u4e48\u6211\u9700\u8981\u4e00\u4e2a Base shield ?\n\n\n\n\n\u9605\u8bfb\u5b8c\u4e4b\u540e\uff0c\u60a8\u5c31\u77e5\u9053\u5982\u4f55\u4f7f\u7528 Grove \u4ea7\u54c1\u7684 Base Shield \u4e0e Arduino \u826f\u597d\u5730\u534f\u4f5c\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u5427!\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u672c\u6559\u7a0b\u5c06\u5305\u62ec\u4ee5\u4e0b\u5fc5\u8981\u7684\u4ea7\u54c1 :\n\n\n\n\nArduino UNO R3\n \u6216 \nSeeeduino v4\n\n\nBase Shield\n\n\nGrove - 2-Coil Latching Relay\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528\n\n\nGrove - 2-Coil Latching Relay \u53ea\u5728\u66f4\u6362\u72b6\u6001\u671f\u95f4\u5f00\u5149\u7535\u6e90\u3002\u4fe1\u53f7\u5f15\u811a\u4e0a\u7684\u4e0a\u5347/\u4e0b\u964d\u7535\u538b\u8109\u51b2\u6539\u53d8\u5176\u5de5\u4f5c\u72b6\u6001\u3002\u8fd9\u5c06\u5728\u8981\u6c42\u80fd\u6e90\u6548\u7387\uff0c\u4ee5\u53ca\u9700\u8981\u7ee7\u7535\u5668\u8bb0\u5f55\u5176\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\u975e\u5e38\u6709\u7528\u3002\n\n\n\u5f00\u59cb\u4f7f\u7528\u5427\u3002\n\n\n\n\n\u5c06\u8be5\u6a21\u5757\u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684 \nD3\n \u7aef\u53e3\n\n\n\u5f53 SIG \u5f15\u811a\u4e0a\u6709\u4e00\u4e2a\u4e0a\u5347\u6cbf\u65f6\uff0c\u7ee7\u7535\u5668\u7531\u4fdd\u6301\u9ed8\u8ba4\u7684\"\u8bbe\u7f6e\"\u72b6\u6001 (\nComm\n \u548c \nNO\n \u8fde\u63a5)\u53d8\u6210\"\u590d\u4f4d\"\u72b6\u6001 (\nComm\n \u548c \nNC\n \u8fde\u63a5)\u3002\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\u6240\u793a :\n\n\n\n\n#define LatchingRelay 3\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \npinMode\n(\nLatchingRelay\n,\nOUTPUT\n);\n\n\n    \ndigitalWrite\n(\nLatchingRelay\n,\nLOW\n);\n\n    \ndelay\n(\n1000\n);\n\n    \ndigitalWrite\n(\nLatchingRelay\n,\nHIGH\n);\n\n    \ndelay\n(\n1000\n);\n\n\n}\n\n\nvoid\n \nloop\n()\n\n\n{\n\n\n\n}\n\n\n\n\n\n\n\n\u5f53 SIG \u5f15\u811a\u4e0a\u6709\u4e00\u4e2a\u4e0b\u964d\u6cbf\u65f6\uff0c\u7ee7\u7535\u5668\u7531\u4fdd\u6301\"\u590d\u4f4d\"\u72b6\u6001 (\nComm\n \u548c \nNC\n \u8fde\u63a5)\u53d8\u6210\"\u8bbe\u7f6e\"\u72b6\u6001 (\nComm\n \u548c \nNO\n \u8fde\u63a5)\u3002\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\u6240\u793a :\n\n\n\n\n#define LatchingRelay 3\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \npinMode\n(\nLatchingRelay\n,\nOUTPUT\n);\n\n\n    \ndigitalWrite\n(\n3\n,\nHIGH\n);\n\n    \ndelay\n(\n1000\n);\n\n    \ndigitalWrite\n(\n3\n,\nLOW\n);\n\n    \ndelay\n(\n1000\n);\n\n\n}\n\n\nvoid\n \nloop\n()\n\n\n{\n\n\n\n}\n\n\n\n\n\n\n\n\u5de5\u4f5c\u72b6\u6001\u4e0d\u53d8\u65f6\uff0c\u6b64\u6a21\u5757\u6d88\u8017\u7684\u529f\u7387\u4e0d\u5927\u3002\u8bbe\u7f6e\u7ee7\u7535\u5668\u72b6\u6001\u540e\uff0c\u4e0d\u518d\u9700\u8981\u4e3a\u9501\u5b58\u7ee7\u7535\u5668\u4f9b\u7535\uff0c\u8fd9\u4f7f\u5f97\u529f\u8017\u7279\u522b\u4f4e\u3002\n\n\n\n\n\n\nNote\n\n**\u5f53\u4ece\u5e93\u5b58\u4e2d\u91ca\u653e\u65f6\uff0c\u7ee7\u7535\u5668\u5904\u4e8e\"\u590d\u4f4d\"\u72b6\u6001\u3002Relay is on the \"reset\" status when being released from stock.**\n\n\n\n\n\n\n\n\nNotes\n\n\n 1. \u53cc\u5411\u7ee7\u7535\u5668\u540c\u65f6\u88ab\u63a7\u5236\u3002\n\n\n 2. \u5207\u6362\u5230\"\u8bbe\u7f6e\" (\"\u590d\u4f4d\")\u72b6\u6001\u65f6\uff0c**NO** (**NC**) \u6307\u793a\u706f\u5c06\u95ea\u70c1\u4e00\u6b21\u3002\n\n\n\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.\n\n\n2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \nhere\n\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u5c06\u7ee7\u7535\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi \u63d2\u53e3 \nD4\n\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n\ncd yourpath/GrovePi/Software/Python/\n\n\n-   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\n\nnano grove_2_coil_latching_relay.py   # \nCtrl+x\n to exit #\n\n\n\n\nimport time\nimport grovepi\n\n# Connect the Grove 2-Coil Latching Relay to digital port D4\n# SIG,NC,VCC,GND\nrelay = 4\n\ngrovepi.pinMode(relay,\nOUTPUT\n)\n\nwhile True:\n    try:\n        # switch on for 5 seconds\n        grovepi.digitalWrite(relay,1)\n        print \non\n\n        time.sleep(5)\n\n        # switch off for 5 seconds\n        grovepi.digitalWrite(relay,0)\n        print \noff\n\n        time.sleep(5)\n\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(relay,0)\n        break\n    except IOError:\n        print \nError\n\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\nsudo python grove_2_coil_latching_relay.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - 2-Coil Latching Relay Eagle File\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nLatching_Relay_Datasheet", 
            "title": "Grove-2 Coil Latching Relay"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#_1", 
            "text": "Grove \u8fde\u63a5\u5668  \u4f4e\u529f\u8017  \u53cc\u5f00\u5173    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#_2", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u5de5\u4f5c\u7535\u538b  \n4.7  \n5.0  \n5.3  \nVDC    \n\u8bbe\u7f6e/\u590d\u4f4d\u7535\u538b(\u6700\u5927)  \n4.0  \nVDC    \n\u7ebf\u5708\u7535\u963b  \n151  \n167  \n183  \n\u03a9    \n\u5f00\u5173\u7535\u538b(\u6700\u5927)  \n35VAC/35VDC  \n/    \n\u5f00\u5173\u7535\u6d41(\u6700\u5927)  \n3  \nA    \n\u8bbe\u7f6e\u65f6\u95f4(\u9501\u5b58)  \n4.5(max)  \nms    \n\u91cd\u7f6e\u65f6\u95f4(\u9501\u5b58)  \n3.5(max)  \nms", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#_3", 
            "text": "", 
            "title": "\u5f00\u59cb\u4e4b\u524d"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#_4", 
            "text": "\u6211\u4eec\u5efa\u8bae\u60a8\u5728\u4f7f\u7528\u6c14\u4f53\u4f20\u611f\u5668\u4e4b\u524d\u9605\u8bfb\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u60a8\u4e86\u89e3\u6709\u5173 Arduino \u548c\u6211\u4eec\u7684\u4ea7\u54c1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8fd8\u53ef\u4ee5\u8ba9\u60a8\u66f4\u8f7b\u677e\u5730\u4f7f\u7528\u5f00\u6e90\u786c\u4ef6\u3002    Arduino \u5165\u95e8\u6307\u5bfc  \u4ec0\u4e48\u662f Grove \u7cfb\u7edf  \u4e3a\u4ec0\u4e48\u6211\u9700\u8981\u4e00\u4e2a Base shield ?   \u9605\u8bfb\u5b8c\u4e4b\u540e\uff0c\u60a8\u5c31\u77e5\u9053\u5982\u4f55\u4f7f\u7528 Grove \u4ea7\u54c1\u7684 Base Shield \u4e0e Arduino \u826f\u597d\u5730\u534f\u4f5c\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u5427!", 
            "title": "\u76f8\u5173\u9605\u8bfb"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#_5", 
            "text": "\u672c\u6559\u7a0b\u5c06\u5305\u62ec\u4ee5\u4e0b\u5fc5\u8981\u7684\u4ea7\u54c1 :   Arduino UNO R3  \u6216  Seeeduino v4  Base Shield  Grove - 2-Coil Latching Relay", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#_6", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#arduino", 
            "text": "Grove - 2-Coil Latching Relay \u53ea\u5728\u66f4\u6362\u72b6\u6001\u671f\u95f4\u5f00\u5149\u7535\u6e90\u3002\u4fe1\u53f7\u5f15\u811a\u4e0a\u7684\u4e0a\u5347/\u4e0b\u964d\u7535\u538b\u8109\u51b2\u6539\u53d8\u5176\u5de5\u4f5c\u72b6\u6001\u3002\u8fd9\u5c06\u5728\u8981\u6c42\u80fd\u6e90\u6548\u7387\uff0c\u4ee5\u53ca\u9700\u8981\u7ee7\u7535\u5668\u8bb0\u5f55\u5176\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\u975e\u5e38\u6709\u7528\u3002  \u5f00\u59cb\u4f7f\u7528\u5427\u3002   \u5c06\u8be5\u6a21\u5757\u8fde\u63a5\u5230  Grove - Base Shield  \u7684  D3  \u7aef\u53e3  \u5f53 SIG \u5f15\u811a\u4e0a\u6709\u4e00\u4e2a\u4e0a\u5347\u6cbf\u65f6\uff0c\u7ee7\u7535\u5668\u7531\u4fdd\u6301\u9ed8\u8ba4\u7684\"\u8bbe\u7f6e\"\u72b6\u6001 ( Comm  \u548c  NO  \u8fde\u63a5)\u53d8\u6210\"\u590d\u4f4d\"\u72b6\u6001 ( Comm  \u548c  NC  \u8fde\u63a5)\u3002\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\u6240\u793a :   #define LatchingRelay 3  void   setup ()  { \n     pinMode ( LatchingRelay , OUTPUT ); \n\n     digitalWrite ( LatchingRelay , LOW ); \n     delay ( 1000 ); \n     digitalWrite ( LatchingRelay , HIGH ); \n     delay ( 1000 );  }  void   loop ()  {  }    \u5f53 SIG \u5f15\u811a\u4e0a\u6709\u4e00\u4e2a\u4e0b\u964d\u6cbf\u65f6\uff0c\u7ee7\u7535\u5668\u7531\u4fdd\u6301\"\u590d\u4f4d\"\u72b6\u6001 ( Comm  \u548c  NC  \u8fde\u63a5)\u53d8\u6210\"\u8bbe\u7f6e\"\u72b6\u6001 ( Comm  \u548c  NO  \u8fde\u63a5)\u3002\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\u6240\u793a :   #define LatchingRelay 3  void   setup ()  { \n     pinMode ( LatchingRelay , OUTPUT ); \n\n     digitalWrite ( 3 , HIGH ); \n     delay ( 1000 ); \n     digitalWrite ( 3 , LOW ); \n     delay ( 1000 );  }  void   loop ()  {  }    \u5de5\u4f5c\u72b6\u6001\u4e0d\u53d8\u65f6\uff0c\u6b64\u6a21\u5757\u6d88\u8017\u7684\u529f\u7387\u4e0d\u5927\u3002\u8bbe\u7f6e\u7ee7\u7535\u5668\u72b6\u6001\u540e\uff0c\u4e0d\u518d\u9700\u8981\u4e3a\u9501\u5b58\u7ee7\u7535\u5668\u4f9b\u7535\uff0c\u8fd9\u4f7f\u5f97\u529f\u8017\u7279\u522b\u4f4e\u3002    Note \n**\u5f53\u4ece\u5e93\u5b58\u4e2d\u91ca\u653e\u65f6\uff0c\u7ee7\u7535\u5668\u5904\u4e8e\"\u590d\u4f4d\"\u72b6\u6001\u3002Relay is on the \"reset\" status when being released from stock.**    Notes   1. \u53cc\u5411\u7ee7\u7535\u5668\u540c\u65f6\u88ab\u63a7\u5236\u3002   2. \u5207\u6362\u5230\"\u8bbe\u7f6e\" (\"\u590d\u4f4d\")\u72b6\u6001\u65f6\uff0c**NO** (**NC**) \u6307\u793a\u706f\u5c06\u95ea\u70c1\u4e00\u6b21\u3002", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#raspberry-pi", 
            "text": "1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.  2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa  here \u3002  3.\u8fde\u63a5   \u5c06\u7ee7\u7535\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi \u63d2\u53e3  D4 \u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :  cd yourpath/GrovePi/Software/Python/ \n-   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :  nano grove_2_coil_latching_relay.py   #  Ctrl+x  to exit #  import time\nimport grovepi\n\n# Connect the Grove 2-Coil Latching Relay to digital port D4\n# SIG,NC,VCC,GND\nrelay = 4\n\ngrovepi.pinMode(relay, OUTPUT )\n\nwhile True:\n    try:\n        # switch on for 5 seconds\n        grovepi.digitalWrite(relay,1)\n        print  on \n        time.sleep(5)\n\n        # switch off for 5 seconds\n        grovepi.digitalWrite(relay,0)\n        print  off \n        time.sleep(5)\n\n    except KeyboardInterrupt:\n        grovepi.digitalWrite(relay,0)\n        break\n    except IOError:\n        print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002 sudo python grove_2_coil_latching_relay.py", 
            "title": "\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-2-Coil_Latching_Relay/#_7", 
            "text": "[Eagle\u6587\u4ef6]   Grove - 2-Coil Latching Relay Eagle File  [\u82af\u7247\u6570\u636e\u624b\u518c]   Latching_Relay_Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-BLE_v1/", 
            "text": "Grove - BLE v1 (Grove - Bluetooth Low Energy v1) \u91c7\u7528\u4f4e\u529f\u8017\u84dd\u7259\u6a21\u5757 -- \nHM-11\n\uff0c\u57fa\u4e8e\u652f\u6301 AT \u6307\u4ee4\u7684 TI CC2540 \u82af\u7247\u3002\u4f5c\u4e3a Grove \u4ea7\u54c1\uff0cGrove - BLE \u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u901a\u8fc7 Base Shield \u4e0e Arduino \u677f\u4e00\u8d77\u4f7f\u7528\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u84dd\u7259\u7248\u672c\n\n\nBluetooth Specification V4.0 BLE\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u7387\n\n\n2.4GHz ISM band\n\n\n\n\n\n\n\u8c03\u5236\u65b9\u6cd5\n\n\nGFSK(Gaussian Frequency Shift Keying)\n\n\n\n\n\n\n\u5c04\u9891\u529f\u7387\n\n\n-23dbm, -6dbm, 0dbm, 6dbm, can modify through AT Command AT+POWE\n\n\n\n\n\n\n\u4f20\u8f93\u901f\u7387\n\n\nAsynchronous: 6K Bytes, Synchronous: 6K Bytes\n\n\n\n\n\n\n\u7075\u654f\u5ea6\n\n\n\u2264-84dBm at 0.1% BER\n\n\n\n\n\n\n\u5b89\u5168\u6027\n\n\n\u8ba4\u8bc1\u4e0e\u52a0\u5bc6\n\n\n\n\n\n\nService\n\n\nCentral \n Peripheral UUID FFE0,FFE1\n\n\n\n\n\n\n\u7535\u6e90\n\n\n3.3v - 5v\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n\u20135 ~ +65 \u6444\u6c0f\u5ea6\n\n\n\n\n\n\n\u5927\u5c0f\u5c3a\u5bf8\n\n\n40cm x 20cm\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n 10 mA\n\n\n\n\n\n\nSourcing Current\n\n\n 20 mA\n\n\n\n\n\n\n\u7761\u7720\u7535\u6d41\n\n\n 1 mA\n\n\n\n\n\n\n\n\n\n\nAttention\n\nHM-11 \u7684\u7535\u6e90\u662f 3.3v\uff0c\u800c Grove - BLE \u662f 3.3V \u81f3 5V\u3002\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb [Grove System](\n\n\n\n\nhttp://seeed.wiki/Grove_System/\n)\n\n\nPlatforms Supported\n\n\n\n\n\u5f15\u51fa\u7ebf\n\n\nGrove \u6709\u56db\u6839\u7ebf\u7f06 : GND, VCC, RX, TX\u3002\n\n\n\u8bbe\u8ba1\u7279\u70b9\n\n\n\u6211\u4eec\u4f7f\u7528 TD6810 \u82af\u7247\u4f5c\u4e3a\u7a33\u538b\u5668\uff0c\u6240\u4ee5\u4f9b\u7535\u8303\u56f4\u662f 3.3v \u81f3 5v\u3002 \u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u7535\u5e73\u8f6c\u6362\u7535\u8def\uff0c\u786e\u4fdd\u6570\u636e\u4f20\u8f93\u7684\u51c6\u786e\u6027\u3002\n\n\nAT \u6307\u4ee4\u96c6\n\n\n1\uff09Query module address (\u67e5\u8be2\u6a21\u5757\u5730\u5740)\n\n\nSend\uff1a AT+ADDR?\n\n\nReceive\uff1aOK+LADD:address\n\n\n2\uff09 Query baud rate (\u67e5\u8be2\u6ce2\u7279\u7387)\n\n\nSend\uff1aAT+BAUD?\n\n\nReceive\uff1aOK+Get:[para1]\n\n\nRange\uff1a 0~8; 0--9600\uff0c1--19200\uff0c2--38400\uff0c3--57600\uff0c4--115200\uff0c5--4800\uff0c6--2400\uff0c7--1200\uff0c8--230400\n\n\nDefault: 0--9600.\n\n\nSet baud rate (\u8bbe\u7f6e\u6ce2\u7279\u7387)\n\n\nSend\uff1aAT+BAUD[para1]\n\n\nReceive\uff1aOK+Set:[para1]\n\n\nEx.\uff1aSend \uff1aAT+BAUD1 \uff0cReceive\uff1aOK+Set:1. The Baud rate has been set to 19200\n\n\n\n\nNote\n\n\u5982\u679c\u8bbe\u7f6e\u4e3a 7\uff0c\u4e0b\u6b21\u4e0a\u7535\u540e\uff0c\u6a21\u5757\u5c06\u4e0d\u652f\u6301\u4efb\u4f55 AT \u6307\u4ee4\uff0c\u76f4\u5230 PIO0 \u88ab\u6309\u4e0b\uff0c\u6a21\u5757\u4f1a\u5c06\u6ce2\u7279\u7387\u6539\u4e3a 9600\u3002\n\n\n\n\n3\uff09 Try connect an address (\u5c1d\u8bd5\u8fde\u63a5\u4e00\u4e2a\u5730\u5740)\n\n\nSend\uff1aAT+CON[para1]\n\n\nReceive\uff1aOK+CONN[para2]\n\n\nRange \uff1aA,E,F\n\n\nEx.\uff1aTry to connect an device which MAC address is 00:17:EA:09:09:09\n\n\nSend: AT+CON0017EA090909\n\n\nMay receive a reply: OK+CONNA \n Accept request, connecting\u00a0; OK+CONNE \n Connect error\u00a0; OK+CONN \n Connected , if AT+NOTI1 is setup\u00a0; OK+CONNF \n Connect Failed , After 10 seconds\n\n\n\n\nNote\n\n\u53ea\u4f7f\u7528\u4e2d\u5fc3\u89d2\u8272\u3002\u5982\u679c\u8fdc\u7a0b\u8bbe\u5907\u5df2\u7ecf\u8fde\u63a5\u5230\u5176\u4ed6\u8bbe\u5907\u6216\u5173\u95ed\uff0c\u5927\u7ea6 10 \u79d2\u540e\u4f1a\u6536\u5230 \u201cOK + CONNF\u201d\u3002\n\n\n\n\n4\uff09 Clear Last Connected device address (\u6e05\u9664\u4e0a\u6b21\u8fde\u63a5\u7684\u8bbe\u5907\u5730\u5740)\n\n\nSend\uff1aAT+CLEAR\n\n\nReceive\uff1aOK+CLEAR\n\n\n5\uff09 Query Module Work Mode (\u67e5\u8be2\u6a21\u5757\u5de5\u4f5c\u6a21\u5f0f)\n\n\nSend\uff1aAT+MODE?\n\n\nReceive\uff1aOK+Get:[para]\n\n\nRange\uff1a 0~2;\n\n\n0--Transmission Mode, 1--PIO collection Mode + Mode 0, 2--Remote Control Mode + Mode 0 .\n\n\nDefault: 0\n\n\nSet Module Work Mode (\u8bbe\u7f6e\u6a21\u5757\u5de5\u4f5c\u6a21\u5f0f)\n\n\nSend\uff1aAT+MODE[]\n\n\nReceive\uff1aOK+Set:[para]\n\n\n6\uff09 Query Module name (\u67e5\u8be2\u6a21\u5757\u540d\u79f0)\n\n\nSend\uff1aAT+NAME?\n\n\nReceive\uff1aOK+NAME[para1]\n\n\nSet Module name (\u8bbe\u7f6e\u6a21\u5757\u540d\u79f0)\n\n\nSend\uff1aAT+NAME[para1]\n\n\nReceive\uff1aOK+Set:[para1]\n\n\nEx.\uff1aSend: AT+NAMESeeed\uff0c Receive\u00a0: OK+Set:Seeed\n\n\n\n\nNote\n\n\u4e0b\u6b21\u4e0a\u7535\u540e\u540d\u79f0\u4f1a\u6539\u53d8\u3002\n\n\n\n\n7\uff09 Query Pin Code (\u67e5\u8be2\u5f15\u811a\u53f7)\n\n\nSend\uff1aAT+PASS?\n\n\nReceive\uff1aOK+PASS:[para1]\n\n\nRange\u00a0: 000000~999999.\n\n\nDefault\u00a0: 000000.\n\n\nSet Pin Code (\u8bbe\u7f6e\u5f15\u811a\u53f7)\n\n\nSend: AT+PASS[para1]\n\n\nReceive\uff1aOK+Set:[para1]\n\n\n8\uff09 Restore all setup value to factory setup (\u5c06\u6240\u6709\u8bbe\u7f6e\u503c\u6062\u590d\u5230\u51fa\u5382\u8bbe\u7f6e)\n\n\nSend\uff1aAT+RENEW\n\n\nReceive\uff1aOK+RENEW\n\n\n9\uff09 Restart module (\u91cd\u65b0\u542f\u52a8\u6a21\u5757)\n\n\nSend\uff1aAT+RESET\n\n\nReceive\uff1aOK+RESET\n\n\n10\uff09Query Master and Slaver Role (\u67e5\u8be2\u4e3b\u4ece\u89d2\u8272)\n\n\nSend\uff1aAT+ROLE[para1]\n\n\nReceive\uff1aOK+Set:[para1]\n\n\nRange\u00a0: 0~1;\n\n\n0--Peripheral\u00a0: 1--Central\u00a0: Default: 0.\n\n\n\u5173\u4e8e AT \u6307\u4ee4\u96c6\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003 BLE \u6a21\u5757\u7684\u82af\u7247\u6570\u636e\u624b\u518c\u3002\n\n\nSoftwareSerial \u901a\u4fe1\n\n\n\n\nGrove - BLE \u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u8bbe\u5907\u6216\u4ece\u8bbe\u5907\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u6f14\u793a\u7a0b\u5e8f\u4f7f\u7528\u3002\n\u5982\u679c\u60a8\u8981\u4f7f\u7528\u4ee5\u4e0b SoftwareSerial \u7a0b\u5e8f\uff0c\u8bf7\u53c2\u8003\u4e0a\u56fe\u4e2d\u7684\u8fde\u63a5\u65b9\u5f0f\u3002 TX\nD2, RX\nD3\u3002\n\n\n\u6253\u5f00 Arduino IDE\uff0c\u590d\u5236\u4e0b\u9762\u7684\u7a0b\u5e8f\u5e76\u4e0a\u4f20\u5230 Arduino/Seeeduino \u677f\u4e0a\u3002\u7136\u540e\u4e24\u4e2a BLE \u6a21\u5757\u53ef\u4ee5\u76f8\u4e92\u901a\u4fe1\u3002\n\n\nDemo\u00a0: BLE Slave\n\n\n    #include \nSoftwareSerial.h\n   //Software Serial Port\n    #define RxD 2\n    #define TxD 3\n\n    #define DEBUG_ENABLED  1\n\n    SoftwareSerial BLE(RxD,TxD);\n\n    void setup()\n    {\n      Serial.begin(9600);\n      pinMode(RxD, INPUT);\n      pinMode(TxD, OUTPUT);\n      setupBleConnection();\n\n    }\n\n    void loop()\n    {\n      char recvChar;\n      while(1){\n        if(BLE.available()){//check if there\ns any data sent from the remote BLE\n          recvChar = BLE.read();\n          Serial.print(recvChar);\n        }\n        if(Serial.available()){//check if there\ns any data sent from the local serial terminal, you can add the other applications here\n          recvChar  = Serial.read();\n          BLE.print(recvChar);\n        }\n      }\n    }\n\n    void setupBleConnection()\n    {\n      BLE.begin(9600); //Set BLE BaudRate to default baud rate 9600\n      BLE.print(\nAT+CLEAR\n); //clear all previous setting\n      BLE.print(\nAT+ROLE0\n); //set the bluetooth name as a slaver\n      BLE.print(\nAT+SAVE1\n);  //don\nt save the connect information\n    }\n\n\n\n\nDemo\u00a0: BLE Master\n\n\n    #include \nSoftwareSerial.h\n   //Software Serial Port\n    #define RxD 2\n    #define TxD 3\n\n    #define DEBUG_ENABLED  1\n\n    SoftwareSerial BLE(RxD,TxD);\n\n    void setup()\n    {\n      Serial.begin(9600);\n      pinMode(RxD, INPUT);\n      pinMode(TxD, OUTPUT);\n      setupBleConnection();\n\n    }\n\n    void loop()\n    {\n      char recvChar;\n      while(1){\n        if(BLE.available()){//check if there\ns any data sent from the remote BLE\n          recvChar = BLE.read();\n          Serial.print(recvChar);\n        }\n        if(Serial.available()){//check if there\ns any data sent from the local serial terminal, you can add the other applications here\n          recvChar  = Serial.read();\n          BLE.print(recvChar);\n        }\n      }\n    }\n\n    void setupBleConnection()\n    {\n      BLE.begin(9600); //Set BLE BaudRate to default baud rate 9600\n      BLE.print(\nAT+CLEAR\n); //clear all previous setting\n      BLE.print(\nAT+ROLE1\n); //set the bluetooth name as a master\n      BLE.print(\nAT+SAVE1\n);  //don\nt save the connect information\n    }\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nSchematic\n\n\n\n\n\n\n[\u6570\u636e\u624b\u518c]\n \nDatasheet of BLE module\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nBLE_apk_for_Android", 
            "title": "Grove-BLE v1"
        }, 
        {
            "location": "/Grove-BLE_v1/#_1", 
            "text": "\u9879\u76ee  \u53c2\u6570      \u84dd\u7259\u7248\u672c  Bluetooth Specification V4.0 BLE    \u5de5\u4f5c\u9891\u7387  2.4GHz ISM band    \u8c03\u5236\u65b9\u6cd5  GFSK(Gaussian Frequency Shift Keying)    \u5c04\u9891\u529f\u7387  -23dbm, -6dbm, 0dbm, 6dbm, can modify through AT Command AT+POWE    \u4f20\u8f93\u901f\u7387  Asynchronous: 6K Bytes, Synchronous: 6K Bytes    \u7075\u654f\u5ea6  \u2264-84dBm at 0.1% BER    \u5b89\u5168\u6027  \u8ba4\u8bc1\u4e0e\u52a0\u5bc6    Service  Central   Peripheral UUID FFE0,FFE1    \u7535\u6e90  3.3v - 5v    \u5de5\u4f5c\u6e29\u5ea6  \u20135 ~ +65 \u6444\u6c0f\u5ea6    \u5927\u5c0f\u5c3a\u5bf8  40cm x 20cm    \u5de5\u4f5c\u7535\u6d41   10 mA    Sourcing Current   20 mA    \u7761\u7720\u7535\u6d41   1 mA      Attention \nHM-11 \u7684\u7535\u6e90\u662f 3.3v\uff0c\u800c Grove - BLE \u662f 3.3V \u81f3 5V\u3002   Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb [Grove System](   http://seeed.wiki/Grove_System/ )", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-BLE_v1/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-BLE_v1/#_2", 
            "text": "Grove \u6709\u56db\u6839\u7ebf\u7f06 : GND, VCC, RX, TX\u3002", 
            "title": "\u5f15\u51fa\u7ebf"
        }, 
        {
            "location": "/Grove-BLE_v1/#_3", 
            "text": "\u6211\u4eec\u4f7f\u7528 TD6810 \u82af\u7247\u4f5c\u4e3a\u7a33\u538b\u5668\uff0c\u6240\u4ee5\u4f9b\u7535\u8303\u56f4\u662f 3.3v \u81f3 5v\u3002 \u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u7535\u5e73\u8f6c\u6362\u7535\u8def\uff0c\u786e\u4fdd\u6570\u636e\u4f20\u8f93\u7684\u51c6\u786e\u6027\u3002", 
            "title": "\u8bbe\u8ba1\u7279\u70b9"
        }, 
        {
            "location": "/Grove-BLE_v1/#at", 
            "text": "1\uff09Query module address (\u67e5\u8be2\u6a21\u5757\u5730\u5740)  Send\uff1a AT+ADDR?  Receive\uff1aOK+LADD:address  2\uff09 Query baud rate (\u67e5\u8be2\u6ce2\u7279\u7387)  Send\uff1aAT+BAUD?  Receive\uff1aOK+Get:[para1]  Range\uff1a 0~8; 0--9600\uff0c1--19200\uff0c2--38400\uff0c3--57600\uff0c4--115200\uff0c5--4800\uff0c6--2400\uff0c7--1200\uff0c8--230400  Default: 0--9600.  Set baud rate (\u8bbe\u7f6e\u6ce2\u7279\u7387)  Send\uff1aAT+BAUD[para1]  Receive\uff1aOK+Set:[para1]  Ex.\uff1aSend \uff1aAT+BAUD1 \uff0cReceive\uff1aOK+Set:1. The Baud rate has been set to 19200   Note \n\u5982\u679c\u8bbe\u7f6e\u4e3a 7\uff0c\u4e0b\u6b21\u4e0a\u7535\u540e\uff0c\u6a21\u5757\u5c06\u4e0d\u652f\u6301\u4efb\u4f55 AT \u6307\u4ee4\uff0c\u76f4\u5230 PIO0 \u88ab\u6309\u4e0b\uff0c\u6a21\u5757\u4f1a\u5c06\u6ce2\u7279\u7387\u6539\u4e3a 9600\u3002  3\uff09 Try connect an address (\u5c1d\u8bd5\u8fde\u63a5\u4e00\u4e2a\u5730\u5740)  Send\uff1aAT+CON[para1]  Receive\uff1aOK+CONN[para2]  Range \uff1aA,E,F  Ex.\uff1aTry to connect an device which MAC address is 00:17:EA:09:09:09  Send: AT+CON0017EA090909  May receive a reply: OK+CONNA   Accept request, connecting\u00a0; OK+CONNE   Connect error\u00a0; OK+CONN   Connected , if AT+NOTI1 is setup\u00a0; OK+CONNF   Connect Failed , After 10 seconds   Note \n\u53ea\u4f7f\u7528\u4e2d\u5fc3\u89d2\u8272\u3002\u5982\u679c\u8fdc\u7a0b\u8bbe\u5907\u5df2\u7ecf\u8fde\u63a5\u5230\u5176\u4ed6\u8bbe\u5907\u6216\u5173\u95ed\uff0c\u5927\u7ea6 10 \u79d2\u540e\u4f1a\u6536\u5230 \u201cOK + CONNF\u201d\u3002  4\uff09 Clear Last Connected device address (\u6e05\u9664\u4e0a\u6b21\u8fde\u63a5\u7684\u8bbe\u5907\u5730\u5740)  Send\uff1aAT+CLEAR  Receive\uff1aOK+CLEAR  5\uff09 Query Module Work Mode (\u67e5\u8be2\u6a21\u5757\u5de5\u4f5c\u6a21\u5f0f)  Send\uff1aAT+MODE?  Receive\uff1aOK+Get:[para]  Range\uff1a 0~2;  0--Transmission Mode, 1--PIO collection Mode + Mode 0, 2--Remote Control Mode + Mode 0 .  Default: 0  Set Module Work Mode (\u8bbe\u7f6e\u6a21\u5757\u5de5\u4f5c\u6a21\u5f0f)  Send\uff1aAT+MODE[]  Receive\uff1aOK+Set:[para]  6\uff09 Query Module name (\u67e5\u8be2\u6a21\u5757\u540d\u79f0)  Send\uff1aAT+NAME?  Receive\uff1aOK+NAME[para1]  Set Module name (\u8bbe\u7f6e\u6a21\u5757\u540d\u79f0)  Send\uff1aAT+NAME[para1]  Receive\uff1aOK+Set:[para1]  Ex.\uff1aSend: AT+NAMESeeed\uff0c Receive\u00a0: OK+Set:Seeed   Note \n\u4e0b\u6b21\u4e0a\u7535\u540e\u540d\u79f0\u4f1a\u6539\u53d8\u3002  7\uff09 Query Pin Code (\u67e5\u8be2\u5f15\u811a\u53f7)  Send\uff1aAT+PASS?  Receive\uff1aOK+PASS:[para1]  Range\u00a0: 000000~999999.  Default\u00a0: 000000.  Set Pin Code (\u8bbe\u7f6e\u5f15\u811a\u53f7)  Send: AT+PASS[para1]  Receive\uff1aOK+Set:[para1]  8\uff09 Restore all setup value to factory setup (\u5c06\u6240\u6709\u8bbe\u7f6e\u503c\u6062\u590d\u5230\u51fa\u5382\u8bbe\u7f6e)  Send\uff1aAT+RENEW  Receive\uff1aOK+RENEW  9\uff09 Restart module (\u91cd\u65b0\u542f\u52a8\u6a21\u5757)  Send\uff1aAT+RESET  Receive\uff1aOK+RESET  10\uff09Query Master and Slaver Role (\u67e5\u8be2\u4e3b\u4ece\u89d2\u8272)  Send\uff1aAT+ROLE[para1]  Receive\uff1aOK+Set:[para1]  Range\u00a0: 0~1;  0--Peripheral\u00a0: 1--Central\u00a0: Default: 0.  \u5173\u4e8e AT \u6307\u4ee4\u96c6\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003 BLE \u6a21\u5757\u7684\u82af\u7247\u6570\u636e\u624b\u518c\u3002", 
            "title": "AT \u6307\u4ee4\u96c6"
        }, 
        {
            "location": "/Grove-BLE_v1/#softwareserial", 
            "text": "Grove - BLE \u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u8bbe\u5907\u6216\u4ece\u8bbe\u5907\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u6f14\u793a\u7a0b\u5e8f\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u8981\u4f7f\u7528\u4ee5\u4e0b SoftwareSerial \u7a0b\u5e8f\uff0c\u8bf7\u53c2\u8003\u4e0a\u56fe\u4e2d\u7684\u8fde\u63a5\u65b9\u5f0f\u3002 TX D2, RX D3\u3002  \u6253\u5f00 Arduino IDE\uff0c\u590d\u5236\u4e0b\u9762\u7684\u7a0b\u5e8f\u5e76\u4e0a\u4f20\u5230 Arduino/Seeeduino \u677f\u4e0a\u3002\u7136\u540e\u4e24\u4e2a BLE \u6a21\u5757\u53ef\u4ee5\u76f8\u4e92\u901a\u4fe1\u3002  Demo\u00a0: BLE Slave      #include  SoftwareSerial.h    //Software Serial Port\n    #define RxD 2\n    #define TxD 3\n\n    #define DEBUG_ENABLED  1\n\n    SoftwareSerial BLE(RxD,TxD);\n\n    void setup()\n    {\n      Serial.begin(9600);\n      pinMode(RxD, INPUT);\n      pinMode(TxD, OUTPUT);\n      setupBleConnection();\n\n    }\n\n    void loop()\n    {\n      char recvChar;\n      while(1){\n        if(BLE.available()){//check if there s any data sent from the remote BLE\n          recvChar = BLE.read();\n          Serial.print(recvChar);\n        }\n        if(Serial.available()){//check if there s any data sent from the local serial terminal, you can add the other applications here\n          recvChar  = Serial.read();\n          BLE.print(recvChar);\n        }\n      }\n    }\n\n    void setupBleConnection()\n    {\n      BLE.begin(9600); //Set BLE BaudRate to default baud rate 9600\n      BLE.print( AT+CLEAR ); //clear all previous setting\n      BLE.print( AT+ROLE0 ); //set the bluetooth name as a slaver\n      BLE.print( AT+SAVE1 );  //don t save the connect information\n    }  Demo\u00a0: BLE Master      #include  SoftwareSerial.h    //Software Serial Port\n    #define RxD 2\n    #define TxD 3\n\n    #define DEBUG_ENABLED  1\n\n    SoftwareSerial BLE(RxD,TxD);\n\n    void setup()\n    {\n      Serial.begin(9600);\n      pinMode(RxD, INPUT);\n      pinMode(TxD, OUTPUT);\n      setupBleConnection();\n\n    }\n\n    void loop()\n    {\n      char recvChar;\n      while(1){\n        if(BLE.available()){//check if there s any data sent from the remote BLE\n          recvChar = BLE.read();\n          Serial.print(recvChar);\n        }\n        if(Serial.available()){//check if there s any data sent from the local serial terminal, you can add the other applications here\n          recvChar  = Serial.read();\n          BLE.print(recvChar);\n        }\n      }\n    }\n\n    void setupBleConnection()\n    {\n      BLE.begin(9600); //Set BLE BaudRate to default baud rate 9600\n      BLE.print( AT+CLEAR ); //clear all previous setting\n      BLE.print( AT+ROLE1 ); //set the bluetooth name as a master\n      BLE.print( AT+SAVE1 );  //don t save the connect information\n    }", 
            "title": "SoftwareSerial \u901a\u4fe1"
        }, 
        {
            "location": "/Grove-BLE_v1/#_4", 
            "text": "[Eagle\u6587\u4ef6]   Schematic    [\u6570\u636e\u624b\u518c]   Datasheet of BLE module    [\u5176\u4ed6\u8d44\u6e90]   BLE_apk_for_Android", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/", 
            "text": "Grove - Infrared Emitter \u7528\u4e8e\u901a\u8fc7\u7ea2\u5916 LED \u4f20\u8f93\u7ea2\u5916\u4fe1\u53f7\uff0c\u800c\u5728\u53e6\u4e00\u4fa7\u6709 \n\u7ea2\u5916\u63a5\u6536\u5668\n \u7528\u4e8e\u83b7\u53d6\u4fe1\u53f7\u3002\u7ea2\u5916 LED \u5c31\u50cf\u4efb\u4f55\u5176\u4ed6 LED \u4e00\u6837\uff0c\u5b83\u7684\u6ce2\u957f 940nm\u3002\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u7528\u53d1\u5c04\u5668\u6765\u4f20\u8f93\u6570\u636e\u6216\u547d\u4ee4\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4f7f\u7528 Arduino \u6a21\u62df\u9065\u63a7\u63a7\u5236\u60a8\u7684\u5bb6\u7528\u7535\u5668\u3002\u7ea2\u5916\u53d1\u5c04\u5668\u53ef\u4ee5\u4f20\u8f93 10 \u7c73\u6709\u6548\u7684\u4fe1\u53f7\u3002\u8d85\u8fc7 10 \u7c73\uff0c\u63a5\u6536\u5668\u53ef\u80fd\u65e0\u6cd5\u83b7\u5f97\u4fe1\u53f7\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u7535\u538b : 3.3-5V\n\n\n\u4fe1\u53f7\u6709\u6548\u8ddd\u79bb : 10m\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\nThe Grove - Infrared Emitter \u53d1\u9001\u6570\u636e Grove - Infrared Receiver \u63a5\u53d7\u6570\u636e\u3002\n\n\n\n\n\u5c06 Grove - Infrared Emitter \u8fde\u63a5\u5230 \nD3\n\u3002\n\n\n\u5c06 Grove - Infrared Receiver \u8fde\u63a5\u5230 \nD2\n\u3002\n\n\n\n\n\n\n\u4e0e Arduino/Seeeduino \u4e00\u8d77\u4f7f\u7528\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\n\n\n\u4e0b\u8f7d Arduino \u548c\u5b89\u88c5 Arduino \u9a71\u52a8\n\n\n\n\n\n\nSeeeduino/Arduino \u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\nIRSendRev \u5e93\n\n\n\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Seeeduino/Arduino\uff0c\u5728\u8fd9\u4e2a\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u914d\u7f6e\u8fd9\u4e2a\u5e93\u3002\n\n\n\u914d\u7f6e\u5e93\n\n\n\n\n\u4ece IRSendRev github \u9875\u9762\u4e0b\u8f7d \nlibrary code as a zip file\n\n\n\u89e3\u538b\u6587\u4ef6\u81f3 \n\u2026/arduino/libraries\n\n\n\u91cd\u547d\u540d\u89e3\u538b\u6587\u4ef6\u5939\u4e3a \"IRSendRev\"\n\n\n\u6253\u5f00 Arduino IDE\n\n\n\n\nGrove - Infrared Emitter  \u793a\u4f8b/\u5e94\u7528\n\n\n\u8fd9\u4e9b\u4f8b\u5b50\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u4f7f\u7528 Grove - Infrared Emitter \u7684\u529f\u80fd\u3002 \u60a8\u53ef\u4ee5\u5c06 Grove - Infrared Emitter \u4e0e Grove - Infrared Receiver \u7ec4\u5408\u4f7f\u7528\u3002\u5c06 IR \u53d1\u9001\u5f15\u811a\u8fde\u63a5\u5230 \nD3\n \u8fdb\u884c\u6f14\u793a\u3002\n\n\n\u63a5\u6536\n\n\n\n\nNote\n\n\u60a8\u9700\u8981\u4e00\u4e2a \nGrove - Infrared Receiver\n.\u3002\u5e76\u901a\u8fc7\u5b83\u4e0a\u4f20\u8fd9\u4e2a\u6f14\u793a\u5230\u4e3b\u677f\u3002\n\n\n\n\n\n\n\u6253\u5f00 \nFile(\u6587\u4ef6)-\nExamples(\u793a\u4f8b)-\nIRSendRev-\nexample-\nrecv\n \u67e5\u770b\u5b8c\u6574\u793a\u4f8b, \u6216\u8005\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u8349\u56fe\u3002\n\n\n\n\n\u8bf4\u660e\n :\n\u8fd9\u4e2a\u4f8b\u5b50\u5c06 IR \u63a5\u6536\u5668\u5f15\u811a\u8fde\u63a5\u5230 \nD2\n\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u901a\u8fc7\u4e32\u53e3\u7ec8\u7aef\u63a5\u6536\u5230\u7684\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5c06\u63a5\u6536\u5230\u7684\u7ea2\u5916\u6570\u636e\u5199\u5165 send.ino\uff0c\u5e76\u901a\u8fc7 Grove - Infrared Emitter \u4e0a\u4f20\u5230\u7535\u8def\u677f\u4e0a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u9065\u63a7\u5668\u7684\u6309\u94ae\u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\u3002\n\n\n\u5e94\u7528\n :\n\u60a8\u53ef\u4ee5\u901a\u8fc7 Grove - Infrared Receiver \u8bb0\u5f55\u4e0b\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u901a\u8fc7 Grove - Infrared Emitter \u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5ba4\u5185\u6e29\u5ea6\u5927\u4e8e 26 \u5ea6\u65f6\u6253\u5f00\u98ce\u6247\u5f00\u5173\u3002\n\n\n#include \nIRSendRev.h\n\n\u00a0\n#define BIT_LEN         0\n#define BIT_START_H     1\n#define BIT_START_L     2\n#define BIT_DATA_H      3\n#define BIT_DATA_L      4\n#define BIT_DATA_LEN    5\n#define BIT_DATA        6\n\u00a0\nconst int pinRecv = 2;              // ir receiver connect to D2\n\u00a0\nvoid setup()\n{\n    Serial.begin(115200);\n    IR.Init(pinRecv);\n    Serial.println(\ninit over\n);\n}\n\u00a0\nunsigned char dta[20];\n\u00a0\nvoid loop()\n{\n    if(IR.IsDta())                  // get IR data\n    {\n        IR.Recv(dta);               // receive data to dta\n\u00a0\n        Serial.println(\n+------------------------------------------------------+\n);\n        Serial.print(\nLEN = \n);\n        Serial.println(dta[BIT_LEN]);\n        Serial.print(\nSTART_H: \n);\n        Serial.print(dta[BIT_START_H]);\n        Serial.print(\n\\tSTART_L: \n);\n        Serial.println(dta[BIT_START_L]);\n\u00a0\n        Serial.print(\nDATA_H: \n);\n        Serial.print(dta[BIT_DATA_H]);\n        Serial.print(\n\\tDATA_L: \n);\n        Serial.println(dta[BIT_DATA_L]);\n\u00a0\n        Serial.print(\n\\r\\nDATA_LEN = \n);\n        Serial.println(dta[BIT_DATA_LEN]);\n\u00a0\n        Serial.print(\nDATA: \n);\n        for(int i=0; i\ndta[BIT_DATA_LEN]; i++)\n        {\n            Serial.print(\n0x\n);\n            Serial.print(dta[i+BIT_DATA], HEX);\n            Serial.print(\n\\t\n);\n        }\n        Serial.println();\n\u00a0\n        Serial.print(\nDATA: \n);\n        for(int i=0; i\ndta[BIT_DATA_LEN]; i++)\n        {\n            Serial.print(dta[i+BIT_DATA], DEC);\n            Serial.print(\n\\t\n);\n        }\n        Serial.println();\n        Serial.println(\n+------------------------------------------------------+\\r\\n\\r\\n\n);\n    }\n}\n\n\n\n\n\n\n\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u5f00\u53d1\u677f\u3002\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u7a97\u53e3\u5e76\u7b49\u5f85\u8f93\u5165\u3002\n\n\n\u4f7f\u7528\u7ea2\u5916\u9065\u63a7\u5668\u53d1\u9001\u6570\u636e\n(\u672c\u4f8b\u4f7f\u7528 MIDEA \u516c\u53f8\u7684\u98ce\u6247\u7ea2\u5916\u9065\u63a7\u5668\uff0c\u6309\u5f00/\u5173\u952e)\n\u3002\n\n\n\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7684\u6570\u636e\n\n\n\n\n\n\n\u53d1\u9001\n\n\n\n\n\u6253\u5f00 \nFile(\u6587\u4ef6)-\nExamples(\u793a\u4f8b)-\nIRSendRev-\nexample-\nsend\n \u67e5\u770b\u5b8c\u6574\u793a\u4f8b, \u6216\u8005\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u7a0b\u9875\u9762\u3002\n\n\n\n\n\u8bf4\u660e\n:\n  \u5c06 IR \u53d1\u9001\u5f15\u811a\u8fde\u63a5\u5230 \nD3\n \u8fdb\u884c\u6f14\u793a\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u901a\u8fc7 Grove - Infrared Receiver \u63a5\u6536\u5230\u7684\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u3002\u7136\u540e\u5c06\u63a5\u6536\u5230\u7684\u7ea2\u5916\u6570\u636e\u5199\u5165\u672c\u4f8b\uff0c\u5e76\u901a\u8fc7 Grove - Infrared Emitter \u4e0a\u4f20\u5230\u7535\u8def\u677f\u4e0a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u9065\u63a7\u5668\u7684\u6309\u94ae\u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\u3002\n\n\n\u5e94\u7528\n:\n\u60a8\u53ef\u4ee5\u901a\u8fc7 Grove - Infrared Receiver \u8bb0\u5f55\u4e0b\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u901a\u8fc7 Grove - Infrared Emitter \u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5ba4\u5185\u6e29\u5ea6\u5927\u4e8e 26 \u5ea6\u65f6\u6253\u5f00\u98ce\u6247\u5f00\u5173\u3002\n\n\n\n\nNote\n\n\u672c\u6f14\u793a\u4e2d\uff0c\u60a8\u5fc5\u987b\u5c06 IR \u53d1\u9001\u5f15\u811a\u8fde\u63a5\u5230 **D3**\u3002\n\n\n\n\n#include \nIRSendRev.h\n\n\u00a0\n#define BIT_LEN         0\n#define BIT_START_H     1\n#define BIT_START_L     2\n#define BIT_DATA_H      3\n#define BIT_DATA_L      4\n#define BIT_DATA_LEN    5\n#define BIT_DATA        6\n\u00a0\nconst int ir_freq = 38;                 // 38k\n\u00a0\nunsigned char dtaSend[20];\n\u00a0\nvoid dtaInit()\n{\n    dtaSend[BIT_LEN]        = 11;          // all data that needs to be sent\n    dtaSend[BIT_START_H]    = 180;         // the logic high duration of \nStart\n\n    dtaSend[BIT_START_L]    = 91;          // the logic low duration of \nStart\n\n    dtaSend[BIT_DATA_H]     = 11;          // the logic \nlong\n duration in the communication\n    dtaSend[BIT_DATA_L]     = 33;          // the logic \nshort\n duration in the communication\n\u00a0\n    dtaSend[BIT_DATA_LEN]   = 6;           // Number of data which will sent. If the number is other, you should increase or reduce dtaSend[BIT_DATA+x].\n\u00a0\n    dtaSend[BIT_DATA+0]     = 128;           // data that will sent\n    dtaSend[BIT_DATA+1]     = 127;\n    dtaSend[BIT_DATA+2]     = 192;\n    dtaSend[BIT_DATA+3]     = 63;\n    dtaSend[BIT_DATA+4]     = 192;\n    dtaSend[BIT_DATA+5]     = 63;\n}\n\u00a0\nvoid setup()\n{\n    dtaInit();\n}\n\u00a0\nvoid loop()\n{\n    IR.Send(dtaSend, 38);\n\u00a0\n    delay(2000);\n}\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-Infrared Emitter eagle files\n\n\n[\u5e93\u6587\u4ef6]\n \nIR Send and Receiver Library\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nTSAL6200 Datasheet", 
            "title": "Grove-Infrared Emitter"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#_1", 
            "text": "\u7535\u538b : 3.3-5V  \u4fe1\u53f7\u6709\u6548\u8ddd\u79bb : 10m    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#_2", 
            "text": "The Grove - Infrared Emitter \u53d1\u9001\u6570\u636e Grove - Infrared Receiver \u63a5\u53d7\u6570\u636e\u3002   \u5c06 Grove - Infrared Emitter \u8fde\u63a5\u5230  D3 \u3002  \u5c06 Grove - Infrared Receiver \u8fde\u63a5\u5230  D2 \u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#arduinoseeeduino", 
            "text": "", 
            "title": "\u4e0e Arduino/Seeeduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#_3", 
            "text": "\u4e0b\u8f7d Arduino \u548c\u5b89\u88c5 Arduino \u9a71\u52a8    Seeeduino/Arduino \u5165\u95e8\u6307\u5bfc", 
            "title": "\u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#irsendrev", 
            "text": "\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u5e93\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Seeeduino/Arduino\uff0c\u5728\u8fd9\u4e2a\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u914d\u7f6e\u8fd9\u4e2a\u5e93\u3002", 
            "title": "IRSendRev \u5e93"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#_4", 
            "text": "\u4ece IRSendRev github \u9875\u9762\u4e0b\u8f7d  library code as a zip file  \u89e3\u538b\u6587\u4ef6\u81f3  \u2026/arduino/libraries  \u91cd\u547d\u540d\u89e3\u538b\u6587\u4ef6\u5939\u4e3a \"IRSendRev\"  \u6253\u5f00 Arduino IDE", 
            "title": "\u914d\u7f6e\u5e93"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#grove-infrared-emitter", 
            "text": "\u8fd9\u4e9b\u4f8b\u5b50\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u4f7f\u7528 Grove - Infrared Emitter \u7684\u529f\u80fd\u3002 \u60a8\u53ef\u4ee5\u5c06 Grove - Infrared Emitter \u4e0e Grove - Infrared Receiver \u7ec4\u5408\u4f7f\u7528\u3002\u5c06 IR \u53d1\u9001\u5f15\u811a\u8fde\u63a5\u5230  D3  \u8fdb\u884c\u6f14\u793a\u3002", 
            "title": "Grove - Infrared Emitter  \u793a\u4f8b/\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#_5", 
            "text": "Note \n\u60a8\u9700\u8981\u4e00\u4e2a  Grove - Infrared Receiver .\u3002\u5e76\u901a\u8fc7\u5b83\u4e0a\u4f20\u8fd9\u4e2a\u6f14\u793a\u5230\u4e3b\u677f\u3002   \u6253\u5f00  File(\u6587\u4ef6)- Examples(\u793a\u4f8b)- IRSendRev- example- recv  \u67e5\u770b\u5b8c\u6574\u793a\u4f8b, \u6216\u8005\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u8349\u56fe\u3002   \u8bf4\u660e  :\n\u8fd9\u4e2a\u4f8b\u5b50\u5c06 IR \u63a5\u6536\u5668\u5f15\u811a\u8fde\u63a5\u5230  D2 \u3002\u60a8\u53ef\u4ee5\u770b\u5230\u901a\u8fc7\u4e32\u53e3\u7ec8\u7aef\u63a5\u6536\u5230\u7684\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5c06\u63a5\u6536\u5230\u7684\u7ea2\u5916\u6570\u636e\u5199\u5165 send.ino\uff0c\u5e76\u901a\u8fc7 Grove - Infrared Emitter \u4e0a\u4f20\u5230\u7535\u8def\u677f\u4e0a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u9065\u63a7\u5668\u7684\u6309\u94ae\u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\u3002  \u5e94\u7528  :\n\u60a8\u53ef\u4ee5\u901a\u8fc7 Grove - Infrared Receiver \u8bb0\u5f55\u4e0b\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u901a\u8fc7 Grove - Infrared Emitter \u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5ba4\u5185\u6e29\u5ea6\u5927\u4e8e 26 \u5ea6\u65f6\u6253\u5f00\u98ce\u6247\u5f00\u5173\u3002  #include  IRSendRev.h \n\u00a0\n#define BIT_LEN         0\n#define BIT_START_H     1\n#define BIT_START_L     2\n#define BIT_DATA_H      3\n#define BIT_DATA_L      4\n#define BIT_DATA_LEN    5\n#define BIT_DATA        6\n\u00a0\nconst int pinRecv = 2;              // ir receiver connect to D2\n\u00a0\nvoid setup()\n{\n    Serial.begin(115200);\n    IR.Init(pinRecv);\n    Serial.println( init over );\n}\n\u00a0\nunsigned char dta[20];\n\u00a0\nvoid loop()\n{\n    if(IR.IsDta())                  // get IR data\n    {\n        IR.Recv(dta);               // receive data to dta\n\u00a0\n        Serial.println( +------------------------------------------------------+ );\n        Serial.print( LEN =  );\n        Serial.println(dta[BIT_LEN]);\n        Serial.print( START_H:  );\n        Serial.print(dta[BIT_START_H]);\n        Serial.print( \\tSTART_L:  );\n        Serial.println(dta[BIT_START_L]);\n\u00a0\n        Serial.print( DATA_H:  );\n        Serial.print(dta[BIT_DATA_H]);\n        Serial.print( \\tDATA_L:  );\n        Serial.println(dta[BIT_DATA_L]);\n\u00a0\n        Serial.print( \\r\\nDATA_LEN =  );\n        Serial.println(dta[BIT_DATA_LEN]);\n\u00a0\n        Serial.print( DATA:  );\n        for(int i=0; i dta[BIT_DATA_LEN]; i++)\n        {\n            Serial.print( 0x );\n            Serial.print(dta[i+BIT_DATA], HEX);\n            Serial.print( \\t );\n        }\n        Serial.println();\n\u00a0\n        Serial.print( DATA:  );\n        for(int i=0; i dta[BIT_DATA_LEN]; i++)\n        {\n            Serial.print(dta[i+BIT_DATA], DEC);\n            Serial.print( \\t );\n        }\n        Serial.println();\n        Serial.println( +------------------------------------------------------+\\r\\n\\r\\n );\n    }\n}   \u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u5f00\u53d1\u677f\u3002  \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u7a97\u53e3\u5e76\u7b49\u5f85\u8f93\u5165\u3002  \u4f7f\u7528\u7ea2\u5916\u9065\u63a7\u5668\u53d1\u9001\u6570\u636e (\u672c\u4f8b\u4f7f\u7528 MIDEA \u516c\u53f8\u7684\u98ce\u6247\u7ea2\u5916\u9065\u63a7\u5668\uff0c\u6309\u5f00/\u5173\u952e) \u3002  \u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7684\u6570\u636e", 
            "title": "\u63a5\u6536"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#_6", 
            "text": "\u6253\u5f00  File(\u6587\u4ef6)- Examples(\u793a\u4f8b)- IRSendRev- example- send  \u67e5\u770b\u5b8c\u6574\u793a\u4f8b, \u6216\u8005\u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u65b0\u7684 Arduino \u7f16\u7a0b\u9875\u9762\u3002   \u8bf4\u660e :\n  \u5c06 IR \u53d1\u9001\u5f15\u811a\u8fde\u63a5\u5230  D3  \u8fdb\u884c\u6f14\u793a\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u901a\u8fc7 Grove - Infrared Receiver \u63a5\u6536\u5230\u7684\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u3002\u7136\u540e\u5c06\u63a5\u6536\u5230\u7684\u7ea2\u5916\u6570\u636e\u5199\u5165\u672c\u4f8b\uff0c\u5e76\u901a\u8fc7 Grove - Infrared Emitter \u4e0a\u4f20\u5230\u7535\u8def\u677f\u4e0a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u9065\u63a7\u5668\u7684\u6309\u94ae\u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\u3002  \u5e94\u7528 :\n\u60a8\u53ef\u4ee5\u901a\u8fc7 Grove - Infrared Receiver \u8bb0\u5f55\u4e0b\u9065\u63a7\u5668\u7684\u7ea2\u5916\u6570\u636e\uff0c\u7136\u540e\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u901a\u8fc7 Grove - Infrared Emitter \u53d1\u9001\u76f8\u540c\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5ba4\u5185\u6e29\u5ea6\u5927\u4e8e 26 \u5ea6\u65f6\u6253\u5f00\u98ce\u6247\u5f00\u5173\u3002   Note \n\u672c\u6f14\u793a\u4e2d\uff0c\u60a8\u5fc5\u987b\u5c06 IR \u53d1\u9001\u5f15\u811a\u8fde\u63a5\u5230 **D3**\u3002  #include  IRSendRev.h \n\u00a0\n#define BIT_LEN         0\n#define BIT_START_H     1\n#define BIT_START_L     2\n#define BIT_DATA_H      3\n#define BIT_DATA_L      4\n#define BIT_DATA_LEN    5\n#define BIT_DATA        6\n\u00a0\nconst int ir_freq = 38;                 // 38k\n\u00a0\nunsigned char dtaSend[20];\n\u00a0\nvoid dtaInit()\n{\n    dtaSend[BIT_LEN]        = 11;          // all data that needs to be sent\n    dtaSend[BIT_START_H]    = 180;         // the logic high duration of  Start \n    dtaSend[BIT_START_L]    = 91;          // the logic low duration of  Start \n    dtaSend[BIT_DATA_H]     = 11;          // the logic  long  duration in the communication\n    dtaSend[BIT_DATA_L]     = 33;          // the logic  short  duration in the communication\n\u00a0\n    dtaSend[BIT_DATA_LEN]   = 6;           // Number of data which will sent. If the number is other, you should increase or reduce dtaSend[BIT_DATA+x].\n\u00a0\n    dtaSend[BIT_DATA+0]     = 128;           // data that will sent\n    dtaSend[BIT_DATA+1]     = 127;\n    dtaSend[BIT_DATA+2]     = 192;\n    dtaSend[BIT_DATA+3]     = 63;\n    dtaSend[BIT_DATA+4]     = 192;\n    dtaSend[BIT_DATA+5]     = 63;\n}\n\u00a0\nvoid setup()\n{\n    dtaInit();\n}\n\u00a0\nvoid loop()\n{\n    IR.Send(dtaSend, 38);\n\u00a0\n    delay(2000);\n}", 
            "title": "\u53d1\u9001"
        }, 
        {
            "location": "/Grove-Infrared_Emitter/#_7", 
            "text": "[Eagle\u6587\u4ef6]   Grove-Infrared Emitter eagle files  [\u5e93\u6587\u4ef6]   IR Send and Receiver Library  [\u82af\u7247\u6570\u636e\u624b\u518c]   TSAL6200 Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Screw_Terminal/", 
            "text": ".\n\n\nGrove - Screw Terminal \uff0c\u5177\u6709\u56db\u4e2a 3.5mm \u5f15\u811a\u95f4\u8ddd\u7684\u7aef\u5b50\uff0c\u7535\u6c14\u7279\u6027\u9ad8\u8fbe 125V @ 6A\u3002\u7ec8\u7aef\u652f\u6301 30 \u5230 20AWG \u7684\u7ebf\u7f06\u3002 \u8fd9\u4e2a Grove \u6a21\u5757\u6709\u56db\u4e2a\u7aef\u53e3\uff0c\u5305\u62ec GND\uff0cVCC \u548c\u53e6\u5916\u4e24\u4e2a\u672a\u5b9a\u4e49\u7684\u7aef\u53e3\u3002\u6b64\u6a21\u5757\u901a\u5e38\u7528\u4e8e\u8fde\u63a5\u5e95\u677f\u63a5\u5730\uff0c\u5982\u5f55\u97f3\u673a\u6216\u7535\u6d8c\u4fdd\u62a4\u5668\u3002\u5efa\u7b51\u7269\u4e2d\u7684\u5927\u591a\u6570\u516c\u5171\u5e7f\u64ad\u7cfb\u7edf\u4e5f\u5c06\u5176\u7528\u4e8e\u626c\u58f0\u5668\uff0c\u6709\u65f6\u7528\u4e8e\u5176\u4ed6\u8f93\u51fa\u548c\u8f93\u5165\u7aef\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n3.5mm \u6807\u51c6\u95f4\u8ddd\u5f15\u811a\n\n\n\n\n\n\n\u80fd\u591f\u9002\u5e94\u9ad8\u7535\u6d41/\u7535\u538b\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4f60\u6709\u6ca1\u6709\u4e00\u4e2a\u7acb\u4f53\u58f0\u7cfb\u7edf\uff0c\u5176\u4e2d\u7684\u5de8\u5927\u7684\u626c\u58f0\u5668\u5fc5\u987b\u81ea\u5df1\u8fde\u63a5\uff1f\u90a3\u4e48\u4f60\u7684\u7535\u89c6\u673a\u7684\u73af\u7ed5\u58f0\u626c\u58f0\u5668\u5462\uff1f\u4f60\u8bb0\u5f97\u628a\u626c\u58f0\u5668\u8fde\u63a5\u5230\u4f60\u7684\u97f3\u54cd\u6216\u7535\u89c6\u5417\uff1f\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u65e7\u7684\u7acb\u4f53\u58f0\u7cfb\u7edf\uff0c\u5f88\u53ef\u80fd\u60a8\u7684\u626c\u58f0\u5668\u53ef\u4ee5\u7528 Grove - Screw Terminal \u8fde\u63a5\u3002\u626c\u58f0\u5668\u7684\u7535\u7ebf\u5c06\u8fde\u63a5\u5230\u7acb\u4f53\u58f0\u88c5\u7f6e\uff0c\u4e3a\u4e86\u56fa\u5b9a\u8fde\u63a5\uff0c\u60a8\u5c06\u62e7\u7d27\u7acb\u4f53\u58f0\u88c5\u7f6e\u80cc\u9762\u7684\u87ba\u4e1d\u3002\u4e00\u65e6\u7535\u7ebf\u62e7\u7d27\uff0c\u60a8\u7684\u626c\u58f0\u5668\u8fde\u63a5\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u542c\u97f3\u4e50\u4e86\u3002\n\n\n\u786c\u4ef6\u5b89\u88c5\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n\n\u5c06 Grove - Screw Terminal \u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684\u6570\u5b57 I/O \n10\n\uff0c\u7136\u540e\u5c06 \nGrove - Base Shield\n \u63d2\u5165 Arduino/Seeeduino\u3002\n\n\n\u5c06\u8bbe\u5907\u8fde\u63a5\u5230 Grove - Screw Terminal\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove - Screw Terminal.zip\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nScrew-Terminal-3.5mm", 
            "title": "Grove-Screw Terminal"
        }, 
        {
            "location": "/Grove-Screw_Terminal/#_1", 
            "text": "3.5mm \u6807\u51c6\u95f4\u8ddd\u5f15\u811a    \u80fd\u591f\u9002\u5e94\u9ad8\u7535\u6d41/\u7535\u538b", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Screw_Terminal/#_2", 
            "text": "\u4f60\u6709\u6ca1\u6709\u4e00\u4e2a\u7acb\u4f53\u58f0\u7cfb\u7edf\uff0c\u5176\u4e2d\u7684\u5de8\u5927\u7684\u626c\u58f0\u5668\u5fc5\u987b\u81ea\u5df1\u8fde\u63a5\uff1f\u90a3\u4e48\u4f60\u7684\u7535\u89c6\u673a\u7684\u73af\u7ed5\u58f0\u626c\u58f0\u5668\u5462\uff1f\u4f60\u8bb0\u5f97\u628a\u626c\u58f0\u5668\u8fde\u63a5\u5230\u4f60\u7684\u97f3\u54cd\u6216\u7535\u89c6\u5417\uff1f\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u65e7\u7684\u7acb\u4f53\u58f0\u7cfb\u7edf\uff0c\u5f88\u53ef\u80fd\u60a8\u7684\u626c\u58f0\u5668\u53ef\u4ee5\u7528 Grove - Screw Terminal \u8fde\u63a5\u3002\u626c\u58f0\u5668\u7684\u7535\u7ebf\u5c06\u8fde\u63a5\u5230\u7acb\u4f53\u58f0\u88c5\u7f6e\uff0c\u4e3a\u4e86\u56fa\u5b9a\u8fde\u63a5\uff0c\u60a8\u5c06\u62e7\u7d27\u7acb\u4f53\u58f0\u88c5\u7f6e\u80cc\u9762\u7684\u87ba\u4e1d\u3002\u4e00\u65e6\u7535\u7ebf\u62e7\u7d27\uff0c\u60a8\u7684\u626c\u58f0\u5668\u8fde\u63a5\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u542c\u97f3\u4e50\u4e86\u3002  \u786c\u4ef6\u5b89\u88c5\u6b65\u9aa4\u5982\u4e0b\uff1a  \u5c06 Grove - Screw Terminal \u8fde\u63a5\u5230  Grove - Base Shield  \u7684\u6570\u5b57 I/O  10 \uff0c\u7136\u540e\u5c06  Grove - Base Shield  \u63d2\u5165 Arduino/Seeeduino\u3002  \u5c06\u8bbe\u5907\u8fde\u63a5\u5230 Grove - Screw Terminal\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Screw_Terminal/#_3", 
            "text": "[Eagle\u6587\u4ef6]   Grove - Screw Terminal.zip    [\u5176\u4ed6\u8d44\u6e90]   Screw-Terminal-3.5mm", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/", 
            "text": "The Grove - Slide Potentiometer \u6a21\u5757\u5185\u6709\u4e00\u4e2a\u6700\u5927\u963b\u503c\u4e3a 10K\u03a9 \u7684\u7ebf\u6027\u53ef\u53d8\u7535\u963b\uff0c\u5f53\u60a8\u628a\u63a7\u5236\u6746\u4ece\u4e00\u7aef\u6ed1\u5230\u53e6\u5916\u4e00\u7aef\uff0c\u8f93\u51fa\u7535\u538b\u503c\u5728 0 \u5230\u8f93\u5165\u7684 VCC \u4e4b\u95f4\u53d8\u5316\u3002\u5b83\u901a\u8fc7\u6807\u51c6\u56db\u7ebf Grove \u7ebf\u7f06\u8fde\u63a5\u5230\u5176\u4ed6 Grove \u6a21\u5757\uff0c\u5176\u4e2d 3 \u6839\u5206\u522b\u8fde\u5230\u4e86 \nOUT\n (\u5f15\u811a \n1\n), \nVcc\n (\u5f15\u811a \n3\n) \u548c \nGND\n (\u5f15\u811a \n4\n)\uff0c\u5269\u4e0b\u7684\u90a3\u6839\u7ebf(\u5f15\u811a \n2\n)\u8fde\u5230\u4e86\u7eff\u8272\u7684 LED \u706f\u4e0a\uff0c\u53ef\u4ee5\u7528\u5b83\u6765\u8868\u793a\u7535\u4f4d\u8ba1\u963b\u503c\u7684\u53d8\u5316\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u6ed1\u52a8\u957f\u5ea6 30mm\n\n\n\u963b\u503c\u7ebf\u6027\u53d8\u5316\n\n\n\u901a\u7528 Grove \u63a5\u53e3\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f9b\u60a8\u53c2\u8003\u7684\u9879\u76ee\n\n\n\n\n\n\n\n\nArduino BoomBox\n\n\nArduino BeatBox\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u5236\u4f5c!\n\n\n\u70b9\u51fb\u5236\u4f5c!\n\n\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\n\n\n\n\u7535\u538b (\u76f4\u6d41)\n\n\n\n\n3.3V\n\n\n\n\n5.0V\n\n\n\n\n30V\n\n\n\n\n\n\n\n\n\u7535\u6d41\n\n\n\n\n-\n\n\n\n\n-\n\n\n\n\n30mA\n\n\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n\n\n24mm x60mm\n\n\n\n\n\n\n\n\n\u51c0\u91cd\n\n\n\n\n8.6g\n\n\n\n\n\n\n\n\n\u5f80\u590d\u8fd0\u52a8\u5bff\u547d\n\n\n\n\n\n15,000 cycles\n\n\n\n\n\n\n\n\n\u603b\u7535\u963b\n\n\n\n\n10K\u03a9\n\n\n\n\n\n\n\n\n\u884c\u7a0b\u957f\u5ea6\n\n\n\n\n30mm\n\n\n\n\n\n\n\n\n\u603b\u7535\u963b\u5bb9\u5dee\n\n\n\n\n+/- 20%\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7535\u963b\n\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff0cGrove - Slide Potentiometer \u53ef\u7528\u4f5c\u4efb\u4f55 MCU \u63a7\u5236\u6216\u72ec\u7acb\u9879\u76ee\u4e2d\u7684\u6ed1\u52a8\u7535\u4f4d\u8ba1\u3002\n\n\n\n\u5355\u72ec\u4f7f\u7528\n\n\n\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4f7f\u6784\u5efa\u7528\u6b64\u6a21\u5757\u4f46\u4e0d\u4f7f\u7528\u4efb\u4f55\u5fae\u63a7\u5236\u5668\u677f\u7684 Grove \u7535\u8def :\n\n\n\n\n\u5c06 Grove - Slide Potentiometer \u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u5165\u7aef (\u7535\u6e90\u6a21\u5757\u5de6\u4fa7)\u3002\u5728\u7535\u8def\u7684\u8f93\u51fa\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u7528\u6237\u754c\u9762\u6a21\u5757 (Grove - Red LED, Grove - LED String Light, Grove - Mini Fan, Grove - Buzzer, Grove - Recorder etc)\u3002\n\n\n\u5b8c\u6210\u540e\u91cd\u542f\u7535\u8def\u3002\n\n\n\n\nGrove - Slide Potentiometer \u6a21\u5757\u73b0\u5728\u53ef\u4ee5\u7528\u6765\u89e6\u53d1\u8f93\u51fa\u3002\u4f8b\u5982 :\n\n\n\n\n\u5f53\u4e0e Grove - Red LED \u8f93\u51fa\u6a21\u5757\u914d\u5408\u4f7f\u7528\u65f6\uff0c\u8bf7\u6ce8\u610f\u968f\u7740\u6ed1\u5757\u4ece GND \u79fb\u52a8\u5230 Vcc\uff0cLED\u7684\u4eae\u5ea6\u4f1a\u589e\u52a0\u3002\u5728Vcc\u65f6\uff0c\u7535\u963b\u503c\u6700\u5c0f\uff0cLED\u6700\u4eae\u3002 Grove - Slide Potentiometer \u4e0e Grove - LED String Light \u6a21\u5757\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u53ef\u4ee5\u770b\u5230\u76f8\u540c\u7684\u73b0\u8c61 : \u901a\u8fc7\u5c06\u6ed1\u5757\u6ed1\u5411 Vcc \u65bd\u52a0\u7684\u7535\u538b\u8d8a\u591a\uff0cLED \u5c31\u8d8a\u4eae\u3002\n\n\n\u540c\u6837\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Grove - Slide Potentiometer \u6765\u6539\u53d8 Grove - Mini Fan \u7684\u901f\u5ea6\u6216 Grove - Buzzer \u6a21\u5757\u53d1\u58f0\u7684\u9891\u7387\n\n\n\n\n\n\n\n\n\u5728\u9009\u62e9\u7535\u6e90\u6a21\u5757\u65b9\u9762\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Grove - USB Power \u6a21\u5757\u6216 Grove - DC Jack Power \u6a21\u5757\u6765\u6784\u5efa\u72ec\u7acb\u7684 Grove \u7535\u8def\u3002\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\n\u4f5c\u4e3a\u5206\u538b\u5668\n\n\n\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4f7f Grove - Slide Potentiometer \u6a21\u5757\u8d77\u5230\u5206\u538b\u5668\u7684\u4f5c\u7528 :\n\n\n1.1.\u5c06\u6a21\u5757\u4e0e \nArduino\n \u6216 \nSeeeduino\n \u914d\u5408\u4f7f\u7528\u65f6\uff0c\u5e76\u4f7f\u7528\u6307\u5b9a\u7684 Grove \u63a5\u53e3(\u4f8b\u5982\u6a21\u62df\u7aef\u53e3 \nA0\n\uff0c\u5982\u4e0b\u6240\u793a)\u5c06 Grove - Slide Potentiometer \u6a21\u5757\u8fde\u63a5\u5230 Grove - Base Shield\u3002\n\n\n\n\n2.\u901a\u8fc7 USB \u7ebf\u7f06\u5c06 MCU \u63a7\u5236\u677f\u8fde\u63a5\u5230 PC\u3002\n\n\n3.\u4e0a\u4f20\u5982\u4e0b\u4ee3\u7801\u3002\n\n\nint adcPin = A0; // select the input pin for the potentiometer\nint ledPin = A1; // select the pin for the LED\nint adcIn = 0;   // variable to store the value coming from the sensor\nvoid setup()\n{\n    Serial.begin(9600); // init serial to 9600b/s\n    pinMode(ledPin, OUTPUT); // set ledPin to OUTPUT\n    Serial.println(\nSliding Potentiometer Test Code!!\n);\n}\nvoid loop()\n{\n    // read the value from the sensor:\n    adcIn = analogRead(adcPin);\n    if(adcIn \ngt;= 500) digitalWrite(ledPin,HIGH);  // if adc in \ngt; 500, led light\n    else digitalWrite(ledPin, LOW);\n    Serial.println(adcIn);\n    delay(100);\n}\n\n\n\n\n4.\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u3002\u53ef\u4ee5\u770b\u5230\u6765\u81ea ADC \u7684\u4e00\u4e9b\u6570\u636e\u3002\n\n\n\n\n5.\u4f7f\u63a7\u5236\u6746\u5f80\u590d\u8fd0\u52a8\uff0c\u4e32\u53e3\u6570\u636e\u5c06\u76f8\u5e94\u5730\u6539\u53d8\u3002\u5f53\u8f93\u51fa\u7535\u963b\u8d85\u8fc7\u67d0\u4e2a\u9884\u8bbe\u503c\u65f6\uff0c\u677f\u8f7d LED \u6307\u793a\u706f\u4f1a\u4eae\u8d77\u3002\n\n\n\u4f5c\u4e3a HID \u8bbe\u5907\n\n\n\u6ed1\u52a8\u7535\u4f4d\u5668\u662f\u6709\u6548\u7684\u4eba\u673a\u4ea4\u4e92\u8bbe\u5907 (HID)\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u5728\u4f8b\u5982\u65e0\u7ebf\u7535\u9065\u63a7\u73a9\u5177\u8f66\u7684\u65e0\u7ebf\u7535\u63a7\u5236\u5668\u4e2d\u3002\u4e0b\u9762\u7684\u56fe\u7247\u663e\u793a\u4e86\u63a7\u5236\u9762\u677f\u4e0a\u7684\u4e24\u4e2a Grove - Slide Potentiometer - \u4e00\u4e2a\u63a7\u5236\u5de6\u8f6e\u7684\u901f\u5ea6\uff0c\u53e6\u4e00\u4e2a\u63a7\u5236\u53f3\u8f6e\u7684\u901f\u5ea6\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u66f4\u6539\u4e24\u4e2a\u7535\u673a\u7684\u901f\u5ea6\u5e76\u89c2\u5bdf\u73b0\u8c61\u3002\u60a8\u4f1a\u770b\u5230\uff0c\u5982\u679c\u60a8\u8ba9\u53f3\u4fa7\u8f66\u8f6e\u6bd4\u5de6\u4fa7\u8f66\u8f6e\u65cb\u8f6c\u5f97\u5feb\uff0c\u8f66\u5b50\u4f1a\u5411\u53f3\u8f6c\uff1b\u800c\u5982\u679c\u60a8\u8ba9\u5de6\u4fa7\u8f66\u8f6e\u6bd4\u53f3\u4fa7\u8f66\u8f6e\u65cb\u8f6c\u5f97\u5feb\uff0c\u8f66\u5b50\u4f1a\u5411\u5de6\u8f6c\u3002\n\n\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.\n\n\n2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \nhere\n\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi \u63d2\u53e3 \nA0\n\u3002\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\nnano grove_slide_potentiometer.py   # \nCtrl+x\n to exit #\n\n\n\n\n\nimport time\nimport grovepi\n\n# Connect the Grove Slide Potentiometer to analog port A0\n# OUT,LED,VCC,GND\nslide = 0   # pin 1 (yellow wire)\n\n# The device has an onboard LED accessible as pin 2 on port A0\n# OUT,LED,VCC,GND\nled = 1     # pin 2 (white wire)\n\ngrovepi.pinMode(slide,\nINPUT\n)\ngrovepi.pinMode(led,\nOUTPUT\n)\ntime.sleep(1)\n\nwhile True:\n    try:\n        # Read sensor value from potentiometer\n        sensor_value = grovepi.analogRead(slide)\n\n        # Illuminate onboard LED\n        if sensor_value \n 500:\n            grovepi.digitalWrite(led,1)\n        else:\n            grovepi.digitalWrite(led,0)\n\n        print \nsensor_value =\n, sensor_value\n\n    except IOError:\n        print \nError\n\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\nsudo python grove_slide_potentiometer.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nSliding Potentiometer Eagle File\n\n\n[\u539f\u7406\u56fePDF]\n \nSliding Potentiometer in PDF\n\n\n[\u6570\u636e\u624b\u518c]\n \nSliding Potentiometer datasheet", 
            "title": "Grove-Slide Potentiometer"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#_1", 
            "text": "\u6ed1\u52a8\u957f\u5ea6 30mm  \u963b\u503c\u7ebf\u6027\u53d8\u5316  \u901a\u7528 Grove \u63a5\u53e3    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#_2", 
            "text": "\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f9b\u60a8\u53c2\u8003\u7684\u9879\u76ee     Arduino BoomBox  Arduino BeatBox          \u70b9\u51fb\u5236\u4f5c!  \u70b9\u51fb\u5236\u4f5c!", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#_3", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c    \n\u7535\u538b (\u76f4\u6d41)  \n3.3V  \n5.0V  \n30V    \n\u7535\u6d41  \n-  \n-  \n30mA    \n\u5c3a\u5bf8  \n24mm x60mm    \n\u51c0\u91cd  \n8.6g    \n\u5f80\u590d\u8fd0\u52a8\u5bff\u547d   15,000 cycles    \n\u603b\u7535\u963b  \n10K\u03a9    \n\u884c\u7a0b\u957f\u5ea6  \n30mm    \n\u603b\u7535\u963b\u5bb9\u5dee  \n+/- 20%", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#_4", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#_5", 
            "text": "\u5982\u4e0b\u56fe\u6240\u793a\uff0cGrove - Slide Potentiometer \u53ef\u7528\u4f5c\u4efb\u4f55 MCU \u63a7\u5236\u6216\u72ec\u7acb\u9879\u76ee\u4e2d\u7684\u6ed1\u52a8\u7535\u4f4d\u8ba1\u3002", 
            "title": "\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7535\u963b"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#_6", 
            "text": "\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4f7f\u6784\u5efa\u7528\u6b64\u6a21\u5757\u4f46\u4e0d\u4f7f\u7528\u4efb\u4f55\u5fae\u63a7\u5236\u5668\u677f\u7684 Grove \u7535\u8def :   \u5c06 Grove - Slide Potentiometer \u6a21\u5757\u8fde\u63a5\u5230\u7535\u8def\u7684\u8f93\u5165\u7aef (\u7535\u6e90\u6a21\u5757\u5de6\u4fa7)\u3002\u5728\u7535\u8def\u7684\u8f93\u51fa\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u7cfb\u5217\u7528\u6237\u754c\u9762\u6a21\u5757 (Grove - Red LED, Grove - LED String Light, Grove - Mini Fan, Grove - Buzzer, Grove - Recorder etc)\u3002  \u5b8c\u6210\u540e\u91cd\u542f\u7535\u8def\u3002   Grove - Slide Potentiometer \u6a21\u5757\u73b0\u5728\u53ef\u4ee5\u7528\u6765\u89e6\u53d1\u8f93\u51fa\u3002\u4f8b\u5982 :   \u5f53\u4e0e Grove - Red LED \u8f93\u51fa\u6a21\u5757\u914d\u5408\u4f7f\u7528\u65f6\uff0c\u8bf7\u6ce8\u610f\u968f\u7740\u6ed1\u5757\u4ece GND \u79fb\u52a8\u5230 Vcc\uff0cLED\u7684\u4eae\u5ea6\u4f1a\u589e\u52a0\u3002\u5728Vcc\u65f6\uff0c\u7535\u963b\u503c\u6700\u5c0f\uff0cLED\u6700\u4eae\u3002 Grove - Slide Potentiometer \u4e0e Grove - LED String Light \u6a21\u5757\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u53ef\u4ee5\u770b\u5230\u76f8\u540c\u7684\u73b0\u8c61 : \u901a\u8fc7\u5c06\u6ed1\u5757\u6ed1\u5411 Vcc \u65bd\u52a0\u7684\u7535\u538b\u8d8a\u591a\uff0cLED \u5c31\u8d8a\u4eae\u3002  \u540c\u6837\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Grove - Slide Potentiometer \u6765\u6539\u53d8 Grove - Mini Fan \u7684\u901f\u5ea6\u6216 Grove - Buzzer \u6a21\u5757\u53d1\u58f0\u7684\u9891\u7387     \u5728\u9009\u62e9\u7535\u6e90\u6a21\u5757\u65b9\u9762\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Grove - USB Power \u6a21\u5757\u6216 Grove - DC Jack Power \u6a21\u5757\u6765\u6784\u5efa\u72ec\u7acb\u7684 Grove \u7535\u8def\u3002", 
            "title": "\u5355\u72ec\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#arduino", 
            "text": "", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#_7", 
            "text": "\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4f7f Grove - Slide Potentiometer \u6a21\u5757\u8d77\u5230\u5206\u538b\u5668\u7684\u4f5c\u7528 :  1.1.\u5c06\u6a21\u5757\u4e0e  Arduino  \u6216  Seeeduino  \u914d\u5408\u4f7f\u7528\u65f6\uff0c\u5e76\u4f7f\u7528\u6307\u5b9a\u7684 Grove \u63a5\u53e3(\u4f8b\u5982\u6a21\u62df\u7aef\u53e3  A0 \uff0c\u5982\u4e0b\u6240\u793a)\u5c06 Grove - Slide Potentiometer \u6a21\u5757\u8fde\u63a5\u5230 Grove - Base Shield\u3002   2.\u901a\u8fc7 USB \u7ebf\u7f06\u5c06 MCU \u63a7\u5236\u677f\u8fde\u63a5\u5230 PC\u3002  3.\u4e0a\u4f20\u5982\u4e0b\u4ee3\u7801\u3002  int adcPin = A0; // select the input pin for the potentiometer\nint ledPin = A1; // select the pin for the LED\nint adcIn = 0;   // variable to store the value coming from the sensor\nvoid setup()\n{\n    Serial.begin(9600); // init serial to 9600b/s\n    pinMode(ledPin, OUTPUT); // set ledPin to OUTPUT\n    Serial.println( Sliding Potentiometer Test Code!! );\n}\nvoid loop()\n{\n    // read the value from the sensor:\n    adcIn = analogRead(adcPin);\n    if(adcIn  gt;= 500) digitalWrite(ledPin,HIGH);  // if adc in  gt; 500, led light\n    else digitalWrite(ledPin, LOW);\n    Serial.println(adcIn);\n    delay(100);\n}  4.\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u3002\u53ef\u4ee5\u770b\u5230\u6765\u81ea ADC \u7684\u4e00\u4e9b\u6570\u636e\u3002   5.\u4f7f\u63a7\u5236\u6746\u5f80\u590d\u8fd0\u52a8\uff0c\u4e32\u53e3\u6570\u636e\u5c06\u76f8\u5e94\u5730\u6539\u53d8\u3002\u5f53\u8f93\u51fa\u7535\u963b\u8d85\u8fc7\u67d0\u4e2a\u9884\u8bbe\u503c\u65f6\uff0c\u677f\u8f7d LED \u6307\u793a\u706f\u4f1a\u4eae\u8d77\u3002", 
            "title": "\u4f5c\u4e3a\u5206\u538b\u5668"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#hid", 
            "text": "\u6ed1\u52a8\u7535\u4f4d\u5668\u662f\u6709\u6548\u7684\u4eba\u673a\u4ea4\u4e92\u8bbe\u5907 (HID)\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u5728\u4f8b\u5982\u65e0\u7ebf\u7535\u9065\u63a7\u73a9\u5177\u8f66\u7684\u65e0\u7ebf\u7535\u63a7\u5236\u5668\u4e2d\u3002\u4e0b\u9762\u7684\u56fe\u7247\u663e\u793a\u4e86\u63a7\u5236\u9762\u677f\u4e0a\u7684\u4e24\u4e2a Grove - Slide Potentiometer - \u4e00\u4e2a\u63a7\u5236\u5de6\u8f6e\u7684\u901f\u5ea6\uff0c\u53e6\u4e00\u4e2a\u63a7\u5236\u53f3\u8f6e\u7684\u901f\u5ea6\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u66f4\u6539\u4e24\u4e2a\u7535\u673a\u7684\u901f\u5ea6\u5e76\u89c2\u5bdf\u73b0\u8c61\u3002\u60a8\u4f1a\u770b\u5230\uff0c\u5982\u679c\u60a8\u8ba9\u53f3\u4fa7\u8f66\u8f6e\u6bd4\u5de6\u4fa7\u8f66\u8f6e\u65cb\u8f6c\u5f97\u5feb\uff0c\u8f66\u5b50\u4f1a\u5411\u53f3\u8f6c\uff1b\u800c\u5982\u679c\u60a8\u8ba9\u5de6\u4fa7\u8f66\u8f6e\u6bd4\u53f3\u4fa7\u8f66\u8f6e\u65cb\u8f6c\u5f97\u5feb\uff0c\u8f66\u5b50\u4f1a\u5411\u5de6\u8f6c\u3002", 
            "title": "\u4f5c\u4e3a HID \u8bbe\u5907"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#raspberry-pi", 
            "text": "1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.  2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa  here \u3002  3.\u8fde\u63a5   \u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi \u63d2\u53e3  A0 \u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :     cd yourpath/GrovePi/Software/Python/   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b : nano grove_slide_potentiometer.py   #  Ctrl+x  to exit #   import time\nimport grovepi\n\n# Connect the Grove Slide Potentiometer to analog port A0\n# OUT,LED,VCC,GND\nslide = 0   # pin 1 (yellow wire)\n\n# The device has an onboard LED accessible as pin 2 on port A0\n# OUT,LED,VCC,GND\nled = 1     # pin 2 (white wire)\n\ngrovepi.pinMode(slide, INPUT )\ngrovepi.pinMode(led, OUTPUT )\ntime.sleep(1)\n\nwhile True:\n    try:\n        # Read sensor value from potentiometer\n        sensor_value = grovepi.analogRead(slide)\n\n        # Illuminate onboard LED\n        if sensor_value   500:\n            grovepi.digitalWrite(led,1)\n        else:\n            grovepi.digitalWrite(led,0)\n\n        print  sensor_value = , sensor_value\n\n    except IOError:\n        print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002 sudo python grove_slide_potentiometer.py", 
            "title": "\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Slide_Potentiometer/#_8", 
            "text": "[Eagle\u6587\u4ef6]   Sliding Potentiometer Eagle File  [\u539f\u7406\u56fePDF]   Sliding Potentiometer in PDF  [\u6570\u636e\u624b\u518c]   Sliding Potentiometer datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/", 
            "text": "Grove - Thumb Joystick \u662f\u4e00\u4e2a Grove \u517c\u5bb9\u6a21\u5757\uff0c\u4e0e PS2 (PlayStation 2) \u624b\u67c4\u4e0a\u7684\u64cd\u7eb5\u6746\u975e\u5e38\u76f8\u4f3c\u3002X \u8f74\u548c Y \u8f74\u662f\u4e24\u4e2a ~10k \u7535\u4f4d\u5668\uff0c\u901a\u8fc7\u4ea7\u751f\u6a21\u62df\u4fe1\u53f7\u6765\u63a7\u5236\u4e8c\u7ef4\u8fd0\u52a8\u3002\u64cd\u7eb5\u6746\u6709\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u7279\u6b8a\u7684\u5e94\u7528\u7684\u6309\u94ae\u3002\u5f53\u6a21\u5757\u5904\u4e8e\u5de5\u4f5c\u6a21\u5f0f\u65f6\uff0c\u5c06\u8f93\u51fa\u4e24\u4e2a\u6a21\u62df\u503c\uff0c\u4ee3\u8868\u4e24\u4e2a\u65b9\u5411\u3002\u4e0e\u666e\u901a\u64cd\u7eb5\u6746\u76f8\u6bd4\uff0c\u5176\u8f93\u51fa\u503c\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u8f83\u5c0f\u7684\u8303\u56f4\u5185(\u5c31\u662f 200~800)\uff0c\u53ea\u6709\u5f53\u6309\u4e0b\u65f6 X \u503c\u624d\u4f1a\u88ab\u8bbe\u7f6e\u4e3a 1023\uff0cMCU\u624d\u80fd\u68c0\u6d4b\u5230\u6309\u4e0b\u7684\u52a8\u4f5c\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u63a5\u53e3\n\n\n5V/3.3V\n\n\n\u6a21\u62df\u91cf\u8f93\u51fa\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u6e38\u620f\u63a7\u5236\u5668\n\n\n\u673a\u5668\u4eba\u8fdc\u7a0b\u63a7\u5236\n\n\n\n\nProject - 2048 Game\n\n\n\u8fd9\u662f\u4e00\u4e2a\u7531 Grove - Thumb Joystick \u7ec4\u6210\u7684 Pi \u6e38\u620f\u9879\u76ee\u3002\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u7247\u83b7\u53d6\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u9879\u76ee\u7684\u4fe1\u606f\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\u503c\n\n\n\u5178\u578b\u503c\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n4.75\n\n\n5.0\n\n\n5.25\n\n\nV\n\n\n\n\n\n\n\u8f93\u51fa\u6a21\u62df\u503c \uff08X \u5750\u6807\uff09\n\n\n206\n\n\n516\n\n\n798\n\n\n\\\n\n\n\n\n\n\n\u8f93\u51fa\u6a21\u62df\u503c \uff08Y \u5750\u6807\uff09\n\n\n203\n\n\n507\n\n\n797\n\n\n\\\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u4e0e \nArduino\n \u4e00\u8d77\u4f7f\u7528\n\n\nGrove - Thumb Joystick \u662f\u4e00\u4e2a\u8f93\u51fa\u8303\u56f4\u4ece 0 \u5230 1023 \u7684\u6a21\u62df\u4fe1\u53f7\u7684\u8bbe\u5907\u3002\u8fd9\u8981\u6c42\u6211\u4eec\u4f7f\u7528 Arduino \u7684\u6a21\u62df\u7aef\u53e3\u6765\u8bfb\u53d6\u6570\u636e\u3002\n\n\n1.\u4f7f\u7528 4 \u9488 Grove \u7ebf\u7f06\u5c06\u6a21\u5757\u8fde\u63a5\u5230 \nGrove - Base Shield\n \u7684 \nA0\n/\nA1\n\u3002\n\n\n2.\u5c06 Grove - Basic Shield \u63d2\u5165 Arduino\u3002\n\n\n3.\u4f7f\u7528 USB \u7ebf\u7f06\u5c06 Arduino \u8fde\u5230 PC\u3002\n\n\n\n4.\u590d\u5236\u5e76\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\u5230\u4e00\u4e2a\u65b0\u7684 Arduino \u7f16\u7a0b\u9875\u9762\u3002\n\n\n/*\n  Thumb Joystick demo v1.0\n  by:http://www.seeedstudio.com\n  connect the module to A0\nA1 for using;\n*/\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int sensorValue1 = analogRead(A0);\n    int sensorValue2 = analogRead(A1);\n\n    Serial.print(\nThe X and Y coordinate is:\n);\n    Serial.print(sensorValue1, DEC);\n    Serial.print(\n,\n);\n    Serial.println(sensorValue2, DEC);\n    Serial.println(\n \n);\n    delay(200);\n}\n\n\n\n\n5.\u60a8\u53ef\u4ee5\u901a\u8fc7\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u68c0\u67e5\u8f93\u51fa\u6a21\u62df\u4fe1\u53f7\u7684\u503c\u3002\n\n\n\n\n\u901a\u8fc7\u4f7f\u7528\u516c\u5f0f : R=(float)(1023-sensorValue)*10/sensorValue\uff0c\u53ef\u4ee5\u5c06 Arduino \u6a21\u62df\u7aef\u53e3\u7684\u8f93\u51fa\u503c\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u7535\u963b\u503c\u3002\n\n\n\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528\n\n\n1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.\n\n\n2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa \nhere\n\u3002\n\n\n3.\u8fde\u63a5\n\n\n\n\n\u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi \u63d2\u53e3 \nA0\n\u3002\n\n\n\n\n\n4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :\n\n    cd yourpath/GrovePi/Software/Python/\n\n\n-   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :\n\n    nano grove_thumb_joystick.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove Thumb Joystick to analog port A0\n\n    # GrovePi Port A0 uses Arduino pins 0 and 1\n    # GrovePi Port A1 uses Arduino pins 1 and 2\n    # Don\nt plug anything into port A1 that uses pin 1\n    # Most Grove sensors only use 3 of their 4 pins, which is why the GrovePi shares Arduino pins between adjacent ports\n    # If the sensor has a pin definition SIG,NC,VCC,GND, the second (white) pin is not connected to anything\n\n    # If you wish to connect two joysticks, use ports A0 and A2 (skip A1)\n\n    # Uses two pins - one for the X axis and one for the Y axis\n    # This configuration means you are using port A0\n    xPin = 0\n    yPin = 1\n    grovepi.pinMode(xPin,\nINPUT\n)\n    grovepi.pinMode(yPin,\nINPUT\n)\n\n    # The Grove Thumb Joystick is an analog device that outputs analog signal ranging from 0 to 1023\n    # The X and Y axes are two ~10k potentiometers and a momentary push button which shorts the x axis\n\n    # My joystick produces slightly different results to the specifications found on the url above\n    # I\nve listed both here:\n\n    # Specifications\n    #     Min  Typ  Max  Click\n    #  X  206  516  798  1023\n    #  Y  203  507  797\n\n    # My Joystick\n    #     Min  Typ  Max  Click\n    #  X  253  513  766  1020-1023\n    #  Y  250  505  769\n    while True:\n        try:\n            # Get X/Y coordinates\n            x = grovepi.analogRead(xPin)\n            y = grovepi.analogRead(yPin)\n\n            # Calculate X/Y resistance\n            Rx = (float)(1023 - x) * 10 / x\n            Ry = (float)(1023 - y) * 10 / y\n\n            # Was a click detected on the X axis?\n            click = 1 if x \n= 1020 else 0\n\n            print \nx =\n, x, \n y =\n, y, \n Rx =\n, Rx, \n Ry =\n, Ry, \n click =\n, click\n            time.sleep(.5)\n\n        except IOError:\n            print \nError\n\n\n\n\n5.\u8fd0\u884c\u4ee3\u7801\u3002\n\n    sudo python grove_thumb_joystick.py\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nGrove-Thumb Joystick Eagle File\n\n\n\n\n\n\n[\u539f\u7406\u56fePDF]\n \nJoystick Schematic PDF File\n\n\n\n\n\n\n[\u6570\u636e\u624b\u518c]\n \nAnalog Joystick Datasheet", 
            "title": "Grove-Thumb Joystick"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/#_1", 
            "text": "Grove \u63a5\u53e3  5V/3.3V  \u6a21\u62df\u91cf\u8f93\u51fa    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/#_2", 
            "text": "\u6e38\u620f\u63a7\u5236\u5668  \u673a\u5668\u4eba\u8fdc\u7a0b\u63a7\u5236", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/#project-2048-game", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u7531 Grove - Thumb Joystick \u7ec4\u6210\u7684 Pi \u6e38\u620f\u9879\u76ee\u3002\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u7247\u83b7\u53d6\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u9879\u76ee\u7684\u4fe1\u606f\u3002", 
            "title": "Project - 2048 Game"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/#_3", 
            "text": "\u9879\u76ee  \u6700\u5c0f\u503c  \u5178\u578b\u503c  \u6700\u5927\u503c  \u5355\u4f4d      \u5de5\u4f5c\u7535\u538b  4.75  5.0  5.25  V    \u8f93\u51fa\u6a21\u62df\u503c \uff08X \u5750\u6807\uff09  206  516  798  \\    \u8f93\u51fa\u6a21\u62df\u503c \uff08Y \u5750\u6807\uff09  203  507  797  \\", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/#_4", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/#arduino", 
            "text": "Grove - Thumb Joystick \u662f\u4e00\u4e2a\u8f93\u51fa\u8303\u56f4\u4ece 0 \u5230 1023 \u7684\u6a21\u62df\u4fe1\u53f7\u7684\u8bbe\u5907\u3002\u8fd9\u8981\u6c42\u6211\u4eec\u4f7f\u7528 Arduino \u7684\u6a21\u62df\u7aef\u53e3\u6765\u8bfb\u53d6\u6570\u636e\u3002  1.\u4f7f\u7528 4 \u9488 Grove \u7ebf\u7f06\u5c06\u6a21\u5757\u8fde\u63a5\u5230  Grove - Base Shield  \u7684  A0 / A1 \u3002  2.\u5c06 Grove - Basic Shield \u63d2\u5165 Arduino\u3002  3.\u4f7f\u7528 USB \u7ebf\u7f06\u5c06 Arduino \u8fde\u5230 PC\u3002  4.\u590d\u5236\u5e76\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\u5230\u4e00\u4e2a\u65b0\u7684 Arduino \u7f16\u7a0b\u9875\u9762\u3002  /*\n  Thumb Joystick demo v1.0\n  by:http://www.seeedstudio.com\n  connect the module to A0 A1 for using;\n*/\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    int sensorValue1 = analogRead(A0);\n    int sensorValue2 = analogRead(A1);\n\n    Serial.print( The X and Y coordinate is: );\n    Serial.print(sensorValue1, DEC);\n    Serial.print( , );\n    Serial.println(sensorValue2, DEC);\n    Serial.println(   );\n    delay(200);\n}  5.\u60a8\u53ef\u4ee5\u901a\u8fc7\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\u6765\u68c0\u67e5\u8f93\u51fa\u6a21\u62df\u4fe1\u53f7\u7684\u503c\u3002   \u901a\u8fc7\u4f7f\u7528\u516c\u5f0f : R=(float)(1023-sensorValue)*10/sensorValue\uff0c\u53ef\u4ee5\u5c06 Arduino \u6a21\u62df\u7aef\u53e3\u7684\u8f93\u51fa\u503c\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u7535\u963b\u503c\u3002", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/#raspberry-pi", 
            "text": "1.\u51c6\u5907\u4e00\u4e2a Raspberry pi \u548c\u4e00\u4e2a Grovepi \u6216 Grovepi+.  2.\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u8bf7\u9075\u5faa  here \u3002  3.\u8fde\u63a5   \u5c06\u4f20\u611f\u5668\u7528 Grove \u7ebf\u7f06\u63d2\u5165  Grovepi \u63d2\u53e3  A0 \u3002   4.\u8df3\u8f6c\u5230\u6f14\u793a\u76ee\u5f55 :     cd yourpath/GrovePi/Software/Python/ \n-   \u6f14\u793a\u4ee3\u7801\u5982\u4e0b :     nano grove_thumb_joystick.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove Thumb Joystick to analog port A0\n\n    # GrovePi Port A0 uses Arduino pins 0 and 1\n    # GrovePi Port A1 uses Arduino pins 1 and 2\n    # Don t plug anything into port A1 that uses pin 1\n    # Most Grove sensors only use 3 of their 4 pins, which is why the GrovePi shares Arduino pins between adjacent ports\n    # If the sensor has a pin definition SIG,NC,VCC,GND, the second (white) pin is not connected to anything\n\n    # If you wish to connect two joysticks, use ports A0 and A2 (skip A1)\n\n    # Uses two pins - one for the X axis and one for the Y axis\n    # This configuration means you are using port A0\n    xPin = 0\n    yPin = 1\n    grovepi.pinMode(xPin, INPUT )\n    grovepi.pinMode(yPin, INPUT )\n\n    # The Grove Thumb Joystick is an analog device that outputs analog signal ranging from 0 to 1023\n    # The X and Y axes are two ~10k potentiometers and a momentary push button which shorts the x axis\n\n    # My joystick produces slightly different results to the specifications found on the url above\n    # I ve listed both here:\n\n    # Specifications\n    #     Min  Typ  Max  Click\n    #  X  206  516  798  1023\n    #  Y  203  507  797\n\n    # My Joystick\n    #     Min  Typ  Max  Click\n    #  X  253  513  766  1020-1023\n    #  Y  250  505  769\n    while True:\n        try:\n            # Get X/Y coordinates\n            x = grovepi.analogRead(xPin)\n            y = grovepi.analogRead(yPin)\n\n            # Calculate X/Y resistance\n            Rx = (float)(1023 - x) * 10 / x\n            Ry = (float)(1023 - y) * 10 / y\n\n            # Was a click detected on the X axis?\n            click = 1 if x  = 1020 else 0\n\n            print  x = , x,   y = , y,   Rx = , Rx,   Ry = , Ry,   click = , click\n            time.sleep(.5)\n\n        except IOError:\n            print  Error   5.\u8fd0\u884c\u4ee3\u7801\u3002     sudo python grove_thumb_joystick.py", 
            "title": "\u4e0e Raspberry Pi \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-Thumb_Joystick/#_5", 
            "text": "[Eagle\u6587\u4ef6]   Grove-Thumb Joystick Eagle File    [\u539f\u7406\u56fePDF]   Joystick Schematic PDF File    [\u6570\u636e\u624b\u518c]   Analog Joystick Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove_LoRa_Radio/", 
            "text": "Grove\u662f\u7531Seeed Studio\u5f00\u53d1\u7684\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u5e73\u53f0\uff0c\u53ef\u4ee5\u7b80\u5316\u60a8\u7684\u7269\u8054\u7f51\u9879\u76ee\u3002\u6211\u4eec\u5df2\u7ecf\u5c06grove\u8fde\u63a5\u5668\u96c6\u6210\u5230Seeed\u751f\u4ea7\u7684\u5927\u591a\u6570\u4e3b\u677f\u4e0a\uff0c\u4ee5\u4f7f\u5b83\u4eec\u6210\u4e3a\u4e00\u4e2a\u7cfb\u7edf\u3002 \u8fd9\u4e00\u6b21\uff0c\u6211\u4eec\u5c06Grove\u4e0eLoRa\u76f8\u7ed3\u5408\uff0c\u4e3a\u60a8\u63d0\u4f9b\u8d85\u8fdc\u8ddd\u79bb\u65e0\u7ebf\u6a21\u5757\u3002\n\n\nGrove-LoRa Radio 433MHz\u7684\u4e3b\u8981\u529f\u80fd\u6a21\u5757\u662fRFM98\uff0c\u5b83\u662f\u4e00\u6b3e\u91c7\u7528LoRa\u8fdc\u7a0b\u8c03\u5236\u89e3\u8c03\u5668\u7684\u6536\u53d1\u5668\uff0c\u53ef\u63d0\u4f9b\u8d85\u957f\u8ddd\u79bb\u6269\u9891\u901a\u4fe1\u4e14\u9ad8\u6297\u5e72\u6270\u6027\uff0c\u540c\u65f6\u6d88\u8017\u5fae\u91cf\u7535\u6d41\u3002 Grove-LoRa Radio 433MHz\u7684\u6838\u5fc3\u5904\u7406\u5668\u662fATmega168\uff0c\u8fd9\u662f\u4e00\u79cd\u5e7f\u6cdb\u4f7f\u7528\u7684\u82af\u7247\uff0c\u5177\u6709\u5f88\u9ad8\u7684\u6027\u80fd\u548c\u4f4e\u529f\u8017\uff0c\u7279\u522b\u9002\u7528\u4e8e\u8fd9\u4e2aGrove\u6a21\u5757\u3002\n\n\n\u6211\u4eec\u5df2\u7ecf\u96c6\u6210\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u5929\u7ebf\u6765\u63a5\u6536\u4fe1\u53f7\uff0c\u5982\u679c\u4fe1\u53f7\u592a\u5f31\uff0c\u4e0d\u7528\u62c5\u5fc3\uff0c\u5929\u7ebf\u65c1\u8fb9\u7684MHF\u8fde\u63a5\u5668\u53ef\u4ee5\u7528\u6765\u589e\u52a0\u4e00\u4e2a\u5e26\u6709MHF\u63a5\u53e3\u7684\u5929\u7ebf\uff0c\u53cc\u5929\u7ebf\u53ef\u4ee5\u83b7\u5f97\u66f4\u591a\u7684\u4fe1\u53f7\u3002\n\n\n\u8fd9\u662f433MHz\u7248\u672c\uff0c\u53ef\u7528\u4e8e433MHz\u901a\u4fe1\u3002 \u60a8\u8fd8\u53ef\u4ee5\u5728Grove - LoRa Radio 868MHz\u4e0a\u627e\u5230868MHz\u7684\u7248\u672c\u3002\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u53d1\u552e\u65e5\u671f\n\n\n\u8d2d\u4e70\u9014\u5f84\n\n\n\n\n\n\n\n\n\n\nGrove-LoRa Radio 433 MHz\n\n\n11\u670810\u65e5, 2016\n\n\n\n\n\n\n\n\nGrove-LoRa Radio 868 MHz\n\n\n11\u670810\u65e5, 2016\n\n\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u4f7f\u7528\u57fa\u4e8e SX1276 LoRa\u00ae \u7684 RFM95 \u6a21\u5757\n\n\n\u5de5\u4f5c\u7535\u538b:5V/3.3V\n\n\n~28mA(Avg) @+20dBm \u6301\u7eed\u4f20\u8f93\u6a21\u5f0f\n\n\n~8.4mA(Avg)@\u5f85\u673a\u6a21\u5f0f\n\n\n~20mA(Avg) @\u63a5\u6536\u6a21\u5f0f, BW-500kHz\n\n\n\u5de5\u4f5c\u6e29\u5ea6:-20 \u2013 70\u2103\n\n\n\u63a5\u53e3: Grove - UART(RX,TX,VCC,GND)\n\n\n\u7b80\u6613\u7ebf\u5929\u7ebf\u6216\u8005\u5e26 MHF \u8fde\u63a5\u5934\u7684\u9ad8\u589e\u76ca\u5929\u7ebf\n\n\n\u5de5\u4f5c\u9891\u7387:868MHz/433MHz\n\n\n\u7535\u6e90\u8f93\u51fa\u80fd\u529b +20dBm 100 mW\n\n\n\u5c3a\u5bf8:20*40mm\n\n\n\u901f\u7387:0.3kps~50kps\n\n\n\u7b80\u5355\u6613\u7528\u7684 Arduino \u5e93\n\n\n\u5907\u7528\u53ef\u6269\u5c55 MHF \u5929\u7ebf\u63a5\u5934\n\n\n\n\n\n\nTip\n\n\n\u66f4\u591a\u5173\u4e8e Grove \u7cfb\u7edf\u7684\u8d44\u6599\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\n\n\n\nPlatforms Supported\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\nATMega168 MCU (\n\u6570\u636e\u624b\u518c\n)\n\n\nMHF \u8fde\u63a5\u5668\n\n\n\u677f\u8f7d\u7ebf\u5929\u7ebf\n\n\nRFM95 \u6a21\u5757 (\n\u6570\u636e\u624b\u518c\n)\n\n\nGrove \u63a5\u53e3\n\n\n\n\n\n\n\n\n\n\n\u5f15\u811a\n\n\n\u540d\u5b57\n\n\n\u529f\u80fd\n\n\n\n\n\n\n\n\n\n\n1\n\n\nTX\n\n\nTX of UART\n\n\n\n\n\n\n2\n\n\nRX\n\n\nRX of UART\n\n\n\n\n\n\n3\n\n\nVCC\n\n\n\u7535\u6e90\u8f93\u5165, 3.3V or 5V\n\n\n\n\n\n\n4\n\n\nGND\n\n\n\u8fde\u63a5\u5230\u5730\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\nInternet of Things\n\n\n\u667a\u80fd\u5bb6\u5c45\n\n\n\u4f20\u611f\u5668Hub\n\n\n\u8fdc\u8ddd\u79bb\u65e0\u7ebf\u901a\u4fe1\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u5728\u8fd9\u4e00\u5c0f\u8282\u4e2d\u60a8\u53ef\u4ee5\u901a\u8fc7\u51e0\u6b65\u7b80\u5355\u7684\u8bbe\u7f6e\u6765\u8fd0\u884c\u60a8\u7684 \nGrove - LoRa Radio\n\u3002\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\u73b0\u5728\u6211\u4eec\u4f7f\u7528 Grove - Lora Radio 433MHz \u5236\u4f5c\u4e86\u4e00\u4e2aP2P(\u70b9\u5bf9\u70b9)\u901a\u4fe1\u7684\u4f8b\u7a0b\uff08Grove - Lora Radio 868MHz \u540c\u6837\u9002\u7528\u4e8e\u6b64\u4f8b\u7a0b\uff09\n\n\n\n\nTip\n\n\nGrove - LoRa Radio 433MHz \u4e0d\u80fd\u548c Grove - LoRa Radio 868MHz \u8fdb\u884c\u901a\u4fe1.\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6570\u91cf\n\n\n\u8d2d\u4e70\u94fe\u63a5\n\n\n\n\n\n\n\n\n\n\nSeeeduino Lotus\n\n\n2\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\nGrove - LoRa Radio 433MHz\n\n\n2\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\nMicro USB \u6570\u636e\u7ebf\n\n\n2\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 \nSeeeduino Lotus\n, \u8bf7\u53c2\u8003\u9605\u8bfb \nSeeeduino Lotus's \u4e2d\u6587 wiki\n.\n\n\nSeeeduino Lotus \u5b8c\u5168\u517c\u5bb9 Arduino\uff0c \u5e76\u4e14\u548c Arduino \u4e00\u6837\u7b80\u5355\u6613\u7528.\n\n\n\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 Arduino, \u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u9605\u76f8\u5173\u8d44\u6599\u3002\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\nSeeeduino Lotus \u662f Seeeduino \u548c Base Shield \u7684\u5b8c\u7f8e\u878d\u5408\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \nD5\n \u7aef\u53e3\u76f4\u63a5\u5c06 LoRa Radio \u6a21\u5757\u548c\u5f00\u53d1\u677f\u76f8\u8fde\u3002\u5982\u4e0b\u56fe\u6240\u793a:\n\n\n\n\n\u5e93\u6587\u4ef6\u4e0b\u8f7d\n\n\n\u70b9\u51fb\u4e0b\u9762\u6a59\u8272\u6846\u6761\u4e0b\u8f7d\u5e76\u5b89\u88c5\u5e93\u6587\u4ef6\uff0c\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u5b89\u88c5\uff0c\u8bf7\u53c2\u8003 (\nArduino \u5e93\u5b89\u88c5\u6307\u5357\n)\n\n\n\n\n\u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f\n\n\n\u6253\u5f00\u60a8\u7684 Arduino IDE, \u70b9\u51fb \nFile(\u6587\u4ef6)\n Examples\uff08\u793a\u4f8b\uff09\nGrove_LoRa_433MHz_and_915MHz_RF-master\n \u60a8\u5c06\u770b\u5230\u6570\u4e2a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u793a\u4f8b\u7a0b\u5e8f\u3002\n\n\n\n\n\n\n\n\n\n\n\u8282\u70b9\n\n\n\u793a\u4f8b\u540d\u79f0\n\n\n\u529f\u80fd\n\n\n\n\n\n\n\n\n\n\n\u53d1\u9001\u5668\n\n\nrf95_client\n\n\n\u6bcf\u79d2\u4e00\u6b21\u53d1\u9001 \"Hello World\"\n\n\n\n\n\n\n\u63a5\u6536\u5668\n\n\nrf95_server\n\n\n\u63a5\u6536\u6570\u636e\u5e76\u4e14\u6253\u5370\u51fa\u6765\n\n\n\n\n\n\n\n\n\u70b9\u51fb \nTools\uff08\u5de5\u5177\uff09\nBoard\uff08\u5f00\u53d1\u677f\uff09\n \u9009\u62e9 \nSeeeduino Lotus\n ,\u7136\u540e\u9009\u62e9\u5f53\u524d\u5bf9\u5e94\u7684\u4e32\u884c\u7aef\u53e3\u3002\u9009\u62e9\u5b8c\u6210\u4e4b\u540e\u70b9\u51fb \nUpload\n \u6309\u94ae\uff0c\u81f3\u6b64\u5b8c\u6210\uff0c\u60a8\u53ef\u4ee5\u4eab\u53d7\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e86\u3002\n\n\n\n\nTip\n\n\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f \nGrove - LoRa Radio 868MHz\n \u6a21\u5757\uff0c\u8bf7\u4fee\u6539\u4e0b\u5217\u4ee3\u7801\u3002\n\n\n\n\n//rf95.setFrequency(434.0);\n\n\nrf95\n.\nsetFrequency\n(\n868.0\n);\n\n\n\n\n\n\u67e5\u770b\u7ed3\u679c\n\n\n\u5f53\u4e0a\u4f20\u5b8c\u6210\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u60a8\u4f20\u8f93\u7684\u6570\u636e\u4e86\u3002\n\n\n\n\n\u6570\u636e\u4f20\u8f93\u901f\u7387\n\n\n\u4e0b\u56fe\u663e\u793a\u4e86\u5e26\u5bbd\u4fe1\u53f7\u5e26\u5bbd\u6269\u5c55\u56e0\u5b50\u548c\u7075\u654f\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n\u539f\u7406\u56fe\n\n\n\n\nGrove - LoRa Radio 433MHz v1.0 Schematics (Eagle files)\n\n\nGrove - LoRa Radio 433MHz v1.0 Schematics (PDF files)\n\n\nGrove - LoRa Radio 868MHz v1.0 Schematics (Eagle files)\n\n\nGrove - LoRa Radio 868MHz v1.0 Schematics (PDF files)\n\n\n\n\n\n\n\n\n\u6570\u636e\u624b\u518c\n\n\n\n\nRFM95/96/97 Datasheet\n\n\nAtmega168 Datasheet\n\n\n\n\n\n\n\n\n\u53c2\u8003\u8d44\u6e90\n\n\n\n\nLoRa Alliance\n\n\n\n\n\n\n\n\n\u5e93\u6587\u4ef6\n\n\n\n\nGrove - LoRa Radio Library and Examples\n\n\n\n\n\n\n\n\n\u4e0a\u9762\u7684\u6211\u90fd\u8981\u4e0b\u8f7d", 
            "title": "Grove-LoRa Radio"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_1", 
            "text": "\u4f7f\u7528\u57fa\u4e8e SX1276 LoRa\u00ae \u7684 RFM95 \u6a21\u5757  \u5de5\u4f5c\u7535\u538b:5V/3.3V  ~28mA(Avg) @+20dBm \u6301\u7eed\u4f20\u8f93\u6a21\u5f0f  ~8.4mA(Avg)@\u5f85\u673a\u6a21\u5f0f  ~20mA(Avg) @\u63a5\u6536\u6a21\u5f0f, BW-500kHz  \u5de5\u4f5c\u6e29\u5ea6:-20 \u2013 70\u2103  \u63a5\u53e3: Grove - UART(RX,TX,VCC,GND)  \u7b80\u6613\u7ebf\u5929\u7ebf\u6216\u8005\u5e26 MHF \u8fde\u63a5\u5934\u7684\u9ad8\u589e\u76ca\u5929\u7ebf  \u5de5\u4f5c\u9891\u7387:868MHz/433MHz  \u7535\u6e90\u8f93\u51fa\u80fd\u529b +20dBm 100 mW  \u5c3a\u5bf8:20*40mm  \u901f\u7387:0.3kps~50kps  \u7b80\u5355\u6613\u7528\u7684 Arduino \u5e93  \u5907\u7528\u53ef\u6269\u5c55 MHF \u5929\u7ebf\u63a5\u5934    Tip  \u66f4\u591a\u5173\u4e8e Grove \u7cfb\u7edf\u7684\u8d44\u6599\u8bf7\u70b9\u51fb  \u8fd9\u91cc", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_2", 
            "text": "ATMega168 MCU ( \u6570\u636e\u624b\u518c )  MHF \u8fde\u63a5\u5668  \u677f\u8f7d\u7ebf\u5929\u7ebf  RFM95 \u6a21\u5757 ( \u6570\u636e\u624b\u518c )  Grove \u63a5\u53e3      \u5f15\u811a  \u540d\u5b57  \u529f\u80fd      1  TX  TX of UART    2  RX  RX of UART    3  VCC  \u7535\u6e90\u8f93\u5165, 3.3V or 5V    4  GND  \u8fde\u63a5\u5230\u5730", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_3", 
            "text": "Internet of Things  \u667a\u80fd\u5bb6\u5c45  \u4f20\u611f\u5668Hub  \u8fdc\u8ddd\u79bb\u65e0\u7ebf\u901a\u4fe1", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_4", 
            "text": "\u5728\u8fd9\u4e00\u5c0f\u8282\u4e2d\u60a8\u53ef\u4ee5\u901a\u8fc7\u51e0\u6b65\u7b80\u5355\u7684\u8bbe\u7f6e\u6765\u8fd0\u884c\u60a8\u7684  Grove - LoRa Radio \u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_5", 
            "text": "\u73b0\u5728\u6211\u4eec\u4f7f\u7528 Grove - Lora Radio 433MHz \u5236\u4f5c\u4e86\u4e00\u4e2aP2P(\u70b9\u5bf9\u70b9)\u901a\u4fe1\u7684\u4f8b\u7a0b\uff08Grove - Lora Radio 868MHz \u540c\u6837\u9002\u7528\u4e8e\u6b64\u4f8b\u7a0b\uff09   Tip  Grove - LoRa Radio 433MHz \u4e0d\u80fd\u548c Grove - LoRa Radio 868MHz \u8fdb\u884c\u901a\u4fe1.      \u9879\u76ee  \u6570\u91cf  \u8d2d\u4e70\u94fe\u63a5      Seeeduino Lotus  2  \u70b9\u51fb\u8d2d\u4e70    Grove - LoRa Radio 433MHz  2  \u70b9\u51fb\u8d2d\u4e70    Micro USB \u6570\u636e\u7ebf  2  \u70b9\u51fb\u8d2d\u4e70     \u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528  Seeeduino Lotus , \u8bf7\u53c2\u8003\u9605\u8bfb  Seeeduino Lotus's \u4e2d\u6587 wiki .  Seeeduino Lotus \u5b8c\u5168\u517c\u5bb9 Arduino\uff0c \u5e76\u4e14\u548c Arduino \u4e00\u6837\u7b80\u5355\u6613\u7528.  \u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 Arduino, \u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u9605\u76f8\u5173\u8d44\u6599\u3002", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_6", 
            "text": "Seeeduino Lotus \u662f Seeeduino \u548c Base Shield \u7684\u5b8c\u7f8e\u878d\u5408\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7  D5  \u7aef\u53e3\u76f4\u63a5\u5c06 LoRa Radio \u6a21\u5757\u548c\u5f00\u53d1\u677f\u76f8\u8fde\u3002\u5982\u4e0b\u56fe\u6240\u793a:", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_7", 
            "text": "\u70b9\u51fb\u4e0b\u9762\u6a59\u8272\u6846\u6761\u4e0b\u8f7d\u5e76\u5b89\u88c5\u5e93\u6587\u4ef6\uff0c\u5982\u679c\u60a8\u4e0d\u6e05\u695a\u600e\u4e48\u5b89\u88c5\uff0c\u8bf7\u53c2\u8003 ( Arduino \u5e93\u5b89\u88c5\u6307\u5357 )", 
            "title": "\u5e93\u6587\u4ef6\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_8", 
            "text": "\u6253\u5f00\u60a8\u7684 Arduino IDE, \u70b9\u51fb  File(\u6587\u4ef6)  Examples\uff08\u793a\u4f8b\uff09 Grove_LoRa_433MHz_and_915MHz_RF-master  \u60a8\u5c06\u770b\u5230\u6570\u4e2a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u793a\u4f8b\u7a0b\u5e8f\u3002      \u8282\u70b9  \u793a\u4f8b\u540d\u79f0  \u529f\u80fd      \u53d1\u9001\u5668  rf95_client  \u6bcf\u79d2\u4e00\u6b21\u53d1\u9001 \"Hello World\"    \u63a5\u6536\u5668  rf95_server  \u63a5\u6536\u6570\u636e\u5e76\u4e14\u6253\u5370\u51fa\u6765     \u70b9\u51fb  Tools\uff08\u5de5\u5177\uff09 Board\uff08\u5f00\u53d1\u677f\uff09  \u9009\u62e9  Seeeduino Lotus  ,\u7136\u540e\u9009\u62e9\u5f53\u524d\u5bf9\u5e94\u7684\u4e32\u884c\u7aef\u53e3\u3002\u9009\u62e9\u5b8c\u6210\u4e4b\u540e\u70b9\u51fb  Upload  \u6309\u94ae\uff0c\u81f3\u6b64\u5b8c\u6210\uff0c\u60a8\u53ef\u4ee5\u4eab\u53d7\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e86\u3002   Tip  \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f  Grove - LoRa Radio 868MHz  \u6a21\u5757\uff0c\u8bf7\u4fee\u6539\u4e0b\u5217\u4ee3\u7801\u3002   //rf95.setFrequency(434.0);  rf95 . setFrequency ( 868.0 );", 
            "title": "\u6253\u5f00\u793a\u4f8b\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_9", 
            "text": "\u5f53\u4e0a\u4f20\u5b8c\u6210\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u60a8\u4f20\u8f93\u7684\u6570\u636e\u4e86\u3002", 
            "title": "\u67e5\u770b\u7ed3\u679c"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_10", 
            "text": "\u4e0b\u56fe\u663e\u793a\u4e86\u5e26\u5bbd\u4fe1\u53f7\u5e26\u5bbd\u6269\u5c55\u56e0\u5b50\u548c\u7075\u654f\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u3002", 
            "title": "\u6570\u636e\u4f20\u8f93\u901f\u7387"
        }, 
        {
            "location": "/Grove_LoRa_Radio/#_11", 
            "text": "\u539f\u7406\u56fe   Grove - LoRa Radio 433MHz v1.0 Schematics (Eagle files)  Grove - LoRa Radio 433MHz v1.0 Schematics (PDF files)  Grove - LoRa Radio 868MHz v1.0 Schematics (Eagle files)  Grove - LoRa Radio 868MHz v1.0 Schematics (PDF files)     \u6570\u636e\u624b\u518c   RFM95/96/97 Datasheet  Atmega168 Datasheet     \u53c2\u8003\u8d44\u6e90   LoRa Alliance     \u5e93\u6587\u4ef6   Grove - LoRa Radio Library and Examples     \u4e0a\u9762\u7684\u6211\u90fd\u8981\u4e0b\u8f7d", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-125KHz_RFID_Reader/", 
            "text": "Grove-125KHz RFID Reader \u662f\u4e00\u4e2a\u7528\u4e8e\u8bfb\u53d6 uem4100 RFID \u5361\u4fe1\u606f\u7684\u6a21\u5757\uff0c\u5b83\u5177\u6709\u4e24\u79cd\u8f93\u51fa\u683c\u5f0f\uff1aUart \u548c Wiegand\u3002\u5b83\u5177\u6709\u6700\u5927 7cm \u611f\u5e94\u8ddd\u79bb\u7684\u7075\u654f\u5ea6\u3002\n\n\n\u4e0b\u9762\u7684\u6a21\u5757\u548c RFID reader \u914d\u5408\u4f7f\u7528 :\n\n\n\n\nRFID tag combo (125khz)\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u7535\u538b : 4.75-5.25V\n\n\n\u5de5\u4f5c\u9891\u7387 : 125 KHz\n\n\n\u6700\u5927\u611f\u5e94\u8ddd\u79bb : 70mm\n\n\nTTL\u8f93\u51fa : \u6ce2\u7279\u7387\u4e3a 9600\uff0c8 \u4e2a\u6570\u636e\u4f4d\uff0c1 \u4e2a\u505c\u6b62\u4f4d\uff0c\u65e0\u6821\u9a8c\u4f4d\n\n\nWiegand \u8f93\u51fa : 26\u4f4d Wiegand \u683c\u5f0f\uff0c1 \u4e2a\u5076\u6821\u9a8c\u4f4d\uff0c24 \u4e2a\u6570\u636e\u4f4d\u548c 1 \u4e2a\u5947\u6821\u9a8c\u4f4d\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\nPlatforms Supported\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 Grove - 125KHz RFID Reader \u8bfb\u53d6 RFID \u4fe1\u606f\u3002\u5c06 Grove - 125KHz RFID Reader \u8fde\u63a5\u5230 Grove - Base Shield \u7684 UART\u3002\n\n\n\n\nUart \u6a21\u5f0f\n\n\n\u60a8\u9700\u8981\u9009\u62e9\u8df3\u7ebf\u81f3 \"U\" \u8fdb\u5165\u8be5\u6a21\u5f0f\uff0c\u8bbe\u7f6e\u4e3a : 9600 bps\uff0cN\uff0c8\uff0c1\uff0cTTL \u8f93\u51fa\n\n\n/*\n\n\n  link between the computer and the SoftSerial Shield\n\n\n  at 9600 bps 8-N-1\n\n\n  Computer is connected to Hardware UART\n\n\n  SoftSerial Shield is connected to the Software UART:D2\nD3\n\n\n*/\n\n\n\u00a0\n\n\n#include\n \nSoftwareSerial.h\n\n\n\u00a0\n\n\nSoftwareSerial\n \nSoftSerial\n(\n2\n,\n \n3\n);\n\n\nunsigned\n \nchar\n \nbuffer\n[\n64\n];\n       \n// buffer array for data receive over serial port\n\n\nint\n \ncount\n \n=\n \n0\n;\n                    \n// counter for buffer array\n\n\n\u00a0\n\n\nvoid\n \nsetup\n()\n\n\n{\n\n    \nSoftSerial\n.\nbegin\n(\n9600\n);\n     \n// the SoftSerial baud rate\n\n    \nSerial\n.\nbegin\n(\n9600\n);\n         \n// the Serial port of Arduino baud rate.\n\n\n}\n\n\n\u00a0\n\n\nvoid\n \nloop\n()\n\n\n{\n\n    \n// if date is coming from software serial port ==\n data is coming from SoftSerial shield\n\n    \nif\n \n(\nSoftSerial\n.\navailable\n())\n              \n    \n{\n\n        \nwhile\n(\nSoftSerial\n.\navailable\n())\n               \n// reading data into char array\n\n        \n{\n\n            \nbuffer\n[\ncount\n++\n]\n \n=\n \nSoftSerial\n.\nread\n();\n      \n// writing data into array\n\n            \nif\n(\ncount\n \n==\n \n64\n)\nbreak\n;\n\n        \n}\n\n        \nSerial\n.\nwrite\n(\nbuffer\n,\n \ncount\n);\n     \n// if no data transmission ends, write buffer to hardware serial port\n\n        \nclearBufferArray\n();\n             \n// call clearBufferArray function to clear the stored data from the array\n\n        \ncount\n \n=\n \n0\n;\n                      \n// set counter of while loop to zero\n\n    \n}\n\n    \nif\n \n(\nSerial\n.\navailable\n())\n             \n// if data is available on hardware serial port ==\n data is coming from PC or notebook\n\n    \nSoftSerial\n.\nwrite\n(\nSerial\n.\nread\n());\n    \n// write it to the SoftSerial shield\n\n\n}\n\n\nvoid\n \nclearBufferArray\n()\n                 \n// function to clear buffer array\n\n\n{\n\n    \n// clear all index of array with command NULL\n\n    \nfor\n \n(\nint\n \ni\n=\n0\n;\n \ni\ncount\n;\n \ni\n++\n)\n\n    \n{\n\n        \nbuffer\n[\ni\n]\n=\nNULL\n;\n\n    \n}\n                  \n\n}\n\n\n\n\n\n\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u8bfb\u53d6\u7684\u4fe1\u606f\u663e\u793a\u5982\u4e0b :\n\n\n\n\nWiegand \u6a21\u5f0f\n\n\n\u60a8\u9700\u8981\u9009\u62e9\u8df3\u7ebf\u81f3 \"W\" \u624d\u80fd\u8fdb\u5165\u6b64\u6a21\u5f0f\u3002Seeeduino \u7684 \nWiegand demo code\n \u5728\u4e2d\u65ad\u6a21\u5f0f\u4e0b\u8bfb\u53d6 Wiegand \u6570\u636e\u3002\n\n\n\u5728 Wiegand \u6a21\u5f0f\u4e0b\uff0c\u8f93\u51fa\u6570\u636e\u683c\u5f0f\u4e3a 26 \u4f4d\uff0c\u5305\u62ec 24 \u4f4d\u5361\u4fe1\u606f\u548c 2 \u4f4d\u5947\u5076\u6821\u9a8c\u3002\n\n\n\n\n\n\n\nbit\n\n\n\n\n0\n\n\n\n\n1\n\n\n\n\n2\n\n\n\n\n3\n\n\n\n\n4\n\n\n\n\n5\n\n\n\n\n6\n\n\n\n\n7\n\n\n\n\n8\n\n\n\n\n9\n\n\n\n\n10\n\n\n\n\n11\n\n\n\n\n12\n\n\n\n\n13\n\n\n\n\n14\n\n\n\n\n15\n\n\n\n\n16\n\n\n\n\n17\n\n\n\n\n18\n\n\n\n\n19\n\n\n\n\n20\n\n\n\n\n21\n\n\n\n\n22\n\n\n\n\n23\n\n\n\n\n24\n\n\n\n\n25\n\n\n\n\n\n\n\n\n-\n\n\n\n\nPE\n\n\n\n\nD\n\n\n\n\nP0\n\n\n\n\n\n\n\n\n-\n\n\n\n\n-\n\n\n\n\nE\n\n\n\n\n0\n\n\n\n\n-\n\n\n\n\n\n\n\n\n-\n\n\n\n\n-\n\n\n\n\nD2[7..0]\n\n\n\n\nD1[7..0]\n\n\n\n\nD0[7..0]\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\nPE \u662f\u5076\u6570\u4f4d\uff0cPO \u662f\u5947\u6570\u4f4d;\n\n\nE \u662f\u6d89\u53ca\u5076\u6570\u7684\u6570\u636e\u4f4d\uff0cO \u662f\u6d89\u53ca\u5947\u6570\u7684\u6570\u636e\u4f4d\uff1b\n\n\nDX[7..0] \u662f\u5bf9\u5e94 Mifare@ Standard \n Light \u5361\u53ea\u8bfb ID \u7684\u6570\u636e\u4f4d;\n\n\n\n\n\u5982\u4f55\u5c06\u8f93\u51fa\u8f6c\u6362\u4e3a\u5361\u53f7\n\n\n\u4ee5 ID: 0009776930 \u4e3a\u4f8b:\n\n\n\n\n\u5361\u53f7 ID : 0009776930 ------- \u5341\u8fdb\u5236 [\u5f00\u59cb\u4f4d (00) + \u5361\u53f7 (8 \u4f4d\u6570\u5b57)]\n\n\n\u8f93\u51fa : 0700952F229F ------------- \u5341\u516d\u8fdb\u5236 [[\u5f00\u59cb\u4f4d (07h) + \u5361\u53f7 (8 \u4f4d\u6570\u5b57) + \u6821\u9a8c\u4f4d]\n\n\n\u5341\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u7684\u8ba1\u7b97\u5668\u90fd\u662f\u53ef\u83b7\u5f97\u7684\u3002", 
            "title": "Grove-125KHz RFID Reader"
        }, 
        {
            "location": "/Grove-125KHz_RFID_Reader/#_1", 
            "text": "\u7535\u538b : 4.75-5.25V  \u5de5\u4f5c\u9891\u7387 : 125 KHz  \u6700\u5927\u611f\u5e94\u8ddd\u79bb : 70mm  TTL\u8f93\u51fa : \u6ce2\u7279\u7387\u4e3a 9600\uff0c8 \u4e2a\u6570\u636e\u4f4d\uff0c1 \u4e2a\u505c\u6b62\u4f4d\uff0c\u65e0\u6821\u9a8c\u4f4d  Wiegand \u8f93\u51fa : 26\u4f4d Wiegand \u683c\u5f0f\uff0c1 \u4e2a\u5076\u6821\u9a8c\u4f4d\uff0c24 \u4e2a\u6570\u636e\u4f4d\u548c 1 \u4e2a\u5947\u6821\u9a8c\u4f4d    Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-125KHz_RFID_Reader/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-125KHz_RFID_Reader/#_2", 
            "text": "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 Grove - 125KHz RFID Reader \u8bfb\u53d6 RFID \u4fe1\u606f\u3002\u5c06 Grove - 125KHz RFID Reader \u8fde\u63a5\u5230 Grove - Base Shield \u7684 UART\u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-125KHz_RFID_Reader/#uart", 
            "text": "\u60a8\u9700\u8981\u9009\u62e9\u8df3\u7ebf\u81f3 \"U\" \u8fdb\u5165\u8be5\u6a21\u5f0f\uff0c\u8bbe\u7f6e\u4e3a : 9600 bps\uff0cN\uff0c8\uff0c1\uff0cTTL \u8f93\u51fa  /*    link between the computer and the SoftSerial Shield    at 9600 bps 8-N-1    Computer is connected to Hardware UART    SoftSerial Shield is connected to the Software UART:D2 D3  */  \u00a0  #include   SoftwareSerial.h  \u00a0  SoftwareSerial   SoftSerial ( 2 ,   3 );  unsigned   char   buffer [ 64 ];         // buffer array for data receive over serial port  int   count   =   0 ;                      // counter for buffer array  \u00a0  void   setup ()  { \n     SoftSerial . begin ( 9600 );       // the SoftSerial baud rate \n     Serial . begin ( 9600 );           // the Serial port of Arduino baud rate.  }  \u00a0  void   loop ()  { \n     // if date is coming from software serial port ==  data is coming from SoftSerial shield \n     if   ( SoftSerial . available ())               \n     { \n         while ( SoftSerial . available ())                 // reading data into char array \n         { \n             buffer [ count ++ ]   =   SoftSerial . read ();        // writing data into array \n             if ( count   ==   64 ) break ; \n         } \n         Serial . write ( buffer ,   count );       // if no data transmission ends, write buffer to hardware serial port \n         clearBufferArray ();               // call clearBufferArray function to clear the stored data from the array \n         count   =   0 ;                        // set counter of while loop to zero \n     } \n     if   ( Serial . available ())               // if data is available on hardware serial port ==  data is coming from PC or notebook \n     SoftSerial . write ( Serial . read ());      // write it to the SoftSerial shield  }  void   clearBufferArray ()                   // function to clear buffer array  { \n     // clear all index of array with command NULL \n     for   ( int   i = 0 ;   i count ;   i ++ ) \n     { \n         buffer [ i ] = NULL ; \n     }                    }   \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u8bfb\u53d6\u7684\u4fe1\u606f\u663e\u793a\u5982\u4e0b :", 
            "title": "Uart \u6a21\u5f0f"
        }, 
        {
            "location": "/Grove-125KHz_RFID_Reader/#wiegand", 
            "text": "\u60a8\u9700\u8981\u9009\u62e9\u8df3\u7ebf\u81f3 \"W\" \u624d\u80fd\u8fdb\u5165\u6b64\u6a21\u5f0f\u3002Seeeduino \u7684  Wiegand demo code  \u5728\u4e2d\u65ad\u6a21\u5f0f\u4e0b\u8bfb\u53d6 Wiegand \u6570\u636e\u3002  \u5728 Wiegand \u6a21\u5f0f\u4e0b\uff0c\u8f93\u51fa\u6570\u636e\u683c\u5f0f\u4e3a 26 \u4f4d\uff0c\u5305\u62ec 24 \u4f4d\u5361\u4fe1\u606f\u548c 2 \u4f4d\u5947\u5076\u6821\u9a8c\u3002    \nbit  \n0  \n1  \n2  \n3  \n4  \n5  \n6  \n7  \n8  \n9  \n10  \n11  \n12  \n13  \n14  \n15  \n16  \n17  \n18  \n19  \n20  \n21  \n22  \n23  \n24  \n25    \n-  \nPE  \nD  \nP0    \n-  \n-  \nE  \n0  \n-    \n-  \n-  \nD2[7..0]  \nD1[7..0]  \nD0[7..0]  \n-     PE \u662f\u5076\u6570\u4f4d\uff0cPO \u662f\u5947\u6570\u4f4d;  E \u662f\u6d89\u53ca\u5076\u6570\u7684\u6570\u636e\u4f4d\uff0cO \u662f\u6d89\u53ca\u5947\u6570\u7684\u6570\u636e\u4f4d\uff1b  DX[7..0] \u662f\u5bf9\u5e94 Mifare@ Standard   Light \u5361\u53ea\u8bfb ID \u7684\u6570\u636e\u4f4d;", 
            "title": "Wiegand \u6a21\u5f0f"
        }, 
        {
            "location": "/Grove-125KHz_RFID_Reader/#_3", 
            "text": "\u4ee5 ID: 0009776930 \u4e3a\u4f8b:   \u5361\u53f7 ID : 0009776930 ------- \u5341\u8fdb\u5236 [\u5f00\u59cb\u4f4d (00) + \u5361\u53f7 (8 \u4f4d\u6570\u5b57)]  \u8f93\u51fa : 0700952F229F ------------- \u5341\u516d\u8fdb\u5236 [[\u5f00\u59cb\u4f4d (07h) + \u5361\u53f7 (8 \u4f4d\u6570\u5b57) + \u6821\u9a8c\u4f4d]  \u5341\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u7684\u8ba1\u7b97\u5668\u90fd\u662f\u53ef\u83b7\u5f97\u7684\u3002", 
            "title": "\u5982\u4f55\u5c06\u8f93\u51fa\u8f6c\u6362\u4e3a\u5361\u53f7"
        }, 
        {
            "location": "/Grove-I2C_Hub/", 
            "text": "I2C Hub Grove is an extension Grove module for connecting multiply I2C devices to Grove Base Shield. It can use with \nUniversal 4 Pin to X2 4 Pin cable\n and connects up to 3 I2C devices which may cover most developing purpose.\n\n\n\n\nFeatures\n\n\n\n\nChainable\n\n\n\n\nPlatforms Supported\n\n\nApplication Ideas\n\n\n\n\nUsing more I2C devices than you otherwise have room for on your Grove platform.\n\n\n\n\nUsage\n\n\nIt does not conflict if you use the same I2C Socket simultaneously because every I2C device has its own address. Hardware installation is shown below.\n\n\n\n\nHere we do not list a specific example.\n\n\n\n\nTip\n\n\nMore details about Grove modules please refer to \nGrove System\n\n\n\n\nResources\n\n\nI2C Hub Eagle File", 
            "title": "Grove-I2C Hub"
        }, 
        {
            "location": "/Grove-I2C_Hub/#features", 
            "text": "Chainable", 
            "title": "Features"
        }, 
        {
            "location": "/Grove-I2C_Hub/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-I2C_Hub/#application-ideas", 
            "text": "Using more I2C devices than you otherwise have room for on your Grove platform.", 
            "title": "Application Ideas"
        }, 
        {
            "location": "/Grove-I2C_Hub/#usage", 
            "text": "It does not conflict if you use the same I2C Socket simultaneously because every I2C device has its own address. Hardware installation is shown below.   Here we do not list a specific example.   Tip  More details about Grove modules please refer to  Grove System", 
            "title": "Usage"
        }, 
        {
            "location": "/Grove-I2C_Hub/#resources", 
            "text": "I2C Hub Eagle File", 
            "title": "Resources"
        }, 
        {
            "location": "/Display/", 
            "text": "\u8fd9\u91cc\u5217\u51fa\u4e86\u4e0eLCD\u6216LED\u663e\u793a\u76f8\u5173\u7684Grove\u6a21\u5757\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u663e\u793a\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGrove-4-Digit_Display\n\n\nGrove-Circular_LED\n\n\nGrove-LCD_RGB_Backlight\n\n\nGrove-LED_Bar\n\n\nGrove-LED_String_Light\n\n\nGrove-OLED_Display_0.96inch\n\n\nGrove-Red_LED", 
            "title": "Display"
        }, 
        {
            "location": "/Display/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u663e\u793a\u677f\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Grove-4-Digit_Display  Grove-Circular_LED  Grove-LCD_RGB_Backlight  Grove-LED_Bar  Grove-LED_String_Light  Grove-OLED_Display_0.96inch  Grove-Red_LED", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/", 
            "text": "\u60f3\u8981\u5b8c\u6210\u4e30\u5bcc\u591a\u5f69\u7684\u7684\u5355\u8272\u80cc\u5149\u663e\u793a\u5417\uff1f \u901a\u8fc7\u8fd9\u4e2a\u6a21\u5757\u60a8\u53ef\u4ee5\u5c06\u663e\u793a\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u4efb\u4f55\u60a8\u559c\u6b22\u7684\u989c\u8272\n\u5b83\u5177\u6709\u7b80\u5355\u800c\u4e14\u7b80\u6d01\u7684\u754c\u9762\u3002 \u5b83\u4ee5I2C\u603b\u7ebf\u4f5c\u4e3a\u5fae\u63a7\u5236\u5668\u7684\u901a\u4fe1\u65b9\u5f0f\u3002\n\u56e0\u6b64\uff0c\u6570\u636e\u4ea4\u6362\u548c\u80cc\u5149\u63a7\u5236\u6240\u9700\u7684\u5f15\u811a\u6570\u53ef\u4ee5\u4ece10\u4e2a\u51cf\u5c11\u52302\u4e2a\uff0c\u4ece\u800c\u51cf\u8f7b\u4e86IO\u53e3\u7684\u4f7f\u7528 \u6b64\u5916\uff0cGrove - LCD RGB Backlight\u652f\u6301\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u7684\u5b57\u7b26\u3002 \u60f3\u8981\u5f97\u5230\n\u7231\u5fc3\u56fe\u6848\u548c\u5176\u4ed6\u4e00\u4e9b\u4eba\u7269\u5f62\u8c61\u7684\u56fe\u6848\u5417\uff1f \u53ea\u8981\u5229\u7528\u8fd9\u4e2a\u6a21\u5757\u60a8\u5c31\u53ef\u4ee5\u81ea\u5df1\u8bbe\u8ba1\uff01\n\u8be5\u4ea7\u54c1\u662fGrove - Serial LCD\u7684\u66ff\u4ee3\u54c1\u3002 \u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u539f\u59cb\u768416x2\u6db2\u6676\u663e\u793a\u6a21\u5757\uff0c\u6211\u4eec\n\u6709\u7eff\u8272\u3001\u9ec4\u8272\u548c\u84dd\u8272\u7684Grove - LCD RGB Backlight\u51fa\u552e\u3002\n\n\n\n\n\n\nNote\n\n\n\u672c\u6587\u6863\u9002\u7528\u4e8e1.0\uff0c2.0\u548c4.0\u7248\u672c\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u5177\u6709RGB\u80cc\u5149\u663e\u793a\u7684\u529f\u80fd\n\n\nI2C\u603b\u7ebf\u8fde\u63a5\n\n\n\u5185\u90e8\u8bbe\u7f6e\u6709\u82f1\u6587\u5b57\u4f53\n\n\n16x2 LCD\u80cc\u5149\u5c4f\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6570\u503c\n\n\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b\n\n\n5V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n60mA\n\n\n\n\n\n\nCGROM\n\n\n10880\u4f4d\n\n\n\n\n\n\nCGRAM\n\n\n64x8 \u4f4d\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u4eba\u673a\u63a5\u53e3\n\n\n\u667a\u6167\u4e4b\u5bb6\n\n\n\u4f20\u611f\u5668\u4e2d\u5fc3\n\n\n\n\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u7ed9\u60a8\u53c2\u8003\n\n\n\n\n\n\n\n\nEdison Wi-Fi Address\n\n\nWiFi Enabled Greenhouse\n\n\nGrove Lucky Dumpling\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake it Now!\n\n\nMake it Now!\n\n\nMake it Now!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nToothbrushing Instructor\n\n\nLinkIt ONE Pager\n\n\nLinkIt ONE IoT Demo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake it Now!\n\n\nMake it Now!\n\n\nMake it Now!\n\n\n\n\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u8fd9\u4e2a\u5165\u95e8\u6307\u5bfc\u5c06\u5411\u4f60\u5c55\u793a\u600e\u4e48\u4f7f\u7528Grove - LCD RGB Backlight\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u9700\u8981 \nSeeeduino\n\n\n\n\nNote\n\n\n\u8fd9\u4e2a\u6f14\u793a\u662f\u5728Win10\u548cArduino IDE1.6.9\u73af\u5883\u4e0b\u8fdb\u884c\u7684\u3002\n\n\n\n\n\u7b2c\u4e00\u6b65.\u4e0b\u8f7d Arduino \u5e93\n\n\n\u60a8\u9700\u8981\u4e0b\u8f7d\u8be5\u5e93\u5e76\u5b89\u88c5\u5230\u60a8\u7684Arduino IDE\u3002\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b8c\u6210 LCD RGB Backlight \u5e93\u7684\u5b89\u88c5\u3002\n\n\n\n\n\u7b2c\u4e8c\u6b65. \u786c\u4ef6\u5b89\u88c5\n\n\n\u786c\u4ef6\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3aSeeeduino\u6709\u4e00\u4e2aI2C Grove\u7aef\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\n\u901a\u8fc7Grove\u8fde\u63a5\u7ebf\u5c06\u5176\u8fde\u63a5\u5230I2C Grove\u7aef\u53e3\u5c31\u597d\u3002\n\n\n\n\nNote\n\n\n\u8bf7\u901a\u8fc7Seeeduino V4.2\u4e0a\u7684\u62e8\u52a8\u5f00\u5173\u9009\u62e95v\uff0c\u5426\u5219Grove - LCD RGB Backlight\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\n\n\n\n\n\n\n\u7b2c\u4e09\u6b65.\u4e0b\u8f7d\u6570\u636e\u5e76\u4e14\u4e0a\u4f20\n\n\n\u60a8\u53ef\u4ee5\u5728Github\u4e2d\u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801\uff0c\u70b9\u51fb \n\u8fd9\u91cc\n\uff0c\u7136\u540e\u5c06\u5176\u89e3\u538b\u7f29\u5230\u4efb\u4f55\u5730\u65b9\u3002\n\n\n\u5982\u679c\u60a8\u8fd9\u4e2a\u6b65\u9aa4\u6709\u95ee\u9898\uff0c\u8bf7\u53c2\u9605 \nArduino\u5165\u95e8\u6307\u5bfc\n \u5728\u5e93\u4e2d\u6709\u4e00\u4e2aHello World\u793a\u4f8b\uff0c\u5c06\u5176\u6253\u5f00\u5e76\u4e0a\u4f20\u5230Seeeduino V4.2\u3002 \u7136\u540e\u53ef\u4ee5\u5728\u7b2c\u4e00\u884c\u770b\u5230\u201cHello world\u201d\uff0c\u7b2c\u4e8c\u884c\u5c06\u663e\u793a\u4ece\u590d\u4f4d\u540e\u663e\u793a\u65f6\u95f4\u7684\u79d2\u6570\u3002\n\n\n\n\n\u7b2c\u56db\u6b65. \u6539\u53d8\u80cc\u5149\u5c4f\u7684\u989c\u8272\n\n\nGrove - LCD RGB Backlight\u7684\u6700\u91cd\u8981\u7684\u7279\u70b9\u4e4b\u4e00\u662f\uff1a\u60a8\u53ef\u4ee5\u66f4\u6539\u80cc\u5149\u6e90\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u53ea\u9700\u4f7f\u7528\u4ee5\u4e0b\u529f\u80fd\uff1a\n\n\nvoid setRGB(int r, int g, int b);\n\n\n\n\n\n\u7136\u540e\u8ba9\u6211\u4eec\u5c1d\u8bd5\u7ea2\u8272\u7684\u80cc\u5149\u663e\u793a\u3002\n\u5c06\u989c\u8272\u4ee3\u7801\u4fee\u6539\u4e3a\uff1a\n\n\nconst int colorR = 255;\nconst int colorG = 0;\nconst int colorB = 0;\n\n\n\n\n\n\u518d\u6b21\u4e0a\u4f20\u4ee3\u7801\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u770b\u5230\u80cc\u5149\u5c4f\u7684\u989c\u8272\u8f6c\u5230\u7ea2\u8272\u4e86\uff1f \u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u53e6\u4e00\u79cd\u989c\u8272\u5462\uff1f\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nSoftware Library\n\n\nGithub page for the Library\n\n\nGithub page for this document", 
            "title": "Grove-LCD RGB Backlight"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/#_1", 
            "text": "\u5177\u6709RGB\u80cc\u5149\u663e\u793a\u7684\u529f\u80fd  I2C\u603b\u7ebf\u8fde\u63a5  \u5185\u90e8\u8bbe\u7f6e\u6709\u82f1\u6587\u5b57\u4f53  16x2 LCD\u80cc\u5149\u5c4f    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/#_2", 
            "text": "\u9879\u76ee  \u6570\u503c      \u8f93\u5165\u7535\u538b  5V    \u5de5\u4f5c\u7535\u6d41  60mA    CGROM  10880\u4f4d    CGRAM  64x8 \u4f4d", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/#_3", 
            "text": "\u4eba\u673a\u63a5\u53e3  \u667a\u6167\u4e4b\u5bb6  \u4f20\u611f\u5668\u4e2d\u5fc3   \u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u7ed9\u60a8\u53c2\u8003     Edison Wi-Fi Address  WiFi Enabled Greenhouse  Grove Lucky Dumpling           Make it Now!  Make it Now!  Make it Now!        Toothbrushing Instructor  LinkIt ONE Pager  LinkIt ONE IoT Demo           Make it Now!  Make it Now!  Make it Now!", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/#_4", 
            "text": "\u8fd9\u4e2a\u5165\u95e8\u6307\u5bfc\u5c06\u5411\u4f60\u5c55\u793a\u600e\u4e48\u4f7f\u7528Grove - LCD RGB Backlight\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u9700\u8981  Seeeduino   Note  \u8fd9\u4e2a\u6f14\u793a\u662f\u5728Win10\u548cArduino IDE1.6.9\u73af\u5883\u4e0b\u8fdb\u884c\u7684\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/#arduino", 
            "text": "\u60a8\u9700\u8981\u4e0b\u8f7d\u8be5\u5e93\u5e76\u5b89\u88c5\u5230\u60a8\u7684Arduino IDE\u3002  \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5Arduino\u5e93\u6587\u4ef6\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc  \u67e5\u770b\u5e93\u6587\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b8c\u6210 LCD RGB Backlight \u5e93\u7684\u5b89\u88c5\u3002", 
            "title": "\u7b2c\u4e00\u6b65.\u4e0b\u8f7d Arduino \u5e93"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/#_5", 
            "text": "\u786c\u4ef6\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3aSeeeduino\u6709\u4e00\u4e2aI2C Grove\u7aef\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\n\u901a\u8fc7Grove\u8fde\u63a5\u7ebf\u5c06\u5176\u8fde\u63a5\u5230I2C Grove\u7aef\u53e3\u5c31\u597d\u3002   Note  \u8bf7\u901a\u8fc7Seeeduino V4.2\u4e0a\u7684\u62e8\u52a8\u5f00\u5173\u9009\u62e95v\uff0c\u5426\u5219Grove - LCD RGB Backlight\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002", 
            "title": "\u7b2c\u4e8c\u6b65. \u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/#_6", 
            "text": "\u60a8\u53ef\u4ee5\u5728Github\u4e2d\u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801\uff0c\u70b9\u51fb  \u8fd9\u91cc \uff0c\u7136\u540e\u5c06\u5176\u89e3\u538b\u7f29\u5230\u4efb\u4f55\u5730\u65b9\u3002  \u5982\u679c\u60a8\u8fd9\u4e2a\u6b65\u9aa4\u6709\u95ee\u9898\uff0c\u8bf7\u53c2\u9605  Arduino\u5165\u95e8\u6307\u5bfc  \u5728\u5e93\u4e2d\u6709\u4e00\u4e2aHello World\u793a\u4f8b\uff0c\u5c06\u5176\u6253\u5f00\u5e76\u4e0a\u4f20\u5230Seeeduino V4.2\u3002 \u7136\u540e\u53ef\u4ee5\u5728\u7b2c\u4e00\u884c\u770b\u5230\u201cHello world\u201d\uff0c\u7b2c\u4e8c\u884c\u5c06\u663e\u793a\u4ece\u590d\u4f4d\u540e\u663e\u793a\u65f6\u95f4\u7684\u79d2\u6570\u3002", 
            "title": "\u7b2c\u4e09\u6b65.\u4e0b\u8f7d\u6570\u636e\u5e76\u4e14\u4e0a\u4f20"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/#_7", 
            "text": "Grove - LCD RGB Backlight\u7684\u6700\u91cd\u8981\u7684\u7279\u70b9\u4e4b\u4e00\u662f\uff1a\u60a8\u53ef\u4ee5\u66f4\u6539\u80cc\u5149\u6e90\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u53ea\u9700\u4f7f\u7528\u4ee5\u4e0b\u529f\u80fd\uff1a  void setRGB(int r, int g, int b);  \u7136\u540e\u8ba9\u6211\u4eec\u5c1d\u8bd5\u7ea2\u8272\u7684\u80cc\u5149\u663e\u793a\u3002\n\u5c06\u989c\u8272\u4ee3\u7801\u4fee\u6539\u4e3a\uff1a  const int colorR = 255;\nconst int colorG = 0;\nconst int colorB = 0;  \u518d\u6b21\u4e0a\u4f20\u4ee3\u7801\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u770b\u5230\u80cc\u5149\u5c4f\u7684\u989c\u8272\u8f6c\u5230\u7ea2\u8272\u4e86\uff1f \u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u53e6\u4e00\u79cd\u989c\u8272\u5462\uff1f", 
            "title": "\u7b2c\u56db\u6b65. \u6539\u53d8\u80cc\u5149\u5c4f\u7684\u989c\u8272"
        }, 
        {
            "location": "/Grove-LCD_RGB_Backlight/#_8", 
            "text": "Software Library  Github page for the Library  Github page for this document", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-4-Digit_Display/", 
            "text": "Grove - 4-Digit Display \u6a21\u5757\u662f\u4e00\u4e2a\u6709\u774012\u4e2a\u5f15\u811a\u7684\u6a21\u5757\u3002 \u5728\u8fd9\u4e2a\u6a21\u5757\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528TM1637\u5c06\u63a7\u5236\u5f15\u811a\u7684\u6570\u91cf\u7f29\u5c0f\u52302\u4e2a.\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u53ea\u901a\u8fc7Arduino\u6216Seeeduino\u76842\u4e2a\u6570\u5b57\u5f15\u811a\u6765\u63a7\u5236\u5185\u5bb9\u548c\u4eae\u5ea6\u3002 \u5bf9\u4e8e\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u663e\u793a\u7684\u9879\u76ee\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u80fd\u591f\u663e\u793a4\u4f4d\u7ea2\u8272\u5b57\u6bcd\u548c\u6570\u5b57\n\n\n\u80fd\u591f\u517c\u5bb9Grove\u63a5\u53e3\uff083.3V / 5V\uff09\n\n\n\u5177\u67098\u4e2a\u8c03\u8282\u4eae\u5ea6\u7684\u7ea7\u522b\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove System\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u663e\u793a\u65f6\u95f4\n\n\n\u79d2\u8868\n\n\n\u4f20\u611f\u5668\u6570\u503c\u7684\u663e\u793a\n\n\n\n\n\u4ea7\u54c1\u89c4\u683c\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\n\n\n\n\n\u6807\u51c6\n\n\n\n\n\u6700\u5927\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n3.3\n\n\n\n\n5.0\n\n\n\n\n5.5\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n\n\n0.2\n\n\n\n\n27\n\n\n\n\n80\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u5916\u5f62\u5c3a\u5bf8\n\n\n\n\n42x24x14\n\n\n\n\nmm\n\n\n\n\n\n\n\n\n\u91cd\u91cf\n\n\n\n\n7\u00b11\n\n\n\n\ng\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\nGrove interface\n - \u53ef\u8fde\u63a5\u5230Grove - Base Shield\u4e0a\u7684\u6570\u5b57\u7aef\u53e3\u3002\n\n\n4 - digit display\n - \u666e\u901a\u9633\u6781\u6570\u7801\u7ba1\u3002\n\n\n\u7ba1\u811a\u5b9a\u4e49:\n CLK DIO VCC GND\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u4f7f\u7528 TI LaunchPad\n\n\n\u663e\u793a\u6570\u5b57\uff084\u4f4d\u6570\u5b57\u663e\u793a\uff09\n\n\n\u672c\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528Grove-4-Digital Display\u663e\u793a\u4e00\u4e9b\u6570\u5b57\u3002\n\n\n\n\n/*\n * TM1637.cpp\n * A library for the 4 digit display\n */\n#include \nTM1637.h\n\n#define CLK 39 //pins definitions for TM1637 and can be changed to other ports\n#define DIO 38\nTM1637 tm1637(CLK,DIO);\nvoid setup()\n{\n    tm1637.init();\n    tm1637.set(BRIGHT_TYPICAL);//BRIGHT_TYPICAL = 2,BRIGHT_DARKEST = 0,BRIGHTEST = 7;\n}\nvoid loop()\n{\n    int8_t NumTab[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};//0~9,A,b,C,d,E,F\n    int8_t ListDisp[4];\n    unsigned char i = 0;\n    unsigned char count = 0;\n    delay(150);\n    while(1)\n    {\n        i = count;\n        count ++;\n        if(count == sizeof(NumTab)) count = 0;\n        for(unsigned char BitSelect = 0;BitSelect \n 4;BitSelect ++)\n        {\n            ListDisp[BitSelect] = NumTab[i];\n            i ++;\n            if(i == sizeof(NumTab)) i = 0;\n        }\n        tm1637.display(0,ListDisp[0]);\n        tm1637.display(1,ListDisp[1]);\n        tm1637.display(2,ListDisp[2]);\n        tm1637.display(3,ListDisp[3]);\n        delay(300);\n    }\n}\n\n\n\n\n\u4f7f\u7528 Arduino\n\n\n\u4f7f\u7528 TM1637 \u6765\u63a7\u5236\u663e\u793a\u7684\u5185\u5bb9\u4ee5\u53ca\u6539\u53d8\u4eae\u5ea6\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u5982\u4f55\u663e\u793a\u65f6\u95f4\u3002\n\n\n\n\n\n\n\u4f7f\u7528Grove\u8fde\u63a5\u7ebf\u5c06LED Strip Driver \u4e0a\u6807\u6709\u201cIN\u201d\u7684Grove\u63d2\u5ea7\u548c \nGrove - Base Shield\n \u7684\u6570\u5b57 \nD2\n \u7aef\u53e3\u8fde\u63a5\u8d77\u6765\u3002 \u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u66f4\u6539\u6570\u5b57\u7aef\u53e3\u3002 \u4f46\u662f\u4e0d\u8981\u5fd8\u4e86\u5728\u6f14\u793a\u4ee3\u7801\u7684\u5b9a\u4e49\u4e2d\u66f4\u6539\u7aef\u53e3\u53f7\u3002\n\n\n\n\n\n\n\u63d2\u5165Arduino / Seeeduino\u6216\u5c06 \nGrove - Mega Shield\n \u63d2\u5165Arduino Mega\u3002\n\n\nSeeeduino \u548c Grove - 4-digit display:\n\n\n\n\nArduino Mega \u548c Grove - 4-digit display:\n\n\n\n\n\n\n\n\u901a\u8fc7USB\u6570\u636e\u7ebf\u5c06Arduino / Seeeduino\u8fde\u63a5\u5230PC\u3002\n\n\n\n\n\n\n\u4e0b\u8f7d \nthe 4-Digit Display \u5e93\n \u548c \nTimerOne \u5e93\n. \u89e3\u538b\u5e76\u5c06\u5b83\u4eec\u653e\u5728Arduino IDE\u7684\u5e93\u6587\u4ef6\u4e2d\uff0c\u8def\u5f84\u4e3a\uff1a..\\arduino-1.0\\libraries\u3002\n\n\n\n\n\n\n\u91cd\u65b0\u542f\u52a8Arduino IDE\uff0c\u6253\u5f00\u4e00\u4e2a\u60a8\u559c\u6b22\u7684\u6f14\u793a\u4ee3\u7801\uff0c\u4f8b\u5982\u65f6\u949f\u663e\u793a\u76f4\u63a5\u901a\u8fc7\u8def\u5f84\uff1a\nFile(\u6587\u4ef6) - \nExample(\u793a\u4f8b) - \nDigitalTube - \nClockDisplay\n\u3002\n\n\n\n\n\n\n\n\n\u4e0a\u4f20\u6f14\u793a\u4ee3\u7801\uff0c\u51e0\u79d2\u949f\u540e\u65f6\u949f\u5f00\u59cb\u663e\u793a\u3002\n\n\n\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a:\n\n\n\n\n\n\n\n\u4f7f\u7528 Raspberry Pi\n\n\n1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2araspberry pi\u548cgrovepi\u6216grovepi +\u3002\n\n\n2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa\n\u8bf4\u660e\n \u5b8c\u6210\u914d\u7f6e\u3002\n\n\n3.\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u4f7f\u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u63d2\u5ea7 \nD5\n \u7aef\u53e3\u3002\n\n\n\n\n4.\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a\n\ncd yourpath/GrovePi/Software/Python/\n\n\n\n\n\n\u627e\u5230\u8fd9\u884c\u4ee3\u7801\n\nnano grove_4_digit_display.py   # \nCtrl+x\n to exit #\n\n\n\n    import time\n    import grovepi\n\n    # Connect the Grove 4 Digit Display to digital port D5\n    # CLK,DIO,VCC,GND\n    display = 5\n    grovepi.pinMode(display,\nOUTPUT\n)\n\n    # If you have an analog sensor connect it to A0 so you can monitor it below\n    sensor = 0\n    grovepi.pinMode(sensor,\nINPUT\n)\n\n    time.sleep(.5)\n\n    # 4 Digit Display methods\n    # grovepi.fourDigit_init(pin)\n    # grovepi.fourDigit_number(pin,value,leading_zero)\n    # grovepi.fourDigit_brightness(pin,brightness)\n    # grovepi.fourDigit_digit(pin,segment,value)\n    # grovepi.fourDigit_segment(pin,segment,leds)\n    # grovepi.fourDigit_score(pin,left,right)\n    # grovepi.fourDigit_monitor(pin,analog,duration)\n    # grovepi.fourDigit_on(pin)\n    # grovepi.fourDigit_off(pin)\n\n    while True:\n        try:\n            print \nTest 1) Initialise\n\n            grovepi.fourDigit_init(display)\n            time.sleep(.5)\n\n            print \nTest 2) Set brightness\n\n            for i in range(0,8):\n                grovepi.fourDigit_brightness(display,i)\n                time.sleep(.2)\n            time.sleep(.3)\n\n            # set to lowest brightness level\n            grovepi.fourDigit_brightness(display,0)\n            time.sleep(.5)\n\n            print \nTest 3) Set number without leading zeros\n\n            leading_zero = 0\n            grovepi.fourDigit_number(display,1,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,12,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,123,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,1234,leading_zero)\n            time.sleep(.5)\n\n            print \nTest 4) Set number with leading zeros\n\n            leading_zero = 1\n            grovepi.fourDigit_number(display,5,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,56,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,567,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,5678,leading_zero)\n            time.sleep(.5)\n\n            print \nTest 5) Set individual digit\n\n            grovepi.fourDigit_digit(display,0,2)\n            grovepi.fourDigit_digit(display,1,6)\n            grovepi.fourDigit_digit(display,2,9)\n            grovepi.fourDigit_digit(display,3,15) # 15 = F\n            time.sleep(.5)\n\n            print \nTest 6) Set individual segment\n\n            grovepi.fourDigit_segment(display,0,118) # 118 = H\n            grovepi.fourDigit_segment(display,1,121) # 121 = E\n            grovepi.fourDigit_segment(display,2,118) # 118 = H\n            grovepi.fourDigit_segment(display,3,121) # 121 = E\n            time.sleep(.5)\n\n            grovepi.fourDigit_segment(display,0,57) # 57 = C\n            grovepi.fourDigit_segment(display,1,63) # 63 = O\n            grovepi.fourDigit_segment(display,2,63) # 63 = O\n            grovepi.fourDigit_segment(display,3,56) # 56 = L\n            time.sleep(.5)\n\n            print \nTest 7) Set score\n\n            grovepi.fourDigit_score(display,0,0)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,0)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,1)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,2)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,3)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,4)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,5)\n            time.sleep(.5)\n\n            print \nTest 8) Set time\n\n            grovepi.fourDigit_score(display,12,59)\n            time.sleep(.5)\n\n            print \nTest 9) Monitor analog pin\n\n            seconds = 10\n            grovepi.fourDigit_monitor(display,sensor,seconds)\n            time.sleep(.5)\n\n            print \nTest 10) Switch all on\n\n            grovepi.fourDigit_on(display)\n            time.sleep(.5)\n\n            print \nTest 11) Switch all off\n\n            grovepi.fourDigit_off(display)\n            time.sleep(.5)\n\n        except KeyboardInterrupt:\n            grovepi.fourDigit_off(display)\n            break\n        except IOError:\n            print \nError\n\n\n\n\n\n\n5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\n\nsudo python grove_4_digit_display.py\n\n\n6.\u5982\u679c\u60a8\u7684Grovepi\u6ca1\u6709\u6700\u65b0\u7684\u5230\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u6b64\u6f14\u793a\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\n\ncd yourpath/GrovePi/Firmware\nsudo ./firmware_update.sh\n\n\n\n\u9879\u76ee\n\n\n\n\nInspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!\n\n\nThe Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.    \n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nGrove - 4-Digit Display V1.0 eagle files\n\n\nSchematic in PDF\n\n\n4-Digit Display library\n\n\nTimerOne library\n\n\nFour-Digit Display Suli Library\n\n\nTM1637 datasheet", 
            "title": "Grove-4 Digit Display"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#_1", 
            "text": "\u80fd\u591f\u663e\u793a4\u4f4d\u7ea2\u8272\u5b57\u6bcd\u548c\u6570\u5b57  \u80fd\u591f\u517c\u5bb9Grove\u63a5\u53e3\uff083.3V / 5V\uff09  \u5177\u67098\u4e2a\u8c03\u8282\u4eae\u5ea6\u7684\u7ea7\u522b    Tip  \u5173\u4e8eGrove\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#_2", 
            "text": "\u663e\u793a\u65f6\u95f4  \u79d2\u8868  \u4f20\u611f\u5668\u6570\u503c\u7684\u663e\u793a", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#_3", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f  \n\u6807\u51c6  \n\u6700\u5927  \n\u5355\u4f4d    \n\u5de5\u4f5c\u7535\u538b  \n3.3  \n5.0  \n5.5  \nVDC    \n\u5de5\u4f5c\u7535\u6d41  \n0.2  \n27  \n80  \nmA    \n\u5916\u5f62\u5c3a\u5bf8  \n42x24x14  \nmm    \n\u91cd\u91cf  \n7\u00b11  \ng", 
            "title": "\u4ea7\u54c1\u89c4\u683c"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#_4", 
            "text": "Grove interface  - \u53ef\u8fde\u63a5\u5230Grove - Base Shield\u4e0a\u7684\u6570\u5b57\u7aef\u53e3\u3002  4 - digit display  - \u666e\u901a\u9633\u6781\u6570\u7801\u7ba1\u3002  \u7ba1\u811a\u5b9a\u4e49:  CLK DIO VCC GND", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#ti-launchpad", 
            "text": "\u663e\u793a\u6570\u5b57\uff084\u4f4d\u6570\u5b57\u663e\u793a\uff09  \u672c\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528Grove-4-Digital Display\u663e\u793a\u4e00\u4e9b\u6570\u5b57\u3002   /*\n * TM1637.cpp\n * A library for the 4 digit display\n */\n#include  TM1637.h \n#define CLK 39 //pins definitions for TM1637 and can be changed to other ports\n#define DIO 38\nTM1637 tm1637(CLK,DIO);\nvoid setup()\n{\n    tm1637.init();\n    tm1637.set(BRIGHT_TYPICAL);//BRIGHT_TYPICAL = 2,BRIGHT_DARKEST = 0,BRIGHTEST = 7;\n}\nvoid loop()\n{\n    int8_t NumTab[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};//0~9,A,b,C,d,E,F\n    int8_t ListDisp[4];\n    unsigned char i = 0;\n    unsigned char count = 0;\n    delay(150);\n    while(1)\n    {\n        i = count;\n        count ++;\n        if(count == sizeof(NumTab)) count = 0;\n        for(unsigned char BitSelect = 0;BitSelect   4;BitSelect ++)\n        {\n            ListDisp[BitSelect] = NumTab[i];\n            i ++;\n            if(i == sizeof(NumTab)) i = 0;\n        }\n        tm1637.display(0,ListDisp[0]);\n        tm1637.display(1,ListDisp[1]);\n        tm1637.display(2,ListDisp[2]);\n        tm1637.display(3,ListDisp[3]);\n        delay(300);\n    }\n}", 
            "title": "\u4f7f\u7528 TI LaunchPad"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#arduino", 
            "text": "\u4f7f\u7528 TM1637 \u6765\u63a7\u5236\u663e\u793a\u7684\u5185\u5bb9\u4ee5\u53ca\u6539\u53d8\u4eae\u5ea6\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u5982\u4f55\u663e\u793a\u65f6\u95f4\u3002    \u4f7f\u7528Grove\u8fde\u63a5\u7ebf\u5c06LED Strip Driver \u4e0a\u6807\u6709\u201cIN\u201d\u7684Grove\u63d2\u5ea7\u548c  Grove - Base Shield  \u7684\u6570\u5b57  D2  \u7aef\u53e3\u8fde\u63a5\u8d77\u6765\u3002 \u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u66f4\u6539\u6570\u5b57\u7aef\u53e3\u3002 \u4f46\u662f\u4e0d\u8981\u5fd8\u4e86\u5728\u6f14\u793a\u4ee3\u7801\u7684\u5b9a\u4e49\u4e2d\u66f4\u6539\u7aef\u53e3\u53f7\u3002    \u63d2\u5165Arduino / Seeeduino\u6216\u5c06  Grove - Mega Shield  \u63d2\u5165Arduino Mega\u3002  Seeeduino \u548c Grove - 4-digit display:   Arduino Mega \u548c Grove - 4-digit display:    \u901a\u8fc7USB\u6570\u636e\u7ebf\u5c06Arduino / Seeeduino\u8fde\u63a5\u5230PC\u3002    \u4e0b\u8f7d  the 4-Digit Display \u5e93  \u548c  TimerOne \u5e93 . \u89e3\u538b\u5e76\u5c06\u5b83\u4eec\u653e\u5728Arduino IDE\u7684\u5e93\u6587\u4ef6\u4e2d\uff0c\u8def\u5f84\u4e3a\uff1a..\\arduino-1.0\\libraries\u3002    \u91cd\u65b0\u542f\u52a8Arduino IDE\uff0c\u6253\u5f00\u4e00\u4e2a\u60a8\u559c\u6b22\u7684\u6f14\u793a\u4ee3\u7801\uff0c\u4f8b\u5982\u65f6\u949f\u663e\u793a\u76f4\u63a5\u901a\u8fc7\u8def\u5f84\uff1a File(\u6587\u4ef6) -  Example(\u793a\u4f8b) -  DigitalTube -  ClockDisplay \u3002     \u4e0a\u4f20\u6f14\u793a\u4ee3\u7801\uff0c\u51e0\u79d2\u949f\u540e\u65f6\u949f\u5f00\u59cb\u663e\u793a\u3002  \u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a:", 
            "title": "\u4f7f\u7528 Arduino"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#raspberry-pi", 
            "text": "1.\u4f60\u5e94\u8be5\u6709\u4e00\u4e2araspberry pi\u548cgrovepi\u6216grovepi +\u3002  2.\u60a8\u9700\u8981\u5b8c\u6210\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u9075\u5faa \u8bf4\u660e  \u5b8c\u6210\u914d\u7f6e\u3002  3.\u786c\u4ef6\u8fde\u63a5   \u4f7f\u7528grove\u8fde\u63a5\u7ebf\u5c06\u4f20\u611f\u5668\u63d2\u5165Grovepi\u63d2\u5ea7  D5  \u7aef\u53e3\u3002   4.\u5bfc\u822a\u5230\u6f14\u793a\u76ee\u5f55\uff1a cd yourpath/GrovePi/Software/Python/   \u627e\u5230\u8fd9\u884c\u4ee3\u7801 nano grove_4_digit_display.py   #  Ctrl+x  to exit #      import time\n    import grovepi\n\n    # Connect the Grove 4 Digit Display to digital port D5\n    # CLK,DIO,VCC,GND\n    display = 5\n    grovepi.pinMode(display, OUTPUT )\n\n    # If you have an analog sensor connect it to A0 so you can monitor it below\n    sensor = 0\n    grovepi.pinMode(sensor, INPUT )\n\n    time.sleep(.5)\n\n    # 4 Digit Display methods\n    # grovepi.fourDigit_init(pin)\n    # grovepi.fourDigit_number(pin,value,leading_zero)\n    # grovepi.fourDigit_brightness(pin,brightness)\n    # grovepi.fourDigit_digit(pin,segment,value)\n    # grovepi.fourDigit_segment(pin,segment,leds)\n    # grovepi.fourDigit_score(pin,left,right)\n    # grovepi.fourDigit_monitor(pin,analog,duration)\n    # grovepi.fourDigit_on(pin)\n    # grovepi.fourDigit_off(pin)\n\n    while True:\n        try:\n            print  Test 1) Initialise \n            grovepi.fourDigit_init(display)\n            time.sleep(.5)\n\n            print  Test 2) Set brightness \n            for i in range(0,8):\n                grovepi.fourDigit_brightness(display,i)\n                time.sleep(.2)\n            time.sleep(.3)\n\n            # set to lowest brightness level\n            grovepi.fourDigit_brightness(display,0)\n            time.sleep(.5)\n\n            print  Test 3) Set number without leading zeros \n            leading_zero = 0\n            grovepi.fourDigit_number(display,1,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,12,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,123,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,1234,leading_zero)\n            time.sleep(.5)\n\n            print  Test 4) Set number with leading zeros \n            leading_zero = 1\n            grovepi.fourDigit_number(display,5,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,56,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,567,leading_zero)\n            time.sleep(.5)\n            grovepi.fourDigit_number(display,5678,leading_zero)\n            time.sleep(.5)\n\n            print  Test 5) Set individual digit \n            grovepi.fourDigit_digit(display,0,2)\n            grovepi.fourDigit_digit(display,1,6)\n            grovepi.fourDigit_digit(display,2,9)\n            grovepi.fourDigit_digit(display,3,15) # 15 = F\n            time.sleep(.5)\n\n            print  Test 6) Set individual segment \n            grovepi.fourDigit_segment(display,0,118) # 118 = H\n            grovepi.fourDigit_segment(display,1,121) # 121 = E\n            grovepi.fourDigit_segment(display,2,118) # 118 = H\n            grovepi.fourDigit_segment(display,3,121) # 121 = E\n            time.sleep(.5)\n\n            grovepi.fourDigit_segment(display,0,57) # 57 = C\n            grovepi.fourDigit_segment(display,1,63) # 63 = O\n            grovepi.fourDigit_segment(display,2,63) # 63 = O\n            grovepi.fourDigit_segment(display,3,56) # 56 = L\n            time.sleep(.5)\n\n            print  Test 7) Set score \n            grovepi.fourDigit_score(display,0,0)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,0)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,1)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,2)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,3)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,4)\n            time.sleep(.2)\n            grovepi.fourDigit_score(display,1,5)\n            time.sleep(.5)\n\n            print  Test 8) Set time \n            grovepi.fourDigit_score(display,12,59)\n            time.sleep(.5)\n\n            print  Test 9) Monitor analog pin \n            seconds = 10\n            grovepi.fourDigit_monitor(display,sensor,seconds)\n            time.sleep(.5)\n\n            print  Test 10) Switch all on \n            grovepi.fourDigit_on(display)\n            time.sleep(.5)\n\n            print  Test 11) Switch all off \n            grovepi.fourDigit_off(display)\n            time.sleep(.5)\n\n        except KeyboardInterrupt:\n            grovepi.fourDigit_off(display)\n            break\n        except IOError:\n            print  Error    5.\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b sudo python grove_4_digit_display.py \n6.\u5982\u679c\u60a8\u7684Grovepi\u6ca1\u6709\u6700\u65b0\u7684\u5230\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u6b64\u6f14\u793a\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002 cd yourpath/GrovePi/Firmware\nsudo ./firmware_update.sh", 
            "title": "\u4f7f\u7528 Raspberry Pi"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#_6", 
            "text": "Inspired by OVERWATCH, we have made a very cool Wooden Laser Gun toy for fun these day!  The Wooden Laser Gun and the Gun Target are all based on an Arduino board called Seeeduino Lotus. The laser emitter on the Laser Gun is controlled to fire laser pulse to \"activate\" the Gun Target. And there are 3 light sensors on the Gun Target to detect the laser pulse. It seems very simple right? If you are interested in our project, please make one for yourself or your child! It's worth to spend one day DIY it as a Xmas present.", 
            "title": "\u9879\u76ee"
        }, 
        {
            "location": "/Grove-4-Digit_Display/#_7", 
            "text": "Grove - 4-Digit Display V1.0 eagle files  Schematic in PDF  4-Digit Display library  TimerOne library  Four-Digit Display Suli Library  TM1637 datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/", 
            "text": "Grove - OLED Display 0.96\"\n \u6a21\u5757\u662f\u4e00\u6b3e\u5e26\u6709 Grove I2C \u63a5\u53e3\u7684 OLED \u5355\u8272 128\u00d764 \u70b9\u77e9\u9635\u663e\u793a\u6a21\u5757\u3002\u4e0e LCD \u76f8\u6bd4\uff0cOLED \u5c4f\u5e55\u66f4\u5177\u7ade\u4e89\u529b\u3002\u5b83\u5177\u6709\u9ad8\u4eae\u5ea6\uff0c \u53ef\u53d1\u5149\uff0c\u9ad8\u5bf9\u6bd4\u5ea6\uff0c\u5916\u5f62\u5c0f\u5de7\uff0c\u89c6\u89d2\u5e7f\uff0c\u6e29\u5ea6\u8303\u56f4\u5bbd\uff0c\u529f\u8017\u4f4e\u7b49\u7279\u70b9\u3002\u540c\u65f6\u5b83\u7684\u5c4f\u5e55\u6bd4\u8f83\u5927\uff0c\u53ef\u4ee5\u663e\u793a\u6bd4 OLED 96\u00d796 \u66f4\u591a\u7684\u5185\u5bb9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u63a5\u53e3\n\n\n\u901a\u884c\u534f\u8bae : I2C\n\n\n\u4f4e\u529f\u8017\n\n\n\u663e\u793a\u989c\u8272 : \u767d\n\n\n\u5de5\u4f5c\u6e29\u5ea6 : -20\u2103~70\u2103\n\n\n\n\n\n\nWarning\n\u8bf7\u6ce8\u610f : OLED \u627f\u53d7\u8fc7\u5927\u538b\u529b\u4f1a\u5bfc\u81f4\u5c4f\u5e55\u788e\u88c2\u3002\n\n\n\n\n\n\n\n\nTip\n\n\n\u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb \nGrove System\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u6700\u5c0f\u503c\n\n\n\u53c2\u6570\n\n\n\u6700\u5927\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u7535\u6e90\u7535\u538b (VCC)\n\n\n3.3\n\n\n5.0\n\n\n5.5\n\n\nV\n\n\n\n\n\n\n\u9a71\u52a8 IC\n\n\n-\n\n\nSSD1308Z\n\n\n-\n\n\n-\n\n\n\n\n\n\n\u663e\u793a\u989c\u8272\n\n\n-\n\n\n\u767d\n\n\n-\n\n\n-\n\n\n\n\n\n\n\u70b9\u77e9\u9635\n\n\n-\n\n\n128\u00d764\n\n\n-\n\n\n-\n\n\n\n\n\n\n\u5c3a\u5bf8\n\n\n-\n\n\n26.7(W)\u00d719.26(H)\n\n\n-\n\n\nmm\n\n\n\n\n\n\n\u663e\u793a\u533a\u57df\n\n\n-\n\n\n21.74(W)\u00d711.175 (H)\n\n\n-\n\n\nmm\n\n\n\n\n\n\n\u70b9\u8ddd\n\n\n-\n\n\n0.17(W)\u00d70.175 (H)\n\n\n-\n\n\nmm\n\n\n\n\n\n\n\u70b9\u5927\u5c0f\n\n\n-\n\n\n0.15(W)\u00d70.15 (H)\n\n\n-\n\n\nmm\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n-\n\n\n-20~70\n\n\n-\n\n\n\u2103\n\n\n\n\n\n\n\n\nPlatforms Supported\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528\n\n\n\u8fde\u63a5\n\n\nOLED128*64 \u4f7f\u7528 SSD1308 \u82af\u7247\u7684\u6240\u6709\u5f15\u811a\uff0c\u9ed8\u8ba4\u539f\u70b9\u4f4d\u4e8e\u5de6\u4e0a\u89d2\u3002\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u7a0b\u5e8f\u6765\u66f4\u6539\u539f\u59cb\u70b9\uff0c\u4ee5\u663e\u793a\u6240\u9700\u7684\u56fe\u6848\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605 \nSSD1308_1.0.pdf\n \u548c \nLY190-128064.pdf\n\u3002\n\n\n\u8fd9\u91cc\u6211\u4eec\u6f14\u793a\u5982\u4f55\u5728\u5c4f\u5e55\u4e0a\u663e\u793a \"Hello World\" \u3002\n\n\n\u9996\u5148\u8bf7\u51c6\u5907\u4ee5\u4e0b\u5668\u6750 :\n\n\n\n\n\n\n\n\nSeeeduino V4\n\n\nGrove - OLED Display 0.96inch\n\n\nBase Shield\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n\u5c06 Grove - OLED Display 128*64 \u63d2\u5165 Grove - Base Shield \u4e0a\u7684 I2C \u7aef\u53e3\uff0c\u7136\u540e\u5c06 Grove - Base Shield \u5806\u53e0\u5728 Seeeduino \u4e0a\uff1b\n\n\n\n\n\u8f6f\u4ef6\n\n\n\n\n\u4e0b\u8f7d \nSeeed OLED Display 128*64 \u5e93\u6587\u4ef6\n\u3002\n\n\n\u8bf7\u6309\u7167 \n\u8fd9\u91cc\n \u5b89\u88c5\u5e93\u3002\n\n\n\u901a\u8fc7\u8def\u5f84 : \nFile(\u6587\u4ef6) -\n Example(\u793a\u4f8b) -\nOLED_Display_128X64-master-\nOLED_Hello_World\n \u6253\u5f00\u4ee3\u7801\u3002\n\n\n\n\n\n#include \nWire.h\n\n#include \nSeeedOLED.h\n\n\n\nvoid setup()\n{\n  Wire.begin();\n  SeeedOled.init();  //initialze SEEED OLED display\n\n  SeeedOled.clearDisplay();          //clear the screen and set start position to top left corner\n  SeeedOled.setNormalDisplay();      //Set display to normal mode (i.e non-inverse mode)\n  SeeedOled.setPageMode();           //Set addressing mode to Page Mode\n  SeeedOled.setTextXY(0,0);          //Set the cursor to Xth Page, Yth Column  \n  SeeedOled.putString(\nHello World!\n); //Print the String\n\n}\n\nvoid loop()\n{\n\n}\n\n\n\n\n\n\n\u4e0a\u4f20\u4ee3\u7801\n\n\n\u5c4f\u5e55\u4e0a\u5c06\u663e\u793a \"hello world\"\u3002\n\n\n\n\n\u4e0e Beaglebone Green \u4e00\u8d77\u4f7f\u7528\n\n\n\u8981\u7f16\u8f91 BBG \u4e0a\u7684\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 \nCloud9 IDE\n \u5e76\u53c2\u9605 \nBeaglebone Green Wiki\n\u3002\n\n\n\u4e0b\u9762\u662f\u5728 OLED \u5c4f\u5e55\u4e0a\u663e\u793a \"Hello World\" \u7684\u6b65\u9aa4 \uff1a\n\n\n\u6b65\u9aa4 1\n: \u70b9\u51fb\u9876\u90e8\u53f3\u7aef\u7684 \"+\" \u521b\u5efa\u65b0\u6587\u4ef6\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 2\n: \u590d\u5236\u5e76\u7c98\u8d34\u4ee5\u4e0b\u4ee3\u7801\u81f3 Cloud9 IDE \u7a97\u53e3\u3002\n\nfrom\n \nAdafruit_I2C\n \nimport\n \nAdafruit_I2C\n\n\nimport\n \ntime\n\n\nimport\n \nmath\n\n\n\n\nOled\n \n=\n \nAdafruit_I2C\n(\n0x3c\n)\n\n\nCommand_Mode\n=\n0x80\n\n\nData_mode\n=\n0x40\n\n\n\ngrayH\n=\n \n0xF0\n\n\ngrayL\n=\n \n0x0F\n\n\nNormal_Display_Cmd\n=\n0xA4\n\n\n\nBasicFont\n \n=\n \n[[\n0\n \nfor\n \nx\n \nin\n \nxrange\n(\n8\n)]\n \nfor\n \nx\n \nin\n \nxrange\n(\n10\n)]\n\n\nBasicFont\n=\n[[\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x00\n,\n0x5F\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x00\n,\n0x07\n,\n0x00\n,\n0x07\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x14\n,\n0x7F\n,\n0x14\n,\n0x7F\n,\n0x14\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x24\n,\n0x2A\n,\n0x7F\n,\n0x2A\n,\n0x12\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x23\n,\n0x13\n,\n0x08\n,\n0x64\n,\n0x62\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x36\n,\n0x49\n,\n0x55\n,\n0x22\n,\n0x50\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x00\n,\n0x05\n,\n0x03\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x1C\n,\n0x22\n,\n0x41\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x41\n,\n0x22\n,\n0x1C\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x08\n,\n0x2A\n,\n0x1C\n,\n0x2A\n,\n0x08\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x08\n,\n0x08\n,\n0x3E\n,\n0x08\n,\n0x08\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0xA0\n,\n0x60\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x08\n,\n0x08\n,\n0x08\n,\n0x08\n,\n0x08\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x60\n,\n0x60\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x20\n,\n0x10\n,\n0x08\n,\n0x04\n,\n0x02\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3E\n,\n0x51\n,\n0x49\n,\n0x45\n,\n0x3E\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x00\n,\n0x42\n,\n0x7F\n,\n0x40\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x62\n,\n0x51\n,\n0x49\n,\n0x49\n,\n0x46\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x22\n,\n0x41\n,\n0x49\n,\n0x49\n,\n0x36\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x18\n,\n0x14\n,\n0x12\n,\n0x7F\n,\n0x10\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x27\n,\n0x45\n,\n0x45\n,\n0x45\n,\n0x39\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3C\n,\n0x4A\n,\n0x49\n,\n0x49\n,\n0x30\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x01\n,\n0x71\n,\n0x09\n,\n0x05\n,\n0x03\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x36\n,\n0x49\n,\n0x49\n,\n0x49\n,\n0x36\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x06\n,\n0x49\n,\n0x49\n,\n0x29\n,\n0x1E\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x00\n,\n0x36\n,\n0x36\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x00\n,\n0xAC\n,\n0x6C\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x08\n,\n0x14\n,\n0x22\n,\n0x41\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x14\n,\n0x14\n,\n0x14\n,\n0x14\n,\n0x14\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x41\n,\n0x22\n,\n0x14\n,\n0x08\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x02\n,\n0x01\n,\n0x51\n,\n0x09\n,\n0x06\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x32\n,\n0x49\n,\n0x79\n,\n0x41\n,\n0x3E\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7E\n,\n0x09\n,\n0x09\n,\n0x09\n,\n0x7E\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x49\n,\n0x49\n,\n0x49\n,\n0x36\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3E\n,\n0x41\n,\n0x41\n,\n0x41\n,\n0x22\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x41\n,\n0x41\n,\n0x22\n,\n0x1C\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x49\n,\n0x49\n,\n0x49\n,\n0x41\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x09\n,\n0x09\n,\n0x09\n,\n0x01\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3E\n,\n0x41\n,\n0x41\n,\n0x51\n,\n0x72\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x08\n,\n0x08\n,\n0x08\n,\n0x7F\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x41\n,\n0x7F\n,\n0x41\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x20\n,\n0x40\n,\n0x41\n,\n0x3F\n,\n0x01\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x08\n,\n0x14\n,\n0x22\n,\n0x41\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x40\n,\n0x40\n,\n0x40\n,\n0x40\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x02\n,\n0x0C\n,\n0x02\n,\n0x7F\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x04\n,\n0x08\n,\n0x10\n,\n0x7F\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3E\n,\n0x41\n,\n0x41\n,\n0x41\n,\n0x3E\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x09\n,\n0x09\n,\n0x09\n,\n0x06\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3E\n,\n0x41\n,\n0x51\n,\n0x21\n,\n0x5E\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x09\n,\n0x19\n,\n0x29\n,\n0x46\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x26\n,\n0x49\n,\n0x49\n,\n0x49\n,\n0x32\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x01\n,\n0x01\n,\n0x7F\n,\n0x01\n,\n0x01\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3F\n,\n0x40\n,\n0x40\n,\n0x40\n,\n0x3F\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x1F\n,\n0x20\n,\n0x40\n,\n0x20\n,\n0x1F\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3F\n,\n0x40\n,\n0x38\n,\n0x40\n,\n0x3F\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x63\n,\n0x14\n,\n0x08\n,\n0x14\n,\n0x63\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x03\n,\n0x04\n,\n0x78\n,\n0x04\n,\n0x03\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x61\n,\n0x51\n,\n0x49\n,\n0x45\n,\n0x43\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x41\n,\n0x41\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x02\n,\n0x04\n,\n0x08\n,\n0x10\n,\n0x20\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x41\n,\n0x41\n,\n0x7F\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x04\n,\n0x02\n,\n0x01\n,\n0x02\n,\n0x04\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x80\n,\n0x80\n,\n0x80\n,\n0x80\n,\n0x80\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x01\n,\n0x02\n,\n0x04\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x20\n,\n0x54\n,\n0x54\n,\n0x54\n,\n0x78\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x48\n,\n0x44\n,\n0x44\n,\n0x38\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x38\n,\n0x44\n,\n0x44\n,\n0x28\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x38\n,\n0x44\n,\n0x44\n,\n0x48\n,\n0x7F\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x38\n,\n0x54\n,\n0x54\n,\n0x54\n,\n0x18\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x08\n,\n0x7E\n,\n0x09\n,\n0x02\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x18\n,\n0xA4\n,\n0xA4\n,\n0xA4\n,\n0x7C\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x08\n,\n0x04\n,\n0x04\n,\n0x78\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x00\n,\n0x7D\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x80\n,\n0x84\n,\n0x7D\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7F\n,\n0x10\n,\n0x28\n,\n0x44\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x41\n,\n0x7F\n,\n0x40\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7C\n,\n0x04\n,\n0x18\n,\n0x04\n,\n0x78\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x7C\n,\n0x08\n,\n0x04\n,\n0x7C\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x38\n,\n0x44\n,\n0x44\n,\n0x38\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0xFC\n,\n0x24\n,\n0x24\n,\n0x18\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x18\n,\n0x24\n,\n0x24\n,\n0xFC\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x00\n,\n0x7C\n,\n0x08\n,\n0x04\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x48\n,\n0x54\n,\n0x54\n,\n0x24\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x04\n,\n0x7F\n,\n0x44\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3C\n,\n0x40\n,\n0x40\n,\n0x7C\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x1C\n,\n0x20\n,\n0x40\n,\n0x20\n,\n0x1C\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x3C\n,\n0x40\n,\n0x30\n,\n0x40\n,\n0x3C\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x44\n,\n0x28\n,\n0x10\n,\n0x28\n,\n0x44\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x1C\n,\n0xA0\n,\n0xA0\n,\n0x7C\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x44\n,\n0x64\n,\n0x54\n,\n0x4C\n,\n0x44\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x08\n,\n0x36\n,\n0x41\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x00\n,\n0x7F\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x41\n,\n0x36\n,\n0x08\n,\n0x00\n,\n0x00\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x02\n,\n0x01\n,\n0x01\n,\n0x02\n,\n0x01\n,\n0x00\n,\n0x00\n],\n\n\n[\n0x00\n,\n0x02\n,\n0x05\n,\n0x05\n,\n0x02\n,\n0x00\n,\n0x00\n,\n0x00\n]]\n\n\n\ndef\n \noled_init\n():\n\n    \nsendCommand\n(\n0xFD\n)\n \n# Unlock OLED driver IC MCU interface from entering command. i.e: Accept commands\n\n    \nsendCommand\n(\n0x12\n)\n\n    \nsendCommand\n(\n0xAE\n)\n \n# Set display off\n\n    \nsendCommand\n(\n0xA8\n)\n \n# set multiplex ratio\n\n    \nsendCommand\n(\n0x5F\n)\n \n# 96\n\n    \nsendCommand\n(\n0xA1\n)\n \n# set display start line\n\n    \nsendCommand\n(\n0x00\n)\n\n    \nsendCommand\n(\n0xA2\n)\n \n# set display offset\n\n    \nsendCommand\n(\n0x60\n)\n\n    \nsendCommand\n(\n0xA0\n)\n \n# set remap\n\n    \nsendCommand\n(\n0x46\n)\n\n    \nsendCommand\n(\n0xAB\n)\n \n# set vdd internal\n\n    \nsendCommand\n(\n0x01\n)\n\n    \nsendCommand\n(\n0x81\n)\n \n# set contrasr\n\n    \nsendCommand\n(\n0x53\n)\n \n# 100 nit\n\n    \nsendCommand\n(\n0xB1\n)\n \n# Set Phase Length\n\n    \nsendCommand\n(\n0X51\n)\n\n    \nsendCommand\n(\n0xB3\n)\n \n# Set Display Clock Divide Ratio/Oscillator Frequency\n\n    \nsendCommand\n(\n0x01\n)\n\n    \nsendCommand\n(\n0xB9\n)\n\n    \nsendCommand\n(\n0xBC\n)\n \n# set pre_charge voltage/VCOMH\n\n    \nsendCommand\n(\n0x08\n)\n \n# (0x08);\n\n    \nsendCommand\n(\n0xBE\n)\n \n# set VCOMH\n\n    \nsendCommand\n(\n0X07\n)\n \n# (0x07);\n\n    \nsendCommand\n(\n0xB6\n)\n \n# Set second pre-charge period\n\n    \nsendCommand\n(\n0x01\n)\n\n    \nsendCommand\n(\n0xD5\n)\n \n# enable second precharge and enternal vsl\n\n    \nsendCommand\n(\n0X62\n)\n \n# (0x62);\n\n    \nsendCommand\n(\n0xA4\n)\n \n# Set Normal Display Mode\n\n    \nsendCommand\n(\n0x2E\n)\n \n# Deactivate Scroll\n\n    \nsendCommand\n(\n0xAF\n)\n \n# Switch on display\n\n    \ntime\n.\nsleep\n(\n0.1\n)\n\n    \n# delay(100);\n\n\n    \n# Row Address\n\n    \nsendCommand\n(\n0x75\n)\n    \n# Set Row Address\n\n    \nsendCommand\n(\n0x00\n)\n    \n# Start 0\n\n    \nsendCommand\n(\n0x5f\n)\n    \n# End 95\n\n\n\n    \n# Column Address\n\n    \nsendCommand\n(\n0x15\n)\n    \n# Set Column Address\n\n    \nsendCommand\n(\n0x08\n)\n    \n# Start from 8th Column of driver IC. This is 0th Column for OLED\n\n    \nsendCommand\n(\n0x37\n)\n    \n# End at  (8 + 47)th column. Each Column has 2 pixels(segments)\n\n\n    \n# Init gray level for text. Default:Brightest White\n\n    \ngrayH\n=\n \n0xF0\n\n    \ngrayL\n=\n \n0x0F\n\n\n\ndef\n \nsendCommand\n(\nbyte\n):\n\n    \nOled\n.\nwrite8\n(\nCommand_Mode\n,\nbyte\n)\n\n\n\ndef\n \nsendData\n(\nbyte\n):\n\n    \nOled\n.\nwrite8\n(\nData_mode\n,\nbyte\n)\n\n\n\ndef\n \nmulti_comm\n(\ncommands\n):\n\n    \nfor\n \nc\n \nin\n \ncommands\n:\n\n        \nsendCommand\n(\nc\n)\n\n\n\ndef\n \noled_clearDisplay\n():\n\n    \nfor\n \nj\n \nin\n \nrange\n \n(\n0\n,\n48\n):\n\n        \nfor\n \ni\n \nin\n \nrange\n \n(\n0\n,\n96\n):\n\n            \nsendData\n(\n0x00\n)\n\n\n\ndef\n \noled_setNormalDisplay\n():\n\n    \nsendCommand\n(\nNormal_Display_Cmd\n)\n\n\n\ndef\n \noled_setVerticalMode\n():\n\n    \nsendCommand\n(\n0xA0\n)\n    \n# remap to\n\n    \nsendCommand\n(\n0x46\n)\n    \n# Vertical mode\n\n\n\ndef\n \noled_setTextXY\n(\nRow\n,\nColumn\n):\n\n    \nsendCommand\n(\n0x15\n)\n             \n# Set Column Address\n\n    \nsendCommand\n(\n0x08\n+\n(\nColumn\n*\n4\n))\n  \n# Start Column: Start from 8\n\n    \nsendCommand\n(\n0x37\n)\n             \n# End Column\n\n    \n# Row Address\n\n    \nsendCommand\n(\n0x75\n)\n             \n# Set Row Address\n\n    \nsendCommand\n(\n0x00\n+\n(\nRow\n*\n8\n))\n     \n# Start Row\n\n    \nsendCommand\n(\n0x07\n+\n(\nRow\n*\n8\n))\n     \n# End Row\n\n\n\ndef\n \noled_putChar\n(\nC\n):\n\n    \nC_add\n=\nord\n(\nC\n)\n\n    \nif\n \nC_add\n32\n \nor\n \nC_add\n127\n:\n     \n# Ignore non-printable ASCII characters\n\n        \nC\n=\n \n\n        \nC_add\n=\nord\n(\nC\n)\n\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n0\n,\n8\n,\n2\n):\n\n        \nfor\n \nj\n \nin\n \nrange\n(\n0\n,\n8\n):\n\n            \nc\n=\n0x00\n\n            \nbit1\n=\n((\nBasicFont\n[\nC_add\n-\n32\n][\ni\n])\nj\n)\n0x01\n\n            \nbit2\n=\n((\nBasicFont\n[\nC_add\n-\n32\n][\ni\n+\n1\n])\nj\n)\n0x01\n\n            \nif\n \nbit1\n:\n\n                \nc\n=\nc\n|\ngrayH\n\n            \nelse\n:\n\n                \nc\n=\nc\n|\n0x00\n\n            \nif\n \nbit2\n:\n\n                \nc\n=\nc\n|\ngrayL\n\n            \nelse\n:\n\n                \nc\n=\nc\n|\n0x00\n\n            \nsendData\n(\nc\n)\n\n\n\ndef\n \noled_putString\n(\nString\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nString\n)):\n\n        \noled_putChar\n(\nString\n[\ni\n])\n   \n\n\n\nif\n \n__name__\n==\n__main__\n:\n\n    \noled_init\n()\n\n    \noled_setNormalDisplay\n()\n\n    \noled_setTextXY\n(\n0\n,\n0\n)\n\n    \noled_putString\n(\nHello\n)\n\n    \ntime\n.\nsleep\n(\n10\n)\n\n    \n#Oled.write8(Command_Mode,0xFD)\n\n    \n#sendCommand(0xFD)\n\n    \nprint\n \nhello world\n\n\n\n\n\u6b65\u9aa4 3\n: \u70b9\u51fb\u5e26\u6709 .py \u6269\u5c55\u540d\u7684\u78c1\u76d8\u56fe\u6807\u4fdd\u5b58\u6587\u4ef6\u3002\n\n\n\u6b65\u9aa4 4\n: \u628a Grove - OLED \u8fde\u63a5\u5230 BBG \u4e0a\u7684 Grove I2C \u63a5\u53e3\u3002\n\n\n\u6b65\u9aa4 5\n: \u8fd0\u884c\u4ee3\u7801\u3002Grove - OLED \u5c06\u663e\u793a \"Hello World\"\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[Eagle \u6587\u4ef6]\n \nGrove-OLED128x64\n\n\n[\u539f\u7406\u56fe PDF]\n \nGrove-OLED128x64 Schematic\n\n\n[PCB \u56fe PDF]\n \nGrove-OLED128x64 PCB\n\n\n[\u5e93\u6587\u4ef6]\n \nGitHub Library for OLED\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nResources of SSD1308_1.0.pdf\n\n\n[\u82af\u7247\u6570\u636e\u624b\u518c]\n \nResources of LY190-128064.pdf\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nBeaglebone Green Wiki", 
            "title": "Grove-OLED Display 0.96inch"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/#_1", 
            "text": "Grove \u63a5\u53e3  \u901a\u884c\u534f\u8bae : I2C  \u4f4e\u529f\u8017  \u663e\u793a\u989c\u8272 : \u767d  \u5de5\u4f5c\u6e29\u5ea6 : -20\u2103~70\u2103    Warning \u8bf7\u6ce8\u610f : OLED \u627f\u53d7\u8fc7\u5927\u538b\u529b\u4f1a\u5bfc\u81f4\u5c4f\u5e55\u788e\u88c2\u3002     Tip  \u5173\u4e8e Grove \u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb  Grove System", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/#_2", 
            "text": "\u9879\u76ee  \u6700\u5c0f\u503c  \u53c2\u6570  \u6700\u5927\u503c  \u5355\u4f4d      \u7535\u6e90\u7535\u538b (VCC)  3.3  5.0  5.5  V    \u9a71\u52a8 IC  -  SSD1308Z  -  -    \u663e\u793a\u989c\u8272  -  \u767d  -  -    \u70b9\u77e9\u9635  -  128\u00d764  -  -    \u5c3a\u5bf8  -  26.7(W)\u00d719.26(H)  -  mm    \u663e\u793a\u533a\u57df  -  21.74(W)\u00d711.175 (H)  -  mm    \u70b9\u8ddd  -  0.17(W)\u00d70.175 (H)  -  mm    \u70b9\u5927\u5c0f  -  0.15(W)\u00d70.15 (H)  -  mm    \u5de5\u4f5c\u6e29\u5ea6  -  -20~70  -  \u2103", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/#platforms-supported", 
            "text": "", 
            "title": "Platforms Supported"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/#_3", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/#arduino", 
            "text": "", 
            "title": "\u4e0e Arduino \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/#_4", 
            "text": "OLED128*64 \u4f7f\u7528 SSD1308 \u82af\u7247\u7684\u6240\u6709\u5f15\u811a\uff0c\u9ed8\u8ba4\u539f\u70b9\u4f4d\u4e8e\u5de6\u4e0a\u89d2\u3002\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u7a0b\u5e8f\u6765\u66f4\u6539\u539f\u59cb\u70b9\uff0c\u4ee5\u663e\u793a\u6240\u9700\u7684\u56fe\u6848\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605  SSD1308_1.0.pdf  \u548c  LY190-128064.pdf \u3002  \u8fd9\u91cc\u6211\u4eec\u6f14\u793a\u5982\u4f55\u5728\u5c4f\u5e55\u4e0a\u663e\u793a \"Hello World\" \u3002  \u9996\u5148\u8bf7\u51c6\u5907\u4ee5\u4e0b\u5668\u6750 :     Seeeduino V4  Grove - OLED Display 0.96inch  Base Shield           \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70  \u70b9\u51fb\u8d2d\u4e70      \u5c06 Grove - OLED Display 128*64 \u63d2\u5165 Grove - Base Shield \u4e0a\u7684 I2C \u7aef\u53e3\uff0c\u7136\u540e\u5c06 Grove - Base Shield \u5806\u53e0\u5728 Seeeduino \u4e0a\uff1b", 
            "title": "\u8fde\u63a5"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/#_5", 
            "text": "\u4e0b\u8f7d  Seeed OLED Display 128*64 \u5e93\u6587\u4ef6 \u3002  \u8bf7\u6309\u7167  \u8fd9\u91cc  \u5b89\u88c5\u5e93\u3002  \u901a\u8fc7\u8def\u5f84 :  File(\u6587\u4ef6) -  Example(\u793a\u4f8b) - OLED_Display_128X64-master- OLED_Hello_World  \u6253\u5f00\u4ee3\u7801\u3002   #include  Wire.h \n#include  SeeedOLED.h \n\n\nvoid setup()\n{\n  Wire.begin();\n  SeeedOled.init();  //initialze SEEED OLED display\n\n  SeeedOled.clearDisplay();          //clear the screen and set start position to top left corner\n  SeeedOled.setNormalDisplay();      //Set display to normal mode (i.e non-inverse mode)\n  SeeedOled.setPageMode();           //Set addressing mode to Page Mode\n  SeeedOled.setTextXY(0,0);          //Set the cursor to Xth Page, Yth Column  \n  SeeedOled.putString( Hello World! ); //Print the String\n\n}\n\nvoid loop()\n{\n\n}   \u4e0a\u4f20\u4ee3\u7801  \u5c4f\u5e55\u4e0a\u5c06\u663e\u793a \"hello world\"\u3002", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/#beaglebone-green", 
            "text": "\u8981\u7f16\u8f91 BBG \u4e0a\u7684\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528  Cloud9 IDE  \u5e76\u53c2\u9605  Beaglebone Green Wiki \u3002  \u4e0b\u9762\u662f\u5728 OLED \u5c4f\u5e55\u4e0a\u663e\u793a \"Hello World\" \u7684\u6b65\u9aa4 \uff1a  \u6b65\u9aa4 1 : \u70b9\u51fb\u9876\u90e8\u53f3\u7aef\u7684 \"+\" \u521b\u5efa\u65b0\u6587\u4ef6\u3002    \u6b65\u9aa4 2 : \u590d\u5236\u5e76\u7c98\u8d34\u4ee5\u4e0b\u4ee3\u7801\u81f3 Cloud9 IDE \u7a97\u53e3\u3002 from   Adafruit_I2C   import   Adafruit_I2C  import   time  import   math  Oled   =   Adafruit_I2C ( 0x3c )  Command_Mode = 0x80  Data_mode = 0x40  grayH =   0xF0  grayL =   0x0F  Normal_Display_Cmd = 0xA4  BasicFont   =   [[ 0   for   x   in   xrange ( 8 )]   for   x   in   xrange ( 10 )]  BasicFont = [[ 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x00 , 0x5F , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x00 , 0x07 , 0x00 , 0x07 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x14 , 0x7F , 0x14 , 0x7F , 0x14 , 0x00 , 0x00 ],  [ 0x00 , 0x24 , 0x2A , 0x7F , 0x2A , 0x12 , 0x00 , 0x00 ],  [ 0x00 , 0x23 , 0x13 , 0x08 , 0x64 , 0x62 , 0x00 , 0x00 ],  [ 0x00 , 0x36 , 0x49 , 0x55 , 0x22 , 0x50 , 0x00 , 0x00 ],  [ 0x00 , 0x00 , 0x05 , 0x03 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x1C , 0x22 , 0x41 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x41 , 0x22 , 0x1C , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x08 , 0x2A , 0x1C , 0x2A , 0x08 , 0x00 , 0x00 ],  [ 0x00 , 0x08 , 0x08 , 0x3E , 0x08 , 0x08 , 0x00 , 0x00 ],  [ 0x00 , 0xA0 , 0x60 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x08 , 0x08 , 0x08 , 0x08 , 0x08 , 0x00 , 0x00 ],  [ 0x00 , 0x60 , 0x60 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x20 , 0x10 , 0x08 , 0x04 , 0x02 , 0x00 , 0x00 ],  [ 0x00 , 0x3E , 0x51 , 0x49 , 0x45 , 0x3E , 0x00 , 0x00 ],  [ 0x00 , 0x00 , 0x42 , 0x7F , 0x40 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x62 , 0x51 , 0x49 , 0x49 , 0x46 , 0x00 , 0x00 ],  [ 0x00 , 0x22 , 0x41 , 0x49 , 0x49 , 0x36 , 0x00 , 0x00 ],  [ 0x00 , 0x18 , 0x14 , 0x12 , 0x7F , 0x10 , 0x00 , 0x00 ],  [ 0x00 , 0x27 , 0x45 , 0x45 , 0x45 , 0x39 , 0x00 , 0x00 ],  [ 0x00 , 0x3C , 0x4A , 0x49 , 0x49 , 0x30 , 0x00 , 0x00 ],  [ 0x00 , 0x01 , 0x71 , 0x09 , 0x05 , 0x03 , 0x00 , 0x00 ],  [ 0x00 , 0x36 , 0x49 , 0x49 , 0x49 , 0x36 , 0x00 , 0x00 ],  [ 0x00 , 0x06 , 0x49 , 0x49 , 0x29 , 0x1E , 0x00 , 0x00 ],  [ 0x00 , 0x00 , 0x36 , 0x36 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x00 , 0xAC , 0x6C , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x08 , 0x14 , 0x22 , 0x41 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x14 , 0x14 , 0x14 , 0x14 , 0x14 , 0x00 , 0x00 ],  [ 0x00 , 0x41 , 0x22 , 0x14 , 0x08 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x02 , 0x01 , 0x51 , 0x09 , 0x06 , 0x00 , 0x00 ],  [ 0x00 , 0x32 , 0x49 , 0x79 , 0x41 , 0x3E , 0x00 , 0x00 ],  [ 0x00 , 0x7E , 0x09 , 0x09 , 0x09 , 0x7E , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x49 , 0x49 , 0x49 , 0x36 , 0x00 , 0x00 ],  [ 0x00 , 0x3E , 0x41 , 0x41 , 0x41 , 0x22 , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x41 , 0x41 , 0x22 , 0x1C , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x49 , 0x49 , 0x49 , 0x41 , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x09 , 0x09 , 0x09 , 0x01 , 0x00 , 0x00 ],  [ 0x00 , 0x3E , 0x41 , 0x41 , 0x51 , 0x72 , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x08 , 0x08 , 0x08 , 0x7F , 0x00 , 0x00 ],  [ 0x00 , 0x41 , 0x7F , 0x41 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x20 , 0x40 , 0x41 , 0x3F , 0x01 , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x08 , 0x14 , 0x22 , 0x41 , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x40 , 0x40 , 0x40 , 0x40 , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x02 , 0x0C , 0x02 , 0x7F , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x04 , 0x08 , 0x10 , 0x7F , 0x00 , 0x00 ],  [ 0x00 , 0x3E , 0x41 , 0x41 , 0x41 , 0x3E , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x09 , 0x09 , 0x09 , 0x06 , 0x00 , 0x00 ],  [ 0x00 , 0x3E , 0x41 , 0x51 , 0x21 , 0x5E , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x09 , 0x19 , 0x29 , 0x46 , 0x00 , 0x00 ],  [ 0x00 , 0x26 , 0x49 , 0x49 , 0x49 , 0x32 , 0x00 , 0x00 ],  [ 0x00 , 0x01 , 0x01 , 0x7F , 0x01 , 0x01 , 0x00 , 0x00 ],  [ 0x00 , 0x3F , 0x40 , 0x40 , 0x40 , 0x3F , 0x00 , 0x00 ],  [ 0x00 , 0x1F , 0x20 , 0x40 , 0x20 , 0x1F , 0x00 , 0x00 ],  [ 0x00 , 0x3F , 0x40 , 0x38 , 0x40 , 0x3F , 0x00 , 0x00 ],  [ 0x00 , 0x63 , 0x14 , 0x08 , 0x14 , 0x63 , 0x00 , 0x00 ],  [ 0x00 , 0x03 , 0x04 , 0x78 , 0x04 , 0x03 , 0x00 , 0x00 ],  [ 0x00 , 0x61 , 0x51 , 0x49 , 0x45 , 0x43 , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x41 , 0x41 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x02 , 0x04 , 0x08 , 0x10 , 0x20 , 0x00 , 0x00 ],  [ 0x00 , 0x41 , 0x41 , 0x7F , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x04 , 0x02 , 0x01 , 0x02 , 0x04 , 0x00 , 0x00 ],  [ 0x00 , 0x80 , 0x80 , 0x80 , 0x80 , 0x80 , 0x00 , 0x00 ],  [ 0x00 , 0x01 , 0x02 , 0x04 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x20 , 0x54 , 0x54 , 0x54 , 0x78 , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x48 , 0x44 , 0x44 , 0x38 , 0x00 , 0x00 ],  [ 0x00 , 0x38 , 0x44 , 0x44 , 0x28 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x38 , 0x44 , 0x44 , 0x48 , 0x7F , 0x00 , 0x00 ],  [ 0x00 , 0x38 , 0x54 , 0x54 , 0x54 , 0x18 , 0x00 , 0x00 ],  [ 0x00 , 0x08 , 0x7E , 0x09 , 0x02 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x18 , 0xA4 , 0xA4 , 0xA4 , 0x7C , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x08 , 0x04 , 0x04 , 0x78 , 0x00 , 0x00 ],  [ 0x00 , 0x00 , 0x7D , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x80 , 0x84 , 0x7D , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x7F , 0x10 , 0x28 , 0x44 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x41 , 0x7F , 0x40 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x7C , 0x04 , 0x18 , 0x04 , 0x78 , 0x00 , 0x00 ],  [ 0x00 , 0x7C , 0x08 , 0x04 , 0x7C , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x38 , 0x44 , 0x44 , 0x38 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0xFC , 0x24 , 0x24 , 0x18 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x18 , 0x24 , 0x24 , 0xFC , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x00 , 0x7C , 0x08 , 0x04 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x48 , 0x54 , 0x54 , 0x24 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x04 , 0x7F , 0x44 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x3C , 0x40 , 0x40 , 0x7C , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x1C , 0x20 , 0x40 , 0x20 , 0x1C , 0x00 , 0x00 ],  [ 0x00 , 0x3C , 0x40 , 0x30 , 0x40 , 0x3C , 0x00 , 0x00 ],  [ 0x00 , 0x44 , 0x28 , 0x10 , 0x28 , 0x44 , 0x00 , 0x00 ],  [ 0x00 , 0x1C , 0xA0 , 0xA0 , 0x7C , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x44 , 0x64 , 0x54 , 0x4C , 0x44 , 0x00 , 0x00 ],  [ 0x00 , 0x08 , 0x36 , 0x41 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x00 , 0x7F , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x41 , 0x36 , 0x08 , 0x00 , 0x00 , 0x00 , 0x00 ],  [ 0x00 , 0x02 , 0x01 , 0x01 , 0x02 , 0x01 , 0x00 , 0x00 ],  [ 0x00 , 0x02 , 0x05 , 0x05 , 0x02 , 0x00 , 0x00 , 0x00 ]]  def   oled_init (): \n     sendCommand ( 0xFD )   # Unlock OLED driver IC MCU interface from entering command. i.e: Accept commands \n     sendCommand ( 0x12 ) \n     sendCommand ( 0xAE )   # Set display off \n     sendCommand ( 0xA8 )   # set multiplex ratio \n     sendCommand ( 0x5F )   # 96 \n     sendCommand ( 0xA1 )   # set display start line \n     sendCommand ( 0x00 ) \n     sendCommand ( 0xA2 )   # set display offset \n     sendCommand ( 0x60 ) \n     sendCommand ( 0xA0 )   # set remap \n     sendCommand ( 0x46 ) \n     sendCommand ( 0xAB )   # set vdd internal \n     sendCommand ( 0x01 ) \n     sendCommand ( 0x81 )   # set contrasr \n     sendCommand ( 0x53 )   # 100 nit \n     sendCommand ( 0xB1 )   # Set Phase Length \n     sendCommand ( 0X51 ) \n     sendCommand ( 0xB3 )   # Set Display Clock Divide Ratio/Oscillator Frequency \n     sendCommand ( 0x01 ) \n     sendCommand ( 0xB9 ) \n     sendCommand ( 0xBC )   # set pre_charge voltage/VCOMH \n     sendCommand ( 0x08 )   # (0x08); \n     sendCommand ( 0xBE )   # set VCOMH \n     sendCommand ( 0X07 )   # (0x07); \n     sendCommand ( 0xB6 )   # Set second pre-charge period \n     sendCommand ( 0x01 ) \n     sendCommand ( 0xD5 )   # enable second precharge and enternal vsl \n     sendCommand ( 0X62 )   # (0x62); \n     sendCommand ( 0xA4 )   # Set Normal Display Mode \n     sendCommand ( 0x2E )   # Deactivate Scroll \n     sendCommand ( 0xAF )   # Switch on display \n     time . sleep ( 0.1 ) \n     # delay(100); \n\n     # Row Address \n     sendCommand ( 0x75 )      # Set Row Address \n     sendCommand ( 0x00 )      # Start 0 \n     sendCommand ( 0x5f )      # End 95 \n\n\n     # Column Address \n     sendCommand ( 0x15 )      # Set Column Address \n     sendCommand ( 0x08 )      # Start from 8th Column of driver IC. This is 0th Column for OLED \n     sendCommand ( 0x37 )      # End at  (8 + 47)th column. Each Column has 2 pixels(segments) \n\n     # Init gray level for text. Default:Brightest White \n     grayH =   0xF0 \n     grayL =   0x0F  def   sendCommand ( byte ): \n     Oled . write8 ( Command_Mode , byte )  def   sendData ( byte ): \n     Oled . write8 ( Data_mode , byte )  def   multi_comm ( commands ): \n     for   c   in   commands : \n         sendCommand ( c )  def   oled_clearDisplay (): \n     for   j   in   range   ( 0 , 48 ): \n         for   i   in   range   ( 0 , 96 ): \n             sendData ( 0x00 )  def   oled_setNormalDisplay (): \n     sendCommand ( Normal_Display_Cmd )  def   oled_setVerticalMode (): \n     sendCommand ( 0xA0 )      # remap to \n     sendCommand ( 0x46 )      # Vertical mode  def   oled_setTextXY ( Row , Column ): \n     sendCommand ( 0x15 )               # Set Column Address \n     sendCommand ( 0x08 + ( Column * 4 ))    # Start Column: Start from 8 \n     sendCommand ( 0x37 )               # End Column \n     # Row Address \n     sendCommand ( 0x75 )               # Set Row Address \n     sendCommand ( 0x00 + ( Row * 8 ))       # Start Row \n     sendCommand ( 0x07 + ( Row * 8 ))       # End Row  def   oled_putChar ( C ): \n     C_add = ord ( C ) \n     if   C_add 32   or   C_add 127 :       # Ignore non-printable ASCII characters \n         C =   \n         C_add = ord ( C ) \n\n     for   i   in   range ( 0 , 8 , 2 ): \n         for   j   in   range ( 0 , 8 ): \n             c = 0x00 \n             bit1 = (( BasicFont [ C_add - 32 ][ i ]) j ) 0x01 \n             bit2 = (( BasicFont [ C_add - 32 ][ i + 1 ]) j ) 0x01 \n             if   bit1 : \n                 c = c | grayH \n             else : \n                 c = c | 0x00 \n             if   bit2 : \n                 c = c | grayL \n             else : \n                 c = c | 0x00 \n             sendData ( c )  def   oled_putString ( String ): \n     for   i   in   range ( len ( String )): \n         oled_putChar ( String [ i ])     if   __name__ == __main__ : \n     oled_init () \n     oled_setNormalDisplay () \n     oled_setTextXY ( 0 , 0 ) \n     oled_putString ( Hello ) \n     time . sleep ( 10 ) \n     #Oled.write8(Command_Mode,0xFD) \n     #sendCommand(0xFD) \n     print   hello world   \u6b65\u9aa4 3 : \u70b9\u51fb\u5e26\u6709 .py \u6269\u5c55\u540d\u7684\u78c1\u76d8\u56fe\u6807\u4fdd\u5b58\u6587\u4ef6\u3002  \u6b65\u9aa4 4 : \u628a Grove - OLED \u8fde\u63a5\u5230 BBG \u4e0a\u7684 Grove I2C \u63a5\u53e3\u3002  \u6b65\u9aa4 5 : \u8fd0\u884c\u4ee3\u7801\u3002Grove - OLED \u5c06\u663e\u793a \"Hello World\"\u3002", 
            "title": "\u4e0e Beaglebone Green \u4e00\u8d77\u4f7f\u7528"
        }, 
        {
            "location": "/Grove-OLED_Display_0.96inch/#_6", 
            "text": "[Eagle \u6587\u4ef6]   Grove-OLED128x64  [\u539f\u7406\u56fe PDF]   Grove-OLED128x64 Schematic  [PCB \u56fe PDF]   Grove-OLED128x64 PCB  [\u5e93\u6587\u4ef6]   GitHub Library for OLED  [\u82af\u7247\u6570\u636e\u624b\u518c]   Resources of SSD1308_1.0.pdf  [\u82af\u7247\u6570\u636e\u624b\u518c]   Resources of LY190-128064.pdf  [\u5176\u4ed6\u8d44\u6e90]   Beaglebone Green Wiki", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Circular_LED/", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u72ec\u7279\u7684\u73af - \u5b83\u5171\u670924\u4e2a\u53ef\u63a7LED\u6307\u793a\u706f\u3002 \u4e5f\u8bb8\u5b83\u4f1a\u6fc0\u53d1\u51fa\u60a8\u7684\u7075\u611f\uff0c\u8fdb\u800c\u5236\u9020\u4e00\u4e2a\u53d1\u5149\u7684\u9b54\u672f\u73af\uff01 \u5728\u8fd9\u4e2a\u6a21\u5757\u7684\u4e2d\u95f4\u6709\u4e00\u4e2a1X1\u7684\u65b9\u5f62\u9542\u7a7a\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u653e\u7f6e\u4e00\u4e2aGrove-Encoder\uff0c\u5e76\u4f7f\u4e4b\u6210\u4e3a\u65cb\u8f6c\u89c6\u89c9\u7f16\u7801\u5668\uff01\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u73af\u5f62\u5916\u89c2\n\n\n24\u4e2aLED\uff0c\u6bcf\u4e2a\u901a\u9053\u53ea\u9700 5.5mA \u7535\u6d41\u9a71\u52a8\n\n\n\u53ef\u63a7LED\uff0c\u6548\u679c\u70ab\u76ee\n\n\nGrove \u63a5\u53e3\n\n\n\n\n\u539f\u7406\u56fe\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n \u9879\u76ee\n\n\n\n \u6700\u5c0f\u503c\n\n\n\n \u5178\u578b\u503c\n\n\n\n \u6700\u5927\u503c\n\n\n\n \u5355\u4f4d\n\n\n\n\n\n \u7535\u538b\n\n\n\n 4.5\n\n\n\n 5\n\n\n\n 5.5\n\n\n\n VDC\n\n\n\n\n\n \u7535\u6d41\n\n\n\n /\n\n\n\n 5.5 for each LED\n\n\n\n\n\n\n\n mA\n\n\n\n\n\n \u89c4\u683c\u5c3a\u5bf8\n\n\n\n \u76f4\u5f8445\n\n\n\n mm\n\n\n\n\n\n \u51c0\u91cd\n\n\n\n 12\n\n\n\n g\n\n\n\n\u76f8\u5173\u63a5\u53e3\n\n\n\n\n\n\n\u4f7f\u7528\u8bf4\u660e\n\n\n\n\n\u786c\u4ef6\n\n\n\u5728\u6b64\u4f8b\u7a0b\u4e2d\uff0c\u8bf7\u628a\u5c06\u8be5\u6a21\u5757\u63a5\u5165\u5230 \nGrove base shield\n \u7684 \nD9\n \u63a5\u53e3\u3002\u540c\u65f6\u60a8\u4e5f\u53ef\u4ee5\u9009\u62e9\u7528\u8df3\u7ebf\u6765\u8fde\u63a5\uff0c\n\u9ec4\u7ebf**\u63a5 **D9\n\uff0c\n\u767d\u7ebf**\u63a5 **D10\n\u3002\n\n\n\u8f6f\u4ef6\n\n\n\u8bf7\u4e0b\u8f7d \nCircularLED \u5e93\n \u7136\u540e\u4f7f\u7528 CircularLED example \u6d4b\u8bd5\u8fd9\u4e2a\u6a21\u5757\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb \n\u8fd9\u91cc\n \u6765\u67e5\u770b\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801\u5230\u63a7\u5236\u5668\u3002\n\n\n\n\n\u8bf7\u70b9\u51fb \nGrove-Encoder\n \u6765\u5b66\u4e60\u66f4\u591a\u5173\u4e8e\u6b64\u4f8b\u7a0b\u7684\u76f8\u5173\u8d44\u6599\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[eagle\u6587\u4ef6]\nGrove-circular LED eagle files\n\n\n[\u539f\u7406\u56fePDF]\nGrove Circular LED schematics PDF File\n\n\n[\u5e93\u6587\u4ef6]\nCircularLED Library", 
            "title": "Grove-Circular LED"
        }, 
        {
            "location": "/Grove-Circular_LED/#_1", 
            "text": "\u73af\u5f62\u5916\u89c2  24\u4e2aLED\uff0c\u6bcf\u4e2a\u901a\u9053\u53ea\u9700 5.5mA \u7535\u6d41\u9a71\u52a8  \u53ef\u63a7LED\uff0c\u6548\u679c\u70ab\u76ee  Grove \u63a5\u53e3", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Circular_LED/#_2", 
            "text": "", 
            "title": "\u539f\u7406\u56fe"
        }, 
        {
            "location": "/Grove-Circular_LED/#_3", 
            "text": "\u9879\u76ee   \u6700\u5c0f\u503c   \u5178\u578b\u503c   \u6700\u5927\u503c   \u5355\u4f4d    \u7535\u538b   4.5   5   5.5   VDC    \u7535\u6d41   /   5.5 for each LED     mA    \u89c4\u683c\u5c3a\u5bf8   \u76f4\u5f8445   mm    \u51c0\u91cd   12   g", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Circular_LED/#_4", 
            "text": "", 
            "title": "\u76f8\u5173\u63a5\u53e3"
        }, 
        {
            "location": "/Grove-Circular_LED/#_5", 
            "text": "", 
            "title": "\u4f7f\u7528\u8bf4\u660e"
        }, 
        {
            "location": "/Grove-Circular_LED/#_6", 
            "text": "\u5728\u6b64\u4f8b\u7a0b\u4e2d\uff0c\u8bf7\u628a\u5c06\u8be5\u6a21\u5757\u63a5\u5165\u5230  Grove base shield  \u7684  D9  \u63a5\u53e3\u3002\u540c\u65f6\u60a8\u4e5f\u53ef\u4ee5\u9009\u62e9\u7528\u8df3\u7ebf\u6765\u8fde\u63a5\uff0c \u9ec4\u7ebf**\u63a5 **D9 \uff0c \u767d\u7ebf**\u63a5 **D10 \u3002", 
            "title": "\u786c\u4ef6"
        }, 
        {
            "location": "/Grove-Circular_LED/#_7", 
            "text": "\u8bf7\u4e0b\u8f7d  CircularLED \u5e93  \u7136\u540e\u4f7f\u7528 CircularLED example \u6d4b\u8bd5\u8fd9\u4e2a\u6a21\u5757\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb  \u8fd9\u91cc  \u6765\u67e5\u770b\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801\u5230\u63a7\u5236\u5668\u3002   \u8bf7\u70b9\u51fb  Grove-Encoder  \u6765\u5b66\u4e60\u66f4\u591a\u5173\u4e8e\u6b64\u4f8b\u7a0b\u7684\u76f8\u5173\u8d44\u6599\u3002", 
            "title": "\u8f6f\u4ef6"
        }, 
        {
            "location": "/Grove-Circular_LED/#_8", 
            "text": "[eagle\u6587\u4ef6] Grove-circular LED eagle files  [\u539f\u7406\u56fePDF] Grove Circular LED schematics PDF File  [\u5e93\u6587\u4ef6] CircularLED Library", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Communication/", 
            "text": "\u8fd9\u91cc\u5217\u51fa\u4e86\u4e0e\u6709\u7ebf\u6216\u65e0\u7ebf\u901a\u4fe1\u76f8\u5173\u7684Grove\u6a21\u5757\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u901a\u4fe1\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGrove-125KHz_RFID_Reader\n\n\nGrove-433MHz_Simple_RF_Link_Kit\n\n\nGrove-Bee_Socket\n\n\nGrove-BLE_v1\n\n\nGrove-DMX512\n\n\nGrove-GPS\n\n\nGrove-I2C_ADC\n\n\nGrove-NFC\n\n\nGrove-NFC_Tag\n\n\nGrove-Protoshield\n\n\nGrove-RJ45_Adapter\n\n\nGrove-Screw_Terminal\n\n\nGrove-Serial_RF_Pro\n\n\nGrove-UART_Wifi\n\n\nGrove_LoRa_Radio", 
            "title": "Communication"
        }, 
        {
            "location": "/Communication/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u901a\u4fe1\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Grove-125KHz_RFID_Reader  Grove-433MHz_Simple_RF_Link_Kit  Grove-Bee_Socket  Grove-BLE_v1  Grove-DMX512  Grove-GPS  Grove-I2C_ADC  Grove-NFC  Grove-NFC_Tag  Grove-Protoshield  Grove-RJ45_Adapter  Grove-Screw_Terminal  Grove-Serial_RF_Pro  Grove-UART_Wifi  Grove_LoRa_Radio", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Others/", 
            "text": "\u5176\u4ed6\u672a\u5217\u51fa\u7684\u5176\u4ed6Grove\u6a21\u5757\u5217\u5728\u6b64\u5904\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove Other Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n* \nGrove-I2C_Hub\n\n* \nGrove-MOSFET\n\n* \nGrove-SPDT_Relay_30A\n\n* \nGrove-Wrapper\n\n* \nGrove_Indoor_Environment_Kit_for_Edison\n\n* \nGrove_IoT_Developer_Kit-Microsoft_Azure_Edition\n\n* \nGrove_Shield_for_Intel_Joule\n\n* \nGrove_Smart_Plant_Care_Kit", 
            "title": "Others"
        }, 
        {
            "location": "/Others/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove Other Board\u7684\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n*  Grove-I2C_Hub \n*  Grove-MOSFET \n*  Grove-SPDT_Relay_30A \n*  Grove-Wrapper \n*  Grove_Indoor_Environment_Kit_for_Edison \n*  Grove_IoT_Developer_Kit-Microsoft_Azure_Edition \n*  Grove_Shield_for_Intel_Joule \n*  Grove_Smart_Plant_Care_Kit", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/3W_Solar_Panel_138x160/", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u5b9a\u5236\u7684\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u4e0e\u6211\u4eec\u8bb8\u591a\u5f00\u53d1\u677f\u76f4\u63a5\u914d\u5408\u4f7f\u7528\uff0c\u6548\u7387\u9ad8\u8fbe16\uff05\u3002 \u6bcf\u4e2a\u5355\u5143\u6709\u900f\u660e\u7684\u73af\u6c27\u6d82\u5c42\uff0c\u5e76\u4e14\u5728\u80cc\u9762\u6709\u786c\u8d28\u7684\u677f\u6599\u3002 \u8f93\u51fa\u7684\u7ebf\u8def\u6709\u7740\u5b8c\u5584\u7684\u5bc6\u5c01\u4fdd\u62a4\uff01\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nPCB\u5c3a\u5bf8: 138*160*1.5 mm\n\n\n\u5355\u7247\u5c3a\u5bf8 : 10.93*156 mm\n\n\n\u5de5\u4f5c\u6548\u7387 : 16%\n\n\n\u5de5\u4f5c\u7535\u538b:5.5V;\n\n\n\u5de5\u4f5c\u7535\u6d41:540mA\n\n\n\u5de5\u4f5c\u529f\u7387:3W\n\n\n\u5de5\u4f5c\u6e29\u5ea6:-20\u00b0~60\u00b0\n\n\n\u8fde\u63a5\u63a5\u53e3: 2.0mm JST\n\n\n\u7c7b\u578b\uff1a156\u4e24\u884c\n\n\nPCB \u6750\u6599 :\u5168\u73bb\u7483\u7ea4\u7ef4\n\n\n\u662f\u5426 PCB \u4e1d\u5370 : \u6709\n\n\n\u540d\u5b57: PET\u5c42\u538b\uff08138 * 160\uff09\n\n\n\u6574\u4f53\u5e03\u5c40:\u4f7f\u75281*11(\u7cfb\u5217)\u7684\u9ed1\u8272\u8d34\u6761\u65e0\u95f4\u8ddd\u7684\u8fdb\u884c\u6392\u5217\n\n\n\u8d28\u91cf\u8981\u6c42 :\n\n\n\u5e73\u9762\u5ea6\u5c0f\u4e8e0.1mm\n\n\n\u4fdd\u6301\u5e72\u51c0\uff0c\u4e0d\u5141\u8bb8\u6709\u5212\u75d5\n\n\n\u4e0d\u5141\u8bb8\u6709\u8131\u6f06\u73b0\u8c61\uff0c\u4e5f\u4e0d\u5141\u8bb8\u51fa\u73b0\u5f00\u5b54\u504f\u5dee\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\u516c\u5dee\u6b63\u8d1f0.1mm\n\n\n\n\n\u5916\u5f62\u5c3a\u5bf8", 
            "title": "3W Solar Panel 138x160"
        }, 
        {
            "location": "/3W_Solar_Panel_138x160/#_1", 
            "text": "PCB\u5c3a\u5bf8: 138*160*1.5 mm  \u5355\u7247\u5c3a\u5bf8 : 10.93*156 mm  \u5de5\u4f5c\u6548\u7387 : 16%  \u5de5\u4f5c\u7535\u538b:5.5V;  \u5de5\u4f5c\u7535\u6d41:540mA  \u5de5\u4f5c\u529f\u7387:3W  \u5de5\u4f5c\u6e29\u5ea6:-20\u00b0~60\u00b0  \u8fde\u63a5\u63a5\u53e3: 2.0mm JST  \u7c7b\u578b\uff1a156\u4e24\u884c  PCB \u6750\u6599 :\u5168\u73bb\u7483\u7ea4\u7ef4  \u662f\u5426 PCB \u4e1d\u5370 : \u6709  \u540d\u5b57: PET\u5c42\u538b\uff08138 * 160\uff09  \u6574\u4f53\u5e03\u5c40:\u4f7f\u75281*11(\u7cfb\u5217)\u7684\u9ed1\u8272\u8d34\u6761\u65e0\u95f4\u8ddd\u7684\u8fdb\u884c\u6392\u5217  \u8d28\u91cf\u8981\u6c42 :  \u5e73\u9762\u5ea6\u5c0f\u4e8e0.1mm  \u4fdd\u6301\u5e72\u51c0\uff0c\u4e0d\u5141\u8bb8\u6709\u5212\u75d5  \u4e0d\u5141\u8bb8\u6709\u8131\u6f06\u73b0\u8c61\uff0c\u4e5f\u4e0d\u5141\u8bb8\u51fa\u73b0\u5f00\u5b54\u504f\u5dee      Note  \u516c\u5dee\u6b63\u8d1f0.1mm", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/3W_Solar_Panel_138x160/#_2", 
            "text": "", 
            "title": "\u5916\u5f62\u5c3a\u5bf8"
        }, 
        {
            "location": "/2.5W_Solar_Panel_116x160/", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u5b9a\u5236\u7684\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u5b83\u76f4\u63a5\u4e0e\u8bb8\u591a\u672c\u516c\u53f8\u7684\u5f00\u53d1\u677f\u914d\u5408\u4f7f\u7528\uff0c\u6548\u7387\u9ad8\u8fbe 15\uff05\u3002\u5355\u5143\u5177\u6709\u5e26\u6709\u786c\u8d28\u5408\u91d1\u80cc\u886c\u7684\u900f\u660e\u73af\u6c27\u6811\u8102\u6d82\u5c42\u3002 \u5bf9\u6237\u5916\u5e94\u7528\u575a\u56fa\u7684\u5bc6\u5c01\uff01\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\nPCB \u5c3a\u5bf8 : 116*160*1.5 mm\n\n\n\n\n\n\n\u5355\u7247\u5c3a\u5bf8 : 9.57*156 mm\n\n\n\n\n\n\n\u8f6c\u6362\u6548\u7387 : 15%\n\n\n\n\n\n\n\u7535\u538b :5.5V;\n\n\n\n\n\n\n\u7535\u6d41 :450mA\n\n\n\n\n\n\n\u529f\u8017 :2.5W\n\n\n\n\n\n\n\u63a5\u5934\u578b\u53f7 : 2.0mm JST\n\n\n\n\n\n\n\u7c7b\u578b :156 \u4e24\u884c;\n\n\n\n\n\n\nPCB \u6750\u6599 : \u5168\u73bb\u7483\u7ea4\u7ef4\n\n\n\n\n\n\n\u662f\u5426 PCB \u4e1d\u5370 : \u6709\n\n\n\n\n\n\n\u8d28\u91cf\u8981\u6c42 :\n\n\n\n\n\u5e73\u6574\u5ea6\u5c0f\u4e8e 0.1mm\n\n\n\u8868\u9762\u5149\u6ed1\u4e0d\u5141\u8bb8\u6709\u64e6\u75d5\n\n\n\u8131\u6f06\u73b0\u8c61\uff0c\u5982\u5b54\u4e0d\u5141\u8bb8\u6709\u504f\u5dee\n\n\n\n\n\n\n\n\n\u6ce8\u91ca : \u6b63\u8d1f\u504f\u5dee 0.1mm\n\n\n\n\n\n\n\u540d\u79f0 : PET \u5c42\u538b (116*160)\n\n\n\n\n\n\n\u5e03\u5c40 :1*11(series) \u65e0\u95f4\u8ddd\u8d34\u6587\u827a\u9ed1;", 
            "title": "2.5W Solar Panel 116x160"
        }, 
        {
            "location": "/2.5W_Solar_Panel_116x160/#_1", 
            "text": "PCB \u5c3a\u5bf8 : 116*160*1.5 mm    \u5355\u7247\u5c3a\u5bf8 : 9.57*156 mm    \u8f6c\u6362\u6548\u7387 : 15%    \u7535\u538b :5.5V;    \u7535\u6d41 :450mA    \u529f\u8017 :2.5W    \u63a5\u5934\u578b\u53f7 : 2.0mm JST    \u7c7b\u578b :156 \u4e24\u884c;    PCB \u6750\u6599 : \u5168\u73bb\u7483\u7ea4\u7ef4    \u662f\u5426 PCB \u4e1d\u5370 : \u6709    \u8d28\u91cf\u8981\u6c42 :   \u5e73\u6574\u5ea6\u5c0f\u4e8e 0.1mm  \u8868\u9762\u5149\u6ed1\u4e0d\u5141\u8bb8\u6709\u64e6\u75d5  \u8131\u6f06\u73b0\u8c61\uff0c\u5982\u5b54\u4e0d\u5141\u8bb8\u6709\u504f\u5dee     \u6ce8\u91ca : \u6b63\u8d1f\u504f\u5dee 0.1mm    \u540d\u79f0 : PET \u5c42\u538b (116*160)    \u5e03\u5c40 :1*11(series) \u65e0\u95f4\u8ddd\u8d34\u6587\u827a\u9ed1;", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/1w_Solar_Panel_80x100/", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u5b9a\u5236\u7684\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u80fd\u4e0e\u6211\u4eec\u8bb8\u591a\u5f00\u53d1\u677f\u76f4\u63a5\u914d\u5408\uff0c\u6548\u7387\u9ad8\u8fbe 15.5\uff05\u3002\u5355\u5143\u5177\u6709\u900f\u660e\u7684\u73af\u6c27\u6d82\u5c42\uff0c\u5e26\u6709\u786c\u677f\u80cc\u886c\u3002\u53ef\u9760\u7684\u5bc6\u5c01\u6027\u80fd\u8db3\u4ee5\u5e94\u4ed8\u6237\u5916\u4f7f\u7528\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\u503c\n\n\n\n\n\n\u5178\u578b\u5cf0\u503c\u529f\u7387\n\n\n\n0.935W\n\n\n\n\n\n\u5cf0\u503c\u529f\u7387\u4e0b\u7535\u538b\n\n\n\n5.5v\n\n\n\n\n\n\u5cf0\u503c\u529f\u7387\u4e0b\u7535\u6d41\n\n\n\n170mA\n\n\n\n\n\n\u957f\n\n\n\n100mm\n\n\n\n\n\n\u5bbd\n\n\n\n75mm\n\n\n\n\n\n\u9ad8\n\n\n\n1.5mm\n\n\n\n\n\n\u91cd\u91cf\n\n\n\n33g\n\n\n\n\n\n\u6548\u7387\n\n\n\n15.5%\n\n\n\n\n\n \u7ebf\u5f84\n\n\n\n 1.5mm\n\n\n\n\n\n \u8fde\u63a5\u5668\n\n\n\n 2.0mm JST\n\n\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\n\n\n0.5w Solar Panel 55*70\n\n\n\n\n\n\n1.5W Solar Panel 81*137\n\n\n\n\n\n\n2.5W Solar Panel 116*160\n\n\n\n\n\n\n3W Solar Panel 138*160", 
            "title": "1w Solar Panel 80x100"
        }, 
        {
            "location": "/1w_Solar_Panel_80x100/#_1", 
            "text": "\u9879\u76ee  \u503c   \u5178\u578b\u5cf0\u503c\u529f\u7387  0.935W   \u5cf0\u503c\u529f\u7387\u4e0b\u7535\u538b  5.5v   \u5cf0\u503c\u529f\u7387\u4e0b\u7535\u6d41  170mA   \u957f  100mm   \u5bbd  75mm   \u9ad8  1.5mm   \u91cd\u91cf  33g   \u6548\u7387  15.5%    \u7ebf\u5f84   1.5mm    \u8fde\u63a5\u5668   2.0mm JST", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/1w_Solar_Panel_80x100/#_2", 
            "text": "0.5w Solar Panel 55*70    1.5W Solar Panel 81*137    2.5W Solar Panel 116*160    3W Solar Panel 138*160", 
            "title": "\u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/0.5w_Solar_Panel_55x70/", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u5b9a\u5236\u7684\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u53ef\u4ee5\u4e0e\u6211\u4eec\u591a\u79cd\u5f00\u53d1\u677f\u76f4\u63a5\u914d\u5408\uff0c\u6548\u7387\u9ad8\u8fbe17\uff05\u3002 \u5404\u4e2a\u5355\u5143\u5177\u6709\u900f\u660e\u7684\u73af\u6c27\u6d82\u5c42\uff0c\u5e26\u6709\u786c\u677f\u80cc\u886c\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n \u9879\u76ee\n\n\n\n \u53c2\u6570\n\n\n\n\n\n \u6807\u51c6\u5cf0\u503c\u529f\u7387\n\n\n\n 0.55W\n\n\n\n\n\n \u5cf0\u503c\u529f\u7387\u65f6\u7684\u7535\u538b\n\n\n\n 5.5v\n\n\n\n\n\n\u5cf0\u503c\u529f\u7387\u65f6\u7684\u7535\u6d41\n\n\n\n100mA\n\n\n\n\n\n\u957f\u5ea6\n\n\n\n70 mm\n\n\n\n\n\n\u5bbd\u5ea6\n\n\n\n55 mm\n\n\n\n\n\n\u9ad8\u5ea6\n\n\n\n1.5 mm\n\n\n\n\n\n\u91cd\u91cf\n\n\n\n17g\n\n\n\n\n\n\u6548\u7387\n\n\n\n17%\n\n\n\n\n\n\u7ebf\u7c97\n\n\n\n1.5mm\n\n\n\n\n\n\u8fde\u63a5\u5668\n\n\n\n2.0mm JST\n\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\n\n\n\n\u5176\u4ed6\n\n\n\n\n\n\n\n\n1w Solar Panel 75*100\n\n\n\n\n\n\n1.5W Solar Panel 81*137\n\n\n\n\n\n\n2.5W Solar Panel 116*160\n\n\n\n\n\n\n3W Solar Panel 138*160", 
            "title": "0.5w Solar Panel 55x70"
        }, 
        {
            "location": "/0.5w_Solar_Panel_55x70/#_1", 
            "text": "\u9879\u76ee   \u53c2\u6570    \u6807\u51c6\u5cf0\u503c\u529f\u7387   0.55W    \u5cf0\u503c\u529f\u7387\u65f6\u7684\u7535\u538b   5.5v   \u5cf0\u503c\u529f\u7387\u65f6\u7684\u7535\u6d41  100mA   \u957f\u5ea6  70 mm   \u5bbd\u5ea6  55 mm   \u9ad8\u5ea6  1.5 mm   \u91cd\u91cf  17g   \u6548\u7387  17%   \u7ebf\u7c97  1.5mm   \u8fde\u63a5\u5668  2.0mm JST", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/0.5w_Solar_Panel_55x70/#_2", 
            "text": "", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/0.5w_Solar_Panel_55x70/#_3", 
            "text": "1w Solar Panel 75*100    1.5W Solar Panel 81*137    2.5W Solar Panel 116*160    3W Solar Panel 138*160", 
            "title": "\u5176\u4ed6"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/", 
            "text": "\u7528\u7eff\u8272\u80fd\u6e90\u4e3a\u60a8\u6700\u559c\u7231\u7684\u7535\u5b50\u5957\u4ef6\u4f9b\u7535\uff01 Lipo Rider \u677f\u5141\u8bb8\u4f7f\u7528\u592a\u9633\u80fd\u6765\u8fd0\u884c 5V \u4f9b\u7535\u7684\u8bbe\u5907\u3002 Lipo Rider \u677f\u662f\u60a8\u7684\u6237\u5916\u4f20\u611f\u5668\u8bbe\u8ba1\u7684\u7eff\u8272\u7535\u6e90\u89e3\u51b3\u65b9\u6848\u3002 \u5c06 Lipo Rider \u677f\u5b89\u88c5\u5230\u4f20\u611f\u5668\u677f\u4e0a\uff0c\u53ef\u4ee5\u6c38\u8fdc\u4f7f\u7528\u592a\u9633\u80fd\u53d1\u7535\uff01\n\n\nLipoRider \u975e\u5e38\u5b9e\u60e0\uff0c\u6613\u4e8e\u4f7f\u7528\u3002 \u4e0d\u9700\u8981\u7f16\u7a0b\u3002 \u5185\u90e8\u5145\u7535\u5904\u7406\u5668 IC \u80fd\u591f\u5904\u7406\u5404\u79cd\u7ec4\u4ef6\u4e4b\u95f4\u7684\u6240\u6709\u529f\u7387\u6d41\u3002\n\n\n\u5728\u592a\u9633\u80fd\u53d1\u7535\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\uff0cmicro USB \u7aef\u53e3\u5141\u8bb8\u60a8\u901a\u8fc7 USB \u4e3a\u9502\u7535\u6c60\u5145\u7535\u3002 \u5b83\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7f16\u7a0b\u60a8\u7684\u5957\u4ef6\uff0c\u800c\u4e0d\u9700\u8981\u628a Lipo Rider \u677f\u62c6\u5378\u6389\u3002\n\n\nLipo Rider \u53ef\u4ee5\u4f5c\u4e3a\u5355\u72ec\u7684\u677f\u6216\u5957\u4ef6\u8d2d\u4e70\uff08Lipo Rider +\u9502\u7535\u6c60+\u592a\u9633\u80fd\u7535\u6c60\u677f\uff09\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u5f81\n\n\n\n\nJst 2.0 \u8fde\u63a5\u5668\n\n\n\u63d0\u9ad8\u7a33\u5b9a\u7684 5V USB \u7535\u6e90\n\n\n\u82af\u7247\u5185\u7f6e\u5145\u7535/\u5145\u7535\u7b97\u6cd5\n\n\n\u901a\u8fc7\u592a\u9633\u80fd\u6216 USB \u5145\u7535\u9502\u7535\u6c60\n\n\n\u901a\u8fc7\u9502\u7535\u6c60\u6216 USB \u8fde\u63a5\u7a33\u5b9a\u7684\u7535\u6e90\u7535\u538b\n\n\n\u4e24\u4e2a USB \u7aef\u53e3\u53ef\u8ba9\u60a8\u5728\u4e3a\u9502\u7535\u6c60\u5145\u7535\u65f6\u5bf9\u5957\u4ef6\u8fdb\u884c\u7f16\u7a0b\n\n\n\u7535\u6c60\u5145\u6ee1\u6216\u5145\u7535\u72b6\u6001\u7684 LED\u6307\u793a\u706f\n\n\n\u7b80\u5355\u7684\u8bbe\u8ba1\u610f\u5473\u7740\u975e\u5e38\u5b9e\u60e0\n\n\n\u901a\u8fc7\u7b80\u5355\u7684\u6700\u7ec8\u7528\u6237\u4fee\u6539\u53ef\u6269\u5c55\u5230\u591a\u4e2a\u9502\u7535\u6c60\u548c\u5927\u578b/\u591a\u4e2a\u592a\u9633\u80fd\u7535\u6c60\u677f\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u5206\u5e03\u5f0f\u6237\u5916\u4f20\u611f\u5668\u7f51\u7edc\u7684\u7eff\u8272\u7535\u6e90\u548c\u5907\u7528\u7535\u6e90\n\n\n\u9502\u7535\u6c60\u5145\u7535\u5668\n\n\n\n\n\n\n\u8b66\u544a\n\n\n\u4f9b\u5e94\u5927\u8d1f\u8f7d\u65f6\uff0c\u7535\u8def\u677f\u53ef\u80fd\u4f1a\u53d8\u70ed\u3002\n\n\n\u6f5c\u5728\u7684\u77ed\u8def\u6216\u89e6\u7535\uff0c\u7279\u522b\u662f\u5f53\u5ba4\u5916\u653e\u7f6e\u592a\u9633\u80fd\u96c6\u7535\u65f6\uff0c\u8bbe\u5907\u4f1a\u53d8\u6e7f\u3002\n\n\n\n\n\n\u786c\u4ef6\u6982\u51b5\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u5c0f\u5c3a\u5bf8 - \u5c3a\u5bf8 = L42mm\u00d7W34mm\u00d7D6.8mm\n\n\n\u9502\u7535\u6c60\u6700\u5927\u5145\u7535\u7535\u6d41\u4e3a 900mA\n\n\n\u9502\u7535\u6c60\u6700\u5927\u4f9b\u7535\u7535\u6d41\u4e3a 600mA\n\n\n\u7535\u6e90\u4e8c\u6781\u7ba1\uff0c\u4ee5\u9632\u6b62\u4ece USB \u8bbe\u5907\u8fd4\u56de\u5230 Lipo \u7535\u6c60\n\n\n\n\n\u4e3b\u8981\u89c4\u683c\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\n\n\n\n\n\u6807\u51c6\n\n\n\n\n\u6700\u5927\n\n\n\n\n\n\n\n\nU\nin\n \u592a\u9633\u80fd\n\n\n\n\n4.8V\n\n\n\n\n5.0V\n\n\n\n\n6.0V\n\n\n\n\n\n\n\n\nI\ncharge\n (R\nIset\n=2.0k\u03a9)\n\n\n\n\n700mA\n\n\n\n\n800mA\n\n\n\n\n900mA\n\n\n\n\n\n\n\n\nI\n\u4f9b\u7ed9\n\n\n\n\n\n0mA\n\n\n\n\n\n\n\n\n600mA\n\n\n\n\n\n\n\n\nV\nbatt\n(R\nx\n=0\u03a9)\n\n\n\n\n4.2V\n\n\n\n\n\n\n\n\nV\nsource USB\n\n\n\n\n\n5.0V\n\n\n\n\n\n\n\n\nV\ndestination USB\n\n\n\n\n\n5.0V\n\n\n\n\n\n\n\n\n\u5f15\u811a\u5b9a\u4e49\u548c\u989d\u5b9a\u503c\n\n\n\u5f15\u811a\u5b9a\u4e49\u548c\u989d\u5b9a\u503c\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCH \u5f15\u811a\u7535\u5e73\uff08\u7ea2\u8272LED\u72b6\u6001\uff09\n\n\nOK \u5f15\u811a\u7535\u5e73\uff08\u7eff\u8272LED\u72b6\u6001\uff09\n\n\n\u58f0\u660e\n\n\n\n\n\n\n\n\n\n\n\u4f4e\u7535\u5e73\uff08ON\uff09\n\n\n\u9ad8\u7ea7\uff08OFF\uff09\n\n\n\u5145\u7535\n\n\n\n\n\n\n\u9ad8\u7ea7\uff08OFF\uff09\n\n\n\u4f4e\u7ea7\uff08\u6700\u540e\u5f00\u542f\uff09\n\n\n\u5b8c\u6210\n\n\n\n\n\n\n\u8109\u51b2\u4fe1\u53f7\uff08Flash\uff09\n\n\n\u8109\u51b2\u4fe1\u53f7\uff08ON\uff09\n\n\n\u7535\u6c60\u4e0d\u5b58\u5728\n\n\n\n\n\n\n\u9ad8\u7ea7\uff08OFF\uff09\n\n\n\u9ad8\u7ea7\uff08OFF\uff09\n\n\n\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\n\n\u8f93\u5165\u7535\u538b\u4f4e\u4e8e\u95e8\u7535\u538b\n\n\n\u8f93\u5165\u7535\u538b\u4f4e\u4e8e\u7535\u6c60\u7535\u538b\n\n\n\n\n\n\n\n\n\n\n\n\u786c\u4ef6\u7ec4\u4ef6\n\n\n\u592a\u9633\u80fd\u677f\n\n\n\u592a\u9633\u80fd\u7535\u6c60\u677f\u901a\u8fc7\u4e0b\u90e8 JST \u8fde\u63a5\u5668\u8fde\u63a5\u5230\u7535\u8def\u677f\u3002 \u8bf7\u6ce8\u610f\uff0c\u592a\u9633\u80fd\u5145\u7535\u5668 IC \u53ea\u63a5\u53d7 4.8-6.0V \u8303\u56f4\u5185\u7684\u8f93\u5165\u7535\u538b\u3002 \u5982\u679c\u5145\u7535\u6307\u793a\u706f\u4e0d\u4eae\uff0c\u53ef\u80fd\u662f\u7531\u4e8e\uff1a\n\n\n1.\u9502\u7535\u6c60\u7535\u91cf\u5145\u8db3\n2.\u592a\u9633\u80fd\u7535\u6c60\u677f\u7535\u538b\u8d85\u51fa\u8303\u56f4\uff08\u5f88\u53ef\u80fd\u662f\u7531\u4e8e\u592a\u9633\u80fd\u53d1\u7535\u4e0d\u8db3\uff09\u3002\n\n\n\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u91cd\u65b0\u5b89\u7f6e\u592a\u9633\u80fd\u7535\u6c60\u677f\u6765\u63a5\u53d7\u66f4\u591a\u7684\u9633\u5149\u3002 \u4e0a\u8ff0\u6761\u4ef6\u90fd\u4e0d\u4f1a\u963b\u6b62 Lipo Rider \u5411 USB \u63d0\u4f9b\u7a33\u5b9a\u7684 5V \u7535\u6e90\u3002\n\n\n\u592a\u9633\u80fd\u7535\u6c60\u677f\u65b9\u7a0b\u5f0f\n\n\n\u592a\u9633\u80fd\u7535\u6c60\u677f\u8f93\u51fa\u529f\u7387 = \u8f93\u51fa\u7535\u6d41\u00d7\u7535\u6e90\u7535\u538b\n\n\n\u4f8b\u5982 1W =\u8f93\u51fa\u7535\u6d41\u00d75V\n\n\nIout = 200mA\n\n\n\u56e0\u6b64\uff0c\u5145\u75351\u5c0f\u65f6\u5c06\u7ed9\u4e88 200mAh\uff0c\u5ffd\u7565\u635f\u5931\u3002 \u5bf9\u4e8e 1000mAH \u7684\u7535\u6c60\uff0c\u5728\u7406\u60f3\u6761\u4ef6\u4e0b\uff0c\u5145\u7535\u5b8c\u6210\u9700\u8981\u5927\u7ea65\u4e2a\u5c0f\u65f6\u3002\n\n\n\u9502\u7535\u6c60\n\n\n\u540d\u79f0 Lipo Rider \u5efa\u8bae\u4f7f\u7528\u9502\u805a\u5408\u7269\u3002 \u7136\u800c\uff0c\u9502\u805a\u5408\u7269\u548c\u9502\u79bb\u5b50\u7535\u6c60\u7684\u5316\u5b66\u6027\u80fd\u76f8\u5f53\u4e8e\u53ef\u4e92\u6362\u4f7f\u7528\u7684\u4e24\u79cd\u7535\u6c60\u7c7b\u578b\u3002 \u5982\u679c\u4f7f\u7528\u591a\u4e2a\u7535\u6c60\uff0c\u5219\u5e76\u8054\u800c\u4e0d\u662f\u4e32\u8054\u8fde\u63a5\uff0c\u56e0\u4e3a\u5145\u7535\u5668 IC \u63d0\u4f9b 4.2V\u3002\n\n\n\u6ed1\u52a8\u5f00\u5173\n\n\n\u4f7f\u7528\u6ed1\u52a8\u5f00\u5173\u63a7\u5236 USB 5V\u7535\u6e90\u3002 ON - \u4ece\u9502\u7535\u6c60\u548c/\u6216\u592a\u9633\u80fd\u5173\u95ed\u5145\u7535 - \u9502\u7535\u6c60\u548c/\u6216\u592a\u9633\u80fd\u5145\u7535\u7981\u7528\n\n\nUSB\u7aef\u53e3\n\n\nsource USB \u7aef\u53e3\u662f\u4e00\u4e2a \nmicro-USB\n \u7aef\u53e3\uff0c\u7528\u4f5c\u666e\u901a USB \u7aef\u53e3\u3002source USB \u7aef\u53e3\u53ef\u7528\u4e8e\u901a\u8fc7\u76ee\u6807 USB \u7aef\u53e3\u4e3a\u9502\u7535\u6c60\u5145\u7535\u6216\u8fde\u63a5\u5230\u76ee\u6807\u8bbe\u5907\u3002\n\n\n\u76ee\u6807USB\u7aef\u53e3\n\n\n\u76ee\u6807 USB \u7aef\u53e3\u662f\u76ee\u6807\u8bbe\u5907\u8981\u8fde\u63a5\u7684\u4f4d\u7f6e\u3002 \u5230\u8fbe\u76ee\u7684\u5730\u8bbe\u5907\u7684\u7535\u6e90\u5c06\u7531 Lipo Rider \u677f\u63d0\u4f9b\u3002 \u7535\u6e90\u5c06\u6765\u81ea\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u9502\u7535\u6c60\u6216 USB \u7aef\u53e3\u3002\n\n\n\u4e0d\u540c\u8fde\u63a5\u60c5\u51b5\u4e0b\u7684\u8fde\u63a5\u65b9\u5f0f\n\n\n\u7531\u4e8e\u7ec4\u5408\u6570\u91cf\u5e9e\u5927\uff0c\u6211\u53ea\u5305\u62ec\u4e3b\u8981\u573a\u666f\uff1a\n\n\n\u72ec\u7acb\u6a21\u5f0f\n\n\n\u592a\u9633\u80fd\u5145\u7535\u9502\u7535\u6c60\u3002\n\n\n\n\nUSB\u6a21\u5f0f\n\n\n\u592a\u9633\u80fd\u5145\u7535\u9502\u7535\u6c60\u3002 \u9502\u7535\u6c60\u4f9b\u5e94\u76ee\u7684\u5730USB\u8bbe\u5907\u3002\n\n\n\n\n\u7a0b\u5f0f\u6a21\u5f0f\n\n\nUSB \u6570\u636e\u7ebf\u5c06\u4e3a\u9502\u7535\u6c60\u548c\u76ee\u6807\u8bbe\u5907\u8fdb\u884c\u5145\u7535\u3002 \u6570\u636e\u7ebf\u5c06\u5728\u7535\u6e90\u4e0e\u76ee\u6807USB\u8bbe\u5907\u4e4b\u95f4\u4f7f\u7528\u3002\n\n\n\n\n\u793a\u4f8b\n\n\n\u6237\u5916\u4f20\u611f\u5668\u8bbe\u5907\u7535\u6e90\n\n\nLipo Rider \u677f\u7684\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u4f5c\u4e3a\u6237\u5916\u4f20\u611f\u5668\u7684\u7ecf\u6d4e\u5b9e\u60e0\u7684\u7535\u6e90\u3002 \u5ba4\u5916\u4f20\u611f\u5668\u8bbe\u5907\u5c06\u7531\u9502\u7535\u6c60\u4f9b\u7535\uff0c\u7531\u592a\u9633\u80fd\u7535\u6c60\u677f\u8865\u5145\u3002 \u8bf7\u6ce8\u610f\uff0c\u4e0d\u5efa\u8bae\u4ec5\u5728\u592a\u9633\u80fd\u53d1\u7535\u4e0a\u8fd0\u884c\u6237\u5916\u4f20\u611f\u5668\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u5728\u767d\u5929\u6709\u6240\u53d8\u5316\uff0c\u5e76\u53ef\u80fd\u5bfc\u81f4\u4f20\u611f\u5668\u610f\u5916\u590d\u4f4d/\u65ad\u7535\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bbe\u5907\u4ee5\u201cUSB\u6a21\u5f0f\u201d\u8fd0\u884c\u3002\n\n\n\u5982\u679c\u9700\u8981\u6237\u5916\u4f20\u611f\u5668\u8bbe\u5907\u7684\u56fa\u4ef6\u91cd\u65b0\u7f16\u7a0b\uff0c\u8bf7\u7b80\u5355\u5730\u5c06\u5fae\u578b USB \u7aef\u53e3\u8fde\u63a5\u5230 PC\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u5c06\u5c06\u8bbe\u5907\u7f6e\u4e8e\u201c\u7a0b\u5e8f\u6a21\u5f0f\u201d\u4e0b\u3002\n\n\n\u53ef\u4ee5\u4f7f\u7528\u8f83\u5927/\u591a\u4e2a\u7535\u6c60\u548c/\u6216\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u4f46\u53ea\u80fd\u7528\u6700\u7ec8\u7528\u6237\u8fdb\u884c\u4fee\u6539\u3002\n\n\n\n\nLipo Rider \u4e3a Arduino Duemilanove \u63d0\u4f9b\u52a8\u529b\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u6ca1\u6709\u4e25\u683c\u4f7f\u7528\u5ba4\u5916\u4f20\u611f\u5668\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u8fde\u63a5\u4efb\u4f55\u4f20\u611f\u5668\uff0c\u5e76\u4e14\u4e0d\u662f\u6237\u5916\u7684\uff0c\u4e0d\u8fc7\u6211\u77e5\u9053\u60a8\u80fd\u7406\u89e3\u6211\u7684\u91cd\u70b9\uff09\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\nLi-Po Rider v1.3 Schematic and Layout in Eagle format", 
            "title": "Lipo Rider V1.3"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_1", 
            "text": "Jst 2.0 \u8fde\u63a5\u5668  \u63d0\u9ad8\u7a33\u5b9a\u7684 5V USB \u7535\u6e90  \u82af\u7247\u5185\u7f6e\u5145\u7535/\u5145\u7535\u7b97\u6cd5  \u901a\u8fc7\u592a\u9633\u80fd\u6216 USB \u5145\u7535\u9502\u7535\u6c60  \u901a\u8fc7\u9502\u7535\u6c60\u6216 USB \u8fde\u63a5\u7a33\u5b9a\u7684\u7535\u6e90\u7535\u538b  \u4e24\u4e2a USB \u7aef\u53e3\u53ef\u8ba9\u60a8\u5728\u4e3a\u9502\u7535\u6c60\u5145\u7535\u65f6\u5bf9\u5957\u4ef6\u8fdb\u884c\u7f16\u7a0b  \u7535\u6c60\u5145\u6ee1\u6216\u5145\u7535\u72b6\u6001\u7684 LED\u6307\u793a\u706f  \u7b80\u5355\u7684\u8bbe\u8ba1\u610f\u5473\u7740\u975e\u5e38\u5b9e\u60e0  \u901a\u8fc7\u7b80\u5355\u7684\u6700\u7ec8\u7528\u6237\u4fee\u6539\u53ef\u6269\u5c55\u5230\u591a\u4e2a\u9502\u7535\u6c60\u548c\u5927\u578b/\u591a\u4e2a\u592a\u9633\u80fd\u7535\u6c60\u677f", 
            "title": "\u4ea7\u54c1\u7279\u5f81"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_2", 
            "text": "\u5206\u5e03\u5f0f\u6237\u5916\u4f20\u611f\u5668\u7f51\u7edc\u7684\u7eff\u8272\u7535\u6e90\u548c\u5907\u7528\u7535\u6e90  \u9502\u7535\u6c60\u5145\u7535\u5668    \u8b66\u544a  \u4f9b\u5e94\u5927\u8d1f\u8f7d\u65f6\uff0c\u7535\u8def\u677f\u53ef\u80fd\u4f1a\u53d8\u70ed\u3002  \u6f5c\u5728\u7684\u77ed\u8def\u6216\u89e6\u7535\uff0c\u7279\u522b\u662f\u5f53\u5ba4\u5916\u653e\u7f6e\u592a\u9633\u80fd\u96c6\u7535\u65f6\uff0c\u8bbe\u5907\u4f1a\u53d8\u6e7f\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_3", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u51b5"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_4", 
            "text": "\u5c0f\u5c3a\u5bf8 - \u5c3a\u5bf8 = L42mm\u00d7W34mm\u00d7D6.8mm  \u9502\u7535\u6c60\u6700\u5927\u5145\u7535\u7535\u6d41\u4e3a 900mA  \u9502\u7535\u6c60\u6700\u5927\u4f9b\u7535\u7535\u6d41\u4e3a 600mA  \u7535\u6e90\u4e8c\u6781\u7ba1\uff0c\u4ee5\u9632\u6b62\u4ece USB \u8bbe\u5907\u8fd4\u56de\u5230 Lipo \u7535\u6c60", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_5", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f  \n\u6807\u51c6  \n\u6700\u5927    \nU in  \u592a\u9633\u80fd  \n4.8V  \n5.0V  \n6.0V    \nI charge  (R Iset =2.0k\u03a9)  \n700mA  \n800mA  \n900mA    \nI \u4f9b\u7ed9   \n0mA    \n600mA    \nV batt (R x =0\u03a9)  \n4.2V    \nV source USB   \n5.0V    \nV destination USB   \n5.0V", 
            "title": "\u4e3b\u8981\u89c4\u683c"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_6", 
            "text": "", 
            "title": "\u5f15\u811a\u5b9a\u4e49\u548c\u989d\u5b9a\u503c"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_7", 
            "text": "CH \u5f15\u811a\u7535\u5e73\uff08\u7ea2\u8272LED\u72b6\u6001\uff09  OK \u5f15\u811a\u7535\u5e73\uff08\u7eff\u8272LED\u72b6\u6001\uff09  \u58f0\u660e      \u4f4e\u7535\u5e73\uff08ON\uff09  \u9ad8\u7ea7\uff08OFF\uff09  \u5145\u7535    \u9ad8\u7ea7\uff08OFF\uff09  \u4f4e\u7ea7\uff08\u6700\u540e\u5f00\u542f\uff09  \u5b8c\u6210    \u8109\u51b2\u4fe1\u53f7\uff08Flash\uff09  \u8109\u51b2\u4fe1\u53f7\uff08ON\uff09  \u7535\u6c60\u4e0d\u5b58\u5728    \u9ad8\u7ea7\uff08OFF\uff09  \u9ad8\u7ea7\uff08OFF\uff09  \u4e24\u79cd\u60c5\u51b5\uff1a  \u8f93\u5165\u7535\u538b\u4f4e\u4e8e\u95e8\u7535\u538b  \u8f93\u5165\u7535\u538b\u4f4e\u4e8e\u7535\u6c60\u7535\u538b", 
            "title": "\u5f15\u811a\u5b9a\u4e49\u548c\u989d\u5b9a\u503c"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_8", 
            "text": "\u592a\u9633\u80fd\u677f  \u592a\u9633\u80fd\u7535\u6c60\u677f\u901a\u8fc7\u4e0b\u90e8 JST \u8fde\u63a5\u5668\u8fde\u63a5\u5230\u7535\u8def\u677f\u3002 \u8bf7\u6ce8\u610f\uff0c\u592a\u9633\u80fd\u5145\u7535\u5668 IC \u53ea\u63a5\u53d7 4.8-6.0V \u8303\u56f4\u5185\u7684\u8f93\u5165\u7535\u538b\u3002 \u5982\u679c\u5145\u7535\u6307\u793a\u706f\u4e0d\u4eae\uff0c\u53ef\u80fd\u662f\u7531\u4e8e\uff1a  1.\u9502\u7535\u6c60\u7535\u91cf\u5145\u8db3\n2.\u592a\u9633\u80fd\u7535\u6c60\u677f\u7535\u538b\u8d85\u51fa\u8303\u56f4\uff08\u5f88\u53ef\u80fd\u662f\u7531\u4e8e\u592a\u9633\u80fd\u53d1\u7535\u4e0d\u8db3\uff09\u3002  \u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u91cd\u65b0\u5b89\u7f6e\u592a\u9633\u80fd\u7535\u6c60\u677f\u6765\u63a5\u53d7\u66f4\u591a\u7684\u9633\u5149\u3002 \u4e0a\u8ff0\u6761\u4ef6\u90fd\u4e0d\u4f1a\u963b\u6b62 Lipo Rider \u5411 USB \u63d0\u4f9b\u7a33\u5b9a\u7684 5V \u7535\u6e90\u3002  \u592a\u9633\u80fd\u7535\u6c60\u677f\u65b9\u7a0b\u5f0f  \u592a\u9633\u80fd\u7535\u6c60\u677f\u8f93\u51fa\u529f\u7387 = \u8f93\u51fa\u7535\u6d41\u00d7\u7535\u6e90\u7535\u538b  \u4f8b\u5982 1W =\u8f93\u51fa\u7535\u6d41\u00d75V  Iout = 200mA  \u56e0\u6b64\uff0c\u5145\u75351\u5c0f\u65f6\u5c06\u7ed9\u4e88 200mAh\uff0c\u5ffd\u7565\u635f\u5931\u3002 \u5bf9\u4e8e 1000mAH \u7684\u7535\u6c60\uff0c\u5728\u7406\u60f3\u6761\u4ef6\u4e0b\uff0c\u5145\u7535\u5b8c\u6210\u9700\u8981\u5927\u7ea65\u4e2a\u5c0f\u65f6\u3002  \u9502\u7535\u6c60  \u540d\u79f0 Lipo Rider \u5efa\u8bae\u4f7f\u7528\u9502\u805a\u5408\u7269\u3002 \u7136\u800c\uff0c\u9502\u805a\u5408\u7269\u548c\u9502\u79bb\u5b50\u7535\u6c60\u7684\u5316\u5b66\u6027\u80fd\u76f8\u5f53\u4e8e\u53ef\u4e92\u6362\u4f7f\u7528\u7684\u4e24\u79cd\u7535\u6c60\u7c7b\u578b\u3002 \u5982\u679c\u4f7f\u7528\u591a\u4e2a\u7535\u6c60\uff0c\u5219\u5e76\u8054\u800c\u4e0d\u662f\u4e32\u8054\u8fde\u63a5\uff0c\u56e0\u4e3a\u5145\u7535\u5668 IC \u63d0\u4f9b 4.2V\u3002  \u6ed1\u52a8\u5f00\u5173  \u4f7f\u7528\u6ed1\u52a8\u5f00\u5173\u63a7\u5236 USB 5V\u7535\u6e90\u3002 ON - \u4ece\u9502\u7535\u6c60\u548c/\u6216\u592a\u9633\u80fd\u5173\u95ed\u5145\u7535 - \u9502\u7535\u6c60\u548c/\u6216\u592a\u9633\u80fd\u5145\u7535\u7981\u7528  USB\u7aef\u53e3  source USB \u7aef\u53e3\u662f\u4e00\u4e2a  micro-USB  \u7aef\u53e3\uff0c\u7528\u4f5c\u666e\u901a USB \u7aef\u53e3\u3002source USB \u7aef\u53e3\u53ef\u7528\u4e8e\u901a\u8fc7\u76ee\u6807 USB \u7aef\u53e3\u4e3a\u9502\u7535\u6c60\u5145\u7535\u6216\u8fde\u63a5\u5230\u76ee\u6807\u8bbe\u5907\u3002  \u76ee\u6807USB\u7aef\u53e3  \u76ee\u6807 USB \u7aef\u53e3\u662f\u76ee\u6807\u8bbe\u5907\u8981\u8fde\u63a5\u7684\u4f4d\u7f6e\u3002 \u5230\u8fbe\u76ee\u7684\u5730\u8bbe\u5907\u7684\u7535\u6e90\u5c06\u7531 Lipo Rider \u677f\u63d0\u4f9b\u3002 \u7535\u6e90\u5c06\u6765\u81ea\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u9502\u7535\u6c60\u6216 USB \u7aef\u53e3\u3002", 
            "title": "\u786c\u4ef6\u7ec4\u4ef6"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_9", 
            "text": "\u7531\u4e8e\u7ec4\u5408\u6570\u91cf\u5e9e\u5927\uff0c\u6211\u53ea\u5305\u62ec\u4e3b\u8981\u573a\u666f\uff1a  \u72ec\u7acb\u6a21\u5f0f  \u592a\u9633\u80fd\u5145\u7535\u9502\u7535\u6c60\u3002   USB\u6a21\u5f0f  \u592a\u9633\u80fd\u5145\u7535\u9502\u7535\u6c60\u3002 \u9502\u7535\u6c60\u4f9b\u5e94\u76ee\u7684\u5730USB\u8bbe\u5907\u3002   \u7a0b\u5f0f\u6a21\u5f0f  USB \u6570\u636e\u7ebf\u5c06\u4e3a\u9502\u7535\u6c60\u548c\u76ee\u6807\u8bbe\u5907\u8fdb\u884c\u5145\u7535\u3002 \u6570\u636e\u7ebf\u5c06\u5728\u7535\u6e90\u4e0e\u76ee\u6807USB\u8bbe\u5907\u4e4b\u95f4\u4f7f\u7528\u3002", 
            "title": "\u4e0d\u540c\u8fde\u63a5\u60c5\u51b5\u4e0b\u7684\u8fde\u63a5\u65b9\u5f0f"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_10", 
            "text": "", 
            "title": "\u793a\u4f8b"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_11", 
            "text": "Lipo Rider \u677f\u7684\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u4f5c\u4e3a\u6237\u5916\u4f20\u611f\u5668\u7684\u7ecf\u6d4e\u5b9e\u60e0\u7684\u7535\u6e90\u3002 \u5ba4\u5916\u4f20\u611f\u5668\u8bbe\u5907\u5c06\u7531\u9502\u7535\u6c60\u4f9b\u7535\uff0c\u7531\u592a\u9633\u80fd\u7535\u6c60\u677f\u8865\u5145\u3002 \u8bf7\u6ce8\u610f\uff0c\u4e0d\u5efa\u8bae\u4ec5\u5728\u592a\u9633\u80fd\u53d1\u7535\u4e0a\u8fd0\u884c\u6237\u5916\u4f20\u611f\u5668\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u5728\u767d\u5929\u6709\u6240\u53d8\u5316\uff0c\u5e76\u53ef\u80fd\u5bfc\u81f4\u4f20\u611f\u5668\u610f\u5916\u590d\u4f4d/\u65ad\u7535\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bbe\u5907\u4ee5\u201cUSB\u6a21\u5f0f\u201d\u8fd0\u884c\u3002  \u5982\u679c\u9700\u8981\u6237\u5916\u4f20\u611f\u5668\u8bbe\u5907\u7684\u56fa\u4ef6\u91cd\u65b0\u7f16\u7a0b\uff0c\u8bf7\u7b80\u5355\u5730\u5c06\u5fae\u578b USB \u7aef\u53e3\u8fde\u63a5\u5230 PC\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u5c06\u5c06\u8bbe\u5907\u7f6e\u4e8e\u201c\u7a0b\u5e8f\u6a21\u5f0f\u201d\u4e0b\u3002  \u53ef\u4ee5\u4f7f\u7528\u8f83\u5927/\u591a\u4e2a\u7535\u6c60\u548c/\u6216\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u4f46\u53ea\u80fd\u7528\u6700\u7ec8\u7528\u6237\u8fdb\u884c\u4fee\u6539\u3002   Lipo Rider \u4e3a Arduino Duemilanove \u63d0\u4f9b\u52a8\u529b\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u6ca1\u6709\u4e25\u683c\u4f7f\u7528\u5ba4\u5916\u4f20\u611f\u5668\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u8fde\u63a5\u4efb\u4f55\u4f20\u611f\u5668\uff0c\u5e76\u4e14\u4e0d\u662f\u6237\u5916\u7684\uff0c\u4e0d\u8fc7\u6211\u77e5\u9053\u60a8\u80fd\u7406\u89e3\u6211\u7684\u91cd\u70b9\uff09", 
            "title": "\u6237\u5916\u4f20\u611f\u5668\u8bbe\u5907\u7535\u6e90"
        }, 
        {
            "location": "/Lipo_Rider_V1.3/#_12", 
            "text": "Li-Po Rider v1.3 Schematic and Layout in Eagle format", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/", 
            "text": "Water flow sensor \u7531\u5851\u6599\u9600\u4f53\uff0c\u6c34\u8f6c\u5b50\u548c\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u7ec4\u6210\u3002 \u5f53\u6c34\u6d41\u8fc7\u8f6c\u5b50\u65f6\uff0c\u8f6c\u5b50\u6eda\u52a8\u3002 \u5176\u901f\u5ea6\u968f\u7740\u6d41\u901f\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002 \u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u4f1a\u8f93\u51fa\u76f8\u5e94\u7684\u8109\u51b2\u4fe1\u53f7\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u6700\u5c0f\u5de5\u4f5c\u7535\u538b\n\n\n\nDC 4.5V\n\n\n\n\n\n\u6700\u5927\u5de5\u4f5c\u7535\u6d41\n\n\n\n15mA(DC 5V)\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n5V\uff5e24V\n\n\n\n\n\n\u6c34\u6d41\u91cf\u8303\u56f4\n\n\n\n1\uff5e60L/min\n\n\n\n\n\n\u627f\u8f7d\u91cf\n\n\n\n\u226410mA(DC 5V)\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n\n\u226480\u2103\n\n\n\n\n\n\u6db2\u4f53\u6e29\u5ea6\n\n\n\n\u2264120\u2103\n\n\n\n\n\n\u5de5\u4f5c\u6e7f\u5ea6\n\n\n\n35%\uff5e90%RH\n\n\n\n\n\n\u6c34\u538b\u529b\n\n\n\n\u22642.0MPa\n\n\n\n\n\n\u50a8\u5b58\u6e29\u5ea6\n\n\n\n-25\u2103\uff5e+80\u2103\n\n\n\n\n\n\u50a8\u5b58\u6e7f\u5ea6\n\n\n\n25%\uff5e95%RH\n\n\n\n\u673a\u68b0\u5c3a\u5bf8\n\n\n\n\n\u4f20\u611f\u5668\u7ec4\u4ef6\n\n\n\n\n\n\n\u5e8f\u53f7\n\n\n\n\u540d\u5b57\n\n\n\n\u6570\u91cf\n\n\n\n\u6750\u6599\n\n\n\n\u5907\u6ce8\n\n\n\n\n\n 1\n\n\n\n \u9600\u4f53\n\n\n\n  1\n\n\n\n  PA66 + 33\uff05\u73bb\u7483\u7ea4\u7ef4\n\n\n\n\n\n\n\n\n\n 2\n\n\n\n  \u4e0d\u9508\u94a2\u73e0\n\n\n\n  1\n\n\n\n  \u4e0d\u9508\u94a2SUS304\n\n\n\n\n\n\n\n\n\n 3\n\n\n\n  \u8f74\n\n\n\n  1\n\n\n\n  \u4e0d\u9508\u94a2SUS304\n\n\n\n\n\n\n\n\n\n 4\n\n\n\n  \u53f6\u8f6e\n\n\n\n  1\n\n\n\n  POM\n\n\n\n\n\n\n\n\n\n 5\n\n\n\n  \u73af\u5f62\u78c1\u94c1\n\n\n\n  1\n\n\n\n  \u94c1\u7d20\u4f53\n\n\n\n\n\n\n\n\n\n 6\n\n\n\n  \u4e2d\u73af\n\n\n\n  1\n\n\n\n  PA66 + 33\uff05\u73bb\u7483\u7ea4\u7ef4\n\n\n\n\n\n\n\n\n\n 7\n\n\n\n  O \u578b\u5bc6\u5c01\u5708\n\n\n\n  1\n\n\n\n  \u6a61\u80f6\n\n\n\n\n\n\n\n\n\n 8\n\n\n\n  \u7535\u5b50\u5bc6\u5c01\u5708\n\n\n\n  1\n\n\n\n  \u6a61\u80f6\n\n\n\n\n\n\n\n\n\n 9\n\n\n\n  \u76d6\n\n\n\n  1\n\n\n\n  PA66 + 33\uff05\u73bb\u7483\u7ea4\u7ef4\n\n\n\n\n\n\n\n\n\n 10\n\n\n\n  \u87ba\u6813\n\n\n\n  4\n\n\n\n  \u4e0d\u9508\u94a2SUS304\n\n\n\n\n\n\n\n\n\n 11\n\n\n\n  \u7ebf\n\n\n\n  1\n\n\n\n  1007 24AWG\n\n\n\n\n\n\n\n\n\u4f7f\u7528\u4f8b\u5b50\n\n\n\n\nNote: \u8fd9\u4e2a\u4f8b\u5b50\u662f\u7531 Charles Gantt \u5b8c\u6210\u7684\u3002 \u611f\u8c22\u4ed6\u7684\u8d21\u732e\u3002\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\n\n\u7528\u6c34\u6d41\u91cf\u4f20\u611f\u5668\u8bfb\u53d6\u6c34\u6d41\u91cf\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6211\u76f4\u5728\u7814\u7a76\u7684\u4e00\u4e2a\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4f1a\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e9b\uff0c\u5173\u4e8e\u5982\u4f55\u4f7f\u7528 Seeed Studio Depo \u4e2d\u7684 Water Flow Sensor  \u8bfb\u53d6\u6bcf\u5c0f\u65f6\u7684\u6c34\u6d41\u91cf\u3002 \u5b83\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u65cb\u8f6c\u8f6e\u5e76\u4e0e\u970d\u5c14\u4f20\u611f\u5668\u4e00\u8d77\u4f7f\u7528\u3002 \u901a\u8fc7\u8bfb\u53d6\u8fd9\u4e9b\u8109\u51b2\u5e76\u8bb0\u5f55\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6db2\u4f53\u6d41\u901f\u7cbe\u786e\u5230 3\uff05 \u4ee5\u5185\u3002\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\u60a8\u5c06\u9700\u8981 Seeeduino / Arduino\uff0c\u6c34\u6d41\u4f20\u611f\u5668\uff0c10K\u7535\u963b\uff0c\u9762\u5305\u677f\u548c\u4e00\u4e9b\u8df3\u7ebf\u3002\n\n\n\u8fde\u63a5 Water Flow Sensor \u975e\u5e38\u7b80\u5355\u3002 \u6709\u4e09\u6839\u7535\u7ebf\uff1a\u9ed1\u8272\uff0c\u7ea2\u8272\u548c\u9ec4\u8272\u3002\n\u9ed1\u8272\u8fde\u5230 Seeeduino \u7684 \nGND\n\n\u7ea2\u8272\u8fde\u5230 Seeeduino \u7684 \n5v\n \u7aef\u53e3\n\u9ec4\u8272\u7ebf\u5c06\u9700\u8981\u8fde\u63a5\u5230 10k \u4e0a\u62c9\u7535\u963b\uff0c\u7136\u540e\u8fde\u63a5\u5230 Seeeduino \u4e0a\u7684\u5f15\u811a \n2\n\u3002\n\n\n\u8fd9\u662f\u4e00\u4e2a\u786c\u4ef6\u8fde\u63a5\u56fe\uff0c\u5b83\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u8fde\u7ebf\u3002\n\n\n\n\n\u4e00\u65e6\u4f60\u6709\u4e86\u5b83\uff0c\u4f60\u5c06\u9700\u8981\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u5230\u4f60\u7684 Seeeduino\u3002 \u4e00\u65e6\u4e0a\u4f20\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u6d41\u4f53\u6d41\u8fc7 Water Flow Sensor\uff0c\u60a8\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5b83\u5c06\u663e\u793a\u6d41\u91cf\uff0c\u6bcf\u79d2\u5237\u65b0\u4e00\u6b21\u3002\n\n\n\u7a0b\u5e8f\u8bbe\u8ba1\n\n\n// reading liquid flow rate using Seeeduino and Water Flow Sensor from Seeedstudio.com\n// Code adapted by Charles Gantt from PC Fan RPM code written by Crenn @thebestcasescenario.com\n// http:/themakersworkbench.com http://thebestcasescenario.com http://seeedstudio.com\n\nvolatile int NbTopsFan; //measuring the rising edges of the signal\nint Calc;\nint hallsensor = 2;    //The pin location of the sensor\n\nvoid rpm ()     //This is the function that the interupt calls\n{\n    NbTopsFan++;  //This function measures the rising and falling edge of the\n\n    hall effect sensors signal\n}\n// The setup() method runs once, when the sketch starts\nvoid setup() //\n{\n    pinMode(hallsensor, INPUT); //initializes digital pin 2 as an input\n    Serial.begin(9600); //This is the setup function where the serial port is\n\n    initialised,\n    attachInterrupt(0, rpm, RISING); //and the interrupt is attached\n}\n// the loop() method runs over and over again,\n// as long as the Arduino has power\nvoid loop ()\n{\n    NbTopsFan = 0;   //Set NbTops to 0 ready for calculations\n    sei();      //Enables interrupts\n    delay (1000);   //Wait 1 second\n    cli();      //Disable interrupts\n    Calc = (NbTopsFan * 60 / 5.5); //(Pulse frequency x 60) / 5.5Q, = flow rate\n\n    in L/hour\n    Serial.print (Calc, DEC); //Prints the number calculated above\n    Serial.print (\n L/hour\\r\\n\n); //Prints \nL/hour\n and returns a  new line\n}\n\n\n\u60a8\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u8bba\u575b\u4e86\u89e3\u5173\u4e8e\n\u4f7f\u7528\u6c34\u6d41\u4f20\u611f\u5668\u8bfb\u53d6\u6c34\u6d41\u91cf\n\u3002\n\n\n\u63a5\u7ebf\u56fe\n\n\n\n\n\u8fde\u63a5\u7ebf\u4f7f\u7528\u7684\u87ba\u7eb9\u5916\u5f84\u4e3a1.4mm\u7684\u3002\n\n\n\n\n\u8f93\u51fa\u8868\n\n\n\n\n\u6c34\u5e73\u6d4b\u8bd5\u4e2d\u7684\u8109\u51b2\u9891\u7387\uff08Hz\uff09= 5.5Q\uff0cQ\u4e3a\u6d41\u91cf\uff08L / min\uff09\u3002 \uff08\u7ed3\u679c\u5728\n 3\uff05\u8303\u56f4\u5185\uff09\n\n\n\n\n\n\n\u8f93\u51fa\u8109\u51b2\u9ad8\u7535\u5e73\n\n\n\n\u4fe1\u53f7\u7535\u538b> 4.5 V\uff08\u8f93\u5165DC 5 V\uff09\n\n\n\n\n\n\u8f93\u51fa\u4f4e\u7535\u5e73\u8109\u51b2\n\n\n\n\u4fe1\u53f7\u7535\u538b\n<\n0.5V\uff08\u8f93\u5165DC 5V\uff09\n\n\n\n\n\n\u7cbe\u5ea6\n\n\n\n3\uff05\uff08\u6d41\u901f\u4ece1L / min\u523010L / min\uff09\n\n\n\n\n\n\u8f93\u51fa\u4fe1\u53f7\u5360\u7a7a\u6bd4\n\n\n\n40%\uff5e60%\n\n\n\n\n\n\n\u5e38\u95ee\u95ee\u9898\n\n\n\n\n\u8fd9\u91cc\u662f\n\u4f20\u611f\u5668\u5e38\u89c1\u95ee\u9898\n\uff0c\u4eba\u4eec\u53ef\u4ee5\u53bb\u8fd9\u91cc\u627e\u5230\u95ee\u9898\u548c\u7b54\u6848 \u3002\n\n\nWater flow sensor\u662f\u7531\u4ec0\u4e48\u6750\u6599\u6784\u6210\u7684\uff1f\n\n\n\u5c3c\u9f99\u7ea4\u7ef4\uff0c\u8bf7\u907f\u514d\u5f3a\u9178\u548c\u5f3a\u78b1\u3002\n\n\n\u6c34\u6d41\u91cf\u4f20\u611f\u5668\u5bf9\u996e\u7528\u6c34\u662f\u5426\u5b89\u5168\uff1f\n\n\n\u662f\u7684\uff0c\u5b83\u5df2\u7ecf\u7528\u4e8e\u996e\u6c34\u673a\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\nReading Water Flow rate with Water Flow Sensor\n\n\n\n\n\n\nWater Flow rate display on LCD\n\n\n\n\n\n\ndatasheet for the material\n\n\n\n\n\n\n\u76f8\u5173\u9879\u76ee\n\n\n\n\nIt's a pity that we don't have any demo about G\n Water Flow Sensor in the \nRecipe\n yet.\n\n\nPost your awesome project about G\n Water Flow Sensor to \nwin $100 Coupon!\n. Please feel free to contact us: \n\n\nHere we introduce some projects about \nGrove-Water Sensor\n.\n\n\nWhat is Grove - Water Sensor\n\n\n\n\nThis water sensor module is part of the Twig system.You can use it with the analog pins to detect the amount of water induced contact between the grounded and sensor traces.\n\n\nIt works by having a series of exposed traces connected to ground and interlaced between the grounded traces are the sens traces.\n\n\nThe sensor traces have a weak pull-up resistor of 1 M\u03a9. The resistor will pull the sensor trace value high until a drop of water shorts the sensor trace to the grounded trace.\n\n\nThis circuit will work with the digital I/O pins of your Arduino.\n\n\nArduino Plant Warden\n\n\n\n\nThis project uses Grove - Water Sensor to create a simple but effective solution to watering plants.\n\n\nHow it works:\n\n\n\n\n\n\nDisplay readouts of water sensor and temperature sensor on OLED screen\n\n\n\n\n\n\nSend alert and activate a pump driver when water is under threshold.\n\n\n\n\n\n\nSupply the variation in color by 10 RGB LEDs.\n\n\n\n\n\n\nI want to make it.\n\n\nMore Awesome Projects by Water Sensor\n\n\nShare Your Awesome Projects with Us\n\n\nBorn with the spirit of making and sharing, that is what we believe makes a maker.\n\n\nAnd only because of this, the open source community can be as prosperous as it is today.\n\n\nIt does not matter what you are and what you have made, hacker, maker, artist or engineers.\n\n\nAs long as you start sharing your works with others, you are being part of the open source community and you are making your contributions.\n\n\nNow share your awesome projects with us on \nRecipe\n, and win a chance to become the Core User of Seeed.\n\n\n\n\nCore Users, are those who show high interests in Seeed products and make significant contributions on Recipe.\n\n\nWe cooperate with our Core Users in the development of our new product, this, in another word, the Core Users will have the chance to experience any new products of Seeed before its official launch, and in return we expect valuable feedback from them to help us improve the product performance and user experience. And in most cases when our Core Users have some good ideas of making things, we'll offer hardware pieces, PCBA services as well as technical support. Besides, further commercial cooperation with the Core Users is highly possible.\n\n\n\n\nGet more information about Core User, please email to:", 
            "title": "G3-4 Water Flow sensor"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_1", 
            "text": "\u6700\u5c0f\u5de5\u4f5c\u7535\u538b  DC 4.5V   \u6700\u5927\u5de5\u4f5c\u7535\u6d41  15mA(DC 5V)   \u5de5\u4f5c\u7535\u538b  5V\uff5e24V   \u6c34\u6d41\u91cf\u8303\u56f4  1\uff5e60L/min   \u627f\u8f7d\u91cf  \u226410mA(DC 5V)   \u5de5\u4f5c\u6e29\u5ea6  \u226480\u2103   \u6db2\u4f53\u6e29\u5ea6  \u2264120\u2103   \u5de5\u4f5c\u6e7f\u5ea6  35%\uff5e90%RH   \u6c34\u538b\u529b  \u22642.0MPa   \u50a8\u5b58\u6e29\u5ea6  -25\u2103\uff5e+80\u2103   \u50a8\u5b58\u6e7f\u5ea6  25%\uff5e95%RH", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_2", 
            "text": "", 
            "title": "\u673a\u68b0\u5c3a\u5bf8"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_3", 
            "text": "\u5e8f\u53f7  \u540d\u5b57  \u6570\u91cf  \u6750\u6599  \u5907\u6ce8    1   \u9600\u4f53    1    PA66 + 33\uff05\u73bb\u7483\u7ea4\u7ef4      2    \u4e0d\u9508\u94a2\u73e0    1    \u4e0d\u9508\u94a2SUS304      3    \u8f74    1    \u4e0d\u9508\u94a2SUS304      4    \u53f6\u8f6e    1    POM      5    \u73af\u5f62\u78c1\u94c1    1    \u94c1\u7d20\u4f53      6    \u4e2d\u73af    1    PA66 + 33\uff05\u73bb\u7483\u7ea4\u7ef4      7    O \u578b\u5bc6\u5c01\u5708    1    \u6a61\u80f6      8    \u7535\u5b50\u5bc6\u5c01\u5708    1    \u6a61\u80f6      9    \u76d6    1    PA66 + 33\uff05\u73bb\u7483\u7ea4\u7ef4      10    \u87ba\u6813    4    \u4e0d\u9508\u94a2SUS304      11    \u7ebf    1    1007 24AWG", 
            "title": "\u4f20\u611f\u5668\u7ec4\u4ef6"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_4", 
            "text": "Note: \u8fd9\u4e2a\u4f8b\u5b50\u662f\u7531 Charles Gantt \u5b8c\u6210\u7684\u3002 \u611f\u8c22\u4ed6\u7684\u8d21\u732e\u3002\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002", 
            "title": "\u4f7f\u7528\u4f8b\u5b50"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_5", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u6211\u76f4\u5728\u7814\u7a76\u7684\u4e00\u4e2a\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4f1a\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e9b\uff0c\u5173\u4e8e\u5982\u4f55\u4f7f\u7528 Seeed Studio Depo \u4e2d\u7684 Water Flow Sensor  \u8bfb\u53d6\u6bcf\u5c0f\u65f6\u7684\u6c34\u6d41\u91cf\u3002 \u5b83\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u65cb\u8f6c\u8f6e\u5e76\u4e0e\u970d\u5c14\u4f20\u611f\u5668\u4e00\u8d77\u4f7f\u7528\u3002 \u901a\u8fc7\u8bfb\u53d6\u8fd9\u4e9b\u8109\u51b2\u5e76\u8bb0\u5f55\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6db2\u4f53\u6d41\u901f\u7cbe\u786e\u5230 3\uff05 \u4ee5\u5185\u3002  \u786c\u4ef6\u5b89\u88c5  \u60a8\u5c06\u9700\u8981 Seeeduino / Arduino\uff0c\u6c34\u6d41\u4f20\u611f\u5668\uff0c10K\u7535\u963b\uff0c\u9762\u5305\u677f\u548c\u4e00\u4e9b\u8df3\u7ebf\u3002  \u8fde\u63a5 Water Flow Sensor \u975e\u5e38\u7b80\u5355\u3002 \u6709\u4e09\u6839\u7535\u7ebf\uff1a\u9ed1\u8272\uff0c\u7ea2\u8272\u548c\u9ec4\u8272\u3002\n\u9ed1\u8272\u8fde\u5230 Seeeduino \u7684  GND \n\u7ea2\u8272\u8fde\u5230 Seeeduino \u7684  5v  \u7aef\u53e3\n\u9ec4\u8272\u7ebf\u5c06\u9700\u8981\u8fde\u63a5\u5230 10k \u4e0a\u62c9\u7535\u963b\uff0c\u7136\u540e\u8fde\u63a5\u5230 Seeeduino \u4e0a\u7684\u5f15\u811a  2 \u3002  \u8fd9\u662f\u4e00\u4e2a\u786c\u4ef6\u8fde\u63a5\u56fe\uff0c\u5b83\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u8fde\u7ebf\u3002   \u4e00\u65e6\u4f60\u6709\u4e86\u5b83\uff0c\u4f60\u5c06\u9700\u8981\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u5230\u4f60\u7684 Seeeduino\u3002 \u4e00\u65e6\u4e0a\u4f20\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u6d41\u4f53\u6d41\u8fc7 Water Flow Sensor\uff0c\u60a8\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5b83\u5c06\u663e\u793a\u6d41\u91cf\uff0c\u6bcf\u79d2\u5237\u65b0\u4e00\u6b21\u3002  \u7a0b\u5e8f\u8bbe\u8ba1  // reading liquid flow rate using Seeeduino and Water Flow Sensor from Seeedstudio.com\n// Code adapted by Charles Gantt from PC Fan RPM code written by Crenn @thebestcasescenario.com\n// http:/themakersworkbench.com http://thebestcasescenario.com http://seeedstudio.com\n\nvolatile int NbTopsFan; //measuring the rising edges of the signal\nint Calc;\nint hallsensor = 2;    //The pin location of the sensor\n\nvoid rpm ()     //This is the function that the interupt calls\n{\n    NbTopsFan++;  //This function measures the rising and falling edge of the\n\n    hall effect sensors signal\n}\n// The setup() method runs once, when the sketch starts\nvoid setup() //\n{\n    pinMode(hallsensor, INPUT); //initializes digital pin 2 as an input\n    Serial.begin(9600); //This is the setup function where the serial port is\n\n    initialised,\n    attachInterrupt(0, rpm, RISING); //and the interrupt is attached\n}\n// the loop() method runs over and over again,\n// as long as the Arduino has power\nvoid loop ()\n{\n    NbTopsFan = 0;   //Set NbTops to 0 ready for calculations\n    sei();      //Enables interrupts\n    delay (1000);   //Wait 1 second\n    cli();      //Disable interrupts\n    Calc = (NbTopsFan * 60 / 5.5); //(Pulse frequency x 60) / 5.5Q, = flow rate\n\n    in L/hour\n    Serial.print (Calc, DEC); //Prints the number calculated above\n    Serial.print (  L/hour\\r\\n ); //Prints  L/hour  and returns a  new line\n} \n\u60a8\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u8bba\u575b\u4e86\u89e3\u5173\u4e8e \u4f7f\u7528\u6c34\u6d41\u4f20\u611f\u5668\u8bfb\u53d6\u6c34\u6d41\u91cf \u3002", 
            "title": "\u7528\u6c34\u6d41\u91cf\u4f20\u611f\u5668\u8bfb\u53d6\u6c34\u6d41\u91cf"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_6", 
            "text": "\u8fde\u63a5\u7ebf\u4f7f\u7528\u7684\u87ba\u7eb9\u5916\u5f84\u4e3a1.4mm\u7684\u3002", 
            "title": "\u63a5\u7ebf\u56fe"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_7", 
            "text": "\u6c34\u5e73\u6d4b\u8bd5\u4e2d\u7684\u8109\u51b2\u9891\u7387\uff08Hz\uff09= 5.5Q\uff0cQ\u4e3a\u6d41\u91cf\uff08L / min\uff09\u3002 \uff08\u7ed3\u679c\u5728  3\uff05\u8303\u56f4\u5185\uff09    \u8f93\u51fa\u8109\u51b2\u9ad8\u7535\u5e73  \u4fe1\u53f7\u7535\u538b> 4.5 V\uff08\u8f93\u5165DC 5 V\uff09   \u8f93\u51fa\u4f4e\u7535\u5e73\u8109\u51b2  \u4fe1\u53f7\u7535\u538b < 0.5V\uff08\u8f93\u5165DC 5V\uff09   \u7cbe\u5ea6  3\uff05\uff08\u6d41\u901f\u4ece1L / min\u523010L / min\uff09   \u8f93\u51fa\u4fe1\u53f7\u5360\u7a7a\u6bd4  40%\uff5e60%", 
            "title": "\u8f93\u51fa\u8868"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_8", 
            "text": "\u8fd9\u91cc\u662f \u4f20\u611f\u5668\u5e38\u89c1\u95ee\u9898 \uff0c\u4eba\u4eec\u53ef\u4ee5\u53bb\u8fd9\u91cc\u627e\u5230\u95ee\u9898\u548c\u7b54\u6848 \u3002  Water flow sensor\u662f\u7531\u4ec0\u4e48\u6750\u6599\u6784\u6210\u7684\uff1f  \u5c3c\u9f99\u7ea4\u7ef4\uff0c\u8bf7\u907f\u514d\u5f3a\u9178\u548c\u5f3a\u78b1\u3002  \u6c34\u6d41\u91cf\u4f20\u611f\u5668\u5bf9\u996e\u7528\u6c34\u662f\u5426\u5b89\u5168\uff1f  \u662f\u7684\uff0c\u5b83\u5df2\u7ecf\u7528\u4e8e\u996e\u6c34\u673a\u3002", 
            "title": "\u5e38\u95ee\u95ee\u9898"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_9", 
            "text": "Reading Water Flow rate with Water Flow Sensor    Water Flow rate display on LCD    datasheet for the material", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#_10", 
            "text": "It's a pity that we don't have any demo about G  Water Flow Sensor in the  Recipe  yet.  Post your awesome project about G  Water Flow Sensor to  win $100 Coupon! . Please feel free to contact us:   Here we introduce some projects about  Grove-Water Sensor .", 
            "title": "\u76f8\u5173\u9879\u76ee"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#what-is-grove-water-sensor", 
            "text": "This water sensor module is part of the Twig system.You can use it with the analog pins to detect the amount of water induced contact between the grounded and sensor traces.  It works by having a series of exposed traces connected to ground and interlaced between the grounded traces are the sens traces.  The sensor traces have a weak pull-up resistor of 1 M\u03a9. The resistor will pull the sensor trace value high until a drop of water shorts the sensor trace to the grounded trace.  This circuit will work with the digital I/O pins of your Arduino.", 
            "title": "What is Grove - Water Sensor"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#arduino-plant-warden", 
            "text": "This project uses Grove - Water Sensor to create a simple but effective solution to watering plants.  How it works:    Display readouts of water sensor and temperature sensor on OLED screen    Send alert and activate a pump driver when water is under threshold.    Supply the variation in color by 10 RGB LEDs.    I want to make it.  More Awesome Projects by Water Sensor", 
            "title": "Arduino Plant Warden"
        }, 
        {
            "location": "/G3-4_Water_Flow_sensor/#share-your-awesome-projects-with-us", 
            "text": "Born with the spirit of making and sharing, that is what we believe makes a maker.  And only because of this, the open source community can be as prosperous as it is today.  It does not matter what you are and what you have made, hacker, maker, artist or engineers.  As long as you start sharing your works with others, you are being part of the open source community and you are making your contributions.  Now share your awesome projects with us on  Recipe , and win a chance to become the Core User of Seeed.   Core Users, are those who show high interests in Seeed products and make significant contributions on Recipe.  We cooperate with our Core Users in the development of our new product, this, in another word, the Core Users will have the chance to experience any new products of Seeed before its official launch, and in return we expect valuable feedback from them to help us improve the product performance and user experience. And in most cases when our Core Users have some good ideas of making things, we'll offer hardware pieces, PCBA services as well as technical support. Besides, further commercial cooperation with the Core Users is highly possible.   Get more information about Core User, please email to:", 
            "title": "Share Your Awesome Projects with Us"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/", 
            "text": "G1\n2\" Water Flow Sensor \u7531\u5851\u6599\u9600\u4f53\uff0c\u6c34\u8f6c\u5b50\u548c\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u7ec4\u6210\u3002 \u5f53\u6c34\u6d41\u8fc7\u8f6c\u5b50\u65f6\uff0c\u8f6c\u5b50\u6eda\u52a8\uff0c\u5176\u901f\u5ea6\u968f\u7740\u6d41\u901f\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002 \u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u8f93\u51fa\u76f8\u5e94\u7684\u8109\u51b2\u4fe1\u53f7\u3002\n\n\n\u7248\u672c\u66f4\u65b0\n\n\n\n\n\n\n\n\n\u7248\u672c\u8c03\u6574\n\n\n\u63cf\u8ff0\n\n\n\u53d1\u5e03\u65e5\u671f\n\n\n\n\n\n\n\n\n\n\n\n\nv1.0\n\n\n\u9996\u6b21\u516c\u5f00\u53d1\u5e03\n\n\n2010 \u5e74 5 \u6708 31 \u65e5\n\n\n\n\n\n\n\n\nv2.0\n\n\n\u516c\u5f00\u53d1\u5e03 2.0\n\n\n2010\u5e74 7 \u6708 5 \u65e5\n\n\n\n\n\n\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u8303\u56f4\n\n\n\n\n\n\n\n\n\n\n\u6700\u5c0f\u5de5\u4f5c\u7535\u538b\n\n\n\u76f4\u6d41 4.5V\n\n\n\n\n\n\n\u6700\u5927\u5de5\u4f5c\u7535\u6d41\n\n\n15mA\uff08\u76f4\u6d41 5V \uff09\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n5V \u301c 24V\n\n\n\n\n\n\n\u6d41\u91cf\u8303\u56f4\n\n\n1\u301c30L / min\n\n\n\n\n\n\n\u8d1f\u8f7d\u5bb9\u91cf\n\n\n\u226410mA\uff08\u76f4\u6d415V\uff09\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n\u226480\u2103\n\n\n\n\n\n\n\u6db2\u4f53\u6e29\u5ea6\n\n\n\u2264120\u2103\n\n\n\n\n\n\n\u5de5\u4f5c\u6e7f\u5ea6\n\n\n35\uff05\u301c90\uff05RH\n\n\n\n\n\n\n\u6c34\u538b\n\n\n\u22642.0MPa\n\n\n\n\n\n\n\u50a8\u5b58\u6e29\u5ea6\n\n\n-25\u2103\u301c+ 80\u2103\n\n\n\n\n\n\n\u50a8\u5b58\u6e7f\u5ea6\n\n\n25\uff05\u301c95\uff05RH\n\n\n\n\n\n\n\n\n\u673a\u68b0\u5c3a\u5bf8\n\n\n\n\n\u5355\u4f4d: mm\n\n\n\n\n\n\n\u4f20\u611f\u5668\u7ec4\u4ef6\n\n\n\n\n\n\n\n\n\n\n\u7f16\u53f7\n\n\n\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\u6750\u6599\n\n\n\u6ce8\u610f\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\u9600\u4f53\n\n\n1\n\n\nPA66+33\uff05 \u73bb\u7483\u7ea4\u7ef4\n\n\n\n\n\n\n\n\n2\n\n\n\u4e0d\u9508\u94a2\u73e0\n\n\n1\n\n\n\u4e0d\u9508\u94a2 SUS304\n\n\n\n\n\n\n\n\n3\n\n\n\u8f74\n\n\n1\n\n\n\u4e0d\u9508\u94a2 SUS304\n\n\n\n\n\n\n\n\n4\n\n\n\u53f6\u8f6e\n\n\n1\n\n\nPOM\n\n\n\n\n\n\n\n\n5\n\n\n\u73af\u5f62\u78c1\u94c1\n\n\n1\n\n\n\u94c1\u6c27\u4f53\n\n\n\n\n\n\n\n\n6\n\n\n\u4e2d\u95f4\u5957\u73af\n\n\n1\n\n\nPA66+33\uff05 \u73bb\u7483\u7ea4\u7ef4\n\n\n\n\n\n\n\n\n7\n\n\nO \u578b\u5bc6\u5c01\u5708\n\n\n1\n\n\n\u6a61\u80f6\n\n\n\n\n\n\n\n\n8\n\n\n\u7535\u5b50\u5bc6\u5c01\u5708\n\n\n1\n\n\n\u6a61\u80f6\n\n\n\n\n\n\n\n\n9\n\n\n\u5916\u58f3\n\n\n1\n\n\nPA66+33\uff05\u73bb\u7483\u7ea4\u7ef4\n\n\n\n\n\n\n\n\n10\n\n\n\u87ba\u4e1d\n\n\n4\n\n\n\u4e0d\u9508\u94a2 SUS304\n\n\n3.0 * 11\n\n\n\n\n\n\n11\n\n\n\u8fde\u63a5\u7ebf\n\n\n1\n\n\n1007 24AWG\n\n\n\n\n\n\n\n\n\n\n\u4f7f\u7528\u793a\u4f8b\n\n\n\n\nNote\n\n\n\u8fd9\u4e2a\u793a\u4f8b\u662f\u7531 Charles Gantt \u7684\u8bba\u575b\u63d0\u4f9b\u7684\u3002 \u8bf7\u611f\u8c22\u4ed6\u7684\u8d21\u732e\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\n\n\n\n\u7528 Water Flow Sensor \u8bfb\u53d6\u6c34\u6d41\u91cf\n\n\n\u8fd9\u662f\u6211\u4eec\u4e00\u76f4\u5728\u52aa\u529b\u7684\u4e00\u4e2a\u9879\u76ee\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4f1a\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e0b\uff0c\u56e0\u4e3a\u6709\u4e00\u4e9b\u5173\u4e8e\u5982\u4f55\u4f7f\u7528 Seeed Studio Depo \u4e2d\u7684 Water Flow Sensor \u8bfb\u53d6\u6bcf\u5c0f\u65f6\u7684\u6c34\u6d41\u91cf\u7684\u95ee\u9898\u3002\u5b83\u5229\u7528\u65cb\u8f6c\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u7684\u7b80\u5355\u65cb\u8f6c\u8f6e\u3002 \u901a\u8fc7\u8bfb\u53d6\u8fd9\u4e9b\u8109\u51b2\u5e76\u8fdb\u884c\u4e00\u4e9b\u6570\u5b66\u8fd0\u7b97\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6db2\u4f53\u6d41\u901f\u7cbe\u786e\u5230 3\uff05 \u4ee5\u5185\u3002\u7ebf\u7a0b\u662f\u7b80\u5355\u7684 G3 / 4 \uff0c\u6240\u4ee5\u4f60\u53d1\u73b0\u5b9e\u73b0\u8d77\u6765\u4e0d\u4f1a\u90a3\u4e48\u56f0\u96be\u3002\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\u60a8\u5c06\u9700\u8981 Seeeduino / Arduino \uff0c Water Flow Sensor \uff0c10K \u7535\u963b\uff0c\u7535\u8def\u5b9e\u9a8c\u677f\u548c\u4e00\u4e9b\u675c\u90a6\u7ebf\u3002\n\n\n\u8fde\u63a5 Water Flow Sensor \u7684\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\u3002 \u6709\u4e09\u6839\u7535\u7ebf\uff1a\u9ed1\u8272\uff0c\u7ea2\u8272\u548c\u9ec4\u8272\u3002 \u9ed1\u8272\u63a5\u5230 Seeeduino \u7684\u63a5\u5730\u5f15\u811a\uff0c\u7ea2\u8272\u63a5\u5230 Seeeduino \u7684 \n5v\n \u5f15\u811a\uff0c\u9ec4\u8272\u7ebf\u9700\u8981\u8fde\u63a5\u5230 10k \u7535\u963b\u4e0a\uff0c\u7136\u540e\u63a5\u5230 Seeeduino \u4e0a\u7684\u5f15\u811a \n2\n\u3002\n\n\n\u901a\u8fc7\u8fd9\u4e2a\u56fe\uff0c\u6211\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u8fde\u7ebf\u3002\n\n\n\n\n\u5f53\u4f60\u4f7f\u7528\u5b83\u65f6\uff0c\u4f60\u5c06\u9700\u8981\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u5230\u4f60\u7684 Seeeduino \u3002 \u5728\u4e0a\u4f20\u4ee5\u540e\uff0c\u5f53\u6709\u6d41\u4f53\u6d41\u8fc7 Water Flow Sensor \u65f6\uff0c\u60a8\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5b83\u5c06\u663e\u793a\u6d41\u91cf\uff0c\u6bcf\u79d2\u5237\u65b0\u4e00\u6b21\u3002\n\n\n\u7a0b\u5e8f\u8bbe\u8ba1\n\n\n// reading liquid flow rate using Seeeduino and Water Flow Sensor from Seeedstudio.com\n\n\n// Code adapted by Charles Gantt from PC Fan RPM code written by Crenn @thebestcasescenario.com\n\n\n// http:/themakersworkbench.com http://thebestcasescenario.com http://seeedstudio.com\n\n\n\nvolatile\n \nint\n \nNbTopsFan\n;\n \n//measuring the rising edges of the signal\n\n\nint\n \nCalc\n;\n\n\nint\n \nhallsensor\n \n=\n \n2\n;\n    \n//The pin location of the sensor\n\n\n\nvoid\n \nrpm\n \n()\n     \n//This is the function that the interupt calls\n\n\n{\n\n  \nNbTopsFan\n++\n;\n  \n//This function measures the rising and falling edge of the\n\n\n\nhall\n \neffect\n \nsensors\n \nsignal\n\n\n}\n\n\n// The setup() method runs once, when the sketch starts\n\n\nvoid\n \nsetup\n()\n \n//\n\n\n{\n\n  \npinMode\n(\nhallsensor\n,\n \nINPUT\n);\n \n//initializes digital pin 2 as an input\n\n  \nSerial\n.\nbegin\n(\n9600\n);\n \n//This is the setup function where the serial port is\n\n\n\ninitialised\n,\n\n  \nattachInterrupt\n(\n0\n,\n \nrpm\n,\n \nRISING\n);\n \n//and the interrupt is attached\n\n\n}\n\n\n// the loop() method runs over and over again,\n\n\n// as long as the Arduino has power\n\n\nvoid\n \nloop\n \n()\n\n\n{\n\n  \nNbTopsFan\n \n=\n \n0\n;\n   \n//Set NbTops to 0 ready for calculations\n\n  \nsei\n();\n      \n//Enables interrupts\n\n  \ndelay\n \n(\n1000\n);\n   \n//Wait 1 second\n\n  \ncli\n();\n      \n//Disable interrupts\n\n  \nCalc\n \n=\n \n(\nNbTopsFan\n \n*\n \n60\n \n/\n \n7.5\n);\n \n//(Pulse frequency x 60) / 7.5Q, = flow rate\n\n\n\nin\n \nL\n/\nhour\n\n  \nSerial\n.\nprint\n \n(\nCalc\n,\n \nDEC\n);\n \n//Prints the number calculated above\n\n  \nSerial\n.\nprint\n \n(\n L/hour\n\\r\\n\n);\n \n//Prints \nL/hour\n and returns a  new line\n\n\n}\n\n\n\n\n\n\u60a8\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u8bba\u575b\u4e86\u89e3\u66f4\u591a\u6709\u5173 Water Flow Sensor \u8bfb\u53d6\u6c34\u6d41\u91cf\u65b9\u6cd5\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\n\n\n\u63a5\u7ebf\u7b80\u56fe\n\n\n\n\n\u8fde\u63a5\u7ebf\u4f7f\u7528\u7684\u87ba\u7eb9\u5916\u5f84\u4e3a 1.4mm\u3002\n\n\n\n\u8f93\u51fa\u8868\n\n\n\n\n\u6c34\u5e73\u6d4b\u8bd5\u4e2d\u7684\u8109\u51b2\u9891\u7387\uff08Hz\uff09= 7.5Q\uff0cQ \u4e3a\u6d41\u901f\uff08L / min\uff09\u3002 \uff08\u7ed3\u679c\u5728 \n 3\uff05 \u8303\u56f4\u5185\uff09\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u8303\u56f4\n\n\n\n\n\n\n\n\n\n\n\u8f93\u51fa\u8109\u51b2\u9ad8\u7535\u5e73\n\n\n\u4fe1\u53f7\u7535\u538b\n 4.5 V\uff08\u8f93\u5165 DC 5 V\uff09\n\n\n\n\n\n\n\u8f93\u51fa\u8109\u51b2\u4f4e\u7535\u5e73\n\n\n\u4fe1\u53f7\u7535\u538b\n0.5V\uff08\u8f93\u5165\u76f4\u6d41 5V\uff09\n\n\n\n\n\n\n\u7cbe\u5ea6\n\n\n3\uff05\uff08\u6d41\u91cf\u4ece 1L / min \u5230 10L / min\uff09\n\n\n\n\n\n\n\u8f93\u51fa\u4fe1\u53f7\u5360\u6bd4\n\n\n40\uff05\u301c60\uff05\n\n\n\n\n\n\n\n\n\u76f8\u5173\u9879\u76ee\n\n\n\u5f88\u9057\u61be\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u5173\u4e8e \nRecipe\n \u4e2d\u7684 G\n Water Flow Sensor \u7684\u6f14\u793a\u3002\n\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e9b\u5173\u4e8e \nGrove-Water Sensor\n \u7684\u9879\u76ee\u3002\n\n\n\u5173\u4e8e Grove - Water Sensor\n\n\n\n\nGrove - Water Sensor \u6a21\u5757\u662f Twig \u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6a21\u62df\u5f15\u811a\u6765\u68c0\u6d4b\u63a5\u5730\u548c\u4f20\u611f\u5668\u4e4b\u95f4\u7684\u6c34\u6d41\u91cf\u3002\n\n\n\u4f20\u611f\u5668\u8fde\u63a5\u7ebf\u5177\u6709 1M\u03a9 \u7684\u5f31\u4e0a\u62c9\u7535\u963b\u3002\u5f53\u6c34\u4ece\u4f20\u611f\u5668\u6d41\u51fa\u65f6\uff0c\u7535\u963b\u5668\u4f1a\u5c06\u4f20\u611f\u5668\u68c0\u6d4b\u7684\u6570\u503c\u62c9\u9ad8\u3002\n\n\n\u8be5\u7535\u8def\u5c06\u4e0e\u60a8\u7684 Arduino \u7684\u6570\u5b57 I / O \u5f15\u811a\u4e00\u8d77\u5de5\u4f5c\u3002\n\n\nArduino \u5de5\u5382\u76d1\u7763\u8bbe\u5907\n\n\n\n\n\u8be5\u9879\u76ee\u4f7f\u7528 Grove - Water Sensor \u6765\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u4f46\u6709\u6548\u7684\u6d47\u704c\u8bbe\u5907\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u600e\u4e48\u8fd0\u884c\u7684\uff1a\n- \u5728 OLED \u5c4f\u5e55\u4e0a\u663e\u793a\u6c34\u4f20\u611f\u5668\u548c\u6e29\u5ea6\u4f20\u611f\u5668\n- \u5f53\u6c34\u4f4d\u4f4e\u4e8e\u9608\u503c\u65f6\u53d1\u9001\u8b66\u62a5\u5e76\u6fc0\u6d3b\u6cf5\u9a71\u52a8\u5668\u3002\n- \u901a\u8fc7 10\u4e2a RGB LED \u63d0\u4f9b\u989c\u8272\u53d8\u5316\u3002\n\n\n\u5236\u4f5c\u6d41\u7a0b.\n\n\n\u66f4\u591a\u57fa\u4e8e Grove - Water Sensor \u7684\u9879\u76ee\n\n\n\u8bf7\u5206\u4eab\u4f60\u5236\u4f5c\u7684\u7cbe\u5f69\u7684\u9879\u76ee\u7ed9\u6211\u4eec\n\n\n\u4ee5\u5236\u4f5c\u548c\u5206\u4eab\u7684\u7cbe\u795e\u51fa\u53d1\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u76f8\u4fe1\u7684\u5236\u9020\u5546\u3002\n\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u5f00\u6e90\u793e\u533a\u624d\u80fd\u50cf\u4eca\u5929\u4e00\u6837\u6709\u826f\u597d\u7684\u53d1\u5c55\u3002\n\u65e0\u8bba\u4f60\u662f\u8c01\uff0c\u4f60\u6240\u5236\u9020\u7684\uff0c\u9ed1\u5ba2\uff0c\u5236\u9020\u5546\uff0c\u827a\u672f\u5bb6\u6216\u5de5\u7a0b\u5e08\u90fd\u65e0\u5173\u7d27\u8981\u3002\n\u53ea\u8981\u4f60\u5f00\u59cb\u4e0e\u4ed6\u4eba\u5206\u4eab\u4f60\u7684\u4f5c\u54c1\uff0c\u4f60\u5c31\u662f\u5f00\u6e90\u793e\u533a\u7684\u4e00\u90e8\u5206\uff0c\u4f60\u6b63\u5728\u4e3a\u6b64\u4f5c\u51fa\u8d21\u732e\u3002\n\n\n\u73b0\u5728\u5728 \nRecipe\n \u4e0a\u4e0e\u6211\u4eec\u5206\u4eab\u60a8\u7684\u7cbe\u5f69\u9879\u76ee\uff0c\u5e76\u8d62\u5f97\u6210\u4e3a Seeed \u6838\u5fc3\u7528\u6237\u7684\u673a\u4f1a\u3002\n\n\n\n\n\n\n\u6838\u5fc3\u7528\u6237\uff0c\u5bf9 Seeed \u4ea7\u54c1\u975e\u5e38\u611f\u5174\u8da3\u7684\uff0c\u5bf9\u5f00\u6e90\u793e\u533a\u4f5c\u51fa\u91cd\u5927\u8d21\u732e\u3002\n\n\n\n\n\n\n\u6211\u4eec\u4e0e\u6838\u5fc3\u7528\u6237\u5408\u4f5c\u5f00\u53d1\u6211\u4eec\u7684\u65b0\u4ea7\u54c1\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6838\u5fc3\u7528\u6237\u5c06\u6709\u673a\u4f1a\u5728\u6b63\u5f0f\u63a8\u51fa\u4e4b\u524d\u4f53\u9a8c\u5230 Seeed \u7684\u4efb\u4f55\u65b0\u4ea7\u54c1\uff0c\u4f5c\u4e3a\u56de\u62a5\uff0c\u6211\u4eec\u671f\u671b\u4ed6\u4eec\u6709\u5b9d\u8d35\u7684\u610f\u89c1\uff0c\u5e2e\u52a9\u6211\u4eec\u63d0\u9ad8\u4ea7\u54c1\u6027\u80fd\u548c\u7528\u6237\u4f53\u9a8c\u3002 \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5f53\u6211\u4eec\u7684\u6838\u5fc3\u7528\u6237\u6709\u4e00\u4e9b\u597d\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u786c\u4ef6\uff0c PCBA \u670d\u52a1\u4ee5\u53ca\u6280\u672f\u652f\u6301\u3002 \u6b64\u5916\uff0c\u4e0e\u6838\u5fc3\u7528\u6237\u8fdb\u4e00\u6b65\u5546\u4e1a\u5408\u4f5c\u4e5f\u662f\u975e\u5e38\u6709\u53ef\u80fd\u7684\u3002\n\n\n\n\n\n\n\u83b7\u53d6\u6709\u5173\u6838\u5fc3\u7528\u6237\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3\uff1a\n\n\n\u8bb8\u53ef\u8bc1\u4e66\n\n\n\n\n\u672c\u6587\u6863\u6839\u636e\u77e5\u8bc6\u5171\u4eab\nAttribution-ShareAlike License 3.0\n \u83b7\u5f97\u8bb8\u53ef\u3002\u6e90\u4ee3\u7801\u548c\u6570\u636e\u5e93\u53ef\u901a\u8fc7\nGPL/LGPL\n\u83b7\u5f97\uff0c\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6e90\u4ee3\u7801\u6587\u4ef6\u3002\n\n\n\u5e38\u89c1\u95ee\u9898\n\n\n\u5173\u4e8e\u4f20\u611f\u5668\u5e38\u89c1\u95ee\u9898\uff0c\u4eba\u4eec\u53ef\u4ee5\u53bb\u8fd9\u91cc\u627e\u5230\u8fd9\u79cd\u4ea7\u54c1\u7684\u95ee\u9898\u548c\u7b54\u6848\u3002\n\n\n\n\n\n\nwater flow sensor \u4f7f\u7528\u4ec0\u4e48\u6750\u6599\u5236\u6210\u7684?\n\n\n\n\n\n\n\u5c3c\u9f99\u7ea4\u7ef4\uff0c\u907f\u514d\u5f3a\u9178\u548c\u5f3a\u78b1\u3002\n\n\n\n\n\n\nwater flow sensor \u662f\u5426\u53ef\u7528\u4e8e\u996e\u7528\u6c34\u7cfb\u7edf?\n\n\n\n\n\n\n\u662f\u7684\uff0c\u5b83\u5df2\u7ecf\u7528\u4e8e\u996e\u6c34\u673a.\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\nWater flow sensor datasheet.pdf\n\n\nReading Water Flow rate with Water Flow Sensor\n\n\nWater Flow rate display on LCD\n\n\ndatasheet for the material", 
            "title": "G1-2 inch Water Flow Sensor"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_1", 
            "text": "\u9879\u76ee  \u8303\u56f4      \u6700\u5c0f\u5de5\u4f5c\u7535\u538b  \u76f4\u6d41 4.5V    \u6700\u5927\u5de5\u4f5c\u7535\u6d41  15mA\uff08\u76f4\u6d41 5V \uff09    \u5de5\u4f5c\u7535\u538b  5V \u301c 24V    \u6d41\u91cf\u8303\u56f4  1\u301c30L / min    \u8d1f\u8f7d\u5bb9\u91cf  \u226410mA\uff08\u76f4\u6d415V\uff09    \u5de5\u4f5c\u6e29\u5ea6  \u226480\u2103    \u6db2\u4f53\u6e29\u5ea6  \u2264120\u2103    \u5de5\u4f5c\u6e7f\u5ea6  35\uff05\u301c90\uff05RH    \u6c34\u538b  \u22642.0MPa    \u50a8\u5b58\u6e29\u5ea6  -25\u2103\u301c+ 80\u2103    \u50a8\u5b58\u6e7f\u5ea6  25\uff05\u301c95\uff05RH", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_2", 
            "text": "\u5355\u4f4d: mm", 
            "title": "\u673a\u68b0\u5c3a\u5bf8"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_3", 
            "text": "\u7f16\u53f7  \u540d\u79f0  \u6570\u91cf  \u6750\u6599  \u6ce8\u610f      1  \u9600\u4f53  1  PA66+33\uff05 \u73bb\u7483\u7ea4\u7ef4     2  \u4e0d\u9508\u94a2\u73e0  1  \u4e0d\u9508\u94a2 SUS304     3  \u8f74  1  \u4e0d\u9508\u94a2 SUS304     4  \u53f6\u8f6e  1  POM     5  \u73af\u5f62\u78c1\u94c1  1  \u94c1\u6c27\u4f53     6  \u4e2d\u95f4\u5957\u73af  1  PA66+33\uff05 \u73bb\u7483\u7ea4\u7ef4     7  O \u578b\u5bc6\u5c01\u5708  1  \u6a61\u80f6     8  \u7535\u5b50\u5bc6\u5c01\u5708  1  \u6a61\u80f6     9  \u5916\u58f3  1  PA66+33\uff05\u73bb\u7483\u7ea4\u7ef4     10  \u87ba\u4e1d  4  \u4e0d\u9508\u94a2 SUS304  3.0 * 11    11  \u8fde\u63a5\u7ebf  1  1007 24AWG", 
            "title": "\u4f20\u611f\u5668\u7ec4\u4ef6"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_4", 
            "text": "Note  \u8fd9\u4e2a\u793a\u4f8b\u662f\u7531 Charles Gantt \u7684\u8bba\u575b\u63d0\u4f9b\u7684\u3002 \u8bf7\u611f\u8c22\u4ed6\u7684\u8d21\u732e\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002   \u7528 Water Flow Sensor \u8bfb\u53d6\u6c34\u6d41\u91cf  \u8fd9\u662f\u6211\u4eec\u4e00\u76f4\u5728\u52aa\u529b\u7684\u4e00\u4e2a\u9879\u76ee\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4f1a\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e0b\uff0c\u56e0\u4e3a\u6709\u4e00\u4e9b\u5173\u4e8e\u5982\u4f55\u4f7f\u7528 Seeed Studio Depo \u4e2d\u7684 Water Flow Sensor \u8bfb\u53d6\u6bcf\u5c0f\u65f6\u7684\u6c34\u6d41\u91cf\u7684\u95ee\u9898\u3002\u5b83\u5229\u7528\u65cb\u8f6c\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u7684\u7b80\u5355\u65cb\u8f6c\u8f6e\u3002 \u901a\u8fc7\u8bfb\u53d6\u8fd9\u4e9b\u8109\u51b2\u5e76\u8fdb\u884c\u4e00\u4e9b\u6570\u5b66\u8fd0\u7b97\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6db2\u4f53\u6d41\u901f\u7cbe\u786e\u5230 3\uff05 \u4ee5\u5185\u3002\u7ebf\u7a0b\u662f\u7b80\u5355\u7684 G3 / 4 \uff0c\u6240\u4ee5\u4f60\u53d1\u73b0\u5b9e\u73b0\u8d77\u6765\u4e0d\u4f1a\u90a3\u4e48\u56f0\u96be\u3002  \u786c\u4ef6\u6982\u8ff0  \u60a8\u5c06\u9700\u8981 Seeeduino / Arduino \uff0c Water Flow Sensor \uff0c10K \u7535\u963b\uff0c\u7535\u8def\u5b9e\u9a8c\u677f\u548c\u4e00\u4e9b\u675c\u90a6\u7ebf\u3002  \u8fde\u63a5 Water Flow Sensor \u7684\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\u3002 \u6709\u4e09\u6839\u7535\u7ebf\uff1a\u9ed1\u8272\uff0c\u7ea2\u8272\u548c\u9ec4\u8272\u3002 \u9ed1\u8272\u63a5\u5230 Seeeduino \u7684\u63a5\u5730\u5f15\u811a\uff0c\u7ea2\u8272\u63a5\u5230 Seeeduino \u7684  5v  \u5f15\u811a\uff0c\u9ec4\u8272\u7ebf\u9700\u8981\u8fde\u63a5\u5230 10k \u7535\u963b\u4e0a\uff0c\u7136\u540e\u63a5\u5230 Seeeduino \u4e0a\u7684\u5f15\u811a  2 \u3002  \u901a\u8fc7\u8fd9\u4e2a\u56fe\uff0c\u6211\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u8fde\u7ebf\u3002   \u5f53\u4f60\u4f7f\u7528\u5b83\u65f6\uff0c\u4f60\u5c06\u9700\u8981\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u5230\u4f60\u7684 Seeeduino \u3002 \u5728\u4e0a\u4f20\u4ee5\u540e\uff0c\u5f53\u6709\u6d41\u4f53\u6d41\u8fc7 Water Flow Sensor \u65f6\uff0c\u60a8\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5b83\u5c06\u663e\u793a\u6d41\u91cf\uff0c\u6bcf\u79d2\u5237\u65b0\u4e00\u6b21\u3002  \u7a0b\u5e8f\u8bbe\u8ba1  // reading liquid flow rate using Seeeduino and Water Flow Sensor from Seeedstudio.com  // Code adapted by Charles Gantt from PC Fan RPM code written by Crenn @thebestcasescenario.com  // http:/themakersworkbench.com http://thebestcasescenario.com http://seeedstudio.com  volatile   int   NbTopsFan ;   //measuring the rising edges of the signal  int   Calc ;  int   hallsensor   =   2 ;      //The pin location of the sensor  void   rpm   ()       //This is the function that the interupt calls  { \n   NbTopsFan ++ ;    //This function measures the rising and falling edge of the  hall   effect   sensors   signal  }  // The setup() method runs once, when the sketch starts  void   setup ()   //  { \n   pinMode ( hallsensor ,   INPUT );   //initializes digital pin 2 as an input \n   Serial . begin ( 9600 );   //This is the setup function where the serial port is  initialised , \n   attachInterrupt ( 0 ,   rpm ,   RISING );   //and the interrupt is attached  }  // the loop() method runs over and over again,  // as long as the Arduino has power  void   loop   ()  { \n   NbTopsFan   =   0 ;     //Set NbTops to 0 ready for calculations \n   sei ();        //Enables interrupts \n   delay   ( 1000 );     //Wait 1 second \n   cli ();        //Disable interrupts \n   Calc   =   ( NbTopsFan   *   60   /   7.5 );   //(Pulse frequency x 60) / 7.5Q, = flow rate  in   L / hour \n   Serial . print   ( Calc ,   DEC );   //Prints the number calculated above \n   Serial . print   (  L/hour \\r\\n );   //Prints  L/hour  and returns a  new line  }   \u60a8\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u8bba\u575b\u4e86\u89e3\u66f4\u591a\u6709\u5173 Water Flow Sensor \u8bfb\u53d6\u6c34\u6d41\u91cf\u65b9\u6cd5\u7684\u8be6\u7ec6\u4fe1\u606f\u3002", 
            "title": "\u4f7f\u7528\u793a\u4f8b"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_5", 
            "text": "\u8fde\u63a5\u7ebf\u4f7f\u7528\u7684\u87ba\u7eb9\u5916\u5f84\u4e3a 1.4mm\u3002", 
            "title": "\u63a5\u7ebf\u7b80\u56fe"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_6", 
            "text": "\u6c34\u5e73\u6d4b\u8bd5\u4e2d\u7684\u8109\u51b2\u9891\u7387\uff08Hz\uff09= 7.5Q\uff0cQ \u4e3a\u6d41\u901f\uff08L / min\uff09\u3002 \uff08\u7ed3\u679c\u5728   3\uff05 \u8303\u56f4\u5185\uff09     \u9879\u76ee  \u8303\u56f4      \u8f93\u51fa\u8109\u51b2\u9ad8\u7535\u5e73  \u4fe1\u53f7\u7535\u538b  4.5 V\uff08\u8f93\u5165 DC 5 V\uff09    \u8f93\u51fa\u8109\u51b2\u4f4e\u7535\u5e73  \u4fe1\u53f7\u7535\u538b 0.5V\uff08\u8f93\u5165\u76f4\u6d41 5V\uff09    \u7cbe\u5ea6  3\uff05\uff08\u6d41\u91cf\u4ece 1L / min \u5230 10L / min\uff09    \u8f93\u51fa\u4fe1\u53f7\u5360\u6bd4  40\uff05\u301c60\uff05", 
            "title": "\u8f93\u51fa\u8868"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_7", 
            "text": "\u5f88\u9057\u61be\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u5173\u4e8e  Recipe  \u4e2d\u7684 G  Water Flow Sensor \u7684\u6f14\u793a\u3002  \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e9b\u5173\u4e8e  Grove-Water Sensor  \u7684\u9879\u76ee\u3002  \u5173\u4e8e Grove - Water Sensor   Grove - Water Sensor \u6a21\u5757\u662f Twig \u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6a21\u62df\u5f15\u811a\u6765\u68c0\u6d4b\u63a5\u5730\u548c\u4f20\u611f\u5668\u4e4b\u95f4\u7684\u6c34\u6d41\u91cf\u3002  \u4f20\u611f\u5668\u8fde\u63a5\u7ebf\u5177\u6709 1M\u03a9 \u7684\u5f31\u4e0a\u62c9\u7535\u963b\u3002\u5f53\u6c34\u4ece\u4f20\u611f\u5668\u6d41\u51fa\u65f6\uff0c\u7535\u963b\u5668\u4f1a\u5c06\u4f20\u611f\u5668\u68c0\u6d4b\u7684\u6570\u503c\u62c9\u9ad8\u3002  \u8be5\u7535\u8def\u5c06\u4e0e\u60a8\u7684 Arduino \u7684\u6570\u5b57 I / O \u5f15\u811a\u4e00\u8d77\u5de5\u4f5c\u3002  Arduino \u5de5\u5382\u76d1\u7763\u8bbe\u5907   \u8be5\u9879\u76ee\u4f7f\u7528 Grove - Water Sensor \u6765\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u4f46\u6709\u6548\u7684\u6d47\u704c\u8bbe\u5907\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u600e\u4e48\u8fd0\u884c\u7684\uff1a\n- \u5728 OLED \u5c4f\u5e55\u4e0a\u663e\u793a\u6c34\u4f20\u611f\u5668\u548c\u6e29\u5ea6\u4f20\u611f\u5668\n- \u5f53\u6c34\u4f4d\u4f4e\u4e8e\u9608\u503c\u65f6\u53d1\u9001\u8b66\u62a5\u5e76\u6fc0\u6d3b\u6cf5\u9a71\u52a8\u5668\u3002\n- \u901a\u8fc7 10\u4e2a RGB LED \u63d0\u4f9b\u989c\u8272\u53d8\u5316\u3002  \u5236\u4f5c\u6d41\u7a0b.  \u66f4\u591a\u57fa\u4e8e Grove - Water Sensor \u7684\u9879\u76ee  \u8bf7\u5206\u4eab\u4f60\u5236\u4f5c\u7684\u7cbe\u5f69\u7684\u9879\u76ee\u7ed9\u6211\u4eec  \u4ee5\u5236\u4f5c\u548c\u5206\u4eab\u7684\u7cbe\u795e\u51fa\u53d1\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u76f8\u4fe1\u7684\u5236\u9020\u5546\u3002\n\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u5f00\u6e90\u793e\u533a\u624d\u80fd\u50cf\u4eca\u5929\u4e00\u6837\u6709\u826f\u597d\u7684\u53d1\u5c55\u3002\n\u65e0\u8bba\u4f60\u662f\u8c01\uff0c\u4f60\u6240\u5236\u9020\u7684\uff0c\u9ed1\u5ba2\uff0c\u5236\u9020\u5546\uff0c\u827a\u672f\u5bb6\u6216\u5de5\u7a0b\u5e08\u90fd\u65e0\u5173\u7d27\u8981\u3002\n\u53ea\u8981\u4f60\u5f00\u59cb\u4e0e\u4ed6\u4eba\u5206\u4eab\u4f60\u7684\u4f5c\u54c1\uff0c\u4f60\u5c31\u662f\u5f00\u6e90\u793e\u533a\u7684\u4e00\u90e8\u5206\uff0c\u4f60\u6b63\u5728\u4e3a\u6b64\u4f5c\u51fa\u8d21\u732e\u3002  \u73b0\u5728\u5728  Recipe  \u4e0a\u4e0e\u6211\u4eec\u5206\u4eab\u60a8\u7684\u7cbe\u5f69\u9879\u76ee\uff0c\u5e76\u8d62\u5f97\u6210\u4e3a Seeed \u6838\u5fc3\u7528\u6237\u7684\u673a\u4f1a\u3002    \u6838\u5fc3\u7528\u6237\uff0c\u5bf9 Seeed \u4ea7\u54c1\u975e\u5e38\u611f\u5174\u8da3\u7684\uff0c\u5bf9\u5f00\u6e90\u793e\u533a\u4f5c\u51fa\u91cd\u5927\u8d21\u732e\u3002    \u6211\u4eec\u4e0e\u6838\u5fc3\u7528\u6237\u5408\u4f5c\u5f00\u53d1\u6211\u4eec\u7684\u65b0\u4ea7\u54c1\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6838\u5fc3\u7528\u6237\u5c06\u6709\u673a\u4f1a\u5728\u6b63\u5f0f\u63a8\u51fa\u4e4b\u524d\u4f53\u9a8c\u5230 Seeed \u7684\u4efb\u4f55\u65b0\u4ea7\u54c1\uff0c\u4f5c\u4e3a\u56de\u62a5\uff0c\u6211\u4eec\u671f\u671b\u4ed6\u4eec\u6709\u5b9d\u8d35\u7684\u610f\u89c1\uff0c\u5e2e\u52a9\u6211\u4eec\u63d0\u9ad8\u4ea7\u54c1\u6027\u80fd\u548c\u7528\u6237\u4f53\u9a8c\u3002 \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5f53\u6211\u4eec\u7684\u6838\u5fc3\u7528\u6237\u6709\u4e00\u4e9b\u597d\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u786c\u4ef6\uff0c PCBA \u670d\u52a1\u4ee5\u53ca\u6280\u672f\u652f\u6301\u3002 \u6b64\u5916\uff0c\u4e0e\u6838\u5fc3\u7528\u6237\u8fdb\u4e00\u6b65\u5546\u4e1a\u5408\u4f5c\u4e5f\u662f\u975e\u5e38\u6709\u53ef\u80fd\u7684\u3002    \u83b7\u53d6\u6709\u5173\u6838\u5fc3\u7528\u6237\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3\uff1a", 
            "title": "\u76f8\u5173\u9879\u76ee"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_8", 
            "text": "\u672c\u6587\u6863\u6839\u636e\u77e5\u8bc6\u5171\u4eab Attribution-ShareAlike License 3.0  \u83b7\u5f97\u8bb8\u53ef\u3002\u6e90\u4ee3\u7801\u548c\u6570\u636e\u5e93\u53ef\u901a\u8fc7 GPL/LGPL \u83b7\u5f97\uff0c\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6e90\u4ee3\u7801\u6587\u4ef6\u3002", 
            "title": "\u8bb8\u53ef\u8bc1\u4e66"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_9", 
            "text": "\u5173\u4e8e\u4f20\u611f\u5668\u5e38\u89c1\u95ee\u9898\uff0c\u4eba\u4eec\u53ef\u4ee5\u53bb\u8fd9\u91cc\u627e\u5230\u8fd9\u79cd\u4ea7\u54c1\u7684\u95ee\u9898\u548c\u7b54\u6848\u3002    water flow sensor \u4f7f\u7528\u4ec0\u4e48\u6750\u6599\u5236\u6210\u7684?    \u5c3c\u9f99\u7ea4\u7ef4\uff0c\u907f\u514d\u5f3a\u9178\u548c\u5f3a\u78b1\u3002    water flow sensor \u662f\u5426\u53ef\u7528\u4e8e\u996e\u7528\u6c34\u7cfb\u7edf?    \u662f\u7684\uff0c\u5b83\u5df2\u7ecf\u7528\u4e8e\u996e\u6c34\u673a.", 
            "title": "\u5e38\u89c1\u95ee\u9898"
        }, 
        {
            "location": "/G1_and_2_inch_Water_Flow_Sensor/#_10", 
            "text": "Water flow sensor datasheet.pdf  Reading Water Flow rate with Water Flow Sensor  Water Flow rate display on LCD  datasheet for the material", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/G1-8_Water_Flow_Sensor/", 
            "text": "Water flow sensor \u7531\u5851\u6599\u9600\u4f53\uff0c\u6c34\u8f6c\u5b50\u548c\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u7ec4\u6210\u3002 \u5f53\u6c34\u6d41\u8fc7\u8f6c\u5b50\u65f6\uff0c\u8f6c\u5b50\u6eda\u52a8\uff0c\u5176\u901f\u5ea6\u968f\u7740\u6d41\u901f\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002 \u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u8f93\u51fa\u76f8\u5e94\u7684\u8109\u51b2\u4fe1\u53f7\u3002\u8fd9\u9002\u7528\u4e8e\u68c0\u6d4b\u996e\u6c34\u673a\u6216\u5496\u5561\u673a\u4e2d\u7684\u6d41\u91cf\u3002\n\n\n\u6211\u4eec\u62e5\u6709\u4e0d\u540c\u76f4\u5f84\u7684\u5168\u7cfb\u5217\u6c34\u6d41\u4f20\u611f\u5668\u3002 \u68c0\u7d22\u5e76\u627e\u5230\u6700\u7b26\u5408\u4f60\u9700\u6c42\u7684\u90a3\u4e2a\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u7d27\u51d1\uff0c\u6613\u4e8e\u5b89\u88c5\n\n\n\n\n\n\n\u9ad8\u5bc6\u5c01\u6027\u80fd\n\n\n\n\n\n\n\u9ad8\u54c1\u8d28\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\n\n\n\n\n\n\n\u7b26\u5408RoHS\u6807\u51c6\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\u6700\u5c0f\u5de5\u4f5c\u7535\u538b\n\n\n\nDC 4.5V\n\n\n\n\n\n\u6700\u5927\u5de5\u4f5c\u7535\u6d41\n\n\n\n15mA(DC 5V)\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n5V\uff5e24V\n\n\n\n\n\n\u6c34\u6d41\u91cf\u8303\u56f4\n\n\n\n0.3~6L/min\n\n\n\n\n\n\u627f\u8f7d\u91cf\n\n\n\n\u226410mA(DC 5V)\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n\n\u226480\u2103\n\n\n\n\n\n\u6db2\u4f53\u6e29\u5ea6\n\n\n\n\u2264120\u2103\n\n\n\n\n\n\u5de5\u4f5c\u6e7f\u5ea6\n\n\n\n35%\uff5e90%RH\n\n\n\n\n\n\u6c34\u538b\u529b\n\n\n\n\u22640.8MPa\n\n\n\n\n\n\u50a8\u5b58\u6e29\u5ea6\n\n\n\n-25\u2103\uff5e+80\u2103\n\n\n\n\n\n\u50a8\u5b58\u9002\u5ea6\n\n\n\n25%\uff5e95%RH\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\u6ce8\u610f\uff1a\u8fd9\u4e2a\u4f8b\u5b50\u662f\u7531 Charles Gantt \u5b8c\u6210\u7684\u3002\u611f\u8c22\u4ed6\u7684\u8d21\u732e\u3002\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\n\n\u7528Water Flow Sensor\u8bfb\u53d6\u6c34\u6d41\u91cf\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6211\u76f4\u5728\u7814\u7a76\u7684\u4e00\u4e2a\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4f1a\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e9b\uff0c\u5173\u4e8e\u5982\u4f55\u4f7f\u7528 Seeed Studio Depo \u4e2d\u7684 Water Flow Sensor \u8bfb\u53d6\u6bcf\u5c0f\u65f6\u7684\u6c34\u6d41\u91cf\u3002 \u5b83\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u65cb\u8f6c\u8f6e\u5e76\u4e0e\u970d\u5c14\u4f20\u611f\u5668\u4e00\u8d77\u4f7f\u7528\u3002 \u901a\u8fc7\u8bfb\u53d6\u8fd9\u4e9b\u8109\u51b2\u5e76\u8bb0\u5f55\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6db2\u4f53\u6d41\u901f\u7cbe\u786e\u5230 3% \u4ee5\u5185\u3002\u7531\u4e8e\u7aef\u53e3\u662f\u7b80\u5355\u7684 G\n\uff0c\u6240\u4ee5\u627e\u5230\u5408\u9002\u7684\u63a5\u53e3\u5e76\u4e0d\u96be\u3002\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\u60a8\u5c06\u9700\u8981 Seeeduino / Arduino\uff0c\u6c34\u6d41\u4f20\u611f\u5668\uff0c10K\u7535\u963b\uff0c\u9762\u5305\u677f\u548c\u4e00\u4e9b\u8df3\u7ebf\u3002\n\n\n\u8fde\u63a5 Water Flow Sensor \u975e\u5e38\u7b80\u5355\u3002 \u6709\u4e09\u6839\u7535\u7ebf\uff1a\u9ed1\u8272\uff0c\u7ea2\u8272\u548c\u9ec4\u8272\u3002 \u9ed1\u8272\u8fde\u5230 Seeeduino \u7684 \nGND\n\uff0c\u7ea2\u8272\u8fde\u5230 Seeeduino \u7684 \n5v\n \u7aef\u53e3\uff0c\u9ec4\u8272\u7ebf\u5c06\u9700\u8981\u8fde\u63a5\u5230 \n10k\n \u4e0a\u62c9\u7535\u963b\uff0c\u7136\u540e\u8fde\u63a5\u5230 Seeeduino \u4e0a\u7684 \n\u5f15\u811a 2\n \u3002\n\n\n\u8fd9\u662f\u4e00\u4e2a\u786c\u4ef6\u8fde\u63a5\u56fe\uff0c\u5b83\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u8fde\u7ebf\u3002\n\n\n\n\n\u4e00\u65e6\u4f60\u6709\u4e86\u5b83\uff0c\u4f60\u5c06\u9700\u8981\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u5230\u4f60\u7684 Seeeduino\u3002 \u4e0a\u4f20\u540e\uff0c\u4f7f\u4e00\u4e9b\u6d41\u4f53\u6d41\u8fc7 Water Flow Sensor\uff0c\u60a8\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5b83\u5c06\u663e\u793a\u6d41\u91cf\uff0c\u6bcf\u79d2\u5237\u65b0\u4e00\u6b21\u3002\n\n\n\u7a0b\u5e8f\u8bbe\u8ba1\n\n\n// reading liquid flow rate using Seeeduino and Water Flow Sensor from Seeedstudio.com\n// Code adapted by Charles Gantt from PC Fan RPM code written by Crenn @thebestcasescenario.com\n// http:/themakersworkbench.com http://thebestcasescenario.com http://seeedstudio.com\n\nvolatile int NbTopsFan; //\u6d4b\u91cf\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\nint Calc;\nint hallsensor = 2;    //\u8bbe\u7f6e\u4f20\u611f\u5668\u63a5\u7ebf\u5f15\u811a\n\nvoid rpm ()            //\u8fd9\u662f\u4e2d\u65ad\u8c03\u7528\u7684\u529f\u80fd\n{\n    NbTopsFan++;       //\u8be5\u529f\u80fd\u6d4b\u91cf\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\n}\n// The setup() method runs once, when the sketch starts\nvoid setup()\n{\n    pinMode(hallsensor, INPUT); //\u521d\u59cb\u5316\u6570\u5b57\u5f15\u811a2\u4f5c\u4e3a\u8f93\u5165\n    Serial.begin(9600);         //\u4e32\u884c\u7aef\u53e3\u521d\u59cb\u5316\n    attachInterrupt(0, rpm, RISING);  //\u8fde\u63a5\u4e2d\u65ad\n}\n// the loop() method runs over and over again,\n// as long as the Arduino has power\nvoid loop ()\n{\n    NbTopsFan = 0;   //\u5c06 NbTops \u8bbe\u7f6e\u4e3a 0 \u53ef\u4ee5\u8fdb\u884c\u8ba1\u7b97\n    sei();          //\u542f\u7528\u4e2d\u65ad\n    delay (1000);   //\u7b49\u5f851\u79d2\n    cli();          //\u7981\u6b62\u4e2d\u65ad\n    Calc = (NbTopsFan * 60 / 7.5); //(Pulse frequency x 60) / 7.5Q,\u6d41\u91cf\u4e3aL/hour\n    Serial.print (Calc, DEC);\n    Serial.print (\n L/hour\\r\\n\n);\n}\n\n\n\n\u60a8\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u8bba\u575b\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\n\u7528 Water Flow Sensor \u8bfb\u53d6\u6c34\u6d41\u91cf\n.\n\n\n\u63a5\u7ebf\u56fe\n\n\n\n\n\u8f93\u51fa\u8868\n\n\n\u6c34\u5e73\u4f4d\u7f6e\u6d4b\u8bd5\u4e2d\u7684\u8109\u51b2\u9891\u7387\uff08Hz\uff09= 7.5Q\uff0cQ \u4e3a\u6d41\u91cf\uff08L / min\uff09\u3002 \uff08\u7ed3\u679c\u5728\u00b1 3\uff05\u8303\u56f4\u5185\uff09\n\n\n\n\n\n\u8f93\u51fa\u8109\u51b2\u9ad8\u7535\u5e73\n\n\n\n\u4fe1\u53f7\u7535\u538b \n4.5 V( \u8f93\u5165 DC 5 V)\n\n\n\n\n\n\u8f93\u51fa\u8109\u51b2\u4f4e\u7535\u5e73\n\n\n\n\u4fe1\u53f7\u7535\u538b \n0.5V( \u8f93\u5165 DC 5V)\n\n\n\n\n\n\u7cbe\u5ea6\n\n\n\n3% (\u6d41\u901f\u4ece 1L/min \u5230 10L/min)\n\n\n\n\n\n\u8f93\u51fa\u4fe1\u53f7\u5360\u7a7a\u6bd4\n\n\n\n40%\uff5e60%\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u6570\u636e\u624b\u518c]\nWater flow sensor datasheet.pdf\n\n\n\n\n\n\n[\u521b\u610f\u5e94\u7528]\nReading Water Flow rate with Water Flow Sensor", 
            "title": "G1-8 Water Flow Sensor"
        }, 
        {
            "location": "/G1-8_Water_Flow_Sensor/#_1", 
            "text": "\u7d27\u51d1\uff0c\u6613\u4e8e\u5b89\u88c5    \u9ad8\u5bc6\u5c01\u6027\u80fd    \u9ad8\u54c1\u8d28\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668    \u7b26\u5408RoHS\u6807\u51c6", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/G1-8_Water_Flow_Sensor/#_2", 
            "text": "\u6700\u5c0f\u5de5\u4f5c\u7535\u538b  DC 4.5V   \u6700\u5927\u5de5\u4f5c\u7535\u6d41  15mA(DC 5V)   \u5de5\u4f5c\u7535\u538b  5V\uff5e24V   \u6c34\u6d41\u91cf\u8303\u56f4  0.3~6L/min   \u627f\u8f7d\u91cf  \u226410mA(DC 5V)   \u5de5\u4f5c\u6e29\u5ea6  \u226480\u2103   \u6db2\u4f53\u6e29\u5ea6  \u2264120\u2103   \u5de5\u4f5c\u6e7f\u5ea6  35%\uff5e90%RH   \u6c34\u538b\u529b  \u22640.8MPa   \u50a8\u5b58\u6e29\u5ea6  -25\u2103\uff5e+80\u2103   \u50a8\u5b58\u9002\u5ea6  25%\uff5e95%RH", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/G1-8_Water_Flow_Sensor/#_3", 
            "text": "\u6ce8\u610f\uff1a\u8fd9\u4e2a\u4f8b\u5b50\u662f\u7531 Charles Gantt \u5b8c\u6210\u7684\u3002\u611f\u8c22\u4ed6\u7684\u8d21\u732e\u3002\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/G1-8_Water_Flow_Sensor/#water-flow-sensor", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u6211\u76f4\u5728\u7814\u7a76\u7684\u4e00\u4e2a\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4f1a\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e9b\uff0c\u5173\u4e8e\u5982\u4f55\u4f7f\u7528 Seeed Studio Depo \u4e2d\u7684 Water Flow Sensor \u8bfb\u53d6\u6bcf\u5c0f\u65f6\u7684\u6c34\u6d41\u91cf\u3002 \u5b83\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u65cb\u8f6c\u8f6e\u5e76\u4e0e\u970d\u5c14\u4f20\u611f\u5668\u4e00\u8d77\u4f7f\u7528\u3002 \u901a\u8fc7\u8bfb\u53d6\u8fd9\u4e9b\u8109\u51b2\u5e76\u8bb0\u5f55\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6db2\u4f53\u6d41\u901f\u7cbe\u786e\u5230 3% \u4ee5\u5185\u3002\u7531\u4e8e\u7aef\u53e3\u662f\u7b80\u5355\u7684 G \uff0c\u6240\u4ee5\u627e\u5230\u5408\u9002\u7684\u63a5\u53e3\u5e76\u4e0d\u96be\u3002  \u786c\u4ef6\u5b89\u88c5  \u60a8\u5c06\u9700\u8981 Seeeduino / Arduino\uff0c\u6c34\u6d41\u4f20\u611f\u5668\uff0c10K\u7535\u963b\uff0c\u9762\u5305\u677f\u548c\u4e00\u4e9b\u8df3\u7ebf\u3002  \u8fde\u63a5 Water Flow Sensor \u975e\u5e38\u7b80\u5355\u3002 \u6709\u4e09\u6839\u7535\u7ebf\uff1a\u9ed1\u8272\uff0c\u7ea2\u8272\u548c\u9ec4\u8272\u3002 \u9ed1\u8272\u8fde\u5230 Seeeduino \u7684  GND \uff0c\u7ea2\u8272\u8fde\u5230 Seeeduino \u7684  5v  \u7aef\u53e3\uff0c\u9ec4\u8272\u7ebf\u5c06\u9700\u8981\u8fde\u63a5\u5230  10k  \u4e0a\u62c9\u7535\u963b\uff0c\u7136\u540e\u8fde\u63a5\u5230 Seeeduino \u4e0a\u7684  \u5f15\u811a 2  \u3002  \u8fd9\u662f\u4e00\u4e2a\u786c\u4ef6\u8fde\u63a5\u56fe\uff0c\u5b83\u5c06\u544a\u8bc9\u4f60\u5982\u4f55\u8fde\u7ebf\u3002   \u4e00\u65e6\u4f60\u6709\u4e86\u5b83\uff0c\u4f60\u5c06\u9700\u8981\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u5230\u4f60\u7684 Seeeduino\u3002 \u4e0a\u4f20\u540e\uff0c\u4f7f\u4e00\u4e9b\u6d41\u4f53\u6d41\u8fc7 Water Flow Sensor\uff0c\u60a8\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5b83\u5c06\u663e\u793a\u6d41\u91cf\uff0c\u6bcf\u79d2\u5237\u65b0\u4e00\u6b21\u3002  \u7a0b\u5e8f\u8bbe\u8ba1  // reading liquid flow rate using Seeeduino and Water Flow Sensor from Seeedstudio.com\n// Code adapted by Charles Gantt from PC Fan RPM code written by Crenn @thebestcasescenario.com\n// http:/themakersworkbench.com http://thebestcasescenario.com http://seeedstudio.com\n\nvolatile int NbTopsFan; //\u6d4b\u91cf\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\nint Calc;\nint hallsensor = 2;    //\u8bbe\u7f6e\u4f20\u611f\u5668\u63a5\u7ebf\u5f15\u811a\n\nvoid rpm ()            //\u8fd9\u662f\u4e2d\u65ad\u8c03\u7528\u7684\u529f\u80fd\n{\n    NbTopsFan++;       //\u8be5\u529f\u80fd\u6d4b\u91cf\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\n}\n// The setup() method runs once, when the sketch starts\nvoid setup()\n{\n    pinMode(hallsensor, INPUT); //\u521d\u59cb\u5316\u6570\u5b57\u5f15\u811a2\u4f5c\u4e3a\u8f93\u5165\n    Serial.begin(9600);         //\u4e32\u884c\u7aef\u53e3\u521d\u59cb\u5316\n    attachInterrupt(0, rpm, RISING);  //\u8fde\u63a5\u4e2d\u65ad\n}\n// the loop() method runs over and over again,\n// as long as the Arduino has power\nvoid loop ()\n{\n    NbTopsFan = 0;   //\u5c06 NbTops \u8bbe\u7f6e\u4e3a 0 \u53ef\u4ee5\u8fdb\u884c\u8ba1\u7b97\n    sei();          //\u542f\u7528\u4e2d\u65ad\n    delay (1000);   //\u7b49\u5f851\u79d2\n    cli();          //\u7981\u6b62\u4e2d\u65ad\n    Calc = (NbTopsFan * 60 / 7.5); //(Pulse frequency x 60) / 7.5Q,\u6d41\u91cf\u4e3aL/hour\n    Serial.print (Calc, DEC);\n    Serial.print (  L/hour\\r\\n );\n}  \u60a8\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u8bba\u575b\u4e86\u89e3\u66f4\u591a\u5173\u4e8e \u7528 Water Flow Sensor \u8bfb\u53d6\u6c34\u6d41\u91cf .", 
            "title": "\u7528Water Flow Sensor\u8bfb\u53d6\u6c34\u6d41\u91cf"
        }, 
        {
            "location": "/G1-8_Water_Flow_Sensor/#_4", 
            "text": "", 
            "title": "\u63a5\u7ebf\u56fe"
        }, 
        {
            "location": "/G1-8_Water_Flow_Sensor/#_5", 
            "text": "\u6c34\u5e73\u4f4d\u7f6e\u6d4b\u8bd5\u4e2d\u7684\u8109\u51b2\u9891\u7387\uff08Hz\uff09= 7.5Q\uff0cQ \u4e3a\u6d41\u91cf\uff08L / min\uff09\u3002 \uff08\u7ed3\u679c\u5728\u00b1 3\uff05\u8303\u56f4\u5185\uff09   \u8f93\u51fa\u8109\u51b2\u9ad8\u7535\u5e73  \u4fe1\u53f7\u7535\u538b  4.5 V( \u8f93\u5165 DC 5 V)   \u8f93\u51fa\u8109\u51b2\u4f4e\u7535\u5e73  \u4fe1\u53f7\u7535\u538b  0.5V( \u8f93\u5165 DC 5V)   \u7cbe\u5ea6  3% (\u6d41\u901f\u4ece 1L/min \u5230 10L/min)   \u8f93\u51fa\u4fe1\u53f7\u5360\u7a7a\u6bd4  40%\uff5e60%", 
            "title": "\u8f93\u51fa\u8868"
        }, 
        {
            "location": "/G1-8_Water_Flow_Sensor/#_6", 
            "text": "[\u6570\u636e\u624b\u518c] Water flow sensor datasheet.pdf    [\u521b\u610f\u5e94\u7528] Reading Water Flow rate with Water Flow Sensor", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/IoT/", 
            "text": "\u7269\u8054\u7f51\uff08IoT\uff09\u4ea7\u54c1\u5217\u5728\u8fd9\u91cc\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684IoT\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "IoT"
        }, 
        {
            "location": "/IoT/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684IoT\u677f\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/", 
            "text": "The BBC micro:bit \u662f\u4e00\u4e2a\u8896\u73cd\u7535\u8111\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6fc0\u53d1\u60a8\u7684\u521b\u9020\u529b\uff0c\u5e76\u4e14\u65e0\u9700\u592a\u591a\u7684\u7535\u6c14\u548c\u7f16\u7801\u77e5\u8bc6\u3002\u6709\u5f88\u591a\u521b\u4f5c\u7684\u53ef\u80fd\u6027\uff0c\u60a8\u53ef\u4ee5\u4ece micro:bit \u4e2d\u6316\u6398\u51fa\u6765\uff0c\u4f8b\u5982\u673a\u5668\u4eba\u6216\u8005\u4e50\u5668\u3002 \u7136\u800c\uff0c\u5982\u679c\u60a8\u60f3\u521b\u9020\u66f4\u591a\u7684\u4e1c\u897f\uff0c\u53ea\u6709 BBC micro:bit \u662f\u4e0d\u591f\u7684\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u5411\u60a8\u4ecb\u7ecd Grove Inventor \u5de5\u5177\u5305\u3002\n\n\n\u6b64 Grove Inventor \u5957\u4ef6\uff1a\u4e3a\u60a8\u7684 micro\uff1abit \u5e26\u6765\u65e0\u9650\u7684\u53ef\u80fd\u6027\u3002\u8be5\u5957\u4ef6\u4e2d\u7684\u6838\u5fc3\u677f\u662f Micro\uff1aBit \u7684 Grove \u6269\u5c55\u57fa\u677f\uff0c\u501f\u7531\u6b64\u677f\u53ef\u4ee5\u4f7f\u7528\u5927\u91cf\u7684 Grove \u6a21\u5757\uff0c\u5305\u62ec\u4f20\u611f\u5668\uff0c\u663e\u793a\u5668\uff0c\u6267\u884c\u5668\u4e0e Micro\uff1aBit \u8fdb\u884c\u4ea4\u4e92\u3002\u5982\u679c\u60a8\u4ece\u6765\u6ca1\u6709\u4f7f\u7528\u8fc7\uff0c\u4e5f\u4e0d\u77e5\u9053 Grove \u662f\u4ec0\u4e48\uff0c\u8fd9\u91cc\u662f \nGrove \u7cfb\u7edf\n \u7684\u4ecb\u7ecd\u3002 \u60a8\u6240\u9700\u8981\u77e5\u9053\u7684\u662f\uff0cGrove\u4e0d\u518d\u9700\u8981\u710a\u63a5\u6216\u8df3\u7ebf\u3002\u4f60\u7684\u539f\u578b\u8bbe\u8ba1\u5c06\u66f4\u5bb9\u6613\uff0c\u66f4\u65b9\u4fbf\u3002\n\n\n\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u4e868\u4e2aGrove\u6a21\u5757\uff0c\u8ba9\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 micro\uff1abit\u3002 \u4f7f\u7528\u8fd9\u4e9bGrove\u6a21\u5757\uff0c\u60a8\u53ef\u4ee5\u6d4b\u91cf\u8ddd\u79bb\u5e76\u663e\u793a\u5b83\uff0c\u4f7f\u7528\u624b\u52bf\u64ad\u653e\u4e0d\u540c\u7684\u97f3\u4e50\uff0c\u6216\u8005\u4e3a\u60a8\u7684\u529e\u516c\u684c\u6216\u623f\u95f4\u505a\u4e2a\u806a\u660e\u7684\u8b66\u536b\u3002 \u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u514d\u8d39\u4e0b\u8f7d\u7684\u6240\u6709\u5fc5\u8981\u7684\u5e93\uff08\u5305\uff09\u3002 \u5982\u679c\u4f60\u662f\u4e00\u4e2a\u521d\u5b66\u8005\uff0c\u4e0d\u8981\u62c5\u5fc3\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u51c6\u5907\u4e8612\u4e2a\u4e0d\u540c\u7684\u9879\u76ee\uff0c\u53ef\u4ee5\u4e00\u6b65\u4e00\u6b65\u7684\u6559\u60a8\u3002\u5982\u679c\u60a8\u662f\u4e00\u4e2a\u9ad8\u7ea7\u7528\u6237\uff0c\u8fd9\u4e2a\u5de5\u5177\u5305\u5c06\u5e2e\u52a9\u60a8\u5b9e\u73b0\u6bd4\u522b\u4eba\u66f4\u6709\u521b\u610f\u7684\u9879\u76ee\u3002\n\n\n\n\nNote\n\n\n\n\nmicro\uff1abit \u7684\u8f93\u51fa\u7535\u538b\u7ea6\u4e3a3.0V\uff0c\u4f7f\u7528 micro\uff1abit \u6216 AA \u7535\u6c60\u7ed9\u7535\u8def\u4f9b\u7535\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9700\u8981\u9ad8\u8f93\u5165\u7535\u538b\u548c\u9a71\u52a8\u7535\u6d41\u7684 Grove \u6a21\u5757\uff08\u5982 Grove-Ultrasonic Ranger\uff09\u53d1\u751f\u6545\u969c\u3002\u4e3a\u4e86\u4f7f\u8fd9\u4e9b Grove \u6a21\u5757\u6b63\u5e38\u5de5\u4f5c\uff0c\u8bf7\u4f7f\u7528 Grove \u6269\u5c55\u677f\u4e0a\u7684\u5fae\u578b USB \u7aef\u53e3\u6765\u4e3a\u6574\u4e2a\u7cfb\u7edf\u4f9b\u7535\u3002\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u9177\u70ab\u7684\u6269\u5c55\u677f\u53ef\u4ee5\u63a5\u5165\u4e30\u5bcc\u800c\u65b9\u4fbf\u7684\u5916\u8bbe\uff1b\n\n\n\u4e13\u4e3a micro:bit \u81fb\u9009\u768410\u4e2a\u7cbe\u54c1 Grove \u6a21\u5757\uff1b\n\n\n12 \u4e2a\u9177\u70ab\u7684\u9879\u76ee\u8ba9\u60a8\u53ef\u4ee5\u5feb\u901f\u5165\u95e8\uff1b\n\n\n\u8be6\u5c3d\u7684\u6307\u5357\u4e0e\u624b\u518c\u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\n\u9879\u76ee\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove Shield for micro:bit\n\n\n1\n\n\n\n\n\n\nGrove - Rotary Angle Sensor(P)\n\n\n1\n\n\n\n\n\n\nGrove - Speaker\n\n\n1\n\n\n\n\n\n\nGrove - Ultrasonic Ranger\n\n\n1\n\n\n\n\n\n\nGrove - Light Sensor v1.2\n\n\n1\n\n\n\n\n\n\nGrove - WS2812 Waterproof LED Strip - 30 LEDs 1 meter\n\n\n1\n\n\n\n\n\n\nGrove - Gesture\n\n\n1\n\n\n\n\n\n\nGrove - 4-Digit Display\n\n\n1\n\n\n\n\n\n\nGrove - Red LED\n\n\n1\n\n\n\n\n\n\nMicro USB \u6570\u636e\u7ebf - 48cm\n\n\n1\n\n\n\n\n\n\n12 \u9879\u76ee\u8bf4\u660e\u4e66\n\n\n1\n\n\n\n\n\n\nAlligator \u8fde\u63a5\u7ebf\n\n\n10\n\n\n\n\n\n\nGrove \u8fde\u63a5\u7ebf\n\n\n7\n\n\n\n\n\n\n\n\n\u64cd\u4f5c\u6307\u5357\n\n\nMicro:bit \u57fa\u7840\u77e5\u8bc6\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528 Micro\uff1abit\uff0c\u5219\u9700\u8981\u4e86\u89e3\u4e00\u4e9b\u76f8\u5173\u7684\u57fa\u672c\u77e5\u8bc6\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb \n \n\u8fd9\u91cc\n \n \u6765\u4e86\u89e3\u5173\u4e8e Micro:bit \u7684\u66f4\u591a\u4fe1\u606f\u3002\n\n\nMicro:bit \u63d0\u4f9b\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u7f16\u8f91\u5668 - JavaScript Block Editor \u548c Python Editor. JavaScript Block Editor \u652f\u6301\u56fe\u5f62\u5316\u7f16\u7a0b\uff0c\u5b83\u7b80\u5355\u6613\u5b66\u3002\u6240\u4ee5\uff0c\u672c\u6559\u7a0b\u57fa\u4e8e JavaScript Block Editor\u3002\n\n\n\u8fd9\u91cc\u6709\u4e24\u4e2a\u7b80\u5355\u7684\u6b65\u9aa4\u60a8\u9700\u8981\u6ce8\u610f\uff0c\u5b8c\u6210\u8fd9\u4e24\u6b65\u4e4b\u540e\u60a8\u53ef\u4ee5\u5f00\u59cb\u4eab\u53d7\u60a8\u7684 Micro:bit\u3002\n\n\n\u6b65\u9aa41.\u6253\u5f00\u7f16\u8f91\u5668\n\n\n\u8bf7\u70b9\u51fb \nJavaScript Block Editor\n , \u7136\u540e\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u56fe\u5f62\u5316\u7f16\u7a0b\u7684\u9875\u9762\u3002\n\n\n\u6b65\u9aa42.\u6dfb\u52a0 Grove \u5305\n\n\n\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u9f7f\u8f6e \n \u9009\u62e9 \nAdd Package(\u6dfb\u52a0\u5305)\n\n\n\n\n\n\n\n\n\u8f93\u5165\u4e0b\u5217\u94fe\u63a5 URL: \ngithub.com/seeed-studio/pxt-grove\n\n\n\n\n\n\n\n\n\u73b0\u5728\u60a8\u5c06\u5728\u5de5\u5177\u680f\u4e2d\u770b\u5230 \nGrove\n\u3002\n\n\n\n\n\n\nDemo 1. Gesture Recognition\n\n\nThe gesture sensor can recognize 9 different gestures, in this demo, you will learn how to display the recognized\ngesture name on micro:bit.\n\n\nPart list\n\n\n\n\n\n\n\n\nPart name\n\n\nnumber\n\n\n\n\n\n\n\n\n\n\nGrove - Gesture\n\n\n1\n\n\n\n\n\n\nGrove Shield for micro:bit\n\n\n1\n\n\n\n\n\n\nmicro:bit\n\n\n1\n\n\n\n\n\n\nGrove Universal 4 pin cable\n\n\n1\n\n\n\n\n\n\nMicro-USB cable\n\n\n1\n\n\n\n\n\n\n\n\nConnection\n\n\n\n\nPlug the \nmicro:bit\n into \nGrove Shield for micro:bit\n.\n\n\nConnect the Grove-Gesture to \nI2C\n Port of micro:bit via a Grove Universal 4 pin cable.\n\n\nConnect micro:bit to PC via a Micro-USB cable.\n\n\n\n\n\n\nWarning\n\n\n-please make sure the LED Array is faced up when you plug the micro:bit, or you may damage the board.\n\n\n\n\n\n\nSoftware\n\n\n\n\nStep1:\n\n\n\n\nAdd On Gesture Block\n\n\n\n\n\n\nStep2:\n\n\n\n\nSelect Right, so that the sensor can recognize when you move your hand from right to the left.\n\n\n\n\n\n\nStep3:\n\n\n\n\nAdd Basic block \nshow string\n and embed it into the Gesture block.Then double click \"Hello!\", change it to \"Right\".\n\n\n\n\n\n\nStep4:\n\n\n\n\nAdd \"Left\" and \"Clockwise\" the same way, and embed \nshow icon\n into \"Clockwise\".\n\n\n\n\n\n\nStep5:\n\n\n\n\nWhen you finish all this above, rename the project \"gesture\". Then you can download the project to your board. Click \nDownload\n in the Bottom left corner, download the file \nmicrobit-gesture.hex\n into the flash of MICROBIT.\n\n\n\n\nNow enjoy your project.\n\n\n\n\nTip\n\n\n\n\nYou can find the blocks by color. For example, if you don't where \nshow icon\n is ,since it's blue and the Module \nBasic\n is blue,you can find it here. Simple and effective, isn't it?\n\n\n\n\n\n\nDemo 2. Ultrasonic Meter\n\n\nIn this demo, you will learn how to use the ultrasonic sensor to measure distance and show the value on a\ndisplay.\n\n\nPart list\n\n\n\n\n\n\n\n\nPart name\n\n\nnumber\n\n\n\n\n\n\n\n\n\n\nGrove - Ultrasonic Ranger\n\n\n1\n\n\n\n\n\n\nGrove - 4-Digit Display\n\n\n1\n\n\n\n\n\n\nGrove Shield for micro:bit\n\n\n1\n\n\n\n\n\n\nmicro:bit\n\n\n1\n\n\n\n\n\n\nGrove Universal 4 pin cable\n\n\n2\n\n\n\n\n\n\nMicro-USB cable\n\n\n1\n\n\n\n\n\n\n\n\nConnection\n\n\n\n\nPlug the \nmicro:bit\n into \nGrove Shield for micro:bit\n.\n\n\n\n\n\n\nWarning\n\n\n\n\nplease make sure the LED Array is faced up when you plug the micro:bit, or you may damage the board.\n\n\n\n\nConnect the Grove-Ultrasonic Ranger to \nP0/P14\n Port of micro:bit via a Grove Universal 4 pin cable.\n\n\nConnect the Grove-4-Digit Display to \nP1/P15\n Port of micro:bit via a Grove Universal 4 pin cable.\n\n\nConnect micro:bit to PC via a Micro-USB cable.\n\n\n\n\n\n\nsoftware\n\n\n\n\nStep1:\n\n\n\n\nAdd basic block \non start\n, then add variable blocks \nset item to 0\n, rename \u2018items\u2019 to \u2018Display\u2019. If you have successfully added the Grove package, replace \u201c0\u201dwith Grove block 4-Digit Display at P1 and P15.\n\n\n\n\n\n\n\n\nStep2:\n\n\n\n\nAdd basic block forever, then add Grove block item show number 0, rename \u2018item\u2019 to \u2018Display\u2019, replace \u20180\u2019 with Grove block Ultrasonic Sensor (in cm) at P0.\n\n\n\n\nStep3:\n\n\n\n\nAdd basic block pause (ms) (100).\n\n\n\n\n\n\nStep4:\n\n\n\n\nRename the project \"Ultrasonic Meter\", download and enjoy.\n\n\nResources\n\n\nGrove Inventor Kit for micro:bit User Manual\n\n\nmicro:bit Getting Started Videos\n\n\nAbout micro:bit\n\n\nmicro:bit Hardware\n\n\nmicro:bit Apps\n\n\nGrove Shield for microbit_eagle file.zip", 
            "title": "Grove Inventor Kit for microbit"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#_1", 
            "text": "\u9177\u70ab\u7684\u6269\u5c55\u677f\u53ef\u4ee5\u63a5\u5165\u4e30\u5bcc\u800c\u65b9\u4fbf\u7684\u5916\u8bbe\uff1b  \u4e13\u4e3a micro:bit \u81fb\u9009\u768410\u4e2a\u7cbe\u54c1 Grove \u6a21\u5757\uff1b  12 \u4e2a\u9177\u70ab\u7684\u9879\u76ee\u8ba9\u60a8\u53ef\u4ee5\u5feb\u901f\u5165\u95e8\uff1b  \u8be6\u5c3d\u7684\u6307\u5357\u4e0e\u624b\u518c\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#_2", 
            "text": "", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#_3", 
            "text": "\u9879\u76ee\u540d\u79f0  \u6570\u91cf      Grove Shield for micro:bit  1    Grove - Rotary Angle Sensor(P)  1    Grove - Speaker  1    Grove - Ultrasonic Ranger  1    Grove - Light Sensor v1.2  1    Grove - WS2812 Waterproof LED Strip - 30 LEDs 1 meter  1    Grove - Gesture  1    Grove - 4-Digit Display  1    Grove - Red LED  1    Micro USB \u6570\u636e\u7ebf - 48cm  1    12 \u9879\u76ee\u8bf4\u660e\u4e66  1    Alligator \u8fde\u63a5\u7ebf  10    Grove \u8fde\u63a5\u7ebf  7", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#_4", 
            "text": "", 
            "title": "\u64cd\u4f5c\u6307\u5357"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#microbit", 
            "text": "\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528 Micro\uff1abit\uff0c\u5219\u9700\u8981\u4e86\u89e3\u4e00\u4e9b\u76f8\u5173\u7684\u57fa\u672c\u77e5\u8bc6\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb    \u8fd9\u91cc    \u6765\u4e86\u89e3\u5173\u4e8e Micro:bit \u7684\u66f4\u591a\u4fe1\u606f\u3002  Micro:bit \u63d0\u4f9b\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u7f16\u8f91\u5668 - JavaScript Block Editor \u548c Python Editor. JavaScript Block Editor \u652f\u6301\u56fe\u5f62\u5316\u7f16\u7a0b\uff0c\u5b83\u7b80\u5355\u6613\u5b66\u3002\u6240\u4ee5\uff0c\u672c\u6559\u7a0b\u57fa\u4e8e JavaScript Block Editor\u3002  \u8fd9\u91cc\u6709\u4e24\u4e2a\u7b80\u5355\u7684\u6b65\u9aa4\u60a8\u9700\u8981\u6ce8\u610f\uff0c\u5b8c\u6210\u8fd9\u4e24\u6b65\u4e4b\u540e\u60a8\u53ef\u4ee5\u5f00\u59cb\u4eab\u53d7\u60a8\u7684 Micro:bit\u3002", 
            "title": "Micro:bit \u57fa\u7840\u77e5\u8bc6"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#1", 
            "text": "\u8bf7\u70b9\u51fb  JavaScript Block Editor  , \u7136\u540e\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u56fe\u5f62\u5316\u7f16\u7a0b\u7684\u9875\u9762\u3002", 
            "title": "\u6b65\u9aa41.\u6253\u5f00\u7f16\u8f91\u5668"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#2-grove", 
            "text": "\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u9f7f\u8f6e   \u9009\u62e9  Add Package(\u6dfb\u52a0\u5305)     \u8f93\u5165\u4e0b\u5217\u94fe\u63a5 URL:  github.com/seeed-studio/pxt-grove     \u73b0\u5728\u60a8\u5c06\u5728\u5de5\u5177\u680f\u4e2d\u770b\u5230  Grove \u3002", 
            "title": "\u6b65\u9aa42.\u6dfb\u52a0 Grove \u5305"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#demo-1-gesture-recognition", 
            "text": "The gesture sensor can recognize 9 different gestures, in this demo, you will learn how to display the recognized\ngesture name on micro:bit.", 
            "title": "Demo 1. Gesture Recognition"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#part-list", 
            "text": "Part name  number      Grove - Gesture  1    Grove Shield for micro:bit  1    micro:bit  1    Grove Universal 4 pin cable  1    Micro-USB cable  1", 
            "title": "Part list"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#connection", 
            "text": "Plug the  micro:bit  into  Grove Shield for micro:bit .  Connect the Grove-Gesture to  I2C  Port of micro:bit via a Grove Universal 4 pin cable.  Connect micro:bit to PC via a Micro-USB cable.    Warning  -please make sure the LED Array is faced up when you plug the micro:bit, or you may damage the board.", 
            "title": "Connection"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#software", 
            "text": "Step1:   Add On Gesture Block    Step2:   Select Right, so that the sensor can recognize when you move your hand from right to the left.    Step3:   Add Basic block  show string  and embed it into the Gesture block.Then double click \"Hello!\", change it to \"Right\".    Step4:   Add \"Left\" and \"Clockwise\" the same way, and embed  show icon  into \"Clockwise\".    Step5:   When you finish all this above, rename the project \"gesture\". Then you can download the project to your board. Click  Download  in the Bottom left corner, download the file  microbit-gesture.hex  into the flash of MICROBIT.   Now enjoy your project.   Tip   You can find the blocks by color. For example, if you don't where  show icon  is ,since it's blue and the Module  Basic  is blue,you can find it here. Simple and effective, isn't it?", 
            "title": "Software"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#demo-2-ultrasonic-meter", 
            "text": "In this demo, you will learn how to use the ultrasonic sensor to measure distance and show the value on a\ndisplay.", 
            "title": "Demo 2. Ultrasonic Meter"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#part-list_1", 
            "text": "Part name  number      Grove - Ultrasonic Ranger  1    Grove - 4-Digit Display  1    Grove Shield for micro:bit  1    micro:bit  1    Grove Universal 4 pin cable  2    Micro-USB cable  1", 
            "title": "Part list"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#connection_1", 
            "text": "Plug the  micro:bit  into  Grove Shield for micro:bit .    Warning   please make sure the LED Array is faced up when you plug the micro:bit, or you may damage the board.   Connect the Grove-Ultrasonic Ranger to  P0/P14  Port of micro:bit via a Grove Universal 4 pin cable.  Connect the Grove-4-Digit Display to  P1/P15  Port of micro:bit via a Grove Universal 4 pin cable.  Connect micro:bit to PC via a Micro-USB cable.", 
            "title": "Connection"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#software_1", 
            "text": "Step1:   Add basic block  on start , then add variable blocks  set item to 0 , rename \u2018items\u2019 to \u2018Display\u2019. If you have successfully added the Grove package, replace \u201c0\u201dwith Grove block 4-Digit Display at P1 and P15.     Step2:   Add basic block forever, then add Grove block item show number 0, rename \u2018item\u2019 to \u2018Display\u2019, replace \u20180\u2019 with Grove block Ultrasonic Sensor (in cm) at P0.   Step3:   Add basic block pause (ms) (100).    Step4:   Rename the project \"Ultrasonic Meter\", download and enjoy.", 
            "title": "software"
        }, 
        {
            "location": "/Grove_Inventor_Kit_for_microbit/#resources", 
            "text": "Grove Inventor Kit for micro:bit User Manual  micro:bit Getting Started Videos  About micro:bit  micro:bit Hardware  micro:bit Apps  Grove Shield for microbit_eagle file.zip", 
            "title": "Resources"
        }, 
        {
            "location": "/Grove_Starter_kit_for_Arduino_101/", 
            "text": "Grove \u7cfb\u7edf\u901a\u8fc7\u4e0d\u540c\u7684\u53d8\u6362\u5668 (\u5982\u4f20\u611f\u5668\u548c\u7535\u673a)\uff0c\u6269\u5c55\u677f\u548c Grove \u7ebf\u7f06 (\u770b\u8d77\u6765\u50cf\u5e26\u72b6\u7535\u7f06) \u5c06\u5904\u7406\u5668\u8fde\u63a5\u5230\u73b0\u5b9e\u4e16\u754c\u3002\u4f7f\u7528 Grove \u7cfb\u7edf\uff0c\u60a8\u4e0d\u5fc5\u50cf\u8fc7\u53bb\u90a3\u6837\u5904\u7406\u5927\u91cf\u590d\u6742\u7684\u8fde\u63a5\u3002\u4e0d\u9700\u8981\u710a\u63a5\u5de5\u5177\uff0c\u9762\u5305\u677f\u548c\u8df3\u7ebf\u3002\u60a8\u53ea\u9700\u5c06\u53d8\u6362\u5668\u63d2\u5165\u5e26\u6709 base shield \u6269\u5c55\u677f\u548c Grove \u7ebf\u7f06\u7684\u5f00\u53d1\u677f\u5373\u53ef\u3002Grove \u7cfb\u7edf\u5927\u5927\u52a0\u901f\u60a8\u7684\u9879\u76ee\u5f00\u53d1\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u65b0\u624b\u66f4\u662f\u5982\u6b64\u3002\n\n\n\n\nNote\n\n\n\u8fd9\u91cc\u6240\u6709\u5185\u5bb9\u4e5f\u9002\u7528\u4e8e Genuino 101\u3002\n\n\n\n\n\n\n\u7248\u672c\u65e5\u5fd7\n\n\n\n\n\n\n\u4ea7\u54c1\u7248\u672c \n\n\n \u53d1\u5e03\u65e5\u671f\n\n\n \u652f\u6301\u72b6\u6001 \n\n\n \u5907\u6ce8\n\n\n\n\n\n Grove Starter kit for Arduino 101(v1.0 current version) \n\n\n 2016\u5e744\u6708\u200e \n\n\n \u652f\u6301 \n\n\n \u65e0\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\nGrove \u63a5\u53e3\u8282\u7701\u65f6\u95f4\uff0c\u540c\u65f6\u51cf\u4f4e\u5bf9\u4e8e\u65b0\u624b\u7684\u56f0\u96be\n\n\n\n\n\n\n\u6240\u6709\u7684\u529f\u80fd\u6a21\u5757\u662f\u5b66\u4e60\u7684\u57fa\u7840\u548c\u5173\u952e\u3002\n\n\n\n\n\n\n\u53bb\u9664\u5197\u6742\u800c\u6210\u4e00\u5957\u5957\u4ef6\n\n\n\n\n\n\n\u6709\u8da3\u7684\u6f14\u793a\n\n\n\n\n\n\nPlatform supported\n\n\n\n\n\n\nPlatform\n\n\n Seeeduino/Arduino \n\n\n Rasberry Pi \n\n\n LinkIt One \n\n\n Beaglebone \n\n\n LinkIt ONE\n\n\n\n\n\n Supported status\n\n\n Supported, except for Base Shield which only applies to Arduino/Seeeduino platform.\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\u672c\u8282\u5217\u51fa\u4e86\u6b64\u5957\u4ef6\u4e2d\u7684\u4e3b\u8981\u90e8\u5206\uff0c\u548c\u83b7\u53d6\u6bcf\u4e2a\u529f\u80fd\u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u7684\u94fe\u63a5\u3002\n\n\n\n\n\u96f6\u4ef6\u6e05\u5355\n\n\n\n\n\n\n\u96f6\u4ef6\u540d\u79f0   \n\n\n \u6570\u91cf\n\n\n \u94fe\u63a5\n\n\n\n\n\n Grove - Rotary Angle Sensor(P)  \n\n\n 1 \u4ef6 \n\n\n [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Rotary_Angle_Sensor/)\n\n\n\n\n\n Grove \u2013 Button\n\n\n1 \u4ef6 \n\n\n [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Button/\n)\n\n\n\n\n\nGrove - Touch Sensor \n\n\n1 \u4ef6\n\n\n [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Touch_Sensor/)\n\n\n\n\n\nGrove LEDs\n\n\n1 \u4ef6\n\n\n[\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://www.seeedstudio.com/wiki/Grove_-_LED)\n\n\n\n\n\nGrove - Buzzer\n\n\n1 \u4ef6\n\n\n[\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Buzzer/)\n\n\n\n\n\nGrove - Sound Sensor\n\n\n1 \u4ef6\n\n\n[\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Sound_Sensor/)\n\n\n\n\n\nGrove - Light Sensor\n\n\n1 \u4ef6\n\n\n[\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Light_Sensor/)\n\n\n\n\n\nGrove - Temperature Sensor\n\n\n1 \u4ef6\n\n\n[\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Temperature_Sensor/)\n\n\n\n\n\nGrove - Relay\n\n\n1 \u4ef6\n\n\n[\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Relay/)\n\n\n\n\n\nGrove - Servo\n\n\n1 \u4ef6\n\n\n[\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Servo/)\n\n\n\n\n\nGrove - LCD RGB Backlight\n\n\n1 \u4ef6\n\n\n[\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-LCD_RGB_Backlight/)\n\n\n\n\n\nBase Shield V2.0\n\n\n1 \u4ef6\n\n\n[\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Base_Shield_V2/)\n\n\n\n\n\nUser Manual (printed copy) \n\n\n 1 \u4ef6\n\n\n [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](https://github.com/SeeedDocument/Grove_Starter_kit_for_Arduino_101/raw/master/res/Grove_Starter_Kit_arduino_101_manual-printed_version-s.pdf)\n\n\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\nArduino \u57fa\u7840\n\n\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u63a5\u89e6 Arduino\uff0c\u60a8\u9700\u8981\u4e86\u89e3\u4e00\u4e9b\u57fa\u672c\u77e5\u8bc6\u3002\u6211\u4eec\u4e3a\u4f60\u51c6\u5907\u4e86\u4e00\u4e9b\u6587\u4ef6\u8ba9\u60a8\u80fd\u591f\u5feb\u901f\u5165\u95e8\u3002\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\nArduino \u793a\u4f8b\n\n\n\u5728 LED \u95ea\u70c1\u540e (\u5bf9\u4e8e Windows \u7528\u6237\uff0c\u60a8\u53ef\u4ee5\u5728 \n\u8fd9\u91cc\n \u627e\u5230\u5b83\uff0c\u5bf9\u4e8e Mac OS \u548c Linux \u7528\u6237\uff0c\u60a8\u53ef\u4ee5\u5728 \n\u8fd9\u91cc\n \u627e\u5230\u5b83)\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u719f\u6089 Seeedstudio Grove \u7cfb\u7edf\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002 \u73b0\u5728\u60a8\u53ef\u4ee5\u505a\u4e00\u4e9b\u66f4\u5b9e\u7528\u7684\u5b9e\u9a8c\uff0c\u5b83\u4eec\u662f\u4e13\u95e8\u4e3a\u8fd9\u4e2a\u5957\u4ef6\u8bbe\u8ba1\u7684\u3002 \u5728 \n\u8fd9\u91cc\n \u4e0b\u8f7d\u3002", 
            "title": "Grove Starter kit for Arduino 101"
        }, 
        {
            "location": "/Grove_Starter_kit_for_Arduino_101/#_1", 
            "text": "\u4ea7\u54c1\u7248\u672c    \u53d1\u5e03\u65e5\u671f   \u652f\u6301\u72b6\u6001    \u5907\u6ce8    Grove Starter kit for Arduino 101(v1.0 current version)    2016\u5e744\u6708\u200e    \u652f\u6301    \u65e0", 
            "title": "\u7248\u672c\u65e5\u5fd7"
        }, 
        {
            "location": "/Grove_Starter_kit_for_Arduino_101/#_2", 
            "text": "Grove \u63a5\u53e3\u8282\u7701\u65f6\u95f4\uff0c\u540c\u65f6\u51cf\u4f4e\u5bf9\u4e8e\u65b0\u624b\u7684\u56f0\u96be    \u6240\u6709\u7684\u529f\u80fd\u6a21\u5757\u662f\u5b66\u4e60\u7684\u57fa\u7840\u548c\u5173\u952e\u3002    \u53bb\u9664\u5197\u6742\u800c\u6210\u4e00\u5957\u5957\u4ef6    \u6709\u8da3\u7684\u6f14\u793a", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove_Starter_kit_for_Arduino_101/#platform-supported", 
            "text": "Platform   Seeeduino/Arduino    Rasberry Pi    LinkIt One    Beaglebone    LinkIt ONE    Supported status   Supported, except for Base Shield which only applies to Arduino/Seeeduino platform.", 
            "title": "Platform supported"
        }, 
        {
            "location": "/Grove_Starter_kit_for_Arduino_101/#_3", 
            "text": "\u672c\u8282\u5217\u51fa\u4e86\u6b64\u5957\u4ef6\u4e2d\u7684\u4e3b\u8981\u90e8\u5206\uff0c\u548c\u83b7\u53d6\u6bcf\u4e2a\u529f\u80fd\u6a21\u5757\u7684\u66f4\u591a\u4fe1\u606f\u7684\u94fe\u63a5\u3002", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove_Starter_kit_for_Arduino_101/#_4", 
            "text": "\u96f6\u4ef6\u540d\u79f0      \u6570\u91cf   \u94fe\u63a5    Grove - Rotary Angle Sensor(P)     1 \u4ef6    [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Rotary_Angle_Sensor/)    Grove \u2013 Button  1 \u4ef6    [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Button/\n)   Grove - Touch Sensor   1 \u4ef6   [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Touch_Sensor/)   Grove LEDs  1 \u4ef6  [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://www.seeedstudio.com/wiki/Grove_-_LED)   Grove - Buzzer  1 \u4ef6  [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Buzzer/)   Grove - Sound Sensor  1 \u4ef6  [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Sound_Sensor/)   Grove - Light Sensor  1 \u4ef6  [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Light_Sensor/)   Grove - Temperature Sensor  1 \u4ef6  [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Temperature_Sensor/)   Grove - Relay  1 \u4ef6  [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Relay/)   Grove - Servo  1 \u4ef6  [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-Servo/)   Grove - LCD RGB Backlight  1 \u4ef6  [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Grove-LCD_RGB_Backlight/)   Base Shield V2.0  1 \u4ef6  [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](http://seeed.wiki/Base_Shield_V2/)   User Manual (printed copy)    1 \u4ef6   [\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u4fe1\u606f](https://github.com/SeeedDocument/Grove_Starter_kit_for_Arduino_101/raw/master/res/Grove_Starter_Kit_arduino_101_manual-printed_version-s.pdf)", 
            "title": "\u96f6\u4ef6\u6e05\u5355"
        }, 
        {
            "location": "/Grove_Starter_kit_for_Arduino_101/#_5", 
            "text": "", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove_Starter_kit_for_Arduino_101/#arduino", 
            "text": "\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u63a5\u89e6 Arduino\uff0c\u60a8\u9700\u8981\u4e86\u89e3\u4e00\u4e9b\u57fa\u672c\u77e5\u8bc6\u3002\u6211\u4eec\u4e3a\u4f60\u51c6\u5907\u4e86\u4e00\u4e9b\u6587\u4ef6\u8ba9\u60a8\u80fd\u591f\u5feb\u901f\u5165\u95e8\u3002\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "Arduino \u57fa\u7840"
        }, 
        {
            "location": "/Grove_Starter_kit_for_Arduino_101/#arduino_1", 
            "text": "\u5728 LED \u95ea\u70c1\u540e (\u5bf9\u4e8e Windows \u7528\u6237\uff0c\u60a8\u53ef\u4ee5\u5728  \u8fd9\u91cc  \u627e\u5230\u5b83\uff0c\u5bf9\u4e8e Mac OS \u548c Linux \u7528\u6237\uff0c\u60a8\u53ef\u4ee5\u5728  \u8fd9\u91cc  \u627e\u5230\u5b83)\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u719f\u6089 Seeedstudio Grove \u7cfb\u7edf\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002 \u73b0\u5728\u60a8\u53ef\u4ee5\u505a\u4e00\u4e9b\u66f4\u5b9e\u7528\u7684\u5b9e\u9a8c\uff0c\u5b83\u4eec\u662f\u4e13\u95e8\u4e3a\u8fd9\u4e2a\u5957\u4ef6\u8bbe\u8ba1\u7684\u3002 \u5728  \u8fd9\u91cc  \u4e0b\u8f7d\u3002", 
            "title": "Arduino \u793a\u4f8b"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/", 
            "text": "\u7528\u4e8e BeagleBone Green \u7684 Grove Starter Kit \u662f\u521d\u5b66\u8005\u7684\u5165\u95e8\u5957\u4ef6\uff0c\u53ef\u5e2e\u52a9\u60a8\u63a2\u7d22 BBG \u5e76\u521b\u5efa\u521b\u65b0\u9879\u76ee\u3002\u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u8fd9\u662f\u7528\u4e8e\u5f00\u53d1\u4e00\u4e9b\u5f88\u9177\u7684\u9879\u76ee\u5e76\u5efa\u7acb BBG \u7684\u539f\u578b\u7684\u6700\u597d\u7684\u9009\u62e9\u3002\u8fd9\u91cc\u662f\u6211\u4eec\u5e94\u7528\u6210\u719f\u7684 BeagleBone Green \u7684\u4e00\u7cfb\u5217\u4f20\u611f\u5668\uff0c\u6267\u884c\u5668\u548c\u6269\u5c55\u677f\u3002\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\u5982\u679c\u4f60\u60f3\u7528 Beaglebone Green \u548c Groves \u6a21\u5757\u5236\u4f5c\u4e00\u4e9b\u5f88\u68d2\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u53ef\u4f9b\u53c2\u8003\u3002\n\n\n\n\n\n\n\n\nSmart Light Demo with BBG \n BBG Start Kit(HA)\n\n\nAn IoT Application with BBG \n BBG Start Kit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake it NOW!\n\n\nMake it NOW!\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\nGrove - I2C Hub\n\n\n\n\nI2C Hub Grove \u662f\u4e00\u4e2a Grove \u6269\u5c55\u6a21\u5757\uff0c\u7528\u4e8e\u5c06\u591a\u4e2a I2C \u5668\u4ef6\u8fde\u63a5\u5230 Grove I2C \u63d2\u5ea7\u3002\n\n\n\u5b83\u53ef\u4ee5\u4f7f\u7528\u901a\u7528 4 \u7ebf 1 \u5206 2 \u8fde\u63a5\u7ebf\uff0c\u6700\u591a\u53ef\u8fde\u63a5 7 \u4e2a I2C \u5668\u4ef6\uff0c\u53ef\u4ee5\u8986\u76d6\u5927\u90e8\u5206\u7684\u5f00\u53d1\u7528\u9014\u3002\n\n\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\nGrove - Button\n\n\n\n\n\u8fd9\u4e2a\u65b0\u7248\u672c\u7684 Grove \u6309\u94ae\u5305\u542b\u4e00\u4e2a\u72ec\u7acb\u7684\u6309\u94ae\uff0c\u914d\u7f6e\u4e86\u4e0b\u62c9\u7535\u963b\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u6211\u4eec\u5fae\u63a7\u5236\u5668\u7684\u6570\u5b57\u8f93\u5165\u3002\u8be5\u6309\u94ae\u4f7f\u7528 \nSIG\uff08D1\uff09\n \u5bfc\u7ebf\u4f20\u8f93\u4fe1\u53f7\uff0c\u4e0d\u4f7f\u7528 NC\uff08D2\uff09\u3002\n\n\n\u539f\u7406\u56fe\n\n\n\n\nGrove - I2C ADC\n\n\n\n\nGrove - I2C ADC \u662f\u4e00\u4e2a\u57fa\u4e8e ADC121C021 \u7684 12 \u4f4d\u7cbe\u5ea6\u7684\u6a21\u6570\u8f6c\u6362\u5668\u6a21\u5757\u3002\n\n\n\u7ed9\u6a21\u5757\u63d0\u4f9b\u6052\u5b9a\u7684\u53c2\u8003\u7535\u538b\uff0c\u53ef\u4ee5\u63d0\u9ad8\u4ece\u6a21\u62df\u4f20\u611f\u5668\u6536\u96c6\u7684\u6570\u636e\u7684\u51c6\u786e\u6027\u3002\n\n\n\u7531\u4e8e\u5b83\u7684\u5730\u5740\u662f\u53ef\u53d8\u7684\uff0c\u6700\u591a\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u591a\u8fbe 9 \u4e2a I2C ADC\u3002\n\n\n\u53e6\u4e00\u65b9\u9762\uff0c\u8be5\u6a21\u5757\u63d0\u4f9b\u81ea\u52a8\u7761\u7720\u529f\u80fd\uff0c\u53ef\u4ee5\u5927\u5927\u964d\u4f4e\u529f\u8017\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\nGrove - Temperature Sensor\n\n\n\n\nThe Grove - Temperature Sensor \u4f7f\u7528\u70ed\u654f\u7535\u963b\u6765\u68c0\u6d4b\u73af\u5883\u6e29\u5ea6\u3002\n\n\n\u5f53\u73af\u5883\u6e29\u5ea6\u964d\u4f4e\u65f6\uff0c\u70ed\u654f\u7535\u963b\u7684\u7535\u963b\u503c\u4f1a\u589e\u52a0\u3002\n\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\u6765\u8ba1\u7b97\u73af\u5883\u6e29\u5ea6\u3002\n\n\n\u4f20\u611f\u5668\u7684\u6e29\u5ea6\u68c0\u6d4b\u8303\u56f4\u662f -40 - 125\u00baC\uff0c\u7cbe\u5ea6 \u00b11.5\u00baC.\n\n\n\u4f60\u9700\u8981\u628a\u5b83\u63d2\u5165 Grove - I2C ADC \nJ2\n \u7aef\u53e3\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\nGrove - Sound Sensor\n\n\n\n\nGrove - Sound Sensor \u53ef\u4ee5\u6d4b\u91cf\u73af\u5883\u7684\u58f0\u97f3\u5f3a\u5ea6\u3002\n\n\n\u8be5\u6a21\u5757\u7684\u4e3b\u8981\u7ec4\u4ef6\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9ea6\u514b\u98ce\u3002\u6a21\u5757\u542b\u6709\u4e00\u4e2a LM358 \u653e\u5927\u5668\u548c\u4e00\u4e2a\u9a7b\u6781\u4f53\u9ea6\u514b\u98ce\u3002\n\n\n\u8be5\u6a21\u5757\u7684\u8f93\u51fa\u662f\u6a21\u62df\u7684\uff0c\u60a8\u9700\u8981\u5c06\u5176\u63d2\u5165 Grove - I2C ADC \nJ2\n \u7aef\u53e3\u3002\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\nGrove - 3-Axis Digital Accelerometer(\u00b116g)\n\n\n\n\n\u8fd9\u662f\u4e00\u6b3e\u9ad8\u5206\u8fa8\u7387\u6570\u5b57\u52a0\u901f\u5ea6\u8ba1\uff0c\u6709\u7740 3.9mg / LSB \u7684\u5206\u8fa8\u7387\u548c \u00b116g \u7684\u6d4b\u91cf\u8303\u56f4\u3002\n\n\n\u5b83\u57fa\u4e8e\u5148\u8fdb\u7684 3 \u8f74 IC ADXL345\u3002\u60a8\u53ef\u4ee5\u5c06\u5b83\u7528\u5728\u81ea\u7531\u843d\u4f53\u68c0\u6d4b\u9879\u76ee\u800c\u4e0d\u5fc5\u62c5\u5fc3\u635f\u574f\u4f20\u611f\u5668\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u627f\u53d7\u9ad8\u8fbe 10,000g \u7684\u9707\u52a8\u3002\n\n\n\u5b83\u7684\u4f20\u611f\u5668\u975e\u5e38\u7075\u654f\uff0c\u53ef\u4ee5\u5728\u624b\u52bf\u68c0\u6d4b\u4e2d\u5206\u8fa8\u51fa\u5355\u51fb\u548c\u53cc\u51fb\uff0c\u662f\u8fd0\u52a8\u68c0\u6d4b\uff0c\u624b\u52bf\u68c0\u6d4b\u4ee5\u53ca\u673a\u5668\u4eba\u7684\u7406\u60f3\u9009\u62e9\u3002\n\n\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\nGrove - Relay\n\n\n\n\nRelay Grove \u6a21\u5757\u662f\u4e00\u4e2a\u6570\u5b57\u5e38\u5f00\u5f00\u5173\uff0c\u5b83\u63a7\u5236\u4e00\u4e2a\u7ee7\u7535\u5668\uff0c\u53ef\u4ee5\u5f00\u5173\u6bd4 BBG \u7535\u8def\u677f\u66f4\u9ad8\u7684\u7535\u538b\u548c\u7535\u6d41\u3002\n\n\n\u5f53\u8f93\u5165\u9ad8\u7535\u5e73\u65f6 LED \u4f1a\u70b9\u4eae\uff0c\u7ee7\u7535\u5668\u95ed\u5408\uff0c\u5141\u8bb8\u7535\u6d41\u901a\u8fc7\u3002\n\n\n\u5b83\u7684\u6700\u5927\u5141\u8bb8\u901a\u8fc7\u80fd\u529b\u4e3a\uff1a250V\uff0c10A\u3002\n\n\n\u5f53\u8bbe\u7f6e\u4e3a\u9ad8\u65f6\uff0cLED \u5c06\u70b9\u4eae\uff0c\u7ee7\u7535\u5668\u5c06\u5173\u95ed\uff0c\u5141\u8bb8\u7535\u6d41\u901a\u8fc7\u3002\n\n\n\u5728 10 \u5b89\u57f9\u65f6\u5cf0\u503c\u7535\u538b\u627f\u53d7\u80fd\u529b\u662f 250V\u3002\n\n\n\n\nCaution\n\n\u64cd\u4f5c\u8d85\u8fc7 36V \u7535\u538b\u65f6\u8bf7\u52a1\u5fc5\u5c0f\u5fc3\uff0c\u5982\u6709\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb\u4e13\u4e1a\u4eba\u5458\uff0c\u5e76\u5411\u6709\u6267\u7167\u7684\u7535\u5de5\u5bfb\u6c42\u5e2e\u52a9\u3002\n\n\n\n\nRelay \u539f\u7406\u56fe\n\n\n\n\nGrove - Buzzer\n\n\n\n\n\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\u7684 Grove \u6a21\u5757\u3002\n\n\n\u8fd9\u4e2a\u8702\u9e23\u5668\u53ef\u4ee5\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3\uff0c\u5f53\u7aef\u53e3\u8f93\u51fa\u9ad8\u7535\u5e73\u65f6\u8702\u9e23\u5668\u53d1\u51fa\u58f0\u97f3\u3002\n\n\n\u6216\u8005\u53ef\u4ee5\u628a\u5b83\u8fde\u63a5\u5230\u6a21\u62df\u8109\u5bbd\u8c03\u5236\u7aef\u53e3\u6765\u8f93\u51fa\u5404\u79cd\u97f3\u8c03\u548c\u6548\u679c\u3002\n\n\nGrove Buzzer \u539f\u7406\u56fe\n\n\n\n\nGrove - Chainable RGB LED\n\n\n\n\nChainable RGB LED \u57fa\u4e8e P9813 \u82af\u7247\u7684\uff0c\u5b83\u662f\u5168\u5f69 LED \u706f\u7684\u9a71\u52a8\u5668\u3002 \u5b83\u63d0\u4f9b 3 \u4e2a\u6052\u6d41\u7684\u9a71\u52a8\u5668\u4ee5\u53ca 256 \u7070\u5ea6\u8c03\u5236\u7684\u8f93\u51fa\u4fe1\u53f7\u3002\n\n\n\u91c7\u7528\u6709\u7ebf\u4f20\u8f93\uff08DATA\u548cCLK\uff09\uff0c\u5185\u7f6e\u7684\u65f6\u949f\u4f20\u8f93\u80fd\u591f\u589e\u5927\u4f20\u8f93\u8ddd\u79bb\u3002\n\n\n\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\nGrove - OLED Display 0.96\"\n\n\n\n\n\u5b83\u662f\u4e00\u4e2a 16 \u4f4d\u5f69\u8272\u7070\u5ea6 96\u00d796 \u70b9\u9635 OLED \u663e\u793a\u6a21\u5757\uff0c\u517c\u5bb9 Grove \u7684 4pin I2C \u63a5\u53e3\u3002\n\n\nGrove - OLED 96 x 96 \u91c7\u7528 96 x 96 \u70b9\u9635 OLED \u6a21\u5757 LY120 \u548c SSD1327 \u9a71\u52a8\u5668 IC \u6784\u5efa\u800c\u6210\u3002\n\n\n\u4e0e LCD \u76f8\u6bd4\uff0cOLED \u5c4f\u5e55\u66f4\u5177\u7ade\u4e89\u529b\uff0c\u5177\u6709\u9ad8\u4eae\u5ea6\uff0c\u81ea\u53d1\u5149\uff0c\u9ad8\u5bf9\u6bd4\u5ea6\uff0c\u7a84\u8f6e\u5ed3\uff0c\u5bbd\u89c6\u89d2\uff0c\u5bbd\u6e29\u5ea6\u8303\u56f4\uff0c\u4f4e\u529f\u8017\u7b49\u8bf8\u591a\u4f18\u70b9\u3002\n\n\n\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u3002\n\n\n\n\nTip\n\n\n\u4e86\u89e3\u66f4\u591a Grove \u6a21\u5757\uff0c\u8bf7\u53c2\u8003 \nGrove \u7cfb\u7edf\n\n\n\n\n\u793a\u4f8b\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528 Cloud9 IDE \u6765\u521b\u5efa BeagleBone \u7684\u7a0b\u5e8f\u3002\u4e0b\u9762\u7684\u4f8b\u7a0b\u4f1a\u70b9\u4eae BeagleBone \u4e0a\u7684 4 \u4e2a\u7528\u6237\u81ea\u5b9a\u4e49 LED\u3002\n\n\n\u5982\u679c\u4f60\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528 Cloud9 IDE, \u8bf7\u67e5\u9605 \n\u8fd9\u91cc\n.\n\n\n\u5982\u4f55\u5728 BBG \u4e0a\u4f7f\u7528 Grove - Button\n\n\n\n\n\u7b2c\u4e00\u6b65\uff1a\n \u5c06 Grove - UART \u63a5\u53e3\u8bbe\u7f6e\u4e3a Grove - GPIO \u63a5\u53e3\uff0c\u8bf7\u6d4f\u89c8\u6b64 \n\u94fe\u63a5\n\u3002\n\n\n\u7b2c\u4e8c\u6b65\uff1a\n \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u201c+\u201d \u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\n\n\n\n\n\n\n\u7b2c\u4e09\u6b65\uff1a\n \u590d\u5236\u4e0b\u9762\u7684\u4ee3\u7801\u5e76\u7c98\u8d34\u5230\u65b0\u7a97\u53e3\u4e2d\u3002\n\n\nimport time\nimport Adafruit_BBIO.GPIO as GPIO\n\u00a0\n# Note: Use P9_22(UART2_RXD) as GPIO.\n# Connect the Grove Button to UART Grove port of Beaglebone Green.\nButton = \nP9_22\n            # GPIO P9_22\nGPIO.setup(Button, GPIO.IN)\n\u00a0\nif __name__== \n__main__\n:\n    while True:\n        if GPIO.input(Button):\n            print \nButton is pressed.\n\n            time.sleep(1)\n        else:\n            print \nButton is unstuck.\n\n            time.sleep(1)\n\n\n\n\n\u7b2c\u56db\u6b65\uff1a\n \u4fdd\u5b58\u6587\u4ef6\u4e3a .py \u683c\u5f0f\u3002\n\n\n\u7b2c\u4e94\u6b65\uff1a\n \u8fd0\u884c\u4ee3\u7801\u3002\n\n\n\n\nNote\n\n\u5176\u4ed6 Grove \u6a21\u5757\u7684\u7528\u6cd5\u4e0e Grove Button \u7c7b\u4f3c\u3002\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u4ee3\u7801]\nGrove Starter kit for BBG Sample Code", 
            "title": "Grove Starter Kit for BeagleBone Green"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#_1", 
            "text": "\u5982\u679c\u4f60\u60f3\u7528 Beaglebone Green \u548c Groves \u6a21\u5757\u5236\u4f5c\u4e00\u4e9b\u5f88\u68d2\u7684\u9879\u76ee\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u9879\u76ee\u53ef\u4f9b\u53c2\u8003\u3002     Smart Light Demo with BBG   BBG Start Kit(HA)  An IoT Application with BBG   BBG Start Kit          Make it NOW!  Make it NOW!", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#_2", 
            "text": "", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-i2c-hub", 
            "text": "I2C Hub Grove \u662f\u4e00\u4e2a Grove \u6269\u5c55\u6a21\u5757\uff0c\u7528\u4e8e\u5c06\u591a\u4e2a I2C \u5668\u4ef6\u8fde\u63a5\u5230 Grove I2C \u63d2\u5ea7\u3002  \u5b83\u53ef\u4ee5\u4f7f\u7528\u901a\u7528 4 \u7ebf 1 \u5206 2 \u8fde\u63a5\u7ebf\uff0c\u6700\u591a\u53ef\u8fde\u63a5 7 \u4e2a I2C \u5668\u4ef6\uff0c\u53ef\u4ee5\u8986\u76d6\u5927\u90e8\u5206\u7684\u5f00\u53d1\u7528\u9014\u3002  \u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002", 
            "title": "Grove - I2C Hub"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-button", 
            "text": "\u8fd9\u4e2a\u65b0\u7248\u672c\u7684 Grove \u6309\u94ae\u5305\u542b\u4e00\u4e2a\u72ec\u7acb\u7684\u6309\u94ae\uff0c\u914d\u7f6e\u4e86\u4e0b\u62c9\u7535\u963b\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u6211\u4eec\u5fae\u63a7\u5236\u5668\u7684\u6570\u5b57\u8f93\u5165\u3002\u8be5\u6309\u94ae\u4f7f\u7528  SIG\uff08D1\uff09  \u5bfc\u7ebf\u4f20\u8f93\u4fe1\u53f7\uff0c\u4e0d\u4f7f\u7528 NC\uff08D2\uff09\u3002  \u539f\u7406\u56fe", 
            "title": "Grove - Button"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-i2c-adc", 
            "text": "Grove - I2C ADC \u662f\u4e00\u4e2a\u57fa\u4e8e ADC121C021 \u7684 12 \u4f4d\u7cbe\u5ea6\u7684\u6a21\u6570\u8f6c\u6362\u5668\u6a21\u5757\u3002  \u7ed9\u6a21\u5757\u63d0\u4f9b\u6052\u5b9a\u7684\u53c2\u8003\u7535\u538b\uff0c\u53ef\u4ee5\u63d0\u9ad8\u4ece\u6a21\u62df\u4f20\u611f\u5668\u6536\u96c6\u7684\u6570\u636e\u7684\u51c6\u786e\u6027\u3002  \u7531\u4e8e\u5b83\u7684\u5730\u5740\u662f\u53ef\u53d8\u7684\uff0c\u6700\u591a\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u591a\u8fbe 9 \u4e2a I2C ADC\u3002  \u53e6\u4e00\u65b9\u9762\uff0c\u8be5\u6a21\u5757\u63d0\u4f9b\u81ea\u52a8\u7761\u7720\u529f\u80fd\uff0c\u53ef\u4ee5\u5927\u5927\u964d\u4f4e\u529f\u8017\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002", 
            "title": "Grove - I2C ADC"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-temperature-sensor", 
            "text": "The Grove - Temperature Sensor \u4f7f\u7528\u70ed\u654f\u7535\u963b\u6765\u68c0\u6d4b\u73af\u5883\u6e29\u5ea6\u3002  \u5f53\u73af\u5883\u6e29\u5ea6\u964d\u4f4e\u65f6\uff0c\u70ed\u654f\u7535\u963b\u7684\u7535\u963b\u503c\u4f1a\u589e\u52a0\u3002  \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\u6765\u8ba1\u7b97\u73af\u5883\u6e29\u5ea6\u3002  \u4f20\u611f\u5668\u7684\u6e29\u5ea6\u68c0\u6d4b\u8303\u56f4\u662f -40 - 125\u00baC\uff0c\u7cbe\u5ea6 \u00b11.5\u00baC.  \u4f60\u9700\u8981\u628a\u5b83\u63d2\u5165 Grove - I2C ADC  J2  \u7aef\u53e3\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "Grove - Temperature Sensor"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-sound-sensor", 
            "text": "Grove - Sound Sensor \u53ef\u4ee5\u6d4b\u91cf\u73af\u5883\u7684\u58f0\u97f3\u5f3a\u5ea6\u3002  \u8be5\u6a21\u5757\u7684\u4e3b\u8981\u7ec4\u4ef6\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9ea6\u514b\u98ce\u3002\u6a21\u5757\u542b\u6709\u4e00\u4e2a LM358 \u653e\u5927\u5668\u548c\u4e00\u4e2a\u9a7b\u6781\u4f53\u9ea6\u514b\u98ce\u3002  \u8be5\u6a21\u5757\u7684\u8f93\u51fa\u662f\u6a21\u62df\u7684\uff0c\u60a8\u9700\u8981\u5c06\u5176\u63d2\u5165 Grove - I2C ADC  J2  \u7aef\u53e3\u3002\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "Grove - Sound Sensor"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-3-axis-digital-accelerometer16g", 
            "text": "\u8fd9\u662f\u4e00\u6b3e\u9ad8\u5206\u8fa8\u7387\u6570\u5b57\u52a0\u901f\u5ea6\u8ba1\uff0c\u6709\u7740 3.9mg / LSB \u7684\u5206\u8fa8\u7387\u548c \u00b116g \u7684\u6d4b\u91cf\u8303\u56f4\u3002  \u5b83\u57fa\u4e8e\u5148\u8fdb\u7684 3 \u8f74 IC ADXL345\u3002\u60a8\u53ef\u4ee5\u5c06\u5b83\u7528\u5728\u81ea\u7531\u843d\u4f53\u68c0\u6d4b\u9879\u76ee\u800c\u4e0d\u5fc5\u62c5\u5fc3\u635f\u574f\u4f20\u611f\u5668\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u627f\u53d7\u9ad8\u8fbe 10,000g \u7684\u9707\u52a8\u3002  \u5b83\u7684\u4f20\u611f\u5668\u975e\u5e38\u7075\u654f\uff0c\u53ef\u4ee5\u5728\u624b\u52bf\u68c0\u6d4b\u4e2d\u5206\u8fa8\u51fa\u5355\u51fb\u548c\u53cc\u51fb\uff0c\u662f\u8fd0\u52a8\u68c0\u6d4b\uff0c\u624b\u52bf\u68c0\u6d4b\u4ee5\u53ca\u673a\u5668\u4eba\u7684\u7406\u60f3\u9009\u62e9\u3002  \u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc .", 
            "title": "Grove - 3-Axis Digital Accelerometer(\u00b116g)"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-relay", 
            "text": "Relay Grove \u6a21\u5757\u662f\u4e00\u4e2a\u6570\u5b57\u5e38\u5f00\u5f00\u5173\uff0c\u5b83\u63a7\u5236\u4e00\u4e2a\u7ee7\u7535\u5668\uff0c\u53ef\u4ee5\u5f00\u5173\u6bd4 BBG \u7535\u8def\u677f\u66f4\u9ad8\u7684\u7535\u538b\u548c\u7535\u6d41\u3002  \u5f53\u8f93\u5165\u9ad8\u7535\u5e73\u65f6 LED \u4f1a\u70b9\u4eae\uff0c\u7ee7\u7535\u5668\u95ed\u5408\uff0c\u5141\u8bb8\u7535\u6d41\u901a\u8fc7\u3002  \u5b83\u7684\u6700\u5927\u5141\u8bb8\u901a\u8fc7\u80fd\u529b\u4e3a\uff1a250V\uff0c10A\u3002  \u5f53\u8bbe\u7f6e\u4e3a\u9ad8\u65f6\uff0cLED \u5c06\u70b9\u4eae\uff0c\u7ee7\u7535\u5668\u5c06\u5173\u95ed\uff0c\u5141\u8bb8\u7535\u6d41\u901a\u8fc7\u3002  \u5728 10 \u5b89\u57f9\u65f6\u5cf0\u503c\u7535\u538b\u627f\u53d7\u80fd\u529b\u662f 250V\u3002   Caution \n\u64cd\u4f5c\u8d85\u8fc7 36V \u7535\u538b\u65f6\u8bf7\u52a1\u5fc5\u5c0f\u5fc3\uff0c\u5982\u6709\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb\u4e13\u4e1a\u4eba\u5458\uff0c\u5e76\u5411\u6709\u6267\u7167\u7684\u7535\u5de5\u5bfb\u6c42\u5e2e\u52a9\u3002  Relay \u539f\u7406\u56fe", 
            "title": "Grove - Relay"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-buzzer", 
            "text": "\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\u7684 Grove \u6a21\u5757\u3002  \u8fd9\u4e2a\u8702\u9e23\u5668\u53ef\u4ee5\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3\uff0c\u5f53\u7aef\u53e3\u8f93\u51fa\u9ad8\u7535\u5e73\u65f6\u8702\u9e23\u5668\u53d1\u51fa\u58f0\u97f3\u3002  \u6216\u8005\u53ef\u4ee5\u628a\u5b83\u8fde\u63a5\u5230\u6a21\u62df\u8109\u5bbd\u8c03\u5236\u7aef\u53e3\u6765\u8f93\u51fa\u5404\u79cd\u97f3\u8c03\u548c\u6548\u679c\u3002  Grove Buzzer \u539f\u7406\u56fe", 
            "title": "Grove - Buzzer"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-chainable-rgb-led", 
            "text": "Chainable RGB LED \u57fa\u4e8e P9813 \u82af\u7247\u7684\uff0c\u5b83\u662f\u5168\u5f69 LED \u706f\u7684\u9a71\u52a8\u5668\u3002 \u5b83\u63d0\u4f9b 3 \u4e2a\u6052\u6d41\u7684\u9a71\u52a8\u5668\u4ee5\u53ca 256 \u7070\u5ea6\u8c03\u5236\u7684\u8f93\u51fa\u4fe1\u53f7\u3002  \u91c7\u7528\u6709\u7ebf\u4f20\u8f93\uff08DATA\u548cCLK\uff09\uff0c\u5185\u7f6e\u7684\u65f6\u949f\u4f20\u8f93\u80fd\u591f\u589e\u5927\u4f20\u8f93\u8ddd\u79bb\u3002  \u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002", 
            "title": "Grove - Chainable RGB LED"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#grove-oled-display-096", 
            "text": "\u5b83\u662f\u4e00\u4e2a 16 \u4f4d\u5f69\u8272\u7070\u5ea6 96\u00d796 \u70b9\u9635 OLED \u663e\u793a\u6a21\u5757\uff0c\u517c\u5bb9 Grove \u7684 4pin I2C \u63a5\u53e3\u3002  Grove - OLED 96 x 96 \u91c7\u7528 96 x 96 \u70b9\u9635 OLED \u6a21\u5757 LY120 \u548c SSD1327 \u9a71\u52a8\u5668 IC \u6784\u5efa\u800c\u6210\u3002  \u4e0e LCD \u76f8\u6bd4\uff0cOLED \u5c4f\u5e55\u66f4\u5177\u7ade\u4e89\u529b\uff0c\u5177\u6709\u9ad8\u4eae\u5ea6\uff0c\u81ea\u53d1\u5149\uff0c\u9ad8\u5bf9\u6bd4\u5ea6\uff0c\u7a84\u8f6e\u5ed3\uff0c\u5bbd\u89c6\u89d2\uff0c\u5bbd\u6e29\u5ea6\u8303\u56f4\uff0c\u4f4e\u529f\u8017\u7b49\u8bf8\u591a\u4f18\u70b9\u3002  \u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u3002   Tip  \u4e86\u89e3\u66f4\u591a Grove \u6a21\u5757\uff0c\u8bf7\u53c2\u8003  Grove \u7cfb\u7edf", 
            "title": "Grove - OLED Display 0.96\""
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#_3", 
            "text": "\u60a8\u53ef\u4ee5\u4f7f\u7528 Cloud9 IDE \u6765\u521b\u5efa BeagleBone \u7684\u7a0b\u5e8f\u3002\u4e0b\u9762\u7684\u4f8b\u7a0b\u4f1a\u70b9\u4eae BeagleBone \u4e0a\u7684 4 \u4e2a\u7528\u6237\u81ea\u5b9a\u4e49 LED\u3002  \u5982\u679c\u4f60\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528 Cloud9 IDE, \u8bf7\u67e5\u9605  \u8fd9\u91cc .", 
            "title": "\u793a\u4f8b"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#bbg-grove-button", 
            "text": "\u7b2c\u4e00\u6b65\uff1a  \u5c06 Grove - UART \u63a5\u53e3\u8bbe\u7f6e\u4e3a Grove - GPIO \u63a5\u53e3\uff0c\u8bf7\u6d4f\u89c8\u6b64  \u94fe\u63a5 \u3002  \u7b2c\u4e8c\u6b65\uff1a  \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u201c+\u201d \u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002    \u7b2c\u4e09\u6b65\uff1a  \u590d\u5236\u4e0b\u9762\u7684\u4ee3\u7801\u5e76\u7c98\u8d34\u5230\u65b0\u7a97\u53e3\u4e2d\u3002  import time\nimport Adafruit_BBIO.GPIO as GPIO\n\u00a0\n# Note: Use P9_22(UART2_RXD) as GPIO.\n# Connect the Grove Button to UART Grove port of Beaglebone Green.\nButton =  P9_22             # GPIO P9_22\nGPIO.setup(Button, GPIO.IN)\n\u00a0\nif __name__==  __main__ :\n    while True:\n        if GPIO.input(Button):\n            print  Button is pressed. \n            time.sleep(1)\n        else:\n            print  Button is unstuck. \n            time.sleep(1)  \u7b2c\u56db\u6b65\uff1a  \u4fdd\u5b58\u6587\u4ef6\u4e3a .py \u683c\u5f0f\u3002  \u7b2c\u4e94\u6b65\uff1a  \u8fd0\u884c\u4ee3\u7801\u3002   Note \n\u5176\u4ed6 Grove \u6a21\u5757\u7684\u7528\u6cd5\u4e0e Grove Button \u7c7b\u4f3c\u3002", 
            "title": "\u5982\u4f55\u5728 BBG \u4e0a\u4f7f\u7528 Grove - Button"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_BeagleBone_Green/#_4", 
            "text": "[\u4ee3\u7801] Grove Starter kit for BBG Sample Code", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-Maker_Kit_for_Intel_Joule/", 
            "text": "\u51e0\u5468\u524d\uff0c\u6211\u4eec\u53d1\u5e03\u4e86\u4e3a Intel Joule \u5b9a\u5236\u7684 Grove Shield\u3002\u8fd9\u6b21\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u6b3e\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5957\u4ef6\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u60a8\u8f7b\u677e\u5feb\u901f\u5730\u5f00\u59cb\u4f7f\u7528 Intel Joule\uff0c\u8fd9\u662f\u4e00\u6b3e\u4e3a Intel Joule \u5b9a\u5236\u7684 Grove \u521b\u5ba2\u5957\u4ef6\u3002\n\n\nJoule \u662f Intel \u5728 2016 \u5e74\u53d1\u5e03\u7684\u7269\u8054\u7f51\u9879\u76ee\u4e2d\u6700\u4ee4\u4eba\u60ca\u559c\u7684\u677f\u5757\u3002\u5176\u51ed\u501f\u5d4c\u5165\u5f0f Linux \u7cfb\u7edf\u548c\u4e30\u5bcc\u7684\u786c\u4ef6\uff0cIntel Joule \u5fc5\u5c06\u6210\u4e3a\u7814\u53d1\u4eba\u5458\u6539\u8fdb\u5176\u9879\u76ee\uff0c\u5e76\u5c06\u539f\u578b\u53d1\u5e03\u5230\u5e02\u573a\u7684\u6700\u4f73\u9009\u62e9\u3002\n\n\n\u4e3a Intel Joule \u5b9a\u5236\u7684 Grove \u521b\u5ba2\u5957\u4ef6\u662f\u4e00\u6b3e\u57fa\u4e8e Joule \u7684\u5feb\u901f\u5efa\u9020\u539f\u578b\u7684\u6700\u4f73\u5957\u4ef6\u3002\u8be5\u5957\u4ef6\u5305\u542b\u4e00\u4e2a\u7528\u4e8e Joule \u7684 Grove bash shield\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u6211\u4eec\u4e13\u95e8\u4e3a Joule \u9009\u62e9\u914d\u7f6e\u7684 13 \u4e2a Grove \u6a21\u5757\u3002\u5982\u679c\u60a8\u6709 Intel Joule\uff0c\u5e76\u8ba1\u5212\u6784\u5efa\u4e00\u4e2a\u5feb\u901f\u539f\u578b\uff0c\u8bf7\u4e0d\u8981\u72b9\u8c6b\uff0c\u9009\u62e9\u8fd9\u6b3e\u4e3a Intel Joule \u5b9a\u5236\u7684 Grove \u521b\u5ba2\u5957\u4ef6\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\u90e8\u5206\u4ecb\u7ecd\n\n\nGrove Shield for Intel Joule\n\n\n\n\nGrove Shield for Intel Joule \u662f\u5c06 Intel Joule \u6865\u63a5\u5230 Grove \u6a21\u5757\u7cfb\u5217\u7684\u5173\u952e\u3002 \u901a\u8fc7\u7b80\u5355\u5730\u5c06\u5176\u63d2\u5165\u5230 Joule board \u4e0a\uff0c\u5b83\u5c06\u62e5\u6709 8 \u4e2a\u575a\u56fa\u6613\u7528\u7684 Grove \u8fde\u63a5\u5668\uff0c\u5176\u4e2d\u5305\u62ec\u63a5\u53e3\uff0c\u5982 I2C\uff0cUART\uff0cdigital I/Os \u548c \u6a21\u62df\u8f93\u5165\u3002 \u9664\u4e86\u4e30\u5bcc\u7684 Grove \u8fde\u63a5\u5668\u5916\uff0c\u5b83\u8fd8\u4fdd\u7559\u6709 2x20 \u9488\u5934\u6765\u5e94\u5bf9\u60a8\u60f3\u8981\u66f4\u591a\u7684 GPIO \u7528\u4e8e\u9879\u76ee\u3002 \u677f\u4e0a\u7684\u96c6\u6210\u5f00\u5173\u5141\u8bb8\u60a8\u9009\u62e9 5V \u6216 3.3V \u7684\u5de5\u4f5c\u7535\u538b\u3002\n\n\nGrove \u4f20\u611f\u5668\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u56fe\u7247\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nGrove Button\n\n\n\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u77ac\u65f6\u5f00/\u5173\u6309\u94ae\u3002 \u628a\u5b83\u8fde\u63a5\u5230 Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\uff0c\u5c06\u5176\u7528\u4f5c\u63a7\u5236\u5668\u7684\u9ad8/\u4f4e\u4fe1\u53f7\u8f93\u5165\u3002\n\n\n\n\n\n\nGrove - Sound Sensor\n\n\n\n\n\u58f0\u97f3\u4f20\u611f\u5668\u7528\u4e8e\u68c0\u6d4b\u73af\u5883\u58f0\u5f3a\u3002 \u628a\u5b83\u8fde\u63a5\u5230\u6a21\u62df\u8fde\u63a5\u5668\u4ee5\u5c06\u58f0\u97f3\u7528\u4f5c\u6fc0\u52b1\u4fe1\u53f7\u3002\n\n\n\n\n\n\nGrove - Piezo Vibration Sensor\n\n\n\n\n\u5b83\u53ef\u4ee5\u6d4b\u91cf\u632f\u52a8\uff0c\u51b2\u51fb\u548c\u89e6\u611f\u3002 \u628a\u5b83\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u8fde\u63a5\u5668\uff0c\u4ee5\u5728\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\u63a5\u6536\u9ad8\u4fe1\u53f7\u3002\n\n\n\n\n\n\nGrove - Light Sensor\n\n\n\n\n\u4e0e\u4f20\u7edf\u7684\u5149\u654f\u7535\u963b \uff08LDR\uff09 \u76f8\u6bd4\uff0c\u5149\u7535\u6676\u4f53\u7ba1\u7684\u4f7f\u7528\u4e0d\u4ec5\u63d0\u9ad8\u4e86\u53ef\u9760\u6027\u548c\u7075\u654f\u5ea6\uff0c\u800c\u4e14\u589e\u52a0\u4e86\u6d4b\u91cf\u5149\u8c31\u3002 \u6a21\u5757\u8f93\u51fa\u6a21\u62df\u4fe1\u53f7\uff0c8 \u4f4d\u6a21\u62df\u6570\u5b57\u8f6c\u6362\u5668 \uff08ADC\uff09 \u5c06\u5176\u8f6c\u6362\u4e3a 0-255 \u7684\u8303\u56f4\u3002\n\n\n\n\n\n\nGrove - Temperature Sensor\n\n\n\n\n\u4f7f\u7528\u70ed\u654f\u7535\u963b\u68c0\u6d4b\u5916\u754c\u6e29\u5ea6 (\u8303\u56f4 :-40~+125\u2103)\uff0c\u5e76\u8f93\u51fa\u6a21\u62df\u4fe1\u53f7\u5c06\u5176\u8fde\u63a5\u5230\u6a21\u62df\u8fde\u63a5\u5668\u3002\n\n\n\n\n\n\nGrove - Touch Sensor\n\n\n\n\n\u5f53\u624b\u6307\u9644\u8fd1\u65f6\uff0c\u53ef\u4ee5\u68c0\u6d4b\u7535\u5bb9\u7684\u53d8\u5316\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u4f5c\u4e3a\u6309\u94ae\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u60a8\u7528\u89e6\u6478\u66ff\u6362\u6309\u94ae\u3002 \u5c06\u5176\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u8fde\u63a5\u5668\u3002\n\n\n\n\n\n\nGrove - Rotary Angle Sensor(P)\n\n\n\n\n\u5b83\u53ef\u4ee5\u5c06\u6a21\u62df\u4fe1\u53f7\uff08\u4ece 0 \u5230 300 \u5206\u5ea6\uff09\u8f6c\u6362\u4e3a 0 \u548c Vcc \u4e4b\u95f4\u7684\u7ebf\u6027\u53d8\u5316\u6a21\u62df\u8f93\u51fa\u3002 \u5c06\u5176\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u6a21\u62df\u8fde\u63a5\u5668\u3002\n\n\n\n\n\n\n\n\nGrove Actuators\n\n\n\n\n\n\n\n\n\u540d\u79f0\n\n\n\u56fe\u7247\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nGrove - LCD RGB Backlight\n\n\n\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6237\u754c\u9762\uff0c\u652f\u6301\u7528\u6237\u5b9a\u4e49\u7684\u5b57\u7b26\u548c\u5f69\u8272 RGB \u80cc\u5149\u3002 \u5c06\u5176\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield\u4e0a \u7684 I2C\uff0c\u4ee5\u663e\u793a\u6240\u9700\u7684\u4fe1\u606f\u3002\n\n\n\n\n\n\nGrove - Buzzer\n\n\n\n\n\u4e00\u4e2a\u5177\u6709 Grove \u8fde\u63a5\u5668\u7684\u7b80\u6613\u8702\u9e23\u5668\uff0c\u53ef\u8fde\u63a5\u6570\u5b57\u548c\u6a21\u62df\u8fde\u63a5\u5668\u3002 \u5f53\u8f93\u51fa\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u4f1a\u53d1\u51fa\u58f0\u8c03\u3002 \u6216\u8005\uff0c\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u6a21\u62df\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u8f93\u51fa\u4ee5\u4ea7\u751f\u5404\u79cd\u97f3\u8c03\u548c\u6548\u679c\u3002\n\n\n\n\n\n\nGrove - Red LED\n\n\n\n\n\u8fd9\u662f\u4e00\u7ec4\u7b80\u6613\u7684 LED\u3002 \u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\uff0c\u4ee5\u9ad8\u7535\u5e73\u8f93\u51fa\u6765\u70b9\u4eae\u5b83\u4eec\u3002\n\n\n\n\n\n\nGrove -Green LED\n\n\n\n\n\u8fd9\u662f\u4e00\u7ec4\u7b80\u6613\u7684 LED\u3002 \u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\uff0c\u4ee5\u9ad8\u7535\u5e73\u8f93\u51fa\u6765\u70b9\u4eae\u5b83\u4eec\u3002\n\n\n\n\n\n\nGrove - Blue LED\n\n\n\n\n\u8fd9\u662f\u4e00\u7ec4\u7b80\u6613\u7684 LED\u3002 \u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\uff0c\u4ee5\u9ad8\u7535\u5e73\u8f93\u51fa\u6765\u70b9\u4eae\u5b83\u4eec\u3002\n\n\n\n\n\n\nGear Stepper Motor with Driver\n\n\n\n\n\u5b83\u5141\u8bb8\u60a8\u901a\u8fc7\u5c06\u6b65\u8fdb\u7535\u673a\u8fde\u63a5\u5230\u9a71\u52a8\u5668\u677f\u6765\u9a71\u52a8\u6b65\u8fdb\u7535\u673a\uff0c\u5e76\u5c06\u9a71\u52a8\u5668\u8fde\u63a5\u5230\u5177\u6709 PWM \u8f93\u51fa\u7684\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\u3002 \u7136\u540e\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee3\u7801\u884c\u8f7b\u677e\u63a7\u5236\u6b65\u8fdb\u7535\u673a\u3002\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u539f\u7406\u56fePDF]\n \nGrove Shield for Intel Joule v1.0.pdf\n\n\n[Eagle\u6587\u4ef6]\n \nGrove Shield for Intel Joule_eagle.zip", 
            "title": "Grove Maker Kit for Intel Joule"
        }, 
        {
            "location": "/Grove-Maker_Kit_for_Intel_Joule/#_1", 
            "text": "", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-Maker_Kit_for_Intel_Joule/#_2", 
            "text": "", 
            "title": "\u90e8\u5206\u4ecb\u7ecd"
        }, 
        {
            "location": "/Grove-Maker_Kit_for_Intel_Joule/#grove-shield-for-intel-joule", 
            "text": "Grove Shield for Intel Joule \u662f\u5c06 Intel Joule \u6865\u63a5\u5230 Grove \u6a21\u5757\u7cfb\u5217\u7684\u5173\u952e\u3002 \u901a\u8fc7\u7b80\u5355\u5730\u5c06\u5176\u63d2\u5165\u5230 Joule board \u4e0a\uff0c\u5b83\u5c06\u62e5\u6709 8 \u4e2a\u575a\u56fa\u6613\u7528\u7684 Grove \u8fde\u63a5\u5668\uff0c\u5176\u4e2d\u5305\u62ec\u63a5\u53e3\uff0c\u5982 I2C\uff0cUART\uff0cdigital I/Os \u548c \u6a21\u62df\u8f93\u5165\u3002 \u9664\u4e86\u4e30\u5bcc\u7684 Grove \u8fde\u63a5\u5668\u5916\uff0c\u5b83\u8fd8\u4fdd\u7559\u6709 2x20 \u9488\u5934\u6765\u5e94\u5bf9\u60a8\u60f3\u8981\u66f4\u591a\u7684 GPIO \u7528\u4e8e\u9879\u76ee\u3002 \u677f\u4e0a\u7684\u96c6\u6210\u5f00\u5173\u5141\u8bb8\u60a8\u9009\u62e9 5V \u6216 3.3V \u7684\u5de5\u4f5c\u7535\u538b\u3002", 
            "title": "Grove Shield for Intel Joule"
        }, 
        {
            "location": "/Grove-Maker_Kit_for_Intel_Joule/#grove", 
            "text": "\u540d\u79f0  \u56fe\u7247  \u8bf4\u660e      Grove Button   \u4e00\u4e2a\u7b80\u5355\u7684\u77ac\u65f6\u5f00/\u5173\u6309\u94ae\u3002 \u628a\u5b83\u8fde\u63a5\u5230 Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\uff0c\u5c06\u5176\u7528\u4f5c\u63a7\u5236\u5668\u7684\u9ad8/\u4f4e\u4fe1\u53f7\u8f93\u5165\u3002    Grove - Sound Sensor   \u58f0\u97f3\u4f20\u611f\u5668\u7528\u4e8e\u68c0\u6d4b\u73af\u5883\u58f0\u5f3a\u3002 \u628a\u5b83\u8fde\u63a5\u5230\u6a21\u62df\u8fde\u63a5\u5668\u4ee5\u5c06\u58f0\u97f3\u7528\u4f5c\u6fc0\u52b1\u4fe1\u53f7\u3002    Grove - Piezo Vibration Sensor   \u5b83\u53ef\u4ee5\u6d4b\u91cf\u632f\u52a8\uff0c\u51b2\u51fb\u548c\u89e6\u611f\u3002 \u628a\u5b83\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u8fde\u63a5\u5668\uff0c\u4ee5\u5728\u68c0\u6d4b\u5230\u632f\u52a8\u65f6\u63a5\u6536\u9ad8\u4fe1\u53f7\u3002    Grove - Light Sensor   \u4e0e\u4f20\u7edf\u7684\u5149\u654f\u7535\u963b \uff08LDR\uff09 \u76f8\u6bd4\uff0c\u5149\u7535\u6676\u4f53\u7ba1\u7684\u4f7f\u7528\u4e0d\u4ec5\u63d0\u9ad8\u4e86\u53ef\u9760\u6027\u548c\u7075\u654f\u5ea6\uff0c\u800c\u4e14\u589e\u52a0\u4e86\u6d4b\u91cf\u5149\u8c31\u3002 \u6a21\u5757\u8f93\u51fa\u6a21\u62df\u4fe1\u53f7\uff0c8 \u4f4d\u6a21\u62df\u6570\u5b57\u8f6c\u6362\u5668 \uff08ADC\uff09 \u5c06\u5176\u8f6c\u6362\u4e3a 0-255 \u7684\u8303\u56f4\u3002    Grove - Temperature Sensor   \u4f7f\u7528\u70ed\u654f\u7535\u963b\u68c0\u6d4b\u5916\u754c\u6e29\u5ea6 (\u8303\u56f4 :-40~+125\u2103)\uff0c\u5e76\u8f93\u51fa\u6a21\u62df\u4fe1\u53f7\u5c06\u5176\u8fde\u63a5\u5230\u6a21\u62df\u8fde\u63a5\u5668\u3002    Grove - Touch Sensor   \u5f53\u624b\u6307\u9644\u8fd1\u65f6\uff0c\u53ef\u4ee5\u68c0\u6d4b\u7535\u5bb9\u7684\u53d8\u5316\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u4f5c\u4e3a\u6309\u94ae\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u60a8\u7528\u89e6\u6478\u66ff\u6362\u6309\u94ae\u3002 \u5c06\u5176\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u8fde\u63a5\u5668\u3002    Grove - Rotary Angle Sensor(P)   \u5b83\u53ef\u4ee5\u5c06\u6a21\u62df\u4fe1\u53f7\uff08\u4ece 0 \u5230 300 \u5206\u5ea6\uff09\u8f6c\u6362\u4e3a 0 \u548c Vcc \u4e4b\u95f4\u7684\u7ebf\u6027\u53d8\u5316\u6a21\u62df\u8f93\u51fa\u3002 \u5c06\u5176\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u6a21\u62df\u8fde\u63a5\u5668\u3002", 
            "title": "Grove \u4f20\u611f\u5668"
        }, 
        {
            "location": "/Grove-Maker_Kit_for_Intel_Joule/#grove-actuators", 
            "text": "\u540d\u79f0  \u56fe\u7247  \u8bf4\u660e      Grove - LCD RGB Backlight   \u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6237\u754c\u9762\uff0c\u652f\u6301\u7528\u6237\u5b9a\u4e49\u7684\u5b57\u7b26\u548c\u5f69\u8272 RGB \u80cc\u5149\u3002 \u5c06\u5176\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield\u4e0a \u7684 I2C\uff0c\u4ee5\u663e\u793a\u6240\u9700\u7684\u4fe1\u606f\u3002    Grove - Buzzer   \u4e00\u4e2a\u5177\u6709 Grove \u8fde\u63a5\u5668\u7684\u7b80\u6613\u8702\u9e23\u5668\uff0c\u53ef\u8fde\u63a5\u6570\u5b57\u548c\u6a21\u62df\u8fde\u63a5\u5668\u3002 \u5f53\u8f93\u51fa\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u4f1a\u53d1\u51fa\u58f0\u8c03\u3002 \u6216\u8005\uff0c\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u6a21\u62df\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u8f93\u51fa\u4ee5\u4ea7\u751f\u5404\u79cd\u97f3\u8c03\u548c\u6548\u679c\u3002    Grove - Red LED   \u8fd9\u662f\u4e00\u7ec4\u7b80\u6613\u7684 LED\u3002 \u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\uff0c\u4ee5\u9ad8\u7535\u5e73\u8f93\u51fa\u6765\u70b9\u4eae\u5b83\u4eec\u3002    Grove -Green LED   \u8fd9\u662f\u4e00\u7ec4\u7b80\u6613\u7684 LED\u3002 \u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\uff0c\u4ee5\u9ad8\u7535\u5e73\u8f93\u51fa\u6765\u70b9\u4eae\u5b83\u4eec\u3002    Grove - Blue LED   \u8fd9\u662f\u4e00\u7ec4\u7b80\u6613\u7684 LED\u3002 \u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\uff0c\u4ee5\u9ad8\u7535\u5e73\u8f93\u51fa\u6765\u70b9\u4eae\u5b83\u4eec\u3002    Gear Stepper Motor with Driver   \u5b83\u5141\u8bb8\u60a8\u901a\u8fc7\u5c06\u6b65\u8fdb\u7535\u673a\u8fde\u63a5\u5230\u9a71\u52a8\u5668\u677f\u6765\u9a71\u52a8\u6b65\u8fdb\u7535\u673a\uff0c\u5e76\u5c06\u9a71\u52a8\u5668\u8fde\u63a5\u5230\u5177\u6709 PWM \u8f93\u51fa\u7684\u7528\u4e8e Intel Joule \u7684 Grove Shield \u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u7aef\u53e3\u3002 \u7136\u540e\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee3\u7801\u884c\u8f7b\u677e\u63a7\u5236\u6b65\u8fdb\u7535\u673a\u3002", 
            "title": "Grove Actuators"
        }, 
        {
            "location": "/Grove-Maker_Kit_for_Intel_Joule/#_3", 
            "text": "[\u539f\u7406\u56fePDF]   Grove Shield for Intel Joule v1.0.pdf  [Eagle\u6587\u4ef6]   Grove Shield for Intel Joule_eagle.zip", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove_Indoor_Environment_Kit_for_Edison/", 
            "text": "Grove Indoor Environment Kit for Edison \u4e0e Intel @ Edison \u548c Arduino \u6269\u5c55\u677f\u5171\u540c\u4f7f\u7528\u4fbf\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u5b8c\u6574\u7684\u5ba4\u5185\u73af\u5883\u5e94\u7528\u7a0b\u5e8f\u3002\u800c\u4e14\u4f7f\u7528 Base Shield V2\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5feb\u901f\u63d2\u5165\u591a\u8fbe11\u4e2a\u4e0d\u540c\u7684 Grove \u4f20\u611f\u5668\u548c\u6267\u884c\u5668\u3002\u6211\u4eec\u63d0\u4f9b\u4e0d\u65ad\u66f4\u65b0\u7684\u70ab\u9177\u6f14\u793a\u4ee3\u7801\uff0c\u4ee5\u4fbf\u5728\u60a8\u6ca1\u6709\u4efb\u4f55\u7f16\u7a0b\u7ecf\u9a8c\u7684\u60c5\u51b5\u4e0b\u4e5f\u6613\u4e8e\u64cd\u4f5c\u3002\n\n\n\n\n\u5957\u4ef6\u6e05\u5355\n\n\n\n\n\n\n\n\nBase Shield V2\n  x1\n\n\n\n\n\n\nGrove - Tempture\nHumidity Sensor (High-Accuracy \nMini)\n  x1\n\n\n\n\n\n\nGrove - Moisture sensor\n  x1\n\n\n\n\n\n\nGrove - Light Sensor\n  x1\n\n\n\n\n\n\nGrove - UV Sensor\n  x1\n\n\n\n\n\n\nGrove - PIR Motion Sensor\n  x1\n\n\n\n\n\n\nGrove - Encoder\n  x1\n\n\n\n\n\n\nGrove - Button\n  x1\n\n\n\n\n\n\nGrove - LCD RGB Backlight\n  x1\n\n\n\n\n\n\nGrove - Relay\n  x1\n\n\n\n\n\n\nGrove - Servo\n  x1\n\n\n\n\n\n\nGrove - Buzzer\n  x1\n\n\n\n\n\n\n9V to Barrel Jack Adapter\n  x1\n\n\n\n\n\n\n26AWG Grove Cable  x10\n\n\n\n\n\n\nUSB \u7535\u7f06  x1\n\n\n\n\n\n\n\n\n\u5b89\u88c5 Edison Arduino IDE\n\n\n\n\n[\n\u94fe\u63a5\u5931\u6548]\n  \n  \u8bf7\u53c2\u9605\u82f1\u7279\u5c14\u7231\u8fea\u751f\u5b98\u65b9\u7f51\u7ad9\uff1a\n\u7231\u8fea\u751f\u5165\u95e8\u6307\u5357\n\n\n1.\u4e0b\u8f7d \nEdison Arduino IDE\n\uff08\u6ce8\u610f\uff1a\u9009\u62e9\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\uff09\n\n\n2.\u6253\u5f00\u60a8\u4e0b\u8f7d \nEdison Arduino IDE.zip\n \u7684\u6587\u4ef6\u5939\u3002\n\n\n3.\u5355\u51fb \n.7z\n \u6587\u4ef6\uff0c\u89e3\u538b\u7f29 \n\"arduino- ...\"\n \u3002\n\n\n\n\n4.\u5355\u51fb\u521b\u5efa\u7684\u6587\u4ef6\u5939\uff0c\u4f1a\u770b\u5230IDE \n\u201carduino.exe\u201d\n \u6587\u4ef6\u3002\u53cc\u51fb\u6b64\u6587\u4ef6\uff0c\u6253\u5f00\u7a97\u53e3\u3002\n\n\n\n\n\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\n\n\n\n\n1.\u4e0b\u8f7d \nFTDI drivers\n\n\n2.\u53f3\u952e\u5355\u51fb\u4e0b\u8f7d\u7684 \n.exe\n \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5e94\u79f0\u4e3a \n\u201cCDM...\u201d\n \uff0c\u5e76\u9009\u62e9 \n\u201c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\u201d\n \u3002\n\n\n\n\n3.\u70b9\u51fb \n\u201cExtract\u201d\n \u3002\n\n\n\n\n4.\u70b9\u51fb \n\u201cNext\u201d\n \u3002\n\n\n5.\u770b\u5230\u4e0b\u56fe\u6240\u793a\u65f6\u70b9\u51fb \n\"Finish\uff08\u5b8c\u6210\uff09\"\n \u3002\n\n\n\n\n6.\u4e0b\u8f7d \nIntel Edison Drivers\n \u5b89\u88c5\u6240\u9700\u7684RNDIS\uff0cCDC\u548cDFU\u9a71\u52a8\u7a0b\u5e8f\u3002\n\n\n7.\u53cc\u51fb \n.exe\n \u6587\u4ef6\u5f00\u59cb\u5b89\u88c5\u3002\n\n\n\n\n\u786c\u4ef6\u8fde\u63a5\n\n\n\n\n\u4f7f\u7528 26AWG Grove Cable \u8fdb\u884c\u4ee5\u4e0b\u8fde\u63a5\uff1a\n\n\n\n\n\n\n  Grove \u6a21\u5757\n\n\n\n \u8fde\u63a5\u5230\n\n\n\n\n\n Temperature\nHumidity Sensor\n\n\n\n I2C\n\n\n\n\n\n Moisture Sensor\n\n\n\n A1\n\n\n\n\n\n Light Sensor\n\n\n\n A2\n\n\n\n\n\n UV Sensor\n\n\n\n A3\n\n\n\n\n\n PIR Motion Sensor\n\n\n\n D7\n\n\n\n\n\n Encoder\n\n\n\n D2\n\n\n\n\n\n Button\n\n\n\n UART(D1)\n\n\n\n\n\n LCD RGB Backlight\n\n\n\n I2C\n\n\n\n\n\n Relay\n\n\n\n D5\n\n\n\n\n\n Servo\n\n\n\n D6\n\n\n\n\n\n Buzzer\n\n\n\n D4\n\n\n\n\n\n\n\u8fd0\u884c\u793a\u4f8b\n\n\n\n\n1.\u6253\u5f00\u7f51\u7ad9 \nGrove_Indoor_Environment_Demo\n \u4e0b\u8f7d\u6574\u4e2a\u9879\u76ee\u6587\u4ef6\u3002\n\n\n\n\n2.\u5355\u51fb \nTools\uff08\u5de5\u5177\uff09 \n Serial Port\uff08\u7aef\u53e3\uff09\n \u5e76\u9009\u62e9**Edison\u6240\u5728COM\u53e3**\u3002\n\n\n\n\n3.\u70b9\u51fb \nSketch\uff08\u9879\u76ee\uff09\nImport Library\u2026\uff08\u52a0\u8f7d\u5e93\uff09\nAdd .ZIP Library\uff08\u6dfb\u52a0\u4e00\u4e2a .ZIP \u5e93\uff09\n \u5e76\u9009\u62e9\u6b65\u9aa4 1 \u4e2d \u4e0b\u8f7d\u7684 \n.ZIP\n \u6587\u4ef6\u3002\n\n\n4.\u70b9\u51fb \nFile\uff08\u6587\u4ef6\uff09\nExamples\uff08\u793a\u4f8b\uff09\n Grove_Indoor_Environment_Demo\n \u52a0\u8f7d\u793a\u4f8b\uff0c\u7136\u540e\u70b9\u51fb \nupload\uff08\u4e0a\u4f20\uff09\n \u6309\u94ae\u3002\n\n\n\n\n5.\u6253\u5f00 \nSerial Monitor\uff08\u4e32\u53e3\u76d1\u89c6\u5668\uff09\n, \u5b83\u4f1a\u6253\u5370\u51fa\u4f20\u611f\u5668\u7684\u4fe1\u606f\u3002\n\n\n\n\n6.\u65cb\u8f6c\u7f16\u7801\u5668\u4ee5\u68c0\u67e5 LCD \u4e0a\u7684\u4f20\u611f\u5668\u503c\u3002\n\n\n\n\n7.\u5728 \n\u201cSend TextBox\uff08\u6587\u672c\u6846\uff09\u201d\n \u4e2d, \u60a8\u53ef\u4ee5\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u6765\u64cd\u4f5c\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\uff1a\n\n\nset [sensor][condition:\n, \n or =][ threshold],[actuator]=[action]\n\n\n\n\n\n\n  \u793a\u4f8b\n\n\n\n \u8bf4\u660e\n\n\n\n\n\n _set temp\n40, relay=1_\n\n\n\n \u5982\u679c\u6e29\u5ea6 \n40\u2103\uff0c\u7ee7\u7535\u5668\u4f1a\u63a5\u901a\u3002\n\n\n\n\n\n _set temp\n40, sleep=1_\n\n\n\n \u5982\u679c\u6e29\u5ea6 \n40\u2103\uff0c\u8fdb\u5165\u7761\u7720\u72b6\u6001\u3002\n\n\n\n\n\n _set humi\n60, buzzer=1_\n\n\n\n \u5982\u679c\u6e7f\u5ea6 \n60%\uff0c\u8702\u9e23\u5668\u9e23\u53eb\u3002\n\n\n\n\n\n _set light\n600, servo=90_\n\n\n\n \u5982\u679c\u5149\u7167\u5f3a\u5ea6 \n600, \u8235\u673a\u8f6c\u8fc7 90\u00b0\u3002\n\n\n\n\n\n _set uv\n80, relay=0_\n\n\n\n \u5982\u679c UV \u5f3a\u5ea6 \n80, \u7ee7\u7535\u5668\u4f1a\u65ad\u5f00\u3002\n\n\n\n\n\n _set pir=1, buzzer=1_\n\n\n\n \u5982\u679c\u68c0\u6d4b\u5230\u4eba\uff0c\u8702\u9e23\u5668\u9e23\u53eb\u3002\n\n\n\n\n\n _set ms\n40, relay=1_\n\n\n\n \u5982\u679c\u6e7f\u5ea6 \n40\uff0c\u7ee7\u7535\u5668\u4f1a\u63a5\u901a\u3002\n\n\n\n\n\n _set ssid=name, psw=password_\n\n\n\n \u8bbe\u7f6eWiFi SSID\u548c\u5bc6\u7801\u3002\u60a8\u53ef\u4ee5\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8df3\u8f6c\u5230\u4e32\u53e3\u76d1\u89c6\u5668\u6216 LCD \u4e0a\u663e\u793a\u7684 IP \u5730\u5740\u3002 \u9ed8\u8ba4\u7aef\u53e3\u4e3a88\u3002\u4f8b\u5982\uff1a192.168.1.101:88\u3002\n\n\n\n\n\n\nNote\n\n\n\n\n\n\n\n\n\u547d\u4ee4\u5e94\u4ee5\u201c/ n\u201d\u7ed3\u5c3e\uff0c\u56e0\u6b64\u9700\u8981\u9009\u4e2d \n\u201cNewLine\u201d\n \uff08\u5728\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\uff09\u3002\n\n\n\n\n\n\n\u6267\u884c\u5668\u53ea\u80fd\u7531\u4f20\u611f\u5668\u63a7\u5236\u3002 \u5982\u679cA\u4f20\u611f\u5668\u60f3\u8981\u63a7\u5236\u6267\u884c\u5668\uff08\u7531B\u4f20\u611f\u5668\u63a7\u5236\uff09\uff0cB\u4f20\u611f\u5668\u5e94\u8bbe\u7f6e\u4e3a sleep \u3002\n\n\n\n\n\n\n\n\n8.\u8fde\u63a5\u597d WiFi\u3002 \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u5e76\u8bbe\u7f6e\u60a8\u7684 ssid \u548c\u5bc6\u7801\uff08\u5982\u4e0b\uff09\u3002 \u68c0\u67e5LCD\u6216\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u7684\u672c\u5730IP\u3002 \u5728\u8fde\u63a5\u5728\u540c\u4e00\u7f51\u7edc\u4e0a\u7684\u8bbe\u5907\u4e0a\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u5e76\u8f6c\u5230\u4e0a\u9762\u7684 IP \u5730\u5740\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u4f20\u611f\u5668\u7684\u503c\u3002\n\n\n\u8b66\u544a\uff1a\u5f53\u8bbf\u95eeWeb\u670d\u52a1\u5668\u65f6\uff0c\u5e94\u6dfb\u52a0\u7aef\u53e3\u53f7\uff0888\uff09\uff0c\u4f8b\u5982\uff1a172.20.10.2:88\u3002\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n\n\n[\u4ee3\u7801]\nGrove Indoor Environment Kit Source Code\n\n\n\n\n\n\n[\u6559\u7a0b]\nEdison Getting Started Guide", 
            "title": "Grove Indoor Environment Kit for Edison"
        }, 
        {
            "location": "/Grove_Indoor_Environment_Kit_for_Edison/#_1", 
            "text": "Base Shield V2   x1    Grove - Tempture Humidity Sensor (High-Accuracy  Mini)   x1    Grove - Moisture sensor   x1    Grove - Light Sensor   x1    Grove - UV Sensor   x1    Grove - PIR Motion Sensor   x1    Grove - Encoder   x1    Grove - Button   x1    Grove - LCD RGB Backlight   x1    Grove - Relay   x1    Grove - Servo   x1    Grove - Buzzer   x1    9V to Barrel Jack Adapter   x1    26AWG Grove Cable  x10    USB \u7535\u7f06  x1", 
            "title": "\u5957\u4ef6\u6e05\u5355"
        }, 
        {
            "location": "/Grove_Indoor_Environment_Kit_for_Edison/#edison-arduino-ide", 
            "text": "[ \u94fe\u63a5\u5931\u6548]      \u8bf7\u53c2\u9605\u82f1\u7279\u5c14\u7231\u8fea\u751f\u5b98\u65b9\u7f51\u7ad9\uff1a \u7231\u8fea\u751f\u5165\u95e8\u6307\u5357  1.\u4e0b\u8f7d  Edison Arduino IDE \uff08\u6ce8\u610f\uff1a\u9009\u62e9\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\uff09  2.\u6253\u5f00\u60a8\u4e0b\u8f7d  Edison Arduino IDE.zip  \u7684\u6587\u4ef6\u5939\u3002  3.\u5355\u51fb  .7z  \u6587\u4ef6\uff0c\u89e3\u538b\u7f29  \"arduino- ...\"  \u3002   4.\u5355\u51fb\u521b\u5efa\u7684\u6587\u4ef6\u5939\uff0c\u4f1a\u770b\u5230IDE  \u201carduino.exe\u201d  \u6587\u4ef6\u3002\u53cc\u51fb\u6b64\u6587\u4ef6\uff0c\u6253\u5f00\u7a97\u53e3\u3002", 
            "title": "\u5b89\u88c5 Edison Arduino IDE"
        }, 
        {
            "location": "/Grove_Indoor_Environment_Kit_for_Edison/#_2", 
            "text": "1.\u4e0b\u8f7d  FTDI drivers  2.\u53f3\u952e\u5355\u51fb\u4e0b\u8f7d\u7684  .exe  \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5e94\u79f0\u4e3a  \u201cCDM...\u201d  \uff0c\u5e76\u9009\u62e9  \u201c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\u201d  \u3002   3.\u70b9\u51fb  \u201cExtract\u201d  \u3002   4.\u70b9\u51fb  \u201cNext\u201d  \u3002  5.\u770b\u5230\u4e0b\u56fe\u6240\u793a\u65f6\u70b9\u51fb  \"Finish\uff08\u5b8c\u6210\uff09\"  \u3002   6.\u4e0b\u8f7d  Intel Edison Drivers  \u5b89\u88c5\u6240\u9700\u7684RNDIS\uff0cCDC\u548cDFU\u9a71\u52a8\u7a0b\u5e8f\u3002  7.\u53cc\u51fb  .exe  \u6587\u4ef6\u5f00\u59cb\u5b89\u88c5\u3002", 
            "title": "\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f"
        }, 
        {
            "location": "/Grove_Indoor_Environment_Kit_for_Edison/#_3", 
            "text": "\u4f7f\u7528 26AWG Grove Cable \u8fdb\u884c\u4ee5\u4e0b\u8fde\u63a5\uff1a      Grove \u6a21\u5757   \u8fde\u63a5\u5230    Temperature Humidity Sensor   I2C    Moisture Sensor   A1    Light Sensor   A2    UV Sensor   A3    PIR Motion Sensor   D7    Encoder   D2    Button   UART(D1)    LCD RGB Backlight   I2C    Relay   D5    Servo   D6    Buzzer   D4", 
            "title": "\u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove_Indoor_Environment_Kit_for_Edison/#_4", 
            "text": "1.\u6253\u5f00\u7f51\u7ad9  Grove_Indoor_Environment_Demo  \u4e0b\u8f7d\u6574\u4e2a\u9879\u76ee\u6587\u4ef6\u3002   2.\u5355\u51fb  Tools\uff08\u5de5\u5177\uff09   Serial Port\uff08\u7aef\u53e3\uff09  \u5e76\u9009\u62e9**Edison\u6240\u5728COM\u53e3**\u3002   3.\u70b9\u51fb  Sketch\uff08\u9879\u76ee\uff09 Import Library\u2026\uff08\u52a0\u8f7d\u5e93\uff09 Add .ZIP Library\uff08\u6dfb\u52a0\u4e00\u4e2a .ZIP \u5e93\uff09  \u5e76\u9009\u62e9\u6b65\u9aa4 1 \u4e2d \u4e0b\u8f7d\u7684  .ZIP  \u6587\u4ef6\u3002  4.\u70b9\u51fb  File\uff08\u6587\u4ef6\uff09 Examples\uff08\u793a\u4f8b\uff09  Grove_Indoor_Environment_Demo  \u52a0\u8f7d\u793a\u4f8b\uff0c\u7136\u540e\u70b9\u51fb  upload\uff08\u4e0a\u4f20\uff09  \u6309\u94ae\u3002   5.\u6253\u5f00  Serial Monitor\uff08\u4e32\u53e3\u76d1\u89c6\u5668\uff09 , \u5b83\u4f1a\u6253\u5370\u51fa\u4f20\u611f\u5668\u7684\u4fe1\u606f\u3002   6.\u65cb\u8f6c\u7f16\u7801\u5668\u4ee5\u68c0\u67e5 LCD \u4e0a\u7684\u4f20\u611f\u5668\u503c\u3002   7.\u5728  \u201cSend TextBox\uff08\u6587\u672c\u6846\uff09\u201d  \u4e2d, \u60a8\u53ef\u4ee5\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u6765\u64cd\u4f5c\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\uff1a  set [sensor][condition: ,   or =][ threshold],[actuator]=[action]      \u793a\u4f8b   \u8bf4\u660e    _set temp 40, relay=1_   \u5982\u679c\u6e29\u5ea6  40\u2103\uff0c\u7ee7\u7535\u5668\u4f1a\u63a5\u901a\u3002    _set temp 40, sleep=1_   \u5982\u679c\u6e29\u5ea6  40\u2103\uff0c\u8fdb\u5165\u7761\u7720\u72b6\u6001\u3002    _set humi 60, buzzer=1_   \u5982\u679c\u6e7f\u5ea6  60%\uff0c\u8702\u9e23\u5668\u9e23\u53eb\u3002    _set light 600, servo=90_   \u5982\u679c\u5149\u7167\u5f3a\u5ea6  600, \u8235\u673a\u8f6c\u8fc7 90\u00b0\u3002    _set uv 80, relay=0_   \u5982\u679c UV \u5f3a\u5ea6  80, \u7ee7\u7535\u5668\u4f1a\u65ad\u5f00\u3002    _set pir=1, buzzer=1_   \u5982\u679c\u68c0\u6d4b\u5230\u4eba\uff0c\u8702\u9e23\u5668\u9e23\u53eb\u3002    _set ms 40, relay=1_   \u5982\u679c\u6e7f\u5ea6  40\uff0c\u7ee7\u7535\u5668\u4f1a\u63a5\u901a\u3002    _set ssid=name, psw=password_   \u8bbe\u7f6eWiFi SSID\u548c\u5bc6\u7801\u3002\u60a8\u53ef\u4ee5\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8df3\u8f6c\u5230\u4e32\u53e3\u76d1\u89c6\u5668\u6216 LCD \u4e0a\u663e\u793a\u7684 IP \u5730\u5740\u3002 \u9ed8\u8ba4\u7aef\u53e3\u4e3a88\u3002\u4f8b\u5982\uff1a192.168.1.101:88\u3002   Note     \u547d\u4ee4\u5e94\u4ee5\u201c/ n\u201d\u7ed3\u5c3e\uff0c\u56e0\u6b64\u9700\u8981\u9009\u4e2d  \u201cNewLine\u201d  \uff08\u5728\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\uff09\u3002    \u6267\u884c\u5668\u53ea\u80fd\u7531\u4f20\u611f\u5668\u63a7\u5236\u3002 \u5982\u679cA\u4f20\u611f\u5668\u60f3\u8981\u63a7\u5236\u6267\u884c\u5668\uff08\u7531B\u4f20\u611f\u5668\u63a7\u5236\uff09\uff0cB\u4f20\u611f\u5668\u5e94\u8bbe\u7f6e\u4e3a sleep \u3002     8.\u8fde\u63a5\u597d WiFi\u3002 \u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u5e76\u8bbe\u7f6e\u60a8\u7684 ssid \u548c\u5bc6\u7801\uff08\u5982\u4e0b\uff09\u3002 \u68c0\u67e5LCD\u6216\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u7684\u672c\u5730IP\u3002 \u5728\u8fde\u63a5\u5728\u540c\u4e00\u7f51\u7edc\u4e0a\u7684\u8bbe\u5907\u4e0a\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u5e76\u8f6c\u5230\u4e0a\u9762\u7684 IP \u5730\u5740\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u4f20\u611f\u5668\u7684\u503c\u3002  \u8b66\u544a\uff1a\u5f53\u8bbf\u95eeWeb\u670d\u52a1\u5668\u65f6\uff0c\u5e94\u6dfb\u52a0\u7aef\u53e3\u53f7\uff0888\uff09\uff0c\u4f8b\u5982\uff1a172.20.10.2:88\u3002", 
            "title": "\u8fd0\u884c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove_Indoor_Environment_Kit_for_Edison/#_5", 
            "text": "[\u4ee3\u7801] Grove Indoor Environment Kit Source Code    [\u6559\u7a0b] Edison Getting Started Guide", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove_Smart_Plant_Care_Kit/", 
            "text": "Grove Smart Plant Care Kit \u662f\u4e00\u6b3e\u65b9\u4fbf\u53c8\u9ad8\u7aef\u7684\u667a\u80fd\u5bb6\u5c45\u5957\u4ef6\u3002\u53ea\u9700\u8fdb\u884c\u4e00\u4e9b\u8bbe\u7f6e\u5373\u53ef\u5b9e\u73b0\u591a\u79cd\u5e94\u7528\u3002\u5957\u4ef6\u5177\u6709\u4e24\u4e2a\u529f\u80fd\uff0c\u4e00\u662f\u68c0\u6d4b\u5f71\u54cd\u690d\u7269\u751f\u957f\u7684\u73af\u5883\u5982\u571f\u58e4\u6e7f\u5ea6\u3001\u5149\u7167\u5f3a\u5ea6\u3001\u6e29\u5ea6\u548c\u6e7f\u5ea6\u6240\u6709\u6536\u96c6\u7684\u6570\u636e\u53ef\u663e\u793a\u5728 OLED \u5c4f\u5e55\u4e0a\uff0c\u53e6\u4e00\u4e2a\u529f\u80fd\u662f\u901a\u8fc7\u73af\u5883\u7684\u76d1\u6d4b\u7ed3\u679c\u81ea\u52a8\u7ed9\u690d\u7269\u6d47\u6c34\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u4fbf\uff0c\u5feb\u901f\u642d\u5efa\u690d\u7269\u76d1\u62a4\u7cfb\u7edf\u3002\n\n\n\n\n\n\n\u9ad8\u96c6\u6210\u5ea6\u7684\u667a\u80fd\u6a21\u5757\u5177\u6709\u4e30\u5bcc\u9879\u76ee\u7279\u6027\u3002\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u8bf7\u53c2\u9605\u5404\u6a21\u5757\u7684\u89c4\u683c\u53c2\u6570 :\n\n\n\n\n\n\nGrove - Temp \n Humidity Sensor\n (\u6e29\u6e7f\u5ea6\u4f20\u611f\u5668)\n\n\n\n\n\n\nGrove - Sunlight Sensor V1.0 (\u5149\u7167\u4f20\u611f\u5668)\n\n\n\n\n\n\nGrove - Water Flow Sensor\n (\u6c34\u6d41\u4f20\u611f\u5668)\n\n\n\n\n\n\nGrove - Moisture Sensor\n (\u6e7f\u5ea6\u4f20\u611f\u5668)\n\n\n\n\n\n\nGrove - Encoder\n (\u7f16\u7801\u5668)\n\n\n\n\n\n\nGrove - OLED Display 1.12\n (OLED \u663e\u793a\u5c4f)\n\n\n\n\n\n\nGrove - Button\n (\u6309\u952e)\n\n\n\n\n\n\nGrove - Relay\n (\u7ee7\u7535\u5668)\n\n\n\n\n\n\n12V \u76f4\u6d41\u6c34\u6cf5\n\n\n\n\n\n\n12V \u7535\u6e90\u63a5\u5934\n\n\n\n\n\n\nBase Shield V2\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\n\n\u667a\u80fd\u690d\u7269\u57f9\u517b\u7cfb\u7edf\n\n\n\n\n\n\n\u5bb6\u7528\u7a7a\u6c14\u6e29\u6e7f\u68c0\u6d4b\u5668\u3002\n\n\n\n\n\n\n\n\nNote\n\n\n\u672c\u8282\u4e2d\u5217\u51fa\u7684\u60f3\u6cd5\u53ea\u662f\u8be5\u5957\u4ef6\u5927\u91cf\u5e94\u7528\u7684\u4e00\u5c0f\u90e8\u5206\u3002\n\n\n\n\n\u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\u8be5\u5957\u4ef6\u5305\u62ec\u4ee5\u4e0b\u6a21\u5757 :\n\n\n\n\n\n\nGrove \u2013 Encoder\n\n\n\n\n\n\n\n\nGrove - Water Flow Sensor\n\n\n\n\n\n\n\n\nGrove - Relay\n\n\n\n\n\n\n\n\nGrove - Temp \n Humidity Sensor\n\n\n\n\n\n\n\n\nGrove-OLED Display 1.12\n\n\n\n\n\n\n\n\nGrove - Button\n\n\n\n\n\n\n\n\nGrove - Moisture Sensor\n\n\n\n\n\n\n\n\n\u6c34\u6cf5\n\n\n\n\n\n\n\n\nBase Shield V2\n\n\n\n\n\n\n\n\nNote\n\n\n\u672a\u4e0a\u4f20\u7684\u6a21\u5757\u56fe\u50cf\u5c06\u9646\u7eed\u4e0a\u4f20\n\n\n\n\n\n\nGrove - Temp \n Humidity Sensor\uff0c\u7528\u4e8e\u68c0\u6d4b\u6e29\u6e7f\u5ea6\n\n\nGrove - Sunlight Sensor V1.0\uff0c\u7528\u4e8e\u68c0\u6d4b\u7167\u660e\u5f3a\u5ea6\n\n\nGrove - Water Flow Sensor\uff0c\u7528\u4e8e\u68c0\u6d4b\u6c34\u6d41\u7684\u901f\u5ea6\u548c\u4f53\u79ef\n\n\nGrove - Moisture Sensor\uff0c\u7528\u4e8e\u68c0\u6d4b\u571f\u58e4\u6c34\u5206\n\n\nGrove - Encoder\uff0c\u7528\u4e8e\u8c03\u6574\u65cb\u94ae\n\n\nGrove - OLED Display 1.12\uff0c\u7528\u4e8e\u663e\u793a\u53c2\u6570\n\n\nGrove - Button\uff0c\u7528\u4e8e\u8c03\u6574\u53c2\u6570\n\n\nGrove - Relay\uff0c\u7528\u4e8e\u63a7\u5236\u6c34\u6cf5\n\n\n12V \u76f4\u6d41\u6c34\u6cf5\uff0c\u7528\u4e8e\u62bd\u6c34\n\n\n12V \u7535\u6e90\u63a5\u5934\uff0c\u7528\u4e8e\u8fde\u63a5\u7535\u6e90\n\n\nBase Shield V2\uff0c\u8fde\u63a5 Grove \u4e0e\u60a8\u7684 Arduino\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\nPDF \u683c\u5f0f\n \u7684\u96f6\u4ef6\u6e05\u5355\u3002\n\n\n\u5165\u95e8\u6307\u5bfc\n\n\n\n\nNote\n\n\n\u672c\u8282\u4ec5\u663e\u793a\u5982\u4f55\u6784\u5efa\u57fa\u7840\u5f00\u53d1\u73af\u5883\u3002\n\n\n\n\n\u5728 Arduino UNO \u4e0a\u6784\u5efa IDE \u7684\u6307\u5357\u3002\n\n\n\u5728 Seeeduino V4.2 \u4e0a\u6784\u5efa IDE \u7684\u6307\u5357(\u4e0e Arduino \u517c\u5bb9)\n\n\n\n\nNote\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528 \nBase shield\n \u5feb\u901f\u8fde\u63a5\u6a21\u5757\u3002\n\n\n\n\n\u6f14\u793a\n\n\n\n\nNote\n\n\n\u672c\u8282\u5c06\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u5b9e\u73b0\u4e00\u4e9b\u73b0\u5b9e\u529f\u80fd\u7684\u6f14\u793a\u3002\n\n\n\n\n\n\nGrove Smart Plant Care Kit\u8bf4\u660e\u4e66.", 
            "title": "Grove Smart Plant Care Kit"
        }, 
        {
            "location": "/Grove_Smart_Plant_Care_Kit/#_1", 
            "text": "\u4f7f\u7528\u65b9\u4fbf\uff0c\u5feb\u901f\u642d\u5efa\u690d\u7269\u76d1\u62a4\u7cfb\u7edf\u3002    \u9ad8\u96c6\u6210\u5ea6\u7684\u667a\u80fd\u6a21\u5757\u5177\u6709\u4e30\u5bcc\u9879\u76ee\u7279\u6027\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove_Smart_Plant_Care_Kit/#_2", 
            "text": "\u8bf7\u53c2\u9605\u5404\u6a21\u5757\u7684\u89c4\u683c\u53c2\u6570 :    Grove - Temp   Humidity Sensor  (\u6e29\u6e7f\u5ea6\u4f20\u611f\u5668)    Grove - Sunlight Sensor V1.0 (\u5149\u7167\u4f20\u611f\u5668)    Grove - Water Flow Sensor  (\u6c34\u6d41\u4f20\u611f\u5668)    Grove - Moisture Sensor  (\u6e7f\u5ea6\u4f20\u611f\u5668)    Grove - Encoder  (\u7f16\u7801\u5668)    Grove - OLED Display 1.12  (OLED \u663e\u793a\u5c4f)    Grove - Button  (\u6309\u952e)    Grove - Relay  (\u7ee7\u7535\u5668)    12V \u76f4\u6d41\u6c34\u6cf5    12V \u7535\u6e90\u63a5\u5934    Base Shield V2", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove_Smart_Plant_Care_Kit/#_3", 
            "text": "\u667a\u80fd\u690d\u7269\u57f9\u517b\u7cfb\u7edf    \u5bb6\u7528\u7a7a\u6c14\u6e29\u6e7f\u68c0\u6d4b\u5668\u3002     Note  \u672c\u8282\u4e2d\u5217\u51fa\u7684\u60f3\u6cd5\u53ea\u662f\u8be5\u5957\u4ef6\u5927\u91cf\u5e94\u7528\u7684\u4e00\u5c0f\u90e8\u5206\u3002", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove_Smart_Plant_Care_Kit/#_4", 
            "text": "\u8be5\u5957\u4ef6\u5305\u62ec\u4ee5\u4e0b\u6a21\u5757 :    Grove \u2013 Encoder     Grove - Water Flow Sensor     Grove - Relay     Grove - Temp   Humidity Sensor     Grove-OLED Display 1.12     Grove - Button     Grove - Moisture Sensor     \u6c34\u6cf5     Base Shield V2     Note  \u672a\u4e0a\u4f20\u7684\u6a21\u5757\u56fe\u50cf\u5c06\u9646\u7eed\u4e0a\u4f20    Grove - Temp   Humidity Sensor\uff0c\u7528\u4e8e\u68c0\u6d4b\u6e29\u6e7f\u5ea6  Grove - Sunlight Sensor V1.0\uff0c\u7528\u4e8e\u68c0\u6d4b\u7167\u660e\u5f3a\u5ea6  Grove - Water Flow Sensor\uff0c\u7528\u4e8e\u68c0\u6d4b\u6c34\u6d41\u7684\u901f\u5ea6\u548c\u4f53\u79ef  Grove - Moisture Sensor\uff0c\u7528\u4e8e\u68c0\u6d4b\u571f\u58e4\u6c34\u5206  Grove - Encoder\uff0c\u7528\u4e8e\u8c03\u6574\u65cb\u94ae  Grove - OLED Display 1.12\uff0c\u7528\u4e8e\u663e\u793a\u53c2\u6570  Grove - Button\uff0c\u7528\u4e8e\u8c03\u6574\u53c2\u6570  Grove - Relay\uff0c\u7528\u4e8e\u63a7\u5236\u6c34\u6cf5  12V \u76f4\u6d41\u6c34\u6cf5\uff0c\u7528\u4e8e\u62bd\u6c34  12V \u7535\u6e90\u63a5\u5934\uff0c\u7528\u4e8e\u8fde\u63a5\u7535\u6e90  Base Shield V2\uff0c\u8fde\u63a5 Grove \u4e0e\u60a8\u7684 Arduino", 
            "title": "\u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/Grove_Smart_Plant_Care_Kit/#_5", 
            "text": "PDF \u683c\u5f0f  \u7684\u96f6\u4ef6\u6e05\u5355\u3002", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove_Smart_Plant_Care_Kit/#_6", 
            "text": "Note  \u672c\u8282\u4ec5\u663e\u793a\u5982\u4f55\u6784\u5efa\u57fa\u7840\u5f00\u53d1\u73af\u5883\u3002   \u5728 Arduino UNO \u4e0a\u6784\u5efa IDE \u7684\u6307\u5357\u3002  \u5728 Seeeduino V4.2 \u4e0a\u6784\u5efa IDE \u7684\u6307\u5357(\u4e0e Arduino \u517c\u5bb9)   Note  \u60a8\u53ef\u4ee5\u4f7f\u7528  Base shield  \u5feb\u901f\u8fde\u63a5\u6a21\u5757\u3002", 
            "title": "\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove_Smart_Plant_Care_Kit/#_7", 
            "text": "Note  \u672c\u8282\u5c06\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u5b9e\u73b0\u4e00\u4e9b\u73b0\u5b9e\u529f\u80fd\u7684\u6f14\u793a\u3002    Grove Smart Plant Care Kit\u8bf4\u660e\u4e66.", 
            "title": "\u6f14\u793a"
        }, 
        {
            "location": "/Grove-Serial_Camera_Kit/", 
            "text": "Grove - Serial Camera Kit \u5305\u62ec\u4e00\u4e2a\u63a7\u5236\u677f\u548c\u4e24\u4e2a\u53ef\u4e92\u6362\u955c\u5934\uff0c\u4e00\u4e2a\u662f\u6807\u51c6\u955c\u5934\uff0c\u53e6\u4e00\u4e2a\u662f\u5e7f\u89d2\u955c\u5934\u3002 \u8fd9\u5bf9 Arduino \u4e2d\u5fc3\u56fe\u50cf\u8bc6\u522b\u9879\u76ee\u6765\u8bf4\uff0c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u76f8\u673a\uff0c\u56e0\u4e3a Arduino \u80fd\u652f\u6301 30W \u50cf\u7d20\uff0c\u6240\u4ee5\u5b9e\u65f6\u56fe\u50cf\u8bc6\u522b\u662f\u53ef\u80fd\u5b9e\u73b0\u7684\u3002\u4e3a\u4e86\u4f7f\u5176\u66f4\u6709\u8da3\u548c\u53ef\u73a9\uff0c\u4e24\u4e2a\u89c4\u683c\u7684\u955c\u5934\u90fd\u5728\u8fd9\u4e2a\u5de5\u5177\u5305\u4e2d\u3002\u6807\u51c6\u955c\u5934\u7528\u4e8e\u666e\u901a\u7167\u7247\uff0c\u5e7f\u89d2\u955c\u5934\u4e13\u7528\u4e8e\u76d1\u63a7\u9879\u76ee\u3002\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b : 5V\n\n\n\n\n\n\n\u50cf\u7d20 : 30W\n\n\n\n\n\n\n\u5206\u8fa8\u7387 : 640\u00d7480, 320\u00d7240, 160\u00d7120\n\n\n\n\n\n\n\u4e32\u53e3\u6ce2\u7279\u7387 : 9600~115200\n\n\n\n\n\n\n\u901a\u4fe1\u63a5\u53e3 : RS485 \u548c RS232\n\n\n\n\n\n\n\u56fe\u7247 JPEG \u538b\u7f29\uff0c\u9ad8\u3001\u4e2d\u3001\u4f4e\u4e09\u6863\u53ef\u9009\n\n\n\n\n\n\n\u81ea\u52a8\u589e\u76ca\u63a7\u5236\n\n\n\n\n\n\n\u81ea\u52a8\u66dd\u5149\u4e8b\u4ef6\u63a7\u5236\n\n\n\n\n\n\n\u81ea\u52a8\u767d\u5e73\u8861\u63a7\u5236\n\n\n\n\n\n\n\u7126\u8ddd\u53ef\u8c03\n\n\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Grove - Serial Camera Kit\u3002 \u6211\u4eec\u9700\u8981\u4e00\u4e2a \nSeeeduino\n\uff0c\u4e00\u4e2a \nSD Card Shield\n \u548c \nGrove - Button\n\u3002 \u6309\u4e0b\u6309\u94ae\u540e\uff0c\u6211\u4eec\u62cd\u7167\u5e76\u5c06\u5176\u4fdd\u5b58\u5230 SD \u5361\u3002\n\n\n\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4e00\u6b65\u4e00\u6b65\u65bd\u884c\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u8fd0\u884c\u60a8\u7684 Grove - Serial Camera Kit\u3002\u5f00\u59cb\u505a\u5427\u3002\n\n\n\u786c\u4ef6\u5b89\u88c5\n\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5728 SD Card Shield V4.0 \u4e0a\u6709\u4e24\u4e2a Grove \u63a5\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981 Base Shield\uff0c\u53ea\u9700\u5c06\u6309\u94ae\u63d2\u5165 I2C Grove \u5e76\u5c06 Camera \u63d2\u5165 Uart Grove\u3002\n\n\n\n\n\u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20\n\n\n\u60a8\u53ef\u4ee5\u5728 github \u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801\uff0c\u70b9\u51fb \n\u8fd9\u91cc\n\n\n\u4e0a\u4f20\u4ee3\u7801\uff0c\u5f00\u59cb\u5de5\u4f5c\n\n\n\u62cd\u7167\n\n\n\u5b8c\u6210\u4e0a\u4f20\u6f14\u793a\u4ee3\u7801\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u62cd\u7167\uff0c\u53ea\u9700\u6309\u4e0b\u6309\u94ae\uff0c\u7136\u540e\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u7167\u7247\u5c06\u88ab\u4fdd\u5b58\u5230 SD \u5361\u4e2d\u3002\n\n\n\u4ee5\u4e0b\u56fe\u50cf\u662f\u4f7f\u7528\u76f4\u89d2\u955c\u5934\u62cd\u7684\u6211\u529e\u516c\u5ba4\u7684\u5929\u82b1\u677f\u3002\n\n\n\n\n\u66f4\u6362\u955c\u5934\n\n\n\u8fd8\u6709\u4e00\u4e2a\u5e7f\u89d2\u955c\u5934\uff0c\u6211\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u66f4\u6362\u5b83\u3002\n\n\n\u9996\u5148\u4f60\u5e94\u8be5\u6709\u4e00\u628a\u87ba\u4e1d\u5200 \uff1a\n\n\n\n\n\u7136\u540e\uff0c\u62e7\u4e0b\u955c\u5934\u4fa7\u9762\u7684\u87ba\u4e1d :\n\n\n\n\n\u5c1d\u8bd5\u65cb\u8f6c\u955c\u5934\uff0c\u62e7\u51fa\u955c\u5934 :\n\n\n\n\n\u4f7f\u7528\u5e7f\u89d2\u955c\u5934\u62cd\u6211\u529e\u516c\u5ba4\u7684\u5929\u82b1\u677f\n\n\n\u627e\u5230\u4e0e\u4e4b\u524d\u7684\u5929\u82b1\u677f\u56fe\u50cf\u6709\u4ec0\u4e48\u4e0d\u540c ?\n\n\n\n\n\u5982\u4f55\u805a\u7126\n\n\n\u955c\u5934\u87ba\u4e1d\u4e0d\u540c\u7684\u6df1\u5ea6\u4ee3\u8868\u4e0d\u540c\u7684\u7126\u8ddd\uff0c\u8bd5\u4e00\u8bd5\u5427\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nDemo Code", 
            "title": "Grove Serial Camera Kit"
        }, 
        {
            "location": "/Grove-Serial_Camera_Kit/#_1", 
            "text": "\u8f93\u5165\u7535\u538b : 5V    \u50cf\u7d20 : 30W    \u5206\u8fa8\u7387 : 640\u00d7480, 320\u00d7240, 160\u00d7120    \u4e32\u53e3\u6ce2\u7279\u7387 : 9600~115200    \u901a\u4fe1\u63a5\u53e3 : RS485 \u548c RS232    \u56fe\u7247 JPEG \u538b\u7f29\uff0c\u9ad8\u3001\u4e2d\u3001\u4f4e\u4e09\u6863\u53ef\u9009    \u81ea\u52a8\u589e\u76ca\u63a7\u5236    \u81ea\u52a8\u66dd\u5149\u4e8b\u4ef6\u63a7\u5236    \u81ea\u52a8\u767d\u5e73\u8861\u63a7\u5236    \u7126\u8ddd\u53ef\u8c03", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-Serial_Camera_Kit/#_2", 
            "text": "\u672c\u6f14\u793a\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Grove - Serial Camera Kit\u3002 \u6211\u4eec\u9700\u8981\u4e00\u4e2a  Seeeduino \uff0c\u4e00\u4e2a  SD Card Shield  \u548c  Grove - Button \u3002 \u6309\u4e0b\u6309\u94ae\u540e\uff0c\u6211\u4eec\u62cd\u7167\u5e76\u5c06\u5176\u4fdd\u5b58\u5230 SD \u5361\u3002  \u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4e00\u6b65\u4e00\u6b65\u65bd\u884c\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u8fd0\u884c\u60a8\u7684 Grove - Serial Camera Kit\u3002\u5f00\u59cb\u505a\u5427\u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove-Serial_Camera_Kit/#_3", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5728 SD Card Shield V4.0 \u4e0a\u6709\u4e24\u4e2a Grove \u63a5\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981 Base Shield\uff0c\u53ea\u9700\u5c06\u6309\u94ae\u63d2\u5165 I2C Grove \u5e76\u5c06 Camera \u63d2\u5165 Uart Grove\u3002", 
            "title": "\u786c\u4ef6\u5b89\u88c5"
        }, 
        {
            "location": "/Grove-Serial_Camera_Kit/#_4", 
            "text": "\u60a8\u53ef\u4ee5\u5728 github \u4e0b\u8f7d\u6f14\u793a\u4ee3\u7801\uff0c\u70b9\u51fb  \u8fd9\u91cc  \u4e0a\u4f20\u4ee3\u7801\uff0c\u5f00\u59cb\u5de5\u4f5c", 
            "title": "\u4e0b\u8f7d\u4ee3\u7801\u5e76\u4e0a\u4f20"
        }, 
        {
            "location": "/Grove-Serial_Camera_Kit/#_5", 
            "text": "\u5b8c\u6210\u4e0a\u4f20\u6f14\u793a\u4ee3\u7801\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u62cd\u7167\uff0c\u53ea\u9700\u6309\u4e0b\u6309\u94ae\uff0c\u7136\u540e\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u7167\u7247\u5c06\u88ab\u4fdd\u5b58\u5230 SD \u5361\u4e2d\u3002  \u4ee5\u4e0b\u56fe\u50cf\u662f\u4f7f\u7528\u76f4\u89d2\u955c\u5934\u62cd\u7684\u6211\u529e\u516c\u5ba4\u7684\u5929\u82b1\u677f\u3002", 
            "title": "\u62cd\u7167"
        }, 
        {
            "location": "/Grove-Serial_Camera_Kit/#_6", 
            "text": "\u8fd8\u6709\u4e00\u4e2a\u5e7f\u89d2\u955c\u5934\uff0c\u6211\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u66f4\u6362\u5b83\u3002  \u9996\u5148\u4f60\u5e94\u8be5\u6709\u4e00\u628a\u87ba\u4e1d\u5200 \uff1a   \u7136\u540e\uff0c\u62e7\u4e0b\u955c\u5934\u4fa7\u9762\u7684\u87ba\u4e1d :   \u5c1d\u8bd5\u65cb\u8f6c\u955c\u5934\uff0c\u62e7\u51fa\u955c\u5934 :   \u4f7f\u7528\u5e7f\u89d2\u955c\u5934\u62cd\u6211\u529e\u516c\u5ba4\u7684\u5929\u82b1\u677f  \u627e\u5230\u4e0e\u4e4b\u524d\u7684\u5929\u82b1\u677f\u56fe\u50cf\u6709\u4ec0\u4e48\u4e0d\u540c ?", 
            "title": "\u66f4\u6362\u955c\u5934"
        }, 
        {
            "location": "/Grove-Serial_Camera_Kit/#_7", 
            "text": "\u955c\u5934\u87ba\u4e1d\u4e0d\u540c\u7684\u6df1\u5ea6\u4ee3\u8868\u4e0d\u540c\u7684\u7126\u8ddd\uff0c\u8bd5\u4e00\u8bd5\u5427\u3002", 
            "title": "\u5982\u4f55\u805a\u7126"
        }, 
        {
            "location": "/Grove-Serial_Camera_Kit/#_8", 
            "text": "[\u5176\u4ed6\u8d44\u6e90]   Demo Code", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/", 
            "text": "Grove IoT Developer Kit \u2013 Microsoft Azure Edition \u5305\u542b\u4e00\u4e2a \nIntel\u00ae Edison module\n\uff0c \u4e00\u4e2a \nIntel\u00ae Edison for Arduino board\n\uff0c\u4e00\u4e2a \nGrove Base Shield\n, \u4e00\u7ec4 \nGrove sensors\n \u548c\u5185\u7f6e Grove \u63a5\u53e3\u7684 \nactuators\n \u7528\u6765\u5feb\u901f\u5efa\u6a21\u3002\u63a5\u4e0a\u6a21\u5757\u5373\u53ef\u4f7f\u7528\u3002\n\n\n\n\nIntel\u00ae Edison For Arduino\n\n\n\n\nIntel\u00ae Edison compute module \u4e3a\u4e13\u4e1a\u521b\u5ba2\u548c\u4e00\u4e9b\u5de5\u4e1a\u7269\u8054\u7f51\u5e94\u7528\u800c\u8bbe\u8ba1\uff0c\u63d0\u4f9b\u4e00\u7cfb\u5217\u6027\u80fd\u4f18\u826f\u7684\u5546\u7528\u4ea7\u54c1\u539f\u578b\u5f00\u53d1\u3002\u5b83\u7684\u6269\u5c55\u53e3\u4e0e\u4f17\u591a\u7684 Arduino \u6269\u5c55\u677f\u517c\u5bb9\uff0cIntel\u00ae Edison for Arduino \u53ef\u4ee5\u901a\u8fc7\u5f00\u6e90\u786c\u4ef6\u548c\u8f6f\u4ef6\u5f00\u53d1\u73af\u5883\u8fdb\u884c\u5feb\u901f\u65b9\u4fbf\u7684\u539f\u578b\u5f00\u53d1\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5177\u6709\u5f3a\u52b2\u6027\u80fd\u7684 Intel\u00ae Edison \u548c\u4e30\u5bcc\u7279\u6027\u7684 Grove \u7cfb\u7edf\u7684\u7ed3\u5408\n\n\n\n\n\n\n\u7269\u8054\u7f51\u9879\u76ee\u7684\u5feb\u901f\u539f\u578b\u8bbe\u8ba1\n\n\n\n\n\n\n\u652f\u6301 Arduino\u3001C/C++ \u5f00\u53d1\uff0c\u4e5f\u652f\u6301 Node.JS\uff0cPython\uff0cRTOS\uff0c\u672a\u6765\u4f1a\u652f\u6301\u53ef\u89c6\u5316\u7f16\u7a0b\n\n\n\n\n\n\n\u63d0\u4f9b\u8bbe\u5907\u5230\u8bbe\u5907\u3001\u8bbe\u5907\u5230\u4e91\u7aef\u7684\u8fde\u63a5\u6846\u67b6\uff0c\u5141\u8bb8\u591a\u8bbe\u5907\u4e4b\u95f4\u901a\u4fe1\u3001\u57fa\u4e8e\u4e91\u7684\u591a\u7528\u6237\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u670d\u52a1\u3002\n\n\n\n\n\n\n\u5177\u6709 SD \u5361\u63a5\u5934\uff0cmicor USB \u6216\u6807\u51c6\u5c3a\u5bf8\u7684 USB A \u578b\u63d2\u5ea7\uff0cMicro USB \u8bbe\u5907\uff0c6 \u8def\u6a21\u62df\u8f93\u5165\uff0c20 \u8def\u8f93\u5165\u8f93\u51fa\u5f15\u811a\uff0c\u4e00\u4e2a UART\uff0c\u4e00\u4e2a I2C\uff0c\u4e00\u4e2a ICSP \u516d\u5f15\u811a\u63a5\u5934 (SPI)\uff0c7V-15V \u76f4\u6d41\u7535\u6e90\u8f93\u5165\u63a5\u5934\u3002\n\n\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\nInter Edison For Arduino\n\n\n\n\n\n\n\n\nIntel Edison Compute module\n\n\n\n\n\n*   \n\n\nIntel Edison For Arduino\n\n\n\n\n\n\nBase Shield V2\n\n\n\n\n\n\n\n\nBase Shield V2\n(to Wiki)\n\n\n\n\n\n\nSensors\n\n\n\n\n\n\n\n\nGrove - Button\n\n\n\n\n\n*   \n\n\nGrove - Sound Sensor\n\n\n\n\n\n*   \n\n\nGrove - 3-Axis Digital Accelerometer(\u00b11.5g)\n\n\n\n\n\n*   \n\n\nGrove - Touch Sensor\n\n\n\n\n\n*   \n\n\nGrove - Light Sensor v1.2\n\n\n\n\n\n*   \n\n\nGrove - Temperature Sensor\n\n\n\n\n\n*   \n\n\nGrove - Rotary Angle Sensor(P)\n\n\n\n\n\n*   \n\n\nGrove - Piezo Vibration Sensor\n\n\n\n\n\n\nActuators\n\n\n\n\n\n\n\n\nGrove - LCD RGB Backlight\n\n\n\n\n\n*   \n\n\nGrove - Buzzer\n\n\n\n\n\n*   \n\n\nGrove - Red LED\n\n\n\n\n\n*   \n\n\nGrove - Green LED\n\n\n\n\n\n*   \n\n\nGrove - Blue LED\n\n\n\n\n\n*   \n\n\nGear Stepper Motor with Driver \n(to Arduino Tutorial)\n\n\n\n\n\n\nIntel\u00ae Edison \u5165\u95e8\u6307\u5bfc\n\n\n\u5728\u4f7f\u7528 Grove \u6a21\u5757\u4e4b\u524d\u5148\u6765\u4e86\u89e3\u4e0b Intel\u00ae Edison \u677f\uff0c\u4e5f\u53ef\u53c2\u8003 \nIntel\u00ae Edison \u5b98\u65b9\u5165\u95e8\u6307\u5bfc\n\u3002\n\n\n\u6b65\u9aa4 1: \u7ec4\u88c5\u677f\u5b50\n\n\n\u7ec4\u88c5\u8ba1\u7b97\u6a21\u5757\uff0c\u8fde\u63a5\u5f15\u811a\u548c\u63a5\u7ebf\u3002\n\n\n\n\n\u6b65\u9aa4 2: \u9009\u62e9\u64cd\u4f5c\u7cfb\u7edf\n\n\n\n\n\n\n **Windows**\n\n\n Windows 64-\u4f4d\u5b89\u88c5\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u5b89\u88c5\u9a71\u52a8\uff0c\u66f4\u65b0\u56fa\u4ef6\u5e76\u63d0\u793a\u5b89\u88c5\u5f00\u53d1\u73af\u5883\u3002\n\n\n [\u4e0b\u8f7d 64-\u4f4d\u7248\u672c](https://downloadmirror.intel.com/25384/eng/w_iot_2015.0.031.exe)\n\n\n\n\n\n **OS X** \n\n\n Mac *OS X* \u5b89\u88c5\u7a0b\u5e8f\u4f1a\u66f4\u65b0\u56fa\u4ef6\u5e76\u63d0\u793a\u5b89\u88c5\u5f00\u53d1\u73af\u5883\u3002 \n\n\n [\u4e0b\u8f7d](https://downloadmirror.intel.com/25384/eng/m_iot_dev_kit_2015.0.026.tar.gz)\n\n\n\n\n\n **Linux** \n\n\n Linux \u5b89\u88c5\u7a0b\u5e8f\u4f1a\u66f4\u65b0\u56fa\u4ef6\u5e76\u63d0\u793a\u5b89\u88c5\u5f00\u53d1\u73af\u5883\u3002 \n\n\n [\u4e0b\u8f7d](https://downloadmirror.intel.com/25384/eng/l_iot_dev_kit_2015.0.019.tar.gz)\n\n\n\n\n\u5bf9\u4e8e 32-\u4f4d windows \u64cd\u4f5c\u7cfb\u7edf\u6216\u5b89\u88c5\u7a0b\u5e8f\u51fa\u9519\u7684\u60c5\u51b5\uff0c\u4e5f\u53ef\u624b\u52a8\u5b89\u88c5\u9a71\u52a8\u6216\u5347\u7ea7\u56fa\u4ef6 :\n\n\n\n\n\n\n **Windows**\n\n\n [\u5c1d\u8bd5\u624b\u52a8\u5904\u7406](https://software.intel.com/en-us/get-started-edison-windows-32-step2)\n\n\n\n\n\n **OS X** \n\n\n [\u5c1d\u8bd5\u624b\u52a8\u5904\u7406](https://software.intel.com/en-us/installing-firmware-with-flash-tool-mac)\n\n\n\n\n\n **Linux** \n\n\n [\u5c1d\u8bd5\u624b\u52a8\u5904\u7406](https://software.intel.com/en-us/flashing-firmware-on-your-intel-edison-board-linux)\n\n\n\n\n\u6b65\u9aa4 3: \u8bbe\u7f6e\u4e32\u53e3\u7ec8\u7aef\n\n\n\u70e7\u5199\u56fa\u4ef6\u9700\u8981 \n\u4e32\u53e3\u7ec8\u7aef\u8fde\u63a5\n\n\n\u6b65\u9aa4 4: \u5c06\u677f\u5b50\u63a5\u5165\u4e92\u8054\u7f51\n\n\n\u4e0d\u7528\u4e92\u8054\u7f51\u5982\u4f55\u642d\u5efa\u4e00\u4e2a\u7269\u8054\u7f51\u7cfb\u7edf\uff1f\n\u5c06\u677f\u5b50\u63a5\u5165 wifi \u7f51\u7edc\n\u3002\n\n\n\u6b65\u9aa4 5: \u7528 Arduino IDE \u6d4b\u8bd5\n\n\n\u5b89\u88c5\u597d\u5305\u62ec Arduino IDE (\u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u70b9\u51fb**\n\u8fd9\u91cc\n**\u4e0b\u8f7d)\u5728\u5185\u7684\u5f00\u53d1\u73af\u5883\u540e\uff0c\u5373\u53ef\u5f00\u59cb\u5b9e\u8df5\u5566\u3002\u6211\u4eec\n\u5728 Intel Edison \u677f\u4e0a\u7528 Ardunio IDE \u70b9\u4eae LED \u5427\n\u3002\n\n\n\n\nGrove \u7cfb\u7edf\u5165\u95e8\u6307\u5bfc\n\n\n\u7528\u63d2\u9488\u63a5\u5934\u5c06 Grove - Base Shield \u548c Intel Edison for Arduino \u8fde\u63a5\u8d77\u6765\u3002\n\n\n\n\n\u4f7f\u7528 26AWG Grove \u7ebf\u7f06\u8fdb\u884c\u4ee5\u4e0b\u8fde\u63a5 :\n\n\n\n\n\n\n  Grove \u6a21\u5757\n\n\n\n \u8fde\u63a5\u5230\n\n\n\n\n\n Temperature\nHumidity Sensor\n\n\n\n I2C\n\n\n\n\n\n Moisture Sensor\n\n\n\n A1\n\n\n\n\n\n Light Sensor\n\n\n\n A2\n\n\n\n\n\n UV Sensor\n\n\n\n A3\n\n\n\n\n\n PIR Motion Sensor\n\n\n\n D7\n\n\n\n\n\n Encoder\n\n\n\n D2\n\n\n\n\n\n Button\n\n\n\n UART(D1)\n\n\n\n\n\n LCD RGB Backlight\n\n\n\n I2C\n\n\n\n\n\n Relay\n\n\n\n D5\n\n\n\n\n\n Servo\n\n\n\n D6\n\n\n\n\n\n Buzzer\n\n\n\n D4\n\n\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u6253\u5f00\u7f51\u9875: \nGrove_Indoor_Environment_Demo\n \u4e0b\u8f7d\u6574\u4e2a\u9879\u76ee\u3002\n\n\n\n\n\n\n\n\n\u70b9\u51fb \nTools\uff08\u5de5\u5177\uff09 \n Serial Port\uff08\u7aef\u53e3\uff09\n \u9009\u62e9 Intel Edison \u8fde\u63a5\u5230\u7684\u4e32\u53e3\u7aef\u53f7\u3002\n\n\n\n\n\n\n\n\n\n\n\u70b9\u51fb \nSketch\uff08\u9879\u76ee\uff09\nImport Library\uff08\u52a0\u8f7d\u5e93\uff09\u2026\nAdd Library\n \u5e76\u5bfc\u5165**\u6b65\u9aa4\u4e00**\u4e2d\u4e0b\u8f7d\u7684\u5e93\u6587\u4ef6\n\n\n\n\n\n\n\u70b9\u51fb \nFile (\u6587\u4ef6)\nExamples (\u793a\u4f8b)\n Grove_Indoor_Environment_Demo\n \u9009\u62e9\u793a\u4f8b\u5e76\u70b9\u51fb \nupload\n \u56fe\u6807\n\n\n\n\n\n\n\n\n\n\n\u6253\u5f00 \nSerial Monitor\uff08\u4e32\u53e3\u76d1\u89c6\u5668\uff09\n\uff0c\u5373\u53ef\u770b\u5230\u6253\u5370\u7684\u4f20\u611f\u5668\u4fe1\u606f :\n\n\n\n\n\n\n\n\n\u65cb\u8f6c\u7f16\u7801\u5668\u68c0\u67e5 LCD \u4e0a\u663e\u793a\u7684\u503c\u3002\n\n\n\n\n\n\n\n\n\u5728 \n\u201cSend TextBox\u201d\n\uff0c\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u5bf9\u4f20\u611f\u5668\u53ca\u6267\u884c\u5668\u8fdb\u884c\u64cd\u4f5c :\n\n\n\n\nset [sensor][condition:\n, \n or =][ threshold],[actuator]=[action]\n\n\n\n\n\n\n  \u793a\u4f8b\n\n\n\n \u8bf4\u660e\n\n\n\n\n\n _temp\n40, relay=1_\n\n\n\n \u5982\u679c\u6e29\u5ea6\u8d85\u8fc7 40\u2103\uff0c\u5219\u6253\u5f00\u7ee7\u7535\u5668\n\n\n\n\n\n _temp\n40, sleep=1_\n\n\n\n \u5982\u679c\u6e29\u5ea6\u8d85\u8fc7 40\u2103\uff0c\u5219\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\n\n\n\n\n\n _humi\n60, buzzer=1_\n\n\n\n \u5982\u679c\u6e7f\u5ea6\u8d85\u8fc7 60%\uff0c\u5219\u6253\u5f00\u8702\u9e23\u5668\n\n\n\n\n\n _light\n600, servo=90_\n\n\n\n \u5982\u679c\u5149\u5f3a\u8d85\u8fc7 600\uff0c\u8235\u673a\u65cb\u8f6c 90\u00b0\n\n\n\n\n\n _uv\n80, relay=0_\n\n\n\n \u5982\u679c\u7d2b\u5916\u5f3a\u5ea6\u8d85\u8fc7 80\uff0c\u5173\u95ed\u7ee7\u7535\u5668\n\n\n\n\n\n _pir=1, buzzer=1_\n\n\n\n \u5982\u679c\u68c0\u6d4b\u5230\u4eba\uff0c\u5219\u8702\u9e23\u5668\u53d1\u51fa\u8b66\u62a5\n\n\n\n\n\n _ms\n40, relay=1_\n\n\n\n \u5982\u679c\u6e7f\u5ea6\u8d85\u8fc7 40\uff0c\u5219\u7ee7\u7535\u5668\u6253\u5f00\n\n\n\n\n\n _ssid=name, psw=password_\n\n\n\n \u8bbe\u7f6e WiFi \u7684 SSID \u548c\u5bc6\u7801\uff0c\u53ef\u6253\u5f00 web \u6d4f\u89c8\u5668\u8fdb\u5165\u4e32\u53e3\u76d1\u89c6\u5668\u6216 LCD \u4e0a\u663e\u793a\u7684 IP \u5730\u5740\uff0c\u9ed8\u8ba4\u7aef\u53e3\u662f 88\uff0c\u5982\uff1a192.168.1.101:88\n\n\n\n\n\n\nNote\n\n\n\u547d\u4ee4\u5e94\u5f53\u4ee5 \u2018/n\u2019 \u7ed3\u5c3e\uff0c\u6240\u4ee5\u5728\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\u9700\u8981\u9009\u4e2d \n\u201cNewLine\u201d\n\u3002\n\u4e00\u4e2a\u6267\u884c\u5668\u53ea\u80fd\u88ab\u4e00\u4e2a\u4f20\u611f\u5668\u63a7\u5236\uff0c\u5982\u679c A \u4f20\u611f\u5668\u60f3\u8981\u63a7\u5236\u6b63\u5728\u88ab B \u4f20\u611f\u5668\u63a7\u5236\u7684\u6267\u884c\u5668\uff0c\u9700\u8981\u5148\u5c06 B \u4f20\u611f\u5668\u8bbe\u7f6e\u4e3a\u4f11\u7720\u72b6\u6001\u3002\n\n\n\n\n\n\n\n\nWiFi\u8fde\u63a5\u3002\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u8bbe\u7f6e SSID \u548c\u5bc6\u7801\uff0c\u67e5\u770b LCD \u6216\u4e32\u53e3\u76d1\u89c6\u5668\u4e0a\u663e\u793a\u7684\u672c\u5730 IP\uff0c\u5728\u540c\u4e00\u5c40\u57df\u7f51\u4e2d\u7684\u53e6\u4e00\u4e2a\u8bbe\u5907\u4e0a\u6253\u5f00 web \u6d4f\u89c8\u5668\uff0c\u952e\u5165\u4e0a\u9762\u7684 IP \u5730\u5740\uff0c\u5373\u53ef\u770b\u5230\u4f20\u611f\u5668\u7684\u6570\u503c\u3002\n\n\n\n\n\u6ce8\u610f\uff1a\u8bbf\u95ee web \u670d\u52a1\u5668\u65f6\uff0c\u9700\u8981\u5728 IP \u5730\u5740\u540e\u589e\u52a0\u7aef\u53e3\u53f7\uff0c\u5982 172.20.10.2:88\u3002\n\n\n\n\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u5165\u95e8\u6307\u5bfc]\n \nEdison Getting Started Guide\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nIntel Edison Software \n Documentation", 
            "title": "Grove IoT Developer Kit Microsoft Azure Edition"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#intel-edison-for-arduino", 
            "text": "Intel\u00ae Edison compute module \u4e3a\u4e13\u4e1a\u521b\u5ba2\u548c\u4e00\u4e9b\u5de5\u4e1a\u7269\u8054\u7f51\u5e94\u7528\u800c\u8bbe\u8ba1\uff0c\u63d0\u4f9b\u4e00\u7cfb\u5217\u6027\u80fd\u4f18\u826f\u7684\u5546\u7528\u4ea7\u54c1\u539f\u578b\u5f00\u53d1\u3002\u5b83\u7684\u6269\u5c55\u53e3\u4e0e\u4f17\u591a\u7684 Arduino \u6269\u5c55\u677f\u517c\u5bb9\uff0cIntel\u00ae Edison for Arduino \u53ef\u4ee5\u901a\u8fc7\u5f00\u6e90\u786c\u4ef6\u548c\u8f6f\u4ef6\u5f00\u53d1\u73af\u5883\u8fdb\u884c\u5feb\u901f\u65b9\u4fbf\u7684\u539f\u578b\u5f00\u53d1\u3002", 
            "title": "Intel\u00ae Edison For Arduino"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#_1", 
            "text": "\u5177\u6709\u5f3a\u52b2\u6027\u80fd\u7684 Intel\u00ae Edison \u548c\u4e30\u5bcc\u7279\u6027\u7684 Grove \u7cfb\u7edf\u7684\u7ed3\u5408    \u7269\u8054\u7f51\u9879\u76ee\u7684\u5feb\u901f\u539f\u578b\u8bbe\u8ba1    \u652f\u6301 Arduino\u3001C/C++ \u5f00\u53d1\uff0c\u4e5f\u652f\u6301 Node.JS\uff0cPython\uff0cRTOS\uff0c\u672a\u6765\u4f1a\u652f\u6301\u53ef\u89c6\u5316\u7f16\u7a0b    \u63d0\u4f9b\u8bbe\u5907\u5230\u8bbe\u5907\u3001\u8bbe\u5907\u5230\u4e91\u7aef\u7684\u8fde\u63a5\u6846\u67b6\uff0c\u5141\u8bb8\u591a\u8bbe\u5907\u4e4b\u95f4\u901a\u4fe1\u3001\u57fa\u4e8e\u4e91\u7684\u591a\u7528\u6237\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u670d\u52a1\u3002    \u5177\u6709 SD \u5361\u63a5\u5934\uff0cmicor USB \u6216\u6807\u51c6\u5c3a\u5bf8\u7684 USB A \u578b\u63d2\u5ea7\uff0cMicro USB \u8bbe\u5907\uff0c6 \u8def\u6a21\u62df\u8f93\u5165\uff0c20 \u8def\u8f93\u5165\u8f93\u51fa\u5f15\u811a\uff0c\u4e00\u4e2a UART\uff0c\u4e00\u4e2a I2C\uff0c\u4e00\u4e2a ICSP \u516d\u5f15\u811a\u63a5\u5934 (SPI)\uff0c7V-15V \u76f4\u6d41\u7535\u6e90\u8f93\u5165\u63a5\u5934\u3002", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#_2", 
            "text": "", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#inter-edison-for-arduino", 
            "text": "Intel Edison Compute module   \n*     Intel Edison For Arduino", 
            "title": "Inter Edison For Arduino"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#base-shield-v2", 
            "text": "Base Shield V2 (to Wiki)", 
            "title": "Base Shield V2"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#sensors", 
            "text": "Grove - Button   \n*     Grove - Sound Sensor   \n*     Grove - 3-Axis Digital Accelerometer(\u00b11.5g)   \n*     Grove - Touch Sensor   \n*     Grove - Light Sensor v1.2   \n*     Grove - Temperature Sensor   \n*     Grove - Rotary Angle Sensor(P)   \n*     Grove - Piezo Vibration Sensor", 
            "title": "Sensors"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#actuators", 
            "text": "Grove - LCD RGB Backlight   \n*     Grove - Buzzer   \n*     Grove - Red LED   \n*     Grove - Green LED   \n*     Grove - Blue LED   \n*     Gear Stepper Motor with Driver  (to Arduino Tutorial)", 
            "title": "Actuators"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#intel-edison", 
            "text": "\u5728\u4f7f\u7528 Grove \u6a21\u5757\u4e4b\u524d\u5148\u6765\u4e86\u89e3\u4e0b Intel\u00ae Edison \u677f\uff0c\u4e5f\u53ef\u53c2\u8003  Intel\u00ae Edison \u5b98\u65b9\u5165\u95e8\u6307\u5bfc \u3002", 
            "title": "Intel\u00ae Edison \u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#1", 
            "text": "\u7ec4\u88c5\u8ba1\u7b97\u6a21\u5757\uff0c\u8fde\u63a5\u5f15\u811a\u548c\u63a5\u7ebf\u3002", 
            "title": "\u6b65\u9aa4 1: \u7ec4\u88c5\u677f\u5b50"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#2", 
            "text": "**Windows**   Windows 64-\u4f4d\u5b89\u88c5\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u5b89\u88c5\u9a71\u52a8\uff0c\u66f4\u65b0\u56fa\u4ef6\u5e76\u63d0\u793a\u5b89\u88c5\u5f00\u53d1\u73af\u5883\u3002   [\u4e0b\u8f7d 64-\u4f4d\u7248\u672c](https://downloadmirror.intel.com/25384/eng/w_iot_2015.0.031.exe)    **OS X**    Mac *OS X* \u5b89\u88c5\u7a0b\u5e8f\u4f1a\u66f4\u65b0\u56fa\u4ef6\u5e76\u63d0\u793a\u5b89\u88c5\u5f00\u53d1\u73af\u5883\u3002    [\u4e0b\u8f7d](https://downloadmirror.intel.com/25384/eng/m_iot_dev_kit_2015.0.026.tar.gz)    **Linux**    Linux \u5b89\u88c5\u7a0b\u5e8f\u4f1a\u66f4\u65b0\u56fa\u4ef6\u5e76\u63d0\u793a\u5b89\u88c5\u5f00\u53d1\u73af\u5883\u3002    [\u4e0b\u8f7d](https://downloadmirror.intel.com/25384/eng/l_iot_dev_kit_2015.0.019.tar.gz)  \u5bf9\u4e8e 32-\u4f4d windows \u64cd\u4f5c\u7cfb\u7edf\u6216\u5b89\u88c5\u7a0b\u5e8f\u51fa\u9519\u7684\u60c5\u51b5\uff0c\u4e5f\u53ef\u624b\u52a8\u5b89\u88c5\u9a71\u52a8\u6216\u5347\u7ea7\u56fa\u4ef6 :     **Windows**   [\u5c1d\u8bd5\u624b\u52a8\u5904\u7406](https://software.intel.com/en-us/get-started-edison-windows-32-step2)    **OS X**    [\u5c1d\u8bd5\u624b\u52a8\u5904\u7406](https://software.intel.com/en-us/installing-firmware-with-flash-tool-mac)    **Linux**    [\u5c1d\u8bd5\u624b\u52a8\u5904\u7406](https://software.intel.com/en-us/flashing-firmware-on-your-intel-edison-board-linux)", 
            "title": "\u6b65\u9aa4 2: \u9009\u62e9\u64cd\u4f5c\u7cfb\u7edf"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#3", 
            "text": "\u70e7\u5199\u56fa\u4ef6\u9700\u8981  \u4e32\u53e3\u7ec8\u7aef\u8fde\u63a5", 
            "title": "\u6b65\u9aa4 3: \u8bbe\u7f6e\u4e32\u53e3\u7ec8\u7aef"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#4", 
            "text": "\u4e0d\u7528\u4e92\u8054\u7f51\u5982\u4f55\u642d\u5efa\u4e00\u4e2a\u7269\u8054\u7f51\u7cfb\u7edf\uff1f \u5c06\u677f\u5b50\u63a5\u5165 wifi \u7f51\u7edc \u3002", 
            "title": "\u6b65\u9aa4 4: \u5c06\u677f\u5b50\u63a5\u5165\u4e92\u8054\u7f51"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#5-arduino-ide", 
            "text": "\u5b89\u88c5\u597d\u5305\u62ec Arduino IDE (\u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u70b9\u51fb** \u8fd9\u91cc **\u4e0b\u8f7d)\u5728\u5185\u7684\u5f00\u53d1\u73af\u5883\u540e\uff0c\u5373\u53ef\u5f00\u59cb\u5b9e\u8df5\u5566\u3002\u6211\u4eec \u5728 Intel Edison \u677f\u4e0a\u7528 Ardunio IDE \u70b9\u4eae LED \u5427 \u3002", 
            "title": "\u6b65\u9aa4 5: \u7528 Arduino IDE \u6d4b\u8bd5"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#grove", 
            "text": "\u7528\u63d2\u9488\u63a5\u5934\u5c06 Grove - Base Shield \u548c Intel Edison for Arduino \u8fde\u63a5\u8d77\u6765\u3002   \u4f7f\u7528 26AWG Grove \u7ebf\u7f06\u8fdb\u884c\u4ee5\u4e0b\u8fde\u63a5 :      Grove \u6a21\u5757   \u8fde\u63a5\u5230    Temperature Humidity Sensor   I2C    Moisture Sensor   A1    Light Sensor   A2    UV Sensor   A3    PIR Motion Sensor   D7    Encoder   D2    Button   UART(D1)    LCD RGB Backlight   I2C    Relay   D5    Servo   D6    Buzzer   D4", 
            "title": "Grove \u7cfb\u7edf\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#_3", 
            "text": "\u6253\u5f00\u7f51\u9875:  Grove_Indoor_Environment_Demo  \u4e0b\u8f7d\u6574\u4e2a\u9879\u76ee\u3002     \u70b9\u51fb  Tools\uff08\u5de5\u5177\uff09   Serial Port\uff08\u7aef\u53e3\uff09  \u9009\u62e9 Intel Edison \u8fde\u63a5\u5230\u7684\u4e32\u53e3\u7aef\u53f7\u3002      \u70b9\u51fb  Sketch\uff08\u9879\u76ee\uff09 Import Library\uff08\u52a0\u8f7d\u5e93\uff09\u2026 Add Library  \u5e76\u5bfc\u5165**\u6b65\u9aa4\u4e00**\u4e2d\u4e0b\u8f7d\u7684\u5e93\u6587\u4ef6    \u70b9\u51fb  File (\u6587\u4ef6) Examples (\u793a\u4f8b)  Grove_Indoor_Environment_Demo  \u9009\u62e9\u793a\u4f8b\u5e76\u70b9\u51fb  upload  \u56fe\u6807      \u6253\u5f00  Serial Monitor\uff08\u4e32\u53e3\u76d1\u89c6\u5668\uff09 \uff0c\u5373\u53ef\u770b\u5230\u6253\u5370\u7684\u4f20\u611f\u5668\u4fe1\u606f :     \u65cb\u8f6c\u7f16\u7801\u5668\u68c0\u67e5 LCD \u4e0a\u663e\u793a\u7684\u503c\u3002     \u5728  \u201cSend TextBox\u201d \uff0c\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u5bf9\u4f20\u611f\u5668\u53ca\u6267\u884c\u5668\u8fdb\u884c\u64cd\u4f5c :   set [sensor][condition: ,   or =][ threshold],[actuator]=[action]      \u793a\u4f8b   \u8bf4\u660e    _temp 40, relay=1_   \u5982\u679c\u6e29\u5ea6\u8d85\u8fc7 40\u2103\uff0c\u5219\u6253\u5f00\u7ee7\u7535\u5668    _temp 40, sleep=1_   \u5982\u679c\u6e29\u5ea6\u8d85\u8fc7 40\u2103\uff0c\u5219\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c    _humi 60, buzzer=1_   \u5982\u679c\u6e7f\u5ea6\u8d85\u8fc7 60%\uff0c\u5219\u6253\u5f00\u8702\u9e23\u5668    _light 600, servo=90_   \u5982\u679c\u5149\u5f3a\u8d85\u8fc7 600\uff0c\u8235\u673a\u65cb\u8f6c 90\u00b0    _uv 80, relay=0_   \u5982\u679c\u7d2b\u5916\u5f3a\u5ea6\u8d85\u8fc7 80\uff0c\u5173\u95ed\u7ee7\u7535\u5668    _pir=1, buzzer=1_   \u5982\u679c\u68c0\u6d4b\u5230\u4eba\uff0c\u5219\u8702\u9e23\u5668\u53d1\u51fa\u8b66\u62a5    _ms 40, relay=1_   \u5982\u679c\u6e7f\u5ea6\u8d85\u8fc7 40\uff0c\u5219\u7ee7\u7535\u5668\u6253\u5f00    _ssid=name, psw=password_   \u8bbe\u7f6e WiFi \u7684 SSID \u548c\u5bc6\u7801\uff0c\u53ef\u6253\u5f00 web \u6d4f\u89c8\u5668\u8fdb\u5165\u4e32\u53e3\u76d1\u89c6\u5668\u6216 LCD \u4e0a\u663e\u793a\u7684 IP \u5730\u5740\uff0c\u9ed8\u8ba4\u7aef\u53e3\u662f 88\uff0c\u5982\uff1a192.168.1.101:88   Note  \u547d\u4ee4\u5e94\u5f53\u4ee5 \u2018/n\u2019 \u7ed3\u5c3e\uff0c\u6240\u4ee5\u5728\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\u9700\u8981\u9009\u4e2d  \u201cNewLine\u201d \u3002\n\u4e00\u4e2a\u6267\u884c\u5668\u53ea\u80fd\u88ab\u4e00\u4e2a\u4f20\u611f\u5668\u63a7\u5236\uff0c\u5982\u679c A \u4f20\u611f\u5668\u60f3\u8981\u63a7\u5236\u6b63\u5728\u88ab B \u4f20\u611f\u5668\u63a7\u5236\u7684\u6267\u884c\u5668\uff0c\u9700\u8981\u5148\u5c06 B \u4f20\u611f\u5668\u8bbe\u7f6e\u4e3a\u4f11\u7720\u72b6\u6001\u3002     WiFi\u8fde\u63a5\u3002\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u8bbe\u7f6e SSID \u548c\u5bc6\u7801\uff0c\u67e5\u770b LCD \u6216\u4e32\u53e3\u76d1\u89c6\u5668\u4e0a\u663e\u793a\u7684\u672c\u5730 IP\uff0c\u5728\u540c\u4e00\u5c40\u57df\u7f51\u4e2d\u7684\u53e6\u4e00\u4e2a\u8bbe\u5907\u4e0a\u6253\u5f00 web \u6d4f\u89c8\u5668\uff0c\u952e\u5165\u4e0a\u9762\u7684 IP \u5730\u5740\uff0c\u5373\u53ef\u770b\u5230\u4f20\u611f\u5668\u7684\u6570\u503c\u3002   \u6ce8\u610f\uff1a\u8bbf\u95ee web \u670d\u52a1\u5668\u65f6\uff0c\u9700\u8981\u5728 IP \u5730\u5740\u540e\u589e\u52a0\u7aef\u53e3\u53f7\uff0c\u5982 172.20.10.2:88\u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Grove_IoT_Developer_Kit-Microsoft_Azure_Edition/#_4", 
            "text": "[\u5165\u95e8\u6307\u5bfc]   Edison Getting Started Guide    [\u5176\u4ed6\u8d44\u6e90]   Intel Edison Software   Documentation", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_IoT_based_on_Raspberry_Pi/", 
            "text": "\u5bf9\u4e8e\u5f88\u591a\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u5728 Raspberry Pi \u4e0a\u642d\u5efa IOT \u7269\u8054\u7f51\u9879\u76ee\u5e76\u975e\u6613\u4e8b\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u6d89\u53ca\u5230\u5927\u91cf\u786c\u4ef6\u8fde\u63a5\u548c\u8f6f\u4ef6\u7f16\u7a0b\u3002Seeed \u548c Microsoft \u901a\u8fc7\u5408\u4f5c\u63a8\u51fa Microsoft IoT Grove Kit\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u8270\u96be\u7684\u6311\u6218\u53d8\u5f97\u8f7b\u677e\u3002\n\n\n\u5957\u4ef6\u5305\u542b GrovePi+ \u6a21\u5757\uff0c\u8be5\u6a21\u5757\u5b8c\u5168\u53ef\u4ee5\u517c\u5bb9 RaspberryPi 3 \u548c Raspberry Pi 2 (\u4e24\u8005\u90fd\u662f\u91c7\u7528 Windows 10 IoT Core)\uff0c\u6709\u4e86\u7b80\u4fbf\u6613\u7528\u7684 Grove \u7cfb\u7edf\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u975e\u5e38\u987a\u5229\u7684\u901a\u8fc7 GrovePi+ \u5f00\u53d1\u677f\u5c06 15 \u4e2a Grove \u6a21\u5757\u4e0e Raspberry Pi \u8fde\u63a5\u5728\u4e00\u8d77!\n\n\n\u9664\u4e86\u9ad8\u6027\u80fd\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\uff0c\u8be5\u5957\u4ef6\u8fd8\u5305\u542b\u4e00\u4e2a 5 \u82f1\u5bf8 HDMI \u663e\u793a\u5c4f \u548c\u4e00\u4e2a\u5e26\u80cc\u5149\u7684 RGB LCD\u3002Microsoft IoT Grove Kit \u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u63a2\u7d22\u7269\u8054\u7f51\u4e16\u754c\u7684\u5e73\u53f0\u3002\n\n\n\u8bf7\u6ce8\u610f\u6b64\u5957\u4ef6\u4e0d\u542b Raspberry Pi \u5f00\u53d1\u677f\uff0c\u5982\u9700\u8981\u53ef\u70b9\u51fb \n\u8fd9\u91cc\n \u8d2d\u4e70\n\n\n\n\nNote\n\n\nGrovePi+ \u548c\u4e00\u4e9b\u4ee3\u7801\u662f\u7531 Dexter Industry \u8bbe\u8ba1\u7684\u3002\u70b9\u51fb\u83b7\u53d6\u66f4\u591a\u5173\u4e8e \nDexter Industry\n \u7684\u4fe1\u606f\u3002\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\nGrovePi+ \u5bb9\u6613\u4e0a\u624b\uff0c\u5e76\u4e14\u517c\u5bb9 Raspberry Pi B/B+/A+/\n\n\nGrove \u6a21\u5757\u5373\u63d2\u5373\u7528\uff0c\u53ef\u5feb\u901f\u7f16\u7a0b\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\nSKU\n\n\n\u4ea7\u54c1\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\u4f20\u9001\u95e8\n\n\n\n\n\n\n\n\n\n\n103010002\n\n\nGrovePi+\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n104990243\n\n\n5 Inch HDMI Display with USB TouchScreen\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n103020005\n\n\nGrove - Relay\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n101020011\n\n\nGrove - Temp\nHumi Sensor\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n101020010\n\n\nGrove - Ultrasonic Ranger\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n104020006\n\n\nGrove LED Bar v2.0\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n101020048\n\n\nGrove - Rotary Angle Sensor(P)\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n107020000\n\n\nGrove - Buzzer\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n101020023\n\n\nGrove - Sound Sensor\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n101020014\n\n\nGrove - Light Sensor v1.2\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n101020003\n\n\nGrove - Button\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n104030001\n\n\nGrove - LCD RGB Backlight\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n109990056\n\n\nHDMI Cable\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n321010007\n\n\nMicro USB Cable - 48cm\n\n\n1\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\nGrovePi+ \u786c\u4ef6\u8fde\u63a5\n\n\n1.1   \u5c06 GrovePi+ \u8fde\u63a5\u81f3 Raspberry Pi\n\n\n\u9996\u5148\u5c06 GrovePi+ \u4e0e Raspberry Pi \u7ec4\u88c5\u5728\u4e00\u8d77\u3002GrovePi+ \u5982\u4e0b\u56fe\u6240\u793a\u5806\u53e0\u5728 Raspberry Pi \u4e0a\u3002\n\n\n\n\n\u786e\u4fdd\u4e24\u8005\u7684\u5f15\u811a\u548c\u5b54\u6b63\u786e\u5bf9\u9f50\n\n\nRaspberry Pi \u4e0a\u7535\n\n\n\u8981\u4e3a GrovePi+ \u548c Raspberry Pi \u4f9b\u7535\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Raspberry Pi \u4e0a\u7684 micro USB \u7535\u6e90\u7aef\u53e3\u3002\u8bf7\u8bb0\u4f4f\u4f7f\u7528\u80fd\u591f\u5728 5V \u4f9b\u7535 2A \u7684\u7535\u6e90\u9002\u914d\u5668\u3002\u5982\u679c\u60a8\u60f3\u5728\u72ec\u7acb\u914d\u7f6e\u4e0b\u8fd0\u884c GrovePi+\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u4e00\u4e2a USB \u79fb\u52a8\u7535\u6e90(\u5145\u7535\u5b9d)\u3002\n\n\n\n\n\u4e3a Raspberry Pi \u5b89\u88c5 GrovePi+ C# library\n\n\nGrovePi+ \u53ef\u4ee5\u7528 C# \u8fdb\u884c\u7f16\u7a0b\uff0c\u4f46\u9996\u5148\u5e94\u8be5\u5b89\u88c5 GrovePi+ \u7684 Windows 10 IoT C# \u9a71\u52a8\u5e93\u3002\u6709\u4e24\u79cd\u65b9\u6cd5 : \u5b89\u88c5 NuGet package \u548c\u4f7f\u7528 Dexter \u63d0\u4f9b\u7684 GrovePi C# \u5e93\u4ee3\u7801\u3002\n\n\n\u5b89\u88c5 NuGet package\n\n\n\u5f53\u524d\u7248\u672c\u7684 GrovePi+ NuGet package \u53ef\u7528\u3002\u8981\u5b89\u88c5\u9002\u7528\u4e8e Windows IoT \u7684 GrovePi+\uff0c\u8bf7\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\u3002\n\n\n\u6b65\u9aa4 1\n\n\n\u4ece Tools \u4e2d\u9009\u62e9 \nLibrary Package Manager\n\uff0c\u7136\u540e\u5355\u51fb \nPackage Manager Console\n\u3002\n\n\n\n\nPackage Manager Console window\n \u7a97\u53e3\u663e\u793a\n\n\n\n\n\u6b65\u9aa4 2\n\n\n\u5728 Package Manager Console \u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\n\n\nPM\n Install-Package GrovePi+\n\n\n\n\n\n\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n.\n\n\n\u4f7f\u7528 GrovePi C# \u5e93\u4ee3\u7801\n\n\n\u5982\u679c\u60a8\u65e0\u6cd5\u6210\u529f\u5b89\u88c5 GrovePi+ NuGet package\uff0c\u8bf7\u5355\u51fb \n\u8fd9\u91cc\n \u4e0b\u8f7d\u5e93\u4ee3\u7801\u3002\n\n\n\u6b65\u9aa4 1\n\n\n\u5c06\u4e24\u4e2a C# \u5e93\u9879\u76ee \u201cGrovePi+\u201d \u548c \u201cDriver\u201d \u79fb\u52a8\u5230\u60a8\u7684\u9879\u76ee\u6240\u5728\u7684\u6587\u4ef6\u5939\u4e2d\u3002\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 \nSolution Explorer\n \u4e2d\u3002\u4f8b\u5982\uff0c\u53f3\u952e\u5355\u51fb \nSolution Explorer\n \u4e2d\u7684 \u201cGrovePiExamples \u201d\uff0c\nAdd | Existing Project\n\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\n\n\n\n\u628a \u201cGrovePi+\u201d \u548c \u201cDriver\u201d \u6dfb\u52a0\u5230 \nSolution Explorer\n\u3002\n\n\n\n\n\u6b65\u9aa4 2\n\n\n\u5c06 C# library \u8bbe\u7f6e\u4e3a\u53c2\u8003\u9879\u76ee\u3002\u53f3\u952e\u5355\u51fb \nReferences\n\uff0c\u7136\u540e\u5355\u51fb \nAdd References\n\u3002\n\n\n\n\n\u70b9\u51fb \nProjects | Solution\n\uff0c \u52fe\u9009\u4e0b\u9762\u7ea2\u6846\u4e2d\u7684\u590d\u9009\u6846\uff0c\u7136\u540e\u70b9\u51fb \nOK\n.\n**\n\n\n\n\u73b0\u5728\u60a8\u5df2\u7ecf\u6210\u529f\u5b89\u88c5\u4e86 GrovePi+ C# library\u3002\n\n\n\u4f20\u611f\u5668\u90fd\u53ef\u4ee5\u901a\u8fc7 DeviceFactory \u83b7\u5f97\u3002\n\n\n\u793a\u4f8b\n\n\n\u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528\u5e93\u7684\u793a\u4f8b :   \n\n\n\n\n\u6d4b\u91cf\u8ddd\u79bb\n\n\n\n\n\u5c06 Ultrasonic sensor \u8fde\u63a5\u5230 \nD2\n\n\nvar distance = DeviceFactory.Build.UltraSonicSensor(Pin.DigitalPin2).MeasureInCentimeters();\n\n\n\n\n\n\n\n\n\n\u5728\u5c4f\u5e55\u4e0a\u663e\u793a Hello World\n\n\nDeviceFactory.Build.RgbLcdDisplay().SetText(\"Hello World\").SetBacklightRgb(0, 255, 255);\n\n\n\n\n\n\n\u9e23\u7b1b\n\n\n\n\n\n\n\u5c06 buzzer \u8fde\u63a5\u5230 \nD2\n\n\nDeviceFactory.Build.Buzzer(Pin.DigitalPin2).ChangeState(SensorStatus.On);\n\n\n\n\n\n\u5728 Rpi3 \u4e0a\u8fd0\u884c Win10 IoT \u793a\u4f8b\n\n\n\u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u793a\u4f8b\u9879\u76ee\u5217\u8868\uff0c\u5c55\u793a\u4e86\u7528 Raspberry Pi \u5f00\u59cb\u4e00\u4e2a\u9879\u76ee\u662f\u591a\u4e48\u5bb9\u6613\u3002\u8fd9\u4e9b Raspberry Pi \u9879\u76ee\u5c06\u4f7f\u7528\u65b9\u4fbf\u7684 Grove \u7cfb\u5217\u4f20\u611f\u5668\u4e0e\u5f3a\u5927\u7684 Raspberry Pi \u7ed3\u5408\u5728\u4e00\u8d77\u3002\n\n\n\u60a8\u53ef\u4ee5\u70b9\u51fb \n\u8fd9\u91cc\n \u4e0b\u8f7d\u9002\u7528\u4e8e win10 \u7684 GrovePi+ Example \u4ee3\u7801\u3002\u60a8\u9700\u8981\u70b9\u51fb\u53f3\u4fa7\u7684\u7eff\u8272\u6309\u94ae \nClone or download\n\uff0c\u7136\u540e\u9009\u62e9 \nDownload ZIP\n\uff0c\u7136\u540e\u9700\u8981\u9009\u62e9\u4f4d\u7f6e\u91ca\u653e\u538b\u7f29\u6587\u4ef6\u3002\u4f7f\u7528 Visual Studio 2015 \u6253\u5f00 GrovePiExamples(win10).sln\uff0c\u53ef\u4ee5\u770b\u5230\u5728 Solution Explorer \u4e2d\u6709 12 \u4e2a\u9879\u76ee\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\n\n\n\u9996\u5148\u5efa\u7acb\u8d77 \nGrovePi+\n \u9879\u76ee\uff0c\u8fd9\u662f\u56e0\u4e3a\u5176\u4ed6\u9879\u76ee\u90fd\u662f\u5efa\u7acb\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u7684\u3002\n\n\n\u793a\u4f8b : \nHello World from RGB LCD\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u662f\u60a8\u4f7f\u7528 GrovePi+ \u7684\u7b2c\u4e00\u4e2a\u9879\u76ee\u3002GrovePi+ Starter Kit \u4e2d\u63d0\u4f9b\u4e86\u8be5\u9879\u76ee\u4e2d\u4f1a\u4f7f\u7528\u5230\u7684\u6240\u6709\u90e8\u4ef6\u3002\u638c\u63e1\u4e86\u8fd9\u4e2a\u9879\u76ee\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u66f4\u590d\u6742\u7684\u9879\u76ee\uff0c\u4f8b\u5982\u5c06\u663e\u793a\u5668\u6216\u5176\u4ed6\u4f20\u611f\u5668\u8fde\u63a5\u5230 Raspberry Pi\u3002\n\n\n\n\n\u6b65\u9aa4 1 :\n \u5c06 HelloWorld(LCD) \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2 :\n \u786c\u4ef6\u8fde\u63a5\u3002\n\n\n\n\n\u901a\u8fc7 Grove \u7ebf\u7f06\u5c06 RGB LCD \u8fde\u63a5\u5230 \nI2C-1\n \u7aef\u53e3\u5e76\u7ed9 Raspberry Pi \u4e0a\u7535\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 3 :\n  \u914d\u7f6e\u60a8\u7684 app\u3002\n\n\n\n\n1)  \u5728 Visual Studio \u4e2d\u6253\u5f00 app\uff0c\u5728 toolbar \u4e0b\u62c9\u83dc\u5355\u4e2d\u8bbe\u7f6e \narchitecture\n\uff0c\u9009\u62e9 \nARM\n\u3002\n\n\n2)  \u5728 Visual Studio \u7684 toolbar \u4e2d\uff0c\u5355\u51fb \nLocal Machine\n \u4e0b\u62c9\u5217\u8868\u5e76\u9009\u62e9 \nRemote Machine\n\u3002\n\n\n\n\n3)  \u6b64\u65f6 Visual Studio \u5c06\u663e\u793a Remote Connections \u5bf9\u8bdd\u6846\u3002\u5982\u679c\u60a8\u4ee5\u524d\u4f7f\u7528 \nPowerShell\n \u4e3a\u60a8\u7684\u8bbe\u5907\u8bbe\u7f6e\u4e86\u552f\u4e00\u540d\u79f0\uff0c\u5219\u53ef\u4ee5\u5728\u6b64\u8f93\u5165(\u5728\u672c\u4f8b\u4e2d\u4f7f\u7528\u7684\u662f\u6211\u81ea\u5df1\u7684\u8bbe\u5907)\u3002\u5426\u5219\uff0c\u8bf7\u4f7f\u7528 Windows IoT Core \u8bbe\u5907\u7684 IP \u5730\u5740\u3002 \u8f93\u5165\u8bbe\u5907 name/IP \u540e\uff0c\u5728 Windows Authentication \u9009\u9879\u4e2d\u9009\u62e9 \nNone\n\uff0c\u7136\u540e\u5355\u51fb \nSelect\n\u3002\n\n\n\n\n4)  \u60a8\u53ef\u4ee5\u901a\u8fc7\u8df3\u8f6c\u5230 project properties (\u5728 Solution Explorer \u4e2d\u9009\u62e9 Properties) \u5e76\u9009\u62e9\u5de6\u4fa7\u7684 \nDebug\n \u9009\u9879\u5361\u6765\u9a8c\u8bc1\u6216\u4fee\u6539\u8fd9\u4e9b\u503c\u3002\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 \nF5\n\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nHelloWorld app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 Grove RGB LCD \u4e2d\u770b\u5230 HelloWorld\u3002\n\n\nGrove - Rotary Angle Sensor\n\n\n\u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002\n\n\n\n\n\u6b65\u9aa4 1 :\n \u5c06 Grove - Rotary Angle Sensor \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2 :\n \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove Angle Sensor \u8fde\u63a5\u5230 \nA0\n \u7aef\u53e3\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002\n\n\n\u6b65\u9aa4 3 :\n \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002\n\n\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nGrove - Rotary Angle Sensor app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230 Grove - Rotary Angle Sensor \u7684\u503c\u3002\n\n\nGrove - LED Bar\n\n\n\u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002\n\n\n\n\n\u6b65\u9aa4 1 :\n \u5c06 Grove - LED Bar \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2 :\n \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove Led Bar \u8fde\u63a5\u5230 \nD5\n \u7aef\u53e3\u3002\n\n\n\u6b65\u9aa4 3 :\n \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002\n\n\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nGrove - LED Bar app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u770b\u5230 Grove - LED Bar \u88ab\u5faa\u73af\u70b9\u4eae\u3002\n\n\nGrove - Light Sensor\n\n\n\u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002\n\n\n\n\n\u6b65\u9aa4 1\n: \u5c06 Grove - Light Sensor \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2\n: \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Light Sensor \u8fde\u63a5\u5230 \nA2\n \u7aef\u53e3\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002\n\n\n\u6b65\u9aa4 3\n: \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002\n\n\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nGrove - Light Sensor app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230 Grove - Light Sensor \u7684\u503c\u3002\n\n\nGrove - Relay\n\n\n\u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002\n\n\n\n\n\u6b65\u9aa4 1\n: \u5c06 Grove - Relay \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2\n: \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Relay \u8fde\u63a5\u5230 \nD2\n \u7aef\u53e3\u3002\n\n\n\u6b65\u9aa4 3\n: \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002\n\n\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nGrove - Relay app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u770b\u5230 Grove - Relay \u5728\u6bcf\u9694 1s \u4e0d\u505c\u5730\u542f\u52a8\u548c\u5173\u95ed\u3002\n\n\nGrove - Sound Sensor\n\n\n\u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002\n\n\n\n\n\u6b65\u9aa4 1\n: \u5c06 Grove - Sound Sensor \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2\n: \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Sound Sensor \u8fde\u63a5\u5230 \nA1\n \u7aef\u53e3\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002\n\n\n\u6b65\u9aa4 3\n: \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002\n\n\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nGrove - Sound Sensor app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230 Grove - Sound Sensor \u7684\u503c\u3002\n\n\nGrove - Temperature and Humidity Sensor\n\n\n\u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002\n\n\n\n\n\u6b65\u9aa4 1\n: \u5c06 Grove - Temperature and Humidity Sensor \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2\n: \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Temperature and Humidity Sensor \u8fde\u63a5\u5230 **D3**\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002\n\n\n\u6b65\u9aa4 3\n: \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002\n\n\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nGrove - Temperature and Humidity Sensor app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230\u6e29\u6e7f\u5ea6\u7684\u503c\u3002\n\n\nGrove - Ultrasonic Ranger\n\n\n\u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002\n\n\n\n\n\u6b65\u9aa4 1\n: \u5c06 Grove - Ultrasonic Ranger \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2\n: \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Ultrasonic Ranger \u8fde\u63a5\u5230 \nD4\n \u7aef\u53e3\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002\n\n\n\u6b65\u9aa4 3\n: \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002\n\n\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nGrove - Ultrasonic Ranger app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230\u8ddd\u79bb\u503c\u3002\n\n\nHome Weather Display\n\n\n\u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002\n\n\n\n\n\u6b65\u9aa4 1\n: \u5c06 Home Weather Display \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2\n: \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Temperature and Humidity Sensor \u8fde\u63a5\u5230 \nD3\n \u7aef\u53e3\uff0c\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 RGB LCD \u8fde\u63a5\u5230 \nI2C\n \u7aef\u53e3.\n\n\n\u6b65\u9aa4 3\n: \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b Blink \u4e2d\u7684\u6b65\u9aa4 5\u3002\n\n\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nHome Weather Display app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 Grove - RGB LCD \u4e2d\u770b\u5230 \u6e29\u5ea6\u503c\u3002\n\n\nAll Modules in One Project\n\n\n\u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002\n\n\n\n\n\u6b65\u9aa4 1\n: \u5c06 All_in_One \u8bbe\u7f6e\u4e3a StartUp Project\u3002\n\n\n\u6b65\u9aa4 2\n: \u786c\u4ef6\u8fde\u63a5\u3002\n\n\nGrove - Relay \n D2\n\n\nGrove - Temp\nHumi Sensor \n D3\n\n\nGrove - Ultrasonic Ranger \n D4\n\n\nGrove - LED Bar V2.0 \n D5\n\n\nGrove - Buzer \n D6\n\n\nGrove - Button \n D7\n\n\nGrove - Rotary Angle Sensor \n A0\n\n\nGrove - Sound Sensor \n A1\n\n\nGrove - Light Sensor \n A2\n\n\n\n\n\n\n\n\n\u5982\u8868\u6240\u793a\u5730\u5c06 Grove \u6a21\u5757\u8fde\u63a5\u5230 GrovePi+\uff0c \u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002\n\n\n\n\n\u6b65\u9aa4 3\n: \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002\n\n\n\n\n\u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002\n\n\nAll_in_One app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u5404\u4e2a\u6a21\u5757\u5404\u53f8\u5176\u804c\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u5e93\u6587\u4ef6]\n \nGrovePi C# Library Code\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nExample Code\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nWindows Dev Center", 
            "title": "Grove Starter Kit for IoT based on Raspberry Pi"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_IoT_based_on_Raspberry_Pi/#_1", 
            "text": "GrovePi+ \u5bb9\u6613\u4e0a\u624b\uff0c\u5e76\u4e14\u517c\u5bb9 Raspberry Pi B/B+/A+/  Grove \u6a21\u5757\u5373\u63d2\u5373\u7528\uff0c\u53ef\u5feb\u901f\u7f16\u7a0b", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_IoT_based_on_Raspberry_Pi/#_2", 
            "text": "SKU  \u4ea7\u54c1\u540d\u79f0  \u6570\u91cf  \u4f20\u9001\u95e8      103010002  GrovePi+  1  \u70b9\u51fb\u8d2d\u4e70    104990243  5 Inch HDMI Display with USB TouchScreen  1  \u70b9\u51fb\u8d2d\u4e70    103020005  Grove - Relay  1  \u70b9\u51fb\u8d2d\u4e70    101020011  Grove - Temp Humi Sensor  1  \u70b9\u51fb\u8d2d\u4e70    101020010  Grove - Ultrasonic Ranger  1  \u70b9\u51fb\u8d2d\u4e70    104020006  Grove LED Bar v2.0  1  \u70b9\u51fb\u8d2d\u4e70    101020048  Grove - Rotary Angle Sensor(P)  1  \u70b9\u51fb\u8d2d\u4e70    107020000  Grove - Buzzer  1  \u70b9\u51fb\u8d2d\u4e70    101020023  Grove - Sound Sensor  1  \u70b9\u51fb\u8d2d\u4e70    101020014  Grove - Light Sensor v1.2  1  \u70b9\u51fb\u8d2d\u4e70    101020003  Grove - Button  1  \u70b9\u51fb\u8d2d\u4e70    104030001  Grove - LCD RGB Backlight  1  \u70b9\u51fb\u8d2d\u4e70    109990056  HDMI Cable  1  \u70b9\u51fb\u8d2d\u4e70    321010007  Micro USB Cable - 48cm  1  \u70b9\u51fb\u8d2d\u4e70", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_IoT_based_on_Raspberry_Pi/#grovepi", 
            "text": "1.1   \u5c06 GrovePi+ \u8fde\u63a5\u81f3 Raspberry Pi  \u9996\u5148\u5c06 GrovePi+ \u4e0e Raspberry Pi \u7ec4\u88c5\u5728\u4e00\u8d77\u3002GrovePi+ \u5982\u4e0b\u56fe\u6240\u793a\u5806\u53e0\u5728 Raspberry Pi \u4e0a\u3002   \u786e\u4fdd\u4e24\u8005\u7684\u5f15\u811a\u548c\u5b54\u6b63\u786e\u5bf9\u9f50  Raspberry Pi \u4e0a\u7535  \u8981\u4e3a GrovePi+ \u548c Raspberry Pi \u4f9b\u7535\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Raspberry Pi \u4e0a\u7684 micro USB \u7535\u6e90\u7aef\u53e3\u3002\u8bf7\u8bb0\u4f4f\u4f7f\u7528\u80fd\u591f\u5728 5V \u4f9b\u7535 2A \u7684\u7535\u6e90\u9002\u914d\u5668\u3002\u5982\u679c\u60a8\u60f3\u5728\u72ec\u7acb\u914d\u7f6e\u4e0b\u8fd0\u884c GrovePi+\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u4e00\u4e2a USB \u79fb\u52a8\u7535\u6e90(\u5145\u7535\u5b9d)\u3002", 
            "title": "GrovePi+ \u786c\u4ef6\u8fde\u63a5"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_IoT_based_on_Raspberry_Pi/#raspberry-pi-grovepi-c-library", 
            "text": "GrovePi+ \u53ef\u4ee5\u7528 C# \u8fdb\u884c\u7f16\u7a0b\uff0c\u4f46\u9996\u5148\u5e94\u8be5\u5b89\u88c5 GrovePi+ \u7684 Windows 10 IoT C# \u9a71\u52a8\u5e93\u3002\u6709\u4e24\u79cd\u65b9\u6cd5 : \u5b89\u88c5 NuGet package \u548c\u4f7f\u7528 Dexter \u63d0\u4f9b\u7684 GrovePi C# \u5e93\u4ee3\u7801\u3002  \u5b89\u88c5 NuGet package  \u5f53\u524d\u7248\u672c\u7684 GrovePi+ NuGet package \u53ef\u7528\u3002\u8981\u5b89\u88c5\u9002\u7528\u4e8e Windows IoT \u7684 GrovePi+\uff0c\u8bf7\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\u3002  \u6b65\u9aa4 1  \u4ece Tools \u4e2d\u9009\u62e9  Library Package Manager \uff0c\u7136\u540e\u5355\u51fb  Package Manager Console \u3002   Package Manager Console window  \u7a97\u53e3\u663e\u793a   \u6b65\u9aa4 2  \u5728 Package Manager Console \u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4  PM  Install-Package GrovePi+  \u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u8bf7\u70b9\u51fb  \u8fd9\u91cc .  \u4f7f\u7528 GrovePi C# \u5e93\u4ee3\u7801  \u5982\u679c\u60a8\u65e0\u6cd5\u6210\u529f\u5b89\u88c5 GrovePi+ NuGet package\uff0c\u8bf7\u5355\u51fb  \u8fd9\u91cc  \u4e0b\u8f7d\u5e93\u4ee3\u7801\u3002  \u6b65\u9aa4 1  \u5c06\u4e24\u4e2a C# \u5e93\u9879\u76ee \u201cGrovePi+\u201d \u548c \u201cDriver\u201d \u79fb\u52a8\u5230\u60a8\u7684\u9879\u76ee\u6240\u5728\u7684\u6587\u4ef6\u5939\u4e2d\u3002\u5e76\u5c06\u5176\u6dfb\u52a0\u5230  Solution Explorer  \u4e2d\u3002\u4f8b\u5982\uff0c\u53f3\u952e\u5355\u51fb  Solution Explorer  \u4e2d\u7684 \u201cGrovePiExamples \u201d\uff0c Add | Existing Project \uff0c\u5982\u4e0b\u6240\u793a\u3002   \u628a \u201cGrovePi+\u201d \u548c \u201cDriver\u201d \u6dfb\u52a0\u5230  Solution Explorer \u3002   \u6b65\u9aa4 2  \u5c06 C# library \u8bbe\u7f6e\u4e3a\u53c2\u8003\u9879\u76ee\u3002\u53f3\u952e\u5355\u51fb  References \uff0c\u7136\u540e\u5355\u51fb  Add References \u3002   \u70b9\u51fb  Projects | Solution \uff0c \u52fe\u9009\u4e0b\u9762\u7ea2\u6846\u4e2d\u7684\u590d\u9009\u6846\uff0c\u7136\u540e\u70b9\u51fb  OK .\n**  \u73b0\u5728\u60a8\u5df2\u7ecf\u6210\u529f\u5b89\u88c5\u4e86 GrovePi+ C# library\u3002  \u4f20\u611f\u5668\u90fd\u53ef\u4ee5\u901a\u8fc7 DeviceFactory \u83b7\u5f97\u3002  \u793a\u4f8b  \u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528\u5e93\u7684\u793a\u4f8b :      \u6d4b\u91cf\u8ddd\u79bb   \u5c06 Ultrasonic sensor \u8fde\u63a5\u5230  D2  var distance = DeviceFactory.Build.UltraSonicSensor(Pin.DigitalPin2).MeasureInCentimeters();    \u5728\u5c4f\u5e55\u4e0a\u663e\u793a Hello World  DeviceFactory.Build.RgbLcdDisplay().SetText(\"Hello World\").SetBacklightRgb(0, 255, 255);    \u9e23\u7b1b    \u5c06 buzzer \u8fde\u63a5\u5230  D2  DeviceFactory.Build.Buzzer(Pin.DigitalPin2).ChangeState(SensorStatus.On);", 
            "title": "\u4e3a Raspberry Pi \u5b89\u88c5 GrovePi+ C# library"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_IoT_based_on_Raspberry_Pi/#rpi3-win10-iot", 
            "text": "\u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u793a\u4f8b\u9879\u76ee\u5217\u8868\uff0c\u5c55\u793a\u4e86\u7528 Raspberry Pi \u5f00\u59cb\u4e00\u4e2a\u9879\u76ee\u662f\u591a\u4e48\u5bb9\u6613\u3002\u8fd9\u4e9b Raspberry Pi \u9879\u76ee\u5c06\u4f7f\u7528\u65b9\u4fbf\u7684 Grove \u7cfb\u5217\u4f20\u611f\u5668\u4e0e\u5f3a\u5927\u7684 Raspberry Pi \u7ed3\u5408\u5728\u4e00\u8d77\u3002  \u60a8\u53ef\u4ee5\u70b9\u51fb  \u8fd9\u91cc  \u4e0b\u8f7d\u9002\u7528\u4e8e win10 \u7684 GrovePi+ Example \u4ee3\u7801\u3002\u60a8\u9700\u8981\u70b9\u51fb\u53f3\u4fa7\u7684\u7eff\u8272\u6309\u94ae  Clone or download \uff0c\u7136\u540e\u9009\u62e9  Download ZIP \uff0c\u7136\u540e\u9700\u8981\u9009\u62e9\u4f4d\u7f6e\u91ca\u653e\u538b\u7f29\u6587\u4ef6\u3002\u4f7f\u7528 Visual Studio 2015 \u6253\u5f00 GrovePiExamples(win10).sln\uff0c\u53ef\u4ee5\u770b\u5230\u5728 Solution Explorer \u4e2d\u6709 12 \u4e2a\u9879\u76ee\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002   \u9996\u5148\u5efa\u7acb\u8d77  GrovePi+  \u9879\u76ee\uff0c\u8fd9\u662f\u56e0\u4e3a\u5176\u4ed6\u9879\u76ee\u90fd\u662f\u5efa\u7acb\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u7684\u3002  \u793a\u4f8b :  Hello World from RGB LCD  \u8fd9\u4e2a\u4f8b\u5b50\u662f\u60a8\u4f7f\u7528 GrovePi+ \u7684\u7b2c\u4e00\u4e2a\u9879\u76ee\u3002GrovePi+ Starter Kit \u4e2d\u63d0\u4f9b\u4e86\u8be5\u9879\u76ee\u4e2d\u4f1a\u4f7f\u7528\u5230\u7684\u6240\u6709\u90e8\u4ef6\u3002\u638c\u63e1\u4e86\u8fd9\u4e2a\u9879\u76ee\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u66f4\u590d\u6742\u7684\u9879\u76ee\uff0c\u4f8b\u5982\u5c06\u663e\u793a\u5668\u6216\u5176\u4ed6\u4f20\u611f\u5668\u8fde\u63a5\u5230 Raspberry Pi\u3002   \u6b65\u9aa4 1 :  \u5c06 HelloWorld(LCD) \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 :  \u786c\u4ef6\u8fde\u63a5\u3002   \u901a\u8fc7 Grove \u7ebf\u7f06\u5c06 RGB LCD \u8fde\u63a5\u5230  I2C-1  \u7aef\u53e3\u5e76\u7ed9 Raspberry Pi \u4e0a\u7535\u3002    \u6b65\u9aa4 3 :   \u914d\u7f6e\u60a8\u7684 app\u3002   1)  \u5728 Visual Studio \u4e2d\u6253\u5f00 app\uff0c\u5728 toolbar \u4e0b\u62c9\u83dc\u5355\u4e2d\u8bbe\u7f6e  architecture \uff0c\u9009\u62e9  ARM \u3002  2)  \u5728 Visual Studio \u7684 toolbar \u4e2d\uff0c\u5355\u51fb  Local Machine  \u4e0b\u62c9\u5217\u8868\u5e76\u9009\u62e9  Remote Machine \u3002   3)  \u6b64\u65f6 Visual Studio \u5c06\u663e\u793a Remote Connections \u5bf9\u8bdd\u6846\u3002\u5982\u679c\u60a8\u4ee5\u524d\u4f7f\u7528  PowerShell  \u4e3a\u60a8\u7684\u8bbe\u5907\u8bbe\u7f6e\u4e86\u552f\u4e00\u540d\u79f0\uff0c\u5219\u53ef\u4ee5\u5728\u6b64\u8f93\u5165(\u5728\u672c\u4f8b\u4e2d\u4f7f\u7528\u7684\u662f\u6211\u81ea\u5df1\u7684\u8bbe\u5907)\u3002\u5426\u5219\uff0c\u8bf7\u4f7f\u7528 Windows IoT Core \u8bbe\u5907\u7684 IP \u5730\u5740\u3002 \u8f93\u5165\u8bbe\u5907 name/IP \u540e\uff0c\u5728 Windows Authentication \u9009\u9879\u4e2d\u9009\u62e9  None \uff0c\u7136\u540e\u5355\u51fb  Select \u3002   4)  \u60a8\u53ef\u4ee5\u901a\u8fc7\u8df3\u8f6c\u5230 project properties (\u5728 Solution Explorer \u4e2d\u9009\u62e9 Properties) \u5e76\u9009\u62e9\u5de6\u4fa7\u7684  Debug  \u9009\u9879\u5361\u6765\u9a8c\u8bc1\u6216\u4fee\u6539\u8fd9\u4e9b\u503c\u3002  \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309  F5 \u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  HelloWorld app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 Grove RGB LCD \u4e2d\u770b\u5230 HelloWorld\u3002  Grove - Rotary Angle Sensor  \u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002   \u6b65\u9aa4 1 :  \u5c06 Grove - Rotary Angle Sensor \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 :  \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove Angle Sensor \u8fde\u63a5\u5230  A0  \u7aef\u53e3\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002  \u6b65\u9aa4 3 :  \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002   \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  Grove - Rotary Angle Sensor app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230 Grove - Rotary Angle Sensor \u7684\u503c\u3002  Grove - LED Bar  \u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002   \u6b65\u9aa4 1 :  \u5c06 Grove - LED Bar \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 :  \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove Led Bar \u8fde\u63a5\u5230  D5  \u7aef\u53e3\u3002  \u6b65\u9aa4 3 :  \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002   \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  Grove - LED Bar app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u770b\u5230 Grove - LED Bar \u88ab\u5faa\u73af\u70b9\u4eae\u3002  Grove - Light Sensor  \u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002   \u6b65\u9aa4 1 : \u5c06 Grove - Light Sensor \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 : \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Light Sensor \u8fde\u63a5\u5230  A2  \u7aef\u53e3\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002  \u6b65\u9aa4 3 : \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002   \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  Grove - Light Sensor app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230 Grove - Light Sensor \u7684\u503c\u3002  Grove - Relay  \u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002   \u6b65\u9aa4 1 : \u5c06 Grove - Relay \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 : \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Relay \u8fde\u63a5\u5230  D2  \u7aef\u53e3\u3002  \u6b65\u9aa4 3 : \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002   \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  Grove - Relay app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u770b\u5230 Grove - Relay \u5728\u6bcf\u9694 1s \u4e0d\u505c\u5730\u542f\u52a8\u548c\u5173\u95ed\u3002  Grove - Sound Sensor  \u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002   \u6b65\u9aa4 1 : \u5c06 Grove - Sound Sensor \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 : \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Sound Sensor \u8fde\u63a5\u5230  A1  \u7aef\u53e3\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002  \u6b65\u9aa4 3 : \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002   \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  Grove - Sound Sensor app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230 Grove - Sound Sensor \u7684\u503c\u3002  Grove - Temperature and Humidity Sensor  \u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002   \u6b65\u9aa4 1 : \u5c06 Grove - Temperature and Humidity Sensor \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 : \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Temperature and Humidity Sensor \u8fde\u63a5\u5230 **D3**\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002  \u6b65\u9aa4 3 : \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002   \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  Grove - Temperature and Humidity Sensor app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230\u6e29\u6e7f\u5ea6\u7684\u503c\u3002  Grove - Ultrasonic Ranger  \u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002   \u6b65\u9aa4 1 : \u5c06 Grove - Ultrasonic Ranger \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 : \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Ultrasonic Ranger \u8fde\u63a5\u5230  D4  \u7aef\u53e3\u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002  \u6b65\u9aa4 3 : \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002   \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  Grove - Ultrasonic Ranger app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 LCD \u5c4f\u5e55\u4e2d\u770b\u5230\u8ddd\u79bb\u503c\u3002  Home Weather Display  \u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002   \u6b65\u9aa4 1 : \u5c06 Home Weather Display \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 : \u786c\u4ef6\u8fde\u63a5\u3002\n\u5c06 Grove - Temperature and Humidity Sensor \u8fde\u63a5\u5230  D3  \u7aef\u53e3\uff0c\u4f7f\u7528 Grove \u7ebf\u7f06\u5c06 RGB LCD \u8fde\u63a5\u5230  I2C  \u7aef\u53e3.  \u6b65\u9aa4 3 : \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b Blink \u4e2d\u7684\u6b65\u9aa4 5\u3002   \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  Home Weather Display app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u60a8\u5c06\u5728 Grove - RGB LCD \u4e2d\u770b\u5230 \u6e29\u5ea6\u503c\u3002  All Modules in One Project  \u672c\u793a\u4f8b\u91c7\u7528\u50cf HelloWorld(LCD) \u793a\u4f8b\u540c\u6837\u7684\u8bbe\u7f6e\u3002   \u6b65\u9aa4 1 : \u5c06 All_in_One \u8bbe\u7f6e\u4e3a StartUp Project\u3002  \u6b65\u9aa4 2 : \u786c\u4ef6\u8fde\u63a5\u3002  Grove - Relay   D2  Grove - Temp Humi Sensor   D3  Grove - Ultrasonic Ranger   D4  Grove - LED Bar V2.0   D5  Grove - Buzer   D6  Grove - Button   D7  Grove - Rotary Angle Sensor   A0  Grove - Sound Sensor   A1  Grove - Light Sensor   A2     \u5982\u8868\u6240\u793a\u5730\u5c06 Grove \u6a21\u5757\u8fde\u63a5\u5230 GrovePi+\uff0c \u5e76\u901a\u8fc7 HDMI \u7ebf\u7f06\u5c06 Raspberry Pi \u8fde\u63a5\u5230 LCD \u5c4f\u5e55\u3002   \u6b65\u9aa4 3 : \u914d\u7f6e\u60a8\u7684 app\uff0c\u53c2\u9605\u793a\u4f8b HelloWorld(LCD) \u4e2d\u7684\u6b65\u9aa4 3\u3002   \u5f53\u4e00\u5207\u90fd\u8bbe\u7f6e\u597d\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6309 F5\u3002\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u6f0f\u88c5\u7684\u8f6f\u4ef6\u5305\uff0cVisual Studio \u4f1a\u63d0\u793a\u60a8\u7acb\u5373\u83b7\u53d6\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u3002  All_in_One app \u5c06\u5728 Windows IoT \u8bbe\u5907\u4e0a\u914d\u7f6e\u5e76\u542f\u52a8\uff0c\u5404\u4e2a\u6a21\u5757\u5404\u53f8\u5176\u804c\u3002", 
            "title": "\u5728 Rpi3 \u4e0a\u8fd0\u884c Win10 IoT \u793a\u4f8b"
        }, 
        {
            "location": "/Grove_Starter_Kit_for_IoT_based_on_Raspberry_Pi/#_3", 
            "text": "[\u5e93\u6587\u4ef6]   GrovePi C# Library Code  [\u5176\u4ed6\u8d44\u6e90]   Example Code  [\u5176\u4ed6\u8d44\u6e90]   Windows Dev Center", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Grove-433MHz_Simple_RF_Link_Kit/", 
            "text": "\u8be5\u5957\u4ef6\u7528\u4e8e\u9891\u7387\u4e3a433MHz\u7684\u5355\u5411\u65e0\u7ebf\u901a\u4fe1\uff0c\u5305\u62ec\u53d1\u5c04\u5668\u6a21\u5757\u548c\u63a5\u6536\u5668\u6a21\u5757\u3002 \u8be5\u5957\u4ef6\u7684\u914d\u7f6e\u6a21\u5f0f\u5141\u8bb8\u5728\u5ba4\u5185\u7ea640\u7c73\u7684\u4f20\u8f93\u8ddd\u79bb\uff0c\u6216\u5728\u5ba4\u5916\u7ea6100\u7c73\u3002\n\n\n\n\n\u7248\u672c\u66f4\u8fed\n\n\n\n\n\n\n\n\n\u7248\u672c\n\n\n\u63cf\u8ff0\n\n\n\u53d1\u552e\u65e5\u671f\n\n\n\n\n\n\n\n\n\n\nv0.9b\n\n\n\u521d\u59cb\u7248\u672c\n\n\n03,11\u6708,2011\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\nGrove \u517c\u5bb9\u63a5\u53e3\n\n\n\u4f7f\u7528 ASK (Amplitude Shift Keying\u5e45\u79fb\u952e\u63a7) \u6a21\u5f0f.\n\n\n\u5355\u5411\u901a\u4fe1\n\n\n\n\n\n\nTip\n\n\n\u66f4\u591a\u5173\u7cfbGrove\u7684\u7ec6\u8282\u8bf7\u53c2\u8003 \nGrove \u7cfb\u7edf\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\u53d1\u5c04\u6a21\u5757\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\n\n\u6700\u5c0f\u503c\n\n\n\n\n\u5178\u578b\u503c\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\n\n3.0\n\n\n\n\n5.0\n\n\n\n\n12.0\n\n\n\n\nVDC\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n\n\n3\n\n\n\n\n/\n\n\n\n\n10\n\n\n\n\nmA\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u6a21\u5f0f\n\n\n\n\nASK\n\n\n\n\n/\n\n\n\n\n\n\n\n\n\u53d1\u5c04\u529f\u7387(Max)\n\n\n\n\n15\n\n\n\n\nmW\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u8ddd\u79bb\n\n\n\n\n40\n\n\n\n\n/\n\n\n\n\n100\n\n\n\n\nm\n\n\n\n\n\n\n\n\n\u63a5\u6536\u6a21\u5757\n\n\n\n\n\n\n\n\n\u9879\u76ee\n\n\n\u5178\u578b\u503c\n\n\n\u5355\u4f4d\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n5\n\n\nV\n\n\n\n\n\n\n\u9759\u6001\u7535\u6d41\n\n\n5\n\n\nmA\n\n\n\n\n\n\n\u63a5\u6536\u7075\u654f\u5ea6\n\n\n-105\n\n\ndBm\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u7387\n\n\n433.92\n\n\nMHz\n\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u8fdc\u7a0b\u63a7\u5236\n\n\n\u8fdc\u7a0b\u81ea\u52a8\u5316\n\n\n\u8b66\u62a5\u7cfb\u7edf\n\n\n\n\n\u4f7f\u7528\u8bf4\u660e\n\n\n\u53d1\u5c04\u5668\u548c\u63a5\u6536\u5668\u6a21\u5757\u90fd\u4f9d\u9760\u5355\u6839\u5bfc\u7ebf\u8fdb\u884c\u901a\u4fe1\u3002 \u5c3d\u7ba1\u4f7f\u7528Arduino\u5e73\u53f0\u63d0\u4f9b\u7684UART\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u662f\u5efa\u8bae\u4f7f\u7528VirtualWire\u5e93\uff0c\u5b83\u4f7f\u7528\u5e45\u79fb\u952e\u63a7\u8fdb\u884c\u8c03\u5236\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u597d\u7684\u901a\u4fe1\u3002\n\n\n\u53d1\u5c04\u5668\u548c\u63a5\u6536\u5668\u6a21\u5757\u90fd\u9700\u8981\u4e09\u6839\u5bfc\u7ebf\uff1aVcc\uff0c\u63a5\u5730\u548c\u4fe1\u53f7\u3002\u5957\u4ef6\u4e24\u90e8\u5206\u7684\u5f15\u811a2\u90fd\u672a\u8fde\u63a5\u672a\u4f7f\u7528\u3002\n\n\n\n\n\n\n\u5c06\u53d1\u5c04\u6a21\u5757\u8fde\u63a5\u5230\u4e0e\u53d1\u5c04Aduino\u76f8\u8fde\u7684 \nGrove-Base Shield V2\n \u7684\u6570\u5b57 I/O \u53e3 \nD2\n\n\n\n\n\n\n\u5c06\u63a5\u6536\u6a21\u5757\u8fde\u63a5\u5230\u4e0e\u63a5\u6536Aduino\u76f8\u8fde\u7684 \nGrove-Base Shield V2\n \u7684\u6570\u5b57 I/O \u53e3 \nD2\n\n\n\n\n\n\n\u4e0b\u8f7d \nVirtualWire \u5e93\n \u89e3\u538b\u5e93\u6587\u4ef6\u5230 Arduino IDE \u7684\u4e0b\u5217\u76ee\u5f55: \n..\\arduino-1.0\\libraries\n. \u8bf7\u53c2\u8003 \n\u8fd9\u91cc\n.\n\n\n\n\n\u4e3a\u53d1\u5c04\u6a21\u5757\u4e0a\u4f20\u4e0b\u9762\u7684\u4ee3\u7801:\n\n\n\n\n    #include \nVirtualWire.h\n\n\n    //Grove - 315(433) RF link kit Demo v1.0\n    //by\u00a0:http://www.seeedstudio.com/\n    //connect the sent module to D2 to use  \n    #include \nVirtualWire.h\n\n\n    int RF_TX_PIN = 2;\n\n    void setup()\n    {\n      vw_set_tx_pin(RF_TX_PIN); // Setup transmit pin\n      vw_setup(2000); // Transmission speed in bits per second.\n    }\n\n    void loop()\n    {\n      const char *msg = \nhello\n;\n      vw_send((uint8_t *)msg, strlen(msg));  // Send \nhello\n every 400ms.\n      delay(400);\n\n    }\n\n\n\n\n\n\n\u4e3a\u63a5\u6536\u6a21\u5757\u4e0a\u4f20\u4e0b\u5217\u4ee3\u7801:\n\n\n\n\n    //Grove - 315(433) RF link kit Demo v1.0\n    //by\u00a0:http://www.seeedstudio.com/\n    //connect the receive module to D2 to use ..\n    #include \nVirtualWire.h\n\n\n    int RF_RX_PIN = 2;\n\n    void setup()\n    {\n      Serial.begin(9600);\n      Serial.println(\nsetup\n);\n      vw_set_rx_pin(RF_RX_PIN);  // Setup receive pin.\n      vw_setup(2000); // Transmission speed in bits per second.\n      vw_rx_start(); // Start the PLL receiver.\n    }\n\n    void loop()\n    {\n      uint8_t buf[VW_MAX_MESSAGE_LEN];\n      uint8_t buflen = VW_MAX_MESSAGE_LEN;\n      if(vw_get_message(buf, \nbuflen)) // non-blocking I/O\n      {\n        int i;\n        // Message with a good checksum received, dump HEX\n        Serial.print(\nGot: \n);\n        for(i = 0; i \n buflen; ++i)\n        {\n          Serial.print(buf[i], HEX);\n          Serial.print(\n \n);\n          //Serial.print(buf[i]);\n        }\n        Serial.println(\n);\n      }\n    }\n\n\n\n\n\n\n\u6253\u5f00\u63a5\u6536\u6a21\u5757\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u60a8\u5c06\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\u3002\n\n\n\n\n\n\n\u8fd9\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u53d1\u5c04\u548c\u63a5\u6536\u4f8b\u7a0b\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n[\u5e93\u6587\u4ef6\u4e0b\u8f7d]\nVirtualWire Library.zip\n\n\n[\u4f8b\u7a0b]\n433MHz_demo.zip\n\n\n[\u5176\u4ed6\u8d44\u6599]\nVirtualWire Documentation\n\n\n[\u6570\u636e\u624b\u518c]\nTI:LM358PSR\n\n\n[\u6570\u636e\u624b\u518c]\nR433A Datasheet", 
            "title": "Grove-433MHz Simple RF Link Kit"
        }, 
        {
            "location": "/Grove-433MHz_Simple_RF_Link_Kit/#_1", 
            "text": "\u7248\u672c  \u63cf\u8ff0  \u53d1\u552e\u65e5\u671f      v0.9b  \u521d\u59cb\u7248\u672c  03,11\u6708,2011", 
            "title": "\u7248\u672c\u66f4\u8fed"
        }, 
        {
            "location": "/Grove-433MHz_Simple_RF_Link_Kit/#_2", 
            "text": "Grove \u517c\u5bb9\u63a5\u53e3  \u4f7f\u7528 ASK (Amplitude Shift Keying\u5e45\u79fb\u952e\u63a7) \u6a21\u5f0f.  \u5355\u5411\u901a\u4fe1    Tip  \u66f4\u591a\u5173\u7cfbGrove\u7684\u7ec6\u8282\u8bf7\u53c2\u8003  Grove \u7cfb\u7edf", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Grove-433MHz_Simple_RF_Link_Kit/#_3", 
            "text": "", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Grove-433MHz_Simple_RF_Link_Kit/#_4", 
            "text": "\u9879\u76ee  \n\u6700\u5c0f\u503c  \n\u5178\u578b\u503c  \n\u6700\u5927\u503c  \n\u5355\u4f4d    \n\u5de5\u4f5c\u7535\u538b  \n3.0  \n5.0  \n12.0  \nVDC    \n\u5de5\u4f5c\u7535\u6d41  \n3  \n/  \n10  \nmA    \n\u5de5\u4f5c\u6a21\u5f0f  \nASK  \n/    \n\u53d1\u5c04\u529f\u7387(Max)  \n15  \nmW    \n\u5de5\u4f5c\u8ddd\u79bb  \n40  \n/  \n100  \nm", 
            "title": "\u53d1\u5c04\u6a21\u5757"
        }, 
        {
            "location": "/Grove-433MHz_Simple_RF_Link_Kit/#_5", 
            "text": "\u9879\u76ee  \u5178\u578b\u503c  \u5355\u4f4d      \u5de5\u4f5c\u7535\u538b  5  V    \u9759\u6001\u7535\u6d41  5  mA    \u63a5\u6536\u7075\u654f\u5ea6  -105  dBm    \u5de5\u4f5c\u9891\u7387  433.92  MHz", 
            "title": "\u63a5\u6536\u6a21\u5757"
        }, 
        {
            "location": "/Grove-433MHz_Simple_RF_Link_Kit/#_6", 
            "text": "\u8fdc\u7a0b\u63a7\u5236  \u8fdc\u7a0b\u81ea\u52a8\u5316  \u8b66\u62a5\u7cfb\u7edf", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Grove-433MHz_Simple_RF_Link_Kit/#_7", 
            "text": "\u53d1\u5c04\u5668\u548c\u63a5\u6536\u5668\u6a21\u5757\u90fd\u4f9d\u9760\u5355\u6839\u5bfc\u7ebf\u8fdb\u884c\u901a\u4fe1\u3002 \u5c3d\u7ba1\u4f7f\u7528Arduino\u5e73\u53f0\u63d0\u4f9b\u7684UART\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u662f\u5efa\u8bae\u4f7f\u7528VirtualWire\u5e93\uff0c\u5b83\u4f7f\u7528\u5e45\u79fb\u952e\u63a7\u8fdb\u884c\u8c03\u5236\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u597d\u7684\u901a\u4fe1\u3002  \u53d1\u5c04\u5668\u548c\u63a5\u6536\u5668\u6a21\u5757\u90fd\u9700\u8981\u4e09\u6839\u5bfc\u7ebf\uff1aVcc\uff0c\u63a5\u5730\u548c\u4fe1\u53f7\u3002\u5957\u4ef6\u4e24\u90e8\u5206\u7684\u5f15\u811a2\u90fd\u672a\u8fde\u63a5\u672a\u4f7f\u7528\u3002    \u5c06\u53d1\u5c04\u6a21\u5757\u8fde\u63a5\u5230\u4e0e\u53d1\u5c04Aduino\u76f8\u8fde\u7684  Grove-Base Shield V2  \u7684\u6570\u5b57 I/O \u53e3  D2    \u5c06\u63a5\u6536\u6a21\u5757\u8fde\u63a5\u5230\u4e0e\u63a5\u6536Aduino\u76f8\u8fde\u7684  Grove-Base Shield V2  \u7684\u6570\u5b57 I/O \u53e3  D2    \u4e0b\u8f7d  VirtualWire \u5e93  \u89e3\u538b\u5e93\u6587\u4ef6\u5230 Arduino IDE \u7684\u4e0b\u5217\u76ee\u5f55:  ..\\arduino-1.0\\libraries . \u8bf7\u53c2\u8003  \u8fd9\u91cc .   \u4e3a\u53d1\u5c04\u6a21\u5757\u4e0a\u4f20\u4e0b\u9762\u7684\u4ee3\u7801:       #include  VirtualWire.h \n\n    //Grove - 315(433) RF link kit Demo v1.0\n    //by\u00a0:http://www.seeedstudio.com/\n    //connect the sent module to D2 to use  \n    #include  VirtualWire.h \n\n    int RF_TX_PIN = 2;\n\n    void setup()\n    {\n      vw_set_tx_pin(RF_TX_PIN); // Setup transmit pin\n      vw_setup(2000); // Transmission speed in bits per second.\n    }\n\n    void loop()\n    {\n      const char *msg =  hello ;\n      vw_send((uint8_t *)msg, strlen(msg));  // Send  hello  every 400ms.\n      delay(400);\n\n    }   \u4e3a\u63a5\u6536\u6a21\u5757\u4e0a\u4f20\u4e0b\u5217\u4ee3\u7801:       //Grove - 315(433) RF link kit Demo v1.0\n    //by\u00a0:http://www.seeedstudio.com/\n    //connect the receive module to D2 to use ..\n    #include  VirtualWire.h \n\n    int RF_RX_PIN = 2;\n\n    void setup()\n    {\n      Serial.begin(9600);\n      Serial.println( setup );\n      vw_set_rx_pin(RF_RX_PIN);  // Setup receive pin.\n      vw_setup(2000); // Transmission speed in bits per second.\n      vw_rx_start(); // Start the PLL receiver.\n    }\n\n    void loop()\n    {\n      uint8_t buf[VW_MAX_MESSAGE_LEN];\n      uint8_t buflen = VW_MAX_MESSAGE_LEN;\n      if(vw_get_message(buf,  buflen)) // non-blocking I/O\n      {\n        int i;\n        // Message with a good checksum received, dump HEX\n        Serial.print( Got:  );\n        for(i = 0; i   buflen; ++i)\n        {\n          Serial.print(buf[i], HEX);\n          Serial.print(   );\n          //Serial.print(buf[i]);\n        }\n        Serial.println( );\n      }\n    }   \u6253\u5f00\u63a5\u6536\u6a21\u5757\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u60a8\u5c06\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\u3002    \u8fd9\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u53d1\u5c04\u548c\u63a5\u6536\u4f8b\u7a0b\u4ec5\u4f9b\u53c2\u8003\u3002", 
            "title": "\u4f7f\u7528\u8bf4\u660e"
        }, 
        {
            "location": "/Grove-433MHz_Simple_RF_Link_Kit/#_8", 
            "text": "[\u5e93\u6587\u4ef6\u4e0b\u8f7d] VirtualWire Library.zip  [\u4f8b\u7a0b] 433MHz_demo.zip  [\u5176\u4ed6\u8d44\u6599] VirtualWire Documentation  [\u6570\u636e\u624b\u518c] TI:LM358PSR  [\u6570\u636e\u624b\u518c] R433A Datasheet", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/LoRa_LoRaWan_Gateway_Kit/", 
            "text": "LoRa\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u8fdc\u7a0b\u65e0\u7ebf\u89e3\u51b3\u65b9\u6848\uff0c\u9002\u7528\u4e8e\u521b\u5efa\u4f4e\u529f\u8017\u7684\u5e7f\u57df\u7f51\u7edc\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u53d1\u5e03\u4e86\u51e0\u4e2a\u201cLoRa\u201d\u677f\u5361\uff0c\u5982Seeeduino LoRaWan\u548cGrove LoRa Radio\u7b49\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u8981\u5efa\u7acb\u81ea\u5df1\u7684LoRa\u7f51\u7edc\uff0c \u6709\u4e09\u4ef6\u4e8b\u4f60\u5e94\u8be5\u51c6\u5907\u5f00\u59cb\uff1a\u4e00\u4e2a\u7f51\u5173\uff0c\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u548c\u4e00\u4e2a\u672c\u5730\u670d\u52a1\u5668\uff0c\u51c6\u5907\u597d\u8fd9\u4e9b\u60a8\u5c31\u53ef\u4ee5\u76d1\u89c6\u6240\u6709\u7684LoRa\u8bbe\u5907\u3002\n\n\n\u8be5\u5957\u4ef6\u63d0\u4f9b\u4e86\u6240\u6709\u60a8\u9700\u8981\u7684\u57fa\u672c\u5143\u7d20\uff1aRaspberry Pi 3\uff0c\u5e26\u6709GPS\u7684Seeeduino LoRaWAN\u4ee5\u53ca\u7f51\u5173\u548c\u672c\u5730\u670d\u52a1\u5668\uff0c\u4f7f\u60a8\u53ef\u4ee5\u5728\u6240\u6709LoRa\u8282\u70b9\u4e4b\u95f4\u6536\u96c6\u548c\u4f20\u8f93\u6570\u636e\u3002\u901a\u8fc7\u5c06\u7f51\u5173\u4e0eSeeeduino LoRaWAN\u548cGrove\u6a21\u5757\u8fde\u63a5\uff0c\u60a8\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u5efa\u7acb\u60a8\u7684\u7269\u8054\u7f51\u539f\u578b\u3002\n\n\n\u5bf9\u4e8e\u7f51\u5173\u6a21\u5757RHF0M301\uff0c\u5b83\u662f\u4e00\u4e2a10\u8def\uff088\u8defMulti-SF + 1\u8def\u6807\u51c6LoRa + 1\u8defFSK\uff09LoRaWan\u7f51\u5173\u6a21\u5757\uff0c\u5e26\u6709\u4e00\u4e2a24\u9488DIP\u7aef\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06RHF0M301\u4e0ePRI 2\u7f51\u6865RHF4T002\u8fde\u63a5\uff0c \u9002\u7528\u4e8eRaspberry Pi 3\u548cRHF0M301\u3002 \u6211\u4eec\u8fd8\u5305\u62ec\u4e00\u4e2a868MHz\u7684\u5929\u7ebf\uff0c\u4e00\u4e2a8GB\u7684SD\u5361\u548cUSB\u7535\u7f06\uff0c\u4ee5\u592a\u7f51\u7535\u7f06\u548c\u5176\u4ed6\u914d\u4ef6\u3002\n\n\n\n\nWarning\n\n\n\u5982\u679cUSB\u7535\u6e90\u4e0d\u8db3\uff0c\u8bf7\u52a1\u5fc5\u63d2\u4e0a3.7V Lipo\u7535\u6c60\u3002 \u8fd9\u4e2awiki\u9002\u7528\u4e8e868MHz\u5957\u4ef6\u548c915MHz\u5957\u4ef6\u3002\n\n\n\n\n\n\n\n\n\n\n868MHz Kit with Raspberry Pi 3\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\n\n915MHz Kit for Raspberry Pi 3\n\n\n\u70b9\u51fb\u8d2d\u4e70\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u4f4e\u529f\u8017 \n \u5e7f\u57df\n\n\n\u5de5\u4e1a\u7ea7\u7a33\u5b9a\u6027\n\n\n\u5efa\u7acb LoRa /LoRaWAN \u7f51\u7edc\u7684\u7ecf\u6d4e\u89e3\u51b3\u65b9\u6848\n\n\n\u4e30\u5bcc\u7684\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\u914d\u4ef6\n\n\n\u5b9e\u65f6\u76d1\u6d4b\u7cfb\u7edf\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u7269\u8054\u7f51\n\n\n\u667a\u80fd\u5bb6\u5c45\n\n\n\u5b89\u4fdd\u7cfb\u7edf\n\n\n\u667a\u80fd\u8282\u70b9\n\n\n\u667a\u6167\u519c\u573a\n\n\n\u667a\u6167\u516c\u56ed\n\n\n\n\n\u7528\u6237\u6307\u5357\n\n\nRisingHF\u7684\u7528\u6237\u624b\u518c\u5df2\u7ecf\u5f88\u597d\u5730\u6307\u5bfc\u4e86\u5982\u4f55\u4f7f\u7528LoRaWan Getway Kit\uff0c\u5b83\u5c06\u8be6\u7ec6\u63cf\u8ff0\u8fd9\u4e2a\u5957\u4ef6\u7684\u7528\u6cd5\uff0c\u5305\u62ec\uff1a\n-  \u600e\u6837\u642d\u5efa\u786c\u4ef6\u73af\u5883,\n-  \u600e\u6837\u63a5\u5165 LoRaWan \u7f51\u7edc,\n-  \u600e\u6837\u6d4b\u8bd5\u786c\u4ef6\n\n\n\u8bf7\u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d \n\u7528\u6237\u6307\u5357\n.\n\n\n\n\nNote\n\n\n\u8bf7\u6ce8\u610f\uff0c\u7528\u6237\u624b\u518c\u4e2d\u7684\u90e8\u4ef6\u5217\u8868\u4e0eLoRaWAN Getway\u5957\u4ef6\u4e0d\u540c\u3002 \u5f53\u60a8\u8fd0\u884c\u4f1a\u8bdd3.1 Loriot\u670d\u52a1\u5668\u7f51\u5173\u6ce8\u518c\u6b65\u9aa4i\u201c./lrt -f -i eth0 -s cn1.loriot.io\u201d\u65f6\uff0c\u4f1a\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\u3002\n\n\n\n\n\n\n\u80cc\u540e\u7684\u539f\u56e0\u662f Loriot \u670d\u52a1\u5668\u5347\u7ea7\uff0c\u800c\u6211\u4eec\u7684\u56fa\u4ef6 SDK \u5c1a\u672a\u5347\u7ea7\u3002 \u6240\u4ee5\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u624b\u52a8\u5347\u7ea7\u7f51\u5173 SDK\u3002 \u7a0d\u540e\u6211\u4eec\u5c06\u5347\u7ea7\u56fa\u4ef6\u3002\n\n\ncd /home/rxhf/loriot/1.0.2\nsudo systemctl stop pktfwd\nsudo gwrst\nwget https://cn1.loriot.io/home/gwsw/loriot-risinghf-rhf2s008-rhf1257-SPI-0-latest.bin -O loriot-gw.bin\nchmod +x loriot-gw.bin\n./loriot-gw.bin -f -s cn1.loriot.io\n\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\u7528\u6237\u6307\u5357\n.\n\n\nWiki of Seeeduino LoRaWAN\n\n\nRisingHF Website", 
            "title": "LoRa LoRaWan Gateway Kit"
        }, 
        {
            "location": "/LoRa_LoRaWan_Gateway_Kit/#_1", 
            "text": "\u4f4e\u529f\u8017   \u5e7f\u57df  \u5de5\u4e1a\u7ea7\u7a33\u5b9a\u6027  \u5efa\u7acb LoRa /LoRaWAN \u7f51\u7edc\u7684\u7ecf\u6d4e\u89e3\u51b3\u65b9\u6848  \u4e30\u5bcc\u7684\u4f20\u611f\u5668\u548c\u6267\u884c\u5668\u914d\u4ef6  \u5b9e\u65f6\u76d1\u6d4b\u7cfb\u7edf", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/LoRa_LoRaWan_Gateway_Kit/#_2", 
            "text": "\u7269\u8054\u7f51  \u667a\u80fd\u5bb6\u5c45  \u5b89\u4fdd\u7cfb\u7edf  \u667a\u80fd\u8282\u70b9  \u667a\u6167\u519c\u573a  \u667a\u6167\u516c\u56ed", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/LoRa_LoRaWan_Gateway_Kit/#_3", 
            "text": "RisingHF\u7684\u7528\u6237\u624b\u518c\u5df2\u7ecf\u5f88\u597d\u5730\u6307\u5bfc\u4e86\u5982\u4f55\u4f7f\u7528LoRaWan Getway Kit\uff0c\u5b83\u5c06\u8be6\u7ec6\u63cf\u8ff0\u8fd9\u4e2a\u5957\u4ef6\u7684\u7528\u6cd5\uff0c\u5305\u62ec\uff1a\n-  \u600e\u6837\u642d\u5efa\u786c\u4ef6\u73af\u5883,\n-  \u600e\u6837\u63a5\u5165 LoRaWan \u7f51\u7edc,\n-  \u600e\u6837\u6d4b\u8bd5\u786c\u4ef6  \u8bf7\u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d  \u7528\u6237\u6307\u5357 .   Note  \u8bf7\u6ce8\u610f\uff0c\u7528\u6237\u624b\u518c\u4e2d\u7684\u90e8\u4ef6\u5217\u8868\u4e0eLoRaWAN Getway\u5957\u4ef6\u4e0d\u540c\u3002 \u5f53\u60a8\u8fd0\u884c\u4f1a\u8bdd3.1 Loriot\u670d\u52a1\u5668\u7f51\u5173\u6ce8\u518c\u6b65\u9aa4i\u201c./lrt -f -i eth0 -s cn1.loriot.io\u201d\u65f6\uff0c\u4f1a\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\u3002    \u80cc\u540e\u7684\u539f\u56e0\u662f Loriot \u670d\u52a1\u5668\u5347\u7ea7\uff0c\u800c\u6211\u4eec\u7684\u56fa\u4ef6 SDK \u5c1a\u672a\u5347\u7ea7\u3002 \u6240\u4ee5\u8bf7\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u624b\u52a8\u5347\u7ea7\u7f51\u5173 SDK\u3002 \u7a0d\u540e\u6211\u4eec\u5c06\u5347\u7ea7\u56fa\u4ef6\u3002  cd /home/rxhf/loriot/1.0.2\nsudo systemctl stop pktfwd\nsudo gwrst\nwget https://cn1.loriot.io/home/gwsw/loriot-risinghf-rhf2s008-rhf1257-SPI-0-latest.bin -O loriot-gw.bin\nchmod +x loriot-gw.bin\n./loriot-gw.bin -f -s cn1.loriot.io", 
            "title": "\u7528\u6237\u6307\u5357"
        }, 
        {
            "location": "/LoRa_LoRaWan_Gateway_Kit/#_4", 
            "text": "\u7528\u6237\u6307\u5357 .  Wiki of Seeeduino LoRaWAN  RisingHF Website", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/", 
            "text": "The Arduino Sidekick Basic Kit \u65e8\u5728\u4e0e\u60a8\u7684 Arduino / Seeeduino / Seeeduino ADK / Maple Lilypad \u6216\u4efb\u4f55 MCU \u677f\u4e00\u8d77\u4f7f\u7528\u3002\u5b83\u5305\u542b\u4e86\u7528\u6237\u7b2c\u4e00\u6b21\u5c06\u4ed6\u4eec\u7684\u8ba1\u7b97\u673a\u8fde\u63a5\u5230Arduino\u6240\u9700\u7684\u4e00\u5207\u3002 \u5b83\u5305\u62ec\u8bb8\u591a DIY \u9879\u76ee\u6700\u53d7\u6b22\u8fce\u7684\u914d\u4ef6 : \u5982\u9762\u5305\u677f\uff0c\u8df3\u7ebf\uff0c\u5f69\u8272 LED\uff0c\u7535\u963b\u5668\uff0c\u8702\u9e23\u5668\u7b49\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u5e26\u6709\u81ea\u5df1\u7684\u4fbf\u5229\u76d2\uff0c\u4fbf\u4e8e\u4f7f\u7528\u548c\u907f\u514d\u4e86\u6742\u4e71\u3002\n\n\n\n\n\u5957\u4ef6\u96f6\u4ef6\n\n\n\n\n\n\n\n\n\u9762\u5305\u677f x 1\n\n\n\u7eff\u8272 LED x 5\n\n\n\u7ea2\u8272 LED x 5\n\n\nRGB \u5171\u9633\u6781 LED x 1\n\n\n\u9676\u74f7\u7535\u5bb9 (10nF x 10+100nF x 10)\n\n\n\u94dd\u7535\u5bb9 (100uF x 5)\n\n\n\u7535\u963b (330R x 10+1k x 10+10k x 10)\n\n\n\u503e\u659c\u5f00\u5173 x 1\n\n\n\u70ed\u654f\u7535\u963b x 1\n\n\n\u5149\u7535\u963b x 1\n\n\n\u4e8c\u6781\u7ba1 x 1\n\n\n\u8702\u9e23\u5668 x 1\n\n\n\u6309\u952e x 5\n\n\n\u5f00\u5173 x 5\n\n\n\u8ff7\u4f60\u4f3a\u670d\u5668 x 1\n\n\n\u5e26\u65cb\u94ae\u7684\u7535\u4f4d\u5668 x 1\n\n\n\u9762\u5305\u677f\u8df3\u7ebf x 25\uff085x \u957f\u7ebf, 20 x \u77ed\u7ebf\uff09 \u9762\u5305\u677f x 1\n\n\n\u76d2 x 4\n\n\n\n\n\u7535\u5b66\u57fa\u7840\u77e5\u8bc6\u666e\u53ca\n\n\n\n\n\u7535\u6d41\u548c\u7535\u538b\n\n\n\u7535\u6d41\u662f\u5bfc\u4f53\u4e2d\u6d41\u52a8\u7535\u8377\u7684\u901f\u7387\u3002\u7535\u538b\u662f\u65bd\u52a0\u5728\u4e24\u70b9\u4e4b\u95f4\u7528\u6765\u4f20\u5bfc\u7535\u6d41\u7684\u7535\u4f4d\u5dee (\u7535\u9a71\u52a8\u529b)\u3002 \u7535\u6d41\u4ee5\u5b89\u57f9 (A) \u4e3a\u5355\u4f4d\uff0c\u7535\u538b\u4ee5\u4f0f\u7279 (V) \u4e3a\u5355\u4f4d\u3002\n\n\n\u7535\u963b\n\n\n\u7535\u963b\u662f\u5bfc\u4f53\u4e2d\u6d41\u52a8\u7535\u6d41\u7684\u969c\u788d\u3002\u5b83\u4eec\u7528\u4e8e\u9650\u5236\u7535\u6d41\u5230\u8bf8\u5982\u706f\u7684\u7535\u5b50\u8bbe\u5907\u7684\u6d41\u52a8\u3002\u5bf9\u4e8e\u6d41\u52a8\u7535\u6d41\u7684\u963b\u6297\u7528\u6b27\u59c6 (\u03a9) \u8868\u793a\uff0c\u7535\u963b\u53ef\u5206\u4e3a_\n\u56fa\u5b9a\u7535\u963b\n\u548c\n\u53ef\u53d8\u7535\u963b( POT )\n_\u3002\n\n\n\u8fde\u63a5\u7535\u963b\n\n\n\u7535\u963b\u53ef\u4ee5\u4ee5\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u8fde\u63a5 : \u5e76\u8054\u6216\u5f7c\u6b64\u4e32\u8054\u3002\n\n\n\u4e32\u8054\u7535\u963b\n\n\n\u5f53\u7535\u963b\u4e32\u8054\u65f6\uff0c\u603b\u7b49\u6548\u7535\u963b\u5c06\u7b49\u4e8e\u4e32\u8054\u7535\u963b\u7684\u6240\u6709\u503c\u7684\u603b\u548c\u3002\n\n\n\u5e76\u8054\u7535\u963b\n\n\n\u5f53\u7535\u963b\u5e76\u8054\u65f6\uff0c\u603b\u7b49\u6548\u7535\u963b\u7684\u5012\u6570\u7b49\u4e8e\u6bcf\u4e2a\u7535\u963b\u7684\u5012\u6570\u4e4b\u548c\u3002\n\n\n\u6b27\u59c6\u5b9a\u5f8b\n\n\n\u7535\u6d41\uff0c\u7535\u538b\u548c\u7535\u963b\u4e4b\u95f4\u7684\u5173\u7cfb\u7531\u6b27\u59c6\u5b9a\u5f8b\u51b3\u5b9a - \u5176\u4e2d\u6307\u51fa\u201c\u4e24\u70b9\u4e4b\u95f4\u7684\u5bfc\u4f53\u7535\u6d41 ( I \u5b89\u57f9) \u4e0e\u4e24\u70b9( V \u4f0f\u7279)\u4e4b\u95f4\u7684\u7535\u4f4d\u5dee\u6216\u7535\u538b\u6210\u6b63\u6bd4\uff0c \u4e0e\u5b83\u4eec\u4e4b\u95f4\u7684\u7535\u963b( R \u6b27\u59c6)\u6210\u6bd4\u4f8b\uff0c\u5373 I = V / R\u3002\u56e0\u6b64 V = IR \u6216 R = V / I.\u4ee5\u4e0b\u6b27\u59c6\u5b9a\u5f8b\u4e09\u89d2\u5f62\u53ef\u7528\u4e8e\u8bb0\u4f4f V\uff0cI \u548c R \u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5782\u76f4\u7ebf\u8868\u793a\u4e58\u6cd5\u8fd0\u7b97\uff0c\u6c34\u5e73\u7ebf\u8868\u793a\u9664\u6cd5\u8fd0\u7b97\u3002\n\n\n\n\neg : \u56e0\u6b64\uff0c\u8981\u77e5\u9053\u5f53\u524d I\uff0c\u6211\u4eec\u5c06 V \u9664\u4ee5 R\u3002\n\n\n\u9762\u5305\u677f\n\n\n\n\n**\u9762\u5305\u677f**\u662f\u7535\u5b50\u7535\u8def\u7684\u539f\u578b\u8bbe\u5907\u3002\u8fde\u63a5\u7535\u5b50\u5143\u4ef6\u548c\u5236\u4f5c\u7535\u8def\u4e0d\u9700\u8981\u710a\u63a5\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u9762\u5305\u677f\u7531\u884c\u548c\u5217\u7684\u5b54\u7ec4\u6210\uff0c\u91d1\u5c5e\u89e6\u70b9\u63d2\u5165\u7ec4\u4ef6\u3002\nArduino Sidekick Basic Kit\n \u9644\u5e26\u7684\u9762\u5305\u677f\u914d\u7f6e\u6709 **2\u00d730 \u4e2a\u4e94\u5b54**\u5217\u548c **4\u00d725 \u5b54**\u884c\u3002 \u8fd9\u4e9b\u5b54\u4ee5\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u5728\u5185\u90e8\u8fde\u63a5\u3002\n\n\n\n\n\u56fa\u5b9a\u7535\u963b\n\n\nBasic Kit \u63d0\u4f9b\u7684\u7535\u963b\u7531\u78b3\u5236\u6210\uff0c\u5c5e\u4e8e\u5b9a\u503c\u7535\u963b\u7c7b\u578b\u3002\u7535\u963b\u503c\u7531\u5f69\u8272\u5e26\u6807\u8bb0\u3002\u60a8\u53ef\u4ee5\u4ece\u7535\u963b\u989c\u8272\u4ee3\u7801\u8868\u4e2d\u83b7\u53d6\u503c\u3002\n\n\n\n\n\n\n\u7b2c\u4e00\u4e2a\u73af\u8868\u793a\u7535\u963b\u503c\u7684**\u7b2c\u4e00\u4e2a\u6570\u5b57**\u3002\n\n\n\n\n\n\n\u7b2c\u4e8c\u4e2a\u73af\u8868\u793a**\u7b2c\u4e8c\u4e2a\u6570\u5b57**\u3002\n\n\n\n\n\n\n\u7b2c\u4e09\u4e2a\u73af\u8868\u793a\u7535\u963b\u7684**\u4e58\u6570**\u503c\u3002\n\n\n\n\n\n\n\u7b2c\u56db\u4e2a\u73af\u5e26\u8868\u793a**\u516c\u5dee\u503c**\u3002\n\n\n\n\n\n\n\u7535\u4f4d\u8ba1 ( POT )\n\n\nPOT\u662f\u4e00\u4e2a\u53ef\u53d8\u7535\u963b\u5668\uff0c\u5176\u7535\u963b\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c\u65cb\u94ae\u6765\u6539\u53d8\u3002\u5b83\u6709\u4e09\u4e2a\u7aef\u5b50 - \u7535\u963b\u5668\u4e24\u4fa7\u7684\u7aef\u5b50\u8fde\u63a5\u5230\u7531\u7535\u963b\u6750\u6599\u5236\u6210\u7684\u5bfc\u4f53\u7aef\u3002\u4e2d\u95f4\u7aef\u5b50\u8fde\u63a5\u5230\u5728\u7535\u963b\u6750\u6599\u4e0a\u79fb\u52a8\u7684\u6ed1\u5757\u3002\u7535\u963b\u503c\u4e0e\u65cb\u94ae\u7684\u4f4d\u7f6e\u6210\u6bd4\u4f8b\u5730\u53d8\u5316\u3002\n\n\n\n\n\u70ed\u654f\u7535\u963b\n\n\n\u70ed\u654f\u7535\u963b\u662f\u7279\u6b8a\u7684\u7535\u963b\uff0c\u5176\u7535\u963b\u968f\u6e29\u5ea6\u53d8\u5316\u3002\u5b83\u4eec\u63d0\u4f9b\u975e\u5e38\u6709\u7528\u548c\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u611f\u6d4b\u6e29\u5dee\u3002\n\n\n\n\n\u5149\u654f\u7535\u963b (LDR)\n\n\n\u5f53\u5728\u5176\u4e0a\u7684\u5149\u7ebf\u5f3a\u5ea6\u53d8\u5316\u65f6\uff0cLDR \u4f1a\u6539\u53d8\u7535\u963b\u3002\u5b83\u4eec\u4e5f\u79f0\u4e3a\u5149\u7535\u6c60\u3002\u5f53\u6ca1\u6709\u5149\u7167\u5c04\u65f6\uff0c\u5b83\u63d0\u4f9b\u6700\u5927\u7684\u7535\u963b\uff0c\u5e76\u5728\u66b4\u9732\u4e8e\u660e\u4eae\u7684\u5149\u7ebf\u65f6\u63d0\u4f9b\u6700\u5c0f\u7684\u7535\u963b\u3002\u5b83\u7531\u5149\u654f\u6750\u6599\u5982\u786b\u9178\u9549\u7ec4\u6210\uff0c\u53ef\u8fde\u63a5\u5230\u7535\u8def\u3002\u5b83\u53ef\u4ee5\u7528\u4f5c\u5149\u611f\u6d4b\u5143\u4ef6\u3002\n\n\n\n\n\u53d1\u5149\u4e8c\u6781\u7ba1\n\n\n\u5f53 LED \u6b63\u5411\u901a\u7535\u65f6\u5c06\u53d1\u5149\u4eae\u8d77\u3002\u5b83\u4eec\u88ab\u5c01\u88c5\u5728\u900f\u660e\u7684\u5916\u58f3\u4e2d\uff0c\u5e76\u4e14\u8fdb\u5165\u5404\u79cd\u989c\u8272\uff0c\u5982\u7ea2\u8272\uff0c\u7eff\u8272\u548c\u84dd\u8272\u3002LED \u7531\u7837\u5316\u9553\u78f7\u5316\u7269\u5236\u6210\uff0c\u5e76\u4e14\u901a\u8fc7\u6539\u53d8\u7837\u548c\u78f7\u7684\u6bd4\u4f8b\uff0c\u53ef\u4ee5\u83b7\u5f97\u4e0d\u540c\u7684\u989c\u8272\u3002\u5355\u8272 LED \u5177\u6709\u4e24\u4e2a\u5f15\u7ebf\u9633\u6781( +ve )\u548c\u9634\u6781 ( -ve )\u3002 \u4e09\u8272 LED \u6709\u56db\u4e2a\u5f15\u7ebf - \u4e00\u4e2a\u9633\u6781\u548c\u4e09\u4e2a\u5bf9\u5e94\u6bcf\u4e2a\u989c\u8272\u7684\u9634\u6781\u3002LED \u53ef\u7528\u4e8e\u663e\u793a\u677f\u3002\n\n\n\n\n\u5f00\u5173\n\n\n\u5f00\u5173\u7528\u4e8e\u5173\u95ed\u6216\u6253\u5f00\u7535\u8def\u3002The Arduino Sidekick Basic Kit \u63d0\u4f9b\u7684\u5f00\u5173\u6709\u4e24\u79cd\u7c7b\u578b - \u6309\u94ae\u5f00\u5173\u548c\u6ed1\u52a8\u5f00\u5173\u3002\n\n\n\u6309\u94ae\u5f00\u5173\n\n\n\u53ea\u8981\u6309\u4e0b\u6309\u94ae\u5f00\u5173\uff0c\u7535\u8def\u5c31\u4f1a\u5173\u95ed\u3002\n\n\n\n\n\u6ed1\u52a8\u5f00\u5173\n\n\n\u6ed1\u52a8\u5f00\u5173\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e24\u4e2a\u4f4d\u7f6e\u5f00\u5173\u3002\u5b83\u53ef\u4ee5\u7528\u4e8e\u901a\u8fc7\u5c06\u7535\u8def\u8bbe\u7f6e\u5230\u9002\u5f53\u7684\u4f4d\u7f6e\u6765\u6253\u5f00\u6216\u5173\u95ed\u7535\u8def\u3002\n\n\n\n\n\u503e\u659c\u5f00\u5173\n\n\n\u503e\u659c\u5f00\u5173\u5305\u542b\u4e24\u4e2a\u8fde\u63a5\u5230\u7535\u8def\u7684\u7aef\u5b50\uff0c\u5f53\u6c34\u5e73\u503e\u659c\u65f6\uff0c\u5b83\u4f1a\u95ed\u5408\u7535\u8def\uff0c\u540c\u65f6\u5782\u76f4\u65cb\u8f6c\u65f6\u6253\u5f00\u7535\u8def\u3002\n\n\n\u7535\u5bb9\n\n\n\u7535\u5bb9\u5668\u7528\u4e8e\u5b58\u50a8\u7535\u8377\u3002\u5b83\u4eec\u5206\u4e3a\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b : \u7535\u89e3\u548c\u9676\u74f7\u76d8\u5f0f\u7535\u5bb9\u5668\u3002 \u7535\u5bb9\u5668\u4ee5\u5fae\u6cd5\u62c9\uff08uF\uff09\u4e3a\u5355\u4f4d\u3002\n\n\n\n\n\u8fde\u63a5\u7535\u5bb9\n\n\n\u7535\u5bb9\u5668\u53ef\u4ee5\u5728\u7535\u8def\u4e2d\u4ee5\u4e24\u79cd\u7c7b\u578b\u7684\u5e03\u7f6e\u8fde\u63a5\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\n\n\u4e32\u8054\u7535\u5bb9\n\n\n\u5f53\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u7535\u5bb9\u5668\u5f7c\u6b64\u4e32\u8054\u8fde\u63a5\u65f6\uff0c\u603b\u7b49\u6548\u7535\u5bb9\u7b49\u4e8e\u5404\u4e2a\u7535\u5bb9\u503c\u7684\u5012\u6570\u4e4b\u548c\u3002\n\n\n\u5e76\u8054\u7535\u5bb9\n\n\n\u5f53\u5e76\u8054\u8fde\u63a5\u7684\u4e24\u4e2a\u6216\u591a\u4e2a\u7535\u5bb9\u5668\u65f6\uff0c\u603b\u7b49\u6548\u7535\u5bb9\u7b49\u4e8e\u5355\u72ec\u7535\u5bb9\u7684\u603b\u548c\u3002\n\n\n\u7535\u89e3\u7535\u5bb9\u5668\n\n\n\u7535\u89e3\u7535\u5bb9\u5668\u901a\u5e38\u4f53\u79ef\u5c0f\uff0c\u7535\u5bb9\u91cf\u5927\u3002\u5b83\u4eec\u5206\u4e3a\u6781\u5316\u548c\u975e\u6781\u5316\u7535\u89e3\u7535\u5bb9\u5668\u3002\u4f7f\u7528\u94dd\uff0c\u94bd\uff0c\u9492\u548c\u94cb\u7b49\u91d1\u5c5e\u6765\u5f62\u6210\u9633\u6781\u548c\u9634\u6781\u7b94\u3002\n\n\n\u9676\u74f7\u76d8\u5f0f\u7535\u5bb9\u5668\n\n\n\u9676\u74f7\u7535\u5bb9\u5668\u4f7f\u7528\u5177\u6709\u8584\u91d1\u5c5e\u819c\u7684\u9676\u74f7\u7535\u4ecb\u8d28\u4f5c\u4e3a\u4e0e\u9676\u74f7\u7ed3\u5408\u7684\u7535\u6781\u3002\u5728 Disc \u7c7b\u578b\u4e2d\uff0c\u7535\u5bb9\u5668\u94f6\u56fa\u5b9a\u5728\u9676\u74f7\u7684\u4e24\u4fa7\u4ee5\u5f62\u6210\u5bfc\u4f53\u677f\u3002\u76d8\u5f0f\u7535\u5bb9\u5668\u4ec5\u7528\u4e8e\u8981\u6c42\u8f83\u5c0f\u7684\u7535\u5bb9\u503c\u65f6\u3002\n\n\n\u8702\u9e23\u5668\n\n\n\u8702\u9e23\u5668\u662f\u97f3\u9891\u4fe1\u53f7\u88c5\u7f6e\uff0c\u5176\u53ef\u4ee5\u662f\u673a\u68b0\u7684\uff0c\u673a\u7535\u7684\u6216\u538b\u7535\u7684\u3002 \u5b83\u6839\u636e\u5176\u4e2d\u4f7f\u7528\u7684\u6750\u6599\u7684\u632f\u8361\u4ea7\u751f\u5404\u79cd\u97f3\u9891\u4fe1\u53f7\u3002 \u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u62a5\u8b66\u548c\u5b9a\u65f6\u5668\u3002\n\n\n\n\n\u5c06\u957f\u5f15\u811a\u8fde\u63a5\u5230\u6b63\u7535\u538b\uff0c\u5c06\u77ed\u5f15\u811a\u8fde\u63a5\u5230\u5730\u3002\n\n\n\u8702\u9e23\u5668\u53ef\u4ee5\u8fde\u63a5\u6570\u5b57\u8f93\u51fa\uff0c\u8f93\u51fa\u9ad8\u7535\u5e73\u65f6\u4f1a\u53d1\u51fa\u4e00\u58f0\u97f3\u3002 \u6216\u8005\uff0c\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u6a21\u62df PWM \u8f93\u51fa\u4ee5\u4ea7\u751f\u5404\u79cd\u97f3\u8c03\u548c\u6548\u679c\u3002\n\n\n\u4e8c\u6781\u7ba1\n\n\n\u4e8c\u6781\u7ba1\u662f\u4ec5\u5728\u4e00\u4e2a\u65b9\u5411\u4f20\u5bfc\u7535\u6d41\u7684\u534a\u5bfc\u4f53\u6750\u6599\u3002\u53ea\u6709\u5728\u7535\u6e90\u7535\u538b\u5927\u4e8e_\u52bf\u5792\u7535\u4f4d_\u540e\u624d\u5f00\u59cb\u5bfc\u901a\u3002\u5b83\u7684\u4f5c\u7528\u5c31\u50cf\u6b63\u5411\u504f\u7f6e\u72b6\u6001\u4e0b\u7684\u95ed\u5408\u5f00\u5173\uff0c\u5f53\u53cd\u5411\u504f\u7f6e\u65f6\uff0c\u5176\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u5f00\u8def\u5f00\u5173\u3002\u4e8c\u6781\u7ba1\u57fa\u4e8e\u534a\u5bfc\u4f53\u6750\u6599\u5206\u7c7b\uff0c\u53ef\u7528\u4e8e\u5236\u9020 PN \u7ed3\u4e8c\u6781\u7ba1\uff0c\u9f50\u7eb3\u4e8c\u6781\u7ba1\uff0c\u53d1\u5149\u4e8c\u6781\u7ba1\u7b49\u3002\n\n\n\u504f\u7f6e\u4e8c\u6781\u7ba1\n\n\n\u5c06\u4e8c\u6781\u7ba1\u65bd\u52a0\u7535\u538b\u79f0\u4e3a\u504f\u7f6e\u4e8c\u6781\u7ba1\u3002\u5f53\u5728\u4e24\u4e2a\u7aef\u5b50\u4e4b\u95f4\u65bd\u52a0**\u6b63\u7535\u6e90**\u7535\u538b\u65f6\uff0c\u4e8c\u6781\u7ba1\u5c06\u83b7\u5f97_\n\u6b63\u5411\u504f\u538b\n\uff0c\u5e76\u5f00\u59cb\u5bf9\u7845\u4e8c\u6781\u7ba1\u65bd\u52a0\u9ad8\u4e8e 0.7v \u7684\u7535\u6d41\uff0c\u5bf9\u4e8e\u9517\u4e8c\u6781\u7ba1\u5f00\u59cb\u5bfc\u901a 0.3v\u3002\u5f53\u65bd\u52a0**\u8d1f\u7535\u538b\u65f6**\u5728\u4e8c\u6781\u7ba1\u7684\u7aef\u5b50\u4e4b\u95f4\uff0c\u5c31\u8bf4\u88ab\n\u53cd\u5411\u504f\u7f6e\n_\u3002\u5f53\u53cd\u5411\u504f\u7f6e\u7535\u538b\u8d85\u8fc7\u51fb\u7a7f\u7535\u538b\u65f6\uff0c\u4e8c\u6781\u7ba1\u635f\u574f\u3002\n\n\n\n\n\u8ff7\u4f60\u4f3a\u670d\u5668\n\n\n\u4f3a\u670d\u7cfb\u7edf\u662f\u5177\u6709\u9f7f\u8f6e\u548c\u53cd\u9988\u7cfb\u7edf\u7684\u76f4\u6d41\u7535\u52a8\u673a\uff0c\u7528\u4e8e\u673a\u5668\u4eba\u7684\u9a71\u52a8\u673a\u6784\u3002\n\n\n\n\n\u6559\u7a0b\n\n\nHello World! : The Blinking LED\n\n\n\u7535\u8def\n\n\n\n\n\u5c06 LED \u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a \n8\n\uff0c\u5982\u4e0b\u6240\u793a\u3002 330 \u6b27\u59c6\u7535\u963b\u9650\u5236\u4e86\u6d41\u5411 LED \u7684\u7535\u6d41\u3002\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 :\n\n//Blink a LED connected to Digital Pin 8 via a 330 Ohm resitors.\n\nvoid setup()   {\n    pinMode(8, OUTPUT);       // Initialize Arduino Digital Pin 8 as output\n}\n\n\nvoid loop()\n{\n    digitalWrite(8, HIGH);   // Switch On LED\n    delay(500);              // Wait for half a second\n    digitalWrite(8, LOW);    // Switch Off LED\n    delay(500);              // Wait for half a second\n}\n\n\n\n\u8fd0\u884c LED \u663e\u793a\n\n\n\u7535\u8def\n\n\n\n\n\u901a\u8fc7\u4e00\u4e2a 330 \u6b27\u59c6\u7535\u963b\u5c06 3 \u4e2a LED \u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a \n9\n,\n10\n \u548c \n11\n\u3002\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 :\n\n//Running LED display: Three LEDs connected to Digital Pin 9, 10 and 11.\n\nvoid setup()\n{\n    pinMode(9, OUTPUT);        // Initialize Arduino Digital Pins 9 as output\n    pinMode(10, OUTPUT);       // Initialize Arduino Digital Pins 10 as output\n    pinMode(11, OUTPUT);       // Initialize Arduino Digital Pins 11 as output\n}\n\n\nvoid loop()\n{\n\n    digitalWrite(9, LOW);\n    digitalWrite(10, LOW);\n    digitalWrite(11, HIGH);\n    delay(250);              // Wait for quarter of a second\n    digitalWrite(9, LOW);\n    digitalWrite(10, HIGH);\n    digitalWrite(11, LOW);\n    delay(250);              // Wait for quarter of a second\n    digitalWrite(9, HIGH);\n    digitalWrite(10, LOW);\n    digitalWrite(11, LOW);\n    delay(250);              // Wait for quarter of a second\n\n}\n\n\n\n###   \u4e0eArduino \u901a\u8bdd\uff1a\u8fde\u63a5\u6309\u94ae\u5f00\u5173\n\n\n\u7535\u8def\n\n\n\n\n\n\n\u5c06 LED \u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a \n8\n\uff0c\u5982\u4e0b\u6240\u793a\u3002330 \u6b27\u59c6\u7535\u963b\u9650\u5236\u4e86\u6d41\u5411 LED \u7684\u7535\u6d41\u3002\n\n\n\n\n\n\n\u5c06\u4e00\u4e2a\u6309\u94ae\u5f00\u5173\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a \n12\n\uff0c\u53e6\u4e00\u4e2a\u901a\u8fc7 10K \u7535\u963b\u8fde\u63a5\u5230 \nGND\n\u3002\n\n\n\n\n\n\n\u5c06\u6309\u94ae\u7684\u53e6\u4e00\u7aef\u8fde\u63a5\u5230 +5V\u3002\n\n\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 :\n\n//Pushbutton switch demo: LED is connected to digital pin 8 and Pushbutton is connected to digital pin 12.\n//The LED glows when the button is pressed.\n\nchar inputButtonState;\n\nvoid setup()\n{\n    pinMode(8, OUTPUT);        // Initialize Arduino Digital Pins 8 as output for connecting LED\n    pinMode(12,INPUT);         // Initialize Arduino Digital Pins 12 as input for connecting Pushbutton\n}\n\n\nvoid loop()\n{\n    inputButtonState = digitalRead(12); //Read the Pushbutton state.\n\n    if (inputButtonState == HIGH)\n    {\n        digitalWrite(8, HIGH);  //Switch on LED\n    }\n    else\n    {\n        digitalWrite(8, LOW);   //Switch off LED\n    }\n\n}\n\n\n\n\u4ee5\u4e0a\u786e\u5b9e\u8bf4\u660e\u4e86\u5982\u4f55\u5411 Arduino \u53d1\u9001\u4fe1\u53f7\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u6ca1\u6709 Arduino\uff0c\u4f60\u53ef\u4ee5\u5b9e\u73b0\u540c\u6837\u7684\u76ee\u6807\u3002 \u53ea\u9700\u6309\u4e0b\u6309\u94ae\u5173\u95ed\u7535\u8def\uff0c\u7136\u540e\u6309\u5982\u4e0b\u6240\u793a\u7ffb\u8f6c HIGH/LOW \u503c :\n\nvoid loop()\n{\n    inputButtonState = digitalRead(12); //Read the Pushbutton state.\n\n    if (inputButtonState == HIGH)\n    {\n        digitalWrite(8, LOW);  //Switch on LED\n    }\n    else\n    {\n        digitalWrite(8, HIGH);   //Switch off LED\n    }\n\n\n\n\u5f53\u7535\u8def\u95ed\u5408\u65f6LED \u5c06\u4eae\u8d77\u3002\n\n\n3 \u6a21\u62df : POT\n\n\n\u7535\u8def\n\n\n\n\n\n\n\u901a\u8fc7 220 \u6b27\u59c6\u7535\u963b\u5c06 LED \u7684\u9633\u6781\u8fde\u63a5\u5230 \nPWM\n \u5f15\u811a\u3002\n\n\n\n\n\n\n\u5c06 LED \u7684\u9634\u6781\u8fde\u63a5\u5230 \nGND\n \u5f15\u811a\u3002\n\n\n\n\n\n\n\u5c06 POT \u653e\u5728\u9762\u5305\u677f\u4e0a\u3002\n\n\n\n\n\n\n\u5c06 POT \u7684\u53f3\u811a\u8fde\u63a5\u5230 +5V\u3002\n\n\n\n\n\n\n\u5c06 POT \u7684\u4e2d\u95f4\u811a\u8fde\u63a5\u5230\u4efb\u4f55\u6a21\u62df\u8f93\u5165\u5f15\u811a (0-5)\u3002\n\n\n\n\n\n\n\u5c06 POT \u7684\u5de6\u811a\u8fde\u63a5\u5230\u63a5\u5730\u7aef\u3002\n\n\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\u5c06 LED \u9633\u6781\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a \n5\n ( \u800c\u4e0d\u662f 5V )\u3002\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 :\n\n//Varying the brightness of the LED using a Pot\nint value=0;\nint mval;\nvoid setup()\n{\n    pinMode(5, OUTPUT);\n}\nvoid loop()\n{\n    value=analogRead(A1); //read analog value from input A1\n    // PWM output given to the LED\n    mval = map(value, 0, 1023, 0, 100);\n    analogWrite(5,mval);\n\n}\n\n\n\n4 \u5f69\u8679\u53f0 : \u4e09\u8272 LED\n\n\n\u7535\u8def\n\n\nThe Arduino Sidekick Basic Kit \u63d0\u4f9b\u7684 RGB LED \u662f\u5e38\u89c1\u7684\u9633\u6781\u578b\u3002\u6700\u957f\u7684\u94c5\u662f\u9633\u6781\u3002\u5176\u4ed6\u4e09\u4e2a\u5f15\u7ebf\u5206\u522b\u662f\u7ea2\uff0c\u7eff\u548c\u84dd\u7684\u9634\u6781\u3002\n\n\n\n\n\n\n\u901a\u8fc7\u4e00\u4e2a 330 \u6b27\u59c6\u7684\u7535\u963b\u5c06 RGB \u9634\u6781 LED \u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a \n9\n,\n10\n \u548c \n11\n\u3002\n\n\n\n\n\n\n\u5c06\u9633\u6781\u8fde\u63a5\u5230 +5v\n\n\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 :\n\nvoid setup()  {\n\n}\n\nvoid loop()  {\n\n\n    for(int b = 0 ; b \n= 255; b=b+5)\n    {\n        for(int g = 0 ; g \n= 255; g=g+5)\n        {\n            for(int r= 0 ; r \n= 255; r=r+5)\n            {\n                analogWrite(9, b);\n                analogWrite(10, g);\n                analogWrite(11, r);\n                delay(10);\n\n            }\n        }\n    }\n\n}\n\n\n\n5 \u97f3\u4e50 :\n\n\n\u7535\u8def\n\n\n\n\n\n\n\u5c06\u8702\u9e23\u5668\u9633\u6781\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a \n11\n\u3002\n\n\n\n\n\n\n\u5c06\u8702\u9e23\u5668\u9634\u6781\u63a5\u5230 \nGND\n\u3002\n\n\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 :\n\n\n#define NOTE_D0 98\n#define NOTE_D1 294\n#define NOTE_D2 330\n#define NOTE_D3 350\n#define NOTE_D4 393\n#define NOTE_D5 441\n#define NOTE_D6 495\n#define NOTE_D7 556\n#define NOTE_DL1 147\n#define NOTE_DL2 165\n#define NOTE_DL3 175\n#define NOTE_DL4 196\n#define NOTE_DL5 221\n#define NOTE_DL6 248\n#define NOTE_DL7 278\n#define NOTE_DH1 589\n#define NOTE_DH2 661\n#define NOTE_DH3 700\n#define NOTE_DH4 786\n#define NOTE_DH5 882\n#define NOTE_DH6 990\n#define NOTE_DH7 112\n\n#define WHOLE 1\n#define HALF 0.5\n#define QUARTER 0.25\n#define EIGHTH 0.125\n#define SIXTEENTH 0.625\n\n// notes in the melody:\nint tune[] =\n{\n    NOTE_D0,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D4,NOTE_D5,NOTE_D6,NOTE_D7,\n    NOTE_DL1,NOTE_DL2,NOTE_DL3,NOTE_DL4,NOTE_DL5,NOTE_DL6,NOTE_DL7,\n    NOTE_DH1,NOTE_DH2,NOTE_DH3,NOTE_DH4,NOTE_DH5,NOTE_DH6,NOTE_DH7,\n};\n/* note durations: 1 = one note*/\n\nfloat duration[]=\n{1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1,1,1,1,1,};\nint length;\nint tonePin=11;                // buzzer pin\nvoid setup()\n{ Serial.begin(9600);\n    pinMode(tonePin,OUTPUT);   //  initialize the digital pin as an output\n    length = sizeof(tune)/sizeof(tune[0]);\n}\nvoid loop()\n{\n    for(int x=1;x\nlength;x++)\n    {tone(tonePin,tune[x]);\n        delay(400*duration[(x%100)]);    // to distinguish the notes, set a minimum time between them.\n\n        noTone(tonePin); // stop the tone playing:\n    }\n}\n\n\n\n\n6 \u8ff7\u4f60\u4f3a\u670d\u5668 :\n\n\n\u7535\u8def\n\n\n\n\n\u5c06\u4f3a\u670d\u7684\u7ea2\u8272\u7ebf\u8fde\u63a5\u5230 +5v \u7535\u6e90\u3002\n\n\n\n\n\u5c06\u4f3a\u670d\u7684\u9ed1\u8272\u7ebf\u8fde\u63a5\u5230\u5730\u3002\n\n\n\n\n\n\n\u5c06\u4f3a\u670d\u7684\u9ec4\u8272\u7ebf\u8fde\u63a5\u5230 Arduino \u4e2d\u7684\u4efb\u4f55 PWM \u5f15\u811a\u3002\n\n\n\n\n\n\n\u5c06 POT \u7684\u53f3\u811a\u8fde\u63a5\u5230 +5v\u3002\n\n\n\n\n\n\n\u5c06 POT \u7684\u4e2d\u95f4\u811a\u8fde\u63a5\u5230\u4efb\u4f55\u6a21\u62df\u8f93\u5165\u5f15\u811a (0-5)\u3002\n\n\n\n\n\n\n\u5c06 POT \u7684\u5de6\u811a\u8fde\u63a5\u5230\u63a5\u5730\u7aef\u3002\n\n\n\n\n\n\n\n\u7a0b\u5e8f\n\n\n\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 :\n\n// Controlling a servo position using a potentiometer (variable resistor)\n// by Michal Rinott \nhttp://people.interaction-ivrea.it/m.rinott\n\n\n#include \nServo.h\n\n\nServo myservo;  // create servo object to control a servo\n\nint potpin = 1;  // analog pin used to connect the potentiometer\nint val;    // variable to read the value from the analog pin\n\nvoid setup()\n{\n    myservo.attach(5);  // attaches the servo on pin 5 to the servo object\n    Serial.begin(19200); // some servos doesn\nt work without Serial\n}\n\nvoid loop()\n{\n    val = analogRead(potpin);            // reads the value of the potentiometer (value between 0 and 1023)\n    val = map(val, 0, 1023, 0, 179);     // scale it to use it with the servo (value between 0 and 180)\n    myservo.write(val);                  // sets the servo position according to the scaled value\n    delay(15);                           // waits for the servo to get there\n}\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\n\n\n\n\u6709\u4e00\u4e2a\u65e0\u710a\u9762\u5305\u677f\uff0c\u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u8d2d\u4e70\u70d9\u94c1\u6216\u5b66\u4e60\u5982\u4f55\u710a\u63a5\u3002\n\n\n\n\n\n\n\u6709\u5f88\u591a\u8df3\u7ebf\uff0c\u957f\u800c\u67d4\u8f6f\uff0c\u5177\u6709\u521a\u6027\u5c16\u7aef\u3002\u8fd9\u4e9b\u8df3\u7ebf\u6bd4\u4ee5\u5f80\u7684\u56fa\u5b9a\u957f\u5ea6\u5b9e\u7ebf\u8df3\u7ebf\u597d\u5f97\u591a\u3002\n\n\n\n\n\n\n\u60a8\u7684\u7b2c\u4e00\u4e2a\u9879\u76ee\u6709\u5f88\u591a LED \u548c\u7535\u963b\uff0c\u5305\u62ec\u4e00\u4e2a RGB LED\uff0c\u5b83\u662f\u4e00\u4e2a\u5355\u4e00\u7684 LED \u5c01\u88c5\uff0c\u5185\u90e8\u6709\u4e09\u4e2a\u4e3b\u8981\u7684\u5f69\u8272 LED\u3002\u901a\u8fc7\u8c03\u6574\u4e0d\u540c\u539f\u8272 LED \u7684\u5f3a\u5ea6\uff0c\u989c\u8272\u5c06\u6df7\u5408\u5728\u4e00\u8d77\u5e76\u4ea7\u751f\u5f69\u8679\u7684\u6240\u6709\u989c\u8272\u3002\n\n\n\n\n\u751a\u81f3\u8fd8\u6709\u4e00\u4e2a\u6559\u60a8\u600e\u4e48\u505a\u6765\u8bfb\u53d6\u7535\u963b\u503c\u3002\n\n\n\u503e\u659c\u5f00\u5173\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u88c5\u7f6e\uff0c\u5185\u90e8\u6709\u4e00\u4e2a\u5c0f\u91d1\u5c5e\u7403\u3002\u5982\u679c\u8bbe\u5907\u503e\u659c\u5230\u4e00\u4fa7\uff0c\u91d1\u5c5e\u7403\u5c06\u89e6\u53ca\u7535\u6c14\u89e6\u70b9\u3002 \u8be5\u4f20\u611f\u5668\u9002\u7528\u4e8e\u5404\u79cd\u9879\u76ee\uff0c\u5982 DIY \u9632\u76d7\u62a5\u8b66\u5668\u3002\n\n\n\u5f53\u60a8\u60f3\u8981\u68c0\u6d4b\u6e29\u5ea6\u65f6\uff0c\u70ed\u654f\u7535\u963b\u5bf9\u4e8e\u60a8\u7684\u9879\u76ee\u5f88\u6709\u7528\u3002\n\n\n\u5149\u7535\u963b\u53ef\u4ee5\u68c0\u6d4b\u5149\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u706f\u6ce1\u548c\u9633\u5149\u7167\u5c04\u3002\u5149\u7535\u963b\u901a\u5e38\u7528\u4e8e\u68c0\u6d4b\u9ed1\u6697\u65f6\u95f4\uff0c\u591c\u95f4\u5f00\u706f\u3002\n\n\n\u8be5\u5957\u4ef6\u4e2d\u7684\u8702\u9e23\u5668\u7279\u522b\u9002\u5408\u6f14\u594f\u9a6c\u91cc\u5965\u5144\u5f1f\u4e3b\u9898\u66f2\u3002\n\n\n\u6709\u4e00\u4e2a\u8ff7\u4f60\u4f3a\u670d\u5668\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u6253\u5f00\u548c\u5173\u95ed\u95e8\u6813\uff0c\u706f\u5f00\u5173\u6216\u9600\u95e8\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5236\u4f5c\u8ff7\u4f60\u5f39\u5c04\u5668\u3002\n\n\n\u7535\u4f4d\u5668\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8f93\u5165\u8bbe\u5907\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u63a7\u5236\u4f3a\u670d\u81c2\u7684\u89d2\u5ea6\u6216 LED \u7684\u5f3a\u5ea6\u3002\n\n\n\n\n\u5916\u90e8\u94fe\u63a5\n\n\n\n\nArduino Video tutorial series by Jeremy Blum", 
            "title": "Sidekick Basic Kit for Arduino V2"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_1", 
            "text": "\u9762\u5305\u677f x 1  \u7eff\u8272 LED x 5  \u7ea2\u8272 LED x 5  RGB \u5171\u9633\u6781 LED x 1  \u9676\u74f7\u7535\u5bb9 (10nF x 10+100nF x 10)  \u94dd\u7535\u5bb9 (100uF x 5)  \u7535\u963b (330R x 10+1k x 10+10k x 10)  \u503e\u659c\u5f00\u5173 x 1  \u70ed\u654f\u7535\u963b x 1  \u5149\u7535\u963b x 1  \u4e8c\u6781\u7ba1 x 1  \u8702\u9e23\u5668 x 1  \u6309\u952e x 5  \u5f00\u5173 x 5  \u8ff7\u4f60\u4f3a\u670d\u5668 x 1  \u5e26\u65cb\u94ae\u7684\u7535\u4f4d\u5668 x 1  \u9762\u5305\u677f\u8df3\u7ebf x 25\uff085x \u957f\u7ebf, 20 x \u77ed\u7ebf\uff09 \u9762\u5305\u677f x 1  \u76d2 x 4", 
            "title": "\u5957\u4ef6\u96f6\u4ef6"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_2", 
            "text": "", 
            "title": "\u7535\u5b66\u57fa\u7840\u77e5\u8bc6\u666e\u53ca"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_3", 
            "text": "\u7535\u6d41\u662f\u5bfc\u4f53\u4e2d\u6d41\u52a8\u7535\u8377\u7684\u901f\u7387\u3002\u7535\u538b\u662f\u65bd\u52a0\u5728\u4e24\u70b9\u4e4b\u95f4\u7528\u6765\u4f20\u5bfc\u7535\u6d41\u7684\u7535\u4f4d\u5dee (\u7535\u9a71\u52a8\u529b)\u3002 \u7535\u6d41\u4ee5\u5b89\u57f9 (A) \u4e3a\u5355\u4f4d\uff0c\u7535\u538b\u4ee5\u4f0f\u7279 (V) \u4e3a\u5355\u4f4d\u3002", 
            "title": "\u7535\u6d41\u548c\u7535\u538b"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_4", 
            "text": "\u7535\u963b\u662f\u5bfc\u4f53\u4e2d\u6d41\u52a8\u7535\u6d41\u7684\u969c\u788d\u3002\u5b83\u4eec\u7528\u4e8e\u9650\u5236\u7535\u6d41\u5230\u8bf8\u5982\u706f\u7684\u7535\u5b50\u8bbe\u5907\u7684\u6d41\u52a8\u3002\u5bf9\u4e8e\u6d41\u52a8\u7535\u6d41\u7684\u963b\u6297\u7528\u6b27\u59c6 (\u03a9) \u8868\u793a\uff0c\u7535\u963b\u53ef\u5206\u4e3a_ \u56fa\u5b9a\u7535\u963b \u548c \u53ef\u53d8\u7535\u963b( POT ) _\u3002  \u8fde\u63a5\u7535\u963b  \u7535\u963b\u53ef\u4ee5\u4ee5\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u8fde\u63a5 : \u5e76\u8054\u6216\u5f7c\u6b64\u4e32\u8054\u3002  \u4e32\u8054\u7535\u963b  \u5f53\u7535\u963b\u4e32\u8054\u65f6\uff0c\u603b\u7b49\u6548\u7535\u963b\u5c06\u7b49\u4e8e\u4e32\u8054\u7535\u963b\u7684\u6240\u6709\u503c\u7684\u603b\u548c\u3002  \u5e76\u8054\u7535\u963b  \u5f53\u7535\u963b\u5e76\u8054\u65f6\uff0c\u603b\u7b49\u6548\u7535\u963b\u7684\u5012\u6570\u7b49\u4e8e\u6bcf\u4e2a\u7535\u963b\u7684\u5012\u6570\u4e4b\u548c\u3002", 
            "title": "\u7535\u963b"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_5", 
            "text": "\u7535\u6d41\uff0c\u7535\u538b\u548c\u7535\u963b\u4e4b\u95f4\u7684\u5173\u7cfb\u7531\u6b27\u59c6\u5b9a\u5f8b\u51b3\u5b9a - \u5176\u4e2d\u6307\u51fa\u201c\u4e24\u70b9\u4e4b\u95f4\u7684\u5bfc\u4f53\u7535\u6d41 ( I \u5b89\u57f9) \u4e0e\u4e24\u70b9( V \u4f0f\u7279)\u4e4b\u95f4\u7684\u7535\u4f4d\u5dee\u6216\u7535\u538b\u6210\u6b63\u6bd4\uff0c \u4e0e\u5b83\u4eec\u4e4b\u95f4\u7684\u7535\u963b( R \u6b27\u59c6)\u6210\u6bd4\u4f8b\uff0c\u5373 I = V / R\u3002\u56e0\u6b64 V = IR \u6216 R = V / I.\u4ee5\u4e0b\u6b27\u59c6\u5b9a\u5f8b\u4e09\u89d2\u5f62\u53ef\u7528\u4e8e\u8bb0\u4f4f V\uff0cI \u548c R \u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5782\u76f4\u7ebf\u8868\u793a\u4e58\u6cd5\u8fd0\u7b97\uff0c\u6c34\u5e73\u7ebf\u8868\u793a\u9664\u6cd5\u8fd0\u7b97\u3002   eg : \u56e0\u6b64\uff0c\u8981\u77e5\u9053\u5f53\u524d I\uff0c\u6211\u4eec\u5c06 V \u9664\u4ee5 R\u3002", 
            "title": "\u6b27\u59c6\u5b9a\u5f8b"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_6", 
            "text": "**\u9762\u5305\u677f**\u662f\u7535\u5b50\u7535\u8def\u7684\u539f\u578b\u8bbe\u5907\u3002\u8fde\u63a5\u7535\u5b50\u5143\u4ef6\u548c\u5236\u4f5c\u7535\u8def\u4e0d\u9700\u8981\u710a\u63a5\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u9762\u5305\u677f\u7531\u884c\u548c\u5217\u7684\u5b54\u7ec4\u6210\uff0c\u91d1\u5c5e\u89e6\u70b9\u63d2\u5165\u7ec4\u4ef6\u3002 Arduino Sidekick Basic Kit  \u9644\u5e26\u7684\u9762\u5305\u677f\u914d\u7f6e\u6709 **2\u00d730 \u4e2a\u4e94\u5b54**\u5217\u548c **4\u00d725 \u5b54**\u884c\u3002 \u8fd9\u4e9b\u5b54\u4ee5\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u5728\u5185\u90e8\u8fde\u63a5\u3002", 
            "title": "\u9762\u5305\u677f"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_7", 
            "text": "Basic Kit \u63d0\u4f9b\u7684\u7535\u963b\u7531\u78b3\u5236\u6210\uff0c\u5c5e\u4e8e\u5b9a\u503c\u7535\u963b\u7c7b\u578b\u3002\u7535\u963b\u503c\u7531\u5f69\u8272\u5e26\u6807\u8bb0\u3002\u60a8\u53ef\u4ee5\u4ece\u7535\u963b\u989c\u8272\u4ee3\u7801\u8868\u4e2d\u83b7\u53d6\u503c\u3002    \u7b2c\u4e00\u4e2a\u73af\u8868\u793a\u7535\u963b\u503c\u7684**\u7b2c\u4e00\u4e2a\u6570\u5b57**\u3002    \u7b2c\u4e8c\u4e2a\u73af\u8868\u793a**\u7b2c\u4e8c\u4e2a\u6570\u5b57**\u3002    \u7b2c\u4e09\u4e2a\u73af\u8868\u793a\u7535\u963b\u7684**\u4e58\u6570**\u503c\u3002    \u7b2c\u56db\u4e2a\u73af\u5e26\u8868\u793a**\u516c\u5dee\u503c**\u3002", 
            "title": "\u56fa\u5b9a\u7535\u963b"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#pot", 
            "text": "POT\u662f\u4e00\u4e2a\u53ef\u53d8\u7535\u963b\u5668\uff0c\u5176\u7535\u963b\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c\u65cb\u94ae\u6765\u6539\u53d8\u3002\u5b83\u6709\u4e09\u4e2a\u7aef\u5b50 - \u7535\u963b\u5668\u4e24\u4fa7\u7684\u7aef\u5b50\u8fde\u63a5\u5230\u7531\u7535\u963b\u6750\u6599\u5236\u6210\u7684\u5bfc\u4f53\u7aef\u3002\u4e2d\u95f4\u7aef\u5b50\u8fde\u63a5\u5230\u5728\u7535\u963b\u6750\u6599\u4e0a\u79fb\u52a8\u7684\u6ed1\u5757\u3002\u7535\u963b\u503c\u4e0e\u65cb\u94ae\u7684\u4f4d\u7f6e\u6210\u6bd4\u4f8b\u5730\u53d8\u5316\u3002", 
            "title": "\u7535\u4f4d\u8ba1 ( POT )"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_8", 
            "text": "\u70ed\u654f\u7535\u963b\u662f\u7279\u6b8a\u7684\u7535\u963b\uff0c\u5176\u7535\u963b\u968f\u6e29\u5ea6\u53d8\u5316\u3002\u5b83\u4eec\u63d0\u4f9b\u975e\u5e38\u6709\u7528\u548c\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u611f\u6d4b\u6e29\u5dee\u3002", 
            "title": "\u70ed\u654f\u7535\u963b"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#ldr", 
            "text": "\u5f53\u5728\u5176\u4e0a\u7684\u5149\u7ebf\u5f3a\u5ea6\u53d8\u5316\u65f6\uff0cLDR \u4f1a\u6539\u53d8\u7535\u963b\u3002\u5b83\u4eec\u4e5f\u79f0\u4e3a\u5149\u7535\u6c60\u3002\u5f53\u6ca1\u6709\u5149\u7167\u5c04\u65f6\uff0c\u5b83\u63d0\u4f9b\u6700\u5927\u7684\u7535\u963b\uff0c\u5e76\u5728\u66b4\u9732\u4e8e\u660e\u4eae\u7684\u5149\u7ebf\u65f6\u63d0\u4f9b\u6700\u5c0f\u7684\u7535\u963b\u3002\u5b83\u7531\u5149\u654f\u6750\u6599\u5982\u786b\u9178\u9549\u7ec4\u6210\uff0c\u53ef\u8fde\u63a5\u5230\u7535\u8def\u3002\u5b83\u53ef\u4ee5\u7528\u4f5c\u5149\u611f\u6d4b\u5143\u4ef6\u3002", 
            "title": "\u5149\u654f\u7535\u963b (LDR)"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_9", 
            "text": "\u5f53 LED \u6b63\u5411\u901a\u7535\u65f6\u5c06\u53d1\u5149\u4eae\u8d77\u3002\u5b83\u4eec\u88ab\u5c01\u88c5\u5728\u900f\u660e\u7684\u5916\u58f3\u4e2d\uff0c\u5e76\u4e14\u8fdb\u5165\u5404\u79cd\u989c\u8272\uff0c\u5982\u7ea2\u8272\uff0c\u7eff\u8272\u548c\u84dd\u8272\u3002LED \u7531\u7837\u5316\u9553\u78f7\u5316\u7269\u5236\u6210\uff0c\u5e76\u4e14\u901a\u8fc7\u6539\u53d8\u7837\u548c\u78f7\u7684\u6bd4\u4f8b\uff0c\u53ef\u4ee5\u83b7\u5f97\u4e0d\u540c\u7684\u989c\u8272\u3002\u5355\u8272 LED \u5177\u6709\u4e24\u4e2a\u5f15\u7ebf\u9633\u6781( +ve )\u548c\u9634\u6781 ( -ve )\u3002 \u4e09\u8272 LED \u6709\u56db\u4e2a\u5f15\u7ebf - \u4e00\u4e2a\u9633\u6781\u548c\u4e09\u4e2a\u5bf9\u5e94\u6bcf\u4e2a\u989c\u8272\u7684\u9634\u6781\u3002LED \u53ef\u7528\u4e8e\u663e\u793a\u677f\u3002", 
            "title": "\u53d1\u5149\u4e8c\u6781\u7ba1"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_10", 
            "text": "\u5f00\u5173\u7528\u4e8e\u5173\u95ed\u6216\u6253\u5f00\u7535\u8def\u3002The Arduino Sidekick Basic Kit \u63d0\u4f9b\u7684\u5f00\u5173\u6709\u4e24\u79cd\u7c7b\u578b - \u6309\u94ae\u5f00\u5173\u548c\u6ed1\u52a8\u5f00\u5173\u3002  \u6309\u94ae\u5f00\u5173  \u53ea\u8981\u6309\u4e0b\u6309\u94ae\u5f00\u5173\uff0c\u7535\u8def\u5c31\u4f1a\u5173\u95ed\u3002   \u6ed1\u52a8\u5f00\u5173  \u6ed1\u52a8\u5f00\u5173\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e24\u4e2a\u4f4d\u7f6e\u5f00\u5173\u3002\u5b83\u53ef\u4ee5\u7528\u4e8e\u901a\u8fc7\u5c06\u7535\u8def\u8bbe\u7f6e\u5230\u9002\u5f53\u7684\u4f4d\u7f6e\u6765\u6253\u5f00\u6216\u5173\u95ed\u7535\u8def\u3002   \u503e\u659c\u5f00\u5173  \u503e\u659c\u5f00\u5173\u5305\u542b\u4e24\u4e2a\u8fde\u63a5\u5230\u7535\u8def\u7684\u7aef\u5b50\uff0c\u5f53\u6c34\u5e73\u503e\u659c\u65f6\uff0c\u5b83\u4f1a\u95ed\u5408\u7535\u8def\uff0c\u540c\u65f6\u5782\u76f4\u65cb\u8f6c\u65f6\u6253\u5f00\u7535\u8def\u3002", 
            "title": "\u5f00\u5173"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_11", 
            "text": "\u7535\u5bb9\u5668\u7528\u4e8e\u5b58\u50a8\u7535\u8377\u3002\u5b83\u4eec\u5206\u4e3a\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b : \u7535\u89e3\u548c\u9676\u74f7\u76d8\u5f0f\u7535\u5bb9\u5668\u3002 \u7535\u5bb9\u5668\u4ee5\u5fae\u6cd5\u62c9\uff08uF\uff09\u4e3a\u5355\u4f4d\u3002   \u8fde\u63a5\u7535\u5bb9  \u7535\u5bb9\u5668\u53ef\u4ee5\u5728\u7535\u8def\u4e2d\u4ee5\u4e24\u79cd\u7c7b\u578b\u7684\u5e03\u7f6e\u8fde\u63a5\uff0c\u5982\u4e0b\u6240\u793a\u3002  \u4e32\u8054\u7535\u5bb9  \u5f53\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u7535\u5bb9\u5668\u5f7c\u6b64\u4e32\u8054\u8fde\u63a5\u65f6\uff0c\u603b\u7b49\u6548\u7535\u5bb9\u7b49\u4e8e\u5404\u4e2a\u7535\u5bb9\u503c\u7684\u5012\u6570\u4e4b\u548c\u3002  \u5e76\u8054\u7535\u5bb9  \u5f53\u5e76\u8054\u8fde\u63a5\u7684\u4e24\u4e2a\u6216\u591a\u4e2a\u7535\u5bb9\u5668\u65f6\uff0c\u603b\u7b49\u6548\u7535\u5bb9\u7b49\u4e8e\u5355\u72ec\u7535\u5bb9\u7684\u603b\u548c\u3002  \u7535\u89e3\u7535\u5bb9\u5668  \u7535\u89e3\u7535\u5bb9\u5668\u901a\u5e38\u4f53\u79ef\u5c0f\uff0c\u7535\u5bb9\u91cf\u5927\u3002\u5b83\u4eec\u5206\u4e3a\u6781\u5316\u548c\u975e\u6781\u5316\u7535\u89e3\u7535\u5bb9\u5668\u3002\u4f7f\u7528\u94dd\uff0c\u94bd\uff0c\u9492\u548c\u94cb\u7b49\u91d1\u5c5e\u6765\u5f62\u6210\u9633\u6781\u548c\u9634\u6781\u7b94\u3002  \u9676\u74f7\u76d8\u5f0f\u7535\u5bb9\u5668  \u9676\u74f7\u7535\u5bb9\u5668\u4f7f\u7528\u5177\u6709\u8584\u91d1\u5c5e\u819c\u7684\u9676\u74f7\u7535\u4ecb\u8d28\u4f5c\u4e3a\u4e0e\u9676\u74f7\u7ed3\u5408\u7684\u7535\u6781\u3002\u5728 Disc \u7c7b\u578b\u4e2d\uff0c\u7535\u5bb9\u5668\u94f6\u56fa\u5b9a\u5728\u9676\u74f7\u7684\u4e24\u4fa7\u4ee5\u5f62\u6210\u5bfc\u4f53\u677f\u3002\u76d8\u5f0f\u7535\u5bb9\u5668\u4ec5\u7528\u4e8e\u8981\u6c42\u8f83\u5c0f\u7684\u7535\u5bb9\u503c\u65f6\u3002", 
            "title": "\u7535\u5bb9"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_12", 
            "text": "\u8702\u9e23\u5668\u662f\u97f3\u9891\u4fe1\u53f7\u88c5\u7f6e\uff0c\u5176\u53ef\u4ee5\u662f\u673a\u68b0\u7684\uff0c\u673a\u7535\u7684\u6216\u538b\u7535\u7684\u3002 \u5b83\u6839\u636e\u5176\u4e2d\u4f7f\u7528\u7684\u6750\u6599\u7684\u632f\u8361\u4ea7\u751f\u5404\u79cd\u97f3\u9891\u4fe1\u53f7\u3002 \u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u62a5\u8b66\u548c\u5b9a\u65f6\u5668\u3002   \u5c06\u957f\u5f15\u811a\u8fde\u63a5\u5230\u6b63\u7535\u538b\uff0c\u5c06\u77ed\u5f15\u811a\u8fde\u63a5\u5230\u5730\u3002  \u8702\u9e23\u5668\u53ef\u4ee5\u8fde\u63a5\u6570\u5b57\u8f93\u51fa\uff0c\u8f93\u51fa\u9ad8\u7535\u5e73\u65f6\u4f1a\u53d1\u51fa\u4e00\u58f0\u97f3\u3002 \u6216\u8005\uff0c\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u6a21\u62df PWM \u8f93\u51fa\u4ee5\u4ea7\u751f\u5404\u79cd\u97f3\u8c03\u548c\u6548\u679c\u3002", 
            "title": "\u8702\u9e23\u5668"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_13", 
            "text": "\u4e8c\u6781\u7ba1\u662f\u4ec5\u5728\u4e00\u4e2a\u65b9\u5411\u4f20\u5bfc\u7535\u6d41\u7684\u534a\u5bfc\u4f53\u6750\u6599\u3002\u53ea\u6709\u5728\u7535\u6e90\u7535\u538b\u5927\u4e8e_\u52bf\u5792\u7535\u4f4d_\u540e\u624d\u5f00\u59cb\u5bfc\u901a\u3002\u5b83\u7684\u4f5c\u7528\u5c31\u50cf\u6b63\u5411\u504f\u7f6e\u72b6\u6001\u4e0b\u7684\u95ed\u5408\u5f00\u5173\uff0c\u5f53\u53cd\u5411\u504f\u7f6e\u65f6\uff0c\u5176\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u5f00\u8def\u5f00\u5173\u3002\u4e8c\u6781\u7ba1\u57fa\u4e8e\u534a\u5bfc\u4f53\u6750\u6599\u5206\u7c7b\uff0c\u53ef\u7528\u4e8e\u5236\u9020 PN \u7ed3\u4e8c\u6781\u7ba1\uff0c\u9f50\u7eb3\u4e8c\u6781\u7ba1\uff0c\u53d1\u5149\u4e8c\u6781\u7ba1\u7b49\u3002  \u504f\u7f6e\u4e8c\u6781\u7ba1  \u5c06\u4e8c\u6781\u7ba1\u65bd\u52a0\u7535\u538b\u79f0\u4e3a\u504f\u7f6e\u4e8c\u6781\u7ba1\u3002\u5f53\u5728\u4e24\u4e2a\u7aef\u5b50\u4e4b\u95f4\u65bd\u52a0**\u6b63\u7535\u6e90**\u7535\u538b\u65f6\uff0c\u4e8c\u6781\u7ba1\u5c06\u83b7\u5f97_ \u6b63\u5411\u504f\u538b \uff0c\u5e76\u5f00\u59cb\u5bf9\u7845\u4e8c\u6781\u7ba1\u65bd\u52a0\u9ad8\u4e8e 0.7v \u7684\u7535\u6d41\uff0c\u5bf9\u4e8e\u9517\u4e8c\u6781\u7ba1\u5f00\u59cb\u5bfc\u901a 0.3v\u3002\u5f53\u65bd\u52a0**\u8d1f\u7535\u538b\u65f6**\u5728\u4e8c\u6781\u7ba1\u7684\u7aef\u5b50\u4e4b\u95f4\uff0c\u5c31\u8bf4\u88ab \u53cd\u5411\u504f\u7f6e _\u3002\u5f53\u53cd\u5411\u504f\u7f6e\u7535\u538b\u8d85\u8fc7\u51fb\u7a7f\u7535\u538b\u65f6\uff0c\u4e8c\u6781\u7ba1\u635f\u574f\u3002   \u8ff7\u4f60\u4f3a\u670d\u5668  \u4f3a\u670d\u7cfb\u7edf\u662f\u5177\u6709\u9f7f\u8f6e\u548c\u53cd\u9988\u7cfb\u7edf\u7684\u76f4\u6d41\u7535\u52a8\u673a\uff0c\u7528\u4e8e\u673a\u5668\u4eba\u7684\u9a71\u52a8\u673a\u6784\u3002", 
            "title": "\u4e8c\u6781\u7ba1"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_14", 
            "text": "Hello World! : The Blinking LED  \u7535\u8def   \u5c06 LED \u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a  8 \uff0c\u5982\u4e0b\u6240\u793a\u3002 330 \u6b27\u59c6\u7535\u963b\u9650\u5236\u4e86\u6d41\u5411 LED \u7684\u7535\u6d41\u3002   \u7a0b\u5e8f  \u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 : //Blink a LED connected to Digital Pin 8 via a 330 Ohm resitors.\n\nvoid setup()   {\n    pinMode(8, OUTPUT);       // Initialize Arduino Digital Pin 8 as output\n}\n\n\nvoid loop()\n{\n    digitalWrite(8, HIGH);   // Switch On LED\n    delay(500);              // Wait for half a second\n    digitalWrite(8, LOW);    // Switch Off LED\n    delay(500);              // Wait for half a second\n}", 
            "title": "\u6559\u7a0b"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#led", 
            "text": "\u7535\u8def   \u901a\u8fc7\u4e00\u4e2a 330 \u6b27\u59c6\u7535\u963b\u5c06 3 \u4e2a LED \u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a  9 , 10  \u548c  11 \u3002   \u7a0b\u5e8f  \u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 : //Running LED display: Three LEDs connected to Digital Pin 9, 10 and 11.\n\nvoid setup()\n{\n    pinMode(9, OUTPUT);        // Initialize Arduino Digital Pins 9 as output\n    pinMode(10, OUTPUT);       // Initialize Arduino Digital Pins 10 as output\n    pinMode(11, OUTPUT);       // Initialize Arduino Digital Pins 11 as output\n}\n\n\nvoid loop()\n{\n\n    digitalWrite(9, LOW);\n    digitalWrite(10, LOW);\n    digitalWrite(11, HIGH);\n    delay(250);              // Wait for quarter of a second\n    digitalWrite(9, LOW);\n    digitalWrite(10, HIGH);\n    digitalWrite(11, LOW);\n    delay(250);              // Wait for quarter of a second\n    digitalWrite(9, HIGH);\n    digitalWrite(10, LOW);\n    digitalWrite(11, LOW);\n    delay(250);              // Wait for quarter of a second\n\n}  ###   \u4e0eArduino \u901a\u8bdd\uff1a\u8fde\u63a5\u6309\u94ae\u5f00\u5173  \u7535\u8def    \u5c06 LED \u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a  8 \uff0c\u5982\u4e0b\u6240\u793a\u3002330 \u6b27\u59c6\u7535\u963b\u9650\u5236\u4e86\u6d41\u5411 LED \u7684\u7535\u6d41\u3002    \u5c06\u4e00\u4e2a\u6309\u94ae\u5f00\u5173\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a  12 \uff0c\u53e6\u4e00\u4e2a\u901a\u8fc7 10K \u7535\u963b\u8fde\u63a5\u5230  GND \u3002    \u5c06\u6309\u94ae\u7684\u53e6\u4e00\u7aef\u8fde\u63a5\u5230 +5V\u3002    \u7a0b\u5e8f  \u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 : //Pushbutton switch demo: LED is connected to digital pin 8 and Pushbutton is connected to digital pin 12.\n//The LED glows when the button is pressed.\n\nchar inputButtonState;\n\nvoid setup()\n{\n    pinMode(8, OUTPUT);        // Initialize Arduino Digital Pins 8 as output for connecting LED\n    pinMode(12,INPUT);         // Initialize Arduino Digital Pins 12 as input for connecting Pushbutton\n}\n\n\nvoid loop()\n{\n    inputButtonState = digitalRead(12); //Read the Pushbutton state.\n\n    if (inputButtonState == HIGH)\n    {\n        digitalWrite(8, HIGH);  //Switch on LED\n    }\n    else\n    {\n        digitalWrite(8, LOW);   //Switch off LED\n    }\n\n}  \u4ee5\u4e0a\u786e\u5b9e\u8bf4\u660e\u4e86\u5982\u4f55\u5411 Arduino \u53d1\u9001\u4fe1\u53f7\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u6ca1\u6709 Arduino\uff0c\u4f60\u53ef\u4ee5\u5b9e\u73b0\u540c\u6837\u7684\u76ee\u6807\u3002 \u53ea\u9700\u6309\u4e0b\u6309\u94ae\u5173\u95ed\u7535\u8def\uff0c\u7136\u540e\u6309\u5982\u4e0b\u6240\u793a\u7ffb\u8f6c HIGH/LOW \u503c : void loop()\n{\n    inputButtonState = digitalRead(12); //Read the Pushbutton state.\n\n    if (inputButtonState == HIGH)\n    {\n        digitalWrite(8, LOW);  //Switch on LED\n    }\n    else\n    {\n        digitalWrite(8, HIGH);   //Switch off LED\n    }  \u5f53\u7535\u8def\u95ed\u5408\u65f6LED \u5c06\u4eae\u8d77\u3002", 
            "title": "\u8fd0\u884c LED \u663e\u793a"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#3-pot", 
            "text": "\u7535\u8def    \u901a\u8fc7 220 \u6b27\u59c6\u7535\u963b\u5c06 LED \u7684\u9633\u6781\u8fde\u63a5\u5230  PWM  \u5f15\u811a\u3002    \u5c06 LED \u7684\u9634\u6781\u8fde\u63a5\u5230  GND  \u5f15\u811a\u3002    \u5c06 POT \u653e\u5728\u9762\u5305\u677f\u4e0a\u3002    \u5c06 POT \u7684\u53f3\u811a\u8fde\u63a5\u5230 +5V\u3002    \u5c06 POT \u7684\u4e2d\u95f4\u811a\u8fde\u63a5\u5230\u4efb\u4f55\u6a21\u62df\u8f93\u5165\u5f15\u811a (0-5)\u3002    \u5c06 POT \u7684\u5de6\u811a\u8fde\u63a5\u5230\u63a5\u5730\u7aef\u3002    \u7a0b\u5e8f  \u5c06 LED \u9633\u6781\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a  5  ( \u800c\u4e0d\u662f 5V )\u3002\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 : //Varying the brightness of the LED using a Pot\nint value=0;\nint mval;\nvoid setup()\n{\n    pinMode(5, OUTPUT);\n}\nvoid loop()\n{\n    value=analogRead(A1); //read analog value from input A1\n    // PWM output given to the LED\n    mval = map(value, 0, 1023, 0, 100);\n    analogWrite(5,mval);\n\n}", 
            "title": "3 \u6a21\u62df : POT"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#4-led", 
            "text": "\u7535\u8def  The Arduino Sidekick Basic Kit \u63d0\u4f9b\u7684 RGB LED \u662f\u5e38\u89c1\u7684\u9633\u6781\u578b\u3002\u6700\u957f\u7684\u94c5\u662f\u9633\u6781\u3002\u5176\u4ed6\u4e09\u4e2a\u5f15\u7ebf\u5206\u522b\u662f\u7ea2\uff0c\u7eff\u548c\u84dd\u7684\u9634\u6781\u3002    \u901a\u8fc7\u4e00\u4e2a 330 \u6b27\u59c6\u7684\u7535\u963b\u5c06 RGB \u9634\u6781 LED \u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a  9 , 10  \u548c  11 \u3002    \u5c06\u9633\u6781\u8fde\u63a5\u5230 +5v    \u7a0b\u5e8f  \u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 : void setup()  {\n\n}\n\nvoid loop()  {\n\n\n    for(int b = 0 ; b  = 255; b=b+5)\n    {\n        for(int g = 0 ; g  = 255; g=g+5)\n        {\n            for(int r= 0 ; r  = 255; r=r+5)\n            {\n                analogWrite(9, b);\n                analogWrite(10, g);\n                analogWrite(11, r);\n                delay(10);\n\n            }\n        }\n    }\n\n}", 
            "title": "4 \u5f69\u8679\u53f0 : \u4e09\u8272 LED"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#5", 
            "text": "\u7535\u8def    \u5c06\u8702\u9e23\u5668\u9633\u6781\u8fde\u63a5\u5230\u6570\u5b57\u5f15\u811a  11 \u3002    \u5c06\u8702\u9e23\u5668\u9634\u6781\u63a5\u5230  GND \u3002    \u7a0b\u5e8f  \u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 :  #define NOTE_D0 98\n#define NOTE_D1 294\n#define NOTE_D2 330\n#define NOTE_D3 350\n#define NOTE_D4 393\n#define NOTE_D5 441\n#define NOTE_D6 495\n#define NOTE_D7 556\n#define NOTE_DL1 147\n#define NOTE_DL2 165\n#define NOTE_DL3 175\n#define NOTE_DL4 196\n#define NOTE_DL5 221\n#define NOTE_DL6 248\n#define NOTE_DL7 278\n#define NOTE_DH1 589\n#define NOTE_DH2 661\n#define NOTE_DH3 700\n#define NOTE_DH4 786\n#define NOTE_DH5 882\n#define NOTE_DH6 990\n#define NOTE_DH7 112\n\n#define WHOLE 1\n#define HALF 0.5\n#define QUARTER 0.25\n#define EIGHTH 0.125\n#define SIXTEENTH 0.625\n\n// notes in the melody:\nint tune[] =\n{\n    NOTE_D0,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D4,NOTE_D5,NOTE_D6,NOTE_D7,\n    NOTE_DL1,NOTE_DL2,NOTE_DL3,NOTE_DL4,NOTE_DL5,NOTE_DL6,NOTE_DL7,\n    NOTE_DH1,NOTE_DH2,NOTE_DH3,NOTE_DH4,NOTE_DH5,NOTE_DH6,NOTE_DH7,\n};\n/* note durations: 1 = one note*/\n\nfloat duration[]=\n{1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1,1,1,1,1,};\nint length;\nint tonePin=11;                // buzzer pin\nvoid setup()\n{ Serial.begin(9600);\n    pinMode(tonePin,OUTPUT);   //  initialize the digital pin as an output\n    length = sizeof(tune)/sizeof(tune[0]);\n}\nvoid loop()\n{\n    for(int x=1;x length;x++)\n    {tone(tonePin,tune[x]);\n        delay(400*duration[(x%100)]);    // to distinguish the notes, set a minimum time between them.\n\n        noTone(tonePin); // stop the tone playing:\n    }\n}", 
            "title": "5 \u97f3\u4e50 :"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#6", 
            "text": "\u7535\u8def   \u5c06\u4f3a\u670d\u7684\u7ea2\u8272\u7ebf\u8fde\u63a5\u5230 +5v \u7535\u6e90\u3002   \u5c06\u4f3a\u670d\u7684\u9ed1\u8272\u7ebf\u8fde\u63a5\u5230\u5730\u3002    \u5c06\u4f3a\u670d\u7684\u9ec4\u8272\u7ebf\u8fde\u63a5\u5230 Arduino \u4e2d\u7684\u4efb\u4f55 PWM \u5f15\u811a\u3002    \u5c06 POT \u7684\u53f3\u811a\u8fde\u63a5\u5230 +5v\u3002    \u5c06 POT \u7684\u4e2d\u95f4\u811a\u8fde\u63a5\u5230\u4efb\u4f55\u6a21\u62df\u8f93\u5165\u5f15\u811a (0-5)\u3002    \u5c06 POT \u7684\u5de6\u811a\u8fde\u63a5\u5230\u63a5\u5730\u7aef\u3002    \u7a0b\u5e8f  \u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801 : // Controlling a servo position using a potentiometer (variable resistor)\n// by Michal Rinott  http://people.interaction-ivrea.it/m.rinott \n\n#include  Servo.h \n\nServo myservo;  // create servo object to control a servo\n\nint potpin = 1;  // analog pin used to connect the potentiometer\nint val;    // variable to read the value from the analog pin\n\nvoid setup()\n{\n    myservo.attach(5);  // attaches the servo on pin 5 to the servo object\n    Serial.begin(19200); // some servos doesn t work without Serial\n}\n\nvoid loop()\n{\n    val = analogRead(potpin);            // reads the value of the potentiometer (value between 0 and 1023)\n    val = map(val, 0, 1023, 0, 179);     // scale it to use it with the servo (value between 0 and 180)\n    myservo.write(val);                  // sets the servo position according to the scaled value\n    delay(15);                           // waits for the servo to get there\n}", 
            "title": "6 \u8ff7\u4f60\u4f3a\u670d\u5668 :"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_15", 
            "text": "\u6709\u4e00\u4e2a\u65e0\u710a\u9762\u5305\u677f\uff0c\u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u8d2d\u4e70\u70d9\u94c1\u6216\u5b66\u4e60\u5982\u4f55\u710a\u63a5\u3002    \u6709\u5f88\u591a\u8df3\u7ebf\uff0c\u957f\u800c\u67d4\u8f6f\uff0c\u5177\u6709\u521a\u6027\u5c16\u7aef\u3002\u8fd9\u4e9b\u8df3\u7ebf\u6bd4\u4ee5\u5f80\u7684\u56fa\u5b9a\u957f\u5ea6\u5b9e\u7ebf\u8df3\u7ebf\u597d\u5f97\u591a\u3002    \u60a8\u7684\u7b2c\u4e00\u4e2a\u9879\u76ee\u6709\u5f88\u591a LED \u548c\u7535\u963b\uff0c\u5305\u62ec\u4e00\u4e2a RGB LED\uff0c\u5b83\u662f\u4e00\u4e2a\u5355\u4e00\u7684 LED \u5c01\u88c5\uff0c\u5185\u90e8\u6709\u4e09\u4e2a\u4e3b\u8981\u7684\u5f69\u8272 LED\u3002\u901a\u8fc7\u8c03\u6574\u4e0d\u540c\u539f\u8272 LED \u7684\u5f3a\u5ea6\uff0c\u989c\u8272\u5c06\u6df7\u5408\u5728\u4e00\u8d77\u5e76\u4ea7\u751f\u5f69\u8679\u7684\u6240\u6709\u989c\u8272\u3002   \u751a\u81f3\u8fd8\u6709\u4e00\u4e2a\u6559\u60a8\u600e\u4e48\u505a\u6765\u8bfb\u53d6\u7535\u963b\u503c\u3002  \u503e\u659c\u5f00\u5173\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u88c5\u7f6e\uff0c\u5185\u90e8\u6709\u4e00\u4e2a\u5c0f\u91d1\u5c5e\u7403\u3002\u5982\u679c\u8bbe\u5907\u503e\u659c\u5230\u4e00\u4fa7\uff0c\u91d1\u5c5e\u7403\u5c06\u89e6\u53ca\u7535\u6c14\u89e6\u70b9\u3002 \u8be5\u4f20\u611f\u5668\u9002\u7528\u4e8e\u5404\u79cd\u9879\u76ee\uff0c\u5982 DIY \u9632\u76d7\u62a5\u8b66\u5668\u3002  \u5f53\u60a8\u60f3\u8981\u68c0\u6d4b\u6e29\u5ea6\u65f6\uff0c\u70ed\u654f\u7535\u963b\u5bf9\u4e8e\u60a8\u7684\u9879\u76ee\u5f88\u6709\u7528\u3002  \u5149\u7535\u963b\u53ef\u4ee5\u68c0\u6d4b\u5149\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u706f\u6ce1\u548c\u9633\u5149\u7167\u5c04\u3002\u5149\u7535\u963b\u901a\u5e38\u7528\u4e8e\u68c0\u6d4b\u9ed1\u6697\u65f6\u95f4\uff0c\u591c\u95f4\u5f00\u706f\u3002  \u8be5\u5957\u4ef6\u4e2d\u7684\u8702\u9e23\u5668\u7279\u522b\u9002\u5408\u6f14\u594f\u9a6c\u91cc\u5965\u5144\u5f1f\u4e3b\u9898\u66f2\u3002  \u6709\u4e00\u4e2a\u8ff7\u4f60\u4f3a\u670d\u5668\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u6253\u5f00\u548c\u5173\u95ed\u95e8\u6813\uff0c\u706f\u5f00\u5173\u6216\u9600\u95e8\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5236\u4f5c\u8ff7\u4f60\u5f39\u5c04\u5668\u3002  \u7535\u4f4d\u5668\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8f93\u5165\u8bbe\u5907\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u63a7\u5236\u4f3a\u670d\u81c2\u7684\u89d2\u5ea6\u6216 LED \u7684\u5f3a\u5ea6\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Sidekick_Basic_Kit_for_Arduino_V2/#_16", 
            "text": "Arduino Video tutorial series by Jeremy Blum", 
            "title": "\u5916\u90e8\u94fe\u63a5"
        }, 
        {
            "location": "/Techbox_Tricks/", 
            "text": "TechBox \u662f \u4e00\u7cfb\u5217\u4e3a DIY \u7231\u597d\u8005\uff0c\u7535\u5b50\u521d\u5b66\u8005\u548c\u6559\u80b2\u5de5\u4f5c\u8005\u8bbe\u8ba1\u7684\u7684\u7535\u5b50\u6a21\u5757\u5316\u5957\u4ef6\u3002\n\u901a\u8fc7\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u5165\u95e8\u7ea7 TechBox Tricks \u4f7f\u60a8\u5728\u521b\u4f5c\u4e4b\u65c5\u4e2d\u83b7\u5f97\u826f\u597d\u7684\u5f00\u7aef\uff0c\u65e0\u9700\u4efb\u4f55\u7f16\u7a0b\u77e5\u8bc6\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5c0f\u5de7\u5f3a\u608d\n\n\n\n\n\n\n84 \u79cd\u4e0d\u540c\u7684\u7ec4\u5408\u73a9\u6cd5\n\n\n\n\n\n\n\u5206\u6b65\u6559\u7a0b\u63d0\u4f9b\u5b66\u4e60\u548c\u5236\u4f5c\u7ecf\u9a8c\uff0c\u5145\u6ee1\u4e50\u8da3\n\n\n\n\n\n\n\u6765\u81ea Grove \u7cfb\u5217\u7684\u5168\u9762\u517c\u5bb9\u548c\u4e30\u5bcc\u8d44\u6e90\u4f9b\u60a8\u4f7f\u7528\n\n\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\nLogic DC Jack (\u4e3b\u677f) *1\n\n\n\n\n\n\nGrove tricks *1\n\n\n1.\nLight Switch\n\n\n2.\nTilt Switch\n\n\n3.\nApproach switch\n\n\n4.\nTouch switch\n\n\n5.\nColorful LED\n\n\n6.\nBuzzer\n\n\n\n\n\n\n\u76f4\u6d41\u7535\u673a *1\n\n\n\n\n\n\nGrove \u7ebf\u7f06 *2\n\n\n\n\n\n\nGrove \u5206\u652f\u7ebf\u7f06 *1\n\n\n\n\n\n\n\u7535\u6c60\u7ebf\u7f06 *1\n\n\n\n\n\n\n9V \u7535\u6c60 *1\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\u6b65\u9aa4 1: \u51c6\u5907\u5de5\u4f5c\n\n\n\u4f7f\u7528 Grove tricks \u83b7\u53d6 4 \u4e2a\u8f93\u5165\u6a21\u5757\u548c 2 \u4e2a\u8f93\u51fa\u6a21\u5757\u3002\n\n\n\n\n\u6b65\u9aa4 2: \u57fa\u672c\u539f\u5219\n\n\n\u4e3b\u677f ( Logic DC Jack ) \u6709\u4e24\u4e2a\u63d2\u5ea7\u3002 \u5de6\u4fa7\u6709\u4e00\u4e2a\u8f93\u5165\u6a21\u5757\uff0c\u53f3\u4fa7\u6709\u4e00\u4e2a\u8f93\u51fa\u6a21\u5757\u3002 \u73b0\u5728\u5c31\u5f00\u59cb\u521b\u4f5c\u5427 !\n\n\nNotes:\n\n\n\n\n\n\n\u5c06 Grove \u7ebf\u7f06\u69fd\u76f4\u63a5\u63d2\u5165\u63d2\u5ea7\u69fd\u63a5\u5728\u4e00\u8d77\u3002\n\n\n\n\n\n\n\u5de6\u4fa7\u7684\u63d2\u5ea7\u7528\u4e8e\u8f93\u5165\uff0c\u53f3\u4fa7\u7684\u63d2\u5ea7\u7528\u4e8e\u8f93\u51fa\u3002\n\n\n\n\n\n\n\u5207\u6362\u5230\u201c\u5173\u201d\u8868\u793a\u5173\u673a\u3002 \u5207\u6362\u5230\u201c\u4e0d\u201d\u8868\u793a\u4e3b\u677f\u73b0\u5728\u662f\u975e\u903b\u8f91\u95e8\u3002 \u5207\u6362\u5230 \"AND\" \u8868\u793a\u5f00\u673a\uff0c\u53ea\u6709\u5c06 Grove \u5206\u652f\u7ebf\u7f06\u63d2\u5165\u5de6\u63d2\u5ea7\uff0c\u4e3b\u677f\u624d\u4f1a\u6210\u4e3a\u4e0e\u903b\u8f91\u95e8\u3002\n\n\n\n\n\n\n\u6b65\u9aa4 3: \u52a8\u624b\u8bd5\u8bd5\u5427\n\n\n\u5de5\u7a0b 1\n\n\n\n\n\u53ea\u6709\u5f53\u5f00\u5173\u5904\u4e8e \"AND\" \u4f4d\u7f6e\u5e76\u6309\u4e0b Touch Switch \u65f6\uff0c\u8702\u9e23\u5668\u624d\u4f1a\u53d1\u51fa\u58f0\u97f3\u3002\n\n\n\u5de5\u7a0b 2\n\n\n\n\n\u53ea\u6709\u5f53\u5f00\u5173\u5904\u4e8e \"AND\" \u4f4d\u7f6e\u5e76\u6309\u4e0b Touch Switch \u65f6\uff0c\u8702\u9e23\u5668\u624d\u4f1a\u53d1\u51fa\u58f0\u97f3\u5e76\u4e14 LED \u6307\u793a\u706f\u5c06\u4eae\u8d77\u3002\n\n\n\u5de5\u7a0b 3\n\n\n\n\n\u53ea\u6709\u5f53\u5f00\u5173\u5904\u4e8e \"AND\" \u4f4d\u7f6e\u5e76\u4e14\u6309\u4e0b Touch Switch \u8fd8\u8981 Light Switch \u540c\u65f6\u88ab\u7167\u4eae\u65f6\uff0c\u8702\u9e23\u5668\u624d\u4f1a\u53d1\u51fa\u58f0\u97f3\u3002\n\n\n\u5de5\u7a0b 4\n\n\n\n\n\u53ea\u6709\u5f53\u5f00\u5173\u5904\u4e8e \"AND\" \u4f4d\u7f6e\u5e76\u4e14\u6309\u4e0b Touch Switch \u8fd8\u8981 Light Switch \u540c\u65f6\u88ab\u7167\u4eae\u65f6\uff0c\u8f93\u51fa\u6a21\u5757\u624d\u542f\u52a8\u3002\n\n\n\u5176\u4ed6\u793a\u4f8b\n\n\n\u6b22\u8fce\u60a8\u628a\u60a8\u7684\u9879\u76ee\u4e5f\u6dfb\u52a0\u5230\u8fd9\u4efd\u6e05\u5355\n\n\nResources\n\n\n\n\n\n\n[Eagle\u6587\u4ef6]\n \nFile:Grove - Tricks v1.0 EAGLE.zip\n\n\n\n\n\n\n[PCB\u56fePDF]\n \nGrove - Tricks v1.0 .pdf\n\n\n\n\n\n\n[\u539f\u7406\u56fePDF]\n \nGrove - Tricks v1.0_sch.pdf\n\n\n\n\n\n\n[\u539f\u7406\u56fe]\n \nGrove - Tricks v1.0 sch", 
            "title": "Techbox Tricks"
        }, 
        {
            "location": "/Techbox_Tricks/#_1", 
            "text": "\u5c0f\u5de7\u5f3a\u608d    84 \u79cd\u4e0d\u540c\u7684\u7ec4\u5408\u73a9\u6cd5    \u5206\u6b65\u6559\u7a0b\u63d0\u4f9b\u5b66\u4e60\u548c\u5236\u4f5c\u7ecf\u9a8c\uff0c\u5145\u6ee1\u4e50\u8da3    \u6765\u81ea Grove \u7cfb\u5217\u7684\u5168\u9762\u517c\u5bb9\u548c\u4e30\u5bcc\u8d44\u6e90\u4f9b\u60a8\u4f7f\u7528", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Techbox_Tricks/#_2", 
            "text": "Logic DC Jack (\u4e3b\u677f) *1    Grove tricks *1  1. Light Switch  2. Tilt Switch  3. Approach switch  4. Touch switch  5. Colorful LED  6. Buzzer    \u76f4\u6d41\u7535\u673a *1    Grove \u7ebf\u7f06 *2    Grove \u5206\u652f\u7ebf\u7f06 *1    \u7535\u6c60\u7ebf\u7f06 *1    9V \u7535\u6c60 *1", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Techbox_Tricks/#_3", 
            "text": "", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Techbox_Tricks/#1", 
            "text": "\u4f7f\u7528 Grove tricks \u83b7\u53d6 4 \u4e2a\u8f93\u5165\u6a21\u5757\u548c 2 \u4e2a\u8f93\u51fa\u6a21\u5757\u3002", 
            "title": "\u6b65\u9aa4 1: \u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Techbox_Tricks/#2", 
            "text": "\u4e3b\u677f ( Logic DC Jack ) \u6709\u4e24\u4e2a\u63d2\u5ea7\u3002 \u5de6\u4fa7\u6709\u4e00\u4e2a\u8f93\u5165\u6a21\u5757\uff0c\u53f3\u4fa7\u6709\u4e00\u4e2a\u8f93\u51fa\u6a21\u5757\u3002 \u73b0\u5728\u5c31\u5f00\u59cb\u521b\u4f5c\u5427 !", 
            "title": "\u6b65\u9aa4 2: \u57fa\u672c\u539f\u5219"
        }, 
        {
            "location": "/Techbox_Tricks/#notes", 
            "text": "\u5c06 Grove \u7ebf\u7f06\u69fd\u76f4\u63a5\u63d2\u5165\u63d2\u5ea7\u69fd\u63a5\u5728\u4e00\u8d77\u3002    \u5de6\u4fa7\u7684\u63d2\u5ea7\u7528\u4e8e\u8f93\u5165\uff0c\u53f3\u4fa7\u7684\u63d2\u5ea7\u7528\u4e8e\u8f93\u51fa\u3002    \u5207\u6362\u5230\u201c\u5173\u201d\u8868\u793a\u5173\u673a\u3002 \u5207\u6362\u5230\u201c\u4e0d\u201d\u8868\u793a\u4e3b\u677f\u73b0\u5728\u662f\u975e\u903b\u8f91\u95e8\u3002 \u5207\u6362\u5230 \"AND\" \u8868\u793a\u5f00\u673a\uff0c\u53ea\u6709\u5c06 Grove \u5206\u652f\u7ebf\u7f06\u63d2\u5165\u5de6\u63d2\u5ea7\uff0c\u4e3b\u677f\u624d\u4f1a\u6210\u4e3a\u4e0e\u903b\u8f91\u95e8\u3002", 
            "title": "Notes:"
        }, 
        {
            "location": "/Techbox_Tricks/#3", 
            "text": "", 
            "title": "\u6b65\u9aa4 3: \u52a8\u624b\u8bd5\u8bd5\u5427"
        }, 
        {
            "location": "/Techbox_Tricks/#1_1", 
            "text": "\u53ea\u6709\u5f53\u5f00\u5173\u5904\u4e8e \"AND\" \u4f4d\u7f6e\u5e76\u6309\u4e0b Touch Switch \u65f6\uff0c\u8702\u9e23\u5668\u624d\u4f1a\u53d1\u51fa\u58f0\u97f3\u3002", 
            "title": "\u5de5\u7a0b 1"
        }, 
        {
            "location": "/Techbox_Tricks/#2_1", 
            "text": "\u53ea\u6709\u5f53\u5f00\u5173\u5904\u4e8e \"AND\" \u4f4d\u7f6e\u5e76\u6309\u4e0b Touch Switch \u65f6\uff0c\u8702\u9e23\u5668\u624d\u4f1a\u53d1\u51fa\u58f0\u97f3\u5e76\u4e14 LED \u6307\u793a\u706f\u5c06\u4eae\u8d77\u3002", 
            "title": "\u5de5\u7a0b 2"
        }, 
        {
            "location": "/Techbox_Tricks/#3_1", 
            "text": "\u53ea\u6709\u5f53\u5f00\u5173\u5904\u4e8e \"AND\" \u4f4d\u7f6e\u5e76\u4e14\u6309\u4e0b Touch Switch \u8fd8\u8981 Light Switch \u540c\u65f6\u88ab\u7167\u4eae\u65f6\uff0c\u8702\u9e23\u5668\u624d\u4f1a\u53d1\u51fa\u58f0\u97f3\u3002", 
            "title": "\u5de5\u7a0b 3"
        }, 
        {
            "location": "/Techbox_Tricks/#4", 
            "text": "\u53ea\u6709\u5f53\u5f00\u5173\u5904\u4e8e \"AND\" \u4f4d\u7f6e\u5e76\u4e14\u6309\u4e0b Touch Switch \u8fd8\u8981 Light Switch \u540c\u65f6\u88ab\u7167\u4eae\u65f6\uff0c\u8f93\u51fa\u6a21\u5757\u624d\u542f\u52a8\u3002", 
            "title": "\u5de5\u7a0b 4"
        }, 
        {
            "location": "/Techbox_Tricks/#_4", 
            "text": "\u6b22\u8fce\u60a8\u628a\u60a8\u7684\u9879\u76ee\u4e5f\u6dfb\u52a0\u5230\u8fd9\u4efd\u6e05\u5355", 
            "title": "\u5176\u4ed6\u793a\u4f8b"
        }, 
        {
            "location": "/Techbox_Tricks/#resources", 
            "text": "[Eagle\u6587\u4ef6]   File:Grove - Tricks v1.0 EAGLE.zip    [PCB\u56fePDF]   Grove - Tricks v1.0 .pdf    [\u539f\u7406\u56fePDF]   Grove - Tricks v1.0_sch.pdf    [\u539f\u7406\u56fe]   Grove - Tricks v1.0 sch", 
            "title": "Resources"
        }, 
        {
            "location": "/Wio_Link_Environment_Kit/", 
            "text": "\u6211\u4eec\u603b\u662f\u4e0e\u5468\u56f4\u7684\u73af\u5883\u7d27\u5bc6\u76f8\u8fde\uff0c\u6240\u4ee5\u4ece\u4e00\u4e2a\u73af\u5883\u4e2d\u83b7\u5f97\u4e00\u4e9b\u7ec6\u8282\u5c31\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u3002\u8fd9\u4e2a\u5de5\u5177\u5305\u5e94\u8be5\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff0c\u81f3\u5c11\u5728\u521d\u7ea7\u9636\u6bb5\u53ef\u4ee5\u3002\u5728\u8fd9\u4e2a\u5957\u4ef6\u4e2d\uff0c\u60a8\u53ef\u4ee5\u627e\u5230\u7528\u4e8e\u6536\u96c6\u5ba4\u5185\u73af\u5883\u4e2d\u7684\u6e7f\u5ea6\u6216\u5149\u7167\u6c34\u5e73\u7b49\u6570\u636e\u7684\u5e38\u89c1\u7684\u529f\u80fd\u6a21\u5757\u3002\u8fd9\u4e2a\u5957\u4ef6\u6700\u795e\u5947\u7684\u90e8\u5206\u662f Wio Link \u5f00\u53d1\u677f\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u5404\u79cd\u76ee\u7684\uff0c\u800c\u4e0d\u9700\u8981\u4efb\u4f55\u7f16\u7a0b\u6280\u5de7\u3002\u60a8\u5e0c\u671b\u6a21\u5757\u6267\u884c\u7684\u6240\u6709\u64cd\u4f5c\u4ee5\u53ca\u5bf9 Wio Link \u7684 flashing-code \u64cd\u4f5c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5728\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u70b9\u51fb\u6765\u5b8c\u6210\u3002\u800c\u4e14\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e92\u8054\u7f51\u4ece\u4efb\u4f55\u5730\u65b9\u5411\u4f60\u7684\u8bbe\u5907\u53d1\u9001\u6307\u4ee4\u3002\u56e0\u6b64\uff0cWio Link \u5c06\u4f1a\u6210\u4e3a\u8ba9\u6bcf\u4e2a\u4eba\u5468\u56f4\u4e8b\u7269\u66f4\u52a0\u667a\u80fd\u7684\u5b8c\u7f8e\u5de5\u5177\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u5305\u62ec\u5e38\u7528\u7684\u73af\u5883\u76d1\u6d4b\u529f\u80fd\u6a21\u5757\n\n\nGrove \u63a5\u53e3\n\n\n\u7269\u7f8e\u4ef7\u5ec9\n\n\n\u8d28\u91cf\u00a0: 154 g\n\n\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u540d\u79f0\n\n\n\u6570\u91cf\n\n\n\n\n\n\n\n\n\n\nGrove - Moisture Sensor\n\n\n1PC\n\n\n\n\n\n\nGrove - Temp\nHumi Sensor\n\n\n1PC\n\n\n\n\n\n\nGrove - Digital Light Sensor\n\n\n1PC\n\n\n\n\n\n\nGrove - Air quality sensor v1.3\n\n\n1PC\n\n\n\n\n\n\nWio Link\n\n\n1PC\n\n\n\n\n\n\nMicro USB Cable - 48cm\n\n\n1PC\n\n\n\n\n\n\n\n\n\u64cd\u4f5c\u793a\u4f8b\n\n\n\n\n\u8fd9\u4e2a\u6f14\u793a\u53ef\u4ee5\u7528\u4f5c\u7f16\u8bd1\u7ed3\u679c\u6307\u793a\u5668\u3002\n\n\n\u521d\u6b65\u6307\u5357\n\n\n\n\nTravis CI\n\n\nWio Link\n\n\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\n\nWio Link APP\n\n\nWio Link\n\n\nGrove Relay\n \u00d7 3\n\n\nA Travis CI Account\n\n\nA GitHub Account\n\n\nTraffic Light\n\n\n\n\n\u8be6\u7ec6\u64cd\u4f5c\u65b9\u6cd5\n\n\n\u8bf7\u53c2\u9605 \n\u4f8b\u7a0b\n \u4e86\u89e3\u8be6\u7ec6\u7684\u4fe1\u606f", 
            "title": "Wio Link Environment Kit"
        }, 
        {
            "location": "/Wio_Link_Environment_Kit/#_1", 
            "text": "\u5305\u62ec\u5e38\u7528\u7684\u73af\u5883\u76d1\u6d4b\u529f\u80fd\u6a21\u5757  Grove \u63a5\u53e3  \u7269\u7f8e\u4ef7\u5ec9  \u8d28\u91cf\u00a0: 154 g", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Wio_Link_Environment_Kit/#_2", 
            "text": "\u4ea7\u54c1\u540d\u79f0  \u6570\u91cf      Grove - Moisture Sensor  1PC    Grove - Temp Humi Sensor  1PC    Grove - Digital Light Sensor  1PC    Grove - Air quality sensor v1.3  1PC    Wio Link  1PC    Micro USB Cable - 48cm  1PC", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/Wio_Link_Environment_Kit/#_3", 
            "text": "\u8fd9\u4e2a\u6f14\u793a\u53ef\u4ee5\u7528\u4f5c\u7f16\u8bd1\u7ed3\u679c\u6307\u793a\u5668\u3002", 
            "title": "\u64cd\u4f5c\u793a\u4f8b"
        }, 
        {
            "location": "/Wio_Link_Environment_Kit/#_4", 
            "text": "Travis CI  Wio Link", 
            "title": "\u521d\u6b65\u6307\u5357"
        }, 
        {
            "location": "/Wio_Link_Environment_Kit/#_5", 
            "text": "Wio Link APP  Wio Link  Grove Relay  \u00d7 3  A Travis CI Account  A GitHub Account  Traffic Light", 
            "title": "\u51c6\u5907\u5de5\u4f5c"
        }, 
        {
            "location": "/Wio_Link_Environment_Kit/#_6", 
            "text": "\u8bf7\u53c2\u9605  \u4f8b\u7a0b  \u4e86\u89e3\u8be6\u7ec6\u7684\u4fe1\u606f", 
            "title": "\u8be6\u7ec6\u64cd\u4f5c\u65b9\u6cd5"
        }, 
        {
            "location": "/MakerPro/", 
            "text": "\u6df1\u5733\u5c31\u50cfMaker\u7684\u5929\u5802\u3002 \u4f5c\u4e3a\u4e00\u5bb6\u603b\u90e8\u4f4d\u4e8e\u6df1\u5733\u7684\u5f00\u6e90\u516c\u53f8\uff0cSeeedStudio\u5177\u6709\u4e3a\u4e16\u754c\u5404\u5730\u7684\u5236\u9020\u5546\u63d0\u4f9b\u6240\u6709\u6700\u4f73\u8d44\u6e90\u7684\u4f18\u52bf\u548c\u80fd\u529b\u3002 MakerPro\u4e0d\u662fSeeed\u5f00\u53d1\u4ea7\u54c1\u7684\u90e8\u5206\uff0c\u800c\u662f\u76f4\u63a5\u4ece\u6df1\u5733\u91c7\u8d2d\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684MakerPro\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\n0.5w_Solar_Panel_55x70\n\n\n1w_Solar_Panel_80x100\n\n\n2.5W_Solar_Panel_116x160\n\n\n2KM_Long_Range_RF_link_kits_w_encoder_and_decoder\n\n\n3.6V_Micro_hydro_generator\n\n\n3W_Solar_Panel_138x160\n\n\nArduboy\n\n\nBus_Pirate_v3_assembled\n\n\nCodec-Adaptive_Wireless_Relay\n\n\nDC_framework_miniature_solenoid_VL-0063\n\n\nG1-8_Water_Flow_Sensor\n\n\nG1_and_2_inch_Water_Flow_Sensor\n\n\nG3-4_Water_Flow_sensor\n\n\nPiezo_Sensor-MiniSense_100\n\n\nPIR_Motion_Sensor_Large_Lens_version\n\n\nRF_Explorer_Software\n\n\nWireLess_Gate_Shield_V1.0", 
            "title": "MakerPro"
        }, 
        {
            "location": "/MakerPro/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684MakerPro\u677f\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   0.5w_Solar_Panel_55x70  1w_Solar_Panel_80x100  2.5W_Solar_Panel_116x160  2KM_Long_Range_RF_link_kits_w_encoder_and_decoder  3.6V_Micro_hydro_generator  3W_Solar_Panel_138x160  Arduboy  Bus_Pirate_v3_assembled  Codec-Adaptive_Wireless_Relay  DC_framework_miniature_solenoid_VL-0063  G1-8_Water_Flow_Sensor  G1_and_2_inch_Water_Flow_Sensor  G3-4_Water_Flow_sensor  Piezo_Sensor-MiniSense_100  PIR_Motion_Sensor_Large_Lens_version  RF_Explorer_Software  WireLess_Gate_Shield_V1.0", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/", 
            "text": "1.  \u7b80\u4ecb\n\n\n\n\n\u8fd9\u662f\u4e00\u6b3e\u8d85\u957f\u8ddd\u79bb\u7684433MHz RF\u901a\u4fe1\u6a21\u5757\u5957\u4ef6\uff0c\u901a\u4fe1\u8ddd\u79bb\u53ef\u8fbe2\u516c\u91cc\uff0c\u5305\u542b\u53d1\u5c04\u548c\u63a5\u6536\u4e24\u4e2a\u6a21\u5757\u3002\u6a21\u5757\u5185\u7f6eVCO, PLL\u6280\u672f\uff0c\u9891\u7387\u7a33\u5b9a\u4ee5\u53ca\u6297\u5e72\u6270\u80fd\u529b\u5f3a\u3002\u4f60\u53ef\u4ee5\u5728\u9700\u8981\u65e0\u7ebf\u6570\u636e\u4f20\u8f93\u548c\u8fdc\u7a0b\u63a7\u5236\u7b49\u5e94\u7528\u4f7f\u7528\u672c\u6a21\u5757\u3002\n\n\n\n\n2. \u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b\n\n\n\u63a5\u6536\u5668\uff1a3\n5V\uff0c\u53d1\u5c04\u56683\n9V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41\n\n\n\u22642.5mA\uff08@5V\uff09\n\n\n\n\n\n\n\u5de5\u4f5c\u539f\u7406\n\n\n\"\u8d85\u5916\u5dee\uff08VCO,PLL)\n\n\n\n\n\n\n\u8c03\u5236\u65b9\u5f0f\n\n\nOOK/ASK\n\n\n\n\n\n\n\u5de5\u4f5c\u9891\u6bb5\n\n\n433.92MHz\n\n\n\n\n\n\n\u5e26\u5bbd\n\n\n1.5MHz\n\n\n\n\n\n\n\u7075\u654f\u5ea6\n\n\n-105dBm(50\u03a9)\n\n\n\n\n\n\n\u89e3\u7801\u65b9\u5f0f\n\n\nPT2272\n\n\n\n\n\n\n\u5929\u7ebf\u957f\u5ea6\n\n\n18cm\n\n\n\n\n\n\n\u6700\u5927\u901a\u4fe1\u8ddd\u79bb\n\n\n2Km\n\n\n\n\n\n\n\n\n3. \u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u65e0\u7ebf\u5f00\u5173\n\n\n\u8fdc\u7a0b\u4f20\u8f93\n\n\n\u65e0\u7ebf\u63a7\u5236\n\n\n\n\n4. \u786c\u4ef6\u6982\u8ff0\n\n\n\n\n\n\n\n\n5.\u5165\u95e8\u6307\u5bfc\n\n\n\n\n\n\n\u8bf7\u6839\u636e\u4ee5\u4e0b \n\u6d41\u7a0b\n \u6765\u642d\u5efa\u7cfb\u7edf.\n\n\n\u8fde\u63a5\u7535\u6c60, \u6309\u94ae\u548c\u53d1\u5c04\u677f.\n\n\n\n\n\n\n\nNote\n\n\n\n\n\u8bf7\u4f7f\u75283-5V\u7535\u6e90\uff01 9V\u7535\u6e90\u4f1a\u635f\u574f\u63a5\u6536\u677f.\n\n\n\u8fde\u63a5\u7535\u6c60, LEDs and \u63a5\u6536\u677f.\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\u4e0d\u8981\u628aRX \u6a21\u5757\u548c TX\u6a21\u5757\u9760\u7684\u5f88\u8fd1: \u8fd9\u5c06\u963b\u6b62\u4ed6\u4eec\u6b63\u5e38\u5de5\u4f5c\u3002 \u786e\u4fddRX\u6a21\u5757\u548cTX\u6a21\u5757\u8ddd\u79bb\u81f3\u5c111\u7c73\u3002\n\n\n\u5f53\u6211\u4eec\u6309\u53d1\u5c04\u673a\u4fa7\u7684\u6309\u94ae\u65f6\uff0c\u63a5\u6536\u673a\u4fa7\u7684\u76f8\u5173LED\u5c06\u88ab\u6253\u5f00\u3002\n\n\n\n\n\n\n6. \u8d44\u6e90\n\n\n\n\n\n\n\n\n[\u6d41\u7a0b]\n   \nTransmitter and receiver Setup Manual\n\n\n\n\n\n\n[\u6570\u636e\u624b\u518c]\n   \nDatasheet for PT2272 and PT2262", 
            "title": "2KM Long Range RF link kits w encoder and decoder"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#1", 
            "text": "\u8fd9\u662f\u4e00\u6b3e\u8d85\u957f\u8ddd\u79bb\u7684433MHz RF\u901a\u4fe1\u6a21\u5757\u5957\u4ef6\uff0c\u901a\u4fe1\u8ddd\u79bb\u53ef\u8fbe2\u516c\u91cc\uff0c\u5305\u542b\u53d1\u5c04\u548c\u63a5\u6536\u4e24\u4e2a\u6a21\u5757\u3002\u6a21\u5757\u5185\u7f6eVCO, PLL\u6280\u672f\uff0c\u9891\u7387\u7a33\u5b9a\u4ee5\u53ca\u6297\u5e72\u6270\u80fd\u529b\u5f3a\u3002\u4f60\u53ef\u4ee5\u5728\u9700\u8981\u65e0\u7ebf\u6570\u636e\u4f20\u8f93\u548c\u8fdc\u7a0b\u63a7\u5236\u7b49\u5e94\u7528\u4f7f\u7528\u672c\u6a21\u5757\u3002", 
            "title": "1.  \u7b80\u4ecb"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#2", 
            "text": "\u53c2\u6570  \u503c      \u5de5\u4f5c\u7535\u538b  \u63a5\u6536\u5668\uff1a3 5V\uff0c\u53d1\u5c04\u56683 9V    \u5de5\u4f5c\u7535\u6d41  \u22642.5mA\uff08@5V\uff09    \u5de5\u4f5c\u539f\u7406  \"\u8d85\u5916\u5dee\uff08VCO,PLL)    \u8c03\u5236\u65b9\u5f0f  OOK/ASK    \u5de5\u4f5c\u9891\u6bb5  433.92MHz    \u5e26\u5bbd  1.5MHz    \u7075\u654f\u5ea6  -105dBm(50\u03a9)    \u89e3\u7801\u65b9\u5f0f  PT2272    \u5929\u7ebf\u957f\u5ea6  18cm    \u6700\u5927\u901a\u4fe1\u8ddd\u79bb  2Km", 
            "title": "2. \u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#3", 
            "text": "\u65e0\u7ebf\u5f00\u5173  \u8fdc\u7a0b\u4f20\u8f93  \u65e0\u7ebf\u63a7\u5236", 
            "title": "3. \u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#4", 
            "text": "", 
            "title": "4. \u786c\u4ef6\u6982\u8ff0"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#5", 
            "text": "\u8bf7\u6839\u636e\u4ee5\u4e0b  \u6d41\u7a0b  \u6765\u642d\u5efa\u7cfb\u7edf.  \u8fde\u63a5\u7535\u6c60, \u6309\u94ae\u548c\u53d1\u5c04\u677f.    Note   \u8bf7\u4f7f\u75283-5V\u7535\u6e90\uff01 9V\u7535\u6e90\u4f1a\u635f\u574f\u63a5\u6536\u677f.  \u8fde\u63a5\u7535\u6c60, LEDs and \u63a5\u6536\u677f.      Warning   \u4e0d\u8981\u628aRX \u6a21\u5757\u548c TX\u6a21\u5757\u9760\u7684\u5f88\u8fd1: \u8fd9\u5c06\u963b\u6b62\u4ed6\u4eec\u6b63\u5e38\u5de5\u4f5c\u3002 \u786e\u4fddRX\u6a21\u5757\u548cTX\u6a21\u5757\u8ddd\u79bb\u81f3\u5c111\u7c73\u3002  \u5f53\u6211\u4eec\u6309\u53d1\u5c04\u673a\u4fa7\u7684\u6309\u94ae\u65f6\uff0c\u63a5\u6536\u673a\u4fa7\u7684\u76f8\u5173LED\u5c06\u88ab\u6253\u5f00\u3002", 
            "title": "5.\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/#6", 
            "text": "[\u6d41\u7a0b]     Transmitter and receiver Setup Manual    [\u6570\u636e\u624b\u518c]     Datasheet for PT2272 and PT2262", 
            "title": "6. \u8d44\u6e90"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/", 
            "text": "MiniSense 100\u662f\u4e00\u79cd\u4f4e\u6210\u672c\u7684\u60ac\u81c2\u5f0f\u632f\u52a8\u4f20\u611f\u5668\uff0c\u4f20\u611f\u5668\u4e0a\u589e\u52a0\u4e86\u4e00\u4e2a\u8d28\u91cf\u5757\uff0c\u53ef\u5728\u4f4e\u9891\u4e0b\u63d0\u4f9b\u9ad8\u7075\u654f\u5ea6\u3002\u5f15\u811a\u8bbe\u8ba1\u6613\u4e8e\u5b89\u88c5\uff0c\u53ef\u710a\u63a5\u3002\u63d0\u4f9b\u6c34\u5e73\u548c\u5782\u76f4\u5b89\u88c5\u9009\u9879\u3002\u5bc6\u5c01\u4f20\u611f\u5668\u4ee5\u63d0\u9ad8RFI / EMI\u6291\u5236\u3002\u575a\u56fa\u8010\u7528\u7684\u67d4\u6027PVDF\u4f20\u611f\u5143\u4ef6\u53ef\u627f\u53d7\u9ad8\u51b2\u51fb\u3002\u4f20\u611f\u5668\u5177\u6709\u4f18\u5f02\u7684\u7ebf\u6027\u5ea6\u548c\u52a8\u6001\u8303\u56f4\uff0c\u53ef\u7528\u4e8e\u68c0\u6d4b\u8fde\u7eed\u632f\u52a8\u6216\u51b2\u51fb\u3002\u8bf7\u54a8\u8be2\u539f\u5382\u5982\u4f55\u4fee\u6539\u8d28\u91cf\u5757\u4ee5\u83b7\u5f97\u66ff\u4ee3\u9891\u7387\u54cd\u5e94\u548c\u7075\u654f\u5ea6\u9009\u62e9\u3002MiniSense 100\u4f5c\u4e3a\u60ac\u81c2\u6881\u52a0\u901f\u5ea6\u8ba1\uff0c\u5f53\u6c34\u5e73\u5b89\u88c5\u65f6\uff0c\u5782\u76f4\u5e73\u9762\u4e0a\u7684\u52a0\u901f\u5ea6\u4f1a\u7531\u4e8e\u8d28\u91cf\u5757\u800c\u4ea7\u751f\u5f2f\u66f2\u3002\u4f20\u611f\u5668\u5e94\u53d8\u4ea7\u751f\u538b\u7535\u54cd\u5e94\uff0c\u5176\u53ef\u4ee5\u88ab\u68c0\u6d4b\u4e3a\u4f20\u611f\u5668\u7684\u7535\u6781\u7684\u7535\u8377\u6216\u7535\u538b\u8f93\u51fa\u3002\u4f20\u611f\u5668\u4e5f\u53ef\u7528\u4e8e\u68c0\u6d4b\u8fde\u7eed\u6216\u8109\u51b2\u632f\u52a8\u6216\u51b2\u51fb\u3002\u5bf9\u4e8e\u4f4e\u4e8e\u4f20\u611f\u5668\u8c10\u632f\u9891\u7387\u7684\u6fc0\u53d1\u9891\u7387\uff0c\u5668\u4ef6\u4ea7\u751f\u7531\u201c\u57fa\u7ebf\u201d\u7075\u654f\u5ea6\u63a7\u5236\u7684\u7ebf\u6027\u8f93\u51fa\uff0c\u5171\u632f\u7684\u7075\u654f\u5ea6\u660e\u663e\u8f83\u9ad8\u3002\u4f20\u611f\u5668\u68c0\u6d4b\u4f4e\u9891\u8fd0\u52a8\u7684\u80fd\u529b\u53d7\u5230\u5916\u90e8\u7535\u8def\u7684\u5f3a\u70c8\u5f71\u54cd\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\u4f4e\u6210\u672c\n\n\n\n\n\n\n\u60ac\u81c2\u5f0f\u632f\u52a8\u4f20\u611f\u5668\n\n\n\n\n\n\n\u4f4e\u9891\u7075\u654f\u5ea6\u9ad8\n\n\n\n\n\n\n\u4f20\u611f\u5668\u88ab\u5bc6\u5c01\u7528\u4e8e\u63d0\u9ad8RFI/EMI\u6291\u5236\n\n\n\n\n\n\n\u826f\u597d\u7684\u7ebf\u6027\u5ea6\u548c\u52a8\u6001\u8303\u56f4\n\n\n\n\n\n\n\u575a\u56fa\u8010\u7528\u7684\u67d4\u6027PVDF\u4f20\u611f\u5143\u4ef6\u53ef\u627f\u53d7\u9ad8\u51b2\u51fb\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\u68c0\u6d4b\u8fde\u7eed\n\n\n\u8109\u51b2\u632f\u52a8\u6216\u51b2\u51fb\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\u5178\u578b\u6027\u80fd (25\u00b0C)\n\n\n\n\n\n\n \u53c2\u6570\n\n\n\n \u503c\n\n\n\n \u5355\u4f4d\n\n\n\n\n\n \u7535\u538b\u7075\u654f\u5ea6 (open-circuit, baseline)\n\n\n\n  1.1\n\n\n\n  V/g\n\n\n\n\n\n \u7535\u8377\u7075\u654f\u5ea6 (baseline)\n\n\n\n  260\n\n\n\n  pC/g\n\n\n\n\n\n \u5171\u632f\u9891\u7387\n\n\n\n  75\n\n\n\n  Hz\n\n\n\n\n\n \u7535\u538b\u7075\u654f\u5ea6 (open-circuit, at resonance)\n\n\n\n  6\n\n\n\n  V/g\n\n\n\n\n\n \u4e0a\u7ebf\u9891\u7387 (+3 dB)\n\n\n\n  42\n\n\n\n  Hz\n\n\n\n\n\n \u7ebf\u6027\n\n\n\n  +/-1\n\n\n\n  %\n\n\n\n\n\n \u7535\u5bb9\n\n\n\n  244\n\n\n\n  pF\n\n\n\n\n\n \u8017\u6563\u7cfb\u6570\n\n\n\n 0.018\n\n\n\n (none)\n\n\n\n\n\n \u60ef\u6027\u8d28\u91cf\n\n\n\n  0.3\n\n\n\n  gram\n\n\n\n\n\u73af\u5883\u6307\u6807\n\n\n\n\n\n\n \u53c2\u6570\n\n\n\n \u503c\n\n\n\n \u5355\u4f4d\n\n\n\n\n\n \u50a8\u5b58\u6e29\u5ea6\n\n\n\n  -40 to +80 deg C\n\n\n\n\n\n  \u5de5\u4f5c\u6e29\u5ea6\n\n\n\n  -20 to +60 deg C\n\n\n\n\n\n \u91cd\u91cf\n\n\n\n  Minisense 100H\n\n\n\n 0.5 gram\n\n\n\n\n\n  Minisense 100V\n\n\n\n 0.6 gram\n\n\n\n\n\u8d44\u6599\u4e0b\u8f7d\n\n\n\n\n\n\n[\u7528\u6237\u624b\u518c]\n \nPiezo Film Sensors Technical Manual\n\n\n\n\n\n\n[\u7528\u6237\u624b\u518c]\n \nMiniSense 100 Vibration Sensor Manual", 
            "title": "Piezo Sensor MiniSense 100"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_1", 
            "text": "\u4f4e\u6210\u672c    \u60ac\u81c2\u5f0f\u632f\u52a8\u4f20\u611f\u5668    \u4f4e\u9891\u7075\u654f\u5ea6\u9ad8    \u4f20\u611f\u5668\u88ab\u5bc6\u5c01\u7528\u4e8e\u63d0\u9ad8RFI/EMI\u6291\u5236    \u826f\u597d\u7684\u7ebf\u6027\u5ea6\u548c\u52a8\u6001\u8303\u56f4    \u575a\u56fa\u8010\u7528\u7684\u67d4\u6027PVDF\u4f20\u611f\u5143\u4ef6\u53ef\u627f\u53d7\u9ad8\u51b2\u51fb", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_2", 
            "text": "\u68c0\u6d4b\u8fde\u7eed  \u8109\u51b2\u632f\u52a8\u6216\u51b2\u51fb", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_3", 
            "text": "", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#25c", 
            "text": "\u53c2\u6570   \u503c   \u5355\u4f4d    \u7535\u538b\u7075\u654f\u5ea6 (open-circuit, baseline)    1.1    V/g    \u7535\u8377\u7075\u654f\u5ea6 (baseline)    260    pC/g    \u5171\u632f\u9891\u7387    75    Hz    \u7535\u538b\u7075\u654f\u5ea6 (open-circuit, at resonance)    6    V/g    \u4e0a\u7ebf\u9891\u7387 (+3 dB)    42    Hz    \u7ebf\u6027    +/-1    %    \u7535\u5bb9    244    pF    \u8017\u6563\u7cfb\u6570   0.018   (none)    \u60ef\u6027\u8d28\u91cf    0.3    gram", 
            "title": "\u5178\u578b\u6027\u80fd (25\u00b0C)"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_4", 
            "text": "\u53c2\u6570   \u503c   \u5355\u4f4d    \u50a8\u5b58\u6e29\u5ea6    -40 to +80 deg C     \u5de5\u4f5c\u6e29\u5ea6    -20 to +60 deg C    \u91cd\u91cf    Minisense 100H   0.5 gram     Minisense 100V   0.6 gram", 
            "title": "\u73af\u5883\u6307\u6807"
        }, 
        {
            "location": "/Piezo_Sensor-MiniSense_100/#_5", 
            "text": "[\u7528\u6237\u624b\u518c]   Piezo Film Sensors Technical Manual    [\u7528\u6237\u624b\u518c]   MiniSense 100 Vibration Sensor Manual", 
            "title": "\u8d44\u6599\u4e0b\u8f7d"
        }, 
        {
            "location": "/Arduboy/", 
            "text": "1.  \u7b80\u4ecb\n\n\n\n\nArduboy\u662f\u4e00\u4e2a\u5c0f\u578b\u6e38\u620f\u7cfb\u7edf\uff0c\u4fe1\u7528\u5361\u7684\u5927\u5c0f\u3002 \u5b83\u914d\u5907\u4e86\u4e00\u4e2a\u7ecf\u5178\u76848\u4f4d\u6e38\u620f\uff0c\u53ef\u4ee5\u4ece\u5728\u7ebf\u7684\u5f00\u6e90\u6e38\u620f\u5e93\u4e0b\u8f7d\u91cd\u65b0\u7f16\u7a0b\u3002 Arduboy\u662f\u5f00\u6e90\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5b66\u4e60\u7f16\u5199\u548c\u521b\u5efa\u81ea\u5df1\u7684\u6e38\u620f\u3002\n\n\n\n\n2. \u5982\u4f55\u4e0b\u8f7d\u65b0\u7684\u6e38\u620f\n\n\n\u672c\u6307\u5357\u5c06\u6559\u60a8\u5982\u4f55\u8bbe\u7f6e\u60a8\u7684\u8ba1\u7b97\u673a\u5c06\u6e38\u620f\u4e0a\u4f20\u5230\u60a8\u7684Arduboy\u3002\n\n\n\n\nArduboy\u53f3\u4e0b\u89d2\u7684\u5c0f\u65b9\u5757\u9ed1\u8272\u82af\u7247\u79f0\u4e3a\u5fae\u63a7\u5236\u5668\uff0c\u5b83\u662f\u8bbe\u5907\u7684\u5927\u8111\u3002\u8fd9\u4e2a\u5fae\u5c0f\u76848\u4f4d\u8ba1\u7b97\u673a\u5305\u542b\u6240\u6709\u7684\u6307\u4ee4\uff0c\u56fe\u5f62\u548c\u58f0\u97f3\uff0c\u4ee5\u4ea7\u751f\u5728\u8bbe\u5907\u4e0a\u64ad\u653e\u7684\u6e38\u620f\u3002\n\n\na. \u4e0b\u8f7dArduino IDE\n\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9Arduboy\u91cd\u65b0\u7f16\u7a0b\uff0c\u5e76\u4f7f\u7528USB\u7535\u7f06\u548cArduino\u8f6f\u4ef6\u6765\u66f4\u6539\u6e38\u620f\u3002\u8bf7\u70b9\u51fb\n\u8fd9\u91cc\n\u4e0b\u8f7d\u5e76\u5b89\u88c5Arduino IDE.\n\n\n\n\nb. \u7ba1\u7406\u5e93\u6587\u4ef6\n\n\n\n\n\u5728\u6211\u4eec\u91cd\u65b0\u7f16\u7a0bArduboy\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u8bbe\u7f6e\u4e00\u4e9b\u4e8b\u60c5\uff0c \u6211\u4eec\u8981\u4e0b\u8f7d\u4e00\u4e9b\u9700\u8981\u7f16\u8bd1Arduboy\u5e93\u6587\u4ef6\u3002\n\n\n\u7f16\u8bd1\u4ee3\u7801\u610f\u5473\u7740\u5c06\u4eba\u7c7b\u53ef\u8bfb\u7684C ++\u4ee3\u7801\u8f6c\u6362\u4e3a\u5fae\u63a7\u5236\u5668\u53ef\u4ee5\u7406\u89e3\u7684\u4e8c\u8fdb\u5236\u673a\u5668\u8bed\u8a00\u3002\n\n\n\u4e3a\u4e86\u4f7f\u82af\u7247\u4e0eOLED\u663e\u793a\u5c4f\uff0c\u6309\u94ae\u548c\u626c\u58f0\u5668\u4e00\u8d77\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u4e0b\u8f7d\u4e00\u4e9b\u5e93\u3002\n\n\n\n\n\u8bf7\u6309\u7167\u4e00\u4e0b\u6d41\u7a0b\u9009\u62e9\u5e93\u7ba1\u7406\u5668\uff1a\n\n\n\u9879\u76ee\n\u52a0\u8f7d\u5e93\n\u7ba1\u7406\u5e93\n\n\n\n\nc. \u4e0b\u8f7d\u5e93\u6587\u4ef6\n\n\n\u627e\u5230\u5b83\u4eec\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u641c\u7d22\u201cArduboy\u201d\n\n\n\u4ee5\u4e0b\u662f\u6211\u4eec\u5efa\u8bae\u5b89\u88c5\u7684\u5e93\u6587\u4ef6\u5217\u8868\uff1a\n\n\n\n\nArduboy\n\n\nArduboy2\n\n\nArduboyTones\n\n\nArduboyPlaytune\n\n\nArdBitmap\n\n\nArdVoice\n\n\nATMlib\n\n\nArduboy-TinyFont\n\n\n\n\n\n\nd. \u9009\u62e9\u6b63\u786e\u7684\u677f\u548c\u7aef\u53e3\n\n\n\n\n\u5c06Micro-USB\u7535\u7f06\u63d2\u5165Arduboy\u5e76\u5c06\u5176\u8fde\u63a5\u5230PC\u3002\n\n\n\u4f7f\u7528\u9876\u90e8\u7684\u7535\u6e90\u5f00\u5173\u6253\u5f00Arduboy\u3002\n\n\n\n\n\u9009\u62e9Arduino Leonardo\u677f\u578b\uff08Arduboy\u57fa\u4e8eLeonardo\uff09\n\n\n\u5de5\u5177\n\u5f00\u53d1\u677f\n Arduino Leonardo\n\n\n\n\n\n\n\n\n\n\n\u9009\u62e9\u6b63\u786e\u7684\u7aef\u53e3\u53f7,\u6bcf\u4e2a\u8ba1\u7b97\u673a\u7684\u7aef\u53e3\u53f7\u53ef\u4ee5\u4e0d\u540c\n\n\n\n\n\n\ne. \u4e0b\u8f7d\u7a0b\u5e8f\n\n\n\u9996\u5148\u6211\u4eec\u9009\u62e9\u4e00\u4e2aArduboy2\u5e93\u91cc\u9762\u7684\u7a0b\u5e8f\uff0c \u5927\u591a\u6570\u5e93\u5305\u62ec\u51e0\u4e2a\u7a0b\u5e8f\uff0c\u6f14\u793a\u4e00\u4e9b\u529f\u80fd\u3002\n\n\n\n\n\n\n\u8bf7\u6839\u636e\u4e00\u4e0b\u6d41\u7a0b\u8fdb\u884c\u9009\u62e9\uff0c\n\n\n\u6587\u4ef6\n\u793a\u4f8b\n Arduboy2\n Hello World\n\n\n\n\n\n\n\n\n\n\n\u4f7f\u7528\u4e0a\u4f20\u6309\u94ae\u4e0a\u4f20\u7a0b\u5e8f\n\n\n\n\n\n\nArduino\u5c06\u5c1d\u8bd5\u7f16\u8bd1\u4ee3\u7801\uff0c\u5e76\u901a\u8fc7USB\u7535\u7f06\u5c06\u5176\u4f20\u8f93\u5230Arduboy\u3002\u4f60\u5c31\u53ef\u4ee5\u73a9\u6e38\u620f\u4e86\uff01\n\n\n3. \u6e38\u620f\u8d44\u6e90\n\n\n\n\n\u4f60\u53ef\u4ee5\u6e38\u89c8\nArduboy\u6e38\u620f\u7f51\u7ad9\n\uff0c\u6765\u4e0b\u8f7d\u7a0b\u5e8f\u3002\u7f51\u7ad9\u662f\u82f1\u6587\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3cChome\u7684\u5728\u7ebf\u7ffb\u8bd1\u63d2\u4ef6\u6765\u9884\u89c8\u3002", 
            "title": "Arduboy"
        }, 
        {
            "location": "/Arduboy/#1", 
            "text": "Arduboy\u662f\u4e00\u4e2a\u5c0f\u578b\u6e38\u620f\u7cfb\u7edf\uff0c\u4fe1\u7528\u5361\u7684\u5927\u5c0f\u3002 \u5b83\u914d\u5907\u4e86\u4e00\u4e2a\u7ecf\u5178\u76848\u4f4d\u6e38\u620f\uff0c\u53ef\u4ee5\u4ece\u5728\u7ebf\u7684\u5f00\u6e90\u6e38\u620f\u5e93\u4e0b\u8f7d\u91cd\u65b0\u7f16\u7a0b\u3002 Arduboy\u662f\u5f00\u6e90\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5b66\u4e60\u7f16\u5199\u548c\u521b\u5efa\u81ea\u5df1\u7684\u6e38\u620f\u3002", 
            "title": "1.  \u7b80\u4ecb"
        }, 
        {
            "location": "/Arduboy/#2", 
            "text": "\u672c\u6307\u5357\u5c06\u6559\u60a8\u5982\u4f55\u8bbe\u7f6e\u60a8\u7684\u8ba1\u7b97\u673a\u5c06\u6e38\u620f\u4e0a\u4f20\u5230\u60a8\u7684Arduboy\u3002   Arduboy\u53f3\u4e0b\u89d2\u7684\u5c0f\u65b9\u5757\u9ed1\u8272\u82af\u7247\u79f0\u4e3a\u5fae\u63a7\u5236\u5668\uff0c\u5b83\u662f\u8bbe\u5907\u7684\u5927\u8111\u3002\u8fd9\u4e2a\u5fae\u5c0f\u76848\u4f4d\u8ba1\u7b97\u673a\u5305\u542b\u6240\u6709\u7684\u6307\u4ee4\uff0c\u56fe\u5f62\u548c\u58f0\u97f3\uff0c\u4ee5\u4ea7\u751f\u5728\u8bbe\u5907\u4e0a\u64ad\u653e\u7684\u6e38\u620f\u3002", 
            "title": "2. \u5982\u4f55\u4e0b\u8f7d\u65b0\u7684\u6e38\u620f"
        }, 
        {
            "location": "/Arduboy/#a-arduino-ide", 
            "text": "\u6211\u4eec\u53ef\u4ee5\u5bf9Arduboy\u91cd\u65b0\u7f16\u7a0b\uff0c\u5e76\u4f7f\u7528USB\u7535\u7f06\u548cArduino\u8f6f\u4ef6\u6765\u66f4\u6539\u6e38\u620f\u3002\u8bf7\u70b9\u51fb \u8fd9\u91cc \u4e0b\u8f7d\u5e76\u5b89\u88c5Arduino IDE.", 
            "title": "a. \u4e0b\u8f7dArduino IDE"
        }, 
        {
            "location": "/Arduboy/#b", 
            "text": "\u5728\u6211\u4eec\u91cd\u65b0\u7f16\u7a0bArduboy\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u8bbe\u7f6e\u4e00\u4e9b\u4e8b\u60c5\uff0c \u6211\u4eec\u8981\u4e0b\u8f7d\u4e00\u4e9b\u9700\u8981\u7f16\u8bd1Arduboy\u5e93\u6587\u4ef6\u3002  \u7f16\u8bd1\u4ee3\u7801\u610f\u5473\u7740\u5c06\u4eba\u7c7b\u53ef\u8bfb\u7684C ++\u4ee3\u7801\u8f6c\u6362\u4e3a\u5fae\u63a7\u5236\u5668\u53ef\u4ee5\u7406\u89e3\u7684\u4e8c\u8fdb\u5236\u673a\u5668\u8bed\u8a00\u3002  \u4e3a\u4e86\u4f7f\u82af\u7247\u4e0eOLED\u663e\u793a\u5c4f\uff0c\u6309\u94ae\u548c\u626c\u58f0\u5668\u4e00\u8d77\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u4e0b\u8f7d\u4e00\u4e9b\u5e93\u3002   \u8bf7\u6309\u7167\u4e00\u4e0b\u6d41\u7a0b\u9009\u62e9\u5e93\u7ba1\u7406\u5668\uff1a  \u9879\u76ee \u52a0\u8f7d\u5e93 \u7ba1\u7406\u5e93", 
            "title": "b. \u7ba1\u7406\u5e93\u6587\u4ef6"
        }, 
        {
            "location": "/Arduboy/#c", 
            "text": "\u627e\u5230\u5b83\u4eec\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u641c\u7d22\u201cArduboy\u201d  \u4ee5\u4e0b\u662f\u6211\u4eec\u5efa\u8bae\u5b89\u88c5\u7684\u5e93\u6587\u4ef6\u5217\u8868\uff1a   Arduboy  Arduboy2  ArduboyTones  ArduboyPlaytune  ArdBitmap  ArdVoice  ATMlib  Arduboy-TinyFont", 
            "title": "c. \u4e0b\u8f7d\u5e93\u6587\u4ef6"
        }, 
        {
            "location": "/Arduboy/#d", 
            "text": "\u5c06Micro-USB\u7535\u7f06\u63d2\u5165Arduboy\u5e76\u5c06\u5176\u8fde\u63a5\u5230PC\u3002  \u4f7f\u7528\u9876\u90e8\u7684\u7535\u6e90\u5f00\u5173\u6253\u5f00Arduboy\u3002   \u9009\u62e9Arduino Leonardo\u677f\u578b\uff08Arduboy\u57fa\u4e8eLeonardo\uff09  \u5de5\u5177 \u5f00\u53d1\u677f  Arduino Leonardo      \u9009\u62e9\u6b63\u786e\u7684\u7aef\u53e3\u53f7,\u6bcf\u4e2a\u8ba1\u7b97\u673a\u7684\u7aef\u53e3\u53f7\u53ef\u4ee5\u4e0d\u540c", 
            "title": "d. \u9009\u62e9\u6b63\u786e\u7684\u677f\u548c\u7aef\u53e3"
        }, 
        {
            "location": "/Arduboy/#e", 
            "text": "\u9996\u5148\u6211\u4eec\u9009\u62e9\u4e00\u4e2aArduboy2\u5e93\u91cc\u9762\u7684\u7a0b\u5e8f\uff0c \u5927\u591a\u6570\u5e93\u5305\u62ec\u51e0\u4e2a\u7a0b\u5e8f\uff0c\u6f14\u793a\u4e00\u4e9b\u529f\u80fd\u3002    \u8bf7\u6839\u636e\u4e00\u4e0b\u6d41\u7a0b\u8fdb\u884c\u9009\u62e9\uff0c  \u6587\u4ef6 \u793a\u4f8b  Arduboy2  Hello World      \u4f7f\u7528\u4e0a\u4f20\u6309\u94ae\u4e0a\u4f20\u7a0b\u5e8f    Arduino\u5c06\u5c1d\u8bd5\u7f16\u8bd1\u4ee3\u7801\uff0c\u5e76\u901a\u8fc7USB\u7535\u7f06\u5c06\u5176\u4f20\u8f93\u5230Arduboy\u3002\u4f60\u5c31\u53ef\u4ee5\u73a9\u6e38\u620f\u4e86\uff01", 
            "title": "e. \u4e0b\u8f7d\u7a0b\u5e8f"
        }, 
        {
            "location": "/Arduboy/#3", 
            "text": "\u4f60\u53ef\u4ee5\u6e38\u89c8 Arduboy\u6e38\u620f\u7f51\u7ad9 \uff0c\u6765\u4e0b\u8f7d\u7a0b\u5e8f\u3002\u7f51\u7ad9\u662f\u82f1\u6587\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3cChome\u7684\u5728\u7ebf\u7ffb\u8bd1\u63d2\u4ef6\u6765\u9884\u89c8\u3002", 
            "title": "3. \u6e38\u620f\u8d44\u6e90"
        }, 
        {
            "location": "/3.6V_Micro_hydro_generator/", 
            "text": "\u5fae\u7535\u529b\u662f\u4e00\u79cd\u6e05\u6d01\u7684\uff0c\u53ef\u518d\u751f\u80fd\u6e90\u3002 \u8fd9\u662f\u4e00\u4e2a G \n micro hydro generator \uff0c\u5b83\u53ef\u4ee5\u5728\u4e00\u4e2a\u7a33\u538b\u7535\u8def\u548c\u4e00\u4e2a\u53ef\u5145\u7535\u7535\u6c60\u7684\u5e2e\u52a9\u4e0b\u63d0\u4f9b\u7a33\u5b9a\u7684\u8f93\u51fa\u7535\u538b\u548c\u8f93\u51fa\u7535\u6d41\u3002 \u6211\u4eec\u53ef\u4ee5\u5728\u5bb6\u91cc\u5b89\u88c5\uff0c\u4ee5\u8282\u7701\u5bb6\u5ead\u7684\u80fd\u6e90\uff0c\u5982\u4f7f\u7528\u6dcb\u6d74\u706f\u65f6 LED \u4f1a\u53d1\u4eae\u7b49\u3002\n\n\n\u538b\u529b\u548c\u6d41\u91cf\u56fe\n\n\n\n\n\u6d41\u91cf\u548c\u8f93\u51fa\u7535\u538b\u56fe\n\n\n\n\n\n\nNote\n\n\n\u8be5\u6a21\u5757\u589e\u52a0\u4e86\u4e00\u4e2a\u7a33\u538b\u7535\u8def\u548c\u4e00\u4e2a\u53ef\u5145\u7535\u7535\u6c60\uff0c\u8f93\u51fa\u7535\u538b\u7a33\u5b9a\u5728 3.6V \uff0c\u8f93\u51fa\u7535\u6d41\u7a33\u5b9a\u5728 300mA \u3002\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u91cd\u91cf\n\n\n\n165 g\n\n\n\n\n\n\u8f93\u51fa\u7535\u538b\n\n\n\n3.6V\n\n\n\n\n\n\u7535\u6c60\u5bb9\u91cf\n\n\n\n300mA\n\n\n\n\n\n\u6700\u5927\u5de5\u4f5c\u538b\u529b\n\n\n\n1.75 MPa\n\n\n\n\n\n\u5de5\u4f5c\u538b\u529b\n\n\n\n0\n1.75MPa\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\n\n\n\n0\n110\u00b0C\n\n\n\n\n\n\u6700\u5927\u503c\n\n\n\n30mins \u5728 110 \u00b0C \u4e0b\n\n\n\n\n\n\u63a8\u8350\u6d41\u91cf\u8303\u56f4\n\n\n\n1.5\u301c20 l / min\uff08\u538b\u529b 0.05-0.2mpa\uff09\n\n\n\n\n\n\u5b89\u88c5\u65b9\u6cd5\n\n\n\n\u6309\u7167\u8bf4\u660e\n\n\n\n\n\n\u6750\u6599\n\n\n\n\u5c3c\u9f99/\u73bb\u7483\u7ea4\u7ef4\uff0c\u805a\u7532\u919b\n\n\n\n\n\n\u8f93\u5165\u53e3\u548c\u8f93\u51fa\u53e3\u5c3a\u5bf8\n\n\n\n0.8\u82f1\u5bf8\n\n\n\n\u673a\u68b0\u5c3a\u5bf8\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u786c\u4ef6\u5b89\u88c5", 
            "title": "3.6V Micro hydro generator"
        }, 
        {
            "location": "/3.6V_Micro_hydro_generator/#_1", 
            "text": "\u91cd\u91cf  165 g   \u8f93\u51fa\u7535\u538b  3.6V   \u7535\u6c60\u5bb9\u91cf  300mA   \u6700\u5927\u5de5\u4f5c\u538b\u529b  1.75 MPa   \u5de5\u4f5c\u538b\u529b  0 1.75MPa   \u5de5\u4f5c\u6e29\u5ea6  0 110\u00b0C   \u6700\u5927\u503c  30mins \u5728 110 \u00b0C \u4e0b   \u63a8\u8350\u6d41\u91cf\u8303\u56f4  1.5\u301c20 l / min\uff08\u538b\u529b 0.05-0.2mpa\uff09   \u5b89\u88c5\u65b9\u6cd5  \u6309\u7167\u8bf4\u660e   \u6750\u6599  \u5c3c\u9f99/\u73bb\u7483\u7ea4\u7ef4\uff0c\u805a\u7532\u919b   \u8f93\u5165\u53e3\u548c\u8f93\u51fa\u53e3\u5c3a\u5bf8  0.8\u82f1\u5bf8", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/3.6V_Micro_hydro_generator/#_2", 
            "text": "", 
            "title": "\u673a\u68b0\u5c3a\u5bf8"
        }, 
        {
            "location": "/3.6V_Micro_hydro_generator/#_3", 
            "text": "\u786c\u4ef6\u5b89\u88c5", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/PIR_Motion_Sensor_Large_Lens_version/", 
            "text": "PIR\uff08\u88ab\u52a8\u7ea2\u5916\u63a2\u6d4b\uff09\u7528\u4e8e\u68c0\u6d4b\u4eba\u4f53\u7684\u8fd0\u52a8\u3002\u8fd9\u4e2a\u7248\u672c\u5177\u6709\u4e00\u4e2a\u5e7f\u89d2\u955c\u5934\u53ef\u4ee5\u7528\u4e8e\u957f\u8ddd\u79bb\u5927\u8303\u56f4\u68c0\u6d4b\u3002\u6a21\u5757\u4e0a\u76842.54mm \u6807\u51c6\u8fde\u63a5\u5934\u4f7f\u5f97\u5b83\u53ef\u4ee5\u8f7b\u677e\u5730\u5b89\u88c5\u5728\u4efb\u4f55\u5730\u65b9\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\n\u6d4b\u91cf\u8ddd\u79bb\u957f\n\n\n\n\n\n\n\u6d4b\u91cf\u89d2\u5ea6\u5927\n\n\n\n\n\n\n\u4f4e\u529f\u8017\n\n\n\n\n\n\n3.0-5.5V\u76f4\u6d41\u7535\u6e90\u4f9b\u7535\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u8f93\u5165\u7535\u538b: DC3.0-5.5V\n\n\n\n\n\n\n\u7535\u6d41: \u6700\u5927100uA\n\n\n\n\n\n\n\u68c0\u6d4b\u8ddd\u79bb: \u6700\u59279m\n\n\n\n\n\n\n\u8f93\u51fa\u4fe1\u53f7: \u5f85\u673a0V\uff1b\u68c0\u6d4b\u5230\u70ed\u6e90\u8fd0\u52a8\u540e3V\n\n\n\n\n\n\n\u654f\u611f\u89d2\u5ea6: 120\u00b0\n\n\n\n\n\n\n\u8fde\u63a5\u5668:3\u94882.54mm \u5f15\u811a\n\n\n\n\n\u5c3a\u5bf8\uff1a 36mm\u957f*26mm\u5bbd*21mm\u9ad8\n\n\n\n\n\u4f7f\u7528\u8bf4\u660e\n\n\n\n\n\u4e0b\u9762\u7684\u5de5\u7a0b\u6f14\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8fd0\u52a8\u611f\u5e94\u793a\u4f8b\u3002\u5f53\u6709\u4eba\u5728\u68c0\u6d4b\u8303\u56f4\u5185\u79fb\u52a8\u65f6\uff0c\u901a\u8fc7 \nSIG\n \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\uff0cLED\u706f\u4eae\u3002 \u5426\u5219\uff0c\u5b83\u5c06\u8f93\u51fa\u4f4e\u7535\u5e73\u3002 \u7136\u540e\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u68c0\u6d4b\u4eba\u7684\u52a8\u4f5c\u3002\n\n\n\n\n\u7a0b\u5e8f\u4ee3\u7801\n\n\n\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\n\n/*******************************************************************************/\n/*macro definitions of PIR motion sensor pin and LED pin*/\n#define PIR_MOTION_SENSOR 8//Use pin 8 to receive the signal from the module\n#define LED    4//the Grove - LED is connected to D4 of Arduino\n\nvoid setup()\n{\n    pinsInit();\n}\n\nvoid loop()\n{\n    if(isPeopleDetected())//if it detects the moving people?\n    turnOnLED();\n    else\n    turnOffLED();\n}\nvoid pinsInit()\n{\n    pinMode(PIR_MOTION_SENSOR, INPUT);\n    pinMode(LED,OUTPUT);\n}\nvoid turnOnLED()\n{\n    digitalWrite(LED,HIGH);\n}\nvoid turnOffLED()\n{\n    digitalWrite(LED,LOW);\n}\n/***************************************************************/\n/*Function: Detect whether anyone moves in it\ns detecting range*/\n/*Return:-boolean, ture is someone detected.*/\nboolean isPeopleDetected()\n{\n    int sensorValue = digitalRead(PIR_MOTION_SENSOR);\n    if(sensorValue == HIGH)//if the sensor value is HIGH?\n    {\n        return true;//yes,return ture\n    }\n    else\n    {\n        return false;//no,return false\n    }\n}\n\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u539f\u7406\u56fePCB\u6587\u4ef6]\nPIR Motion sensor Eagle file", 
            "title": "PIR Motion Sensor Large Lens version"
        }, 
        {
            "location": "/PIR_Motion_Sensor_Large_Lens_version/#_1", 
            "text": "\u6d4b\u91cf\u8ddd\u79bb\u957f    \u6d4b\u91cf\u89d2\u5ea6\u5927    \u4f4e\u529f\u8017    3.0-5.5V\u76f4\u6d41\u7535\u6e90\u4f9b\u7535", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/PIR_Motion_Sensor_Large_Lens_version/#_2", 
            "text": "\u8f93\u5165\u7535\u538b: DC3.0-5.5V    \u7535\u6d41: \u6700\u5927100uA    \u68c0\u6d4b\u8ddd\u79bb: \u6700\u59279m    \u8f93\u51fa\u4fe1\u53f7: \u5f85\u673a0V\uff1b\u68c0\u6d4b\u5230\u70ed\u6e90\u8fd0\u52a8\u540e3V    \u654f\u611f\u89d2\u5ea6: 120\u00b0    \u8fde\u63a5\u5668:3\u94882.54mm \u5f15\u811a   \u5c3a\u5bf8\uff1a 36mm\u957f*26mm\u5bbd*21mm\u9ad8", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/PIR_Motion_Sensor_Large_Lens_version/#_3", 
            "text": "\u4e0b\u9762\u7684\u5de5\u7a0b\u6f14\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8fd0\u52a8\u611f\u5e94\u793a\u4f8b\u3002\u5f53\u6709\u4eba\u5728\u68c0\u6d4b\u8303\u56f4\u5185\u79fb\u52a8\u65f6\uff0c\u901a\u8fc7  SIG  \u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\uff0cLED\u706f\u4eae\u3002 \u5426\u5219\uff0c\u5b83\u5c06\u8f93\u51fa\u4f4e\u7535\u5e73\u3002 \u7136\u540e\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u68c0\u6d4b\u4eba\u7684\u52a8\u4f5c\u3002", 
            "title": "\u4f7f\u7528\u8bf4\u660e"
        }, 
        {
            "location": "/PIR_Motion_Sensor_Large_Lens_version/#_4", 
            "text": "\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a /*******************************************************************************/\n/*macro definitions of PIR motion sensor pin and LED pin*/\n#define PIR_MOTION_SENSOR 8//Use pin 8 to receive the signal from the module\n#define LED    4//the Grove - LED is connected to D4 of Arduino\n\nvoid setup()\n{\n    pinsInit();\n}\n\nvoid loop()\n{\n    if(isPeopleDetected())//if it detects the moving people?\n    turnOnLED();\n    else\n    turnOffLED();\n}\nvoid pinsInit()\n{\n    pinMode(PIR_MOTION_SENSOR, INPUT);\n    pinMode(LED,OUTPUT);\n}\nvoid turnOnLED()\n{\n    digitalWrite(LED,HIGH);\n}\nvoid turnOffLED()\n{\n    digitalWrite(LED,LOW);\n}\n/***************************************************************/\n/*Function: Detect whether anyone moves in it s detecting range*/\n/*Return:-boolean, ture is someone detected.*/\nboolean isPeopleDetected()\n{\n    int sensorValue = digitalRead(PIR_MOTION_SENSOR);\n    if(sensorValue == HIGH)//if the sensor value is HIGH?\n    {\n        return true;//yes,return ture\n    }\n    else\n    {\n        return false;//no,return false\n    }\n}", 
            "title": "\u7a0b\u5e8f\u4ee3\u7801"
        }, 
        {
            "location": "/PIR_Motion_Sensor_Large_Lens_version/#_5", 
            "text": "[\u539f\u7406\u56fePCB\u6587\u4ef6] PIR Motion sensor Eagle file", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/RF_Explorer_Software/", 
            "text": "RF Explorer \u662f\u7528\u4e8e\u76d1\u63a7\u548c\u6392\u9664\u65e0\u7ebf\u7cfb\u7edf\u548c\u901a\u4fe1\u7684\u5353\u8d8a\u8bca\u65ad\u5de5\u5177\u3002\u5b83\u662f\u7531 Ariel \u8bbe\u8ba1\u7684\u4e00\u7cfb\u5217\u4f4e\u6210\u672c\uff0c\u4fbf\u643a\u5f0f RF \u9891\u8c31\u5206\u6790\u4eea\uff0c\u53ef\u5728\u5404\u79cd\u9891\u7387\u8303\u56f4\u5185\u4f7f\u7528\u3002\n\n\nRF Explorer \u7cfb\u5217\u5206\u6790\u4eea\u548c\u53d1\u751f\u5668\u91cd\u65b0\u5b9a\u4e49\u4e86\u624b\u6301\u5f0f\u4fbf\u643a\u5f0fRF\u9891\u8c31\u5206\u6790\u4eea\u3002\u8be5\u8bbe\u5907\u4f53\u79ef\u5c0f\u5de7\uff0c\u91cd\u91cf\u8f7b\uff0c\u6027\u80fd\u548c\u529f\u80fd\u76f8\u5f53\u4e8e\u66f4\u5927\u3001\u66f4\u6602\u8d35\u7684\u8bbe\u5907\u3002\n\n\n\u7136\u800c\uff0c\u4e00\u65e6 RF \u9891\u8c31\u5206\u6790\u4eea\u7684\u4f7f\u7528\u88ab\u9650\u5236\u5728\u80fd\u591f\u8d1f\u62c5\u5f97\u8d77\u9ad8\u4ef7\u683c\u6807\u7b7e\u7684\u516c\u53f8/\u7ec4\u7ec7\u4e2d\uff0cRF Explorer \u7684\u4f4e\u6210\u672c\u73b0\u5728\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u5de5\u7a0b\u5e08\u3001\u6280\u672f\u4eba\u5458\u548c\u7cbe\u660e\u7684\u4e1a\u4f59\u7231\u597d\u8005\u62e5\u6709\u62e5\u6709 RF \u9891\u8c31\u5206\u6790\u4eea\u7684\u673a\u4f1a\u3002\n\n\n\u4ee5\u4ee5\u4e0b\u662f\u60a8\u53ef\u80fd\u611f\u5174\u8da3\u7684\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f \u2014\u2014 \u5b83\u4eec\u5728\u591a\u4e2a\u5e73\u53f0\u4e0a\u8fd0\u884c\u3002\u8fd9\u5141\u8bb8\u60a8\u5c1d\u8bd5\u8f6f\u4ef6\u63d0\u4f9b\u7684\u5404\u79cd\u529f\u80fd\uff0c\u5e76\u786e\u5b9a\u54ea\u79cd\u6700\u9002\u5408\u60a8\u7684\u9700\u6c42\u3002\u53ef\u7528\u4e8e\u6240\u6709\u5e73\u53f0\u7684 RF Explorer \u517c\u5bb9\u8f6f\u4ef6\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u548c\u5b8c\u6574\u5217\u8868\uff0c\u8bf7\u8bbf\u95ee\n\u6b64\u5904\n\u3002\n\n\n\n\n\n\n\n\n\u4ea7\u54c1\u540d\u79f0\n\n\n\u8d2d\u4e70\u5730\u5740\n\n\n\n\n\n\n\n\n\n\nRF Explorer WiFi Combo\n\n\n\n\n\n\n\n\nRF Explorer Signal Generator\uff08RFE6GEN\uff09\n\n\n\n\n\n\n\n\nRF Explorer 6G modole\n\n\n\n\n\n\n\n\nRF Explorer 6G Combo\n\n\n\n\n\n\n\n\nRF Explorer - 3G Combo\n\n\n\n\n\n\n\n\n\n\n\u7528\u4e8e RF Explorer \u7684 Windows \u8f6f\u4ef6\u9009\u9879\n\n\n\u9002\u7528\u4e8e Windows \u7684 RF Explorer\n\n\n\n\nRF Explorer\u7684\u5f00\u53d1\n\uff0c\u9002\u7528\u4e8e Windows \u7684 RF Explorer \u5e94\u7528\u7a0b\u5e8f\uff0c \u5e76\u4e14\u5b83\u80fd\u591f\u63d0\u4f9b\u4f20\u7edf\u7684\u9891\u8c31\u8ddf\u8e2a\u89c6\u56fe\u4ee5\u53ca\u66f4\u591a\u7684\u56fe\u5f62\u3002 \u5b83\u8fd8\u5305\u62ec\u8fd0\u884c\u4fe1\u53f7\u53d1\u751f\u5668\u4ee5\u53ca\u80fd\u591f\u4f7f\u7528\u7f51\u7edc\u5206\u6790\u4eea\u7684\u6240\u9700\u8f6f\u4ef6\u3002\n\n\nNuts About Nets \u521b\u9020\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u8f6f\u4ef6 \u2014\u2014\u6807\u51c6\u7684\u548c\u4e13\u4e1a\u7684\u3002 \n\u6807\u51c6\u7248\n \u662f\u514d\u8d39\u7684\uff0c \n\u4e13\u4e1a\u7248\n \u53ea\u898149\u7f8e\u5143\u3002\n\n\nTouchstone \u8f6f\u4ef6\u5728 \nNuts About Nets\n \u4e2d\u5c06\u4ece RF Explorer \u9891\u8c31\u5206\u6790\u4eea\u6536\u96c6\u7684\u6570\u636e\u8f6c\u6362\u6210\u9ad8\u5ea6\u56fe\u5f62\u5316\u7684\u56fe\u8868\u548c\u663e\u793a\u5c4f\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u5bf9 RF \u73af\u5883\u8fdb\u884c\u53ef\u89c6\u5316\uff0c\u76d1\u63a7 RF \u4fe1\u53f7\uff0c\u6392\u9664 RF \u95ee\u9898\u5e76\u68c0\u6d4b RF \u5e72\u6270\u6e90\u3002\n\n\n\u9002\u7528\u4e8e RF Explorer \u7684 MacOS \u8f6f\u4ef6\u9009\u9879\n\n\n\u9002\u7528\u4e8e MacOS X \u7684 iRF Explorer - \u514d\u8d39\n\n\n\n\u5728 Mac \u5546\u5e97\uff0c\u5b83\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u548c\u6613\u4e8e\u4f7f\u7528\u7684\u6807\u51c6\u7684\u9891\u8c31\u5206\u6790\u4eea\u529f\u80fd\u7684 Mac\u3002 Mac OS X 10.7\u53ca\u66f4\u9ad8\u7248\u672c\uff0c\u8bf7\u786e\u4fdd\u6309\u7167\u5b89\u88c5\u8bf4\u660e\u5b89\u88c5 Silicon Labs \u9a71\u52a8\u7a0b\u5e8f\u3002\n\n\nVantage - 99\u7f8e\u5143\n\n\n\n\u5f3a\u5927\u800c\u6613\u4e8e\u4f7f\u7528\u7684 Mac \u6807\u51c6\u9891\u8c31\u5206\u6790\u4eea\uff0c\u652f\u6301\u6240\u6709 RF Explorer \u578b\u53f7\u3002\u529f\u80fd\u4e3b\u8981\u5305\u62ec\u7b2c\u4e09\u65b9\u534f\u8c03\u8f6f\u4ef6\u5de5\u5177\u7684\u6587\u4ef6\u5bfc\u51fa\u3001\u672a\u6765\u9ad8\u7ea7\u529f\u80fd\u7684\u8def\u7ebf\u56fe\u3002\n\n\n\u7528\u4e8e RF Explorer \u7684 Android \u8f6f\u4ef6\u9009\u9879\n\n\n\u9002\u7528\u4e8e Android \u7684 RFTrack - \u514d\u8d39\n\n\n\u9002\u7528\u4e8e Android OTG \u624b\u673a\u548c\u5e73\u677f\u7535\u8111\uff0c\u5b83\u7ed3\u5408\u4e86 Android \u7684 GPS \u4f4d\u7f6e\u548c RF Explorer \u7684 RF \u6d3b\u52a8\uff0c\u521b\u5efa\u4e86\u5168\u7403 TVWS \u6570\u636e\u5e93\u3002\n\n\nTouchstone \u624b\u673a  - 49\u7f8e\u5143\n\n\n\n\n\u53ef\u7528\u4e8e Android OTG \u624b\u673a\u548c\u5e73\u677f\u7535\u8111\uff0c\u5c06\u4ece RF Explorer \u9891\u8c31\u5206\u6790\u4eea\u6536\u96c6\u7684\u6570\u636e\u8f6c\u6362\u4e3a\u9ad8\u5ea6\u56fe\u5f62\u5316\u7684\u56fe\u8868\u5e76\u663e\u793a\u5728\u663e\u793a\u5c4f\u4e0a\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u5bf9 RF \u73af\u5883\u8fdb\u884c\u53ef\u89c6\u5316\uff0c\u76d1\u63a7 RF\u4fe1\u53f7\uff0c\u6392\u9664 RF \u95ee\u9898\u5e76\u68c0\u6d4b RF \u5e72\u6270\u6e90\u3002", 
            "title": "RF Explorer Software"
        }, 
        {
            "location": "/RF_Explorer_Software/#rf-explorer-windows", 
            "text": "", 
            "title": "\u7528\u4e8e RF Explorer \u7684 Windows \u8f6f\u4ef6\u9009\u9879"
        }, 
        {
            "location": "/RF_Explorer_Software/#windows-rf-explorer", 
            "text": "RF Explorer\u7684\u5f00\u53d1 \uff0c\u9002\u7528\u4e8e Windows \u7684 RF Explorer \u5e94\u7528\u7a0b\u5e8f\uff0c \u5e76\u4e14\u5b83\u80fd\u591f\u63d0\u4f9b\u4f20\u7edf\u7684\u9891\u8c31\u8ddf\u8e2a\u89c6\u56fe\u4ee5\u53ca\u66f4\u591a\u7684\u56fe\u5f62\u3002 \u5b83\u8fd8\u5305\u62ec\u8fd0\u884c\u4fe1\u53f7\u53d1\u751f\u5668\u4ee5\u53ca\u80fd\u591f\u4f7f\u7528\u7f51\u7edc\u5206\u6790\u4eea\u7684\u6240\u9700\u8f6f\u4ef6\u3002  Nuts About Nets \u521b\u9020\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u8f6f\u4ef6 \u2014\u2014\u6807\u51c6\u7684\u548c\u4e13\u4e1a\u7684\u3002  \u6807\u51c6\u7248  \u662f\u514d\u8d39\u7684\uff0c  \u4e13\u4e1a\u7248  \u53ea\u898149\u7f8e\u5143\u3002  Touchstone \u8f6f\u4ef6\u5728  Nuts About Nets  \u4e2d\u5c06\u4ece RF Explorer \u9891\u8c31\u5206\u6790\u4eea\u6536\u96c6\u7684\u6570\u636e\u8f6c\u6362\u6210\u9ad8\u5ea6\u56fe\u5f62\u5316\u7684\u56fe\u8868\u548c\u663e\u793a\u5c4f\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u5bf9 RF \u73af\u5883\u8fdb\u884c\u53ef\u89c6\u5316\uff0c\u76d1\u63a7 RF \u4fe1\u53f7\uff0c\u6392\u9664 RF \u95ee\u9898\u5e76\u68c0\u6d4b RF \u5e72\u6270\u6e90\u3002", 
            "title": "\u9002\u7528\u4e8e Windows \u7684 RF Explorer"
        }, 
        {
            "location": "/RF_Explorer_Software/#rf-explorer-macos", 
            "text": "", 
            "title": "\u9002\u7528\u4e8e RF Explorer \u7684 MacOS \u8f6f\u4ef6\u9009\u9879"
        }, 
        {
            "location": "/RF_Explorer_Software/#macos-x-irf-explorer-", 
            "text": "\u5728 Mac \u5546\u5e97\uff0c\u5b83\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u548c\u6613\u4e8e\u4f7f\u7528\u7684\u6807\u51c6\u7684\u9891\u8c31\u5206\u6790\u4eea\u529f\u80fd\u7684 Mac\u3002 Mac OS X 10.7\u53ca\u66f4\u9ad8\u7248\u672c\uff0c\u8bf7\u786e\u4fdd\u6309\u7167\u5b89\u88c5\u8bf4\u660e\u5b89\u88c5 Silicon Labs \u9a71\u52a8\u7a0b\u5e8f\u3002", 
            "title": "\u9002\u7528\u4e8e MacOS X \u7684 iRF Explorer - \u514d\u8d39"
        }, 
        {
            "location": "/RF_Explorer_Software/#vantage-99", 
            "text": "\u5f3a\u5927\u800c\u6613\u4e8e\u4f7f\u7528\u7684 Mac \u6807\u51c6\u9891\u8c31\u5206\u6790\u4eea\uff0c\u652f\u6301\u6240\u6709 RF Explorer \u578b\u53f7\u3002\u529f\u80fd\u4e3b\u8981\u5305\u62ec\u7b2c\u4e09\u65b9\u534f\u8c03\u8f6f\u4ef6\u5de5\u5177\u7684\u6587\u4ef6\u5bfc\u51fa\u3001\u672a\u6765\u9ad8\u7ea7\u529f\u80fd\u7684\u8def\u7ebf\u56fe\u3002", 
            "title": "Vantage - 99\u7f8e\u5143"
        }, 
        {
            "location": "/RF_Explorer_Software/#rf-explorer-android", 
            "text": "", 
            "title": "\u7528\u4e8e RF Explorer \u7684 Android \u8f6f\u4ef6\u9009\u9879"
        }, 
        {
            "location": "/RF_Explorer_Software/#android-rftrack-", 
            "text": "\u9002\u7528\u4e8e Android OTG \u624b\u673a\u548c\u5e73\u677f\u7535\u8111\uff0c\u5b83\u7ed3\u5408\u4e86 Android \u7684 GPS \u4f4d\u7f6e\u548c RF Explorer \u7684 RF \u6d3b\u52a8\uff0c\u521b\u5efa\u4e86\u5168\u7403 TVWS \u6570\u636e\u5e93\u3002", 
            "title": "\u9002\u7528\u4e8e Android \u7684 RFTrack - \u514d\u8d39"
        }, 
        {
            "location": "/RF_Explorer_Software/#touchstone-49", 
            "text": "\u53ef\u7528\u4e8e Android OTG \u624b\u673a\u548c\u5e73\u677f\u7535\u8111\uff0c\u5c06\u4ece RF Explorer \u9891\u8c31\u5206\u6790\u4eea\u6536\u96c6\u7684\u6570\u636e\u8f6c\u6362\u4e3a\u9ad8\u5ea6\u56fe\u5f62\u5316\u7684\u56fe\u8868\u5e76\u663e\u793a\u5728\u663e\u793a\u5c4f\u4e0a\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u5bf9 RF \u73af\u5883\u8fdb\u884c\u53ef\u89c6\u5316\uff0c\u76d1\u63a7 RF\u4fe1\u53f7\uff0c\u6392\u9664 RF \u95ee\u9898\u5e76\u68c0\u6d4b RF \u5e72\u6270\u6e90\u3002", 
            "title": "Touchstone \u624b\u673a  - 49\u7f8e\u5143"
        }, 
        {
            "location": "/Codec-Adaptive_Wireless_Relay/", 
            "text": "Wireless Relay \u662f\u5355\u901a\u9053\u7684\u81ea\u9002\u5e94\u7f16\u7801\u89e3\u7801\u7684\u5c04\u9891\u63a5\u6536\u5668\u3002 \u5b83\u6709\u52a9\u4e8e\u5f88\u8f7b\u6613\u5730\u90e8\u7f72\u7535\u5668\u7684\u65e0\u7ebf\u4ea4\u6d41\u63a7\u5236\u3002\n\n\n\n\n\n\n\u6700\u5927\u652f\u630130\u79cd\u7f16\u7801\uff0c\u6bcf\u79cd\u7f16\u7801\u90fd\u53ef\u4ee5\u6709\u65e0\u9650\u591a\u4e2a\u63a7\u5236\u5668\u548c\u63a5\u6536\u5668\n\n\n\n\n\n\n\u9002\u914d\u5927\u591a\u6570\u6d41\u884c\u7684RF\u8fdc\u7a0b\u63a7\u5236\u5668\n\n\n\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\n\n\u706f\u5149\n\n\n\n\n\n\n\u7535\u52a8\u95e8\u7a97\n\n\n\n\n\n\n\u5b89\u4fdd\u8bbe\u65bd\n\n\n\n\n\n\n\u5de5\u4e1a\u63a7\u5236\n\n\n\n\n\n\n\u81ea\u52a8\u5316\u4f4f\u5b85\n\n\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u538b : DC12V\n\n\n\n\n\n\n\u5de5\u4f5c\u7535\u6d41 : 6mA\n\n\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6 : -30\u2103 ~ +70\u2103\n\n\n\n\n\n\n\u9891\u7387 : 315MHz/433MHz\n\n\n\n\n\n\n\u7075\u654f\u5ea6 : -105dbm\n\n\n\n\n\n\n\u63a7\u5236\u7535\u8def : AC/DC\n\n\n\n\n\n\n\u8f93\u51fa\u7535\u6d41 : \u226410A\n\n\n\n\n\n\n\u5916\u578b\u5c3a\u5bf8 : 50*34*17mm\n\n\n\n\n\n\n\u5f15\u811a\u5b9a\u4e49\n\n\n\n\n\u8f93\u51fa\n\n\n\n\n\n\nA. Latch \u2013 \u8fde\u63a5\u5f15\u811a \n1.2\n\n\n\n\n\n\nB. Interlock \u2013 \u8fde\u63a5\u5f15\u811a \n2.3\n\n\n\n\n\n\nC. Non-latch \u2013 \u60ac\u7a7a\n\n\n\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n\n\n\n\n\u7f16\u7801\u9002\u914d\n\n\n\n\n\n\n\u4e0a\u7535\u540e\u6309\u7ea2\u8272\u7684\u6309\u94ae\uff0c\u76f4\u5230 LED \u4eae\u8d77\u3002\n\n\n\n\n\n\n\u5728 20 \u79d2\u5185\uff0c\u6309\u5c04\u9891\u9065\u63a7\u6216\u6fc0\u6d3b\u53d1\u5c04\u5668\u4e0a\u7684\u4efb\u610f\u6309\u94ae\uff0cLED \u95ea\u70c1\u7136\u540e\u7184\u706d\u4ee5\u901a\u77e5\u9002\u914d\u6210\u529f\u3002\n\n\n\n\n\n\n\u7f16\u7801\u6e05\u9664\n\n\n\u4e0a\u7535\uff0c\u6309\u4f4f\u7ea2\u8272\u6309\u94ae 6 \u79d2\u949f\uff0c\u76f4\u5230\u6307\u793a\u706f\u7184\u706d\uff0c\u7f16\u7801\u89e3\u7801\u5668\u88ab\u6e05\u9664\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u6570\u636e\u624b\u518c]\n \nFile:Wireless relay datasheet.pdf", 
            "title": "Codec Adaptive Wireless Relay"
        }, 
        {
            "location": "/Codec-Adaptive_Wireless_Relay/#_1", 
            "text": "\u706f\u5149    \u7535\u52a8\u95e8\u7a97    \u5b89\u4fdd\u8bbe\u65bd    \u5de5\u4e1a\u63a7\u5236    \u81ea\u52a8\u5316\u4f4f\u5b85", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/Codec-Adaptive_Wireless_Relay/#_2", 
            "text": "\u5de5\u4f5c\u7535\u538b : DC12V    \u5de5\u4f5c\u7535\u6d41 : 6mA    \u5de5\u4f5c\u6e29\u5ea6 : -30\u2103 ~ +70\u2103    \u9891\u7387 : 315MHz/433MHz    \u7075\u654f\u5ea6 : -105dbm    \u63a7\u5236\u7535\u8def : AC/DC    \u8f93\u51fa\u7535\u6d41 : \u226410A    \u5916\u578b\u5c3a\u5bf8 : 50*34*17mm", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/Codec-Adaptive_Wireless_Relay/#_3", 
            "text": "\u8f93\u51fa    A. Latch \u2013 \u8fde\u63a5\u5f15\u811a  1.2    B. Interlock \u2013 \u8fde\u63a5\u5f15\u811a  2.3    C. Non-latch \u2013 \u60ac\u7a7a", 
            "title": "\u5f15\u811a\u5b9a\u4e49"
        }, 
        {
            "location": "/Codec-Adaptive_Wireless_Relay/#_4", 
            "text": "\u7f16\u7801\u9002\u914d    \u4e0a\u7535\u540e\u6309\u7ea2\u8272\u7684\u6309\u94ae\uff0c\u76f4\u5230 LED \u4eae\u8d77\u3002    \u5728 20 \u79d2\u5185\uff0c\u6309\u5c04\u9891\u9065\u63a7\u6216\u6fc0\u6d3b\u53d1\u5c04\u5668\u4e0a\u7684\u4efb\u610f\u6309\u94ae\uff0cLED \u95ea\u70c1\u7136\u540e\u7184\u706d\u4ee5\u901a\u77e5\u9002\u914d\u6210\u529f\u3002    \u7f16\u7801\u6e05\u9664  \u4e0a\u7535\uff0c\u6309\u4f4f\u7ea2\u8272\u6309\u94ae 6 \u79d2\u949f\uff0c\u76f4\u5230\u6307\u793a\u706f\u7184\u706d\uff0c\u7f16\u7801\u89e3\u7801\u5668\u88ab\u6e05\u9664\u3002", 
            "title": "\u4f7f\u7528\u65b9\u6cd5"
        }, 
        {
            "location": "/Codec-Adaptive_Wireless_Relay/#_5", 
            "text": "[\u6570\u636e\u624b\u518c]   File:Wireless relay datasheet.pdf", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/DC_framework_miniature_solenoid_VL-0063/", 
            "text": "\u8fd9\u4e2a 14.8 V \u7684 DC framework miniature solenoid \u662f\u7528\u4e8e\u9879\u76ee\u4e2d\u4e00\u4e9b\u9700\u8981\u77ac\u95f4\u63a7\u5236\u7684\u573a\u5408\u3002\u8fd9\u79cd\u7535\u78c1\u94c1\u901a\u5e38\u7528\u4e8e\u5c0f\u578b\u81ea\u52a8\u5316\u7cfb\u7edf\u548c\u8fdc\u7a0b\u63a7\u5236\u7b49\u7b49\u3002\u6240\u6709\u9700\u8981\u76f4\u6d41\u7ee7\u7535\u5668\u7684\u573a\u5408\u5b83\u90fd\u80fd\u5f88\u597d\u7684\u5de5\u4f5c\u3002\n\n\n\n\n\n\nWarning\n\n\n\u7535\u78c1\u94c1\u7684\u5de5\u4f5c\u6e29\u5ea6\u9700\u8981\u5728 80 \u2103 \u4ee5\u5185\uff0c\u5e76\u4e14\u6bcf\u6b21\u901a\u7535\u65f6\u95f4\u5c11\u4e8e 5 \u79d2\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\u7535\u538b\uff1a14.8V DC\n\n\n\u5bb9\u6613\u56fa\u5b9a\u548c\u8fde\u63a5\n\n\n\u4f4e\u6469\u64e6\uff0c\u9ad8\u6548\u7387\uff0c\u4f7f\u7528\u5bff\u547d\u957f\n\n\n\u8bbe\u8ba1\u7b80\u5355\u53ef\u9760\n\n\n\n\n\u521b\u610f\u5e94\u7528\n\n\n\n\n\n\n\u81ea\u52a8\u552e\u8d27\u673a\uff0c\u81ea\u52a8\u552e\u7968\u673a\uff0c\u5151\u6362\u673a\n\n\n\u529e\u516c\u8bbe\u5907\uff1a\u4f20\u771f\u673a\uff0c\u6253\u5361\u673a\uff0c\u590d\u5370\u673a\uff0c\u6253\u5b57\u673a\uff0c\u6536\u94f6\u673a\uff0c\u7ed8\u56fe\u4eea\n\n\n\u8fd0\u8f93\u8bbe\u5907\uff1a\u81ea\u52a8\u95e8\u9501\uff0c\u5b89\u5168\u5e26\u9501\uff0c\u6c7d\u8f66\u7535\u78c1\u9600\uff0c\u505c\u8f66\u8bbe\u65bd\n\n\n\u7535\u5668\uff1a\u5f55\u97f3\u673a\uff0c\u5f55\u50cf\u673a\uff0c\u952e\u76d8\uff0c\u81ea\u52a8\u7f16\u7ec7\u673a\uff0c\u5361\u62c9 OK \u673a\n\n\n\u5176\u4ed6\uff1a\u5305\u88c5\u673a\u68b0\uff0c\u673a\u5668\u4eba\uff0c\u517b\u6b96\u8bbe\u5907\uff0c\u51b2\u538b\u8bbe\u5907\uff0c\u62a5\u8b66\u5668\uff0c\u6c34\u7535\u78c1\u9600\n\n\n\n\n\u89c4\u683c\u53c2\u6570\n\n\n\n\n\u5de5\u4f5c\u6761\u4ef6\uff1a\n\n\n\n\n\u5de5\u4f5c\u6e29\u5ea6\uff1a-5 \u2103 to 40 \u2103\n\n\n\u5de5\u4f5c\u6e29\u5ea6 45% to 85%\n\n\n\u50a8\u5b58\u6e29\u5ea6 -40 \u2103 to 75 \u2103\n\n\n\u50a8\u5b58\u6e7f\u5ea6\uff1a0% to 95%\n\n\n\u6e29\u5ea6\uff1a65\u2103\u4ee5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u767e\u4e07\u6b21\u4ee5\u4e0a\u3002\n\n\n\u6700\u9ad8\u5de5\u4f5c\u6e29\u5ea6\u4e0d\u5f97\u8d85\u8fc7 80\u2103\u3002\n\n\n\n\n\n\n\n\n\n\n\u7f16\u53f7\n\n\n\n\u540d\u79f0\n\n\n\n\n\n 1\n\n\n\n  \u56fa\u5b9a\u5916\u58f3\n\n\n\n\n\n 2\n\n\n\n  \u5bc6\u5c01\n\n\n\n\n\n 3\n\n\n\n  \u6d3b\u52a8\u8f74\n\n\n\n\n\n 4\n\n\n\n  \u56fa\u5b9a\u8f74\n\n\n\n\n\n 5\n\n\n\n  \u7ebf\u5708\u5916\u58f3\n\n\n\n\n\n 6\n\n\n\n  \u7ebf\u5708\n\n\n\n\n\n 7\n\n\n\n  \u5bfc\u7ba1\n\n\n\n\n\n\n\u6d4b\u8bd5\u6e29\u5ea6\n\n\n\n\n\n\n\u73af\u5883\u6e29\u5ea6 23\u00b12\u2103\n\n\n\n\n\n\n\u76f8\u5bf9\u6e7f\u5ea6 50\u00b110%\n\n\n\n\n\n\n\u6c14\u538b 1013MPa\n\n\n\n\n\n\n500VDC \u7edd\u7f18\u6d4b\u8bd5\u65f6\uff0c\u7edd\u7f18\u7535\u963b\u8fbe\u5230 100M\u03a9\u3002\n\n\n\n\n\n\n\u7edd\u7f18\u5f3a\u5ea6\u4e3a 600VAC / 1 \u5206\u949f\u76f4\u6d41\u6807\u51c6\u4ea7\u54c1\u8868\u3002", 
            "title": "DC framework miniature solenoid VL-0063"
        }, 
        {
            "location": "/DC_framework_miniature_solenoid_VL-0063/#_1", 
            "text": "\u7535\u538b\uff1a14.8V DC  \u5bb9\u6613\u56fa\u5b9a\u548c\u8fde\u63a5  \u4f4e\u6469\u64e6\uff0c\u9ad8\u6548\u7387\uff0c\u4f7f\u7528\u5bff\u547d\u957f  \u8bbe\u8ba1\u7b80\u5355\u53ef\u9760", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/DC_framework_miniature_solenoid_VL-0063/#_2", 
            "text": "\u81ea\u52a8\u552e\u8d27\u673a\uff0c\u81ea\u52a8\u552e\u7968\u673a\uff0c\u5151\u6362\u673a  \u529e\u516c\u8bbe\u5907\uff1a\u4f20\u771f\u673a\uff0c\u6253\u5361\u673a\uff0c\u590d\u5370\u673a\uff0c\u6253\u5b57\u673a\uff0c\u6536\u94f6\u673a\uff0c\u7ed8\u56fe\u4eea  \u8fd0\u8f93\u8bbe\u5907\uff1a\u81ea\u52a8\u95e8\u9501\uff0c\u5b89\u5168\u5e26\u9501\uff0c\u6c7d\u8f66\u7535\u78c1\u9600\uff0c\u505c\u8f66\u8bbe\u65bd  \u7535\u5668\uff1a\u5f55\u97f3\u673a\uff0c\u5f55\u50cf\u673a\uff0c\u952e\u76d8\uff0c\u81ea\u52a8\u7f16\u7ec7\u673a\uff0c\u5361\u62c9 OK \u673a  \u5176\u4ed6\uff1a\u5305\u88c5\u673a\u68b0\uff0c\u673a\u5668\u4eba\uff0c\u517b\u6b96\u8bbe\u5907\uff0c\u51b2\u538b\u8bbe\u5907\uff0c\u62a5\u8b66\u5668\uff0c\u6c34\u7535\u78c1\u9600", 
            "title": "\u521b\u610f\u5e94\u7528"
        }, 
        {
            "location": "/DC_framework_miniature_solenoid_VL-0063/#_3", 
            "text": "\u5de5\u4f5c\u6761\u4ef6\uff1a   \u5de5\u4f5c\u6e29\u5ea6\uff1a-5 \u2103 to 40 \u2103  \u5de5\u4f5c\u6e29\u5ea6 45% to 85%  \u50a8\u5b58\u6e29\u5ea6 -40 \u2103 to 75 \u2103  \u50a8\u5b58\u6e7f\u5ea6\uff1a0% to 95%  \u6e29\u5ea6\uff1a65\u2103\u4ee5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u767e\u4e07\u6b21\u4ee5\u4e0a\u3002  \u6700\u9ad8\u5de5\u4f5c\u6e29\u5ea6\u4e0d\u5f97\u8d85\u8fc7 80\u2103\u3002      \u7f16\u53f7  \u540d\u79f0    1    \u56fa\u5b9a\u5916\u58f3    2    \u5bc6\u5c01    3    \u6d3b\u52a8\u8f74    4    \u56fa\u5b9a\u8f74    5    \u7ebf\u5708\u5916\u58f3    6    \u7ebf\u5708    7    \u5bfc\u7ba1", 
            "title": "\u89c4\u683c\u53c2\u6570"
        }, 
        {
            "location": "/DC_framework_miniature_solenoid_VL-0063/#_4", 
            "text": "\u73af\u5883\u6e29\u5ea6 23\u00b12\u2103    \u76f8\u5bf9\u6e7f\u5ea6 50\u00b110%    \u6c14\u538b 1013MPa    500VDC \u7edd\u7f18\u6d4b\u8bd5\u65f6\uff0c\u7edd\u7f18\u7535\u963b\u8fbe\u5230 100M\u03a9\u3002    \u7edd\u7f18\u5f3a\u5ea6\u4e3a 600VAC / 1 \u5206\u949f\u76f4\u6d41\u6807\u51c6\u4ea7\u54c1\u8868\u3002", 
            "title": "\u6d4b\u8bd5\u6e29\u5ea6"
        }, 
        {
            "location": "/Bus_Pirate_v3_assembled/", 
            "text": "BusPirate v3 \u662f\u4e00\u4e2a\u901a\u7528\u7684\u603b\u7ebf\u63a5\u53e3\uff0c\u4e0e PC \u4e32\u884c\u7ec8\u7aef\u7684\u7535\u5b50\u8bbe\u5907\u8fdb\u884c\u901a\u4fe1\uff0c\u6d88\u9664\u4e86\u4f7f\u7528\u65b0\u7684\u6216\u672a\u77e5\u82af\u7247\u7684\u60c5\u51b5\u4e0b\u5927\u91cf\u65e9\u671f\u539f\u578b\u8bbe\u8ba1\u7684\u5de5\u4f5c\u3002\n\n\nProtocols:\n 1-Wire\uff0cI2C\uff0cSPI\uff0cJTAG\uff0c\u5f02\u6b65\u4e32\u884c (UART)\uff0cMIDI\uff0cPC \u952e\u76d8\uff0cHD44780 LCD \u4ee5\u53ca\u7528\u4e8e\u81ea\u5b9a\u4e49\u534f\u8bae\u7684\u901a\u7528 2 \u7ebf\u548c 3 \u7ebf\u5e93\u3002\n\n\n\n\n\u4ea7\u54c1\u7279\u6027\n\n\n\n\n\n\n\n\nUSB \u63a5\u53e3\uff0cUSB \u4f9b\u7535\n\n\n\n\n\n\n\u5f15\u811a\u8010\u53d7\u7535\u538b 5.5 V\n\n\n\n\n\n\n\u6d4b\u91cf\u8303\u56f4 0-6V \u7684\u6d4b\u91cf\u63a2\u5934\n\n\n\n\n\n\n1Hz-40MHz \u7684\u9891\u7387\u6d4b\u91cf\u8303\u56f4\n\n\n\n\n\n\n1kHz \u2013 4MHz \u7684\u8109\u5bbd\u8c03\u5236\u5668\uff0c\u9891\u7387\u53d1\u751f\u5668\n\n\n\n\n\n\n\u677f\u4e0a\u591a\u91cd\u7535\u538b\u7684\u4e0a\u62c9\u7535\u963b\n\n\n\n\n\n\n\u677f\u8f7d 3.3V \u548c 5V \u7535\u6e90\u53ca\u8f6f\u4ef6\u590d\u4f4d\n\n\n\n\n\n\n\u5e38\u7528\u5b8f\u547d\u4ee4\n\n\n\n\n\n\nSPI\uff0cI2C\n\n\n\n\n\n\n\u7b80\u6613\u7684 USB \u56fa\u4ef6\u66f4\u65b0\u5f15\u5bfc\u7a0b\u5e8f\n\n\n\n\n\n\nUSB-\n\u4e32\u53e3\u7f51\u6865\u6a21\u5f0f\n\n\n\n\n\n\n10Hz-1MHz \u7684\u4f4e\u901f\u903b\u8f91\u5206\u6790\u4eea\n\n\n\n\n\n\nAVRDUDE \u81ea\u5b9a\u4e49\u652f\u6301\n\n\n\n\n\n\nAVR STK500 v2 \u7f16\u7a0b\u5668\n\n\n\n\n\n\n\u652f\u6301 Perl\u3001Python \u811a\u672c\n\n\n\n\n\n\n\u7ffb\u8bd1 (\u5f53\u524d\u897f\u73ed\u7259\u8bed\u548c\u610f\u5927\u5229\u8bed)\n\n\n\n\n\n\n\u6ce8\u610f\n\n\n\n\n\u5f00\u6e90\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u662f\u5206\u5f00\u7684\u662f\u56e0\u4e3a\u5e0c\u671b\u5b83\u4f1a\u6709\u7528\uff0c\u4f46\u4e0d\u4fdd\u8bc1;\u5982\u679c\u60a8\u4e0d\u80fd\u63a5\u53d7\u8fd9\u4e2a\u98ce\u9669\uff0c\u8bf7\u4e0d\u8981\u8d2d\u4e70\u3002\n\n\n\u8d44\u6e90\u4e0b\u8f7d\n\n\n\n\n\n\n[\u7528\u6237\u6307\u5357]\n \nBus Pirate manual\n\n\n\n\n\n\n[\u786c\u4ef6\u603b\u89c8]\n \nChip demonstrations\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nLatest firmware\n\n\n\n\n\n\n[\u5176\u4ed6\u8d44\u6e90]\n \nBus Pirate forum", 
            "title": "Bus Pirate v3 assembled"
        }, 
        {
            "location": "/Bus_Pirate_v3_assembled/#_1", 
            "text": "USB \u63a5\u53e3\uff0cUSB \u4f9b\u7535    \u5f15\u811a\u8010\u53d7\u7535\u538b 5.5 V    \u6d4b\u91cf\u8303\u56f4 0-6V \u7684\u6d4b\u91cf\u63a2\u5934    1Hz-40MHz \u7684\u9891\u7387\u6d4b\u91cf\u8303\u56f4    1kHz \u2013 4MHz \u7684\u8109\u5bbd\u8c03\u5236\u5668\uff0c\u9891\u7387\u53d1\u751f\u5668    \u677f\u4e0a\u591a\u91cd\u7535\u538b\u7684\u4e0a\u62c9\u7535\u963b    \u677f\u8f7d 3.3V \u548c 5V \u7535\u6e90\u53ca\u8f6f\u4ef6\u590d\u4f4d    \u5e38\u7528\u5b8f\u547d\u4ee4    SPI\uff0cI2C    \u7b80\u6613\u7684 USB \u56fa\u4ef6\u66f4\u65b0\u5f15\u5bfc\u7a0b\u5e8f    USB- \u4e32\u53e3\u7f51\u6865\u6a21\u5f0f    10Hz-1MHz \u7684\u4f4e\u901f\u903b\u8f91\u5206\u6790\u4eea    AVRDUDE \u81ea\u5b9a\u4e49\u652f\u6301    AVR STK500 v2 \u7f16\u7a0b\u5668    \u652f\u6301 Perl\u3001Python \u811a\u672c    \u7ffb\u8bd1 (\u5f53\u524d\u897f\u73ed\u7259\u8bed\u548c\u610f\u5927\u5229\u8bed)", 
            "title": "\u4ea7\u54c1\u7279\u6027"
        }, 
        {
            "location": "/Bus_Pirate_v3_assembled/#_2", 
            "text": "\u5f00\u6e90\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u662f\u5206\u5f00\u7684\u662f\u56e0\u4e3a\u5e0c\u671b\u5b83\u4f1a\u6709\u7528\uff0c\u4f46\u4e0d\u4fdd\u8bc1;\u5982\u679c\u60a8\u4e0d\u80fd\u63a5\u53d7\u8fd9\u4e2a\u98ce\u9669\uff0c\u8bf7\u4e0d\u8981\u8d2d\u4e70\u3002", 
            "title": "\u6ce8\u610f"
        }, 
        {
            "location": "/Bus_Pirate_v3_assembled/#_3", 
            "text": "[\u7528\u6237\u6307\u5357]   Bus Pirate manual    [\u786c\u4ef6\u603b\u89c8]   Chip demonstrations    [\u5176\u4ed6\u8d44\u6e90]   Latest firmware    [\u5176\u4ed6\u8d44\u6e90]   Bus Pirate forum", 
            "title": "\u8d44\u6e90\u4e0b\u8f7d"
        }, 
        {
            "location": "/Tutorial/", 
            "text": "\u672c\u8282\u5305\u62ec\u7531\u5404\u79cd\u65b9\u6cd5\u7684\u4ecb\u7ecd\u3002\n\n\n\u4ea7\u54c1\u6e05\u5355\n\n\n\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u5404\u79cd\u65b9\u6cd5\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\nGetting_Started_with_Seeeduino\n\n\nGrove_Inventor_Kit_for_microbit\n\n\nHow_to_edit_Wiki\n\n\nHow_to_install_Arduino_Library\n\n\nUpload_Code", 
            "title": "Tutorial"
        }, 
        {
            "location": "/Tutorial/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684\u5404\u79cd\u65b9\u6cd5\u7684\u5217\u8868\u3002 \u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   Getting_Started_with_Seeeduino  Grove_Inventor_Kit_for_microbit  How_to_edit_Wiki  How_to_install_Arduino_Library  Upload_Code", 
            "title": "\u4ea7\u54c1\u6e05\u5355"
        }, 
        {
            "location": "/How_to_install_Arduino_Library/", 
            "text": "Note\n\n\n\n\n\u6b64\u6559\u7a0b\u662f\u57fa\u4e8e Arduino 1.6.9.\n\n\n\n\n\n\n\u8fd9\u91cc\u6211\u4eec\u5c06\u5411\u60a8\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5Arduino\u5e93\u3002\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u51e0\u4e4e\u6240\u6709\u7684\u5e93\u90fd\u5b58\u50a8\u5728Github\u4e0a\u3002\u5f53\u4ea7\u54c1\u9700\u8981\u65f6\uff0c\u6211\u4eec\u5c06\u63d0\u4f9bArduino\u5e93\u3002\u5bf9\u4e8e\u4e00\u4e9b\u7b80\u5355\u7684\u4ea7\u54c1\uff0c\u5b83\u4e0d\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u5e93\uff0c\u5982Grove - Button\u3002    \n\n\n\u9996\u5148\uff0c\u4ea7\u54c1\u9875\u9762\u4e0a\u6709\u4e00\u4e2a\u4e0b\u8f7d\u5e93\u6309\u94ae\u3002\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n\u70b9\u51fb\u6309\u94ae\u5f00\u59cb\u4e0b\u8f7d\u3002\u6570\u79d2\u540e\u79d2\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u6570\u636e\u5305\u3002\n\n\n\u5982\u679c\u60a8\u70b9\u51fb\u6309\u94ae\u540e\u83b7\u5f97Github\u9875\u9762\uff0c\u5219\u53ef\u4ee5\u5355\u51fb \nClond or download \n Download ZIP\n \u6309\u952e\u6765\u83b7\u53d6\u5e93\u6587\u4ef6\u3002\n\n\n\n\n\u7136\u540e\u6253\u5f00\u60a8\u7684Arduino IDE\uff0c\u5355\u51fb**Sketch (\u9879\u76ee)\n Include Library (\u52a0\u8f7d\u5e93)\n Add .ZIP Library\uff08\u6dfb\u52a0\u4e00\u4e2azip\u5e93\uff09**\n\n\n\n\n\u7136\u540e\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u5e93\u662f\u5426\u6b63\u786e\u5b89\u88c5\u3002\n\n\n\u70b9\u51fb \nFile\uff08\u6587\u4ef6\uff09 \n Example \uff08\u793a\u4f8b\uff09 \n OLED_Display_96x96-master \n OLED_Hello_World\n \u6253\u5f00\u4e00\u4e2a\u4f8b\u5b50\uff0c\u70b9\u51fb\u9a8c\u8bc1\u6309\u94ae\uff0c\u5982\u679c\u6ca1\u6709\u9519\u8bef\uff0c\u795d\u8d3a\uff0c\u5e93\u5b8c\u7f8e\u5b89\u88c5\u3002", 
            "title": "\u5982\u4f55\u5b89\u88c5Arduino\u5e93"
        }, 
        {
            "location": "/Upload_Code/", 
            "text": "The specific steps for uploading the code:\n\n\n1.\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u9009\u62e9\u60a8\u6b63\u5728\u4f7f\u7528\u7684Arduino\u677f\u5b50\uff1aTools\uff08\u5de5\u5177\uff09 --\n Board\uff08\u5f00\u53d1\u677f\uff09 --\n  \uff08\u4f8b\u5982\uff09Arduino UNO\n\n\n\n\n\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u63d0\u793a\uff0c\u53ef\u80fd\u662f\u60a8\u9009\u62e9\u4e86\u9519\u8bef\u7684\u5f00\u53d1\u677f\uff0c\u8bf7\u91cd\u65b0\u9009\u62e9\u60a8\u6b63\u5728\u4f7f\u7528\u7684Arduino\u677f\u3002\n\n\n\n\n\n\n\u901a\u8fc7\u4ee5\u4e0b\u8def\u5f84\u9009\u62e9\u6b63\u5728\u4f7f\u7528\u7684\u4e32\u884c\u7aef\u53e3: Tools\uff08\u5de5\u5177\uff09 --\n Serial Port\uff08\u7aef\u53e3\uff09 --\n \uff08\u4f8b\u5982\uff09 COM3.\n\n\n\u5982\u4e0b\u56fe\u6240\u793a\u4e0a\u4f20\u793a\u4f8b\u4ee3\u7801:\n\n\n\n\n\n\n\u5f53\u51fa\u73b0\"Done uploading\"\u65f6\uff0c\u606d\u559c\u60a8\u4e0a\u4f20\u6210\u529f\u3002", 
            "title": "\u5982\u4f55\u4e0a\u4f20\u4ee3\u7801"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/", 
            "text": "0. Hello world\n\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u8001\u5e08\u4f1a\u6559\u4f1a\u6211\u4eec\u5728\u5f00\u59cb\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u65f6\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684Hello World\u793a\u4f8b\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u4ecb\u7ecd\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8fc7\u7a0b\u3002\u867d\u7136\u4f60\u4e0d\u719f\u6089Arduino\uff0c\u4e0d\u7528\u62c5\u5fc3\u3002\u4f60\u53ef\u4ee5\u5b66\u4e60\u5173\u4e8eArduino\u7684\u95ee\u9898\uff1a\u70b9\u4eaeLED\u3002\u73b0\u5728\u4ee5Seeeduino\u4e3a\u4f8b\uff0c\u4e86\u89e3\u5982\u4f55\u70b9\u4eae\u7531\u6570\u5b5713\u9488\u63a7\u5236\u7684LED\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u4e0b\u8f7dArduino Environment\u5e76\u6210\u529f\u5b89\u88c5Seeeduino\u9a71\u52a8\u7a0b\u5e8f\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u70b9\u51fb \n\u8fd9\u91cc\n\u4e86\u89e3\u5177\u4f53\u6b65\u9aa4\u3002\n\n\n1. \u5c06Seeeduino\u548c\u7535\u8111\u76f8\u8fde\n\n\n\u4f7f\u7528USB\u7535\u7f06\u5c06Seeeduino\u677f\u8fde\u63a5\u5230\u7535\u8111\u3002\u7eff\u8272\u7535\u6e90LED\uff08\u6807\u6709PWR\uff09\u5e94\u70b9\u4eae\u3002\uff08\u5f53Seeeduino\u72ec\u7acb\u5de5\u4f5c\u65f6\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9USB\u6216\u7535\u6e90\u9002\u914d\u5668\u4e3aSeeeduino\u4f9b\u7535\u3002\uff09\n\n\n2. \u6253\u5f00\u4f8b\u7a0b Blink\n\n\n\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u627e\u5230\u5e76\u6253\u5f00\u4f8b\u7a0b\uff1a \nFile\uff08\u6587\u4ef6\uff09\nExamples\uff08\u793a\u4f8b\uff09\n01.Basics\nBlink\n.\n\n\n\n\n3. \u9009\u62e9\u60a8\u7684\u5f00\u53d1\u677f\n\n\n\u60a8\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u8fdb\u884c\u9009\u62e9 Tools\uff08\u5de5\u5177\uff09 \n Board menu\uff08\u5f00\u53d1\u677f\uff09\uff0c\u9009\u62e9\u60a8\u5f53\u524d\u7684\u5f00\u53d1\u677f. \u5728\u8fd9\u91cc\u6211\u4eec\u9009\u62e9ATmega328.\n\n\n\n\n4. \u9009\u62e9\u60a8\u7684\u4e32\u53e3\n\n\n\u9009\u62e9\u60a8\u7684\u5f00\u53d1\u677f\u5f53\u524d\u5360\u7528\u7684\u4e32\u53e3\uff0c\u5728 Tools\uff08\u5de5\u5177\uff09 | Serial Port\uff08\u7aef\u53e3\uff09 \u4e2d\u8fdb\u884c\u9009\u62e9\u3002\n\n\n\n\n5. \u4e0a\u4f20\u7a0b\u5e8f\n\n\n\u73b0\u5728\uff0c\u53ea\u9700\u70b9\u51fb\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u201c\u4e0a\u4f20\u201d\u6309\u94ae\u5373\u53ef\u3002\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u7684RX\u548cTX LED\u95ea\u70c1\u3002\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u5219\u4f1a\u5728\u72b6\u6001\u680f\u4e2d\u663e\u793a\u201c\u5b8c\u6210\u4e0a\u4f20\u201d\u6d88\u606f\u3002\n\n\n\n\n6. \u7ed3\u679c\n\n\n\u4e0a\u4f20\u5b8c\u6210\u540e\u7684\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u768413\uff08L\uff09\u9488\u811a\u5f00\u59cb\u95ea\u70c1\uff08\u6a59\u8272\uff09\u3002\u5982\u679c\u662f\uff0c\u606d\u559c\uff01\u4f60\u7684Arduino\u7a0b\u5e8f\u5df2\u7ecf\u5f00\u59cb\u8fd0\u884c\u4e86\u3002", 
            "title": "Seeeduino\u5165\u95e8\u6307\u5bfc"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#0-hello-world", 
            "text": "\u4e00\u822c\u6765\u8bf4\uff0c\u8001\u5e08\u4f1a\u6559\u4f1a\u6211\u4eec\u5728\u5f00\u59cb\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u65f6\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684Hello World\u793a\u4f8b\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u4ecb\u7ecd\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8fc7\u7a0b\u3002\u867d\u7136\u4f60\u4e0d\u719f\u6089Arduino\uff0c\u4e0d\u7528\u62c5\u5fc3\u3002\u4f60\u53ef\u4ee5\u5b66\u4e60\u5173\u4e8eArduino\u7684\u95ee\u9898\uff1a\u70b9\u4eaeLED\u3002\u73b0\u5728\u4ee5Seeeduino\u4e3a\u4f8b\uff0c\u4e86\u89e3\u5982\u4f55\u70b9\u4eae\u7531\u6570\u5b5713\u9488\u63a7\u5236\u7684LED\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u4e0b\u8f7dArduino Environment\u5e76\u6210\u529f\u5b89\u88c5Seeeduino\u9a71\u52a8\u7a0b\u5e8f\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u70b9\u51fb  \u8fd9\u91cc \u4e86\u89e3\u5177\u4f53\u6b65\u9aa4\u3002", 
            "title": "0. Hello world"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#1-seeeduino", 
            "text": "\u4f7f\u7528USB\u7535\u7f06\u5c06Seeeduino\u677f\u8fde\u63a5\u5230\u7535\u8111\u3002\u7eff\u8272\u7535\u6e90LED\uff08\u6807\u6709PWR\uff09\u5e94\u70b9\u4eae\u3002\uff08\u5f53Seeeduino\u72ec\u7acb\u5de5\u4f5c\u65f6\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9USB\u6216\u7535\u6e90\u9002\u914d\u5668\u4e3aSeeeduino\u4f9b\u7535\u3002\uff09", 
            "title": "1. \u5c06Seeeduino\u548c\u7535\u8111\u76f8\u8fde"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#2-blink", 
            "text": "\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u627e\u5230\u5e76\u6253\u5f00\u4f8b\u7a0b\uff1a  File\uff08\u6587\u4ef6\uff09 Examples\uff08\u793a\u4f8b\uff09 01.Basics Blink .", 
            "title": "2. \u6253\u5f00\u4f8b\u7a0b Blink"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#3", 
            "text": "\u60a8\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u8def\u5f84\u8fdb\u884c\u9009\u62e9 Tools\uff08\u5de5\u5177\uff09   Board menu\uff08\u5f00\u53d1\u677f\uff09\uff0c\u9009\u62e9\u60a8\u5f53\u524d\u7684\u5f00\u53d1\u677f. \u5728\u8fd9\u91cc\u6211\u4eec\u9009\u62e9ATmega328.", 
            "title": "3. \u9009\u62e9\u60a8\u7684\u5f00\u53d1\u677f"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#4", 
            "text": "\u9009\u62e9\u60a8\u7684\u5f00\u53d1\u677f\u5f53\u524d\u5360\u7528\u7684\u4e32\u53e3\uff0c\u5728 Tools\uff08\u5de5\u5177\uff09 | Serial Port\uff08\u7aef\u53e3\uff09 \u4e2d\u8fdb\u884c\u9009\u62e9\u3002", 
            "title": "4. \u9009\u62e9\u60a8\u7684\u4e32\u53e3"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#5", 
            "text": "\u73b0\u5728\uff0c\u53ea\u9700\u70b9\u51fb\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u201c\u4e0a\u4f20\u201d\u6309\u94ae\u5373\u53ef\u3002\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u7684RX\u548cTX LED\u95ea\u70c1\u3002\u5982\u679c\u4e0a\u4f20\u6210\u529f\uff0c\u5219\u4f1a\u5728\u72b6\u6001\u680f\u4e2d\u663e\u793a\u201c\u5b8c\u6210\u4e0a\u4f20\u201d\u6d88\u606f\u3002", 
            "title": "5. \u4e0a\u4f20\u7a0b\u5e8f"
        }, 
        {
            "location": "/Getting_Started_with_Seeeduino/#6", 
            "text": "\u4e0a\u4f20\u5b8c\u6210\u540e\u7684\u51e0\u79d2\u949f\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u677f\u4e0a\u768413\uff08L\uff09\u9488\u811a\u5f00\u59cb\u95ea\u70c1\uff08\u6a59\u8272\uff09\u3002\u5982\u679c\u662f\uff0c\u606d\u559c\uff01\u4f60\u7684Arduino\u7a0b\u5e8f\u5df2\u7ecf\u5f00\u59cb\u8fd0\u884c\u4e86\u3002", 
            "title": "6. \u7ed3\u679c"
        }, 
        {
            "location": "/How_to_edit_Wiki/", 
            "text": "Seeed\u4e2d\u6587\u6587\u6863\u7ef4\u62a4\u8bf4\u660e\n\n\n\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230\u90e8\u5206Seeed\u4ea7\u54c1\u7684\n\u4e2d\u6587\u6587\u6863\n\uff0c\u7531\u4e8e\u8fd9\u4e2a\u7ad9\u70b9\u521a\u5efa\u7acb\uff0c\u6240\u4ee5\u53ea\u6709\u90e8\u5206\u5df2\u7ecf\u7ffb\u8bd1\u7684\u6587\u6863\u3002\n\n\n\u6ca1\u6709\u4e2d\u6587\u6587\u6863\u7684\u4ea7\u54c1\uff0c\u4ecd\u7136\u9700\u8981\u5230\n\u82f1\u6587\u7ad9\u70b9\n.\n\n\n\u8fd9\u4e2a\u7ad9\u70b9\u57fa\u4e8e\u4f18\u79c0\u7684\u5e76\u4e14\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edf\nMkDocs\n\u4ee5\u53ca\u4e3b\u9898\nMaterial\n.\n\n\n\u57fa\u672c\u64cd\u4f5c\n\n\n0. \u6267\u884c\u521d\u59cb\u5316\u64cd\u4f5c\n\n\n\n\n\u6309\u7167\nmkdocs.org\n\u5b89\u88c5python, pip, mkdocs\n\n\n\u6267\u884c pip install mkdocs-material\n\n\ngit clone \nhttps://github.com/SeeedDocument/wiki_chinese.git\n \u5230\u672c\u5730\u76ee\u5f55 \uff08mkdocs\u6e90\u6587\u4ef6\uff09\n\n\ngit clone \nhttps://github.com/SeeedDocument/SeeedDocument.github.io.git\n \u5230\u672c\u5730\u76ee\u5f55 \uff08\u7f16\u8bd1\u7684html\u6587\u4ef6\uff09\n\n\n\n\n1. \u65b0\u589e\u65b0\u4ea7\u54c1\u7684md\u6587\u4ef6\uff0c \u6587\u4ef6\u7684\u524d\u9762\u90e8\u5206\u5fc5\u987b\u53c2\u7167\u4e0b\u9762\u683c\u5f0f\n\n\ntitle: CAN-BUS Shield V1.2\ncategory: Shield\nbzurl: https://www.seeedstudio.com/CAN-BUS-Shield-V1.2-p-2256.html\noldwikiname: CAN-BUS_Shield_V1.2\nprodimagename: Can_bus_shield_all.jpg\nwikiurl: http://seeed.wiki/CAN-BUS_Shield_V1.2\nsku: 113030021\n\n\n\n\n2. \u7f16\u5199wiki_chinese\u76ee\u5f55\u4e0b\u7684mkdocs.yml\u6587\u4ef6\n\n\npages:\n  - Seeed\u6587\u6863\u4e2d\u6587\u7ad9\u70b9\u4ecb\u7ecd: \nindex.md\n\n\n  - \u5e73\u53f0:\n    - Arduino:\n      - Arduino: Arduino.md\n      - Seeeduino_Cloud: Seeeduino_Cloud.md\n      - Seeeduino_LoRAWAN: Seeeduino_LoRAWAN.md  \n    - LinkIt:\n      - LinkIt: LinkIt.md\n      - LinkIt_Smart_7688: LinkIt_Smart_7688.md\n\n  - Grove:\n    - Grove\u7cfb\u7edf: Grove_System.md\n    - \u4f20\u611f\u5668:\n      - Sensor: Sensor.md\n      - Grove-Encoder: Grove-Encoder.md\n      - Grove-Multichannel_Gas_Sensor: Grove-Multichannel_Gas_Sensor.md\n      - Grove-Piezo_Vibration_Sensor: Grove-Piezo_Vibration_Sensor.md\n    - \u6267\u884c\u5668:\n      - Actuator: Actuator.md\n      - Grove-MP3_v2.0: Grove-MP3_v2.0.md\n\n\n\n\n3. \u5728wiki_chinese\u4e0b\uff0c\u8fd0\u884c python Category_Generator.py \u6765\u751f\u6210\u5404\u4e2acategory\u7684md\u6587\u4ef6\n\n\n\n\n\u4ecewiki_chinese\\docs\\template\u76ee\u5f55\u4e0b\u590d\u5236category\u7684md\u6587\u4ef6\n\n\n\n\ntitle: Grove - Actuator\nnointro:\n\nGrove - \u6267\u884c\u5668\u5305\u62ec\u7535\u673a\u9a71\u52a8\u5668\uff0cLED\u663e\u793a\u5c4f\uff0c\u7ee7\u7535\u5668\uff0c\u626c\u58f0\u5668\uff0c\u8702\u9e23\u5668\u7b49\u6a21\u5757\u3002\n\n## \u4ea7\u54c1\u6e05\u5355\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u6267\u884c\u5668\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\n\n\n\n\n\u5728docs\u4e0b\u751f\u6210\u76f8\u5173category\u7684\u7d22\u5f15\n\n\n\n\ntitle: Grove - Actuator\nnointro:\n\nGrove - \u6267\u884c\u5668\u5305\u62ec\u7535\u673a\u9a71\u52a8\u5668\uff0cLED\u663e\u793a\u5c4f\uff0c\u7ee7\u7535\u5668\uff0c\u626c\u58f0\u5668\uff0c\u8702\u9e23\u5668\u7b49\u6a21\u5757\u3002\n\n## \u4ea7\u54c1\u6e05\u5355\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u6267\u884c\u5668\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n* [Grove-MP3_v2.0](http://seeed.wiki/Grove-MP3_v2.0)\n\n\n\n\n4. \u6267\u884c\u6267\u884c \nmkdocs serve\n \u8fdb\u884c\u9884\u89c8\n\n\n5. \u6267\u884c \nmkdocs build --clean\n\uff0c\u7f16\u8bd1\u7684\u9759\u6001\u6587\u4ef6\u4f1a\u51fa\u73b0\u5728 \nsite\n \u6587\u4ef6\u5939\n\n\n6. \u5728wiki_chinese\u4e0b\uff0c\u8fd0\u884c python SKU_generator_wiki_CN.py \u5728site\u4e0b\u751f\u6210sku html\u6587\u4ef6\n\n\n7. \u4e0a\u4f20mkdocs\u6587\u6863\u548chtml\u7f51\u9875\u6587\u4ef6\u5230github\n\n\ngit add. \ngit commit -m \nupdate\n\ngit push origin master \n\n\n\n\n\n\nNote\n\n\nCNAME\u6587\u4ef6\u4e0d\u8981\u5220\u6389\n\n\n\n\n\u6587\u6863\u683c\u5f0f\n\n\n\n\n1. \u7b80\u4ecb\n\n\n2. \u89c4\u683c\u53c2\u6570\n\n\n3. \u521b\u610f\u5e94\u7528\n\n\n4. \u786c\u4ef6\u6982\u8ff0\n\n\n5. \u5165\u95e8\u6307\u5bfc\n\n\n6. \u8d44\u6e90\n\n\n\n\n\u8d21\u732e\n\n\n\u8fd9\u4e2a\u6587\u6863\u7cfb\u7edf\u6709Seeed\u7ef4\u62a4\uff0c\u5e76\u4e14\u6b22\u8fce\u4f60\u5bf9\u6587\u6863\u7684\u5185\u5bb9\u5206\u6790\u4f60\u7684\u8d21\u732e\uff0c\u8d21\u732e\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\n\n\n\n\n\u9519\u522b\u5b57\u6216\u8005\u4e0d\u6070\u5f53\u7684\u8bcd\u6c47\u8868\u8fbe\n\n\n\u589e\u52a0\u5185\u5bb9\u4ee5\u4f7f\u6559\u7a0b\u66f4\u52a0\u7684\u6e05\u6670\n\n\n\u4e0a\u4f20\u66f4\u597d\u7684\u56fe\u7247\n\n\n\u5176\u4ed6\u5fc5\u8981\u7684\u4fee\u6539\u6216\u4f18\u5316\n\n\n\n\nMkDocs\n\n\n\u8fd9\u4e2a\u9879\u76ee\u57fa\u4e8e\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edfMKDocs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nView the \nMkDocs documentation\n.\n\n\nProject \nrelease notes\n.\n\n\nVisit the \nMkDocs wiki\n for community\n  resources, including third party themes and a list of MkDocs users.\n\n\nIRC channel: \n#mkdocs\n on freenode.\n\n\nDiscussions and support: \nhttps://groups.google.com/forum/#!forum/mkdocs\n\n\n\n\n\u534f\u8bae\n\n\nCopyright \n 2018-2017 Seeed Inc. (\nhttps://www.seeedstudio.com\n)\n\n\n\u6587\u6863\u53ca\u56fe\u7247\n\n\n\n\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece \nCreative Commons Attribution-ShareAlike 4.0 International License\n. \n \n\n\u7684\u534f\u8bae\n\n\n\u8054\u7cfb\u6211\u4eec\n\n\n\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "\u5982\u4f55\u7f16\u8f91Wiki"
        }, 
        {
            "location": "/How_to_edit_Wiki/#seeed", 
            "text": "\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230\u90e8\u5206Seeed\u4ea7\u54c1\u7684 \u4e2d\u6587\u6587\u6863 \uff0c\u7531\u4e8e\u8fd9\u4e2a\u7ad9\u70b9\u521a\u5efa\u7acb\uff0c\u6240\u4ee5\u53ea\u6709\u90e8\u5206\u5df2\u7ecf\u7ffb\u8bd1\u7684\u6587\u6863\u3002  \u6ca1\u6709\u4e2d\u6587\u6587\u6863\u7684\u4ea7\u54c1\uff0c\u4ecd\u7136\u9700\u8981\u5230 \u82f1\u6587\u7ad9\u70b9 .  \u8fd9\u4e2a\u7ad9\u70b9\u57fa\u4e8e\u4f18\u79c0\u7684\u5e76\u4e14\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edf MkDocs \u4ee5\u53ca\u4e3b\u9898 Material .", 
            "title": "Seeed\u4e2d\u6587\u6587\u6863\u7ef4\u62a4\u8bf4\u660e"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_1", 
            "text": "", 
            "title": "\u57fa\u672c\u64cd\u4f5c"
        }, 
        {
            "location": "/How_to_edit_Wiki/#0", 
            "text": "\u6309\u7167 mkdocs.org \u5b89\u88c5python, pip, mkdocs  \u6267\u884c pip install mkdocs-material  git clone  https://github.com/SeeedDocument/wiki_chinese.git  \u5230\u672c\u5730\u76ee\u5f55 \uff08mkdocs\u6e90\u6587\u4ef6\uff09  git clone  https://github.com/SeeedDocument/SeeedDocument.github.io.git  \u5230\u672c\u5730\u76ee\u5f55 \uff08\u7f16\u8bd1\u7684html\u6587\u4ef6\uff09", 
            "title": "0. \u6267\u884c\u521d\u59cb\u5316\u64cd\u4f5c"
        }, 
        {
            "location": "/How_to_edit_Wiki/#1-md", 
            "text": "title: CAN-BUS Shield V1.2\ncategory: Shield\nbzurl: https://www.seeedstudio.com/CAN-BUS-Shield-V1.2-p-2256.html\noldwikiname: CAN-BUS_Shield_V1.2\nprodimagename: Can_bus_shield_all.jpg\nwikiurl: http://seeed.wiki/CAN-BUS_Shield_V1.2\nsku: 113030021", 
            "title": "1. \u65b0\u589e\u65b0\u4ea7\u54c1\u7684md\u6587\u4ef6\uff0c \u6587\u4ef6\u7684\u524d\u9762\u90e8\u5206\u5fc5\u987b\u53c2\u7167\u4e0b\u9762\u683c\u5f0f"
        }, 
        {
            "location": "/How_to_edit_Wiki/#2-wiki_chinesemkdocsyml", 
            "text": "pages:\n  - Seeed\u6587\u6863\u4e2d\u6587\u7ad9\u70b9\u4ecb\u7ecd:  index.md \n\n  - \u5e73\u53f0:\n    - Arduino:\n      - Arduino: Arduino.md\n      - Seeeduino_Cloud: Seeeduino_Cloud.md\n      - Seeeduino_LoRAWAN: Seeeduino_LoRAWAN.md  \n    - LinkIt:\n      - LinkIt: LinkIt.md\n      - LinkIt_Smart_7688: LinkIt_Smart_7688.md\n\n  - Grove:\n    - Grove\u7cfb\u7edf: Grove_System.md\n    - \u4f20\u611f\u5668:\n      - Sensor: Sensor.md\n      - Grove-Encoder: Grove-Encoder.md\n      - Grove-Multichannel_Gas_Sensor: Grove-Multichannel_Gas_Sensor.md\n      - Grove-Piezo_Vibration_Sensor: Grove-Piezo_Vibration_Sensor.md\n    - \u6267\u884c\u5668:\n      - Actuator: Actuator.md\n      - Grove-MP3_v2.0: Grove-MP3_v2.0.md", 
            "title": "2. \u7f16\u5199wiki_chinese\u76ee\u5f55\u4e0b\u7684mkdocs.yml\u6587\u4ef6"
        }, 
        {
            "location": "/How_to_edit_Wiki/#3-wiki_chinese-python-category_generatorpy-categorymd", 
            "text": "\u4ecewiki_chinese\\docs\\template\u76ee\u5f55\u4e0b\u590d\u5236category\u7684md\u6587\u4ef6   title: Grove - Actuator\nnointro:\n\nGrove - \u6267\u884c\u5668\u5305\u62ec\u7535\u673a\u9a71\u52a8\u5668\uff0cLED\u663e\u793a\u5c4f\uff0c\u7ee7\u7535\u5668\uff0c\u626c\u58f0\u5668\uff0c\u8702\u9e23\u5668\u7b49\u6a21\u5757\u3002\n\n## \u4ea7\u54c1\u6e05\u5355\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u6267\u884c\u5668\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002   \u5728docs\u4e0b\u751f\u6210\u76f8\u5173category\u7684\u7d22\u5f15   title: Grove - Actuator\nnointro:\n\nGrove - \u6267\u884c\u5668\u5305\u62ec\u7535\u673a\u9a71\u52a8\u5668\uff0cLED\u663e\u793a\u5c4f\uff0c\u7ee7\u7535\u5668\uff0c\u626c\u58f0\u5668\uff0c\u8702\u9e23\u5668\u7b49\u6a21\u5757\u3002\n\n## \u4ea7\u54c1\u6e05\u5355\n\n\u4ee5\u4e0b\u662f\u60a8\u53ef\u4ee5\u5728Seeed WiKi\u4e2d\u627e\u5230\u7684Grove - \u6267\u884c\u5668\u5217\u8868\u3002 \u8be5\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u65b0\u3002\n\n* [Grove-MP3_v2.0](http://seeed.wiki/Grove-MP3_v2.0)", 
            "title": "3. \u5728wiki_chinese\u4e0b\uff0c\u8fd0\u884c python Category_Generator.py \u6765\u751f\u6210\u5404\u4e2acategory\u7684md\u6587\u4ef6"
        }, 
        {
            "location": "/How_to_edit_Wiki/#4-mkdocs-serve", 
            "text": "", 
            "title": "4. \u6267\u884c\u6267\u884c mkdocs serve \u8fdb\u884c\u9884\u89c8"
        }, 
        {
            "location": "/How_to_edit_Wiki/#5-mkdocs-build-clean-site", 
            "text": "", 
            "title": "5. \u6267\u884c mkdocs build --clean\uff0c\u7f16\u8bd1\u7684\u9759\u6001\u6587\u4ef6\u4f1a\u51fa\u73b0\u5728 site \u6587\u4ef6\u5939"
        }, 
        {
            "location": "/How_to_edit_Wiki/#6-wiki_chinese-python-sku_generator_wiki_cnpy-sitesku-html", 
            "text": "", 
            "title": "6. \u5728wiki_chinese\u4e0b\uff0c\u8fd0\u884c python SKU_generator_wiki_CN.py \u5728site\u4e0b\u751f\u6210sku html\u6587\u4ef6"
        }, 
        {
            "location": "/How_to_edit_Wiki/#7-mkdocshtmlgithub", 
            "text": "git add. \ngit commit -m  update \ngit push origin master    Note  CNAME\u6587\u4ef6\u4e0d\u8981\u5220\u6389", 
            "title": "7. \u4e0a\u4f20mkdocs\u6587\u6863\u548chtml\u7f51\u9875\u6587\u4ef6\u5230github"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_2", 
            "text": "1. \u7b80\u4ecb  2. \u89c4\u683c\u53c2\u6570  3. \u521b\u610f\u5e94\u7528  4. \u786c\u4ef6\u6982\u8ff0  5. \u5165\u95e8\u6307\u5bfc  6. \u8d44\u6e90", 
            "title": "\u6587\u6863\u683c\u5f0f"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_3", 
            "text": "\u8fd9\u4e2a\u6587\u6863\u7cfb\u7edf\u6709Seeed\u7ef4\u62a4\uff0c\u5e76\u4e14\u6b22\u8fce\u4f60\u5bf9\u6587\u6863\u7684\u5185\u5bb9\u5206\u6790\u4f60\u7684\u8d21\u732e\uff0c\u8d21\u732e\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a   \u9519\u522b\u5b57\u6216\u8005\u4e0d\u6070\u5f53\u7684\u8bcd\u6c47\u8868\u8fbe  \u589e\u52a0\u5185\u5bb9\u4ee5\u4f7f\u6559\u7a0b\u66f4\u52a0\u7684\u6e05\u6670  \u4e0a\u4f20\u66f4\u597d\u7684\u56fe\u7247  \u5176\u4ed6\u5fc5\u8981\u7684\u4fee\u6539\u6216\u4f18\u5316", 
            "title": "\u8d21\u732e"
        }, 
        {
            "location": "/How_to_edit_Wiki/#mkdocs", 
            "text": "\u8fd9\u4e2a\u9879\u76ee\u57fa\u4e8e\u5f00\u6e90\u7684\u6587\u6863\u7cfb\u7edfMKDocs        View the  MkDocs documentation .  Project  release notes .  Visit the  MkDocs wiki  for community\n  resources, including third party themes and a list of MkDocs users.  IRC channel:  #mkdocs  on freenode.  Discussions and support:  https://groups.google.com/forum/#!forum/mkdocs", 
            "title": "MkDocs"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_4", 
            "text": "Copyright   2018-2017 Seeed Inc. ( https://www.seeedstudio.com )", 
            "title": "\u534f\u8bae"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_5", 
            "text": "\u8fd9\u91cc\u6240\u6709\u7684\u56fe\u7247\u548c\u6587\u6863\u987a\u4ece  Creative Commons Attribution-ShareAlike 4.0 International License .    \n\u7684\u534f\u8bae", 
            "title": "\u6587\u6863\u53ca\u56fe\u7247"
        }, 
        {
            "location": "/How_to_edit_Wiki/#_6", 
            "text": "\u5982\u679c\u4f60\u6709\u6587\u6863\u6216\u8005\u6280\u672f\u4e0a\u7684\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb", 
            "title": "\u8054\u7cfb\u6211\u4eec"
        }, 
        {
            "location": "/license/", 
            "text": "License\n\n\nMIT License\n\n\nCopyright \n 2008 - 2017 Seeed INC.\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.", 
            "title": "\u6587\u6863\u534f\u8bae"
        }, 
        {
            "location": "/license/#license", 
            "text": "MIT License  Copyright   2008 - 2017 Seeed INC.  Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.", 
            "title": "License"
        }
    ]
}